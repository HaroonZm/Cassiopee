================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution complète pour le problème "Life Line"

# Approche générale :
# 1. Lecture de la configuration du plateau triangulaire.
# 2. Simulation du placement d'une pierre pour le joueur C sur chaque sommet vide.
# 3. Identification des groupes de pierres (mêmes numéros, connexes).
# 4. Vérification des groupes sans sommets vides adjacents pour suppression.
# 5. Calcul du score (pierres adverses supprimées - pierres du joueur supprimées).
# 6. Choix du placement donnant le score maximal.
# 7. Répétition pour chaque cas jusqu'à la détection de la fin d'entrée (0 0).

# Détails clés :
# - Le plateau est un triangle avec N lignes, chaque ligne i contient i sommets.
# - Chaque sommet peut être adjacents à plusieurs sommets, suivant l'agencement triangulaire.
# - On modélise le plateau en listant les voisins de chaque sommet.
# - On utilise BFS/DFS pour trouver les groupes.
# - La suppression ne se fait que si aucun sommet du groupe n'est adjacent à un sommet vide.

import sys
sys.setrecursionlimit(10000)

def read_board(N):
    board = []
    for i in range(N):
        line = list(map(int, sys.stdin.readline().split()))
        # Vérification du bon format (i+1 sommets)
        if len(line) != i + 1:
            raise ValueError("Format d'entrée incorrect")
        board.append(line)
    return board

def get_neighbors(N):
    # Calcule et retourne une liste de voisins pour chaque sommet
    # Chaque sommet identifié par (i,j), 0 <= j <= i < N
    # La structure est un dictionnaire: (i,j) -> [(ni,nj), ...]
    neighbors = {}
    for i in range(N):
        for j in range(i+1):
            adj = []
            # 6 directions possibles dans la grille triangulaire (maximum)
            # 1) sommet à gauche (i, j-1) si j>0
            if j > 0:
                adj.append((i, j-1))
            # 2) sommet à droite (i, j+1) si j < i
            if j < i:
                adj.append((i, j+1))
            # 3) sommet en haut à gauche (i-1, j-1) si i>0 et j>0
            if i > 0 and j > 0:
                adj.append((i-1, j-1))
            # 4) sommet en haut à droite (i-1, j) si i>0
            if i > 0 and j <= i-1:
                adj.append((i-1, j))
            # 5) sommet en bas à gauche (i+1, j) si i < N-1
            if i < N-1 and j <= i:
                adj.append((i+1, j))
            # 6) sommet en bas à droite (i+1, j+1) si i < N-1 et j < i+1
            if i < N-1 and j+1 <= i+1:
                adj.append((i+1, j+1))
            neighbors[(i,j)] = adj
    return neighbors

def find_groups(board, neighbors):
    # Renvoie une liste de groupes
    # Chaque groupe est une liste de positions (i,j) ayant le même numéro et étant connectés
    N = len(board)
    visited = [[False]*(i+1) for i in range(N)]
    groups = []
    for i in range(N):
        for j in range(i+1):
            if board[i][j] != 0 and not visited[i][j]:
                stone_number = board[i][j]
                stack = [(i,j)]
                group_positions = []
                visited[i][j] = True
                while stack:
                    ci,cj = stack.pop()
                    group_positions.append((ci,cj))
                    for ni,nj in neighbors[(ci,cj)]:
                        if 0 <= ni < N and 0 <= nj <= ni:
                            if board[ni][nj] == stone_number and not visited[ni][nj]:
                                visited[ni][nj] = True
                                stack.append((ni,nj))
                groups.append( (stone_number, group_positions) )
    return groups

def has_empty_adjacent(group_positions, board, neighbors):
    # Détermine si un groupe possède au moins un sommet adjacent vide (0)
    for (i,j) in group_positions:
        for (ni,nj) in neighbors[(i,j)]:
            if 0 <= ni < len(board) and 0 <= nj <= ni:
                if board[ni][nj] == 0:
                    return True
    return False

def simulate_turn(board, neighbors, player):
    # Pour chaque sommet vide, simule la pose de la pierre du joueur, calcule le score, renvoie la valeur max
    N = len(board)
    max_score = -10**9  # assez petit pour minimum
    placed_any = False

    for i in range(N):
        for j in range(i+1):
            if board[i][j] == 0:
                # Copie du plateau
                new_board = [row[:] for row in board]
                new_board[i][j] = player
                placed_any = True

                # Calcule les groupes
                groups = find_groups(new_board, neighbors)

                # Cherche les groupes à supprimer (sans sommet adjacent vide)
                remove_groups = []
                for stone_num,pos_list in groups:
                    if not has_empty_adjacent(pos_list, new_board, neighbors):
                        remove_groups.append((stone_num, pos_list))

                # Calcul du score
                gain = 0
                lose = 0
                # Supprimer les pierres
                for stone_num, pos_list in remove_groups:
                    count = len(pos_list)
                    if stone_num == player:
                        lose += count
                    else:
                        gain += count
                    for (pi,pj) in pos_list:
                        new_board[pi][pj] = 0  # supprime les pierres
                score = gain - lose
                if score > max_score:
                    max_score = score

    # Si aucun placement possible (très improbable car au moins un sommet vide)
    # On retourne 0 par défaut (pas de score)
    if not placed_any:
        return 0
    return max_score

def main():
    neighbors_cache = {}
    while True:
        line = ''
        while line.strip() == '':
            line = sys.stdin.readline()
            if not line:
                return
        if line.strip() == '0 0':
            break
        N,C = map(int,line.strip().split())
        board = read_board(N)
        if N not in neighbors_cache:
            neighbors_cache[N] = get_neighbors(N)
        neighbors = neighbors_cache[N]
        res = simulate_turn(board, neighbors, C)
        print(res)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' complète' (ID: 75660)
  → Token d'amorce (pas de prédiction)

Token 3: ' pour' (ID: 1930)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4930688142776489
    2. ':' → logprob: -1.118068814277649
    3. '\n' → logprob: -3.4930686950683594
    4. ' :' → logprob: -3.8680686950683594
    5. '\' → logprob: -5.618068695068359
    6. '``' → logprob: -6.118068695068359
    7. '#' → logprob: -6.368068695068359
    8. ' ```' → logprob: -7.368068695068359
    9. '
' → logprob: -7.618068695068359
    10. '`' → logprob: -7.868068695068359

Token 4: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6293201446533203
    2. ' la' → logprob: -1.7543201446533203
    3. ' résoudre' → logprob: -2.5043201446533203
    4. ' Python' → logprob: -3.2543201446533203
    5. '```' → logprob: -3.5043201446533203
    6. '#' → logprob: -3.5043201446533203
    7. 'le' → logprob: -3.8793201446533203
    8. ' l' → logprob: -4.25432014465332
    9. 'python' → logprob: -4.25432014465332
    10. 'l' → logprob: -4.50432014465332

Token 5: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.2390049695968628
    2. ' problème' → logprob: -2.2390050888061523
    3. 'proble' → logprob: -3.9890050888061523
    4. '#' → logprob: -3.9890050888061523
    5. ' probl' → logprob: -4.114005088806152
    6. ' code' → logprob: -4.864005088806152
    7. ' #' → logprob: -5.239005088806152
    8. 'code' → logprob: -5.364005088806152
    9. 'problem' → logprob: -5.739005088806152
    10. ' projet' → logprob: -5.864005088806152

Token 6: ' "' (ID: 392)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.7111572027206421
    2. '```' → logprob: -1.836157202720642
    3. ' ' → logprob: -2.2111573219299316
    4. ':' → logprob: -2.4611573219299316
    5. 's' → logprob: -3.2111573219299316
    6. '#' → logprob: -3.8361573219299316
    7. ' ```' → logprob: -4.086157321929932
    8. 'def' → logprob: -4.711157321929932
    9. ' #' → logprob: -4.836157321929932
    10. '_' → logprob: -4.961157321929932

Token 7: 'Life' (ID: 27182)
  Prédit: 'Two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Two' → logprob: -2.7005128860473633
    2. 'du' → logprob: -2.8255128860473633
    3. ' du' → logprob: -2.8255128860473633
    4. 'de' → logprob: -2.9505128860473633
    5. ' des' → logprob: -3.0130128860473633
    6. 'n' → logprob: -3.3255128860473633
    7. 'max' → logprob: -3.3880128860473633
    8. 's' → logprob: -3.4505128860473633
    9. 'Deux' → logprob: -3.4505128860473633
    10. 'def' → logprob: -3.5130128860473633

Token 8: ' Line' (ID: 11342)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.19458305835723877
    2. 'Game' → logprob: -3.319582939147949
    3. ' goes' → logprob: -3.694582939147949
    4. ' Game' → logprob: -3.819582939147949
    5. ' ' → logprob: -4.569582939147949
    6. '```' → logprob: -4.569582939147949
    7. ' game' → logprob: -4.694582939147949
    8. ''s' → logprob: -4.694582939147949
    9. ' in' → logprob: -4.819582939147949
    10. 'Cycle' → logprob: -5.444582939147949

Token 9: '"

' (ID: 2678)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33627501130104065
    2. ':' → logprob: -1.9612749814987183
    3. '"' → logprob: -3.211275100708008
    4. ' :' → logprob: -3.586275100708008
    5. '```' → logprob: -3.586275100708008
    6. '#' → logprob: -3.836275100708008
    7. 'def' → logprob: -5.211275100708008
    8. '\n' → logprob: -5.211275100708008
    9. '"""' → logprob: -5.461275100708008
    10. ' s' → logprob: -5.961275100708008

Token 10: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7610805034637451
    2. 'def' → logprob: -0.8860805034637451
    3. 's' → logprob: -2.761080503463745
    4. ' :' → logprob: -3.636080503463745
    5. '```' → logprob: -4.386080741882324
    6. '#' → logprob: -4.761080741882324
    7. 'class' → logprob: -6.261080741882324
    8. ' def' → logprob: -6.511080741882324
    9. '\' → logprob: -6.636080741882324
    10. 'import' → logprob: -6.761080741882324

Token 11: ' Appro' (ID: 24145)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6447714567184448
    2. ' def' → logprob: -0.7697714567184448
    3. 'from' → logprob: -5.644771575927734
    4. ' from' → logprob: -6.019771575927734
    5. 'import' → logprob: -6.394771575927734
    6. 'class' → logprob: -7.144771575927734
    7. ' import' → logprob: -7.144771575927734
    8. ' class' → logprob: -7.269771575927734
    9. ' #' → logprob: -7.644771575927734
    10. '```' → logprob: -7.894771575927734

Token 12: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.20936347544193268
    2. '#' → logprob: -1.7093634605407715
    3. 'visionnement' → logprob: -5.0843634605407715
    4. 'ches' → logprob: -7.4593634605407715
    5. 'ach' → logprob: -7.8343634605407715
    6. 'ch' → logprob: -8.20936393737793
    7. '```' → logprob: -9.33436393737793
    8. 'x' → logprob: -9.70936393737793
    9. 'fond' → logprob: -9.95936393737793
    10. 'cher' → logprob: -10.33436393737793

Token 13: ' générale' (ID: 66899)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.2531648874282837
    2. ':' → logprob: -1.6281648874282837
    3. ' =' → logprob: -4.753164768218994
    4. 's' → logprob: -4.753164768218994
    5. ' ' → logprob: -5.878164768218994
    6. ' :
' → logprob: -7.003164768218994
    7. ' s' → logprob: -7.253164768218994
    8. ' d' → logprob: -7.378164768218994
    9. '```' → logprob: -7.378164768218994
    10. ' de' → logprob: -7.503164768218994

Token 14: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.1632918119430542
    2. ':' → logprob: -1.9132918119430542
    3. '#' → logprob: -6.663291931152344
    4. '```' → logprob: -7.163291931152344
    5. ' :
' → logprob: -8.288291931152344
    6. ' :

' → logprob: -8.788291931152344
    7. 's' → logprob: -8.913291931152344
    8. ' ' → logprob: -9.288291931152344
    9. ' ```' → logprob: -9.663291931152344
    10. ' #' → logprob: -10.038291931152344

Token 15: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.918826162815094
    2. ' -' → logprob: -1.7938261032104492
    3. ' #' → logprob: -2.168826103210449
    4. '-' → logprob: -3.168826103210449
    5. '1' → logprob: -3.168826103210449
    6. ' Util' → logprob: -3.168826103210449
    7. ' ' → logprob: -3.293826103210449
    8. 'On' → logprob: -3.918826103210449
    9. 'def' → logprob: -4.043826103210449
    10. ' La' → logprob: -4.168826103210449

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1629645824432373
    2. ' #' → logprob: -1.2879645824432373
    3. ' Util' → logprob: -2.5379645824432373
    4. '#' → logprob: -2.7879645824432373
    5. ' Le' → logprob: -2.9129645824432373
    6. ' La' → logprob: -2.9129645824432373
    7. ' Contin' → logprob: -3.4129645824432373
    8. ' On' → logprob: -3.6629645824432373
    9. ' Dé' → logprob: -4.412964820861816
    10. ' -' → logprob: -5.162964820861816

Token 17: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8350749015808105
    2. 'def' → logprob: -1.2100749015808105
    3. 'On' → logprob: -2.8350749015808105
    4. 'La' → logprob: -3.4600749015808105
    5. 'Util' → logprob: -3.4600749015808105
    6. '1' → logprob: -3.5850749015808105
    7. '-' → logprob: -4.0850749015808105
    8. 'from' → logprob: -4.0850749015808105
    9. 'Dé' → logprob: -4.0850749015808105
    10. 'Pour' → logprob: -4.2100749015808105

Token 18: '.' (ID: 13)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4021458327770233
    2. '.' → logprob: -1.5271458625793457
    3. ' :' → logprob: -3.4021458625793457
    4. ':' → logprob: -3.5271458625793457
    5. ' .' → logprob: -4.277145862579346
    6. ' #' → logprob: -4.777145862579346
    7. ')' → logprob: -5.152145862579346
    8. '_' → logprob: -5.527145862579346
    9. ' ```' → logprob: -5.527145862579346
    10. '#' → logprob: -5.652145862579346

Token 19: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.58107328414917
    2. ' Dé' → logprob: -1.70607328414917
    3. 'Dé' → logprob: -2.33107328414917
    4. 'def' → logprob: -2.83107328414917
    5. ' #' → logprob: -3.20607328414917
    6. ' Collect' → logprob: -3.45607328414917
    7. ' Calcul' → logprob: -4.08107328414917
    8. ' Identifier' → logprob: -4.08107328414917
    9. ' Lire' → logprob: -4.08107328414917
    10. ' On' → logprob: -4.20607328414917

Token 20: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07812660187482834
    2. '_' → logprob: -3.2031266689300537
    3. ' de' → logprob: -4.328126430511475
    4. ' =' → logprob: -4.453126430511475
    5. ' des' → logprob: -5.328126430511475
    6. 's' → logprob: -6.578126430511475
    7. ',' → logprob: -6.828126430511475
    8. ' d' → logprob: -7.828126430511475
    9. ' )' → logprob: -8.578126907348633
    10. '<|end|>' → logprob: -8.703126907348633

Token 21: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3357599675655365
    2. ' la' → logprob: -2.0857598781585693
    3. 'l' → logprob: -2.3357598781585693
    4. ' ' → logprob: -3.2107598781585693
    5. 's' → logprob: -3.8357598781585693
    6. ' ' → logprob: -7.085760116577148
    7. ' input' → logprob: -7.335760116577148
    8. ' s' → logprob: -8.210760116577148
    9. 'input' → logprob: -9.710760116577148
    10. '_l' → logprob: -9.710760116577148

Token 22: ' configuration' (ID: 12282)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -1.3619139194488525
    2. 'entrée' → logprob: -1.4869139194488525
    3. ' ' → logprob: -2.1119139194488525
    4. 's' → logprob: -2.1119139194488525
    5. ' phrase' → logprob: -2.9869139194488525
    6. 'd' → logprob: -3.8619139194488525
    7. 'n' → logprob: -3.8619139194488525
    8. 'chaine' → logprob: -3.9869139194488525
    9. 'gr' → logprob: -4.111913681030273
    10. 'l' → logprob: -4.111913681030273

Token 23: ' du' (ID: 1462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0080679655075073
    2. ' ' → logprob: -1.3830679655075073
    3. '_' → logprob: -1.6330679655075073
    4. ',' → logprob: -3.258068084716797
    5. ' de' → logprob: -3.508068084716797
    6. ' =' → logprob: -3.883068084716797
    7. ' des' → logprob: -4.133068084716797
    8. ' complète' → logprob: -4.258068084716797
    9. '_initial' → logprob: -4.258068084716797
    10. ' ,' → logprob: -4.383068084716797

Token 24: ' plateau' (ID: 78303)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9266894459724426
    2. ' problème' → logprob: -1.5516893863677979
    3. ' plateau' → logprob: -2.551689386367798
    4. ' grap' → logprob: -2.551689386367798
    5. ' système' → logprob: -2.801689386367798
    6. ' jeu' → logprob: -2.801689386367798
    7. ' joueur' → logprob: -3.926689386367798
    8. 's' → logprob: -5.301689624786377
    9. ' code' → logprob: -5.489189624786377
    10. ' graph' → logprob: -5.489189624786377

Token 25: ' triang' (ID: 135805)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05689844861626625
    2. ' ,' → logprob: -4.306898593902588
    3. ' =' → logprob: -4.556898593902588
    4. ',' → logprob: -4.556898593902588
    5. '_' → logprob: -5.056898593902588
    6. 's' → logprob: -5.306898593902588
    7. ' :' → logprob: -6.806898593902588
    8. '\' → logprob: -6.931898593902588
    9. ' (' → logprob: -6.931898593902588
    10. '#' → logprob: -7.181898593902588

Token 26: 'ulaire' (ID: 48584)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0671515092253685
    2. 'ulaire' → logprob: -2.8171515464782715
    3. 'e' → logprob: -6.0671515464782715
    4. '#' → logprob: -7.4421515464782715
    5. 'ular' → logprob: -7.5671515464782715
    6. 'ale' → logprob: -8.067151069641113
    7. 'angle' → logprob: -8.442151069641113
    8. 'ule' → logprob: -8.692151069641113
    9. 'ul' → logprob: -8.692151069641113
    10. 'l' → logprob: -8.942151069641113

Token 27: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0408097505569458
    2. ',' → logprob: -1.2908097505569458
    3. ' ,' → logprob: -1.5408097505569458
    4. ' :' → logprob: -3.4158096313476562
    5. ' (' → logprob: -3.7908096313476562
    6. '#' → logprob: -3.7908096313476562
    7. ':' → logprob: -4.040809631347656
    8. '.' → logprob: -4.165809631347656
    9. ' #' → logprob: -4.415809631347656
    10. 's' → logprob: -4.915809631347656

Token 28: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7051972150802612
    2. ' ' → logprob: -1.0801972150802612
    3. '\' → logprob: -2.830197334289551
    4. ' #' → logprob: -3.455197334289551
    5. ',' → logprob: -4.080197334289551
    6. '_' → logprob: -4.705197334289551
    7. 's' → logprob: -4.830197334289551
    8. 'n' → logprob: -4.955197334289551
    9. ' \' → logprob: -5.205197334289551
    10. 'import' → logprob: -5.205197334289551

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11290132254362106
    2. '#' → logprob: -2.487901210784912
    3. ' #' → logprob: -4.237901210784912
    4. '\' → logprob: -6.612901210784912
    5. 'n' → logprob: -6.737901210784912
    6. ' 

' → logprob: -6.737901210784912
    7. ' \' → logprob: -7.112901210784912
    8. ' ```' → logprob: -7.237901210784912
    9. ' 
' → logprob: -7.487901210784912
    10. '[' → logprob: -7.612901210784912

Token 30: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19684064388275146
    2. ' ' → logprob: -2.446840763092041
    3. 'def' → logprob: -4.196840763092041
    4. ' #' → logprob: -4.196840763092041
    5. 'board' → logprob: -4.321840763092041
    6. 'n' → logprob: -4.446840763092041
    7. 'import' → logprob: -4.946840763092041
    8. 'grid' → logprob: -5.946840763092041
    9. ' board' → logprob: -5.946840763092041
    10. '2' → logprob: -6.071840763092041

Token 31: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014473037794232368
    2. ' .' → logprob: -4.264472961425781
    3. ' ' → logprob: -9.264472961425781
    4. '#' → logprob: -9.514472961425781
    5. ',' → logprob: -9.639472961425781
    6. ' #' → logprob: -10.764472961425781
    7. ':' → logprob: -11.264472961425781
    8. ')' → logprob: -11.889472961425781
    9. '...' → logprob: -12.639472961425781
    10. '\' → logprob: -12.639472961425781

Token 32: ' Simulation' (ID: 76406)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.064604640007019
    2. ' Calcul' → logprob: -2.0646047592163086
    3. ' Analyse' → logprob: -3.1896047592163086
    4. ' Initial' → logprob: -3.1896047592163086
    5. ' Import' → logprob: -3.6896047592163086
    6. ' Parsing' → logprob: -3.6896047592163086
    7. ' Trait' → logprob: -3.6896047592163086
    8. ' Lecture' → logprob: -3.8771047592163086
    9. ' É' → logprob: -4.064604759216309
    10. ' Construction' → logprob: -4.127104759216309

Token 33: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3976999521255493
    2. ' de' → logprob: -1.1476999521255493
    3. ' d' → logprob: -5.52269983291626
    4. ' du' → logprob: -6.39769983291626
    5. 's' → logprob: -6.52269983291626
    6. ' des' → logprob: -6.77269983291626
    7. ' complète' → logprob: -8.022700309753418
    8. '  ' → logprob: -8.147700309753418
    9. ' ,' → logprob: -8.147700309753418
    10. ' ' → logprob: -8.522700309753418

Token 34: ' placement' (ID: 29002)
  Prédit: ' déplacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' déplacement' → logprob: -0.7863109707832336
    2. ' ' → logprob: -1.5363109111785889
    3. ' mouvement' → logprob: -2.286310911178589
    4. ' parcours' → logprob: -3.036310911178589
    5. ' chemin' → logprob: -3.161310911178589
    6. ' jeu' → logprob: -3.286310911178589
    7. ' passage' → logprob: -3.911310911178589
    8. ' trajet' → logprob: -4.286311149597168
    9. ' ' → logprob: -4.473811149597168
    10. ' dérou' → logprob: -5.286311149597168

Token 35: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.848749041557312
    2. ' ' → logprob: -1.223749041557312
    3. ' de' → logprob: -1.973749041557312
    4. 's' → logprob: -2.7237491607666016
    5. ' d' → logprob: -3.3487491607666016
    6. ' du' → logprob: -3.4737491607666016
    7. ' s' → logprob: -5.848749160766602
    8. ' ,' → logprob: -7.098749160766602
    9. ' et' → logprob: -7.473749160766602
    10. '<|end|>' → logprob: -7.598749160766602

Token 36: ''une' (ID: 13337)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.8499612212181091
    2. ''' → logprob: -1.474961280822754
    3. ''une' → logprob: -2.099961280822754
    4. 'e' → logprob: -2.349961280822754
    5. ' '' → logprob: -2.849961280822754
    6. ' ' → logprob: -3.974961280822754
    7. ' e' → logprob: -4.474961280822754
    8. 'u' → logprob: -4.974961280822754
    9. ' des' → logprob: -4.974961280822754
    10. ' un' → logprob: -5.349961280822754

Token 37: ' pierre' (ID: 70323)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42415186762809753
    2. ' nouvelle' → logprob: -2.92415189743042
    3. ' ligne' → logprob: -3.04915189743042
    4. ' pièce' → logprob: -3.11165189743042
    5. ' pierre' → logprob: -4.11165189743042
    6. ' carte' → logprob: -4.23665189743042
    7. ' cellule' → logprob: -4.48665189743042
    8. ' jet' → logprob: -4.79915189743042
    9. ' vie' → logprob: -4.86165189743042
    10. ' pion' → logprob: -5.17415189743042

Token 38: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6509951949119568
    2. 's' → logprob: -1.0259952545166016
    3. ' s' → logprob: -3.0259952545166016
    4. ' ,' → logprob: -3.9009952545166016
    5. '<|end|>' → logprob: -3.9009952545166016
    6. ',' → logprob: -4.775995254516602
    7. '_' → logprob: -5.150995254516602
    8. ' )' → logprob: -5.275995254516602
    9. '.' → logprob: -6.025995254516602
    10. ')' → logprob: -6.275995254516602

Token 39: ' le' (ID: 505)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.02069673500955105
    2. ' chacune' → logprob: -5.020696640014648
    3. ' ' → logprob: -5.520696640014648
    4. ' vérifier' → logprob: -6.270696640014648
    5. ' each' → logprob: -6.395696640014648
    6. ' tester' → logprob: -6.645696640014648
    7. ' le' → logprob: -7.145696640014648
    8. ' résoudre' → logprob: -7.770696640014648
    9. ' la' → logprob: -7.895696640014648
    10. ' voir' → logprob: -8.145696640014648

Token 40: ' joueur' (ID: 72629)
  Prédit: ' joueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joueur' → logprob: -0.20209398865699768
    2. ' ' → logprob: -2.952094078063965
    3. ' prochain' → logprob: -3.952094078063965
    4. ' test' → logprob: -4.202094078063965
    5. ' déplacement' → logprob: -4.702094078063965
    6. ' player' → logprob: -4.827094078063965
    7. ' jeu' → logprob: -4.827094078063965
    8. '#' → logprob: -5.264594078063965
    9. ' problème' → logprob: -5.389594078063965
    10. ' premier' → logprob: -5.452094078063965

Token 41: ' C' (ID: 363)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9563432931900024
    2. ' ' → logprob: -1.4563432931900024
    3. ' suivant' → logprob: -2.331343173980713
    4. ' ,' → logprob: -3.206343173980713
    5. ' advers' → logprob: -3.206343173980713
    6. ' courant' → logprob: -3.456343173980713
    7. ',' → logprob: -3.706343173980713
    8. ' .' → logprob: -4.081343173980713
    9. ' (' → logprob: -4.081343173980713
    10. ' suivante' → logprob: -4.081343173980713

Token 42: ' sur' (ID: 1512)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13739244639873505
    2. '#' → logprob: -2.262392520904541
    3. ',' → logprob: -4.887392520904541
    4. 'a' → logprob: -5.887392520904541
    5. ' .' → logprob: -6.262392520904541
    6. '_' → logprob: -6.512392520904541
    7. ''' → logprob: -6.637392520904541
    8. 'o' → logprob: -6.887392520904541
    9. '1' → logprob: -7.012392520904541
    10. '\' → logprob: -7.637392520904541

Token 43: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.38916632533073425
    2. ' la' → logprob: -2.1391663551330566
    3. ' une' → logprob: -2.3891663551330566
    4. ' ' → logprob: -2.8891663551330566
    5. ' le' → logprob: -4.014166355133057
    6. ' chacune' → logprob: -4.639166355133057
    7. ' l' → logprob: -5.139166355133057
    8. ' ' → logprob: -5.264166355133057
    9. ' un' → logprob: -5.639166355133057
    10. ' toutes' → logprob: -6.014166355133057

Token 44: ' sommet' (ID: 130502)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.41729041934013367
    2. ' sommet' → logprob: -2.042290449142456
    3. ' ' → logprob: -2.542290449142456
    4. ' case' → logprob: -2.667290449142456
    5. 'position' → logprob: -4.167290210723877
    6. ' emplacement' → logprob: -4.542290210723877
    7. ' point' → logprob: -5.167290210723877
    8. 'case' → logprob: -5.417290210723877
    9. ' triangle' → logprob: -5.667290210723877
    10. ' #' → logprob: -5.917290210723877

Token 45: ' vide' (ID: 21835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7082861661911011
    2. ' ,' → logprob: -1.708286166191101
    3. ',' → logprob: -2.0832862854003906
    4. ' possible' → logprob: -2.7082862854003906
    5. ' ' → logprob: -3.2082862854003906
    6. ' .' → logprob: -3.2082862854003906
    7. ' de' → logprob: -4.083286285400391
    8. ' du' → logprob: -4.333286285400391
    9. 'possible' → logprob: -5.458286285400391
    10. ' et' → logprob: -5.958286285400391

Token 46: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.41673481464385986
    2. ' ,' → logprob: -1.9167348146438599
    3. ',' → logprob: -2.0417346954345703
    4. ' .' → logprob: -3.6667346954345703
    5. ' ' → logprob: -4.16673469543457
    6. ' de' → logprob: -4.29173469543457
    7. ' afin' → logprob: -6.29173469543457
    8. ' (' → logprob: -6.41673469543457
    9. ' du' → logprob: -6.54173469543457
    10. ' et' → logprob: -6.91673469543457

Token 47: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.57720947265625
    2. ',' → logprob: -1.70220947265625
    3. '\' → logprob: -1.82720947265625
    4. '#' → logprob: -1.95220947265625
    5. ' ' → logprob: -1.95220947265625
    6. '```' → logprob: -3.45220947265625
    7. ' ,' → logprob: -3.57720947265625
    8. '<|end|>' → logprob: -3.95220947265625
    9. '_' → logprob: -4.20220947265625
    10. ''' → logprob: -4.70220947265625

Token 48: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13884350657463074
    2. ' ' → logprob: -2.763843536376953
    3. ' #' → logprob: -3.013843536376953
    4. '\' → logprob: -4.888843536376953
    5. '<|end|>' → logprob: -5.513843536376953
    6. ',' → logprob: -7.138843536376953
    7. ' 
' → logprob: -7.263843536376953
    8. '<|end|>' → logprob: -7.638843536376953
    9. ''' → logprob: -7.888843536376953
    10. '```' → logprob: -8.013843536376953

Token 49: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.021235136315226555
    2. ' #' → logprob: -4.27123498916626
    3. ' ' → logprob: -5.14623498916626
    4. '.' → logprob: -8.021235466003418
    5. ',' → logprob: -8.396235466003418
    6. '\' → logprob: -9.146235466003418
    7. '3' → logprob: -9.271235466003418
    8. ')' → logprob: -9.896235466003418
    9. '...' → logprob: -10.146235466003418
    10. 'for' → logprob: -10.271235466003418

Token 50: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00045795587357133627
    2. ' .' → logprob: -7.875457763671875
    3. ',' → logprob: -10.000457763671875
    4. ' ' → logprob: -10.875457763671875
    5. '#' → logprob: -12.500457763671875
    6. ' ,' → logprob: -13.500457763671875
    7. ':' → logprob: -13.625457763671875
    8. ' #' → logprob: -13.625457763671875
    9. ' ' → logprob: -14.000457763671875
    10. ')' → logprob: -14.625457763671875

Token 51: ' Identification' (ID: 103761)
  Prédit: ' Vér'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Vér' → logprob: -0.8881902694702148
    2. ' Calcul' → logprob: -1.5131902694702148
    3. ' Tester' → logprob: -2.763190269470215
    4. 'V' → logprob: -3.013190269470215
    5. 'Calcul' → logprob: -3.138190269470215
    6. ' Simulation' → logprob: -3.388190269470215
    7. 'Tester' → logprob: -3.638190269470215
    8. ' V' → logprob: -3.638190269470215
    9. ' Sim' → logprob: -4.263190269470215
    10. ' É' → logprob: -4.263190269470215

Token 52: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.014952643774449825
    2. ' de' → logprob: -4.514952659606934
    3. ' d' → logprob: -6.889952659606934
    4. 'des' → logprob: -7.014952659606934
    5. ' du' → logprob: -7.014952659606934
    6. 's' → logprob: -7.764952659606934
    7. '<|end|>' → logprob: -8.639952659606934
    8. ' ' → logprob: -8.889952659606934
    9. ' et' → logprob: -9.014952659606934
    10. 'd' → logprob: -9.514952659606934

Token 53: ' groupes' (ID: 72206)
  Prédit: ' chemins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemins' → logprob: -0.6495205760002136
    2. ' positions' → logprob: -2.6495206356048584
    3. ' groupes' → logprob: -2.8995206356048584
    4. ' points' → logprob: -3.1495206356048584
    5. ' composants' → logprob: -3.2745206356048584
    6. ' clusters' → logprob: -3.5245206356048584
    7. ' compos' → logprob: -3.7745206356048584
    8. ' somm' → logprob: -3.7745206356048584
    9. ' voisins' → logprob: -4.087020397186279
    10. ' chemin' → logprob: -4.149520397186279

Token 54: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.90906822681427
    2. ' d' → logprob: -1.28406822681427
    3. ' ' → logprob: -2.0340681076049805
    4. '_' → logprob: -3.1590681076049805
    5. '<|end|>' → logprob: -3.6590681076049805
    6. ' connected' → logprob: -3.9090681076049805
    7. ',' → logprob: -4.4090681076049805
    8. '_connected' → logprob: -4.6590681076049805
    9. ' ,' → logprob: -5.1590681076049805
    10. ' et' → logprob: -5.4090681076049805

Token 55: ' pierres' (ID: 115592)
  Prédit: ' pierres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pierres' → logprob: -0.02552933618426323
    2. ' pierre' → logprob: -5.400529384613037
    3. ' joueurs' → logprob: -5.650529384613037
    4. ' cellules' → logprob: -6.150529384613037
    5. ' stones' → logprob: -6.275529384613037
    6. ' points' → logprob: -6.275529384613037
    7. ' vertices' → logprob: -6.400529384613037
    8. ' ' → logprob: -6.525529384613037
    9. ' connected' → logprob: -6.900529384613037
    10. ' somm' → logprob: -7.025529384613037

Token 56: ' (' (ID: 350)
  Prédit: ' connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connect' → logprob: -1.0921926498413086
    2. ' connected' → logprob: -1.7171926498413086
    3. ' adj' → logprob: -1.9671926498413086
    4. ' C' → logprob: -2.3421926498413086
    5. 'connect' → logprob: -2.7171926498413086
    6. ' d' → logprob: -4.092192649841309
    7. ' de' → logprob: -4.092192649841309
    8. ' #' → logprob: -4.342192649841309
    9. 'C' → logprob: -4.467192649841309
    10. 'adj' → logprob: -4.467192649841309

Token 57: 'm' (ID: 76)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' C' → logprob: -1.9784852266311646
    2. ' adj' → logprob: -2.228485107421875
    3. ' connected' → logprob: -2.353485107421875
    4. ')' → logprob: -2.478485107421875
    5. ' connect' → logprob: -2.478485107421875
    6. ' ident' → logprob: -2.853485107421875
    7. 'connect' → logprob: -2.978485107421875
    8. ' )' → logprob: -3.228485107421875
    9. ' '' → logprob: -3.228485107421875
    10. 'C' → logprob: -3.353485107421875

Token 58: 'êmes' (ID: 49694)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.46644502878189087
    2. 'a' → logprob: -1.466444969177246
    3. 'u' → logprob: -3.216444969177246
    4. 'e' → logprob: -4.216444969177246
    5. 'i' → logprob: -4.466444969177246
    6. 'é' → logprob: -4.466444969177246
    7. ')' → logprob: -4.591444969177246
    8. 'ê' → logprob: -4.966444969177246
    9. '')' → logprob: -5.091444969177246
    10. ''a' → logprob: -5.091444969177246

Token 59: ' num' (ID: 2269)
  Prédit: ' couleurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couleurs' → logprob: -1.2305042743682861
    2. 'jou' → logprob: -1.3555042743682861
    3. ' joueurs' → logprob: -1.7305042743682861
    4. ' couleur' → logprob: -2.855504274368286
    5. 'cou' → logprob: -2.980504274368286
    6. ' joueur' → logprob: -3.105504274368286
    7. ' ' → logprob: -4.105504035949707
    8. 'c' → logprob: -4.230504035949707
    9. ' pierres' → logprob: -4.230504035949707
    10. '#' → logprob: -5.168004035949707

Token 60: 'éros' (ID: 120888)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.02432471700012684
    2. 'éros' → logprob: -4.524324893951416
    3. 'éro' → logprob: -4.899324893951416
    4. 'è' → logprob: -5.274324893951416
    5. '#' → logprob: -8.899324417114258
    6. 'ø' → logprob: -9.274324417114258
    7. 'ó' → logprob: -9.399324417114258
    8. 'ú' → logprob: -10.149324417114258
    9. 'ė' → logprob: -10.774324417114258
    10. '_' → logprob: -10.899324417114258

Token 61: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12708549201488495
    2. ' )' → logprob: -3.1270854473114014
    3. ' de' → logprob: -3.6270854473114014
    4. ',' → logprob: -3.8770854473114014
    5. ' et' → logprob: -4.3770856857299805
    6. '#' → logprob: -5.6270856857299805
    7. ' des' → logprob: -6.1270856857299805
    8. ' ,' → logprob: -6.3770856857299805
    9. 'de' → logprob: -6.6270856857299805
    10. ' d' → logprob: -6.6270856857299805

Token 62: ' connex' (ID: 154480)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9943755865097046
    2. ' et' → logprob: -2.244375705718994
    3. ' adj' → logprob: -2.244375705718994
    4. '#' → logprob: -2.369375705718994
    5. ' espaces' → logprob: -2.369375705718994
    6. ' connected' → logprob: -3.119375705718994
    7. ' avec' → logprob: -3.494375705718994
    8. 'adj' → logprob: -3.994375705718994
    9. ' mais' → logprob: -4.119375705718994
    10. ' )' → logprob: -4.119375705718994

Token 63: 'es' (ID: 268)
  Prédit: 'ions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.04021211713552475
    2. 'ion' → logprob: -3.7902121543884277
    3. 'iv' → logprob: -5.165212154388428
    4. 'ités' → logprob: -5.540212154388428
    5. 'i' → logprob: -5.665212154388428
    6. 'ivit' → logprob: -6.790212154388428
    7. 'ité' → logprob: -8.16521167755127
    8. 'ivité' → logprob: -8.35271167755127
    9. 'ons' → logprob: -8.85271167755127
    10. 'ionn' → logprob: -8.85271167755127

Token 64: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44071686267852783
    2. ' )' → logprob: -2.0657167434692383
    3. ').' → logprob: -2.1907167434692383
    4. ' par' → logprob: -2.5657167434692383
    5. ' sur' → logprob: -4.440716743469238
    6. ' ).' → logprob: -4.440716743469238
    7. ',' → logprob: -5.190716743469238
    8. '),' → logprob: -5.815716743469238
    9. ' en' → logprob: -6.565716743469238
    10. 'sur' → logprob: -6.940716743469238

Token 65: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.128729224205017
    2. ' ' → logprob: -1.128729224205017
    3. '\' → logprob: -2.8787293434143066
    4. '4' → logprob: -3.0037293434143066
    5. '_' → logprob: -3.1287293434143066
    6. '```' → logprob: -3.1287293434143066
    7. 'def' → logprob: -3.5037293434143066
    8. ')' → logprob: -3.7537293434143066
    9. ',' → logprob: -3.7537293434143066
    10. '<|end|>' → logprob: -4.128729343414307

Token 66: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21271444857120514
    2. ' ' → logprob: -2.462714433670044
    3. ' #' → logprob: -2.837714433670044
    4. '4' → logprob: -4.337714672088623
    5. 'def' → logprob: -4.462714672088623
    6. 'import' → logprob: -5.337714672088623
    7. '```' → logprob: -5.712714672088623
    8. ' 
' → logprob: -6.462714672088623
    9. ')' → logprob: -6.462714672088623
    10. ',' → logprob: -6.712714672088623

Token 67: '4' (ID: 19)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.038672007620334625
    2. '4' → logprob: -4.163671970367432
    3. ' ' → logprob: -4.413671970367432
    4. ' #' → logprob: -5.413671970367432
    5. ',' → logprob: -6.788671970367432
    6. ')' → logprob: -7.163671970367432
    7. 'def' → logprob: -7.538671970367432
    8. '.' → logprob: -7.663671970367432
    9. '   ' → logprob: -8.03867244720459
    10. '```' → logprob: -8.03867244720459

Token 68: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004177410155534744
    2. '#' → logprob: -5.504177570343018
    3. ' #' → logprob: -10.75417709350586
    4. ' .' → logprob: -11.00417709350586
    5. ',' → logprob: -11.25417709350586
    6. ')' → logprob: -11.25417709350586
    7. 'def' → logprob: -12.00417709350586
    8. ' ' → logprob: -12.50417709350586
    9. '```' → logprob: -13.19167709350586
    10. '-' → logprob: -13.25417709350586

Token 69: ' Vér' (ID: 159169)
  Prédit: ' Calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Calcul' → logprob: -1.2174509763717651
    2. 'Calcul' → logprob: -1.9674509763717651
    3. ' Vér' → logprob: -2.2174510955810547
    4. 'V' → logprob: -2.7174510955810547
    5. ' Dé' → logprob: -3.0924510955810547
    6. '#' → logprob: -3.4049510955810547
    7. ' ' → logprob: -3.4674510955810547
    8. 'Dé' → logprob: -3.5924510955810547
    9. ' Identification' → logprob: -3.7799510955810547
    10. ' Recherche' → logprob: -3.9049510955810547

Token 70: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.06270253658294678
    2. 'if' → logprob: -3.5627026557922363
    3. 'ifie' → logprob: -4.187702655792236
    4. 'i' → logprob: -4.687702655792236
    5. 'ifi' → logprob: -4.937702655792236
    6. 'ifica' → logprob: -8.062702178955078
    7. 'ificat' → logprob: -8.187702178955078
    8. 'ication' → logprob: -9.312702178955078
    9. 'ific' → logprob: -10.062702178955078
    10. 'ifier' → logprob: -10.687702178955078

Token 71: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2442961186170578
    2. ' des' → logprob: -1.8692960739135742
    3. '_' → logprob: -3.619296073913574
    4. ' d' → logprob: -4.244296073913574
    5. ' du' → logprob: -4.744296073913574
    6. 's' → logprob: -5.369296073913574
    7. ' ' → logprob: -5.494296073913574
    8. '_de' → logprob: -6.244296073913574
    9. ' que' → logprob: -8.244296073913574
    10. 'd' → logprob: -8.244296073913574

Token 72: ' groupes' (ID: 72206)
  Prédit: ' libert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' libert' → logprob: -0.1264576017856598
    2. ' liberties' → logprob: -2.501457691192627
    3. 'lib' → logprob: -4.126457691192627
    4. ' espaces' → logprob: -5.001457691192627
    5. ' "' → logprob: -6.126457691192627
    6. '_lib' → logprob: -6.626457691192627
    7. ' conditions' → logprob: -6.751457691192627
    8. ' ' → logprob: -7.251457691192627
    9. '"' → logprob: -7.376457691192627
    10. ' Libert' → logprob: -7.376457691192627

Token 73: ' sans' (ID: 9828)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6132950782775879
    2. ' d' → logprob: -1.113295078277588
    3. '_' → logprob: -3.488295078277588
    4. 'de' → logprob: -3.738295078277588
    5. 'd' → logprob: -4.488295078277588
    6. ' des' → logprob: -4.613295078277588
    7. ' ' → logprob: -4.738295078277588
    8. ''' → logprob: -4.863295078277588
    9. 's' → logprob: -4.988295078277588
    10. ',' → logprob: -5.363295078277588

Token 74: ' somm' (ID: 44830)
  Prédit: ' libert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' libert' → logprob: -0.4728253483772278
    2. ' liberté' → logprob: -2.722825288772583
    3. ' liberties' → logprob: -2.972825288772583
    4. ' ' → logprob: -3.222825288772583
    5. '```' → logprob: -3.222825288772583
    6. '_' → logprob: -3.597825288772583
    7. 'lib' → logprob: -4.347825527191162
    8. ' pierres' → logprob: -4.347825527191162
    9. ' points' → logprob: -4.722825527191162
    10. ' trous' → logprob: -4.722825527191162

Token 75: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.20533129572868347
    2. 'et' → logprob: -1.7053313255310059
    3. 'e' → logprob: -5.830331325531006
    4. 'es' → logprob: -8.330330848693848
    5. '#' → logprob: -8.455330848693848
    6. 'it' → logprob: -8.830330848693848
    7. 'è' → logprob: -9.205330848693848
    8. 'êts' → logprob: -9.455330848693848
    9. 'ètres' → logprob: -9.580330848693848
    10. 'ètes' → logprob: -10.705330848693848

Token 76: ' v' (ID: 323)
  Prédit: 'lib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lib' → logprob: -1.1830447912216187
    2. ' libres' → logprob: -1.9330447912216187
    3. ' extern' → logprob: -2.433044910430908
    4. '_lib' → logprob: -2.683044910430908
    5. ' de' → logprob: -2.808044910430908
    6. ' ' → logprob: -3.058044910430908
    7. ' d' → logprob: -3.308044910430908
    8. ' lib' → logprob: -3.683044910430908
    9. 'adj' → logprob: -3.933044910430908
    10. ' adj' → logprob: -3.933044910430908

Token 77: 'ides' (ID: 4105)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7256078720092773
    2. 'ides' → logprob: -1.3506078720092773
    3. 'is' → logprob: -1.8506078720092773
    4. 'ide' → logprob: -3.4756078720092773
    5. 'idé' → logprob: -4.100607872009277
    6. 'id' → logprob: -4.350607872009277
    7. 'i' → logprob: -4.350607872009277
    8. 'us' → logprob: -4.475607872009277
    9. 'a' → logprob: -6.350607872009277
    10. 'isi' → logprob: -6.850607872009277

Token 78: ' adj' (ID: 20251)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14239417016506195
    2. ',' → logprob: -3.3923940658569336
    3. ' adj' → logprob: -3.6423940658569336
    4. ' .' → logprob: -3.8923940658569336
    5. ' adjacent' → logprob: -4.767394065856934
    6. 'import' → logprob: -5.142394065856934
    7. '```' → logprob: -5.267394065856934
    8. ' voisins' → logprob: -5.517394065856934
    9. 'adj' → logprob: -5.517394065856934
    10. ' ,' → logprob: -5.767394065856934

Token 79: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.009889957495033741
    2. 'acent' → logprob: -4.759890079498291
    3. 'oints' → logprob: -7.759890079498291
    4. 'a' → logprob: -8.384889602661133
    5. 'ents' → logprob: -8.509889602661133
    6. 'c' → logprob: -8.759889602661133
    7. '##' → logprob: -9.384889602661133
    8. '#' → logprob: -10.384889602661133
    9. '```' → logprob: -10.384889602661133
    10. 'acency' → logprob: -10.634889602661133

Token 80: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.023768769577145576
    2. 'ent' → logprob: -3.773768663406372
    3. 'nts' → logprob: -8.523768424987793
    4. '#' → logprob: -9.273768424987793
    5. 'ul' → logprob: -10.023768424987793
    6. 'ants' → logprob: -10.148768424987793
    7. 'nt' → logprob: -10.648768424987793
    8. 'es' → logprob: -11.148768424987793
    9. 'entes' → logprob: -11.398768424987793
    10. 't' → logprob: -11.398768424987793

Token 81: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22745542228221893
    2. ',' → logprob: -2.1024553775787354
    3. ':' → logprob: -3.4774553775787354
    4. 's' → logprob: -3.9774553775787354
    5. ' ,' → logprob: -4.3524556159973145
    6. '```' → logprob: -5.3524556159973145
    7. ' ' → logprob: -5.4774556159973145
    8. ' :' → logprob: -5.7274556159973145
    9. ' .' → logprob: -6.6024556159973145
    10. ' ' → logprob: -7.2274556159973145

Token 82: ' suppression' (ID: 78014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1011645793914795
    2. ' être' → logprob: -1.4761645793914795
    3. ' leur' → logprob: -3.3511645793914795
    4. ' le' → logprob: -3.3511645793914795
    5. ' les' → logprob: -3.4761645793914795
    6. '```' → logprob: -3.4761645793914795
    7. ' la' → logprob: -3.6011645793914795
    8. ' garantir' → logprob: -3.6011645793914795
    9. ' l' → logprob: -3.6011645793914795
    10. ' déterminer' → logprob: -3.7261645793914795

Token 83: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.622734785079956
    2. 's' → logprob: -0.872734785079956
    3. ',' → logprob: -3.622734785079956
    4. '.
' → logprob: -4.872735023498535
    5. ',
' → logprob: -6.122735023498535
    6. '<|end|>' → logprob: -6.122735023498535
    7. '#' → logprob: -6.622735023498535
    8. ':' → logprob: -6.747735023498535
    9. ')' → logprob: -7.372735023498535
    10. ' ' → logprob: -7.622735023498535

Token 84: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7872035503387451
    2. '\' → logprob: -2.037203550338745
    3. 'def' → logprob: -2.412203550338745
    4. '```' → logprob: -2.912203550338745
    5. ' ' → logprob: -3.037203550338745
    6. 'n' → logprob: -3.412203550338745
    7. '<|end|>' → logprob: -3.537203550338745
    8. '[' → logprob: -3.662203550338745
    9. 'import' → logprob: -3.912203550338745
    10. '
' → logprob: -4.412203788757324

Token 85: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5699598789215088
    2. '#' → logprob: -2.069959878921509
    3. 'def' → logprob: -2.069959878921509
    4. 'd' → logprob: -3.444959878921509
    5. '\' → logprob: -3.694959878921509
    6. 'import' → logprob: -4.06995964050293
    7. '```' → logprob: -4.06995964050293
    8. '\n' → logprob: -4.06995964050293
    9. '[' → logprob: -4.19495964050293
    10. 'n' → logprob: -5.19495964050293

Token 86: '5' (ID: 20)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7179456353187561
    2. ' ' → logprob: -1.4679455757141113
    3. 'def' → logprob: -1.5929455757141113
    4. 'n' → logprob: -4.342945575714111
    5. 'd' → logprob: -4.342945575714111
    6. 'import' → logprob: -4.717945575714111
    7. '\' → logprob: -4.967945575714111
    8. '[' → logprob: -4.967945575714111
    9. '```' → logprob: -5.092945575714111
    10. ' #' → logprob: -5.842945575714111

Token 87: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.723973582556937e-05
    2. ' .' → logprob: -11.750017166137695
    3. '#' → logprob: -12.000017166137695
    4. 'def' → logprob: -14.125017166137695
    5. ':' → logprob: -14.500017166137695
    6. '.

' → logprob: -14.625017166137695
    7. ')' → logprob: -15.750017166137695
    8. ').' → logprob: -16.000017166137695
    9. '.
' → logprob: -16.125017166137695
    10. '```' → logprob: -16.562517166137695

Token 88: ' Calcul' (ID: 57243)
  Prédit: ' Supp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Supp' → logprob: -0.07070411741733551
    2. 'Supp' → logprob: -3.695704221725464
    3. ' Mise' → logprob: -4.320703983306885
    4. ' suppression' → logprob: -5.070703983306885
    5. ' Impl' → logprob: -5.195703983306885
    6. ' Sup' → logprob: -5.820703983306885
    7. ' Aj' → logprob: -6.820703983306885
    8. ' Gestion' → logprob: -7.070703983306885
    9. ' Calcul' → logprob: -7.070703983306885
    10. ' Simulation' → logprob: -7.320703983306885

Token 89: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4095975160598755
    2. ' des' → logprob: -1.1595975160598755
    3. ' du' → logprob: -4.659597396850586
    4. ' d' → logprob: -4.784597396850586
    5. ' ' → logprob: -5.659597396850586
    6. ' of' → logprob: -8.284597396850586
    7. 's' → logprob: -8.534597396850586
    8. '_' → logprob: -8.659597396850586
    9. ' ' → logprob: -9.284597396850586
    10. '_de' → logprob: -9.409597396850586

Token 90: ' score' (ID: 8429)
  Prédit: ' score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.025172751396894455
    2. 'score' → logprob: -3.775172710418701
    3. ' nombre' → logprob: -6.650172710418701
    4. '_score' → logprob: -8.40017318725586
    5. ' scoring' → logprob: -9.02517318725586
    6. ' scores' → logprob: -9.52517318725586
    7. '	score' → logprob: -9.65017318725586
    8. 'nombre' → logprob: -10.52517318725586
    9. 's' → logprob: -11.27517318725586
    10. ' gain' → logprob: -11.40017318725586

Token 91: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1556707620620728
    2. '_' → logprob: -1.9056707620620728
    3. '#' → logprob: -2.155670642852783
    4. ',' → logprob: -2.530670642852783
    5. 'def' → logprob: -2.780670642852783
    6. '```' → logprob: -3.030670642852783
    7. ':' → logprob: -3.155670642852783
    8. '.' → logprob: -3.405670642852783
    9. '\' → logprob: -3.405670642852783
    10. 's' → logprob: -3.655670642852783

Token 92: 'pier' (ID: 165772)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.9246657490730286
    2. ' la' → logprob: -1.2996656894683838
    3. ')' → logprob: -2.424665689468384
    4. ' des' → logprob: -2.924665689468384
    5. ' ' → logprob: -2.924665689468384
    6. ' l' → logprob: -3.799665689468384
    7. 'l' → logprob: -4.174665927886963
    8. ' de' → logprob: -4.174665927886963
    9. 'la' → logprob: -4.549665927886963
    10. ' du' → logprob: -4.924665927886963

Token 93: 'res' (ID: 430)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.6922789812088013
    2. 'r' → logprob: -0.9422789812088013
    3. 'res' → logprob: -2.3172788619995117
    4. 's' → logprob: -5.067278861999512
    5. 'es' → logprob: -6.192278861999512
    6. 'ces' → logprob: -7.317278861999512
    7. 'rs' → logprob: -8.129778861999512
    8. '```' → logprob: -8.254778861999512
    9. 'rès' → logprob: -8.379778861999512
    10. 'e' → logprob: -8.879778861999512

Token 94: ' advers' (ID: 33091)
  Prédit: ' supprim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supprim' → logprob: -1.1612284183502197
    2. ')' → logprob: -1.5362284183502197
    3. ' capt' → logprob: -2.0362284183502197
    4. 'sur' → logprob: -3.6612284183502197
    5. '+' → logprob: -3.6612284183502197
    6. 's' → logprob: -3.7862284183502197
    7. ' de' → logprob: -3.7862284183502197
    8. '_' → logprob: -4.036228179931641
    9. ' )' → logprob: -4.223728179931641
    10. 'capt' → logprob: -4.286228179931641

Token 95: 'es' (ID: 268)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.33093181252479553
    2. 'es' → logprob: -1.3309317827224731
    3. 're' → logprob: -4.705931663513184
    4. 'e' → logprob: -5.705931663513184
    5. 's' → logprob: -6.580931663513184
    6. 'mes' → logprob: -6.830931663513184
    7. 'r' → logprob: -7.080931663513184
    8. '#' → logprob: -7.580931663513184
    9. 'rès' → logprob: -8.080931663513184
    10. 'm' → logprob: -9.705931663513184

Token 96: ' supprim' (ID: 142986)
  Prédit: ' capt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capt' → logprob: -0.2108699530363083
    2. ')' → logprob: -2.5858700275421143
    3. ' supprim' → logprob: -3.4608700275421143
    4. ' prises' → logprob: -4.585869789123535
    5. '+' → logprob: -4.710869789123535
    6. ' captures' → logprob: -4.835869789123535
    7. ' élim' → logprob: -5.210869789123535
    8. 'capt' → logprob: -5.335869789123535
    9. ' ' → logprob: -5.460869789123535
    10. ',' → logprob: -5.585869789123535

Token 97: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.001728372066281736
    2. 'é' → logprob: -6.876728534698486
    3. 'és' → logprob: -7.626728534698486
    4. 'ée' → logprob: -8.876728057861328
    5. 'es' → logprob: -9.626728057861328
    6. 'er' → logprob: -13.876728057861328
    7. 'e' → logprob: -15.501728057861328
    8. '#' → logprob: -15.751728057861328
    9. 'ees' → logprob: -15.751728057861328
    10. 'nées' → logprob: -15.751728057861328

Token 98: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02768414281308651
    2. ' )' → logprob: -4.277684211730957
    3. ').' → logprob: -4.902684211730957
    4. '+' → logprob: -6.277684211730957
    5. ',' → logprob: -6.527684211730957
    6. '.' → logprob: -6.652684211730957
    7. '),' → logprob: -8.277684211730957
    8. ' ,' → logprob: -8.902684211730957
    9. ' +' → logprob: -8.902684211730957
    10. ' ' → logprob: -9.027684211730957

Token 99: ' pierres' (ID: 115592)
  Prédit: ' pierres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pierres' → logprob: -0.08651021867990494
    2. 'pier' → logprob: -2.961510181427002
    3. ' ' → logprob: -4.086510181427002
    4. ' pier' → logprob: -4.836510181427002
    5. ' pierre' → logprob: -5.711510181427002
    6. 'p' → logprob: -7.336510181427002
    7. ' ' → logprob: -7.836510181427002
    8. '1' → logprob: -8.46151065826416
    9. ' pièces' → logprob: -8.64901065826416
    10. ' p' → logprob: -8.77401065826416

Token 100: ' du' (ID: 1462)
  Prédit: ' advers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' advers' → logprob: -0.4092230796813965
    2. ' supprim' → logprob: -1.9092230796813965
    3. ' ' → logprob: -2.9092230796813965
    4. ' capt' → logprob: -3.7842230796813965
    5. '_' → logprob: -4.2842230796813965
    6. ' propres' → logprob: -4.6592230796813965
    7. ' élim' → logprob: -4.6592230796813965
    8. ' perdu' → logprob: -4.9717230796813965
    9. ' du' → logprob: -5.0342230796813965
    10. ' ennem' → logprob: -5.4092230796813965

Token 101: ' joueur' (ID: 72629)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.3127542734146118
    2. ' joueur' → logprob: -1.4377542734146118
    3. 'ad' → logprob: -4.062754154205322
    4. 'op' → logprob: -5.437754154205322
    5. 'c' → logprob: -6.062754154205322
    6. ' advers' → logprob: -6.562754154205322
    7. 'player' → logprob: -6.562754154205322
    8. '```' → logprob: -6.812754154205322
    9. 'pli' → logprob: -7.062754154205322
    10. ' ' → logprob: -7.687754154205322

Token 102: ' supprim' (ID: 142986)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.9038962721824646
    2. ')' → logprob: -1.6538963317871094
    3. ' C' → logprob: -2.2788963317871094
    4. ' advers' → logprob: -2.2788963317871094
    5. ' supprim' → logprob: -2.2788963317871094
    6. ' ' → logprob: -3.6538963317871094
    7. ' adverse' → logprob: -3.7788963317871094
    8. 'C' → logprob: -4.028896331787109
    9. ' plac' → logprob: -5.028896331787109
    10. ' placé' → logprob: -5.528896331787109

Token 103: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0008997925906442106
    2. 'é' → logprob: -7.500899791717529
    3. 'es' → logprob: -9.000900268554688
    4. 'és' → logprob: -9.375900268554688
    5. 'isées' → logprob: -9.625900268554688
    6. 'ée' → logprob: -10.625900268554688
    7. 'nées' → logprob: -11.250900268554688
    8. '1' → logprob: -11.875900268554688
    9. 'érées' → logprob: -11.875900268554688
    10. 'er' → logprob: -12.500900268554688

Token 104: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012008722871541977
    2. ' )' → logprob: -4.6370086669921875
    3. ').' → logprob: -6.3870086669921875
    4. ')
' → logprob: -8.262008666992188
    5. '#' → logprob: -9.012008666992188
    6. '.' → logprob: -10.137008666992188
    7. '+' → logprob: -10.262008666992188
    8. ' )
' → logprob: -11.262008666992188
    9. ' ).' → logprob: -11.262008666992188
    10. ')

' → logprob: -11.387008666992188

Token 105: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09824828058481216
    2. '#' → logprob: -3.723248243331909
    3. '

' → logprob: -3.973248243331909
    4. 'def' → logprob: -4.098248481750488
    5. ' 
' → logprob: -4.848248481750488
    6. ' 

' → logprob: -5.223248481750488
    7. '```' → logprob: -5.223248481750488
    8. '\n' → logprob: -5.598248481750488
    9. ' ' → logprob: -5.848248481750488
    10. '\' → logprob: -5.973248481750488

Token 106: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39166712760925293
    2. '
' → logprob: -1.891667127609253
    3. ' 
' → logprob: -2.891667127609253
    4. 'def' → logprob: -3.016667127609253
    5. '#' → logprob: -3.266667127609253
    6. ' 

' → logprob: -4.891667366027832
    7. 'import' → logprob: -5.516667366027832
    8. '```' → logprob: -5.766667366027832
    9. '[' → logprob: -5.891667366027832
    10. '\' → logprob: -6.141667366027832

Token 107: '6' (ID: 21)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33618900179862976
    2. '#' → logprob: -1.5861890316009521
    3. 'def' → logprob: -3.461189031600952
    4. '
' → logprob: -4.336188793182373
    5. 'd' → logprob: -5.086188793182373
    6. '[' → logprob: -5.211188793182373
    7. ' 
' → logprob: -5.461188793182373
    8. 'n' → logprob: -5.711188793182373
    9. '\' → logprob: -5.836188793182373
    10. '\n' → logprob: -5.961188793182373

Token 108: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0038829767145216465
    2. ' #' → logprob: -6.628882884979248
    3. ' .' → logprob: -6.628882884979248
    4. '#' → logprob: -6.753882884979248
    5. 'def' → logprob: -11.128883361816406
    6. ' ' → logprob: -11.378883361816406
    7. ' def' → logprob: -11.503883361816406
    8. ' ' → logprob: -12.128883361816406
    9. 'import' → logprob: -12.628883361816406
    10. '```' → logprob: -13.128883361816406

Token 109: ' Cho' (ID: 14207)
  Prédit: ' Calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Calcul' → logprob: -1.276361107826233
    2. ' Aff' → logprob: -1.901361107826233
    3. ' Recherche' → logprob: -2.5263609886169434
    4. 'Calcul' → logprob: -2.9013609886169434
    5. 'Recherche' → logprob: -2.9013609886169434
    6. ' Retour' → logprob: -3.4013609886169434
    7. 'Dé' → logprob: -3.5263609886169434
    8. ' Dé' → logprob: -3.6513609886169434
    9. ' Cho' → logprob: -3.6513609886169434
    10. ' Trou' → logprob: -3.7763609886169434

Token 110: 'ix' (ID: 1128)
  Prédit: 'ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.00016742534353397787
    2. 'is' → logprob: -9.750167846679688
    3. 'isir' → logprob: -10.000167846679688
    4. 'i' → logprob: -10.625167846679688
    5. 'ice' → logprob: -11.625167846679688
    6. 'sis' → logprob: -12.250167846679688
    7. 'mp' → logprob: -12.500167846679688
    8. 'isissez' → logprob: -12.750167846679688
    9. 's' → logprob: -13.000167846679688
    10. '#' → logprob: -13.250167846679688

Token 111: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.15470223128795624
    2. ' de' → logprob: -2.1547021865844727
    3. ' d' → logprob: -3.6547021865844727
    4. ' des' → logprob: -7.779702186584473
    5. ' ' → logprob: -8.654702186584473
    6. ' final' → logprob: -8.654702186584473
    7. ' optimale' → logprob: -8.654702186584473
    8. ' optimal' → logprob: -9.029702186584473
    9. ' of' → logprob: -9.154702186584473
    10. '  ' → logprob: -9.404702186584473

Token 112: ' placement' (ID: 29002)
  Prédit: ' meilleur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' meilleur' → logprob: -0.3299987018108368
    2. ' placement' → logprob: -1.4549987316131592
    3. 'placement' → logprob: -4.07999849319458
    4. ' emplacement' → logprob: -4.70499849319458
    5. ' sommet' → logprob: -4.82999849319458
    6. ' mouvement' → logprob: -5.57999849319458
    7. ' prochain' → logprob: -6.07999849319458
    8. ' move' → logprob: -6.32999849319458
    9. ' déplacement' → logprob: -6.70499849319458
    10. 'me' → logprob: -6.82999849319458

Token 113: ' donnant' (ID: 127774)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5911549925804138
    2. '<|end|>' → logprob: -1.8411550521850586
    3. ' ,' → logprob: -2.7161550521850586
    4. ',' → logprob: -3.4661550521850586
    5. '#' → logprob: -3.4661550521850586
    6. ' de' → logprob: -3.5911550521850586
    7. '.' → logprob: -4.216155052185059
    8. ' d' → logprob: -4.466155052185059
    9. ' ' → logprob: -4.591155052185059
    10. '_' → logprob: -4.716155052185059

Token 114: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4771626591682434
    2. ' la' → logprob: -1.1021625995635986
    3. ' ' → logprob: -3.8521625995635986
    4. 'le' → logprob: -4.352162837982178
    5. ' un' → logprob: -4.727162837982178
    6. ' meilleur' → logprob: -6.352162837982178
    7. '  ' → logprob: -7.727162837982178
    8. ' une' → logprob: -7.977162837982178
    9. ' meilleure' → logprob: -8.10216236114502
    10. ' ' → logprob: -8.10216236114502

Token 115: ' score' (ID: 8429)
  Prédit: ' meilleur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' meilleur' → logprob: -0.03256578743457794
    2. ' score' → logprob: -3.7825658321380615
    3. 'me' → logprob: -5.282565593719482
    4. ' maximum' → logprob: -6.157565593719482
    5. 'score' → logprob: -6.657565593719482
    6. ' me' → logprob: -8.15756607055664
    7. ' meilleurs' → logprob: -8.65756607055664
    8. ' meilleure' → logprob: -8.78256607055664
    9. ' plus' → logprob: -9.53256607055664
    10. 'maximum' → logprob: -10.28256607055664

Token 116: ' maximal' (ID: 65414)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5589593052864075
    2. 'def' → logprob: -2.3089592456817627
    3. '<|end|>' → logprob: -2.5589592456817627
    4. '
' → logprob: -2.6839592456817627
    5. '#' → logprob: -2.8089592456817627
    6. '```' → logprob: -3.8089592456817627
    7. ',' → logprob: -3.9339592456817627
    8. ' 
' → logprob: -4.433959484100342
    9. 'import' → logprob: -4.433959484100342
    10. '\' → logprob: -5.183959484100342

Token 118: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6204121112823486
    2. 'def' → logprob: -2.2454121112823486
    3. '#' → logprob: -2.3704121112823486
    4. '
' → logprob: -3.1204121112823486
    5. ' 
' → logprob: -3.2454121112823486
    6. '[' → logprob: -3.3704121112823486
    7. 'import' → logprob: -3.7454121112823486
    8. '```' → logprob: -3.7454121112823486
    9. '\n' → logprob: -3.7454121112823486
    10. '\' → logprob: -4.2454118728637695

Token 119: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.027488267049193382
    2. ' 
' → logprob: -4.9024882316589355
    3. '[' → logprob: -5.1524882316589355
    4. '#' → logprob: -5.1524882316589355
    5. 'def' → logprob: -6.4024882316589355
    6. '\n' → logprob: -7.1524882316589355
    7. ' 

' → logprob: -7.4024882316589355
    8. '
' → logprob: -7.4024882316589355
    9. ' #' → logprob: -7.6524882316589355
    10. 'import' → logprob: -7.6524882316589355

Token 120: '7' (ID: 22)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47334304451942444
    2. '#' → logprob: -1.848343014717102
    3. 'def' → logprob: -2.0983431339263916
    4. 'd' → logprob: -2.9733431339263916
    5. ' 
' → logprob: -4.3483428955078125
    6. '[' → logprob: -4.9733428955078125
    7. 'n' → logprob: -5.5983428955078125
    8. '\' → logprob: -5.7233428955078125
    9. '
' → logprob: -5.9733428955078125
    10. 'import' → logprob: -5.9733428955078125

Token 121: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.566264295950532e-05
    2. 'def' → logprob: -10.000085830688477
    3. '#' → logprob: -11.000085830688477
    4. ' def' → logprob: -11.375085830688477
    5. '.
' → logprob: -12.000085830688477
    6. ':' → logprob: -13.625085830688477
    7. '.

' → logprob: -14.125085830688477
    8. ' .' → logprob: -14.125085830688477
    9. '.def' → logprob: -15.000085830688477
    10. '```' → logprob: -15.000085830688477

Token 122: ' Ré' (ID: 27181)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3213609457015991
    2. 'import' → logprob: -2.4463610649108887
    3. 'Dé' → logprob: -2.6963610649108887
    4. 'Aff' → logprob: -2.8213610649108887
    5. 'Lecture' → logprob: -2.8213610649108887
    6. ' def' → logprob: -2.8213610649108887
    7. ' Aff' → logprob: -3.0713610649108887
    8. ' import' → logprob: -3.4463610649108887
    9. ' if' → logprob: -3.4463610649108887
    10. 'from' → logprob: -3.4463610649108887

Token 123: 'p' (ID: 79)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.6711094379425049
    2. 'sum' → logprob: -1.1711094379425049
    3. 'su' → logprob: -2.171109437942505
    4. 's' → logprob: -2.921109437942505
    5. 'al' → logprob: -5.296109199523926
    6. 'cup' → logprob: -6.796109199523926
    7. 'sur' → logprob: -6.921109199523926
    8. 'ponse' → logprob: -7.296109199523926
    9. 'servation' → logprob: -7.671109199523926
    10. 'sol' → logprob: -8.296109199523926

Token 124: 'ét' (ID: 3913)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -1.1902098655700684
    2. 'é' → logprob: -1.3152098655700684
    3. 'ét' → logprob: -1.3152098655700684
    4. 'l' → logprob: -2.5652098655700684
    5. 'lication' → logprob: -3.9402098655700684
    6. 'étation' → logprob: -4.190209865570068
    7. 'éter' → logprob: -4.440209865570068
    8. 'ection' → logprob: -4.690209865570068
    9. 'osition' → logprob: -5.690209865570068
    10. '#' → logprob: -6.065209865570068

Token 125: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.11490831524133682
    2. 'é' → logprob: -2.239908218383789
    3. 'e' → logprob: -7.114908218383789
    4. 'er' → logprob: -7.989908218383789
    5. 'ation' → logprob: -8.364908218383789
    6. 'et' → logprob: -8.864908218383789
    7. 'ution' → logprob: -9.239908218383789
    8. 'tion' → logprob: -9.364908218383789
    9. 'u' → logprob: -9.489908218383789
    10. 'ée' → logprob: -9.489908218383789

Token 126: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.05722914636135101
    2. ' le' → logprob: -4.057229042053223
    3. ' toutes' → logprob: -4.557229042053223
    4. ' l' → logprob: -4.807229042053223
    5. ' ' → logprob: -5.182229042053223
    6. ' les' → logprob: -6.182229042053223
    7. ' la' → logprob: -6.432229042053223
    8. ' each' → logprob: -6.557229042053223
    9. ' chacune' → logprob: -6.682229042053223
    10. ' tous' → logprob: -6.932229042053223

Token 128: ' cas' (ID: 2108)
  Prédit: ' joueur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' joueur' → logprob: -0.5197740197181702
    2. ' position' → logprob: -1.7697739601135254
    3. ' sommet' → logprob: -3.1447739601135254
    4. ' placement' → logprob: -3.7697739601135254
    5. 'position' → logprob: -3.7697739601135254
    6. ' ' → logprob: -3.8947739601135254
    7. ' emplacement' → logprob: -4.144773960113525
    8. ' possible' → logprob: -4.269773960113525
    9. ' case' → logprob: -4.519773960113525
    10. ' candidat' → logprob: -4.519773960113525

Token 129: ' jusqu' (ID: 21961)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.313748300075531
    2. '<|end|>' → logprob: -2.188748359680176
    3. '
' → logprob: -3.188748359680176
    4. ' 
' → logprob: -3.313748359680176
    5. '#' → logprob: -3.813748359680176
    6. 'def' → logprob: -3.938748359680176
    7. ' 

' → logprob: -4.688748359680176
    8. '<|end|>' → logprob: -5.313748359680176
    9. 'import' → logprob: -5.563748359680176
    10. ':' → logprob: -6.063748359680176

Token 130: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.00288772932253778
    2. '’à' → logprob: -6.127887725830078
    3. 'à' → logprob: -7.752887725830078
    4. ''au' → logprob: -8.877887725830078
    5. ''' → logprob: -9.377887725830078
    6. ' à' → logprob: -10.377887725830078
    7. '#' → logprob: -11.627887725830078
    8. ''a' → logprob: -12.127887725830078
    9. 'au' → logprob: -14.127887725830078
    10. 'a' → logprob: -14.127887725830078

Token 131: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.48206356167793274
    2. ' EOF' → logprob: -1.1070635318756104
    3. ' fin' → logprob: -3.1070635318756104
    4. ' l' → logprob: -5.8570637702941895
    5. 'EOF' → logprob: -6.1070637702941895
    6. ' input' → logprob: -6.8570637702941895
    7. ' ' → logprob: -7.8570637702941895
    8. ' eof' → logprob: -8.607063293457031
    9. 'la' → logprob: -9.482063293457031
    10. 'l' → logprob: -9.607063293457031

Token 132: ' dé' (ID: 2393)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.5264527201652527
    2. ' fin' → logprob: -0.9014527201652527
    3. 'EOF' → logprob: -6.401452541351318
    4. ' EOF' → logprob: -7.151452541351318
    5. 'n' → logprob: -8.526453018188477
    6. '#' → logprob: -8.776453018188477
    7. 'f' → logprob: -9.026453018188477
    8. ' ' → logprob: -9.526453018188477
    9. 'entrée' → logprob: -9.776453018188477
    10. ' n' → logprob: -10.401453018188477

Token 133: 'tection' (ID: 90592)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7235745191574097
    2. 'tection' → logprob: -1.4735745191574097
    3. 'fin' → logprob: -1.4735745191574097
    4. 'fi' → logprob: -3.598574638366699
    5. 'te' → logprob: -4.848574638366699
    6. 'c' → logprob: -4.973574638366699
    7. 'termination' → logprob: -5.223574638366699
    8. 'faite' → logprob: -5.723574638366699
    9. 'tect' → logprob: -7.348574638366699
    10. 'r' → logprob: -7.973574638366699

Token 134: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' la' (ID: 557)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.22575414180755615
    2. ' la' → logprob: -1.9757541418075562
    3. ' l' → logprob: -3.4757542610168457
    4. ' fin' → logprob: -4.350754261016846
    5. ' une' → logprob: -4.600754261016846
    6. ' ' → logprob: -5.975754261016846
    7. ' un' → logprob: -6.225754261016846
    8. 'l' → logprob: -6.475754261016846
    9. 'EOF' → logprob: -6.475754261016846
    10. '"' → logprob: -8.100753784179688

Token 136: ' fin' (ID: 2131)
  Prédit: ' fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.1868552565574646
    2. 'fin' → logprob: -2.3118553161621094
    3. ' ' → logprob: -4.061855316162109
    4. ' EOF' → logprob: -4.186855316162109
    5. 'n' → logprob: -4.436855316162109
    6. ' solution' → logprob: -5.686855316162109
    7. ' victoire' → logprob: -5.686855316162109
    8. '\n' → logprob: -6.061855316162109
    9. ' ligne' → logprob: -6.186855316162109
    10. ' #' → logprob: -6.686855316162109

Token 137: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06430301070213318
    2. ''entrée' → logprob: -3.189302921295166
    3. ''' → logprob: -4.814302921295166
    4. 'é' → logprob: -5.439302921295166
    5. 'entrée' → logprob: -6.314302921295166
    6. 'input' → logprob: -6.814302921295166
    7. 'u' → logprob: -6.939302921295166
    8. '#' → logprob: -7.314302921295166
    9. 'a' → logprob: -7.439302921295166
    10. 'l' → logprob: -7.439302921295166

Token 139: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9093785285949707
    2. 'def' → logprob: -1.9093785285949707
    3. '#' → logprob: -2.2843785285949707
    4. '```' → logprob: -2.5343785285949707
    5. 'import' → logprob: -2.9093785285949707
    6. '\n' → logprob: -3.1593785285949707
    7. '<|end|>' → logprob: -3.2843785285949707
    8. ' 
' → logprob: -3.9093785285949707
    9. 'n' → logprob: -3.9093785285949707
    10. '[' → logprob: -4.034378528594971

Token 140: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3427191376686096
    2. ' )' → logprob: -1.3427190780639648
    3. ' EOF' → logprob: -4.467719078063965
    4. 'EOF' → logprob: -4.967719078063965
    5. 'def' → logprob: -6.717719078063965
    6. '#' → logprob: -6.717719078063965
    7. 'import' → logprob: -6.967719078063965
    8. ').' → logprob: -6.967719078063965
    9. 'input' → logprob: -7.342719078063965
    10. '   ' → logprob: -7.592719078063965

Token 141: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027735961601138115
    2. ' )' → logprob: -3.652735948562622
    3. '0' → logprob: -7.277736186981201
    4. '#' → logprob: -8.277735710144043
    5. ')#' → logprob: -9.027735710144043
    6. ' ' → logprob: -9.652735710144043
    7. ')
' → logprob: -10.277735710144043
    8. ' ' → logprob: -10.402735710144043
    9. ' #' → logprob: -10.527735710144043
    10. '>' → logprob: -10.652735710144043

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7946392893791199
    2. ' ' → logprob: -1.4196393489837646
    3. ')' → logprob: -1.7946393489837646
    4. ',' → logprob: -2.0446393489837646
    5. ' )' → logprob: -5.1696391105651855
    6. ' ,' → logprob: -5.7946391105651855
    7. '<|end|>' → logprob: -7.5446391105651855
    8. '#' → logprob: -7.6696391105651855
    9. '  ' → logprob: -8.669639587402344
    10. ' ' → logprob: -9.294639587402344

Token 143: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008888294687494636
    2. ' )' → logprob: -7.125888824462891
    3. '#' → logprob: -10.75088882446289
    4. '")' → logprob: -11.12588882446289
    5. ')
' → logprob: -11.25088882446289
    6. ')#' → logprob: -11.62588882446289
    7. '0' → logprob: -12.50088882446289
    8. '')' → logprob: -12.62588882446289
    9. '\n' → logprob: -12.87588882446289
    10. ' ' → logprob: -13.37588882446289

Token 144: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.860588788986206
    2. ' ' → logprob: -1.860588788986206
    3. 'def' → logprob: -1.985588788986206
    4. ' 
' → logprob: -2.110588788986206
    5. '#' → logprob: -3.235588788986206
    6. 'import' → logprob: -3.360588788986206
    7. '\n' → logprob: -3.985588788986206
    8. 'n' → logprob: -3.985588788986206
    9. ' 

' → logprob: -4.610589027404785
    10. '```' → logprob: -4.985589027404785

Token 145: ' D' (ID: 415)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9375959038734436
    2. 'def' → logprob: -1.0625958442687988
    3. 'import' → logprob: -1.9375958442687988
    4. 'd' → logprob: -3.062595844268799
    5. '#' → logprob: -3.562595844268799
    6. 'n' → logprob: -4.062595844268799
    7. ' def' → logprob: -5.312595844268799
    8. 'from' → logprob: -5.437595844268799
    9. ' import' → logprob: -5.687595844268799
    10. ' #' → logprob: -5.812595844268799

Token 146: 'étails' (ID: 179246)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.45366454124450684
    2. 'é' → logprob: -1.7036645412445068
    3. 'éf' → logprob: -2.203664541244507
    4. 'e' → logprob: -3.328664541244507
    5. '#' → logprob: -3.953664541244507
    6. 'onnées' → logprob: -5.953664779663086
    7. 'ata' → logprob: -6.203664779663086
    8. 'efs' → logprob: -6.453664779663086
    9. 'efi' → logprob: -6.578664779663086
    10. 'EF' → logprob: -6.703664779663086

Token 147: ' clés' (ID: 96616)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4511361122131348
    2. ' :' → logprob: -1.5761361122131348
    3. ':' → logprob: -1.7011361122131348
    4. 'import' → logprob: -2.2011361122131348
    5. 'def' → logprob: -2.4511361122131348
    6. '#' → logprob: -2.5761361122131348
    7. ' #' → logprob: -3.9511361122131348
    8. ' de' → logprob: -3.9511361122131348
    9. ' ' → logprob: -4.451136112213135
    10. ',' → logprob: -4.576136112213135

Token 148: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.23255513608455658
    2. ':' → logprob: -2.1075551509857178
    3. ' ' → logprob: -3.6075551509857178
    4. '#' → logprob: -3.8575551509857178
    5. 'import' → logprob: -5.107554912567139
    6. ',' → logprob: -5.357554912567139
    7. 'def' → logprob: -5.482554912567139
    8. ' =' → logprob: -5.607554912567139
    9. ' ,' → logprob: -5.607554912567139
    10. ' #' → logprob: -5.732554912567139

Token 149: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.284854918718338
    2. ' ' → logprob: -2.2848548889160156
    3. ' #' → logprob: -2.2848548889160156
    4. 'def' → logprob: -4.034854888916016
    5. 'n' → logprob: -4.284854888916016
    6. 'import' → logprob: -5.034854888916016
    7. ' 
' → logprob: -6.784854888916016
    8. '[' → logprob: -7.409854888916016
    9. ' n' → logprob: -7.784854888916016
    10. ',' → logprob: -7.909854888916016

Token 150: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5451785326004028
    2. 'def' → logprob: -1.5451785326004028
    3. 'import' → logprob: -2.6701784133911133
    4. 'n' → logprob: -2.9201784133911133
    5. 'from' → logprob: -3.0451784133911133
    6. ' #' → logprob: -3.9201784133911133
    7. ' ' → logprob: -4.920178413391113
    8. ' def' → logprob: -6.420178413391113
    9. ' n' → logprob: -6.670178413391113
    10. ' import' → logprob: -6.920178413391113

Token 151: ' Le' (ID: 2018)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7426086068153381
    2. ' from' → logprob: -1.7426085472106934
    3. ' import' → logprob: -1.7426085472106934
    4. 'import' → logprob: -2.4926085472106934
    5. 'def' → logprob: -2.8676085472106934
    6. ' def' → logprob: -3.7426085472106934
    7. '#' → logprob: -4.742608547210693
    8. ' #' → logprob: -7.367608547210693
    9. ' class' → logprob: -8.117609024047852
    10. ' n' → logprob: -8.367609024047852

Token 152: ' plateau' (ID: 78303)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5090336203575134
    2. ' plateau' → logprob: -1.6340336799621582
    3. 'n' → logprob: -3.259033679962158
    4. '#' → logprob: -3.884033679962158
    5. 'plate' → logprob: -4.134033679962158
    6. 's' → logprob: -4.509033679962158
    7. ' n' → logprob: -4.509033679962158
    8. ' #' → logprob: -4.634033679962158
    9. ' ' → logprob: -4.884033679962158
    10. 't' → logprob: -4.884033679962158

Token 153: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17406117916107178
    2. ' ' → logprob: -2.2990612983703613
    3. '=' → logprob: -4.424061298370361
    4. '#' → logprob: -4.549061298370361
    5. '[' → logprob: -4.674061298370361
    6. ',' → logprob: -4.674061298370361
    7. '[]' → logprob: -6.049061298370361
    8. '<|end|>' → logprob: -6.049061298370361
    9. '_' → logprob: -6.174061298370361
    10. ' #' → logprob: -6.424061298370361

Token 154: ' un' (ID: 537)
  Prédit: ' représent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représent' → logprob: -0.32272785902023315
    2. ' un' → logprob: -2.572727918624878
    3. ' mod' → logprob: -3.072727918624878
    4. 'un' → logprob: -3.322727918624878
    5. 'mod' → logprob: -3.947727918624878
    6. ' triang' → logprob: -3.947727918624878
    7. 'une' → logprob: -4.447727680206299
    8. ' une' → logprob: -4.572727680206299
    9. 'tri' → logprob: -4.697727680206299
    10. 're' → logprob: -4.697727680206299

Token 155: ' triangle' (ID: 41487)
  Prédit: 'triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'triangle' → logprob: -0.21106697618961334
    2. ' triangle' → logprob: -2.086066961288452
    3. 'tri' → logprob: -3.836066961288452
    4. 'liste' → logprob: -4.086067199707031
    5. 'list' → logprob: -4.961067199707031
    6. 'gr' → logprob: -5.586067199707031
    7. 'trip' → logprob: -5.711067199707031
    8. 'ent' → logprob: -5.836067199707031
    9. 'graph' → logprob: -6.211067199707031
    10. 'plate' → logprob: -6.961067199707031

Token 156: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9972779154777527
    2. '<|end|>' → logprob: -1.3722779750823975
    3. ',' → logprob: -1.9972779750823975
    4. ')' → logprob: -2.9972779750823975
    5. '_' → logprob: -3.2472779750823975
    6. '.' → logprob: -3.7472779750823975
    7. ' de' → logprob: -3.8722779750823975
    8. '[' → logprob: -3.8722779750823975
    9. '#' → logprob: -3.9972779750823975
    10. ' )' → logprob: -4.747277736663818

Token 157: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3429255187511444
    2. 'N' → logprob: -2.092925548553467
    3. ' n' → logprob: -2.092925548553467
    4. ' N' → logprob: -3.717925548553467
    5. 'L' → logprob: -5.592925548553467
    6. 't' → logprob: -6.217925548553467
    7. 'T' → logprob: -6.217925548553467
    8. 'nb' → logprob: -6.717925548553467
    9. 'un' → logprob: -6.967925548553467
    10. 'i' → logprob: -7.092925548553467

Token 158: ' lignes' (ID: 81687)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37144210934638977
    2. ' lignes' → logprob: -1.9964420795440674
    3. '=' → logprob: -3.2464420795440674
    4. ' ' → logprob: -3.3714420795440674
    5. ' vertices' → logprob: -3.4964420795440674
    6. ' somm' → logprob: -4.3714423179626465
    7. ' sommet' → logprob: -4.8714423179626465
    8. ',' → logprob: -5.2464423179626465
    9. ' sides' → logprob: -5.3714423179626465
    10. ' (' → logprob: -5.3714423179626465

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5405409336090088
    2. '.' → logprob: -0.9155409336090088
    3. ' ,' → logprob: -5.66554069519043
    4. '#' → logprob: -5.79054069519043
    5. '<|end|>' → logprob: -5.91554069519043
    6. ' =' → logprob: -5.91554069519043
    7. 'n' → logprob: -6.66554069519043
    8. ',
' → logprob: -7.04054069519043
    9. ' (' → logprob: -7.66554069519043
    10. ')' → logprob: -7.91554069519043

Token 160: ' chaque' (ID: 21194)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49491703510284424
    2. ' #' → logprob: -2.1199169158935547
    3. '<|end|>' → logprob: -2.2449169158935547
    4. ' chaque' → logprob: -3.2449169158935547
    5. ' où' → logprob: -3.7449169158935547
    6. 'N' → logprob: -4.244916915893555
    7. 'où' → logprob: -4.494916915893555
    8. ' N' → logprob: -4.494916915893555
    9. 'n' → logprob: -4.619916915893555
    10. ' where' → logprob: -4.619916915893555

Token 161: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.4325678050518036
    2. 'ligne' → logprob: -1.057567834854126
    3. 'line' → logprob: -6.432567596435547
    4. ' sommet' → logprob: -6.807567596435547
    5. ' line' → logprob: -8.057567596435547
    6. 'l' → logprob: -9.057567596435547
    7. ' ' → logprob: -9.182567596435547
    8. 'case' → logprob: -9.182567596435547
    9. ' case' → logprob: -9.557567596435547
    10. 'i' → logprob: -9.807567596435547

Token 162: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1622302532196045
    2. ' contient' → logprob: -1.9122302532196045
    3. 'cont' → logprob: -1.9122302532196045
    4. ' comporte' → logprob: -2.2872302532196045
    5. ' =' → logprob: -2.7872302532196045
    6. ' contenant' → logprob: -3.7872302532196045
    7. 'com' → logprob: -3.9122302532196045
    8. ' cont' → logprob: -4.037230491638184
    9. '<|end|>' → logprob: -4.037230491638184
    10. ' ' → logprob: -4.162230491638184

Token 163: ' contient' (ID: 89067)
  Prédit: ' contient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.7234864234924316
    2. ' a' → logprob: -1.0984864234924316
    3. ' comporte' → logprob: -2.8484864234924316
    4. 'cont' → logprob: -2.9734864234924316
    5. ' cont' → logprob: -3.9734864234924316
    6. ' contenant' → logprob: -4.223486423492432
    7. '_cont' → logprob: -4.848486423492432
    8. 'a' → logprob: -5.348486423492432
    9. ' comport' → logprob: -5.473486423492432
    10. ' ayant' → logprob: -5.723486423492432

Token 164: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16025052964687347
    2. 'i' → logprob: -1.9102505445480347
    3. ' ' → logprob: -11.785250663757324
    4. ' (' → logprob: -12.035250663757324
    5. ' ' → logprob: -12.410250663757324
    6. ' une' → logprob: -12.910250663757324
    7. '(i' → logprob: -13.035250663757324
    8. '2' → logprob: -14.285250663757324
    9. 'une' → logprob: -14.410250663757324
    10. '	i' → logprob: -15.035250663757324

Token 165: ' somm' (ID: 44830)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1032123863697052
    2. ' somm' → logprob: -3.603212356567383
    3. 's' → logprob: -3.728212356567383
    4. ' tokens' → logprob: -4.603212356567383
    5. 'tokens' → logprob: -4.853212356567383
    6. ' +' → logprob: -5.353212356567383
    7. ' espaces' → logprob: -5.353212356567383
    8. ' éléments' → logprob: -5.728212356567383
    9. ' cases' → logprob: -5.978212356567383
    10. 'cases' → logprob: -6.228212356567383

Token 166: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.06011917069554329
    2. 'et' → logprob: -2.935119152069092
    3. 'è' → logprob: -5.935119152069092
    4. 'e' → logprob: -7.310119152069092
    5. 'es' → logprob: -7.310119152069092
    6. 'ètes' → logprob: -7.560119152069092
    7. 'ètres' → logprob: -8.18511962890625
    8. 'etes' → logprob: -8.56011962890625
    9. 'ettes' → logprob: -9.81011962890625
    10. 'èt' → logprob: -10.31011962890625

Token 167: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.698538601398468
    2. '<|end|>' → logprob: -1.0735385417938232
    3. ',' → logprob: -2.0735385417938232
    4. ' ,' → logprob: -4.698538780212402
    5. ')' → logprob: -5.448538780212402
    6. ' (' → logprob: -5.448538780212402
    7. '<|end|>' → logprob: -5.573538780212402
    8. ' =' → logprob: -5.948538780212402
    9. '#' → logprob: -5.948538780212402
    10. ' .' → logprob: -6.698538780212402

Token 168: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6521292924880981
    2. 'def' → logprob: -1.6521292924880981
    3. 'n' → logprob: -1.9021292924880981
    4. '<|end|>' → logprob: -2.4021291732788086
    5. 'import' → logprob: -2.5271291732788086
    6. ' ' → logprob: -2.5271291732788086
    7. '
' → logprob: -2.9021291732788086
    8. ',' → logprob: -3.0271291732788086
    9. ' 
' → logprob: -3.1521291732788086
    10. '[' → logprob: -4.277129173278809

Token 169: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' Chaque' (ID: 94758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7324226498603821
    2. '#' → logprob: -1.4824225902557373
    3. 'from' → logprob: -1.7324225902557373
    4. 'import' → logprob: -3.1074225902557373
    5. 'Les' → logprob: -4.732422828674316
    6. ' def' → logprob: -4.732422828674316
    7. ' #' → logprob: -4.857422828674316
    8. 'adj' → logprob: -5.232422828674316
    9. ' adjacency' → logprob: -5.232422828674316
    10. ' from' → logprob: -5.357422828674316

Token 171: ' sommet' (ID: 130502)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8175572752952576
    2. '_' → logprob: -1.6925573348999023
    3. ' line' → logprob: -1.9425573348999023
    4. ' ligne' → logprob: -2.0675573348999023
    5. ' sommet' → logprob: -3.5675573348999023
    6. ' ' → logprob: -3.9425573348999023
    7. '  ' → logprob: -4.942557334899902
    8. ' =' → logprob: -5.192557334899902
    9. ' espace' → logprob: -5.567557334899902
    10. ' space' → logprob: -5.817557334899902

Token 172: ' peut' (ID: 9216)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7638231515884399
    2. ' a' → logprob: -1.26382315158844
    3. '<|end|>' → logprob: -2.0138230323791504
    4. ' est' → logprob: -2.8888230323791504
    5. ' )' → logprob: -5.01382303237915
    6. ',' → logprob: -5.01382303237915
    7. ')' → logprob: -5.13882303237915
    8. ' contient' → logprob: -5.13882303237915
    9. ' =' → logprob: -5.26382303237915
    10. ' is' → logprob: -5.38882303237915

Token 173: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.26465415954589844
    2. ' avoir' → logprob: -2.0146541595458984
    3. 'être' → logprob: -2.8896541595458984
    4. ' conten' → logprob: -4.014654159545898
    5. ' ' → logprob: -5.514654159545898
    6. ' val' → logprob: -5.514654159545898
    7. '#' → logprob: -6.139654159545898
    8. 'avoir' → logprob: -6.139654159545898
    9. '_' → logprob: -6.264654159545898
    10. ' etre' → logprob: -6.514654159545898

Token 174: ' adj' (ID: 20251)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8108895421028137
    2. 'vide' → logprob: -1.060889482498169
    3. ' vide' → logprob: -2.310889482498169
    4. ' ' → logprob: -2.685889482498169
    5. ' occup' → logprob: -4.560889720916748
    6. 'occup' → logprob: -4.560889720916748
    7. '-' → logprob: -4.935889720916748
    8. '1' → logprob: -5.810889720916748
    9. ' rempli' → logprob: -5.935889720916748
    10. ' -' → logprob: -6.560889720916748

Token 175: 'ac' (ID: 359)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.010390660725533962
    2. 'ac' → logprob: -4.885390758514404
    3. 'a' → logprob: -6.385390758514404
    4. '#' → logprob: -8.135390281677246
    5. 'acen' → logprob: -8.385390281677246
    6. '```' → logprob: -9.010390281677246
    7. 'acé' → logprob: -9.135390281677246
    8. 'acement' → logprob: -10.010390281677246
    9. 'acency' → logprob: -10.135390281677246
    10. '#ac' → logprob: -10.510390281677246

Token 176: 'ents' (ID: 1094)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0005641150055453181
    2. 'ents' → logprob: -8.750564575195312
    3. 'e' → logprob: -9.125564575195312
    4. '#' → logprob: -9.250564575195312
    5. 'en' → logprob: -9.375564575195312
    6. 'cent' → logprob: -11.125564575195312
    7. 'et' → logprob: -11.250564575195312
    8. 'ente' → logprob: -11.250564575195312
    9. ' ent' → logprob: -11.500564575195312
    10. 'nt' → logprob: -11.750564575195312

Token 177: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7506266236305237
    2. ' à' → logprob: -1.000626564025879
    3. ' aux' → logprob: -2.125626564025879
    4. ',' → logprob: -4.000626564025879
    5. ' ' → logprob: -4.625626564025879
    6. 'es' → logprob: -5.250626564025879
    7. ' au' → logprob: -6.250626564025879
    8. ' ,' → logprob: -7.125626564025879
    9. ' de' → logprob: -7.500626564025879
    10. ' a' → logprob: -7.625626564025879

Token 178: ' plusieurs' (ID: 20875)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -1.1182844638824463
    2. ' ' → logprob: -1.7432844638824463
    3. ' up' → logprob: -1.9932844638824463
    4. '3' → logprob: -2.4932844638824463
    5. ' au' → logprob: -2.6182844638824463
    6. ' des' → logprob: -3.3682844638824463
    7. '1' → logprob: -3.4932844638824463
    8. 'up' → logprob: -4.118284225463867
    9. '0' → logprob: -4.118284225463867
    10. ' i' → logprob: -4.243284225463867

Token 179: ' somm' (ID: 44830)
  Prédit: ' somm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somm' → logprob: -0.6786599159240723
    2. ' lignes' → logprob: -1.5536599159240723
    3. ' voisins' → logprob: -2.1786599159240723
    4. 's' → logprob: -2.5536599159240723
    5. ' autres' → logprob: -3.6786599159240723
    6. ' points' → logprob: -4.178659915924072
    7. ' sommet' → logprob: -4.928659915924072
    8. ',' → logprob: -5.053659915924072
    9. '#' → logprob: -5.428659915924072
    10. ' espaces' → logprob: -5.678659915924072

Token 180: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.010815059766173363
    2. 'ents' → logprob: -4.760815143585205
    3. 'et' → logprob: -6.510815143585205
    4. 'es' → logprob: -7.510815143585205
    5. 'e' → logprob: -9.760814666748047
    6. 'êts' → logprob: -10.510814666748047
    7. '#' → logprob: -10.635814666748047
    8. 'ent' → logprob: -11.135814666748047
    9. 'ètres' → logprob: -11.510814666748047
    10. 'és' → logprob: -12.385814666748047

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37727710604667664
    2. ' ,' → logprob: -1.752277135848999
    3. ' voisins' → logprob: -3.252277135848999
    4. ' adj' → logprob: -3.377277135848999
    5. '.' → logprob: -3.877277135848999
    6. ' ' → logprob: -4.25227689743042
    7. 's' → logprob: -5.37727689743042
    8. ' (' → logprob: -5.37727689743042
    9. ' vois' → logprob: -5.50227689743042
    10. ' voisin' → logprob: -5.50227689743042

Token 182: ' suivant' (ID: 68705)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8075513243675232
    2. '#' → logprob: -1.557551383972168
    3. ' #' → logprob: -2.557551383972168
    4. ',' → logprob: -3.182551383972168
    5. ' soit' → logprob: -3.182551383972168
    6. ' ,' → logprob: -3.557551383972168
    7. ' mais' → logprob: -3.932551383972168
    8. ' dans' → logprob: -4.182551383972168
    9. ' 
' → logprob: -4.557551383972168
    10. '  
' → logprob: -4.682551383972168

Token 183: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20185454189777374
    2. ' les' → logprob: -2.9518544673919678
    3. ' l' → logprob: -3.2018544673919678
    4. ' sa' → logprob: -3.7018544673919678
    5. ' le' → logprob: -4.201854705810547
    6. ' ' → logprob: -4.201854705810547
    7. ' son' → logprob: -4.326854705810547
    8. ' leur' → logprob: -5.326854705810547
    9. ' des' → logprob: -5.576854705810547
    10. 'son' → logprob: -6.576854705810547

Token 184: ''ag' (ID: 36117)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2353276014328003
    2. 'e' → logprob: -1.9853276014328003
    3. ''' → logprob: -3.86032772064209
    4. 'u' → logprob: -4.23532772064209
    5. 'es' → logprob: -4.48532772064209
    6. ''espace' → logprob: -4.48532772064209
    7. '#' → logprob: -4.98532772064209
    8. ' a' → logprob: -6.23532772064209
    9. 's' → logprob: -6.36032772064209
    10. ''é' → logprob: -6.86032772064209

Token 185: 'encement' (ID: 100364)
  Prédit: 'encement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encement' → logprob: -0.46362268924713135
    2. 'ence' → logprob: -1.8386226892471313
    3. 'ent' → logprob: -2.338622570037842
    4. 'e' → logprob: -3.088622570037842
    5. '#' → logprob: -3.713622570037842
    6. 'r' → logprob: -4.088622570037842
    7. 'en' → logprob: -5.588622570037842
    8. 'mentation' → logprob: -6.213622570037842
    9. 'enç' → logprob: -6.213622570037842
    10. 'ement' → logprob: -6.338622570037842

Token 186: ' triang' (ID: 135805)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5912907719612122
    2. ',' → logprob: -2.3412907123565674
    3. ' des' → logprob: -2.3412907123565674
    4. '_' → logprob: -3.0912907123565674
    5. ' de' → logprob: -3.0912907123565674
    6. '<|end|>' → logprob: -3.3412907123565674
    7. ')' → logprob: -3.5912907123565674
    8. ' =' → logprob: -3.9662907123565674
    9. ' ,' → logprob: -4.3412909507751465
    10. ' )' → logprob: -4.5912909507751465

Token 187: 'ulaire' (ID: 48584)
  Prédit: 'ulaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -0.017423074692487717
    2. 'ul' → logprob: -4.642423152923584
    3. 'le' → logprob: -5.142423152923584
    4. 'l' → logprob: -8.267422676086426
    5. '```' → logprob: -8.517422676086426
    6. 'ula' → logprob: -8.767422676086426
    7. 'ulier' → logprob: -8.892422676086426
    8. 'e' → logprob: -8.892422676086426
    9. 'u' → logprob: -9.392422676086426
    10. 'ulé' → logprob: -9.392422676086426

Token 188: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.317985475063324
    2. ')' → logprob: -1.9429855346679688
    3. '<|end|>' → logprob: -3.3179855346679688
    4. ' ' → logprob: -3.8179855346679688
    5. ' ,' → logprob: -4.192985534667969
    6. '#' → logprob: -4.942985534667969
    7. ' )' → logprob: -4.942985534667969
    8. 'def' → logprob: -5.067985534667969
    9. '   ' → logprob: -5.442985534667969
    10. 's' → logprob: -5.692985534667969

Token 189: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.725227952003479
    2. 'def' → logprob: -1.975227952003479
    3. '[' → logprob: -2.6002278327941895
    4. ',' → logprob: -3.3502278327941895
    5. 'import' → logprob: -3.3502278327941895
    6. '
' → logprob: -3.3502278327941895
    7. '```' → logprob: -3.4752278327941895
    8. '\' → logprob: -3.6002278327941895
    9. '\n' → logprob: -3.8502278327941895
    10. ' 
' → logprob: -3.8502278327941895

Token 190: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22804181277751923
    2. 'def' → logprob: -2.603041887283325
    3. '#' → logprob: -3.228041887283325
    4. '[' → logprob: -3.353041887283325
    5. ' 
' → logprob: -4.353041648864746
    6. '
' → logprob: -4.603041648864746
    7. ')' → logprob: -4.728041648864746
    8. ',' → logprob: -5.478041648864746
    9. 'import' → logprob: -5.853041648864746
    10. ' def' → logprob: -5.978041648864746

Token 191: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1678822934627533
    2. '#' → logprob: -2.292882204055786
    3. 'import' → logprob: -3.292882204055786
    4. 'from' → logprob: -4.667882442474365
    5. ' def' → logprob: -5.417882442474365
    6. ' #' → logprob: -7.292882442474365
    7. ' import' → logprob: -8.167881965637207
    8. 'class' → logprob: -8.167881965637207
    9. ' ' → logprob: -8.292881965637207
    10. '```' → logprob: -8.542881965637207

Token 192: ' mod' (ID: 1812)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0443426370620728
    2. '_' → logprob: -1.1693426370620728
    3. ' ' → logprob: -2.294342517852783
    4. ' def' → logprob: -2.919342517852783
    5. ' code' → logprob: -3.419342517852783
    6. 'def' → logprob: -3.669342517852783
    7. ' a' → logprob: -3.669342517852783
    8. ' peut' → logprob: -4.669342517852783
    9. ' continu' → logprob: -4.794342517852783
    10. ' n' → logprob: -5.044342517852783

Token 193: 'él' (ID: 6778)
  Prédit: 'èle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èle' → logprob: -0.874790370464325
    2. 'ifie' → logprob: -2.1247904300689697
    3. 'é' → logprob: -2.2497904300689697
    4. 'él' → logprob: -2.4997904300689697
    5. 'ifié' → logprob: -2.4997904300689697
    6. '#' → logprob: -2.8747904300689697
    7. 'if' → logprob: -2.9997904300689697
    8. 'è' → logprob: -3.7497904300689697
    9. 'ule' → logprob: -3.9997904300689697
    10. 'ifier' → logprob: -4.749790191650391

Token 194: 'ise' (ID: 1096)
  Prédit: 'él'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'él' → logprob: -0.6494387984275818
    2. 'è' → logprob: -1.2744388580322266
    3. 'èle' → logprob: -1.8994388580322266
    4. 'é' → logprob: -3.1494388580322266
    5. 'èl' → logprob: -7.024438858032227
    6. '=' → logprob: -7.274438858032227
    7. '#' → logprob: -7.399438858032227
    8. 'er' → logprob: -7.649438858032227
    9. 'èles' → logprob: -7.774438858032227
    10. 'ère' → logprob: -8.149438858032227

Token 195: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3146778345108032
    2. ' l' → logprob: -1.9396778345108032
    3. '_' → logprob: -3.1896777153015137
    4. ' ' → logprob: -3.3146777153015137
    5. ' la' → logprob: -4.064677715301514
    6. 'le' → logprob: -4.439677715301514
    7. '_le' → logprob: -5.814677715301514
    8. ' les' → logprob: -5.939677715301514
    9. 'e' → logprob: -6.314677715301514
    10. ' un' → logprob: -6.439677715301514

Token 196: ' plateau' (ID: 78303)
  Prédit: ' plateau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plateau' → logprob: -0.17021629214286804
    2. 'plate' → logprob: -2.2952163219451904
    3. '#' → logprob: -4.295216083526611
    4. '_' → logprob: -4.420216083526611
    5. 'gr' → logprob: -5.170216083526611
    6. ' code' → logprob: -5.670216083526611
    7. ' grap' → logprob: -5.670216083526611
    8. ' plate' → logprob: -5.795216083526611
    9. ' ' → logprob: -5.920216083526611
    10. ' graph' → logprob: -6.295216083526611

Token 197: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9026264548301697
    2. ' ' → logprob: -1.5276265144348145
    3. ' =' → logprob: -1.7776265144348145
    4. 'e' → logprob: -3.1526265144348145
    5. '=' → logprob: -3.6526265144348145
    6. ' des' → logprob: -3.6526265144348145
    7. '#' → logprob: -3.7776265144348145
    8. ' en' → logprob: -3.9026265144348145
    9. ' de' → logprob: -4.2776265144348145
    10. ',' → logprob: -4.7776265144348145

Token 198: ' list' (ID: 1562)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.7728273272514343
    2. ' une' → logprob: -1.522827386856079
    3. 'liste' → logprob: -1.522827386856079
    4. 'un' → logprob: -3.022827386856079
    5. ' liste' → logprob: -4.0228271484375
    6. ' un' → logprob: -4.2728271484375
    7. 'list' → logprob: -4.7728271484375
    8. ' listes' → logprob: -5.7728271484375
    9. ' des' → logprob: -6.0228271484375
    10. 'des' → logprob: -6.3978271484375

Token 199: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06180856376886368
    2. 'es' → logprob: -2.9368085861206055
    3. '[' → logprob: -6.4368085861206055
    4. 's' → logprob: -6.5618085861206055
    5. '[]' → logprob: -6.6868085861206055
    6. ' e' → logprob: -7.5618085861206055
    7. ' =' → logprob: -7.8118085861206055
    8. '[e' → logprob: -7.9368085861206055
    9. '[
' → logprob: -8.186808586120605
    10. '=' → logprob: -8.436808586120605

Token 200: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.13736064732074738
    2. 'les' → logprob: -3.6373605728149414
    3. ' ' → logprob: -3.7623605728149414
    4. ' tous' → logprob: -3.8873605728149414
    5. ' chaque' → logprob: -4.012360572814941
    6. ' toutes' → logprob: -4.012360572814941
    7. ' l' → logprob: -4.512360572814941
    8. ' des' → logprob: -5.262360572814941
    9. ' la' → logprob: -7.137360572814941
    10. ',' → logprob: -7.262360572814941

Token 201: ' voisins' (ID: 166720)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.689009964466095
    2. ' voisins' → logprob: -1.6890099048614502
    3. ' somm' → logprob: -1.8140099048614502
    4. ' listes' → logprob: -2.56400990486145
    5. ' ar' → logprob: -4.064010143280029
    6. 's' → logprob: -5.314010143280029
    7. ' points' → logprob: -5.439010143280029
    8. ' adjacency' → logprob: -5.439010143280029
    9. ' coordonnées' → logprob: -5.564010143280029
    10. ' positions' → logprob: -5.689010143280029

Token 202: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3035292625427246
    2. '[' → logprob: -1.5535292625427246
    3. ',' → logprob: -1.6785292625427246
    4. 's' → logprob: -2.6785292625427246
    5. 'es' → logprob: -2.6785292625427246
    6. '[
' → logprob: -3.4285292625427246
    7. ']' → logprob: -3.8035292625427246
    8. ')' → logprob: -3.9285292625427246
    9. '[]' → logprob: -4.178529262542725
    10. ' ' → logprob: -4.178529262542725

Token 203: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.010801386088132858
    2. 'cha' → logprob: -5.010801315307617
    3. 'ch' → logprob: -6.885801315307617
    4. 'each' → logprob: -6.885801315307617
    5. ' each' → logprob: -7.010801315307617
    6. 's' → logprob: -8.135801315307617
    7. ' chacun' → logprob: -8.135801315307617
    8. 'Chaque' → logprob: -9.260801315307617
    9. ' sommet' → logprob: -9.385801315307617
    10. ' cha' → logprob: -9.760801315307617

Token 204: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.009050353430211544
    2. 'som' → logprob: -5.384050369262695
    3. 's' → logprob: -6.884050369262695
    4. ' noe' → logprob: -7.384050369262695
    5. ' point' → logprob: -7.759050369262695
    6. 'ligne' → logprob: -7.884050369262695
    7. ' ligne' → logprob: -7.884050369262695
    8. ' ' → logprob: -8.259050369262695
    9. ' somm' → logprob: -8.384050369262695
    10. 'n' → logprob: -9.009050369262695

Token 205: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2109640836715698
    2. '#' → logprob: -1.3359640836715698
    3. ')' → logprob: -2.5859642028808594
    4. ']' → logprob: -2.8359642028808594
    5. 's' → logprob: -2.8359642028808594
    6. 'def' → logprob: -2.9609642028808594
    7. 'import' → logprob: -2.9609642028808594
    8. ':' → logprob: -3.4609642028808594
    9. '[' → logprob: -3.5859642028808594
    10. '_' → logprob: -3.7109642028808594

Token 206: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1301366090774536
    2. ' ' → logprob: -1.2551366090774536
    3. '#' → logprob: -2.005136489868164
    4. ')' → logprob: -2.630136489868164
    5. ',' → logprob: -3.130136489868164
    6. 'def' → logprob: -3.255136489868164
    7. ']' → logprob: -3.880136489868164
    8. '[
' → logprob: -4.130136489868164
    9. ':' → logprob: -4.505136489868164
    10. '_' → logprob: -4.755136489868164

Token 207: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23142004013061523
    2. '[' → logprob: -2.6064200401306152
    3. '#' → logprob: -3.1064200401306152
    4. ')' → logprob: -3.4814200401306152
    5. ',' → logprob: -4.356420040130615
    6. ']' → logprob: -4.606420040130615
    7. 'def' → logprob: -4.731420040130615
    8. '<|end|>' → logprob: -5.606420040130615
    9. '_' → logprob: -5.731420040130615
    10. ' =' → logprob: -5.981420040130615

Token 208: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12919580936431885
    2. 'import' → logprob: -2.7541956901550293
    3. '#' → logprob: -3.3791956901550293
    4. 'from' → logprob: -4.004195690155029
    5. 'class' → logprob: -6.629195690155029
    6. 'neighbors' → logprob: -7.004195690155029
    7. ' def' → logprob: -7.129195690155029
    8. ' import' → logprob: -7.504195690155029
    9. 'n' → logprob: -8.004196166992188
    10. 'for' → logprob: -8.379196166992188

Token 209: ' utilise' (ID: 70283)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5544577836990356
    2. ' continue' → logprob: -1.9294577836990356
    3. '#' → logprob: -2.179457664489746
    4. 'n' → logprob: -4.054457664489746
    5. ' #' → logprob: -4.054457664489746
    6. 'def' → logprob: -4.054457664489746
    7. ' continu' → logprob: -4.304457664489746
    8. ' _' → logprob: -4.429457664489746
    9. ' code' → logprob: -4.679457664489746
    10. 's' → logprob: -4.804457664489746

Token 210: ' BFS' (ID: 190016)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.43428903818130493
    2. 'une' → logprob: -2.05928897857666
    3. ' un' → logprob: -2.30928897857666
    4. ' des' → logprob: -2.43428897857666
    5. 'un' → logprob: -4.05928897857666
    6. 'des' → logprob: -4.05928897857666
    7. 'collections' → logprob: -7.55928897857666
    8. 'la' → logprob: -7.93428897857666
    9. ' la' → logprob: -7.93428897857666
    10. 'deque' → logprob: -8.05928897857666

Token 211: '/' (ID: 14)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: 'DFS' (ID: 109565)
  Prédit: 'DFS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DFS' → logprob: -0.6314875483512878
    2. ' DFS' → logprob: -0.8814875483512878
    3. 'dfs' → logprob: -3.2564876079559326
    4. ' dfs' → logprob: -4.5064873695373535
    5. 'deque' → logprob: -6.2564873695373535
    6. ' depth' → logprob: -6.8814873695373535
    7. 'depth' → logprob: -7.5064873695373535
    8. ' deque' → logprob: -7.6314873695373535
    9. 'DF' → logprob: -10.131487846374512
    10. 'de' → logprob: -10.131487846374512

Token 213: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: ' trouver' (ID: 23195)
  Prédit: ' explorer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' explorer' → logprob: -0.31266316771507263
    2. 'expl' → logprob: -1.937663197517395
    3. ' trouver' → logprob: -2.6876630783081055
    4. ' parcour' → logprob: -3.4376630783081055
    5. ' identifier' → logprob: -5.0626630783081055
    6. ' visiter' → logprob: -5.4376630783081055
    7. ' rechercher' → logprob: -5.5626630783081055
    8. ' découvrir' → logprob: -6.1876630783081055
    9. ' détect' → logprob: -6.5626630783081055
    10. 'identifier' → logprob: -6.8126630783081055

Token 215: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.05245703086256981
    2. 'les' → logprob: -3.052457094192505
    3. ' des' → logprob: -6.677456855773926
    4. ' ' → logprob: -7.802456855773926
    5. ' tous' → logprob: -7.927456855773926
    6. ' la' → logprob: -8.052456855773926
    7. ' l' → logprob: -8.552456855773926
    8. '_' → logprob: -8.677456855773926
    9. ' ' → logprob: -8.677456855773926
    10. 's' → logprob: -8.927456855773926

Token 216: ' groupes' (ID: 72206)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.28257957100868225
    2. ' groupes' → logprob: -2.0325796604156494
    3. ' group' → logprob: -2.2825796604156494
    4. 'conn' → logprob: -5.28257942199707
    5. '_group' → logprob: -5.65757942199707
    6. 'groups' → logprob: -6.78257942199707
    7. ' voisins' → logprob: -6.78257942199707
    8. 'com' → logprob: -7.40757942199707
    9. ' connex' → logprob: -7.90757942199707
    10. ' groups' → logprob: -8.15757942199707

Token 217: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3343275487422943
    2. 'def' → logprob: -1.7093275785446167
    3. ' 
' → logprob: -3.834327459335327
    4. '#' → logprob: -3.959327459335327
    5. 'import' → logprob: -4.834327697753906
    6. ',' → logprob: -4.834327697753906
    7. '[' → logprob: -5.084327697753906
    8. '```' → logprob: -5.209327697753906
    9. '<|end|>' → logprob: -5.334327697753906
    10. ':' → logprob: -5.334327697753906

Token 219: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21922168135643005
    2. 'def' → logprob: -1.9692217111587524
    3. '#' → logprob: -3.844221591949463
    4. 'import' → logprob: -4.969221591949463
    5. ' 
' → logprob: -5.094221591949463
    6. '_' → logprob: -5.344221591949463
    7. '[' → logprob: -5.719221591949463
    8. ',' → logprob: -5.969221591949463
    9. '
' → logprob: -5.969221591949463
    10. 'd' → logprob: -6.594221591949463

Token 220: ' La' (ID: 3038)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4743858575820923
    2. '#' → logprob: -1.4743858575820923
    3. 'from' → logprob: -2.0993857383728027
    4. 'import' → logprob: -4.224385738372803
    5. ' from' → logprob: -5.599385738372803
    6. ' #' → logprob: -6.099385738372803
    7. ' ' → logprob: -6.724385738372803
    8. ' def' → logprob: -6.849385738372803
    9. 'for' → logprob: -7.724385738372803
    10. '```' → logprob: -7.974385738372803

Token 221: ' suppression' (ID: 78014)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.496372252702713
    2. '_' → logprob: -2.1213722229003906
    3. ' ' → logprob: -2.2463722229003906
    4. 'def' → logprob: -3.3713722229003906
    5. ' #' → logprob: -3.8713722229003906
    6. 'r' → logprob: -4.246372222900391
    7. 'e' → logprob: -4.246372222900391
    8. ' space' → logprob: -4.371372222900391
    9. 'space' → logprob: -4.621372222900391
    10. 'n' → logprob: -4.746372222900391

Token 222: ' ne' (ID: 453)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.049330200999975204
    2. ' ' → logprob: -3.549330234527588
    3. ' de' → logprob: -4.924330234527588
    4. '<|end|>' → logprob: -5.424330234527588
    5. ' d' → logprob: -6.049330234527588
    6. ' du' → logprob: -6.924330234527588
    7. 'des' → logprob: -6.924330234527588
    8. '#' → logprob: -7.299330234527588
    9. '_' → logprob: -7.674330234527588
    10. 's' → logprob: -7.924330234527588

Token 223: ' se' (ID: 458)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3274323344230652
    2. ' peut' → logprob: -2.70243239402771
    3. ' concerne' → logprob: -3.07743239402771
    4. 's' → logprob: -3.45243239402771
    5. ' se' → logprob: -3.57743239402771
    6. ' pas' → logprob: -3.82743239402771
    7. ' continue' → logprob: -4.827432155609131
    8. ' fait' → logprob: -5.327432155609131
    9. ' a' → logprob: -5.452432155609131
    10. ' pourra' → logprob: -5.577432155609131

Token 224: ' fait' (ID: 7473)
  Prédit: 'ffect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ffect' → logprob: -0.43940165638923645
    2. 'fait' → logprob: -1.189401626586914
    3. ' fait' → logprob: -3.689401626586914
    4. 'ra' → logprob: -5.064401626586914
    5. ''effect' → logprob: -5.314401626586914
    6. 'effect' → logprob: -5.689401626586914
    7. 'fera' → logprob: -5.939401626586914
    8. 'faite' → logprob: -6.314401626586914
    9. ' réalise' → logprob: -6.939401626586914
    10. ' fera' → logprob: -6.939401626586914

Token 225: ' que' (ID: 661)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.009215735830366611
    2. 'pas' → logprob: -5.384215831756592
    3. ' que' → logprob: -6.009215831756592
    4. ' jamais' → logprob: -6.634215831756592
    5. ' plus' → logprob: -7.759215831756592
    6. ' ' → logprob: -8.384215354919434
    7. ' qu' → logprob: -9.884215354919434
    8. ' uniquement' → logprob: -10.259215354919434
    9. '_pas' → logprob: -11.009215354919434
    10. ' sur' → logprob: -11.509215354919434

Token 226: ' si' (ID: 1784)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -1.175559639930725
    2. ' si' → logprob: -1.550559639930725
    3. ' pas' → logprob: -1.675559639930725
    4. 'sur' → logprob: -1.925559639930725
    5. ' lorsque' → logprob: -2.6755595207214355
    6. ' lorsqu' → logprob: -3.6755595207214355
    7. ' quand' → logprob: -4.4255595207214355
    8. 'pas' → logprob: -5.1755595207214355
    9. 'si' → logprob: -5.1755595207214355
    10. ' ' → logprob: -5.5505595207214355

Token 227: ' aucun' (ID: 41678)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.1011667475104332
    2. 'le' → logprob: -3.3511667251586914
    3. ' les' → logprob: -3.9761667251586914
    4. ' aucun' → logprob: -3.9761667251586914
    5. 'les' → logprob: -5.351166725158691
    6. ' tous' → logprob: -6.101166725158691
    7. 'leur' → logprob: -6.351166725158691
    8. ' l' → logprob: -6.351166725158691
    9. ' groupe' → logprob: -6.601166725158691
    10. 'auc' → logprob: -6.726166725158691

Token 228: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.03902449458837509
    2. ' voisin' → logprob: -3.914024591445923
    3. 'som' → logprob: -4.789024353027344
    4. 'adj' → logprob: -5.914024353027344
    5. 'vo' → logprob: -6.164024353027344
    6. 's' → logprob: -6.789024353027344
    7. ' des' → logprob: -6.914024353027344
    8. ' espace' → logprob: -7.914024353027344
    9. ' somm' → logprob: -8.039024353027344
    10. 'es' → logprob: -8.164024353027344

Token 229: ' du' (ID: 1462)
  Prédit: ' adjacent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacent' → logprob: -0.14652153849601746
    2. ' voisin' → logprob: -2.77152156829834
    3. 'adj' → logprob: -3.14652156829834
    4. ' adj' → logprob: -4.14652156829834
    5. ' n' → logprob: -4.64652156829834
    6. ' ' → logprob: -6.02152156829834
    7. '_' → logprob: -7.39652156829834
    8. '_adj' → logprob: -7.77152156829834
    9. ' voisins' → logprob: -8.39652156829834
    10. 'n' → logprob: -8.89652156829834

Token 230: ' groupe' (ID: 29494)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.026718001812696457
    2. ' groupe' → logprob: -3.6517179012298584
    3. 'group' → logprob: -9.526718139648438
    4. ' g' → logprob: -9.776718139648438
    5. 'adj' → logprob: -9.776718139648438
    6. '#' → logprob: -10.026718139648438
    7. ' voisin' → logprob: -10.026718139648438
    8. 'vo' → logprob: -10.776718139648438
    9. 'gr' → logprob: -11.151718139648438
    10. ' ' → logprob: -11.276718139648438

Token 231: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.28116366267204285
    2. ' adjacent' → logprob: -2.0311636924743652
    3. 'adj' → logprob: -2.4061636924743652
    4. 'n' → logprob: -4.281163692474365
    5. ' voisin' → logprob: -5.531163692474365
    6. ' adj' → logprob: -5.906163692474365
    7. ' ' → logprob: -7.406163692474365
    8. ' voisins' → logprob: -7.781163692474365
    9. '#' → logprob: -8.156163215637207
    10. 'vo' → logprob: -8.406163215637207

Token 232: ''est' (ID: 6616)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.63362717628479
    2. 'a' → logprob: -1.50862717628479
    3. ''est' → logprob: -1.63362717628479
    4. ''' → logprob: -3.75862717628479
    5. ' a' → logprob: -3.75862717628479
    6. '#' → logprob: -6.258626937866211
    7. ''ai' → logprob: -7.258626937866211
    8. 'adj' → logprob: -7.258626937866211
    9. ' n' → logprob: -7.508626937866211
    10. '’est' → logprob: -7.633626937866211

Token 233: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.3667422831058502
    2. ' adjacent' → logprob: -1.3667422533035278
    3. 'vide' → logprob: -3.7417423725128174
    4. 'lib' → logprob: -4.241742134094238
    5. ' vide' → logprob: -4.866742134094238
    6. ' adj' → logprob: -6.116742134094238
    7. ' libre' → logprob: -6.116742134094238
    8. ' ' → logprob: -8.616742134094238
    9. '-' → logprob: -8.866742134094238
    10. ' voisin' → logprob: -8.991742134094238

Token 234: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1831488013267517
    2. ' ' → logprob: -2.8081488609313965
    3. ' aux' → logprob: -3.8081488609313965
    4. ',' → logprob: -4.4331488609313965
    5. ' vide' → logprob: -4.6831488609313965
    6. '_' → logprob: -4.8081488609313965
    7. ' a' → logprob: -5.0581488609313965
    8. ' d' → logprob: -5.0581488609313965
    9. 'à' → logprob: -5.0581488609313965
    10. ' n' → logprob: -5.4331488609313965

Token 235: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.6599240899085999
    2. ' un' → logprob: -0.7849240899085999
    3. '0' → logprob: -4.159924030303955
    4. ' ' → logprob: -5.534924030303955
    5. 'une' → logprob: -6.534924030303955
    6. ''un' → logprob: -6.784924030303955
    7. ' aucun' → logprob: -7.034924030303955
    8. ' une' → logprob: -7.034924030303955
    9. ' None' → logprob: -7.159924030303955
    10. '-' → logprob: -7.659924030303955

Token 236: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7813527584075928
    2. ' ' → logprob: -1.5313527584075928
    3. ' sommet' → logprob: -1.9063527584075928
    4. '_' → logprob: -3.4063527584075928
    5. ' espace' → logprob: -3.5313527584075928
    6. 'es' → logprob: -3.9063527584075928
    7. 'vide' → logprob: -3.9063527584075928
    8. 'som' → logprob: -4.031352996826172
    9. 's' → logprob: -4.906352996826172
    10. ' somm' → logprob: -5.656352996826172

Token 237: ' vide' (ID: 21835)
  Prédit: ' vide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vide' → logprob: -0.641004741191864
    2. 'vide' → logprob: -0.766004741191864
    3. ' ' → logprob: -6.26600456237793
    4. '_v' → logprob: -6.26600456237793
    5. '_' → logprob: -6.51600456237793
    6. ' de' → logprob: -7.51600456237793
    7. '_vid' → logprob: -7.64100456237793
    8. ' empty' → logprob: -7.76600456237793
    9. 'vid' → logprob: -7.89100456237793
    10. ' ' → logprob: -8.76600456237793

Token 238: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.130964756011963
    2. '<|end|>' → logprob: -1.380964756011963
    3. '.' → logprob: -1.505964756011963
    4. ',' → logprob: -2.630964756011963
    5. ':' → logprob: -3.880964756011963
    6. 'def' → logprob: -4.005964756011963
    7. ' ' → logprob: -4.130964756011963
    8. 's' → logprob: -4.130964756011963
    9. '#' → logprob: -4.255964756011963
    10. ']' → logprob: -4.630964756011963

Token 239: 'import' (ID: 561)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.477353036403656
    2. '
' → logprob: -2.227353096008301
    3. 'def' → logprob: -2.477353096008301
    4. '[' → logprob: -2.727353096008301
    5. ' 
' → logprob: -3.102353096008301
    6. '#' → logprob: -3.727353096008301
    7. 'n' → logprob: -4.852353096008301
    8. ':' → logprob: -4.852353096008301
    9. ',' → logprob: -5.227353096008301
    10. '[
' → logprob: -5.352353096008301

Token 240: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0032378402538597584
    2. 'sys' → logprob: -5.753237724304199
    3. ' collections' → logprob: -10.0032377243042
    4. 'collections' → logprob: -11.1282377243042
    5. ' queue' → logprob: -16.753238677978516
    6. ' math' → logprob: -17.128238677978516
    7. '=sys' → logprob: -17.378238677978516
    8. 'queue' → logprob: -17.628238677978516
    9. ' itertools' → logprob: -17.753238677978516
    10. '(sys' → logprob: -18.378238677978516

Token 241: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5954482555389404
    2. '
' → logprob: -1.4704482555389404
    3. 'import' → logprob: -1.8454482555389404
    4. 'sys' → logprob: -3.2204482555389404
    5. '

' → logprob: -4.3454484939575195
    6. 'from' → logprob: -5.3454484939575195
    7. 'input' → logprob: -6.3454484939575195
    8. '#' → logprob: -8.84544849395752
    9. ' sys' → logprob: -8.84544849395752
    10. 'class' → logprob: -8.84544849395752

Token 242: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.037696804851293564
    2. 'sys' → logprob: -3.7876968383789062
    3. 'from' → logprob: -4.412696838378906
    4. 'import' → logprob: -6.162696838378906
    5. 'input' → logprob: -9.162696838378906
    6. ' sys' → logprob: -12.412696838378906
    7. 'class' → logprob: -13.537696838378906
    8. '#' → logprob: -13.537696838378906
    9. 'lines' → logprob: -13.662696838378906
    10. 'deque' → logprob: -13.787696838378906

Token 243: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2410798817873001
    2. '.stdin' → logprob: -1.7410799264907837
    3. '.stdout' → logprob: -3.491079807281494
    4. '.argv' → logprob: -5.616079807281494
    5. '.exit' → logprob: -6.241079807281494
    6. '.readline' → logprob: -6.866079807281494
    7. '.setdefault' → logprob: -7.741079807281494
    8. 'import' → logprob: -7.866079807281494
    9. ' .' → logprob: -8.116080284118652
    10. '.import' → logprob: -8.241080284118652

Token 244: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -6.587483221665025e-05
    2. 'limit' → logprob: -10.375065803527832
    3. '_rec' → logprob: -11.500065803527832
    4. ' recursion' → logprob: -12.000065803527832
    5. 'int' → logprob: -13.125065803527832
    6. 'import' → logprob: -13.250065803527832
    7. 'depth' → logprob: -13.250065803527832
    8. 'e' → logprob: -13.250065803527832
    9. 'ursion' → logprob: -13.625065803527832
    10. 'ult' → logprob: -13.750065803527832

Token 245: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0025898118037730455
    2. 'urs' → logprob: -6.252589702606201
    3. 'ur' → logprob: -7.502589702606201
    4. 'ursive' → logprob: -9.87759017944336
    5. 'limit' → logprob: -10.50259017944336
    6. 'ursor' → logprob: -11.12759017944336
    7. 'urf' → logprob: -11.87759017944336
    8. 'urse' → logprob: -13.12759017944336
    9. 'usr' → logprob: -13.25259017944336
    10. 'urst' → logprob: -13.50259017944336

Token 246: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -8.061054359131958e-06
    2. '_limit' → logprob: -12.250007629394531
    3. 'lim' → logprob: -13.125007629394531
    4. 'depth' → logprob: -14.125007629394531
    5. 'ursion' → logprob: -15.750007629394531
    6. ' limit' → logprob: -16.00000762939453
    7. 'imit' → logprob: -16.62500762939453
    8. 'ault' → logprob: -17.12500762939453
    9. 'limited' → logprob: -17.37500762939453
    10. 'def' → logprob: -18.62500762939453

Token 247: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018280261429026723
    2. ' (' → logprob: -8.62518310546875
    3. '=' → logprob: -13.25018310546875
    4. ' =' → logprob: -13.75018310546875
    5. '(
' → logprob: -15.62518310546875
    6. '100' → logprob: -16.25018310546875
    7. '(int' → logprob: -16.62518310546875
    8. ' ' → logprob: -17.37518310546875
    9. '((' → logprob: -18.25018310546875
    10. '10' → logprob: -18.50018310546875

Token 248: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011054771952331066
    2. '100' → logprob: -4.511054992675781
    3. '200' → logprob: -12.261054992675781
    4. ' ' → logprob: -14.011054992675781
    5. '150' → logprob: -14.261054992675781
    6. '300' → logprob: -15.011054992675781
    7. '500' → logprob: -15.261054992675781
    8. '999' → logprob: -16.76105499267578
    9. '250' → logprob: -16.88605499267578
    10. 'int' → logprob: -17.01105499267578

Token 249: '00' (ID: 504)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.3678102493286133
    2. '6' → logprob: -1.2428102493286133
    3. '000' → logprob: -3.9928102493286133
    4. '5' → logprob: -7.992810249328613
    5. '00' → logprob: -8.367810249328613
    6. '8' → logprob: -9.742810249328613
    7. '4' → logprob: -9.992810249328613
    8. '9' → logprob: -11.117810249328613
    9. '07' → logprob: -11.242810249328613
    10. '007' → logprob: -11.742810249328613

Token 250: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.078839502763003e-05
    2. ')
' → logprob: -9.750090599060059
    3. ' )' → logprob: -10.375090599060059
    4. ')

' → logprob: -14.125090599060059
    5. '
' → logprob: -15.750090599060059
    6. ')
' → logprob: -16.000091552734375
    7. 'import' → logprob: -16.625091552734375
    8. '),' → logprob: -17.125091552734375
    9. ')#' → logprob: -17.750091552734375
    10. ' )
' → logprob: -18.250091552734375

Token 251: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.249780638725497e-05
    2. 'input' → logprob: -11.375032424926758
    3. 'class' → logprob: -12.250032424926758
    4. ' def' → logprob: -12.375032424926758
    5. 'import' → logprob: -12.625032424926758
    6. 'for' → logprob: -12.875032424926758
    7. 'n' → logprob: -13.250032424926758
    8. 'while' → logprob: -13.375032424926758
    9. '```' → logprob: -14.000032424926758
    10. 'from' → logprob: -14.000032424926758

Token 252: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.8464919924736023
    2. ' main' → logprob: -1.096492052078247
    3. ' lire' → logprob: -1.596492052078247
    4. ' solve' → logprob: -4.346491813659668
    5. 'main' → logprob: -4.846491813659668
    6. 'read' → logprob: -4.971491813659668
    7. ' parse' → logprob: -6.096491813659668
    8. ' life' → logprob: -6.471491813659668
    9. 'solve' → logprob: -6.846491813659668
    10. ' levens' → logprob: -8.221491813659668

Token 253: '_board' (ID: 55737)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.108095683157444
    2. '_input' → logprob: -2.858095645904541
    3. '_' → logprob: -4.108095645904541
    4. '_plate' → logprob: -4.608095645904541
    5. '_lines' → logprob: -5.983095645904541
    6. '()' → logprob: -6.108095645904541
    7. '_triangle' → logprob: -6.108095645904541
    8. '_l' → logprob: -6.233095645904541
    9. '():' → logprob: -6.233095645904541
    10. 'int' → logprob: -6.608095645904541

Token 254: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003025729674845934
    2. ' ():' → logprob: -9.0003023147583
    3. '():
' → logprob: -9.7503023147583
    4. '(N' → logprob: -10.1253023147583
    5. '(line' → logprob: -10.5003023147583
    6. '()' → logprob: -10.6253023147583
    7. '(n' → logprob: -11.0003023147583
    8. '(' → logprob: -12.1253023147583
    9. '(size' → logprob: -12.5003023147583
    10. '(lines' → logprob: -14.1253023147583

Token 255: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003951648832298815
    2. ')' → logprob: -8.250394821166992
    3. '):
' → logprob: -9.375394821166992
    4. ' ):' → logprob: -10.000394821166992
    5. ',' → logprob: -12.875394821166992
    6. '):
' → logprob: -14.250394821166992
    7. ':' → logprob: -15.625394821166992
    8. ' )' → logprob: -16.625394821166992
    9. ')：' → logprob: -17.125394821166992
    10. '):

' → logprob: -17.250394821166992

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014704519708175212
    2. '   ' → logprob: -9.750146865844727
    3. ' board' → logprob: -9.750146865844727
    4. 'board' → logprob: -10.750146865844727
    5. '	board' → logprob: -11.875146865844727
    6. '   ' → logprob: -13.375146865844727
    7. '    ' → logprob: -15.625146865844727
    8. ' ' → logprob: -15.625146865844727
    9. '(board' → logprob: -16.625146865844727
    10. '```' → logprob: -17.500146865844727

Token 257: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.18003320693969727
    2. ' board' → logprob: -1.8050332069396973
    3. '   ' → logprob: -8.430032730102539
    4. '	board' → logprob: -10.180032730102539
    5. 'plate' → logprob: -10.805032730102539
    6. 'boards' → logprob: -12.680032730102539
    7. 'lines' → logprob: -13.430032730102539
    8. 'b' → logprob: -13.680032730102539
    9. ' ' → logprob: -13.930032730102539
    10. ' plateau' → logprob: -14.430032730102539

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313337504863739
    2. '=' → logprob: -1.3133375644683838
    3. '=[]' → logprob: -9.688337326049805
    4. '=[]
' → logprob: -12.063337326049805
    5. ' ' → logprob: -12.688337326049805
    6. '   ' → logprob: -12.938337326049805
    7. '=[' → logprob: -14.688337326049805
    8. '[N' → logprob: -15.188337326049805
    9. ')' → logprob: -15.438337326049805
    10. '  ' → logprob: -15.438337326049805

Token 259: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10554423183202744
    2. '[' → logprob: -2.355544328689575
    3. '[]
' → logprob: -5.355544090270996
    4. ' []' → logprob: -8.105544090270996
    5. '[[' → logprob: -8.855544090270996
    6. ' [' → logprob: -9.730544090270996
    7. '[n' → logprob: -10.605544090270996
    8. '{}' → logprob: -11.980544090270996
    9. '[s' → logprob: -11.980544090270996
    10. '[][]' → logprob: -12.230544090270996

Token 260: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5299524068832397
    2. '   ' → logprob: -0.9049524068832397
    3. 'for' → logprob: -5.029952526092529
    4. '	for' → logprob: -8.404952049255371
    5. '
' → logprob: -10.904952049255371
    6. '    
' → logprob: -11.404952049255371
    7. '    ' → logprob: -12.404952049255371
    8. ' ' → logprob: -12.404952049255371
    9. '  ' → logprob: -14.154952049255371
    10. ' =' → logprob: -14.154952049255371

Token 261: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02975395694375038
    2. ' for' → logprob: -3.5297539234161377
    3. '   ' → logprob: -13.029753684997559
    4. 'idx' → logprob: -14.404753684997559
    5. 'index' → logprob: -15.529753684997559
    6. '	for' → logprob: -16.279754638671875
    7. 'line' → logprob: -16.654754638671875
    8. 'offset' → logprob: -16.654754638671875
    9. ' ' → logprob: -16.904754638671875
    10. '  ' → logprob: -17.529754638671875

Token 262: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5590331554412842
    2. 'i' → logprob: -1.0590331554412842
    3. ' i' → logprob: -2.559033155441284
    4. ' _' → logprob: -5.559033393859863
    5. '_i' → logprob: -8.559033393859863
    6. ' range' → logprob: -11.059033393859863
    7. 'range' → logprob: -12.184033393859863
    8. ' ' → logprob: -13.434033393859863
    9. '   ' → logprob: -15.184033393859863
    10. ' in' → logprob: -15.184033393859863

Token 263: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012547328136861324
    2. 'in' → logprob: -4.387547492980957
    3. ' ' → logprob: -11.387547492980957
    4. '_' → logprob: -11.512547492980957
    5. 'range' → logprob: -12.137547492980957
    6. 'n' → logprob: -13.012547492980957
    7. '   ' → logprob: -13.387547492980957
    8. 's' → logprob: -14.012547492980957
    9. '0' → logprob: -14.387547492980957
    10. '1' → logprob: -14.637547492980957

Token 264: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007101670489646494
    2. ' range' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.125709533691406
    4. ' ' → logprob: -16.750709533691406
    5. '  ' → logprob: -18.000709533691406
    6. '    ' → logprob: -19.125709533691406
    7. '	range' → logprob: -19.500709533691406
    8. 'in' → logprob: -19.875709533691406
    9. '```' → logprob: -19.875709533691406
    10. '(range' → logprob: -20.000709533691406

Token 265: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31331589818000793
    2. '(N' → logprob: -1.3133158683776855
    3. '(i' → logprob: -10.313316345214844
    4. ' (' → logprob: -11.563316345214844
    5. '1' → logprob: -11.688316345214844
    6. '(n' → logprob: -13.688316345214844
    7. '(int' → logprob: -14.563316345214844
    8. 'N' → logprob: -14.813316345214844
    9. ' ' → logprob: -15.188316345214844
    10. '   ' → logprob: -15.438316345214844

Token 266: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1135283038020134
    2. '):' → logprob: -2.238528251647949
    3. '   ' → logprob: -7.863528251647949
    4. '+' → logprob: -8.61352825164795
    5. ' ):
' → logprob: -9.73852825164795
    6. ')' → logprob: -10.23852825164795
    7. ' ):' → logprob: -10.86352825164795
    8. '):
' → logprob: -11.86352825164795
    9. ' +' → logprob: -12.61352825164795
    10. '():
' → logprob: -12.86352825164795

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031489618122577667
    2. '   ' → logprob: -6.003149032592773
    3. ' line' → logprob: -8.503149032592773
    4. '    ' → logprob: -9.378149032592773
    5. '	   ' → logprob: -9.628149032592773
    6. ' lines' → logprob: -9.628149032592773
    7. ':' → logprob: -9.878149032592773
    8. '    ' → logprob: -10.628149032592773
    9. ',' → logprob: -10.753149032592773
    10. ' ' → logprob: -11.253149032592773

Token 268: ' line' (ID: 2543)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.4058096706867218
    2. '   ' → logprob: -1.9058096408843994
    3. ' line' → logprob: -2.4058096408843994
    4. 'row' → logprob: -3.1558096408843994
    5. 'line' (adapté à ' line') → logprob: -3.4058096408843994
    6. ' board' → logprob: -4.7808098793029785
    7. 'board' → logprob: -4.7808098793029785
    8. '    ' → logprob: -7.1558098793029785
    9. ' ligne' → logprob: -7.2808098793029785
    10. 'ligne' → logprob: -8.53080940246582

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11290323734283447
    2. '=' → logprob: -2.237903118133545
    3. '   ' → logprob: -9.862903594970703
    4. '=input' → logprob: -11.487903594970703
    5. '_tokens' → logprob: -11.737903594970703
    6. '_' → logprob: -13.487903594970703
    7. 's' → logprob: -13.612903594970703
    8. '=line' → logprob: -13.612903594970703
    9. 'tokens' → logprob: -13.737903594970703
    10. '    ' → logprob: -13.737903594970703

Token 270: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16023357212543488
    2. ' list' → logprob: -1.9102336168289185
    3. 'input' → logprob: -12.285233497619629
    4. 'sys' → logprob: -12.910233497619629
    5. ' sys' → logprob: -13.535233497619629
    6. '[' → logprob: -14.660233497619629
    7. ' input' → logprob: -14.910233497619629
    8. ' [' → logprob: -16.160234451293945
    9. '	list' → logprob: -16.410234451293945
    10. '[list' → logprob: -16.410234451293945

Token 271: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.024604277219623e-05
    2. '(' → logprob: -10.125040054321289
    3. 'map' → logprob: -16.50004005432129
    4. '(int' → logprob: -16.75004005432129
    5. '(input' → logprob: -18.50004005432129
    6. '(
' → logprob: -18.62504005432129
    7. ' (' → logprob: -18.75004005432129
    8. '()' → logprob: -19.12504005432129
    9. ' map' → logprob: -19.25004005432129
    10. '   ' → logprob: -19.25004005432129

Token 272: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.0033853515051305e-05
    2. '(' → logprob: -10.250060081481934
    3. 'int' → logprob: -11.125060081481934
    4. '(str' → logprob: -12.250060081481934
    5. ' int' → logprob: -13.375060081481934
    6. '=int' → logprob: -13.500060081481934
    7. ',int' → logprob: -14.000060081481934
    8. '(input' → logprob: -14.875060081481934
    9. '<int' → logprob: -14.875060081481934
    10. '[int' → logprob: -15.125060081481934

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7365472316741943
    2. ',input' → logprob: -0.9865472316741943
    3. '(input' → logprob: -2.2365472316741943
    4. '(sys' → logprob: -3.2365472316741943
    5. '(' → logprob: -6.236547470092773
    6. 'input' → logprob: -8.861547470092773
    7. ' (' → logprob: -9.861547470092773
    8. 'sys' → logprob: -10.236547470092773
    9. ' input' → logprob: -10.736547470092773
    10. ' ,' → logprob: -11.736547470092773

Token 274: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07146821916103363
    2. ' input' → logprob: -2.8214681148529053
    3. 'sys' → logprob: -4.821468353271484
    4. ' sys' → logprob: -6.571468353271484
    5. 'lambda' → logprob: -14.821468353271484
    6. ' ' → logprob: -16.321468353271484
    7. ',input' → logprob: -16.571468353271484
    8. 'stdin' → logprob: -16.571468353271484
    9. '(input' → logprob: -16.821468353271484
    10. '(sys' → logprob: -16.946468353271484

Token 275: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007106438861228526
    2. 'stdin' → logprob: -7.250710487365723
    3. '(stdin' → logprob: -15.375710487365723
    4. '.argv' → logprob: -15.625710487365723
    5. ' stdin' → logprob: -16.62571144104004
    6. '.stdout' → logprob: -16.75071144104004
    7. '.' → logprob: -17.12571144104004
    8. '.readline' → logprob: -17.37571144104004
    9. '```' → logprob: -18.12571144104004
    10. '.std' → logprob: -18.75071144104004

Token 276: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04906940087676048
    2. '.stdin' → logprob: -3.049069404602051
    3. 'stdin' → logprob: -7.674069404602051
    4. '(stdin' → logprob: -12.42406940460205
    5. '.readlines' → logprob: -12.67406940460205
    6. '.' → logprob: -12.79906940460205
    7. '.read' → logprob: -12.92406940460205
    8. 'read' → logprob: -13.29906940460205
    9. ').' → logprob: -13.54906940460205
    10. '.stdout' → logprob: -14.42406940460205

Token 277: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '()' → logprob: -12.87500286102295
    3. '(' → logprob: -16.250001907348633
    4. ' ().' → logprob: -16.625001907348633
    5. '()
' → logprob: -18.000001907348633
    6. '()[' → logprob: -18.750001907348633
    7. '.readline' → logprob: -18.875001907348633
    8. '()))' → logprob: -19.500001907348633
    9. '(i' → logprob: -20.000001907348633
    10. '().
' → logprob: -21.000001907348633

Token 278: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00840984657406807
    2. 'split' → logprob: -5.5084099769592285
    3. 'rstrip' → logprob: -5.7584099769592285
    4. 'read' → logprob: -6.7584099769592285
    5. ' strip' → logprob: -12.75840950012207
    6. 'decode' → logprob: -13.25840950012207
    7. 'str' → logprob: -16.63340950012207
    8. ')' → logprob: -16.88340950012207
    9. '(strip' → logprob: -16.88340950012207
    10. '-strip' → logprob: -17.13340950012207

Token 279: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005868944339454174
    2. '()' → logprob: -5.255868911743164
    3. '()))
' → logprob: -7.755868911743164
    4. '))' → logprob: -9.380868911743164
    5. '(' → logprob: -9.630868911743164
    6. '())' → logprob: -10.380868911743164
    7. '())))' → logprob: -11.130868911743164
    8. '()));' → logprob: -12.505868911743164
    9. '()
' → logprob: -13.130868911743164
    10. '()))
' → logprob: -14.005868911743164

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012398716062307358
    2. '        
' → logprob: -7.501239776611328
    3. ')' → logprob: -8.126239776611328
    4. '   ' → logprob: -8.251239776611328
    5. ' board' → logprob: -11.126239776611328
    6. '<|end|>' → logprob: -11.251239776611328
    7. '(board' → logprob: -11.251239776611328
    8. '
' → logprob: -11.626239776611328
    9. '[' → logprob: -11.751239776611328
    10. '.' → logprob: -11.876239776611328

Token 281: ' #' (ID: 1069)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.17987358570098877
    2. '       ' → logprob: -2.554873466491699
    3. ' board' → logprob: -2.554873466491699
    4. '   ' → logprob: -4.929873466491699
    5. 'while' → logprob: -7.179873466491699
    6. 'for' → logprob: -7.804873466491699
    7. 'if' → logprob: -8.6798734664917
    8. '	board' → logprob: -8.8048734664917
    9. ' while' → logprob: -9.0548734664917
    10. ' for' → logprob: -9.3048734664917

Token 282: ' Vér' (ID: 159169)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.055495064705610275
    2. ' board' → logprob: -3.555495023727417
    3. 'while' → logprob: -4.430495262145996
    4. 'assert' → logprob: -5.180495262145996
    5. 'for' → logprob: -5.555495262145996
    6. '   ' → logprob: -6.805495262145996
    7. ' while' → logprob: -7.055495262145996
    8. '       ' → logprob: -7.430495262145996
    9. 'if' → logprob: -7.430495262145996
    10. ' for' → logprob: -8.055495262145996

Token 283: 'ification' (ID: 3166)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.014491834677755833
    2. 'ification' → logprob: -4.889492034912109
    3. 'ifie' → logprob: -5.264492034912109
    4. 'if' → logprob: -6.639492034912109
    5. 'ifiez' → logprob: -8.01449203491211
    6. 'ify' → logprob: -10.51449203491211
    7. 'ifer' → logprob: -11.51449203491211
    8. '#' → logprob: -12.51449203491211
    9. 'ifié' → logprob: -13.26449203491211
    10. 'ified' → logprob: -13.26449203491211

Token 284: ' du' (ID: 1462)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6762784123420715
    2. 'len' → logprob: -1.3012783527374268
    3. 'if' → logprob: -1.9262783527374268
    4. '(len' → logprob: -3.4262783527374268
    5. ' len' → logprob: -3.5512783527374268
    6. '   ' → logprob: -5.301278591156006
    7. '=len' → logprob: -5.926278591156006
    8. '       ' → logprob: -6.551278591156006
    9. ' que' → logprob: -7.426278591156006
    10. ' =' → logprob: -7.551278591156006

Token 285: ' bon' (ID: 4846)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.9146995327901095e-05
    2. ' len' → logprob: -11.125019073486328
    3. 'length' → logprob: -12.500019073486328
    4. 'i' → logprob: -15.125019073486328
    5. 'long' → logprob: -16.375019073486328
    6. '(len' → logprob: -16.750019073486328
    7. 'leng' → logprob: -16.875019073486328
    8. 'l' → logprob: -17.375019073486328
    9. 'nombre' → logprob: -17.500019073486328
    10. ' ' → logprob: -17.500019073486328

Token 286: ' format' (ID: 6011)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5859199166297913
    2. 'nombre' → logprob: -0.8359199166297913
    3. 'length' → logprob: -5.3359198570251465
    4. 'format' → logprob: -6.0859198570251465
    5. 'long' → logprob: -6.7109198570251465
    6. 'tail' → logprob: -7.4609198570251465
    7. ' nombre' → logprob: -8.335920333862305
    8. 'i' → logprob: -9.335920333862305
    9. 't' → logprob: -9.460920333862305
    10. ' ' → logprob: -9.460920333862305

Token 287: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08435727655887604
    2. 'if' → logprob: -3.584357261657715
    3. '   ' → logprob: -3.709357261657715
    4. '       ' → logprob: -4.209357261657715
    5. ')' → logprob: -5.459357261657715
    6. 'assert' → logprob: -5.459357261657715
    7. '<|end|>' → logprob: -6.334357261657715
    8. '	if' → logprob: -7.334357261657715
    9. '           ' → logprob: -7.959357261657715
    10. ' assert' → logprob: -7.959357261657715

Token 288: 'i' (ID: 72)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04869217425584793
    2. ' len' → logprob: -3.048692226409912
    3. 'line' → logprob: -9.798691749572754
    4. ')' → logprob: -10.423691749572754
    5. ' line' → logprob: -11.923691749572754
    6. 'if' → logprob: -12.548691749572754
    7. '           ' → logprob: -12.798691749572754
    8. '       ' → logprob: -13.298691749572754
    9. '(len' → logprob: -13.423691749572754
    10. 'assert' → logprob: -13.423691749572754

Token 289: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6336966156959534
    2. '+' → logprob: -0.7586966156959534
    3. ' ==' → logprob: -7.133696556091309
    4. '==' → logprob: -8.883696556091309
    5. ')' → logprob: -9.633696556091309
    6. '   ' → logprob: -10.883696556091309
    7. ' !=' → logprob: -11.258696556091309
    8. ' >=' → logprob: -11.508696556091309
    9. '+i' → logprob: -11.508696556091309
    10. ' <=' → logprob: -11.883696556091309

Token 290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014060820103622973
    2. ' ' → logprob: -8.875140190124512
    3. '
' → logprob: -15.500140190124512
    4. ')' → logprob: -15.875140190124512
    5. '2' → logprob: -16.125141143798828
    6. '```' → logprob: -16.125141143798828
    7. '+' → logprob: -17.375141143798828
    8. '

' → logprob: -17.625141143798828
    9. '  ' → logprob: -17.687641143798828
    10. '   ' → logprob: -17.750141143798828

Token 291: ' somm' (ID: 44830)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8741975426673889
    2. ')' → logprob: -1.2491974830627441
    3. '==' → logprob: -1.3741974830627441
    4. ' )' → logprob: -3.249197483062744
    5. ')==' → logprob: -6.749197483062744
    6. '<=' → logprob: -6.874197483062744
    7. ' <=' → logprob: -6.999197483062744
    8. ',' → logprob: -8.624197959899902
    9. '=' → logprob: -8.874197959899902
    10. ' ' → logprob: -9.249197959899902

Token 292: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0336066372692585
    2. 'es' → logprob: -5.03360652923584
    3. 'és' → logprob: -5.03360652923584
    4. 'et' → logprob: -5.40860652923584
    5. 'ons' → logprob: -5.40860652923584
    6. '(i' → logprob: -6.90860652923584
    7. 'ées' → logprob: -7.53360652923584
    8. ')' → logprob: -7.65860652923584
    9. '[i' → logprob: -7.65860652923584
    10. 'ages' → logprob: -7.65860652923584

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39585739374160767
    2. ' ==' → logprob: -1.520857334136963
    3. '==' → logprob: -2.520857334136963
    4. ' )' → logprob: -4.145857334136963
    5. ')==' → logprob: -5.020857334136963
    6. ' !=' → logprob: -7.020857334136963
    7. '   ' → logprob: -7.145857334136963
    8. ' <=' → logprob: -7.270857334136963
    9. '))' → logprob: -7.520857334136963
    10. '<=' → logprob: -7.770857334136963

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15414997935295105
    2. ' if' → logprob: -2.0291500091552734
    3. 'if' → logprob: -4.654150009155273
    4. ')' → logprob: -7.154150009155273
    5. 'assert' → logprob: -7.904150009155273
    6. '   ' → logprob: -8.029150009155273
    7. ' assert' → logprob: -9.279150009155273
    8. ',' → logprob: -9.529150009155273
    9. ' )' → logprob: -10.404150009155273
    10. ' ' → logprob: -10.404150009155273

Token 295: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23211100697517395
    2. ' if' → logprob: -1.9821109771728516
    3. 'assert' → logprob: -2.7321109771728516
    4. ' assert' → logprob: -5.982110977172852
    5. '       ' → logprob: -6.357110977172852
    6. '   ' → logprob: -10.857110977172852
    7. 'while' → logprob: -12.857110977172852
    8. '	if' → logprob: -14.607110977172852
    9. ' ' → logprob: -14.732110977172852
    10. '           ' → logprob: -15.232110977172852

Token 296: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.31326955556869507
    2. ' len' → logprob: -1.3132696151733398
    3. '(len' → logprob: -11.81326961517334
    4. '	len' → logprob: -15.68826961517334
    5. '=len' → logprob: -16.438268661499023
    6. '       ' → logprob: -16.438268661499023
    7. 'line' → logprob: -17.313268661499023
    8. '        ' → logprob: -17.938268661499023
    9. ' line' → logprob: -18.313268661499023
    10. ',len' → logprob: -18.563268661499023

Token 297: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -5.240481914370321e-05
    2. '(' → logprob: -10.125052452087402
    3. 'line' → logprob: -11.500052452087402
    4. ' line' → logprob: -13.500052452087402
    5. '=line' → logprob: -14.875052452087402
    6. ' (' → logprob: -15.000052452087402
    7. '[line' → logprob: -16.750051498413086
    8. '#line' → logprob: -17.375051498413086
    9. '(
' → logprob: -17.750051498413086
    10. ')' → logprob: -17.750051498413086

Token 298: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6196849942207336
    2. '!=' → logprob: -0.8696849942207336
    3. ')' → logprob: -3.369684934616089
    4. ')!=' → logprob: -4.869685173034668
    5. '()!=' → logprob: -7.744685173034668
    6. '==' → logprob: -9.119685173034668
    7. ' )' → logprob: -9.244685173034668
    8. '<' → logprob: -10.619685173034668
    9. '()' → logprob: -10.869685173034668
    10. ' ==' → logprob: -11.119685173034668

Token 299: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.029932141304016113
    2. ' !=' → logprob: -3.5299320220947266
    3. '<' → logprob: -9.154932022094727
    4. '==' → logprob: -9.779932022094727
    5. '!=(' → logprob: -11.279932022094727
    6. ')!=' → logprob: -13.279932022094727
    7. '<=' → logprob: -13.404932022094727
    8. '()!=' → logprob: -13.779932022094727
    9. '!==' → logprob: -14.154932022094727
    10. ' <' → logprob: -14.404932022094727

Token 300: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11300203949213028
    2. 'i' → logprob: -2.238002061843872
    3. ' (' → logprob: -8.988001823425293
    4. '(i' → logprob: -9.863001823425293
    5. '(' → logprob: -14.238001823425293
    6. ' ' → logprob: -14.238001823425293
    7. '	i' → logprob: -14.613001823425293
    8. ' ' → logprob: -14.863001823425293
    9. '{i' → logprob: -15.488001823425293
    10. '[i' → logprob: -16.11300277709961

Token 301: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016037417575716972
    2. ' +' → logprob: -4.141037464141846
    3. '1' → logprob: -13.516036987304688
    4. '+i' → logprob: -14.391036987304688
    5. ' plus' → logprob: -15.141036987304688
    6. '0' → logprob: -15.266036987304688
    7. ' ' → logprob: -15.391036987304688
    8. '[' → logprob: -16.016036987304688
    9. '()+' → logprob: -16.391036987304688
    10. ')+' → logprob: -16.516036987304688

Token 302: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.125024795532227
    4. '
' → logprob: -17.250024795532227
    5. '```' → logprob: -18.375024795532227
    6. '  ' → logprob: -20.000024795532227
    7. '

' → logprob: -20.062524795532227
    8. '2' → logprob: -20.187524795532227
    9. '１' → logprob: -20.750024795532227
    10. ')' → logprob: -20.812524795532227

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.25000762939453
    4. '```' → logprob: -18.62500762939453
    5. '
' → logprob: -19.12500762939453
    6. '  ' → logprob: -20.31250762939453
    7. '۱' → logprob: -20.62500762939453
    8. '১' → logprob: -20.93750762939453
    9. '１' → logprob: -21.00000762939453
    10. '

' → logprob: -21.06250762939453

Token 304: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11110833287239075
    2. ':
' → logprob: -2.3611083030700684
    3. '):' → logprob: -4.736108303070068
    4. '):
' → logprob: -6.736108303070068
    5. ' or' → logprob: -7.986108303070068
    6. ':return' → logprob: -8.486108779907227
    7. ')' → logprob: -8.986108779907227
    8. '       ' → logprob: -9.361108779907227
    9. '           ' → logprob: -9.486108779907227
    10. '   ' → logprob: -10.611108779907227

Token 305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023607828188687563
    2. '       ' → logprob: -7.252360820770264
    3. ' raise' → logprob: -7.252360820770264
    4. 'raise' → logprob: -7.627360820770264
    5. ':' → logprob: -8.502360343933105
    6. 'return' → logprob: -9.627360343933105
    7. ' return' → logprob: -10.252360343933105
    8. '               ' → logprob: -10.377360343933105
    9. ',' → logprob: -10.627360343933105
    10. ' continue' → logprob: -10.752360343933105

Token 306: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0042500621639192104
    2. ' raise' → logprob: -5.7542500495910645
    3. 'continue' → logprob: -7.5042500495910645
    4. '   ' → logprob: -8.004250526428223
    5. 'return' → logprob: -9.004250526428223
    6. '       ' → logprob: -10.254250526428223
    7. '           ' → logprob: -11.254250526428223
    8. 'break' → logprob: -11.754250526428223
    9. 'exit' → logprob: -12.004250526428223
    10. ' continue' → logprob: -14.504250526428223

Token 307: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0002636006975080818
    2. ' Value' → logprob: -8.250263214111328
    3. 'Exception' → logprob: -13.250263214111328
    4. 'Assertion' → logprob: -14.750263214111328
    5. 'Runtime' → logprob: -15.625263214111328
    6. '(Value' → logprob: -17.125263214111328
    7. 'Index' → logprob: -19.125263214111328
    8. '_Value' → logprob: -19.250263214111328
    9. '_value' → logprob: -19.375263214111328
    10. 'Input' → logprob: -19.750263214111328

Token 308: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0007104054093360901
    2. 'rror' → logprob: -7.250710487365723
    3. 'ror' → logprob: -15.625710487365723
    4. 'n' → logprob: -16.500709533691406
    5. 'SError' → logprob: -16.625709533691406
    6. 'r' → logprob: -17.375709533691406
    7. 'Erro' → logprob: -18.125709533691406
    8. 'Er' → logprob: -18.250709533691406
    9. 'LError' → logprob: -18.250709533691406
    10. 'Token' → logprob: -18.625709533691406

Token 309: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.031317442655563354
    2. '(' → logprob: -3.5313174724578857
    3. '('' → logprob: -6.531317234039307
    4. '(f' → logprob: -9.781317710876465
    5. '(
' → logprob: -9.906317710876465
    6. '           ' → logprob: -14.406317710876465
    7. '("")' → logprob: -14.656317710876465
    8. '"' → logprob: -15.156317710876465
    9. ' ("' → logprob: -15.406317710876465
    10. '()' → logprob: -15.656317710876465

Token 310: 'Format' (ID: 5875)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.27929091453552246
    2. ' f' → logprob: -2.6542909145355225
    3. ' line' → logprob: -2.9042909145355225
    4. ''' → logprob: -3.5292909145355225
    5. 'Invalid' → logprob: -4.154291152954102
    6. ' "' → logprob: -4.279291152954102
    7. 'len' → logprob: -4.529291152954102
    8. ' len' → logprob: -5.029291152954102
    9. 'f' → logprob: -5.154291152954102
    10. ' lines' → logprob: -5.654291152954102

Token 311: ' d' (ID: 272)
  Prédit: ' error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' error' → logprob: -0.022649316117167473
    2. ' incorrect' → logprob: -4.89764928817749
    3. 'Error' → logprob: -5.52264928817749
    4. 'error' → logprob: -5.64764928817749
    5. ' erreur' → logprob: -6.27264928817749
    6. ' invalid' → logprob: -6.52264928817749
    7. ' d' → logprob: -6.64764928817749
    8. ' de' → logprob: -7.27264928817749
    9. ' du' → logprob: -7.77264928817749
    10. ' inval' → logprob: -8.022649765014648

Token 312: ''entrée' (ID: 115820)
  Prédit: ' incorrect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' incorrect' → logprob: -1.0681990385055542
    2. 'e' → logprob: -1.8181990385055542
    3. 'u' → logprob: -1.8181990385055542
    4. ' line' → logprob: -2.3181991577148438
    5. ' invalid' → logprob: -3.3181991577148438
    6. ''' → logprob: -3.5681991577148438
    7. 'incorrect' → logprob: -3.6931991577148438
    8. ' error' → logprob: -4.193199157714844
    9. ' le' → logprob: -4.193199157714844
    10. ' e' → logprob: -4.568199157714844

Token 313: ' incorrect' (ID: 25570)
  Prédit: ' incorrect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' incorrect' → logprob: -0.017063593491911888
    2. 'incorrect' → logprob: -5.017063617706299
    3. ' inval' → logprob: -5.017063617706299
    4. ' invalid' → logprob: -5.642063617706299
    5. 'invalid' → logprob: -9.89206314086914
    6. ' de' → logprob: -10.89206314086914
    7. 'Incorrect' → logprob: -10.89206314086914
    8. ' error' → logprob: -11.51706314086914
    9. ' du' → logprob: -11.76706314086914
    10. ' invál' → logprob: -12.01706314086914

Token 314: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.05658635124564171
    2. ')")' → logprob: -3.681586265563965
    3. ')")
' → logprob: -4.181586265563965
    4. ')' → logprob: -5.056586265563965
    5. '")
' → logprob: -5.306586265563965
    6. ' pour' → logprob: -6.556586265563965
    7. ':' → logprob: -7.431586265563965
    8. '")
' → logprob: -7.931586265563965
    9. ' )' → logprob: -8.056586265563965
    10. ' :' → logprob: -8.556586265563965

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.848420551046729e-05
    2. '   ' → logprob: -10.2500581741333
    3. '           ' → logprob: -11.6250581741333
    4. '	' → logprob: -12.3750581741333
    5. ')' → logprob: -12.5000581741333
    6. '<|end|>' → logprob: -13.1250581741333
    7. ',' → logprob: -14.3750581741333
    8. '      ' → logprob: -14.5000581741333
    9. '<|end|>' → logprob: -14.8750581741333
    10. 'board' → logprob: -15.0000581741333

Token 316: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.5811917185783386
    2. '       ' → logprob: -0.9561917185783386
    3. '   ' → logprob: -2.9561917781829834
    4. ' board' → logprob: -5.456191539764404
    5. '	board' → logprob: -9.956192016601562
    6. '
' → logprob: -10.581192016601562
    7. ' ' → logprob: -11.706192016601562
    8. '           ' → logprob: -11.831192016601562
    9. 'for' → logprob: -12.081192016601562
    10. '.board' → logprob: -12.206192016601562

Token 317: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00013381359167397022
    2. '.' → logprob: -9.000133514404297
    3. '.extend' → logprob: -11.500133514404297
    4. '.app' → logprob: -16.375133514404297
    5. ' .' → logprob: -16.375133514404297
    6. '.ap' → logprob: -18.625133514404297
    7. 'append' → logprob: -18.875133514404297
    8. '.Append' → logprob: -20.625133514404297
    9. ' +=' → logprob: -21.500133514404297
    10. ' append' → logprob: -21.625133514404297

Token 318: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. '(Line' → logprob: -18.2500057220459
    4. ' (' → logprob: -18.5000057220459
    5. '=line' → logprob: -18.6250057220459
    6. '[line' → logprob: -19.0000057220459
    7. '(
' → logprob: -19.1250057220459
    8. '(list' → logprob: -19.5000057220459
    9. ' line' → logprob: -20.0000057220459
    10. '(lines' → logprob: -20.1250057220459

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020351072307676077
    2. '   ' → logprob: -6.252035140991211
    3. ')
' → logprob: -9.377035140991211
    4. ' )' → logprob: -11.252035140991211
    5. '       ' → logprob: -11.877035140991211
    6. ')return' → logprob: -14.377035140991211
    7. '	' → logprob: -14.752035140991211
    8. '
' → logprob: -15.627035140991211
    9. ' ' → logprob: -15.877035140991211
    10. ')}' → logprob: -16.25203514099121

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010628211311995983
    2. 'return' → logprob: -7.626062870025635
    3. ' return' → logprob: -8.501062393188477
    4. '
' → logprob: -8.501062393188477
    5. '	return' → logprob: -9.626062393188477
    6. '    
' → logprob: -10.251062393188477
    7. '<|end|>' → logprob: -10.251062393188477
    8. 'def' → logprob: -11.626062393188477
    9. ')' → logprob: -12.501062393188477
    10. 'eturn' → logprob: -12.876062393188477

Token 321: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5862120389938354
    2. '   ' → logprob: -0.8362120389938354
    3. ' return' → logprob: -4.586212158203125
    4. 'def' → logprob: -11.461212158203125
    5. '	return' → logprob: -11.961212158203125
    6. '
' → logprob: -12.086212158203125
    7. ' ' → logprob: -12.586212158203125
    8. ':return' → logprob: -13.961212158203125
    9. 'eturn' → logprob: -14.586212158203125
    10. '{return' → logprob: -15.211212158203125

Token 322: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0019289902411401272
    2. ' board' → logprob: -6.251928806304932
    3. '(board' → logprob: -15.62692928314209
    4. '	board' → logprob: -16.376928329467773
    5. '   ' → logprob: -16.501928329467773
    6. '_board' → logprob: -18.876928329467773
    7. 'boards' → logprob: -19.126928329467773
    8. 'Board' → logprob: -19.626928329467773
    9. '  ' → logprob: -20.001928329467773
    10. 'b' → logprob: -20.126928329467773

Token 323: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00012023169983876869
    2. '#' → logprob: -9.500120162963867
    3. '<|end|>' → logprob: -10.500120162963867
    4. ')' → logprob: -12.125120162963867
    5. '
' → logprob: -12.625120162963867
    6. '```' → logprob: -13.000120162963867
    7. 'import' → logprob: -13.375120162963867
    8. ' def' → logprob: -13.500120162963867
    9. '<|end|>' → logprob: -14.125120162963867
    10. 'neighbors' → logprob: -14.250120162963867

Token 325: ' get' (ID: 717)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.6176041960716248
    2. 'build' → logprob: -1.6176042556762695
    3. ' get' → logprob: -1.7426042556762695
    4. 'get' → logprob: -3.2426042556762695
    5. 'adj' → logprob: -3.9926042556762695
    6. ' neighbors' → logprob: -4.6176042556762695
    7. 'neighbors' → logprob: -5.3676042556762695
    8. ' adj' → logprob: -5.9926042556762695
    9. ' voisins' → logprob: -6.4926042556762695
    10. ' adjacency' → logprob: -6.4926042556762695

Token 326: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.036309629678726196
    2. '_ad' → logprob: -3.6613097190856934
    3. '_adj' → logprob: -4.661309719085693
    4. '_ne' → logprob: -8.286309242248535
    5. '_positions' → logprob: -9.411309242248535
    6. '_board' → logprob: -9.536309242248535
    7. 'neighbors' → logprob: -10.411309242248535
    8. '_vertices' → logprob: -11.036309242248535
    9. '_edges' → logprob: -11.786309242248535
    10. 'adj' → logprob: -11.911309242248535

Token 327: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2995723485946655
    2. '(board' → logprob: -1.4245723485946655
    3. '(i' → logprob: -4.924572467803955
    4. '(' → logprob: -5.049572467803955
    5. '(row' → logprob: -6.049572467803955
    6. '(n' → logprob: -6.549572467803955
    7. '(pos' → logprob: -8.174571990966797
    8. '(position' → logprob: -8.924571990966797
    9. '(line' → logprob: -9.299571990966797
    10. '(node' → logprob: -9.799571990966797

Token 328: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ',i' → logprob: -11.625029563903809
    3. ' ,' → logprob: -11.750029563903809
    4. ',n' → logprob: -12.000029563903809
    5. ',row' → logprob: -12.750029563903809
    6. ',N' → logprob: -13.875029563903809
    7. ',node' → logprob: -14.625029563903809
    8. '   ' → logprob: -14.625029563903809
    9. ',
' → logprob: -14.875029563903809
    10. ',line' → logprob: -14.875029563903809

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007254361640661955
    2. ' neighbors' → logprob: -5.507254123687744
    3. 'neighbors' → logprob: -5.757254123687744
    4. '_neighbors' → logprob: -11.882254600524902
    5. '   ' → logprob: -13.507254600524902
    6. ' neighbours' → logprob: -13.757254600524902
    7. ' voisins' → logprob: -14.507254600524902
    8. '       ' → logprob: -15.007254600524902
    9. '```' → logprob: -16.007253646850586
    10. ' adjacency' → logprob: -16.007253646850586

Token 330: ' #' (ID: 1069)
  Prédit: ' neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -0.3158223628997803
    2. 'neighbors' → logprob: -1.3158223628997803
    3. '   ' → logprob: -6.065822601318359
    4. ' neighbours' → logprob: -9.44082260131836
    5. 'adj' → logprob: -10.31582260131836
    6. ' voisins' → logprob: -10.56582260131836
    7. 'neighbor' → logprob: -10.69082260131836
    8. ' neigh' → logprob: -11.19082260131836
    9. ' neighbor' → logprob: -11.19082260131836
    10. ' adj' → logprob: -11.31582260131836

Token 331: ' Cal' (ID: 4453)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.18000425398349762
    2. ' neighbors' → logprob: -1.8050042390823364
    3. 'adj' → logprob: -8.805004119873047
    4. '   ' → logprob: -10.305004119873047
    5. ' voisins' → logprob: -10.680004119873047
    6. 'neighbor' → logprob: -10.680004119873047
    7. ' neighbours' → logprob: -11.555004119873047
    8. 'graph' → logprob: -12.180004119873047
    9. ' adj' → logprob: -12.555004119873047
    10. ' neigh' → logprob: -13.305004119873047

Token 332: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.40988072752952576
    2. 'cul' → logprob: -1.5348807573318481
    3. 'c' → logprob: -2.1598806381225586
    4. 'cule' → logprob: -6.159880638122559
    5. 'l' → logprob: -6.284880638122559
    6. 'culated' → logprob: -6.784880638122559
    7. 'def' → logprob: -9.659880638122559
    8. 'culator' → logprob: -9.659880638122559
    9. 'culation' → logprob: -10.159880638122559
    10. 'cular' → logprob: -10.284880638122559

Token 333: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42933017015457153
    2. 'def' → logprob: -2.4293301105499268
    3. ' les' → logprob: -2.6793301105499268
    4. 's' → logprob: -2.6793301105499268
    5. '[]' → logprob: -2.9293301105499268
    6. ' la' → logprob: -4.554330348968506
    7. '[' → logprob: -4.679330348968506
    8. 'neighbors' → logprob: -4.679330348968506
    9. ' neighbors' → logprob: -5.304330348968506
    10. '_neighbors' → logprob: -5.429330348968506

Token 334: ' retourne' (ID: 178818)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.06014320254325867
    2. ' neighbors' → logprob: -3.060143232345581
    3. 'return' → logprob: -5.185142993927002
    4. ' voisins' → logprob: -6.435142993927002
    5. 'adj' → logprob: -6.685142993927002
    6. '[' → logprob: -7.560142993927002
    7. 'returns' → logprob: -7.685142993927002
    8. ' return' → logprob: -7.935142993927002
    9. 'def' → logprob: -8.06014347076416
    10. '_neighbors' → logprob: -8.43514347076416

Token 335: ' une' (ID: 2463)
  Prédit: ' neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -0.6952710747718811
    2. 'neighbors' → logprob: -0.6952710747718811
    3. ' voisins' → logprob: -6.695271015167236
    4. '[' → logprob: -7.945271015167236
    5. 'adj' → logprob: -8.445271492004395
    6. '_neighbors' → logprob: -9.320271492004395
    7. ' neighbours' → logprob: -9.820271492004395
    8. '[]' → logprob: -10.570271492004395
    9. ' adjacency' → logprob: -10.570271492004395
    10. ' adj' → logprob: -10.695271492004395

Token 336: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.02734201028943062
    2. 'dict' → logprob: -4.277341842651367
    3. 'list' → logprob: -4.652341842651367
    4. 'def' → logprob: -6.527341842651367
    5. ' liste' → logprob: -6.527341842651367
    6. '   ' → logprob: -8.902341842651367
    7. ' ' → logprob: -9.027341842651367
    8. 'gr' → logprob: -9.527341842651367
    9. 'adj' → logprob: -9.652341842651367
    10. '[' → logprob: -9.652341842651367

Token 337: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10897565633058548
    2. '[]' → logprob: -2.608975648880005
    3. ' de' → logprob: -4.858975887298584
    4. ' of' → logprob: -5.733975887298584
    5. '[
' → logprob: -5.733975887298584
    6. '   ' → logprob: -5.858975887298584
    7. '[N' → logprob: -6.233975887298584
    8. ' des' → logprob: -6.358975887298584
    9. '_neighbors' → logprob: -6.358975887298584
    10. '[][]' → logprob: -6.483975887298584

Token 338: ' voisins' (ID: 166720)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.019014596939087
    2. '[]' → logprob: -1.519014596939087
    3. 'neighbors' → logprob: -1.644014596939087
    4. 'vo' → logprob: -2.269014596939087
    5. 'lists' → logprob: -2.269014596939087
    6. 'sets' → logprob: -5.269014358520508
    7. ' voisins' → logprob: -5.519014358520508
    8. '[' → logprob: -6.144014358520508
    9. '[(' → logprob: -6.269014358520508
    10. 'adj' → logprob: -6.519014358520508

Token 339: ' pour' (ID: 1930)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5913664102554321
    2. ' =' → logprob: -1.4663664102554321
    3. 'def' → logprob: -2.8413662910461426
    4. '   ' → logprob: -3.2163662910461426
    5. '[N' → logprob: -3.2163662910461426
    6. ' pour' → logprob: -3.4663662910461426
    7. '=' → logprob: -4.716366291046143
    8. 'for' → logprob: -4.841366291046143
    9. 's' → logprob: -5.091366291046143
    10. 'pour' → logprob: -5.216366291046143

Token 340: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.03625467047095299
    2. 'each' → logprob: -3.661254644393921
    3. ' each' → logprob: -4.6612548828125
    4. 'ch' → logprob: -8.2862548828125
    5. ' chacun' → logprob: -9.9112548828125
    6. 'Chaque' → logprob: -10.2862548828125
    7. ' cada' → logprob: -10.6612548828125
    8. ' chacune' → logprob: -10.7862548828125
    9. 'cha' → logprob: -11.0362548828125
    10. '[]' → logprob: -11.2862548828125

Token 341: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.439269095659256
    2. 'som' → logprob: -1.1892690658569336
    3. 'position' → logprob: -4.439269065856934
    4. 's' → logprob: -4.689269065856934
    5. 'node' → logprob: -4.814269065856934
    6. 'ligne' → logprob: -4.939269065856934
    7. 'vertex' → logprob: -5.189269065856934
    8. 'case' → logprob: -5.564269065856934
    9. ' somm' → logprob: -6.939269065856934
    10. ' position' → logprob: -7.564269065856934

Token 342: '
' (ID: 198)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.40219855308532715
    2. '   ' → logprob: -1.5271985530853271
    3. ',' → logprob: -2.902198553085327
    4. 'def' → logprob: -3.652198553085327
    5. ' =' → logprob: -4.652198791503906
    6. ' (' → logprob: -5.152198791503906
    7. ':' → logprob: -5.777198791503906
    8. 's' → logprob: -6.152198791503906
    9. '(
' → logprob: -6.277198791503906
    10. '(' → logprob: -6.277198791503906

Token 343: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0007023811340332
    2. '(N' → logprob: -1.1257023811340332
    3. '   ' → logprob: -1.8757023811340332
    4. ',' → logprob: -3.125702381134033
    5. ' =' → logprob: -3.500702381134033
    6. ':' → logprob: -3.500702381134033
    7. 's' → logprob: -4.250702381134033
    8. '(' → logprob: -4.625702381134033
    9. ' def' → logprob: -5.250702381134033
    10. ' (' → logprob: -5.375702381134033

Token 344: ' #' (ID: 1069)
  Prédit: ' neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -0.33874115347862244
    2. 'neighbors' → logprob: -1.3387411832809448
    3. '   ' → logprob: -3.7137410640716553
    4. ' voisins' → logprob: -7.838741302490234
    5. 'adj' → logprob: -9.213741302490234
    6. ' graph' → logprob: -9.963741302490234
    7. ' adj' → logprob: -10.088741302490234
    8. ' neighbours' → logprob: -10.088741302490234
    9. 'def' → logprob: -10.213741302490234
    10. 'graph' → logprob: -10.713741302490234

Token 345: ' Chaque' (ID: 94758)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.4553239941596985
    2. ' neighbors' → logprob: -1.0803239345550537
    3. '   ' → logprob: -3.7053239345550537
    4. 'def' → logprob: -7.080324172973633
    5. ' voisins' → logprob: -8.580324172973633
    6. 'adj' → logprob: -8.580324172973633
    7. ' neighbours' → logprob: -9.205324172973633
    8. 'neighbor' → logprob: -9.705324172973633
    9. ' def' → logprob: -9.955324172973633
    10. '_neighbors' → logprob: -10.205324172973633

Token 346: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.12348712235689163
    2. ' ligne' → logprob: -3.4984872341156006
    3. 'ligne' → logprob: -4.1234869956970215
    4. ' node' → logprob: -4.1234869956970215
    5. ' line' → logprob: -4.8734869956970215
    6. 'token' → logprob: -5.3734869956970215
    7. 'node' → logprob: -5.3734869956970215
    8. 'def' → logprob: -5.3734869956970215
    9. ' voisin' → logprob: -5.3734869956970215
    10. ' token' → logprob: -5.6234869956970215

Token 347: ' identifié' (ID: 196409)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.07312075048685074
    2. 'est' → logprob: -3.4481208324432373
    3. 's' → logprob: -4.573120594024658
    4. ' =' → logprob: -4.948120594024658
    5. 'a' → logprob: -5.323120594024658
    6. ' sera' → logprob: -5.323120594024658
    7. '=' → logprob: -5.698120594024658
    8. ' is' → logprob: -5.823120594024658
    9. ' a' → logprob: -6.448120594024658
    10. ' s' → logprob: -7.948120594024658

Token 348: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.05832447484135628
    2. 'par' → logprob: -2.9333245754241943
    3. '_par' → logprob: -6.433324337005615
    4. ' ' → logprob: -6.683324337005615
    5. ',' → logprob: -8.683324813842773
    6. '	par' → logprob: -9.308324813842773
    7. ')' → logprob: -9.683324813842773
    8. '_' → logprob: -10.058324813842773
    9. ' by' → logprob: -10.183324813842773
    10. 's' → logprob: -10.558324813842773

Token 349: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08814486116170883
    2. '(i' → logprob: -3.0881447792053223
    3. '(' → logprob: -4.588144779205322
    4. ' un' → logprob: -4.963144779205322
    5. '(n' → logprob: -5.338144779205322
    6. '(N' → logprob: -5.463144779205322
    7. '(l' → logprob: -5.838144779205322
    8. 'un' → logprob: -5.838144779205322
    9. ' son' → logprob: -6.838144779205322
    10. '(index' → logprob: -7.338144779205322

Token 350: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08774595707654953
    2. 'row' → logprob: -2.7127459049224854
    3. 'line' → logprob: -4.7127461433410645
    4. 'ligne' → logprob: -5.8377461433410645
    5. 'x' → logprob: -6.2127461433410645
    6. 'r' → logprob: -6.9627461433410645
    7. ')' → logprob: -7.0877461433410645
    8. ' i' → logprob: -7.5877461433410645
    9. 'l' → logprob: -7.7127461433410645
    10. ',' → logprob: -8.212745666503906

Token 351: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011972790583968163
    2. ',j' → logprob: -4.511972904205322
    3. ' ,' → logprob: -7.136972904205322
    4. ',i' → logprob: -9.636972427368164
    5. ')' → logprob: -10.636972427368164
    6. ',n' → logprob: -11.386972427368164
    7. ',row' → logprob: -12.136972427368164
    8. '),' → logprob: -12.261972427368164
    9. ',)' → logprob: -12.636972427368164
    10. '   ' → logprob: -13.136972427368164

Token 352: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005046964157372713
    2. '),' → logprob: -5.630046844482422
    3. ',' → logprob: -7.130046844482422
    4. '):' → logprob: -7.880046844482422
    5. ' )' → logprob: -8.630046844482422
    6. ')
' → logprob: -10.380046844482422
    7. '):
' → logprob: -11.380046844482422
    8. '   ' → logprob: -11.505046844482422
    9. ' ),' → logprob: -12.630046844482422
    10. ',)' → logprob: -12.630046844482422

Token 353: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.4476025104522705
    2. 'neighbors' → logprob: -1.6976025104522705
    3. 'i' → logprob: -2.1976025104522705
    4. 'j' → logprob: -2.5726025104522705
    5. 'def' → logprob: -2.8226025104522705
    6. ' neighbors' → logprob: -2.8226025104522705
    7. '   ' → logprob: -3.1976025104522705
    8. ' j' → logprob: -3.6976025104522705
    9. ' où' → logprob: -3.9476025104522705
    10. ' ' → logprob: -4.072602272033691

Token 354: '0' (ID: 15)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.8752532601356506
    2. 'def' → logprob: -1.8752532005310059
    3. ' neighbors' → logprob: -3.000253200531006
    4. 'i' → logprob: -3.000253200531006
    5. ' voisins' → logprob: -3.000253200531006
    6. ' def' → logprob: -3.250253200531006
    7. 'vo' → logprob: -3.375253200531006
    8. 'où' → logprob: -3.500253200531006
    9. ' i' → logprob: -3.625253200531006
    10. '   ' → logprob: -4.000253200531006

Token 355: ' <=' (ID: 5017)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3029196858406067
    2. ')' → logprob: -2.177919626235962
    3. ',i' → logprob: -2.552919626235962
    4. ' ,' → logprob: -3.552919626235962
    5. ',j' → logprob: -4.302919864654541
    6. '),' → logprob: -4.552919864654541
    7. ' <=' → logprob: -5.177919864654541
    8. '   ' → logprob: -6.177919864654541
    9. '<=' → logprob: -6.427919864654541
    10. '),(' → logprob: -6.802919864654541

Token 356: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5607689023017883
    2. 'j' → logprob: -0.9357689023017883
    3. ' i' → logprob: -3.6857688426971436
    4. ' j' → logprob: -4.435769081115723
    5. ' ' → logprob: -11.560769081115723
    6. '	i' → logprob: -12.435769081115723
    7. '   ' → logprob: -12.935769081115723
    8. '	j' → logprob: -13.435769081115723
    9. ' ' → logprob: -13.685769081115723
    10. '  ' → logprob: -13.685769081115723

Token 357: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.03458581492304802
    2. ' <=' → logprob: -3.78458571434021
    3. '<' → logprob: -4.534585952758789
    4. ' <' → logprob: -8.159585952758789
    5. '<i' → logprob: -9.159585952758789
    6. '=' → logprob: -9.534585952758789
    7. '≤' → logprob: -10.409585952758789
    8. 'i' → logprob: -10.909585952758789
    9. ' i' → logprob: -11.534585952758789
    10. '=i' → logprob: -11.909585952758789

Token 358: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003805064770858735
    2. ' i' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.625380516052246
    4. ' ' → logprob: -15.750380516052246
    5. '	i' → logprob: -16.62537956237793
    6. '_i' → logprob: -17.62537956237793
    7. '```' → logprob: -17.62537956237793
    8. '  ' → logprob: -18.12537956237793
    9. ')i' → logprob: -18.12537956237793
    10. 'j' → logprob: -18.50037956237793

Token 359: ' <' (ID: 464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9314175248146057
    2. '   ' → logprob: -1.306417465209961
    3. '):' → logprob: -2.306417465209961
    4. 'def' → logprob: -2.556417465209961
    5. ',' → logprob: -2.806417465209961
    6. '):
' → logprob: -3.681417465209961
    7. '
' → logprob: -3.681417465209961
    8. '),' → logprob: -4.181417465209961
    9. ' def' → logprob: -4.806417465209961
    10. '+' → logprob: -5.181417465209961

Token 360: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0040785204619169235
    2. ' N' → logprob: -5.504078388214111
    3. '	N' → logprob: -17.004077911376953
    4. ' ' → logprob: -17.879077911376953
    5. '   ' → logprob: -18.129077911376953
    6. 'def' → logprob: -18.504077911376953
    7. 'n' → logprob: -18.504077911376953
    8. '>N' → logprob: -18.629077911376953
    9. ' ' → logprob: -19.004077911376953
    10. '=N' → logprob: -19.254077911376953

Token 361: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8205817341804504
    2. '):' → logprob: -0.8205817341804504
    3. '):
' → logprob: -3.0705816745758057
    4. ')' → logprob: -3.4455816745758057
    5. 'def' → logprob: -3.8205816745758057
    6. ',' → logprob: -4.320581912994385
    7. ':' → logprob: -6.070581912994385
    8. ' def' → logprob: -6.945581912994385
    9. '
' → logprob: -7.070581912994385
    10. ' ):' → logprob: -7.695581912994385

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005949775222688913
    2. ':' → logprob: -6.255949974060059
    3. 'def' → logprob: -6.755949974060059
    4. '):
' → logprob: -7.505949974060059
    5. '_neighbors' → logprob: -7.505949974060059
    6. ',' → logprob: -8.005949974060059
    7. 'neighbors' → logprob: -8.380949974060059
    8. ' :' → logprob: -8.505949974060059
    9. '):' → logprob: -8.505949974060059
    10. ':
' → logprob: -8.880949974060059

Token 363: ' #' (ID: 1069)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.5501003861427307
    2. ' neighbors' → logprob: -1.175100326538086
    3. '   ' → logprob: -2.175100326538086
    4. ' voisins' → logprob: -8.175100326538086
    5. 'def' → logprob: -8.675100326538086
    6. ' neighbours' → logprob: -9.175100326538086
    7. 'adj' → logprob: -10.675100326538086
    8. '_neighbors' → logprob: -10.675100326538086
    9. 'neighbor' → logprob: -10.675100326538086
    10. 'ne' → logprob: -10.800100326538086

Token 364: ' La' (ID: 3038)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.5349566340446472
    2. ' neighbors' → logprob: -1.409956693649292
    3. '   ' → logprob: -1.784956693649292
    4. 'def' → logprob: -6.659956455230713
    5. ' voisins' → logprob: -7.659956455230713
    6. ' neighbours' → logprob: -8.659956932067871
    7. 'adj' → logprob: -8.784956932067871
    8. 'neighbor' → logprob: -9.659956932067871
    9. ' def' → logprob: -9.909956932067871
    10. ' neigh' → logprob: -10.534956932067871

Token 365: ' structure' (ID: 8866)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.6408296227455139
    2. 'def' → logprob: -1.0158295631408691
    3. ' liste' → logprob: -3.640829563140869
    4. ' def' → logprob: -4.265829563140869
    5. ' voisins' → logprob: -4.265829563140869
    6. ' neighbors' → logprob: -4.390829563140869
    7. 'vo' → logprob: -4.765829563140869
    8. 'neighbor' → logprob: -5.390829563140869
    9. 'adj' → logprob: -5.390829563140869
    10. '_neighbors' → logprob: -5.515829563140869

Token 366: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005704803857952356
    2. '_neighbors' → logprob: -5.630704879760742
    3. '=' → logprob: -6.505704879760742
    4. ' des' → logprob: -8.505704879760742
    5. 'neighbors' → logprob: -8.505704879760742
    6. '_des' → logprob: -10.005704879760742
    7. 'des' → logprob: -10.005704879760742
    8. ' neighbors' → logprob: -10.755704879760742
    9. '[]' → logprob: -11.005704879760742
    10. '[' → logprob: -11.755704879760742

Token 367: ' un' (ID: 537)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.058974359184503555
    2. '{' → logprob: -3.683974266052246
    3. '[[' → logprob: -4.433974266052246
    4. '   ' → logprob: -5.183974266052246
    5. 'neighbors' → logprob: -5.933974266052246
    6. '{}
' → logprob: -6.058974266052246
    7. '[' → logprob: -6.058974266052246
    8. 'dict' → logprob: -6.058974266052246
    9. ' {}' → logprob: -6.808974266052246
    10. ' [[' → logprob: -7.308974266052246

Token 368: ' diction' (ID: 155259)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.02164270728826523
    2. ' dict' → logprob: -4.896642684936523
    3. 'list' → logprob: -5.146642684936523
    4. 'def' → logprob: -5.896642684936523
    5. 'dictionary' → logprob: -6.146642684936523
    6. '{}' → logprob: -7.271642684936523
    7. 'd' → logprob: -7.396642684936523
    8. '[' → logprob: -7.771642684936523
    9. 'default' → logprob: -8.396642684936523
    10. '[[' → logprob: -8.521642684936523

Token 369: 'naire' (ID: 30464)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.23297952115535736
    2. 'naire' → logprob: -1.9829795360565186
    3. 'ary' → logprob: -3.4829795360565186
    4. '{}' → logprob: -3.6079795360565186
    5. 'aire' → logprob: -4.9829792976379395
    6. '{
' → logprob: -5.4829792976379395
    7. '{"' → logprob: -7.3579792976379395
    8. 'ar' → logprob: -8.357979774475098
    9. '{name' → logprob: -8.982979774475098
    10. '{'' → logprob: -9.357979774475098

Token 370: ':' (ID: 25)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.27189216017723083
    2. ' =' → logprob: -2.7718920707702637
    3. ' {(' → logprob: -2.8968920707702637
    4. 'neighbors' → logprob: -3.1468920707702637
    5. ':' → logprob: -3.3968920707702637
    6. '{
' → logprob: -4.396892070770264
    7. 'def' → logprob: -5.146892070770264
    8. '   ' → logprob: -5.521892070770264
    9. '=' → logprob: -5.771892070770264
    10. '{}' → logprob: -5.771892070770264

Token 371: ' (' (ID: 350)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.1320987939834595
    2. ' neighbors' → logprob: -1.2570987939834595
    3. '{}' → logprob: -1.5070987939834595
    4. '{' → logprob: -3.00709867477417
    5. '{
' → logprob: -3.00709867477417
    6. ' {(' → logprob: -3.88209867477417
    7. '   ' → logprob: -4.13209867477417
    8. ' {' → logprob: -4.50709867477417
    9. ' {}' → logprob: -4.63209867477417
    10. ' {
' → logprob: -4.75709867477417

Token 372: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03525892645120621
    2. '(i' → logprob: -3.5352590084075928
    3. ' (' → logprob: -6.035258769989014
    4. ')' → logprob: -6.160258769989014
    5. ' i' → logprob: -8.285259246826172
    6. 'lambda' → logprob: -8.660259246826172
    7. ')i' → logprob: -8.910259246826172
    8. '(lambda' → logprob: -8.910259246826172
    9. ''i' → logprob: -9.910259246826172
    10. '(' → logprob: -9.910259246826172

Token 373: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.31353992223739624
    2. ',' → logprob: -1.313539981842041
    3. ',i' → logprob: -8.563539505004883
    4. ' ,' → logprob: -9.563539505004883
    5. ',int' → logprob: -11.563539505004883
    6. ',n' → logprob: -13.938539505004883
    7. ',J' → logprob: -14.063539505004883
    8. ',
' → logprob: -14.563539505004883
    9. '   ' → logprob: -14.688539505004883
    10. ',x' → logprob: -14.813539505004883

Token 374: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14324676990509033
    2. '):' → logprob: -2.018246650695801
    3. '):(' → logprob: -8.3932466506958
    4. ')=' → logprob: -9.2682466506958
    5. ' )' → logprob: -9.3932466506958
    6. '),' → logprob: -10.0182466506958
    7. '   ' → logprob: -10.6432466506958
    8. ')=>' → logprob: -11.0182466506958
    9. ' ):' → logprob: -11.1432466506958
    10. ')->' → logprob: -11.5182466506958

Token 375: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008781121578067541
    2. ' :' → logprob: -7.37587833404541
    3. ':[' → logprob: -9.50087833404541
    4. ':list' → logprob: -9.87587833404541
    5. ')' → logprob: -10.75087833404541
    6. ']' → logprob: -10.87587833404541
    7. '):' → logprob: -11.00087833404541
    8. ':def' → logprob: -11.25087833404541
    9. ':return' → logprob: -11.37587833404541
    10. 'def' → logprob: -11.62587833404541

Token 376: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.006905878894031048
    2. '[
' → logprob: -5.506906032562256
    3. ' [(' → logprob: -6.006906032562256
    4. '[' → logprob: -8.131905555725098
    5. ' [
' → logprob: -10.506905555725098
    6. '[((' → logprob: -10.881905555725098
    7. ' [' → logprob: -11.256905555725098
    8. '[i' → logprob: -12.256905555725098
    9. '[]' → logprob: -12.881905555725098
    10. 'set' → logprob: -14.131905555725098

Token 377: 'ni' (ID: 1906)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003931384126190096
    2. '(i' → logprob: -8.37539291381836
    3. ' i' → logprob: -9.00039291381836
    4. '   ' → logprob: -10.62539291381836
    5. ' (' → logprob: -11.75039291381836
    6. '    ' → logprob: -13.37539291381836
    7. ')i' → logprob: -13.87539291381836
    8. '     ' → logprob: -14.12539291381836
    9. ',i' → logprob: -14.37539291381836
    10. ' ' → logprob: -14.62539291381836

Token 378: ',n' (ID: 18103)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.31047967076301575
    2. ',' → logprob: -1.4354796409606934
    3. 'i' → logprob: -3.9354796409606934
    4. '_i' → logprob: -5.310479640960693
    5. '+' → logprob: -6.560479640960693
    6. ',j' → logprob: -6.560479640960693
    7. ',n' → logprob: -8.060480117797852
    8. ' ,' → logprob: -8.060480117797852
    9. '),' → logprob: -9.185480117797852
    10. ',k' → logprob: -9.310480117797852

Token 379: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0423174686729908
    2. '+' → logprob: -3.5423173904418945
    3. ',' → logprob: -5.4173173904418945
    4. ',i' → logprob: -5.7923173904418945
    5. 'ext' → logprob: -6.4173173904418945
    6. '_i' → logprob: -6.7923173904418945
    7. 'j' → logprob: -7.4173173904418945
    8. '+i' → logprob: -7.4173173904418945
    9. 'e' → logprob: -8.167317390441895
    10. ')' → logprob: -8.292317390441895

Token 380: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.022742189466953278
    2. '),(' → logprob: -4.14774227142334
    3. ')' → logprob: -5.14774227142334
    4. ' ),' → logprob: -8.02274227142334
    5. ')],' → logprob: -8.27274227142334
    6. ')]' → logprob: -8.64774227142334
    7. '),
' → logprob: -9.39774227142334
    8. ' ' → logprob: -11.64774227142334
    9. '   ' → logprob: -12.39774227142334
    10. ' )' → logprob: -12.64774227142334

Token 381: ' ...' (ID: 2550)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.31414222717285156
    2. ' (' → logprob: -1.4391422271728516
    3. '(' → logprob: -4.439142227172852
    4. '(n' → logprob: -4.439142227172852
    5. '...' → logprob: -5.689142227172852
    6. ']' → logprob: -6.314142227172852
    7. '(ii' → logprob: -7.064142227172852
    8. ')' → logprob: -7.814142227172852
    9. '...]' → logprob: -8.064142227172852
    10. '
' → logprob: -8.189142227172852

Token 382: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035072958562523127
    2. '   ' → logprob: -6.503507137298584
    3. ' ]' → logprob: -6.503507137298584
    4. ')]' → logprob: -8.628507614135742
    5. ']}' → logprob: -9.128507614135742
    6. ',' → logprob: -9.753507614135742
    7. '])' → logprob: -9.878507614135742
    8. '],' → logprob: -9.878507614135742
    9. ']
' → logprob: -10.753507614135742
    10. ')' → logprob: -11.378507614135742

Token 383: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7732622623443604
    2. 'def' → logprob: -1.2732622623443604
    3. '   ' → logprob: -1.3982622623443604
    4. '):' → logprob: -5.273262023925781
    5. ' :' → logprob: -6.023262023925781
    6. ':
' → logprob: -6.773262023925781
    7. ' def' → logprob: -7.148262023925781
    8. '{' → logprob: -7.273262023925781
    9. '():' → logprob: -7.773262023925781
    10. '):
' → logprob: -8.148262023925781

Token 384: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.26297464966773987
    2. '   ' → logprob: -1.5129746198654175
    3. ' neighbors' → logprob: -4.512974739074707
    4. 'def' → logprob: -11.762974739074707
    5. 'adj' → logprob: -12.637974739074707
    6. ' voisins' → logprob: -13.137974739074707
    7. 'neighbor' → logprob: -13.387974739074707
    8. ' neighbours' → logprob: -14.012974739074707
    9. '_neighbors' → logprob: -14.012974739074707
    10. ' ' → logprob: -14.137974739074707

Token 385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07013839483261108
    2. ' =' → logprob: -2.695138454437256
    3. '   ' → logprob: -8.945137977600098
    4. '={}' → logprob: -10.195137977600098
    5. '(N' → logprob: -11.695137977600098
    6. '={' → logprob: -11.945137977600098
    7. 'def' → logprob: -11.945137977600098
    8. ' ' → logprob: -12.820137977600098
    9. '(' → logprob: -13.195137977600098
    10. '=(' → logprob: -13.570137977600098

Token 386: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -8.160971628967673e-05
    2. 'dict' → logprob: -9.500082015991211
    3. 'default' → logprob: -12.250082015991211
    4. '{}
' → logprob: -13.875082015991211
    5. '{' → logprob: -14.000082015991211
    6. '{}

' → logprob: -15.625082015991211
    7. ' {}' → logprob: -17.50008201599121
    8. '{})' → logprob: -17.62508201599121
    9. '{}\' → logprob: -19.37508201599121
    10. '{}_' → logprob: -19.62508201599121

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008207798935472965
    2. 'for' → logprob: -5.00820779800415
    3. ' for' → logprob: -6.50820779800415
    4. '	for' → logprob: -15.883208274841309
    5. 'def' → logprob: -17.133207321166992
    6. '       ' → logprob: -18.133207321166992
    7. '    
' → logprob: -18.133207321166992
    8. ' ' → logprob: -18.758207321166992
    9. ',' → logprob: -19.133207321166992
    10. '   ' → logprob: -19.258207321166992

Token 388: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002702760975807905
    2. ' for' → logprob: -8.250269889831543
    3. '   ' → logprob: -11.625269889831543
    4. '	for' → logprob: -17.25027084350586
    5. ' ' → logprob: -17.75027084350586
    6. '
' → logprob: -19.50027084350586
    7. 'def' → logprob: -19.75027084350586
    8. 'from' → logprob: -20.12527084350586
    9. 'import' → logprob: -20.75027084350586
    10. '  ' → logprob: -21.00027084350586

Token 389: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10020763427019119
    2. ' i' → logprob: -2.350207567214966
    3. '0' → logprob: -15.350207328796387
    4. ' ' → logprob: -15.475207328796387
    5. ' range' → logprob: -15.475207328796387
    6. '   ' → logprob: -15.725207328796387
    7. 'range' → logprob: -15.975207328796387
    8. '	i' → logprob: -16.100208282470703
    9. '_i' → logprob: -17.850208282470703
    10. ' in' → logprob: -18.100208282470703

Token 390: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0182476956397295
    2. 'in' → logprob: -4.018247604370117
    3. ',' → logprob: -9.643247604370117
    4. ' ' → logprob: -10.643247604370117
    5. ' i' → logprob: -12.893247604370117
    6. '   ' → logprob: -13.143247604370117
    7. '0' → logprob: -13.768247604370117
    8. ' ,' → logprob: -14.018247604370117
    9. 'i' → logprob: -14.268247604370117
    10. '    ' → logprob: -14.643247604370117

Token 391: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3136710524559021
    2. 'range' → logprob: -1.3136711120605469
    3. '0' → logprob: -7.813671112060547
    4. ' ' → logprob: -13.063671112060547
    5. ' in' → logprob: -13.563671112060547
    6. '(range' → logprob: -14.438671112060547
    7. '   ' → logprob: -14.563671112060547
    8. '	range' → logprob: -15.188671112060547
    9. 'in' → logprob: -15.438671112060547
    10. ' xrange' → logprob: -17.438671112060547

Token 392: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.011421850882470608
    2. 'N' → logprob: -4.5114216804504395
    3. '(' → logprob: -8.261422157287598
    4. ' N' → logprob: -9.261422157287598
    5. '   ' → logprob: -11.636422157287598
    6. ' (' → logprob: -12.886422157287598
    7. ' ' → logprob: -12.886422157287598
    8. '1' → logprob: -13.761422157287598
    9. ')' → logprob: -13.761422157287598
    10. '0' → logprob: -13.886422157287598

Token 393: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3533598482608795
    2. '):' → logprob: -1.2283598184585571
    3. '   ' → logprob: -5.603359699249268
    4. '+' → logprob: -6.978359699249268
    5. '):
' → logprob: -9.478360176086426
    6. ',' → logprob: -9.978360176086426
    7. ')' → logprob: -10.103360176086426
    8. ' ):
' → logprob: -10.353360176086426
    9. ' ):' → logprob: -10.603360176086426
    10. ':' → logprob: -10.728360176086426

Token 394: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18121379613876343
    2. ' for' → logprob: -1.8062138557434082
    3. 'for' → logprob: -6.681213855743408
    4. '       ' → logprob: -8.68121337890625
    5. '	for' → logprob: -10.30621337890625
    6. ' ' → logprob: -11.68121337890625
    7. '    ' → logprob: -13.68121337890625
    8. ',' → logprob: -15.18121337890625
    9. '   ' → logprob: -15.43121337890625
    10. '	   ' → logprob: -16.05621337890625

Token 395: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08084455132484436
    2. ' for' → logprob: -2.5808446407318115
    3. '   ' → logprob: -6.330844402313232
    4. 'j' → logprob: -8.95584487915039
    5. ' j' → logprob: -10.45584487915039
    6. ' ' → logprob: -11.95584487915039
    7. '	for' → logprob: -12.33084487915039
    8. '       ' → logprob: -12.95584487915039
    9. '  ' → logprob: -14.70584487915039
    10. '    ' → logprob: -14.83084487915039

Token 396: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6934100985527039
    2. ' j' → logprob: -0.6934100985527039
    3. '0' → logprob: -8.94340991973877
    4. ' i' → logprob: -9.81840991973877
    5. 'i' → logprob: -10.19340991973877
    6. '    ' → logprob: -10.56840991973877
    7. ' ' → logprob: -11.56840991973877
    8. '   ' → logprob: -13.06840991973877
    9. '	j' → logprob: -13.19340991973877
    10. '       ' → logprob: -15.44340991973877

Token 397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012133438140153885
    2. 'in' → logprob: -4.512133598327637
    3. '   ' → logprob: -8.012133598327637
    4. '=' → logprob: -8.387133598327637
    5. '    ' → logprob: -9.137133598327637
    6. ' =' → logprob: -9.387133598327637
    7. '        ' → logprob: -9.387133598327637
    8. ')' → logprob: -9.512133598327637
    9. ' ' → logprob: -9.762133598327637
    10. '       ' → logprob: -10.762133598327637

Token 398: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3901475667953491
    2. 'range' → logprob: -1.1401475667953491
    3. '(i' → logprob: -6.515147686004639
    4. ' i' → logprob: -6.640147686004639
    5. 'i' → logprob: -8.26514720916748
    6. '0' → logprob: -9.14014720916748
    7. ' (' → logprob: -10.14014720916748
    8. '(range' → logprob: -10.39014720916748
    9. '   ' → logprob: -11.39014720916748
    10. ' ' → logprob: -11.51514720916748

Token 399: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0006101056351326406
    2. 'i' → logprob: -8.2506103515625
    3. ' (' → logprob: -8.5006103515625
    4. '(' → logprob: -9.5006103515625
    5. '   ' → logprob: -10.3756103515625
    6. ' i' → logprob: -10.5006103515625
    7. '       ' → logprob: -12.8756103515625
    8. '(N' → logprob: -13.1256103515625
    9. '0' → logprob: -13.2506103515625
    10. ')' → logprob: -13.3756103515625

Token 400: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05580424144864082
    2. ' +' → logprob: -3.4308042526245117
    3. '):' → logprob: -4.555804252624512
    4. '):
' → logprob: -4.555804252624512
    5. '   ' → logprob: -7.430804252624512
    6. ')' → logprob: -9.555804252624512
    7. '-' → logprob: -10.180804252624512
    8. ' ' → logprob: -10.180804252624512
    9. ' ):' → logprob: -10.180804252624512
    10. '       ' → logprob: -10.680804252624512

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.644463479053229e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -15.375046730041504
    4. ')' → logprob: -15.375046730041504
    5. '):
' → logprob: -15.875046730041504
    6. '
' → logprob: -16.187545776367188
    7. '0' → logprob: -16.437545776367188
    8. '2' → logprob: -16.687545776367188
    9. '```' → logprob: -16.812545776367188
    10. '  ' → logprob: -17.937545776367188

Token 402: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05546111613512039
    2. '):' → logprob: -2.9304611682891846
    3. '       ' → logprob: -8.305460929870605
    4. '   ' → logprob: -8.930460929870605
    5. '):
' → logprob: -9.305460929870605
    6. ')' → logprob: -10.180460929870605
    7. '):

' → logprob: -10.680460929870605
    8. '1' → logprob: -11.680460929870605
    9. '           ' → logprob: -12.180460929870605
    10. '()):
' → logprob: -12.680460929870605

Token 403: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017143317963927984
    2. '       ' → logprob: -6.37671422958374
    3. '   ' → logprob: -12.876714706420898
    4. '	       ' → logprob: -13.001714706420898
    5. '               ' → logprob: -13.251714706420898
    6. ',' → logprob: -13.376714706420898
    7. '```' → logprob: -14.251714706420898
    8. '         ' → logprob: -14.251714706420898
    9. ':' → logprob: -14.626714706420898
    10. '          ' → logprob: -14.751714706420898

Token 404: ' adj' (ID: 20251)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17470583319664001
    2. '   ' → logprob: -2.924705743789673
    3. 'neighbors' → logprob: -3.174705743789673
    4. 'adj' (adapté à ' adj') → logprob: -4.424705982208252
    5. ' neighbors' → logprob: -4.549705982208252
    6. '       ' → logprob: -4.799705982208252
    7. ' nbr' → logprob: -4.799705982208252
    8. 'ne' → logprob: -5.299705982208252
    9. 'n' → logprob: -5.674705982208252
    10. 'nbr' → logprob: -5.674705982208252

Token 405: ' =' (ID: 314)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.18142817914485931
    2. ' =' → logprob: -2.1814281940460205
    3. 'ac' → logprob: -3.3064281940460205
    4. 'acency' → logprob: -4.806427955627441
    5. '=' → logprob: -5.056427955627441
    6. '[' → logprob: -7.556427955627441
    7. '_neighbors' → logprob: -7.681427955627441
    8. 'oints' → logprob: -8.306427955627441
    9. '=[]' → logprob: -9.181427955627441
    10. '=[' → logprob: -9.181427955627441

Token 406: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06347434967756271
    2. '[]
' → logprob: -2.813474416732788
    3. ' []' → logprob: -6.813474178314209
    4. ' []
' → logprob: -8.063474655151367
    5. '[]

' → logprob: -9.313474655151367
    6. '[(' → logprob: -14.063474655151367
    7. '[
' → logprob: -14.563474655151367
    8. ' []

' → logprob: -15.438474655151367
    9. '[' → logprob: -15.688474655151367
    10. '[]}' → logprob: -16.938474655151367

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003597760514821857
    2. ' if' → logprob: -8.000359535217285
    3. 'if' → logprob: -11.250359535217285
    4. '		' → logprob: -12.250359535217285
    5. '#' → logprob: -13.250359535217285
    6. '            
' → logprob: -13.500359535217285
    7. ',' → logprob: -14.125359535217285
    8. '               ' → logprob: -14.750359535217285
    9. ' #' → logprob: -15.000359535217285
    10. '
' → logprob: -15.000359535217285

Token 408: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002506578341126442
    2. '           ' → logprob: -6.252506732940674
    3. '#' (adapté à ' #') → logprob: -8.002506256103516
    4. ' if' → logprob: -8.377506256103516
    5. '   ' → logprob: -11.377506256103516
    6. '               ' → logprob: -14.252506256103516
    7. '	if' → logprob: -14.627506256103516
    8. 'for' → logprob: -15.002506256103516
    9. '       ' → logprob: -15.252506256103516
    10. 'adj' → logprob: -16.752506256103516

Token 409: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00343161984346807
    2. '           ' → logprob: -6.128431797027588
    3. '#' → logprob: -6.753431797027588
    4. ' if' → logprob: -9.62843132019043
    5. '   ' → logprob: -11.75343132019043
    6. 'for' → logprob: -12.50343132019043
    7. '	if' → logprob: -14.25343132019043
    8. '       ' → logprob: -15.12843132019043
    9. '#if' → logprob: -15.87843132019043
    10. 'If' → logprob: -16.12843132019043

Token 410: '6' (ID: 21)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0052534411661326885
    2. '#' → logprob: -5.255253314971924
    3. '           ' → logprob: -11.380253791809082
    4. 'for' → logprob: -12.630253791809082
    5. ' if' → logprob: -12.880253791809082
    6. 'adj' → logprob: -13.505253791809082
    7. '#if' → logprob: -14.505253791809082
    8. '   ' → logprob: -15.005253791809082
    9. '	if' → logprob: -17.255252838134766
    10. '       ' → logprob: -17.380252838134766

Token 411: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.1972825974225998
    2. '           ' → logprob: -3.447282552719116
    3. ' if' → logprob: -3.697282552719116
    4. 'dire' → logprob: -3.697282552719116
    5. 'for' → logprob: -3.822282552719116
    6. ' for' → logprob: -3.947282552719116
    7. '#' → logprob: -4.072282791137695
    8. 'if' → logprob: -4.572282791137695
    9. ' #' → logprob: -4.697282791137695
    10. 'neighbors' → logprob: -5.197282791137695

Token 412: ' possibles' (ID: 97753)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3849976360797882
    2. ' =' → logprob: -1.3849976062774658
    3. ':' → logprob: -3.509997606277466
    4. '[
' → logprob: -4.259997844696045
    5. '[' → logprob: -5.509997844696045
    6. ':
' → logprob: -5.634997844696045
    7. '.append' → logprob: -6.009997844696045
    8. ' (' → logprob: -6.259997844696045
    9. ' if' → logprob: -6.509997844696045
    10. ' for' → logprob: -7.009997844696045

Token 413: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04133393242955208
    2. ',' → logprob: -4.91633415222168
    3. ':' → logprob: -4.91633415222168
    4. ' (' → logprob: -5.79133415222168
    5. ' if' → logprob: -5.79133415222168
    6. ' for' → logprob: -6.16633415222168
    7. '[
' → logprob: -6.16633415222168
    8. '            
' → logprob: -6.29133415222168
    9. ':
' → logprob: -6.41633415222168
    10. '
' → logprob: -6.41633415222168

Token 414: ' la' (ID: 557)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.6058900952339172
    2. '[(' → logprob: -1.3558900356292725
    3. '[' → logprob: -2.4808900356292725
    4. ' [
' → logprob: -3.9808900356292725
    5. ' le' → logprob: -4.105890274047852
    6. '(i' → logprob: -4.480890274047852
    7. ' [(' → logprob: -4.480890274047852
    8. 'le' → logprob: -4.605890274047852
    9. '(' → logprob: -4.605890274047852
    10. '[i' → logprob: -4.730890274047852

Token 415: ' grille' (ID: 99153)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.5061955451965332
    2. 'triangle' → logprob: -1.0061955451965332
    3. '[
' → logprob: -4.131195545196533
    4. ' triangle' → logprob: -4.756195545196533
    5. ' triang' → logprob: -6.506195545196533
    6. '[' → logprob: -6.756195545196533
    7. ' [
' → logprob: -7.631195545196533
    8. 'i' → logprob: -7.631195545196533
    9. '[(' → logprob: -7.756195545196533
    10. '[[' → logprob: -8.256195068359375

Token 416: ' triang' (ID: 135805)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5154857039451599
    2. ':' → logprob: -1.1404857635498047
    3. '[
' → logprob: -4.265485763549805
    4. '[i' → logprob: -4.390485763549805
    5. '#' → logprob: -4.890485763549805
    6. ' :' → logprob: -5.015485763549805
    7. '[' → logprob: -5.015485763549805
    8. ':
' → logprob: -5.015485763549805
    9. ' #' → logprob: -5.640485763549805
    10. ' =' → logprob: -5.640485763549805

Token 417: 'ulaire' (ID: 48584)
  Prédit: 'ulaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -0.0020819781348109245
    2. 'ul' → logprob: -6.252081871032715
    3. '(i' → logprob: -9.502081871032715
    4. 'ang' → logprob: -10.127081871032715
    5. '(' → logprob: -12.127081871032715
    6. 'aire' → logprob: -12.627081871032715
    7. '   ' → logprob: -12.627081871032715
    8. '[(' → logprob: -12.877081871032715
    9. '[i' → logprob: -12.877081871032715
    10. 'u' → logprob: -13.127081871032715

Token 418: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031944114714860916
    2. '
' → logprob: -4.656944274902344
    3. '            
' → logprob: -4.781944274902344
    4. ':' → logprob: -5.281944274902344
    5. ',' → logprob: -5.906944274902344
    6. ':
' → logprob: -6.531944274902344
    7. '#' → logprob: -7.156944274902344
    8. ',
' → logprob: -7.406944274902344
    9. ' if' → logprob: -8.031944274902344
    10. '<|end|>' → logprob: -8.156944274902344

Token 419: 'maximum' (ID: 78601)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8472967147827148
    2. ' (' → logprob: -0.9722967147827148
    3. '(' → logprob: -2.347296714782715
    4. '(-' → logprob: -3.222296714782715
    5. ')
' → logprob: -4.222296714782715
    6. '[
' → logprob: -4.722296714782715
    7. ' (-' → logprob: -4.847296714782715
    8. '[(' → logprob: -5.347296714782715
    9. ')' → logprob: -5.347296714782715
    10. '           ' → logprob: -5.472296714782715

Token 420: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9915831089019775
    2. '):' → logprob: -0.9915831089019775
    3. ')' → logprob: -1.8665831089019775
    4. ':' → logprob: -3.4915831089019775
    5. ',' → logprob: -3.7415831089019775
    6. '           ' → logprob: -4.116582870483398
    7. ' )' → logprob: -4.616582870483398
    8. ' ):
' → logprob: -4.616582870483398
    9. ' ):' → logprob: -4.991582870483398
    10. ' :' → logprob: -6.616582870483398

Token 421: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012535012501757592
    2. '
' → logprob: -9.37512493133545
    3. '            
' → logprob: -10.50012493133545
    4. '#' → logprob: -12.12512493133545
    5. '               ' → logprob: -13.62512493133545
    6. ' for' → logprob: -13.75012493133545
    7. '   ' → logprob: -13.87512493133545
    8. 'for' → logprob: -14.00012493133545
    9. '       ' → logprob: -14.37512493133545
    10. '		' → logprob: -14.37512493133545

Token 422: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.273576557636261
    2. ' if' → logprob: -2.148576498031616
    3. '#' (adapté à ' #') → logprob: -3.273576498031616
    4. 'if' → logprob: -3.523576498031616
    5. 'adj' → logprob: -4.023576736450195
    6. ' directions' → logprob: -4.523576736450195
    7. '
' → logprob: -4.523576736450195
    8. ' #' → logprob: -5.023576736450195
    9. ' adj' → logprob: -6.023576736450195
    10. '   ' → logprob: -6.148576736450195

Token 423: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4926770329475403
    2. 'if' → logprob: -1.2426769733428955
    3. 'adj' → logprob: -3.2426769733428955
    4. '           ' → logprob: -3.7426769733428955
    5. '#' → logprob: -4.742677211761475
    6. ' adj' → logprob: -4.867677211761475
    7. '[
' → logprob: -5.992677211761475
    8. 'for' → logprob: -5.992677211761475
    9. ' #' → logprob: -6.117677211761475
    10. ' for' → logprob: -6.242677211761475

Token 424: '1' (ID: 16)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5106899738311768
    2. 'adj' → logprob: -1.3856899738311768
    3. '#' → logprob: -2.0106899738311768
    4. 'for' → logprob: -5.260689735412598
    5. '           ' → logprob: -5.635689735412598
    6. 'dire' → logprob: -5.885689735412598
    7. 'up' → logprob: -6.510689735412598
    8. 'neighbors' → logprob: -7.260689735412598
    9. 'dirs' → logprob: -7.510689735412598
    10. '   ' → logprob: -8.010689735412598

Token 425: ')' (ID: 8)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8201534748077393
    2. '           ' → logprob: -1.0701534748077393
    3. ' if' → logprob: -2.4451534748077393
    4. '#' → logprob: -3.0701534748077393
    5. 'if' → logprob: -3.4451534748077393
    6. ' #' → logprob: -3.8201534748077393
    7. ')' → logprob: -4.69515323638916
    8. ':' → logprob: -5.07015323638916
    9. ' for' → logprob: -5.82015323638916
    10. ' =' → logprob: -6.19515323638916

Token 426: ' sommet' (ID: 130502)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.570854663848877
    2. '(i' → logprob: -1.820854663848877
    3. 'if' → logprob: -2.070854663848877
    4. ' (' → logprob: -2.195854663848877
    5. ' neighbors' → logprob: -4.695854663848877
    6. 'neighbors' → logprob: -4.695854663848877
    7. '           ' → logprob: -5.195854663848877
    8. '(' → logprob: -5.320854663848877
    9. 'adj' → logprob: -6.195854663848877
    10. ' #' → logprob: -6.695854663848877

Token 427: ' à' (ID: 1221)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8759608268737793
    2. ' =' → logprob: -1.6259608268737793
    3. ' (' → logprob: -1.8759608268737793
    4. '=' → logprob: -3.3759608268737793
    5. '=(' → logprob: -3.3759608268737793
    6. '           ' → logprob: -3.3759608268737793
    7. '=i' → logprob: -3.3759608268737793
    8. ',' → logprob: -3.8759608268737793
    9. '[i' → logprob: -4.000960826873779
    10. 's' → logprob: -5.125960826873779

Token 428: ' gauche' (ID: 58367)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.38714513182640076
    2. ' (' → logprob: -1.1371451616287231
    3. 'i' → logprob: -9.012145042419434
    4. ' ' → logprob: -9.512145042419434
    5. '   ' → logprob: -10.137145042419434
    6. '(' → logprob: -10.762145042419434
    7. '[i' → logprob: -12.637145042419434
    8. '  ' → logprob: -12.637145042419434
    9. ' i' → logprob: -13.012145042419434
    10. '
' → logprob: -13.387145042419434

Token 429: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21467410027980804
    2. ',' → logprob: -2.7146739959716797
    3. ' if' → logprob: -3.0896739959716797
    4. ' =' → logprob: -3.7146739959716797
    5. ' (' → logprob: -4.08967399597168
    6. '
' → logprob: -4.33967399597168
    7. ',
' → logprob: -4.83967399597168
    8. 'if' → logprob: -5.71467399597168
    9. ':' → logprob: -5.96467399597168
    10. '   ' → logprob: -6.08967399597168

Token 430: 'i' (ID: 72)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.836889922618866
    2. 'i' → logprob: -1.0868899822235107
    3. ' i' → logprob: -2.3368899822235107
    4. ',' → logprob: -2.7118899822235107
    5. '(i' → logprob: -3.4618899822235107
    6. ' ,' → logprob: -4.211889743804932
    7. ',i' → logprob: -4.211889743804932
    8. '(' → logprob: -6.461889743804932
    9. ')' → logprob: -7.086889743804932
    10. '           ' → logprob: -7.336889743804932

Token 431: ',' (ID: 11)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.4790216386318207
    2. ',' → logprob: -0.9790216684341431
    3. ' ,' → logprob: -5.4790215492248535
    4. '   ' → logprob: -8.104022026062012
    5. ' ' → logprob: -8.604022026062012
    6. ',i' → logprob: -9.729022026062012
    7. ',n' → logprob: -10.104022026062012
    8. ',k' → logprob: -10.604022026062012
    9. '  ' → logprob: -10.729022026062012
    10. ',(' → logprob: -11.229022026062012

Token 432: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0010407903464511037
    2. ' j' → logprob: -6.876040935516357
    3. '   ' → logprob: -12.5010404586792
    4. '    ' → logprob: -13.2510404586792
    5. ' ' → logprob: -13.6260404586792
    6. '  ' → logprob: -14.0010404586792
    7. '     ' → logprob: -15.5010404586792
    8. '	j' → logprob: -15.7510404586792
    9. '           ' → logprob: -16.501041412353516
    10. '       ' → logprob: -17.126041412353516

Token 433: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29091399908065796
    2. ')' → logprob: -2.2909140586853027
    3. ' -' → logprob: -2.9159140586853027
    4. ',' → logprob: -3.0409140586853027
    5. '   ' → logprob: -3.9159140586853027
    6. ' )' → logprob: -4.540914058685303
    7. '),' → logprob: -4.915914058685303
    8. ' ' → logprob: -5.290914058685303
    9. ' ,' → logprob: -6.165914058685303
    10. ' ),' → logprob: -6.290914058685303

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ')' → logprob: -12.875003814697266
    3. ' ' → logprob: -13.750003814697266
    4. '```' → logprob: -15.750003814697266
    5. '   ' → logprob: -16.375003814697266
    6. '+' → logprob: -17.250003814697266
    7. '0' → logprob: -17.375003814697266
    8. ')
' → logprob: -17.625003814697266
    9. '``' → logprob: -18.500003814697266
    10. '-' → logprob: -18.750003814697266

Token 435: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12024783343076706
    2. ')
' → logprob: -2.2452478408813477
    3. '           ' → logprob: -5.245247840881348
    4. '),' → logprob: -6.370247840881348
    5. '),
' → logprob: -8.870247840881348
    6. ')
' → logprob: -9.245247840881348
    7. ' )' → logprob: -9.870247840881348
    8. ' )
' → logprob: -10.120247840881348
    9. '   ' → logprob: -10.370247840881348
    10. ' ' → logprob: -11.620247840881348

Token 436: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004276650492101908
    2. ' if' → logprob: -6.004276752471924
    3. ',' → logprob: -7.254276752471924
    4. '            
' → logprob: -7.629276752471924
    5. 'if' → logprob: -8.879276275634766
    6. '       ' → logprob: -8.879276275634766
    7. ')' → logprob: -9.129276275634766
    8. ' (' → logprob: -10.129276275634766
    9. ',
' → logprob: -10.379276275634766
    10. '   ' → logprob: -10.754276275634766

Token 437: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.42878907918930054
    2. ' j' → logprob: -1.0537891387939453
    3. ' ' → logprob: -10.678789138793945
    4. '0' → logprob: -10.803789138793945
    5. ' ' → logprob: -11.428789138793945
    6. '   ' → logprob: -11.553789138793945
    7. '	j' → logprob: -11.803789138793945
    8. '(j' → logprob: -12.178789138793945
    9. '_j' → logprob: -12.803789138793945
    10. ' (' → logprob: -13.053789138793945

Token 438: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47631144523620605
    2. '>' → logprob: -0.976311445236206
    3. '-' → logprob: -6.226311683654785
    4. ')' → logprob: -9.601311683654785
    5. ' -' → logprob: -9.851311683654785
    6. ')>' → logprob: -9.851311683654785
    7. '+' → logprob: -10.351311683654785
    8. '1' → logprob: -12.101311683654785
    9. '```' → logprob: -12.101311683654785
    10. ' ' → logprob: -12.601311683654785

Token 439: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01255050115287304
    2. ' ' → logprob: -4.387550354003906
    3. '>' → logprob: -10.762550354003906
    4. '=' → logprob: -11.262550354003906
    5. '1' → logprob: -13.137550354003906
    6. ' >' → logprob: -13.387550354003906
    7. ' ' → logprob: -14.387550354003906
    8. '   ' → logprob: -14.387550354003906
    9. '```' → logprob: -14.512550354003906
    10. ')' → logprob: -15.387550354003906

Token 440: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0057384599931538105
    2. ',' → logprob: -5.880738258361816
    3. ',
' → logprob: -6.880738258361816
    4. '            
' → logprob: -7.005738258361816
    5. '       ' → logprob: -8.130738258361816
    6. '
' → logprob: -8.755738258361816
    7. '\n' → logprob: -9.630738258361816
    8. '               ' → logprob: -9.880738258361816
    9. ')' → logprob: -9.880738258361816
    10. '<|end|>' → logprob: -10.005738258361816

Token 441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010371197015047073
    2. ',' → logprob: -4.885371208190918
    3. '            
' → logprob: -6.510371208190918
    4. ',
' → logprob: -7.385371208190918
    5. ' 
' → logprob: -8.760371208190918
    6. ' ,' → logprob: -9.635371208190918
    7. '[' → logprob: -9.760371208190918
    8. '           
' → logprob: -9.760371208190918
    9. ' ,
' → logprob: -9.885371208190918
    10. '\n' → logprob: -10.385371208190918

Token 442: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0588882714509964
    2. ' if' → logprob: -3.0588881969451904
    3. 'if' (adapté à ' if') → logprob: -4.6838884353637695
    4. '            
' → logprob: -7.9338884353637695
    5. ',' → logprob: -8.80888843536377
    6. ' 
' → logprob: -8.80888843536377
    7. '               ' → logprob: -10.05888843536377
    8. '            ' → logprob: -10.30888843536377
    9. ' ' → logprob: -10.43388843536377
    10. '		' → logprob: -10.80888843536377

Token 443: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0889589861035347
    2. 'j' → logprob: -2.463958978652954
    3. ' ' → logprob: -12.088958740234375
    4. '   ' → logprob: -12.588958740234375
    5. '    ' → logprob: -12.963958740234375
    6. ' (' → logprob: -13.338958740234375
    7. '	j' → logprob: -13.588958740234375
    8. '(j' → logprob: -13.713958740234375
    9. ' i' → logprob: -13.963958740234375
    10. '(' → logprob: -14.463958740234375

Token 444: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.044627346098423004
    2. ' -' → logprob: -4.0446271896362305
    3. '>' → logprob: -4.1696271896362305
    4. '-' → logprob: -4.5446271896362305
    5. '   ' → logprob: -10.29462718963623
    6. ' ' → logprob: -11.91962718963623
    7. '           ' → logprob: -13.79462718963623
    8. '  ' → logprob: -13.91962718963623
    9. '1' → logprob: -14.29462718963623
    10. '    ' → logprob: -14.66962718963623

Token 445: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003805064770858735
    2. ' ' → logprob: -7.875380516052246
    3. '=' → logprob: -14.750380516052246
    4. '   ' → logprob: -17.75037956237793
    5. '  ' → logprob: -19.75037956237793
    6. '           ' → logprob: -20.25037956237793
    7. '    ' → logprob: -20.25037956237793
    8. '     ' → logprob: -20.50037956237793
    9. '1' → logprob: -20.62537956237793
    10. '>' → logprob: -20.87537956237793

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.250019073486328
    4. '=' → logprob: -17.375019073486328
    5. '  ' → logprob: -19.750019073486328
    6. '>' → logprob: -20.625019073486328
    7. '     ' → logprob: -21.125019073486328
    8. '1' → logprob: -21.500019073486328
    9. '۰' → logprob: -21.500019073486328
    10. '    ' → logprob: -21.625019073486328

Token 447: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7233672142028809
    2. '               ' → logprob: -1.0983672142028809
    3. ':' → logprob: -1.8483672142028809
    4. '           ' → logprob: -3.973367214202881
    5. ' :
' → logprob: -5.848367214202881
    6. '):
' → logprob: -7.223367214202881
    7. ' and' → logprob: -7.723367214202881
    8. ' :' → logprob: -7.723367214202881
    9. ' adj' → logprob: -8.598367691040039
    10. ',' → logprob: -9.098367691040039

Token 448: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2260364294052124
    2. ' adj' → logprob: -1.6010364294052124
    3. 'adj' → logprob: -8.726036071777344
    4. '           ' → logprob: -8.851036071777344
    5. ' ' → logprob: -9.476036071777344
    6. ',' → logprob: -9.976036071777344
    7. ' and' → logprob: -9.976036071777344
    8. ':' → logprob: -10.601036071777344
    9. '                   ' → logprob: -10.726036071777344
    10. ' ' → logprob: -10.851036071777344

Token 449: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.6932674050331116
    2. 'adj' (adapté à ' adj') → logprob: -0.6932674050331116
    3. '               ' → logprob: -9.193267822265625
    4. '   ' → logprob: -11.943267822265625
    5. '           ' → logprob: -12.068267822265625
    6. 'ad' → logprob: -12.568267822265625
    7. '(adj' → logprob: -13.568267822265625
    8. ' ' → logprob: -15.068267822265625
    9. '                   ' → logprob: -15.193267822265625
    10. '  ' → logprob: -15.443267822265625

Token 450: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016420685278717428
    2. '.' → logprob: -8.750164031982422
    3. ' .' → logprob: -12.125164031982422
    4. 'append' → logprob: -16.000164031982422
    5. '.app' → logprob: -16.625164031982422
    6. '.ap' → logprob: -17.125164031982422
    7. ').' → logprob: -19.000164031982422
    8. '.ad' → logprob: -19.250164031982422
    9. '.Append' → logprob: -19.875164031982422
    10. '   ' → logprob: -19.875164031982422

Token 451: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1602286994457245
    2. ' (' → logprob: -1.9102287292480469
    3. '(I' → logprob: -13.035228729248047
    4. '(ii' → logprob: -13.660228729248047
    5. '(' → logprob: -14.160228729248047
    6. '               ' → logprob: -15.160228729248047
    7. '                   ' → logprob: -16.535228729248047
    8. '(iv' → logprob: -16.660228729248047
    9. '   ' → logprob: -18.035228729248047
    10. ' ' → logprob: -18.285228729248047

Token 452: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.518582762917504e-05
    2. ' i' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.62508487701416
    4. '           ' → logprob: -17.875085830688477
    5. '	i' → logprob: -17.875085830688477
    6. ')i' → logprob: -18.000085830688477
    7. '(i' → logprob: -18.375085830688477
    8. '  ' → logprob: -19.625085830688477
    9. ' ' → logprob: -19.750085830688477
    10. ',i' → logprob: -19.875085830688477

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04746890813112259
    2. ',j' → logprob: -3.297468900680542
    3. ' ,' → logprob: -4.672469139099121
    4. ' ' → logprob: -10.922469139099121
    5. '   ' → logprob: -12.047469139099121
    6. '  ' → logprob: -13.422469139099121
    7. ',i' → logprob: -13.547469139099121
    8. ',n' → logprob: -13.797469139099121
    9. ',
' → logprob: -13.922469139099121
    10. '    ' → logprob: -14.047469139099121

Token 454: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00020401719666551799
    2. ' j' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.125204086303711
    4. ' ' → logprob: -16.00020408630371
    5. '  ' → logprob: -17.00020408630371
    6. '    ' → logprob: -17.25020408630371
    7. '	j' → logprob: -17.62520408630371
    8. '     ' → logprob: -17.62520408630371
    9. '       ' → logprob: -18.87520408630371
    10. '(j' → logprob: -19.50020408630371

Token 455: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0076079354621469975
    2. ' -' → logprob: -4.882607936859131
    3. '1' → logprob: -14.007607460021973
    4. '   ' → logprob: -14.382607460021973
    5. ' ' → logprob: -15.632607460021973
    6. ')' → logprob: -16.00760841369629
    7. '           ' → logprob: -16.75760841369629
    8. '       ' → logprob: -17.75760841369629
    9. '  ' → logprob: -18.25760841369629
    10. '    ' → logprob: -18.38260841369629

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -16.125
    4. '-' → logprob: -18.625
    5. '```' → logprob: -18.625
    6. '2' → logprob: -20.125
    7. '           ' → logprob: -20.375
    8. '
' → logprob: -20.625
    9. '  ' → logprob: -21.75
    10. '       ' → logprob: -21.875

Token 457: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011318821925669909
    2. ' ))' → logprob: -7.501132011413574
    3. '))
' → logprob: -7.876132011413574
    4. '           ' → logprob: -8.626132011413574
    5. ')' → logprob: -11.376132011413574
    6. '               ' → logprob: -13.126132011413574
    7. ' ' → logprob: -13.876132011413574
    8. '   ' → logprob: -13.876132011413574
    9. ' ))
' → logprob: -14.126132011413574
    10. '       ' → logprob: -14.626132011413574

Token 458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.943783253314905e-05
    2. '            
' → logprob: -10.500059127807617
    3. '       ' → logprob: -11.375059127807617
    4. '               ' → logprob: -12.375059127807617
    5. '   ' → logprob: -12.750059127807617
    6. '            ' → logprob: -13.125059127807617
    7. ')' → logprob: -13.125059127807617
    8. '          ' → logprob: -13.125059127807617
    9. '		' → logprob: -13.250059127807617
    10. ' ' → logprob: -13.500059127807617

Token 459: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012261815136298537
    2. '#' (adapté à ' #') → logprob: -7.75122594833374
    3. ' if' → logprob: -7.75122594833374
    4. 'if' → logprob: -8.626226425170898
    5. ' #' → logprob: -9.501226425170898
    6. '       ' → logprob: -10.251226425170898
    7. '   ' → logprob: -10.376226425170898
    8. '            
' → logprob: -11.501226425170898
    9. '          ' → logprob: -11.751226425170898
    10. ' ' → logprob: -11.876226425170898

Token 460: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9164230823516846
    2. ' if' → logprob: -1.1664230823516846
    3. '           ' → logprob: -1.4164230823516846
    4. '#' → logprob: -3.2914230823516846
    5. ' #' → logprob: -4.9164228439331055
    6. ' ' → logprob: -7.5414228439331055
    7. '1' → logprob: -7.6664228439331055
    8. '   ' → logprob: -7.7914228439331055
    9. '2' → logprob: -11.416422843933105
    10. '       ' → logprob: -11.791422843933105

Token 461: '2' (ID: 17)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12157731503248215
    2. '#' → logprob: -2.246577262878418
    3. '           ' → logprob: -4.996577262878418
    4. '2' → logprob: -6.746577262878418
    5. ' if' → logprob: -7.621577262878418
    6. '1' → logprob: -8.996577262878418
    7. '   ' → logprob: -9.121577262878418
    8. ' #' → logprob: -10.246577262878418
    9. ' ' → logprob: -11.871577262878418
    10. '       ' → logprob: -12.246577262878418

Token 462: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010327188298106194
    2. '.' → logprob: -4.885327339172363
    3. ' )' → logprob: -6.510327339172363
    4. '   ' → logprob: -7.385327339172363
    5. ' if' → logprob: -7.760327339172363
    6. 'if' → logprob: -9.760327339172363
    7. ')#' → logprob: -11.010327339172363
    8. ')
' → logprob: -11.135327339172363
    9. ',' → logprob: -11.135327339172363
    10. ':' → logprob: -11.260327339172363

Token 463: ' sommet' (ID: 130502)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1722899675369263
    2. ' if' → logprob: -1.1722899675369263
    3. '(i' → logprob: -1.5472899675369263
    4. ' (' → logprob: -2.2972898483276367
    5. ' i' → logprob: -3.2972898483276367
    6. 'i' → logprob: -3.5472898483276367
    7. ' j' → logprob: -7.672289848327637
    8. '   ' → logprob: -7.797289848327637
    9. 'j' → logprob: -8.297289848327637
    10. '(j' → logprob: -9.172289848327637

Token 464: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7825736403465271
    2. ' à' → logprob: -0.9075736403465271
    3. ' at' → logprob: -2.907573699951172
    4. ' (' → logprob: -3.032573699951172
    5. ',' → logprob: -4.282573699951172
    6. ' =' → logprob: -4.907573699951172
    7. 'à' → logprob: -5.657573699951172
    8. '=i' → logprob: -5.657573699951172
    9. '(i' → logprob: -5.782573699951172
    10. ' to' → logprob: -6.282573699951172

Token 465: ' droite' (ID: 61428)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.15542101860046387
    2. 'i' → logprob: -2.030421018600464
    3. ' (' → logprob: -4.655421257019043
    4. ' i' → logprob: -6.780421257019043
    5. 'j' → logprob: -6.905421257019043
    6. 'l' → logprob: -8.030421257019043
    7. '(j' → logprob: -8.780421257019043
    8. 'left' → logprob: -9.655421257019043
    9. '   ' → logprob: -9.905421257019043
    10. 'g' → logprob: -9.905421257019043

Token 466: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09226415306329727
    2. '(i' → logprob: -2.467264175415039
    3. '(' → logprob: -6.342264175415039
    4. '           ' → logprob: -6.717264175415039
    5. ',' → logprob: -8.717264175415039
    6. ' =' → logprob: -9.467264175415039
    7. '(I' → logprob: -10.467264175415039
    8. '=' → logprob: -10.967264175415039
    9. '=(' → logprob: -11.467264175415039
    10. ' if' → logprob: -11.717264175415039

Token 467: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006767468526959419
    2. ' i' → logprob: -5.006767272949219
    3. '(i' → logprob: -10.006767272949219
    4. ' (' → logprob: -12.006767272949219
    5. '(' → logprob: -14.881767272949219
    6. '	i' → logprob: -16.00676727294922
    7. ',i' → logprob: -16.13176727294922
    8. '   ' → logprob: -16.50676727294922
    9. ')' → logprob: -16.63176727294922
    10. ')i' → logprob: -16.63176727294922

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003927808138541877
    2. ' ,' → logprob: -8.12539291381836
    3. ',j' → logprob: -9.25039291381836
    4. ',i' → logprob: -15.50039291381836
    5. ',
' → logprob: -15.87539291381836
    6. '   ' → logprob: -16.00039291381836
    7. ' ' → logprob: -16.25039291381836
    8. ',k' → logprob: -17.75039291381836
    9. ')' → logprob: -18.00039291381836
    10. '  ' → logprob: -18.50039291381836

Token 469: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06196869537234306
    2. ' j' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.686968803405762
    4. '	j' → logprob: -14.936968803405762
    5. ' ' → logprob: -16.436967849731445
    6. '   ' → logprob: -16.436967849731445
    7. '  ' → logprob: -17.186967849731445
    8. '    ' → logprob: -17.561967849731445
    9. '$j' → logprob: -17.561967849731445
    10. '(j' → logprob: -18.186967849731445

Token 470: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.4391956685576588e-05
    2. ' +' → logprob: -10.625024795532227
    3. '+
' → logprob: -17.250024795532227
    4. '+j' → logprob: -17.250024795532227
    5. '1' → logprob: -19.125024795532227
    6. '-' → logprob: -19.750024795532227
    7. '   ' → logprob: -19.875024795532227
    8. ')' → logprob: -20.125024795532227
    9. '＋' → logprob: -20.375024795532227
    10. ' ' → logprob: -20.375024795532227

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '+' → logprob: -18.125
    4. '```' → logprob: -19.75
    5. ')' → logprob: -20.5
    6. '0' → logprob: -21.875
    7. 'j' → logprob: -22.5
    8. '１' → logprob: -22.75
    9. '१' → logprob: -22.875
    10. '   ' → logprob: -23.0

Token 472: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010390079842181876
    2. ')
' → logprob: -9.500103950500488
    3. '           ' → logprob: -10.625103950500488
    4. ' )' → logprob: -12.750103950500488
    5. 'if' → logprob: -14.875103950500488
    6. '   ' → logprob: -15.125103950500488
    7. '),' → logprob: -15.750103950500488
    8. ' if' → logprob: -15.875103950500488
    9. '```' → logprob: -16.000102996826172
    10. '))' → logprob: -16.125102996826172

Token 473: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002060436672763899
    2. '               ' → logprob: -10.125205993652344
    3. ',' → logprob: -10.375205993652344
    4. ' if' → logprob: -10.375205993652344
    5. '<|end|>' → logprob: -10.375205993652344
    6. ')' → logprob: -10.500205993652344
    7. '```' → logprob: -10.625205993652344
    8. '          ' → logprob: -12.125205993652344
    9. '       ' → logprob: -12.875205993652344
    10. '(' → logprob: -13.000205993652344

Token 474: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20142464339733124
    2. ' j' → logprob: -1.7014245986938477
    3. '<' → logprob: -11.701424598693848
    4. '	j' → logprob: -13.951424598693848
    5. ' <' → logprob: -14.201424598693848
    6. ' ' → logprob: -14.451424598693848
    7. '   ' → logprob: -15.451424598693848
    8. '(j' → logprob: -15.576424598693848
    9. '$j' → logprob: -15.826424598693848
    10. '```' → logprob: -16.576425552368164

Token 475: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3162647783756256
    2. ' <' → logprob: -1.3162647485733032
    3. '<i' → logprob: -6.316264629364014
    4. '+' → logprob: -7.941264629364014
    5. '<N' → logprob: -7.941264629364014
    6. '<n' → logprob: -8.316265106201172
    7. '<num' → logprob: -9.691265106201172
    8. '<size' → logprob: -9.941265106201172
    9. '<len' → logprob: -10.566265106201172
    10. '<I' → logprob: -10.941265106201172

Token 476: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00861468818038702
    2. ' i' → logprob: -4.758614540100098
    3. '	i' → logprob: -16.633615493774414
    4. ' ' → logprob: -16.883615493774414
    5. '=i' → logprob: -17.258615493774414
    6. '(i' → logprob: -17.258615493774414
    7. '```' → logprob: -17.883615493774414
    8. '   ' → logprob: -18.008615493774414
    9. '  ' → logprob: -18.758615493774414
    10. ')i' → logprob: -19.633615493774414

Token 477: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.058974020183086395
    2. ')' → logprob: -3.933974027633667
    3. '               ' → logprob: -4.058973789215088
    4. '):' → logprob: -4.808973789215088
    5. ':' → logprob: -5.183973789215088
    6. '):
' → logprob: -6.183973789215088
    7. '```' → logprob: -6.433973789215088
    8. '       ' → logprob: -7.183973789215088
    9. ':
' → logprob: -7.308973789215088
    10. '<|end|>' → logprob: -7.558973789215088

Token 478: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.130576806142926e-05
    2. '```' → logprob: -11.500031471252441
    3. '       ' → logprob: -11.625031471252441
    4. '               ' → logprob: -12.375031471252441
    5. '<|end|>' → logprob: -13.000031471252441
    6. '            
' → logprob: -13.875031471252441
    7. '          ' → logprob: -13.875031471252441
    8. ' if' → logprob: -14.000031471252441
    9. ',' → logprob: -14.250031471252441
    10. ')' → logprob: -14.625031471252441

Token 479: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01713753305375576
    2. ' if' → logprob: -4.14213752746582
    3. 'if' (adapté à ' if') → logprob: -7.14213752746582
    4. '               ' → logprob: -8.14213752746582
    5. '```' → logprob: -12.01713752746582
    6. '            ' → logprob: -12.26713752746582
    7. '       ' → logprob: -13.01713752746582
    8. ' ' → logprob: -13.39213752746582
    9. '   ' → logprob: -13.51713752746582
    10. '          ' → logprob: -13.64213752746582

Token 480: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3868725001811981
    2. 'j' → logprob: -1.1368725299835205
    3. ' ' → logprob: -14.636872291564941
    4. '   ' → logprob: -15.011872291564941
    5. '	j' → logprob: -15.386872291564941
    6. ' i' → logprob: -15.511872291564941
    7. 'i' → logprob: -15.636872291564941
    8. '    ' → logprob: -16.636873245239258
    9. ' ' → logprob: -17.261873245239258
    10. '  ' → logprob: -17.511873245239258

Token 481: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11291079223155975
    2. '<' → logprob: -2.237910747528076
    3. '<i' → logprob: -10.237911224365234
    4. '+' → logprob: -10.487911224365234
    5. ' ' → logprob: -11.237911224365234
    6. '<n' → logprob: -12.487911224365234
    7. '<N' → logprob: -12.987911224365234
    8. ' +' → logprob: -13.112911224365234
    9. '<int' → logprob: -14.487911224365234
    10. '   ' → logprob: -15.112911224365234

Token 482: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12692831456661224
    2. ' i' → logprob: -2.1269283294677734
    3. '(i' → logprob: -15.876928329467773
    4. '	i' → logprob: -16.001928329467773
    5. '{i' → logprob: -17.626928329467773
    6. '=i' → logprob: -18.376928329467773
    7. ' ' → logprob: -18.876928329467773
    8. ',i' → logprob: -18.876928329467773
    9. ')i' → logprob: -19.001928329467773
    10. '_i' → logprob: -19.251928329467773

Token 483: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20147405564785004
    2. ':' → logprob: -2.2014739513397217
    3. '           ' → logprob: -3.3264739513397217
    4. '+' → logprob: -4.201474189758301
    5. ':
' → logprob: -4.326474189758301
    6. ' +' → logprob: -5.076474189758301
    7. '):
' → logprob: -8.2014741897583
    8. ',' → logprob: -8.2014741897583
    9. ' and' → logprob: -8.5764741897583
    10. '):' → logprob: -8.9514741897583

Token 484: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004137496289331466
    2. ' adj' → logprob: -7.87541389465332
    3. '           ' → logprob: -11.00041389465332
    4. ':' → logprob: -12.37541389465332
    5. 'adj' → logprob: -12.75041389465332
    6. '                   ' → logprob: -13.12541389465332
    7. '(adj' → logprob: -13.87541389465332
    8. '	           ' → logprob: -14.00041389465332
    9. ':
' → logprob: -14.12541389465332
    10. ' ' → logprob: -14.12541389465332

Token 485: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.023246292024850845
    2. 'adj' (adapté à ' adj') → logprob: -3.7732462882995605
    3. '           ' → logprob: -14.398246765136719
    4. '               ' → logprob: -15.648246765136719
    5. '(adj' → logprob: -16.39824676513672
    6. 'ad' → logprob: -18.39824676513672
    7. '_adj' → logprob: -19.27324676513672
    8. ' ad' → logprob: -20.02324676513672
    9. ' ' → logprob: -20.27324676513672
    10. '            ' → logprob: -20.39824676513672

Token 486: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006015266408212483
    2. '.' → logprob: -7.625601291656494
    3. ' .' → logprob: -9.500601768493652
    4. '           ' → logprob: -10.250601768493652
    5. '.add' → logprob: -13.125601768493652
    6. 'append' → logprob: -14.125601768493652
    7. '               ' → logprob: -16.000600814819336
    8. '.ad' → logprob: -16.375600814819336
    9. '.Append' → logprob: -16.500600814819336
    10. 'adj' → logprob: -16.750600814819336

Token 487: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002521084388718009
    2. ' (' → logprob: -6.25252103805542
    3. '(' → logprob: -7.87752103805542
    4. '((' → logprob: -8.502521514892578
    5. '(I' → logprob: -11.752521514892578
    6. '(
' → logprob: -13.377521514892578
    7. '(ii' → logprob: -15.377521514892578
    8. ' ' → logprob: -16.002521514892578
    9. '(None' → logprob: -16.377521514892578
    10. '(int' → logprob: -16.877521514892578

Token 488: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.650518920039758e-06
    2. ' i' → logprob: -12.625003814697266
    3. '(i' → logprob: -15.000003814697266
    4. '{i' → logprob: -19.000003814697266
    5. '	i' → logprob: -19.125003814697266
    6. ')i' → logprob: -19.250003814697266
    7. '   ' → logprob: -19.625003814697266
    8. '[i' → logprob: -19.875003814697266
    9. ')' → logprob: -20.625003814697266
    10. ',i' → logprob: -21.625003814697266

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004585518909152597
    2. ' ,' → logprob: -8.250458717346191
    3. ',j' → logprob: -8.625458717346191
    4. 'j' → logprob: -11.250458717346191
    5. ' j' → logprob: -12.375458717346191
    6. ' ' → logprob: -14.500458717346191
    7. '   ' → logprob: -16.875457763671875
    8. ',i' → logprob: -18.500457763671875
    9. ',
' → logprob: -18.750457763671875
    10. 'i' → logprob: -18.875457763671875

Token 490: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.018150178715586662
    2. ' j' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.143150329589844
    4. ' ' → logprob: -16.518150329589844
    5. '	j' → logprob: -17.018150329589844
    6. '    ' → logprob: -17.143150329589844
    7. '  ' → logprob: -18.143150329589844
    8. ' ' → logprob: -18.518150329589844
    9. '(j' → logprob: -19.018150329589844
    10. '$j' → logprob: -19.018150329589844

Token 491: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00029720881138928235
    2. ' +' → logprob: -8.125297546386719
    3. '1' → logprob: -14.500297546386719
    4. '+j' → logprob: -14.625297546386719
    5. 'j' → logprob: -16.87529754638672
    6. '+
' → logprob: -17.12529754638672
    7. '   ' → logprob: -17.75029754638672
    8. ' j' → logprob: -17.75029754638672
    9. ' ' → logprob: -18.00029754638672
    10. '           ' → logprob: -18.50029754638672

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '+' → logprob: -16.0000057220459
    4. 'j' → logprob: -18.3125057220459
    5. '   ' → logprob: -18.3125057220459
    6. '```' → logprob: -18.3750057220459
    7. ')' → logprob: -18.8125057220459
    8. '
' → logprob: -19.5000057220459
    9. '۱' → logprob: -19.6875057220459
    10. '１' → logprob: -20.3125057220459

Token 493: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004074354947078973
    2. '           ' → logprob: -7.8754072189331055
    3. ')
' → logprob: -10.875407218933105
    4. '))' → logprob: -12.375407218933105
    5. ' )' → logprob: -12.875407218933105
    6. ')#' → logprob: -15.000407218933105
    7. '       ' → logprob: -15.250407218933105
    8. '               ' → logprob: -15.375407218933105
    9. ')`' → logprob: -15.375407218933105
    10. ')}' → logprob: -15.625407218933105

Token 494: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.288163083605468e-05
    2. '#' → logprob: -10.250052452087402
    3. '       ' → logprob: -11.875052452087402
    4. '```' → logprob: -12.125052452087402
    5. '   ' → logprob: -13.000052452087402
    6. '          ' → logprob: -14.125052452087402
    7. '
' → logprob: -14.250052452087402
    8. '               ' → logprob: -15.250052452087402
    9. '<|end|>' → logprob: -15.375052452087402
    10. '+' → logprob: -15.625052452087402

Token 495: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002838276559486985
    2. '#' (adapté à ' #') → logprob: -5.877838134765625
    3. '       ' → logprob: -11.127838134765625
    4. '   ' → logprob: -11.752838134765625
    5. 'if' → logprob: -12.252838134765625
    6. '```' → logprob: -13.127838134765625
    7. ' #' → logprob: -13.377838134765625
    8. '
' → logprob: -14.002838134765625
    9. '          ' → logprob: -14.252838134765625
    10. '               ' → logprob: -15.502838134765625

Token 496: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1949148029088974
    2. 'if' → logprob: -2.3199148178100586
    3. '           ' → logprob: -2.5699148178100586
    4. '   ' → logprob: -6.569914817810059
    5. ' #' → logprob: -7.819914817810059
    6. ' if' → logprob: -7.944914817810059
    7. '       ' → logprob: -10.444914817810059
    8. '1' → logprob: -10.444914817810059
    9. ' ' → logprob: -11.569914817810059
    10. '3' → logprob: -11.819914817810059

Token 497: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.31442439556121826
    2. 'if' → logprob: -1.3144243955612183
    3. '           ' → logprob: -7.439424514770508
    4. '   ' → logprob: -8.939424514770508
    5. '1' → logprob: -9.189424514770508
    6. '2' → logprob: -9.564424514770508
    7. 'ni' → logprob: -9.689424514770508
    8. 'i' → logprob: -10.064424514770508
    9. 'for' → logprob: -10.064424514770508
    10. ' #' → logprob: -10.564424514770508

Token 498: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044914212776347995
    2. ' )' → logprob: -7.875449180603027
    3. '   ' → logprob: -10.625449180603027
    4. 'if' → logprob: -11.500449180603027
    5. ')i' → logprob: -11.875449180603027
    6. ' if' → logprob: -12.000449180603027
    7. ')
' → logprob: -12.375449180603027
    8. '#' → logprob: -12.875449180603027
    9. ')#' → logprob: -12.875449180603027
    10. 'def' → logprob: -13.125449180603027

Token 499: ' sommet' (ID: 130502)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.27312415838241577
    2. ' (' → logprob: -2.2731242179870605
    3. 'if' → logprob: -2.3981242179870605
    4. ' if' → logprob: -3.3981242179870605
    5. 'i' → logprob: -5.0231242179870605
    6. '           ' → logprob: -6.0231242179870605
    7. ' i' → logprob: -6.5231242179870605
    8. '   ' → logprob: -7.2731242179870605
    9. '(' → logprob: -9.523123741149902
    10. '#' → logprob: -9.898123741149902

Token 500: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061537232249975204
    2. ' =' → logprob: -3.561537265777588
    3. ' (' → logprob: -4.561537265777588
    4. '=(' → logprob: -4.936537265777588
    5. ' à' → logprob: -5.311537265777588
    6. '=i' → logprob: -5.561537265777588
    7. '(i' → logprob: -6.186537265777588
    8. '+' → logprob: -7.186537265777588
    9. ' at' → logprob: -7.561537265777588
    10. '   ' → logprob: -8.06153678894043

Token 501: ' haut' (ID: 28223)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.009346249513328075
    2. 'i' → logprob: -5.1343464851379395
    3. ' (' → logprob: -5.7593464851379395
    4. ' i' → logprob: -8.634346008300781
    5. '[i' → logprob: -10.384346008300781
    6. ' ' → logprob: -10.509346008300781
    7. '  ' → logprob: -12.259346008300781
    8. '   ' → logprob: -12.509346008300781
    9. '(' → logprob: -12.759346008300781
    10. 'bas' → logprob: -13.259346008300781

Token 502: ' à' (ID: 1221)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47567877173423767
    2. '(i' → logprob: -0.9756788015365601
    3. ',' → logprob: -7.10067892074585
    4. ' =' → logprob: -8.600678443908691
    5. '           ' → logprob: -8.725678443908691
    6. '-' → logprob: -8.850678443908691
    7. '=' → logprob: -9.225678443908691
    8. '(' → logprob: -9.475678443908691
    9. '=(' → logprob: -10.225678443908691
    10. '   ' → logprob: -10.475678443908691

Token 503: ' gauche' (ID: 58367)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06393998861312866
    2. 'i' → logprob: -2.8139400482177734
    3. '[i' → logprob: -6.438940048217773
    4. ' (' → logprob: -9.438940048217773
    5. 'l' → logprob: -9.563940048217773
    6. '{i' → logprob: -9.688940048217773
    7. ' i' → logprob: -10.813940048217773
    8. ',i' → logprob: -11.063940048217773
    9. '<i' → logprob: -11.188940048217773
    10. '=i' → logprob: -11.313940048217773

Token 504: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5801606178283691
    2. '(i' → logprob: -0.8301606178283691
    3. '           ' → logprob: -5.705160617828369
    4. ',' → logprob: -7.830160617828369
    5. ' if' → logprob: -8.955160140991211
    6. ' =' → logprob: -9.455160140991211
    7. '(' → logprob: -9.580160140991211
    8. '   ' → logprob: -9.830160140991211
    9. '               ' → logprob: -9.830160140991211
    10. '(I' → logprob: -11.205160140991211

Token 505: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0038797620218247175
    2. '(i' → logprob: -5.628879547119141
    3. ' i' → logprob: -8.50387954711914
    4. ' (' → logprob: -9.50387954711914
    5. '   ' → logprob: -14.00387954711914
    6. ')' → logprob: -14.62887954711914
    7. ')i' → logprob: -15.25387954711914
    8. '{i' → logprob: -15.50387954711914
    9. ',i' → logprob: -16.12887954711914
    10. ' ' → logprob: -16.25387954711914

Token 506: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002476135268807411
    2. ' -' → logprob: -6.002476215362549
    3. ' ' → logprob: -14.75247573852539
    4. ',' → logprob: -16.75247573852539
    5. '1' → logprob: -17.75247573852539
    6. '   ' → logprob: -17.87747573852539
    7. '−' → logprob: -17.87747573852539
    8. '-
' → logprob: -18.25247573852539
    9. '-,' → logprob: -18.62747573852539
    10. '
' → logprob: -19.00247573852539

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -17.75
    4. '   ' → logprob: -20.5
    5. '۱' → logprob: -20.625
    6. '-' → logprob: -21.25
    7. '१' → logprob: -21.5
    8. '১' → logprob: -21.5
    9. '``' → logprob: -21.75
    10. '
' → logprob: -21.75

Token 508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007705556345172226
    2. ' ,' → logprob: -7.250770568847656
    3. ',i' → logprob: -10.750770568847656
    4. ',j' → logprob: -11.000770568847656
    5. '-' → logprob: -11.375770568847656
    6. '           ' → logprob: -12.125770568847656
    7. ' -' → logprob: -13.625770568847656
    8. ')' → logprob: -13.750770568847656
    9. ',
' → logprob: -14.125770568847656
    10. '   ' → logprob: -14.125770568847656

Token 509: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02324839122593403
    2. ' j' → logprob: -3.7732484340667725
    3. ' ' → logprob: -14.023248672485352
    4. '   ' → logprob: -14.273248672485352
    5. '	j' → logprob: -14.523248672485352
    6. '    ' → logprob: -15.148248672485352
    7. ')' → logprob: -15.648248672485352
    8. '  ' → logprob: -15.648248672485352
    9. ',j' → logprob: -16.14824867248535
    10. '(j' → logprob: -16.39824867248535

Token 510: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5374276638031006
    2. ')' → logprob: -0.9124276638031006
    3. ' -' → logprob: -4.66242790222168
    4. 'if' → logprob: -6.28742790222168
    5. '           ' → logprob: -6.53742790222168
    6. ' if' → logprob: -6.91242790222168
    7. ' )' → logprob: -8.16242790222168
    8. ')
' → logprob: -9.53742790222168
    9. '-)' → logprob: -9.91242790222168
    10. '   ' → logprob: -11.16242790222168

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028100909665226936
    2. '0' → logprob: -4.028100967407227
    3. 'j' → logprob: -4.653100967407227
    4. ')' → logprob: -8.403100967407227
    5. ' ' → logprob: -9.903100967407227
    6. '```' → logprob: -10.028100967407227
    7. '-' → logprob: -10.778100967407227
    8. '   ' → logprob: -10.903100967407227
    9. ' j' → logprob: -12.653100967407227
    10. '``' → logprob: -13.028100967407227

Token 512: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012147598899900913
    2. '           ' → logprob: -6.876214981079102
    3. ')
' → logprob: -9.001214981079102
    4. 'if' → logprob: -10.501214981079102
    5. ' )' → logprob: -11.376214981079102
    6. ' if' → logprob: -11.751214981079102
    7. '               ' → logprob: -12.251214981079102
    8. '):
' → logprob: -13.626214981079102
    9. '```' → logprob: -13.751214981079102
    10. ')`' → logprob: -14.001214981079102

Token 513: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0760747492313385
    2. ' if' → logprob: -2.7010748386383057
    3. 'if' → logprob: -5.201074600219727
    4. '<|end|>' → logprob: -8.576074600219727
    5. '       ' → logprob: -8.951074600219727
    6. '               ' → logprob: -9.576074600219727
    7. '		' → logprob: -9.701074600219727
    8. '          ' → logprob: -10.201074600219727
    9. ')' → logprob: -10.201074600219727
    10. '```' → logprob: -11.326074600219727

Token 514: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09592650085687637
    2. ' i' → logprob: -2.720926523208618
    3. 'j' → logprob: -3.720926523208618
    4. ' j' → logprob: -6.595926284790039
    5. '(i' → logprob: -10.095926284790039
    6. ' (' → logprob: -11.470926284790039
    7. ' ' → logprob: -11.470926284790039
    8. '0' → logprob: -11.595926284790039
    9. '   ' → logprob: -13.345926284790039
    10. '(' → logprob: -13.470926284790039

Token 515: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04320642724633217
    2. ' >' → logprob: -3.1682064533233643
    3. '-' → logprob: -8.543206214904785
    4. '0' → logprob: -12.793206214904785
    5. '   ' → logprob: -13.168206214904785
    6. 'i' → logprob: -13.543206214904785
    7. '()>' → logprob: -13.918206214904785
    8. '1' → logprob: -14.168206214904785
    9. '```' → logprob: -14.168206214904785
    10. ')>' → logprob: -14.293206214904785

Token 516: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '>' → logprob: -16.00048828125
    4. '   ' → logprob: -16.37548828125
    5. '=' → logprob: -16.62548828125
    6. 'i' → logprob: -17.37548828125
    7. '```' → logprob: -18.37548828125
    8. '1' → logprob: -18.50048828125
    9. '  ' → logprob: -19.81298828125
    10. '
' → logprob: -19.81298828125

Token 517: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02251027338206768
    2. '               ' → logprob: -4.022510051727295
    3. ' if' → logprob: -5.647510051727295
    4. 'if' → logprob: -7.772510051727295
    5. ' and' → logprob: -8.647510528564453
    6. ',' → logprob: -9.772510528564453
    7. '<|end|>' → logprob: -10.022510528564453
    8. '       ' → logprob: -10.147510528564453
    9. '                   ' → logprob: -11.022510528564453
    10. ')' → logprob: -11.022510528564453

Token 518: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.038042180240154266
    2. ' j' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.413042068481445
    4. '0' → logprob: -15.413042068481445
    5. '	j' → logprob: -15.788042068481445
    6. '   ' → logprob: -16.413042068481445
    7. '(j' → logprob: -16.788042068481445
    8. '  ' → logprob: -17.288042068481445
    9. ' (' → logprob: -17.413042068481445
    10. '_j' → logprob: -17.538042068481445

Token 519: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05488860234618187
    2. ' >' → logprob: -2.9298884868621826
    3. '-' → logprob: -12.179888725280762
    4. '   ' → logprob: -14.679888725280762
    5. '```' → logprob: -15.804888725280762
    6. ')>' → logprob: -16.179887771606445
    7. ')' → logprob: -16.554887771606445
    8. '0' → logprob: -16.804887771606445
    9. ' ' → logprob: -17.054887771606445
    10. '#' → logprob: -17.304887771606445

Token 520: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '=' → logprob: -15.250024795532227
    4. '>' → logprob: -18.125024795532227
    5. '   ' → logprob: -18.250024795532227
    6. 'j' → logprob: -18.500024795532227
    7. '۰' → logprob: -19.125024795532227
    8. '1' → logprob: -19.250024795532227
    9. '```' → logprob: -19.875024795532227
    10. '(' → logprob: -20.125024795532227

Token 521: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016101354733109474
    2. '               ' → logprob: -4.141101360321045
    3. '                   ' → logprob: -10.641100883483887
    4. ',' → logprob: -11.516100883483887
    5. '       ' → logprob: -11.891100883483887
    6. ')' → logprob: -11.891100883483887
    7. '          ' → logprob: -12.766100883483887
    8. ':' → logprob: -12.766100883483887
    9. '```' → logprob: -13.391100883483887
    10. ' adj' → logprob: -13.391100883483887

Token 522: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024989593657664955
    2. '               ' → logprob: -9.125249862670898
    3. 'if' → logprob: -9.500249862670898
    4. ' if' → logprob: -9.750249862670898
    5. '```' → logprob: -12.875249862670898
    6. ',' → logprob: -13.375249862670898
    7. '       ' → logprob: -13.875249862670898
    8. '                   ' → logprob: -14.125249862670898
    9. '		' → logprob: -14.250249862670898
    10. '          ' → logprob: -14.750249862670898

Token 523: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05046381801366806
    2. 'if' (adapté à ' if') → logprob: -3.050463914871216
    3. ' if' → logprob: -6.300463676452637
    4. '               ' → logprob: -10.300463676452637
    5. '       ' → logprob: -13.175463676452637
    6. '		' → logprob: -14.050463676452637
    7. '   ' → logprob: -14.175463676452637
    8. '          ' → logprob: -14.300463676452637
    9. '                   ' → logprob: -14.300463676452637
    10. '```' → logprob: -15.050463676452637

Token 524: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20141461491584778
    2. 'i' → logprob: -1.7014145851135254
    3. '   ' → logprob: -14.826415061950684
    4. ' ' → logprob: -15.451415061950684
    5. '(i' → logprob: -15.576415061950684
    6. '0' → logprob: -15.701415061950684
    7. ' (' → logprob: -15.826415061950684
    8. '	i' → logprob: -15.951415061950684
    9. '    ' → logprob: -17.201414108276367
    10. '  ' → logprob: -17.701414108276367

Token 525: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3868778347969055
    2. ' >' → logprob: -1.1368777751922607
    3. '0' → logprob: -12.13687801361084
    4. '   ' → logprob: -14.63687801361084
    5. '-' → logprob: -15.13687801361084
    6. ' ' → logprob: -15.51187801361084
    7. '()>' → logprob: -15.88687801361084
    8. '```' → logprob: -16.636877059936523
    9. '1' → logprob: -16.761877059936523
    10. ')>' → logprob: -16.886877059936523

Token 526: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011709370883181691
    2. ' ' → logprob: -6.751171112060547
    3. '=' → logprob: -14.751171112060547
    4. '   ' → logprob: -15.501171112060547
    5. '>' → logprob: -17.501171112060547
    6. '  ' → logprob: -18.251171112060547
    7. '1' → logprob: -18.876171112060547
    8. '     ' → logprob: -19.126171112060547
    9. '#' → logprob: -19.563671112060547
    10. '    ' → logprob: -19.751171112060547

Token 527: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '=' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '>' → logprob: -20.875001907348633
    6. '  ' → logprob: -21.375001907348633
    7. '
' → logprob: -21.375001907348633
    8. '     ' → logprob: -21.875001907348633
    9. '```' → logprob: -22.125001907348633
    10. '#' → logprob: -22.250001907348633

Token 528: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07919225841760635
    2. 'and' → logprob: -2.5791921615600586
    3. '               ' → logprob: -8.329192161560059
    4. '           ' → logprob: -9.829192161560059
    5. '            ' → logprob: -12.954192161560059
    6. '	and' → logprob: -13.329192161560059
    7. '              ' → logprob: -13.704192161560059
    8. '             ' → logprob: -14.454192161560059
    9. ':' → logprob: -14.954192161560059
    10. '   ' → logprob: -15.079192161560059

Token 529: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20141372084617615
    2. ' j' → logprob: -1.7014137506484985
    3. '	j' → logprob: -15.451414108276367
    4. '           ' → logprob: -16.326414108276367
    5. '    ' → logprob: -16.576414108276367
    6. '   ' → logprob: -17.326414108276367
    7. ' ' → logprob: -17.826414108276367
    8. '            ' → logprob: -18.076414108276367
    9. ',j' → logprob: -18.576414108276367
    10. '(j' → logprob: -18.701414108276367

Token 530: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759484171867371
    2. ' >' → logprob: -0.8259484171867371
    3. '-' → logprob: -11.825948715209961
    4. '   ' → logprob: -14.325948715209961
    5. ' ' → logprob: -14.950948715209961
    6. '0' → logprob: -16.32594871520996
    7. '1' → logprob: -16.57594871520996
    8. '```' → logprob: -16.57594871520996
    9. '[' → logprob: -16.70094871520996
    10. ' >
' → logprob: -16.95094871520996

Token 531: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. '=' → logprob: -14.500085830688477
    4. '   ' → logprob: -17.250085830688477
    5. '```' → logprob: -19.750085830688477
    6. ' ' → logprob: -20.125085830688477
    7. '  ' → logprob: -20.375085830688477
    8. '>' → logprob: -20.500085830688477
    9. '۰' → logprob: -20.500085830688477
    10. 'j' → logprob: -20.687585830688477

Token 532: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '=' → logprob: -15.875009536743164
    4. '   ' → logprob: -17.500009536743164
    5. '```' → logprob: -20.000009536743164
    6. '  ' → logprob: -20.250009536743164
    7. '
' → logprob: -20.437509536743164
    8. '۰' → logprob: -20.500009536743164
    9. '(' → logprob: -20.937509536743164
    10. '>' → logprob: -21.000009536743164

Token 533: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011818586848676205
    2. ':
' → logprob: -4.6368184089660645
    3. ':' → logprob: -6.2618184089660645
    4. '           ' → logprob: -9.761818885803223
    5. '):
' → logprob: -10.011818885803223
    6. ' and' → logprob: -11.261818885803223
    7. ' adj' → logprob: -11.386818885803223
    8. '                   ' → logprob: -11.761818885803223
    9. ',' → logprob: -12.136818885803223
    10. '              ' → logprob: -13.261818885803223

Token 534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004821505572181195
    2. ' adj' → logprob: -8.000482559204102
    3. 'adj' → logprob: -8.875482559204102
    4. '           ' → logprob: -12.500482559204102
    5. '                   ' → logprob: -13.625482559204102
    6. '(adj' → logprob: -14.500482559204102
    7. '              ' → logprob: -14.750482559204102
    8. ':' → logprob: -15.375482559204102
    9. ',' → logprob: -15.500482559204102
    10. '   ' → logprob: -15.875482559204102

Token 535: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.0019558717031031847
    2. ' adj' → logprob: -6.376955986022949
    3. '           ' → logprob: -8.37695598602295
    4. '               ' → logprob: -10.75195598602295
    5. 'ad' → logprob: -13.75195598602295
    6. '(adj' → logprob: -13.87695598602295
    7. '   ' → logprob: -16.876955032348633
    8. '                   ' → logprob: -17.001955032348633
    9. 'Adj' → logprob: -17.626955032348633
    10. '_adj' → logprob: -17.751955032348633

Token 536: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0026655502151697874
    2. '.' → logprob: -6.0026655197143555
    3. 'adj' → logprob: -9.377665519714355
    4. '           ' → logprob: -10.377665519714355
    5. 'append' → logprob: -10.502665519714355
    6. '               ' → logprob: -11.002665519714355
    7. '.ad' → logprob: -11.752665519714355
    8. ' .' → logprob: -12.002665519714355
    9. '=' → logprob: -12.377665519714355
    10. ' adj' → logprob: -12.502665519714355

Token 537: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.030385317280888557
    2. '(i' → logprob: -3.5303852558135986
    3. ' (' → logprob: -7.530385494232178
    4. '(' → logprob: -9.53038501739502
    5. ' ((' → logprob: -10.65538501739502
    6. '   ' → logprob: -14.03038501739502
    7. ' ' → logprob: -15.03038501739502
    8. '(
' → logprob: -15.40538501739502
    9. '(I' → logprob: -15.40538501739502
    10. '(ii' → logprob: -16.030385971069336

Token 538: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006303519476205111
    2. '(i' → logprob: -7.3756303787231445
    3. ' i' → logprob: -12.750630378723145
    4. ' (' → logprob: -14.375630378723145
    5. '   ' → logprob: -15.500630378723145
    6. '{i' → logprob: -16.875629425048828
    7. '	i' → logprob: -18.250629425048828
    8. '           ' → logprob: -19.000629425048828
    9. '     ' → logprob: -19.250629425048828
    10. '  ' → logprob: -19.375629425048828

Token 539: '-' (ID: 12)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10937047749757767
    2. '-' → logprob: -2.484370470046997
    3. ' i' → logprob: -3.984370470046997
    4. ' -' → logprob: -6.484370708465576
    5. ',' → logprob: -10.734370231628418
    6. '(i' → logprob: -10.859370231628418
    7. ' ' → logprob: -10.859370231628418
    8. '   ' → logprob: -10.984370231628418
    9. ',i' → logprob: -12.234370231628418
    10. '[i' → logprob: -13.109370231628418

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024846551241353154
    2. 'i' → logprob: -8.750248908996582
    3. ' ' → logprob: -10.125248908996582
    4. '(i' → logprob: -10.375248908996582
    5. 'j' → logprob: -11.875248908996582
    6. '-' → logprob: -12.875248908996582
    7. '(' → logprob: -12.875248908996582
    8. '   ' → logprob: -13.000248908996582
    9. ')' → logprob: -14.125248908996582
    10. '0' → logprob: -14.250248908996582

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002969703928101808
    2. ',j' → logprob: -8.250296592712402
    3. ' ,' → logprob: -10.250296592712402
    4. ',i' → logprob: -15.875296592712402
    5. '           ' → logprob: -16.62529754638672
    6. ',
' → logprob: -16.62529754638672
    7. ',n' → logprob: -17.37529754638672
    8. '               ' → logprob: -17.37529754638672
    9. ',k' → logprob: -17.75029754638672
    10. ')' → logprob: -18.00029754638672

Token 542: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007100477814674377
    2. ' j' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.500709533691406
    4. '	j' → logprob: -18.250709533691406
    5. '(j' → logprob: -18.375709533691406
    6. '$j' → logprob: -19.625709533691406
    7. '       ' → logprob: -19.875709533691406
    8. '           ' → logprob: -20.125709533691406
    9. '[j' → logprob: -20.500709533691406
    10. ' ' → logprob: -20.625709533691406

Token 543: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.755678961984813e-05
    2. ' -' → logprob: -9.500077247619629
    3. '           ' → logprob: -13.500077247619629
    4. '1' → logprob: -14.375077247619629
    5. '               ' → logprob: -14.875077247619629
    6. '                   ' → logprob: -15.875077247619629
    7. '   ' → logprob: -16.250078201293945
    8. '```' → logprob: -17.250078201293945
    9. '       ' → logprob: -17.375078201293945
    10. '[' → logprob: -17.750078201293945

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ')' → logprob: -18.25
    3. ' ' → logprob: -18.75
    4. '2' → logprob: -19.625
    5. '-' → logprob: -20.0
    6. '```' → logprob: -20.25
    7. '<|end|>' → logprob: -20.875
    8. '۱' → logprob: -21.0
    9. '   ' → logprob: -21.375
    10. '১' → logprob: -21.8125

Token 545: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010829092003405094
    2. '           ' → logprob: -5.010828971862793
    3. '))' → logprob: -5.510828971862793
    4. ')
' → logprob: -9.885828971862793
    5. ' )' → logprob: -12.260828971862793
    6. '))
' → logprob: -13.010828971862793
    7. '               ' → logprob: -13.385828971862793
    8. '])' → logprob: -14.510828971862793
    9. ')")' → logprob: -14.760828971862793
    10. ')))' → logprob: -15.010828971862793

Token 546: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.816093228830141e-06
    2. '          ' → logprob: -13.62500286102295
    3. '       ' → logprob: -14.25000286102295
    4. '```' → logprob: -15.37500286102295
    5. ')' → logprob: -15.62500286102295
    6. '   ' → logprob: -15.75000286102295
    7. '#' → logprob: -15.87500286102295
    8. '            
' → logprob: -16.000001907348633
    9. '		' → logprob: -17.125001907348633
    10. '
' → logprob: -17.250001907348633

Token 547: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013892814749851823
    2. '#' (adapté à ' #') → logprob: -6.626389503479004
    3. '
' → logprob: -10.876389503479004
    4. '   ' → logprob: -11.251389503479004
    5. 'if' → logprob: -11.251389503479004
    6. '       ' → logprob: -11.251389503479004
    7. '          ' → logprob: -13.001389503479004
    8. '```' → logprob: -13.876389503479004
    9. '               ' → logprob: -14.501389503479004
    10. ' #' → logprob: -14.501389503479004

Token 548: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06246514618396759
    2. '           ' → logprob: -2.812465190887451
    3. '#' → logprob: -8.437464714050293
    4. ' if' → logprob: -8.437464714050293
    5. '   ' → logprob: -10.062464714050293
    6. '       ' → logprob: -12.062464714050293
    7. '
' → logprob: -12.187464714050293
    8. '```' → logprob: -12.687464714050293
    9. '               ' → logprob: -12.937464714050293
    10. 'def' → logprob: -13.562464714050293

Token 549: '4' (ID: 19)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018183360807597637
    2. '           ' → logprob: -6.5018181800842285
    3. 'i' → logprob: -8.626818656921387
    4. ' if' → logprob: -9.251818656921387
    5. '4' → logprob: -10.876818656921387
    6. '3' → logprob: -11.001818656921387
    7. '#' → logprob: -13.251818656921387
    8. '   ' → logprob: -13.876818656921387
    9. '       ' → logprob: -14.376818656921387
    10. '               ' → logprob: -14.501818656921387

Token 550: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.037552833557128906
    2. 'if' → logprob: -3.412552833557129
    3. ')' → logprob: -5.662552833557129
    4. '           ' → logprob: -9.037552833557129
    5. ' i' → logprob: -9.287552833557129
    6. '   ' → logprob: -9.287552833557129
    7. ' (' → logprob: -10.162552833557129
    8. 'i' → logprob: -11.287552833557129
    9. ' ' → logprob: -11.412552833557129
    10. 'def' → logprob: -11.412552833557129

Token 551: ' sommet' (ID: 130502)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4550592601299286
    2. 'i' → logprob: -1.330059289932251
    3. ' i' → logprob: -3.330059289932251
    4. ' if' → logprob: -3.330059289932251
    5. '(i' → logprob: -3.705059289932251
    6. ' (' → logprob: -5.455059051513672
    7. '           ' → logprob: -8.080059051513672
    8. '   ' → logprob: -8.580059051513672
    9. '[i' → logprob: -9.705059051513672
    10. '(' → logprob: -10.330059051513672

Token 552: ' en' (ID: 469)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.3775997161865234
    2. '>' → logprob: -1.6275997161865234
    3. ' à' → logprob: -1.6275997161865234
    4. ' en' → logprob: -2.1275997161865234
    5. '=' → logprob: -2.5025997161865234
    6. ' at' → logprob: -3.3775997161865234
    7. ' in' → logprob: -3.7525997161865234
    8. ' ==' → logprob: -3.7525997161865234
    9. ' =' → logprob: -4.127599716186523
    10. '(i' → logprob: -4.502599716186523

Token 553: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.22198458015918732
    2. 'top' → logprob: -1.846984624862671
    3. ' haut' → logprob: -3.221984624862671
    4. '(i' → logprob: -7.221984386444092
    5. ' top' → logprob: -8.09698486328125
    6. 'i' → logprob: -8.97198486328125
    7. 'bas' → logprob: -9.84698486328125
    8. 'up' → logprob: -9.84698486328125
    9. '(' → logprob: -10.09698486328125
    10. 'ha' → logprob: -10.34698486328125

Token 554: ' à' (ID: 1221)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12693651020526886
    2. ' -' → logprob: -2.126936435699463
    3. '           ' → logprob: -12.501936912536621
    4. '   ' → logprob: -12.876936912536621
    5. ' ' → logprob: -14.126936912536621
    6. '```' → logprob: -14.376936912536621
    7. '>' → logprob: -15.251936912536621
    8. ' à' → logprob: -16.501935958862305
    9. ' >' → logprob: -16.626935958862305
    10. ',' → logprob: -16.751935958862305

Token 555: ' droite' (ID: 61428)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0686906948685646
    2. ' i' → logprob: -2.818690776824951
    3. '(i' → logprob: -5.693690776824951
    4. '0' → logprob: -5.943690776824951
    5. '1' → logprob: -8.068690299987793
    6. ' (' → logprob: -8.443690299987793
    7. ' ' → logprob: -9.568690299987793
    8. 'j' → logprob: -10.193690299987793
    9. '[i' → logprob: -10.193690299987793
    10. 'left' → logprob: -11.693690299987793

Token 556: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31327947974205017
    2. '(i' → logprob: -1.3132795095443726
    3. '           ' → logprob: -11.688279151916504
    4. '   ' → logprob: -12.313279151916504
    5. '(' → logprob: -13.688279151916504
    6. '```' → logprob: -13.688279151916504
    7. ' =' → logprob: -14.563279151916504
    8. ' if' → logprob: -14.563279151916504
    9. '[i' → logprob: -14.938279151916504
    10. ',' → logprob: -15.313279151916504

Token 557: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000156577822053805
    2. ' i' → logprob: -9.12515640258789
    3. '(i' → logprob: -10.00015640258789
    4. ' (' → logprob: -13.12515640258789
    5. '   ' → logprob: -16.37515640258789
    6. '{i' → logprob: -16.75015640258789
    7. '```' → logprob: -17.50015640258789
    8. '(' → logprob: -17.87515640258789
    9. ',i' → logprob: -18.50015640258789
    10. '	i' → logprob: -19.12515640258789

Token 558: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6303524374961853
    2. ' >' → logprob: -1.25535249710083
    3. ' -' → logprob: -1.75535249710083
    4. '>' → logprob: -4.63035249710083
    5. ' ' → logprob: -11.630352020263672
    6. '   ' → logprob: -12.255352020263672
    7. ',' → logprob: -12.630352020263672
    8. ' >
' → logprob: -14.255352020263672
    9. '```' → logprob: -14.380352020263672
    10. '  ' → logprob: -14.630352020263672

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.79811754100956e-05
    2. '-' → logprob: -10.250038146972656
    3. ' ' → logprob: -12.875038146972656
    4. '   ' → logprob: -17.375038146972656
    5. '```' → logprob: -18.000038146972656
    6. '0' → logprob: -18.125038146972656
    7. '>' → logprob: -18.625038146972656
    8. ' -' → logprob: -18.625038146972656
    9. '<|end|>' → logprob: -18.750038146972656
    10. '
' → logprob: -18.750038146972656

Token 560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004568903532344848
    2. ' ,' → logprob: -7.875456809997559
    3. ',j' → logprob: -10.125456809997559
    4. ',i' → logprob: -10.250456809997559
    5. '<|end|>' → logprob: -14.000456809997559
    6. ')' → logprob: -16.000457763671875
    7. ',
' → logprob: -16.250457763671875
    8. ',k' → logprob: -16.500457763671875
    9. ',n' → logprob: -16.750457763671875
    10. '‌,' → logprob: -17.000457763671875

Token 561: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20141421258449554
    2. ' j' → logprob: -1.7014142274856567
    3. ',j' → logprob: -14.451414108276367
    4. ' ' → logprob: -15.951414108276367
    5. '	j' → logprob: -16.201414108276367
    6. ',' → logprob: -16.826414108276367
    7. '           ' → logprob: -17.076414108276367
    8. '   ' → logprob: -17.201414108276367
    9. '$j' → logprob: -17.701414108276367
    10. '_j' → logprob: -18.201414108276367

Token 562: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003251150716096163
    2. ',j' → logprob: -6.003251075744629
    3. ')' → logprob: -7.628251075744629
    4. ' ,' → logprob: -8.753251075744629
    5. ' ' → logprob: -10.253251075744629
    6. '>' → logprob: -10.378251075744629
    7. '-' → logprob: -10.378251075744629
    8. '),' → logprob: -11.628251075744629
    9. '   ' → logprob: -12.003251075744629
    10. 'if' → logprob: -12.378251075744629

Token 563: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042987436056137085
    2. 'if' → logprob: -4.04298734664917
    3. '               ' → logprob: -4.29298734664917
    4. ' if' → logprob: -4.54298734664917
    5. 'adj' → logprob: -9.792987823486328
    6. ' adj' → logprob: -10.167987823486328
    7. ',' → logprob: -10.417987823486328
    8. '```' → logprob: -10.542987823486328
    9. '(adj' → logprob: -10.667987823486328
    10. ')' → logprob: -11.667987823486328

Token 564: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3132627606391907
    2. ' i' → logprob: -1.313262701034546
    3. '(i' → logprob: -15.063262939453125
    4. '>' → logprob: -15.188262939453125
    5. '	i' → logprob: -15.688262939453125
    6. ' ' → logprob: -16.563262939453125
    7. '0' → logprob: -16.938262939453125
    8. '   ' → logprob: -17.313262939453125
    9. 'import' → logprob: -17.313262939453125
    10. '```' → logprob: -18.063262939453125

Token 565: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25192973017692566
    2. '>' → logprob: -1.501929759979248
    3. ' >
' → logprob: -15.25192928314209
    4. '
' → logprob: -16.501930236816406
    5. '>
' → logprob: -16.876930236816406
    6. '()>' → logprob: -17.001930236816406
    7. '   ' → logprob: -17.126930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '```' → logprob: -17.626930236816406
    10. '#' → logprob: -18.251930236816406

Token 566: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.750261306762695
    4. '>' → logprob: -18.000261306762695
    5. '=' → logprob: -18.250261306762695
    6. '1' → logprob: -20.000261306762695
    7. '-' → logprob: -20.375261306762695
    8. '  ' → logprob: -20.375261306762695
    9. ' ' → logprob: -20.500261306762695
    10. '```' → logprob: -20.500261306762695

Token 567: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6327237486839294
    2. '           ' → logprob: -0.7577237486839294
    3. ' and' → logprob: -9.507723808288574
    4. '```' → logprob: -11.382723808288574
    5. ':' → logprob: -11.507723808288574
    6. '       ' → logprob: -11.882723808288574
    7. '                   ' → logprob: -12.507723808288574
    8. '   ' → logprob: -12.632723808288574
    9. 'and' → logprob: -13.132723808288574
    10. ':
' → logprob: -13.257723808288574

Token 568: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005933893844485283
    2. '               ' → logprob: -5.13093376159668
    3. '```' → logprob: -12.75593376159668
    4. '       ' → logprob: -14.38093376159668
    5. '   ' → logprob: -14.88093376159668
    6. 'if' → logprob: -15.00593376159668
    7. '                   ' → logprob: -15.13093376159668
    8. ' if' → logprob: -15.50593376159668
    9. '          ' → logprob: -15.88093376159668
    10. ',' → logprob: -16.00593376159668

Token 569: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009534958750009537
    2. ' if' → logprob: -5.25953483581543
    3. '               ' → logprob: -5.63453483581543
    4. 'if' (adapté à ' if') → logprob: -7.50953483581543
    5. '```' → logprob: -8.75953483581543
    6. '       ' → logprob: -12.63453483581543
    7. '          ' → logprob: -12.75953483581543
    8. '            ' → logprob: -13.00953483581543
    9. '   ' → logprob: -13.63453483581543
    10. '            
' → logprob: -13.75953483581543

Token 570: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4740773141384125
    2. 'i' → logprob: -0.9740773439407349
    3. '(i' → logprob: -16.099077224731445
    4. '	i' → logprob: -16.474077224731445
    5. '   ' → logprob: -16.724077224731445
    6. '0' → logprob: -16.849077224731445
    7. ' ' → logprob: -17.974077224731445
    8. '           ' → logprob: -19.224077224731445
    9. ' ' → logprob: -19.349077224731445
    10. '>' → logprob: -19.474077224731445

Token 571: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07889022678136826
    2. '>' → logprob: -2.578890323638916
    3. ' >
' → logprob: -14.828889846801758
    4. ' ' → logprob: -16.828889846801758
    5. '0' → logprob: -17.328889846801758
    6. ' ' → logprob: -17.328889846801758
    7. '   ' → logprob: -17.953889846801758
    8. '>
' → logprob: -18.078889846801758
    9. '-' → logprob: -18.203889846801758
    10. '()>' → logprob: -18.203889846801758

Token 572: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889022678136826
    2. ' ' → logprob: -2.578890323638916
    3. '   ' → logprob: -15.703889846801758
    4. '=' → logprob: -16.578889846801758
    5. ' ' → logprob: -16.703889846801758
    6. '>' → logprob: -17.828889846801758
    7. '  ' → logprob: -18.016389846801758
    8. '(' → logprob: -18.703889846801758
    9. '۰' → logprob: -18.891389846801758
    10. '1' → logprob: -18.953889846801758

Token 573: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.00001335144043
    4. '=' → logprob: -19.62501335144043
    5. '۰' → logprob: -20.75001335144043
    6. '>' → logprob: -21.18751335144043
    7. '1' → logprob: -21.25001335144043
    8. '```' → logprob: -21.56251335144043
    9. '  ' → logprob: -21.62501335144043
    10. '０' → logprob: -21.81251335144043

Token 574: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005656610010191798
    2. ' and' → logprob: -8.000565528869629
    3. '           ' → logprob: -9.375565528869629
    4. ':' → logprob: -9.500565528869629
    5. ':
' → logprob: -10.125565528869629
    6. 'and' → logprob: -10.750565528869629
    7. ' adj' → logprob: -13.375565528869629
    8. '```' → logprob: -13.750565528869629
    9. '              ' → logprob: -13.875565528869629
    10. '                   ' → logprob: -13.875565528869629

Token 575: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25192946195602417
    2. ' j' → logprob: -1.501929521560669
    3. '	j' → logprob: -16.626930236816406
    4. '$j' → logprob: -16.626930236816406
    5. '   ' → logprob: -16.751930236816406
    6. ' ' → logprob: -16.876930236816406
    7. '0' → logprob: -17.251930236816406
    8. '(j' → logprob: -17.376930236816406
    9. '    ' → logprob: -17.751930236816406
    10. ' ' → logprob: -18.126930236816406

Token 576: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47516492009162903
    2. '>' → logprob: -0.9751648902893066
    3. ' <' → logprob: -7.100164890289307
    4. '<' → logprob: -8.350165367126465
    5. '0' → logprob: -10.850165367126465
    6. '-' → logprob: -13.100165367126465
    7. ' ' → logprob: -13.350165367126465
    8. '[' → logprob: -14.475165367126465
    9. '   ' → logprob: -14.600165367126465
    10. '```' → logprob: -14.850165367126465

Token 577: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00032044618274085224
    2. '(i' → logprob: -8.250320434570312
    3. ' i' → logprob: -9.750320434570312
    4. ' (' → logprob: -14.125320434570312
    5. '   ' → logprob: -16.375320434570312
    6. '	i' → logprob: -18.250320434570312
    7. '(' → logprob: -19.125320434570312
    8. ' ' → logprob: -19.250320434570312
    9. '0' → logprob: -19.250320434570312
    10. '=i' → logprob: -19.375320434570312

Token 578: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014975663274526596
    2. ' -' → logprob: -4.264975547790527
    3. '1' → logprob: -7.139975547790527
    4. '           ' → logprob: -11.889975547790527
    5. '0' → logprob: -12.014975547790527
    6. '   ' → logprob: -13.264975547790527
    7. '       ' → logprob: -13.889975547790527
    8. ':' → logprob: -13.889975547790527
    9. ' and' → logprob: -13.889975547790527
    10. ' ' → logprob: -14.889975547790527

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -16.0
    4. 'j' → logprob: -17.75
    5. '```' → logprob: -18.625
    6. '-' → logprob: -18.875
    7. '0' → logprob: -19.375
    8. '2' → logprob: -20.0
    9. 'i' → logprob: -20.4375
    10. '۱' → logprob: -21.0625

Token 580: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08808144181966782
    2. ':
' → logprob: -2.8380813598632812
    3. ':' → logprob: -3.7130813598632812
    4. '           ' → logprob: -7.088081359863281
    5. '):
' → logprob: -8.463081359863281
    6. ' :
' → logprob: -9.088081359863281
    7. ' and' → logprob: -9.588081359863281
    8. ' :' → logprob: -10.713081359863281
    9. ' adj' → logprob: -10.838081359863281
    10. '              ' → logprob: -11.213081359863281

Token 581: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015367622254416347
    2. ' adj' → logprob: -6.751536846160889
    3. 'adj' → logprob: -8.00153636932373
    4. '           ' → logprob: -10.62653636932373
    5. '       ' → logprob: -13.12653636932373
    6. '```' → logprob: -13.75153636932373
    7. '(adj' → logprob: -13.75153636932373
    8. '                   ' → logprob: -14.12653636932373
    9. '   ' → logprob: -14.50153636932373
    10. ':
' → logprob: -14.75153636932373

Token 582: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.0032188263721764088
    2. ' adj' → logprob: -5.753218650817871
    3. '               ' → logprob: -10.253218650817871
    4. '           ' → logprob: -12.128218650817871
    5. 'ad' → logprob: -15.128218650817871
    6. '(adj' → logprob: -16.628219604492188
    7. '_adj' → logprob: -18.378219604492188
    8. '   ' → logprob: -18.753219604492188
    9. '                   ' → logprob: -18.753219604492188
    10. 'Adj' → logprob: -18.878219604492188

Token 583: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008628406561911106
    2. '.' → logprob: -5.2586283683776855
    3. ' .' → logprob: -6.7586283683776855
    4. '           ' → logprob: -6.8836283683776855
    5. '               ' → logprob: -7.1336283683776855
    6. 'append' → logprob: -9.383628845214844
    7. '_adj' → logprob: -9.508628845214844
    8. 'adj' → logprob: -9.633628845214844
    9. '+=' → logprob: -10.258628845214844
    10. ' +=' → logprob: -10.383628845214844

Token 584: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.4617256056226324e-05
    2. '(i' → logprob: -11.875014305114746
    3. ' ((' → logprob: -12.000014305114746
    4. '   ' → logprob: -14.250014305114746
    5. ' (' → logprob: -14.875014305114746
    6. '(' → logprob: -15.125014305114746
    7. ' ' → logprob: -16.250015258789062
    8. '(
' → logprob: -16.625015258789062
    9. '[(' → logprob: -17.125015258789062
    10. '  ' → logprob: -17.500015258789062

Token 585: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.656383680412546e-05
    2. '(i' → logprob: -10.000046730041504
    3. ' i' → logprob: -13.750046730041504
    4. '   ' → logprob: -17.750045776367188
    5. ' (' → logprob: -18.125045776367188
    6. '{i' → logprob: -18.875045776367188
    7. '	i' → logprob: -19.500045776367188
    8. '           ' → logprob: -20.125045776367188
    9. '_i' → logprob: -21.000045776367188
    10. '       ' → logprob: -21.125045776367188

Token 586: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024781543761491776
    2. ' -' → logprob: -6.002478122711182
    3. '1' → logprob: -13.12747859954834
    4. ' ' → logprob: -15.50247859954834
    5. '>' → logprob: -16.002477645874023
    6. '   ' → logprob: -16.502477645874023
    7. '```' → logprob: -17.377477645874023
    8. 'i' → logprob: -17.877477645874023
    9. '-
' → logprob: -18.252477645874023
    10. ',' → logprob: -18.377477645874023

Token 587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '0' → logprob: -13.750001907348633
    3. ' ' → logprob: -15.250001907348633
    4. 'j' → logprob: -16.312501907348633
    5. '2' → logprob: -16.687501907348633
    6. '-' → logprob: -16.812501907348633
    7. '```' → logprob: -16.875001907348633
    8. '   ' → logprob: -17.250001907348633
    9. '１' → logprob: -18.375001907348633
    10. ')' → logprob: -18.500001907348633

Token 588: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002338144404347986
    2. ',j' → logprob: -8.37523365020752
    3. ' ,' → logprob: -12.75023365020752
    4. ',
' → logprob: -15.25023365020752
    5. 'j' → logprob: -17.125234603881836
    6. '           ' → logprob: -17.375234603881836
    7. ')' → logprob: -17.875234603881836
    8. '               ' → logprob: -17.875234603881836
    9. ',k' → logprob: -19.000234603881836
    10. ',n' → logprob: -19.000234603881836

Token 589: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0067156096920371056
    2. ' j' → logprob: -5.006715774536133
    3. '   ' → logprob: -16.381715774536133
    4. '	j' → logprob: -16.756715774536133
    5. ',j' → logprob: -18.006715774536133
    6. ' ' → logprob: -18.506715774536133
    7. '$j' → logprob: -19.381715774536133
    8. '_j' → logprob: -19.631715774536133
    9. '       ' → logprob: -19.756715774536133
    10. '    ' → logprob: -20.381715774536133

Token 590: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11354362219572067
    2. '))' → logprob: -2.2385435104370117
    3. '))
' → logprob: -7.863543510437012
    4. ')' → logprob: -8.863543510437012
    5. ' +' → logprob: -8.988543510437012
    6. '           ' → logprob: -10.863543510437012
    7. '+j' → logprob: -11.238543510437012
    8. '   ' → logprob: -11.738543510437012
    9. '               ' → logprob: -11.988543510437012
    10. ')+' → logprob: -12.488543510437012

Token 591: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.703443770878948e-06
    2. '```' → logprob: -12.875007629394531
    3. '#' → logprob: -13.000007629394531
    4. '       ' → logprob: -13.500007629394531
    5. '          ' → logprob: -14.000007629394531
    6. '   ' → logprob: -15.250007629394531
    7. '               ' → logprob: -16.12500762939453
    8. '
' → logprob: -16.50000762939453
    9. '		' → logprob: -16.62500762939453
    10. '            
' → logprob: -16.75000762939453

Token 592: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005270041991025209
    2. '#' (adapté à ' #') → logprob: -5.255270004272461
    3. '       ' → logprob: -11.130270004272461
    4. '```' → logprob: -11.255270004272461
    5. '   ' → logprob: -11.880270004272461
    6. 'if' → logprob: -14.380270004272461
    7. '          ' → logprob: -14.755270004272461
    8. '               ' → logprob: -14.880270004272461
    9. ' #' → logprob: -15.255270004272461
    10. '         ' → logprob: -16.13027000427246

Token 593: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04965433105826378
    2. '           ' → logprob: -3.049654245376587
    3. '5' → logprob: -7.299654483795166
    4. '   ' → logprob: -8.299654006958008
    5. ' #' → logprob: -9.674654006958008
    6. '       ' → logprob: -10.174654006958008
    7. '6' → logprob: -11.174654006958008
    8. '
' → logprob: -11.549654006958008
    9. ' ' → logprob: -11.799654006958008
    10. '7' → logprob: -12.924654006958008

Token 594: '5' (ID: 20)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02887045592069626
    2. '5' → logprob: -4.278870582580566
    3. '           ' → logprob: -4.278870582580566
    4. 'if' → logprob: -7.528870582580566
    5. '   ' → logprob: -8.903870582580566
    6. '       ' → logprob: -10.028870582580566
    7. ' #' → logprob: -11.528870582580566
    8. '4' → logprob: -11.778870582580566
    9. ' ' → logprob: -13.278870582580566
    10. '
' → logprob: -13.778870582580566

Token 595: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5395343899726868
    2. ' if' → logprob: -1.414534330368042
    3. 'if' → logprob: -1.789534330368042
    4. '   ' → logprob: -5.539534568786621
    5. '#' → logprob: -6.414534568786621
    6. ' (' → logprob: -7.539534568786621
    7. 'def' → logprob: -8.289534568786621
    8. ' )' → logprob: -8.539534568786621
    9. ' #' → logprob: -9.289534568786621
    10. '(i' → logprob: -9.539534568786621

Token 596: ' sommet' (ID: 130502)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04597083851695061
    2. ' (' → logprob: -3.920970916748047
    3. 'if' → logprob: -4.545970916748047
    4. '           ' → logprob: -4.920970916748047
    5. '   ' → logprob: -5.920970916748047
    6. '#' → logprob: -6.420970916748047
    7. '       ' → logprob: -7.045970916748047
    8. 'def' → logprob: -7.420970916748047
    9. ' if' → logprob: -8.170970916748047
    10. '(' → logprob: -8.170970916748047

Token 597: ' en' (ID: 469)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9376657009124756
    2. 'en' → logprob: -1.5626657009124756
    3. ' en' → logprob: -1.6876657009124756
    4. '   ' → logprob: -2.4376657009124756
    5. 'in' → logprob: -3.0626657009124756
    6. '=' → logprob: -3.5626657009124756
    7. 'à' → logprob: -4.812665939331055
    8. '+' → logprob: -5.312665939331055
    9. '           ' → logprob: -5.312665939331055
    10. ' (' → logprob: -5.562665939331055

Token 598: ' bas' (ID: 3222)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.059897344559431076
    2. '(i' → logprob: -3.1848974227905273
    3. ' range' → logprob: -4.559897422790527
    4. 'i' → logprob: -5.309897422790527
    5. 'plus' → logprob: -7.434897422790527
    6. '[i' → logprob: -8.434897422790527
    7. 'down' → logprob: -9.559897422790527
    8. '+' → logprob: -9.809897422790527
    9. '
' → logprob: -10.059897422790527
    10. ' i' → logprob: -10.434897422790527

Token 599: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16083328425884247
    2. ' +' → logprob: -1.9108332395553589
    3. '(i' → logprob: -8.285833358764648
    4. '   ' → logprob: -8.660833358764648
    5. ' (' → logprob: -9.660833358764648
    6. '+i' → logprob: -9.660833358764648
    7. ' ' → logprob: -11.160833358764648
    8. ' =' → logprob: -12.410833358764648
    9. '[i' → logprob: -12.410833358764648
    10. ' +=' → logprob: -12.535833358764648

Token 600: ' gauche' (ID: 58367)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016856839880347252
    2. 'i' → logprob: -4.641856670379639
    3. '(i' → logprob: -5.141856670379639
    4. '0' → logprob: -7.641856670379639
    5. '(' → logprob: -7.891856670379639
    6. '+' → logprob: -9.391857147216797
    7. 'plus' → logprob: -9.516857147216797
    8. 'right' → logprob: -10.266857147216797
    9. '[i' → logprob: -10.641857147216797
    10. ' ' → logprob: -10.891857147216797

Token 601: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16023783385753632
    2. '(i' → logprob: -1.9102377891540527
    3. '(' → logprob: -12.035238265991211
    4. '((' → logprob: -12.285238265991211
    5. ' =' → logprob: -13.660238265991211
    6. '   ' → logprob: -14.535238265991211
    7. ',' → logprob: -15.160238265991211
    8. ' `(' → logprob: -15.160238265991211
    9. ' ((' → logprob: -15.285238265991211
    10. '```' → logprob: -15.410238265991211

Token 602: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00031282080453820527
    2. '(i' → logprob: -8.250312805175781
    3. ' i' → logprob: -9.875312805175781
    4. ' (' → logprob: -16.12531280517578
    5. '{i' → logprob: -17.50031280517578
    6. ')i' → logprob: -18.00031280517578
    7. '   ' → logprob: -18.25031280517578
    8. '	i' → logprob: -18.37531280517578
    9. '[i' → logprob: -18.62531280517578
    10. ')' → logprob: -19.37531280517578

Token 603: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02054317481815815
    2. ' +' → logprob: -3.895543098449707
    3. '+
' → logprob: -14.145543098449707
    4. '1' → logprob: -15.395543098449707
    5. '+,' → logprob: -16.145544052124023
    6. '＋' → logprob: -16.145544052124023
    7. ' ' → logprob: -16.520544052124023
    8. ' plus' → logprob: -16.645544052124023
    9. ',' → logprob: -17.020544052124023
    10. 'plus' → logprob: -17.395544052124023

Token 604: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.250003814697266
    4. '+' → logprob: -19.250003814697266
    5. '0' → logprob: -19.375003814697266
    6. '
' → logprob: -19.500003814697266
    7. '```' → logprob: -21.000003814697266
    8. '<|end|>' → logprob: -21.187503814697266
    9. ' ' → logprob: -21.625003814697266
    10. '۱' → logprob: -21.687503814697266

Token 605: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013262155698612332
    2. ' ,' → logprob: -9.25013256072998
    3. '+' → logprob: -10.75013256072998
    4. ' +' → logprob: -12.12513256072998
    5. ')' → logprob: -12.75013256072998
    6. ',i' → logprob: -12.87513256072998
    7. ',
' → logprob: -13.25013256072998
    8. '<|end|>' → logprob: -14.50013256072998
    9. '```' → logprob: -14.75013256072998
    10. '   ' → logprob: -14.75013256072998

Token 606: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10020710527896881
    2. ' j' → logprob: -2.3502070903778076
    3. 'i' → logprob: -15.100207328796387
    4. ',j' → logprob: -17.10020637512207
    5. '	j' → logprob: -17.22520637512207
    6. ' ' → logprob: -17.60020637512207
    7. '$j' → logprob: -17.72520637512207
    8. ' i' → logprob: -19.22520637512207
    9. '   ' → logprob: -19.60020637512207
    10. ',' → logprob: -19.72520637512207

Token 607: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0210366249084473
    2. ')' → logprob: -1.1460366249084473
    3. '+' → logprob: -1.1460366249084473
    4. 'if' → logprob: -6.271036624908447
    5. ' +' → logprob: -6.771036624908447
    6. ' if' → logprob: -8.396036148071289
    7. '),' → logprob: -8.646036148071289
    8. '           ' → logprob: -9.271036148071289
    9. '   ' → logprob: -9.271036148071289
    10. ' ,' → logprob: -9.271036148071289

Token 608: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012134487042203546
    2. '               ' → logprob: -7.376213550567627
    3. 'if' → logprob: -8.126213073730469
    4. ' if' → logprob: -8.376213073730469
    5. ',' → logprob: -11.501213073730469
    6. '```' → logprob: -11.626213073730469
    7. '
' → logprob: -12.001213073730469
    8. ')' → logprob: -12.001213073730469
    9. '                   ' → logprob: -12.251213073730469
    10. ':
' → logprob: -12.501213073730469

Token 609: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868747651576996
    2. 'i' → logprob: -1.136874794960022
    3. '(i' → logprob: -12.88687515258789
    4. ' (' → logprob: -14.01187515258789
    5. '	i' → logprob: -15.63687515258789
    6. '   ' → logprob: -16.13687515258789
    7. ' ' → logprob: -16.26187515258789
    8. '(' → logprob: -17.26187515258789
    9. ' ' → logprob: -18.26187515258789
    10. '  ' → logprob: -18.76187515258789

Token 610: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.29078662395477295
    2. '+' → logprob: -2.0407867431640625
    3. '<' → logprob: -2.4157867431640625
    4. ' +' → logprob: -3.4157867431640625
    5. '<N' → logprob: -8.790786743164062
    6. '+i' → logprob: -10.165786743164062
    7. '<n' → logprob: -11.165786743164062
    8. '<i' → logprob: -11.790786743164062
    9. ' ' → logprob: -12.040786743164062
    10. '<len' → logprob: -12.040786743164062

Token 611: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004307884373702109
    2. ' N' → logprob: -7.750430583953857
    3. '(N' → logprob: -17.000431060791016
    4. ' ' → logprob: -17.625431060791016
    5. '   ' → logprob: -17.625431060791016
    6. '	N' → logprob: -18.500431060791016
    7. '```' → logprob: -19.875431060791016
    8. '  ' → logprob: -20.125431060791016
    9. 'n' → logprob: -20.625431060791016
    10. '
' → logprob: -20.875431060791016

Token 612: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519417703151703
    2. ' +' → logprob: -1.5019418001174927
    3. '+i' → logprob: -12.626941680908203
    4. ' <' → logprob: -13.001941680908203
    5. '           ' → logprob: -13.376941680908203
    6. '<' → logprob: -13.751941680908203
    7. ' and' → logprob: -13.876941680908203
    8. 'and' → logprob: -14.251941680908203
    9. '1' → logprob: -14.376941680908203
    10. '```' → logprob: -14.876941680908203

Token 613: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -19.0
    4. '   ' → logprob: -20.0
    5. '
' → logprob: -20.75
    6. '۱' → logprob: -21.375
    7. '2' → logprob: -21.5
    8. '-' → logprob: -21.75
    9. '１' → logprob: -21.75
    10. '১' → logprob: -22.5

Token 614: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003344898112118244
    2. '               ' → logprob: -5.753345012664795
    3. '```' → logprob: -8.878344535827637
    4. '
' → logprob: -11.753344535827637
    5. ',' → logprob: -12.128344535827637
    6. '   ' → logprob: -12.628344535827637
    7. '                   ' → logprob: -12.878344535827637
    8. '       ' → logprob: -12.878344535827637
    9. '``' → logprob: -12.878344535827637
    10. '            
' → logprob: -13.878344535827637

Token 615: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.215330409351736e-05
    2. '               ' → logprob: -10.375041961669922
    3. 'if' → logprob: -11.750041961669922
    4. '```' → logprob: -14.250041961669922
    5. ' if' → logprob: -14.375041961669922
    6. '       ' → logprob: -15.000041961669922
    7. '		' → logprob: -15.000041961669922
    8. '
' → logprob: -15.125041961669922
    9. '                   ' → logprob: -15.375041961669922
    10. '            
' → logprob: -15.500041961669922

Token 616: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032882824540138245
    2. 'if' (adapté à ' if') → logprob: -3.5328829288482666
    3. ' if' → logprob: -5.7828826904296875
    4. '               ' → logprob: -10.032882690429688
    5. '```' → logprob: -13.157882690429688
    6. '          ' → logprob: -14.657882690429688
    7. '       ' → logprob: -14.782882690429688
    8. '                   ' → logprob: -15.157882690429688
    9. '   ' → logprob: -15.657882690429688
    10. '            ' → logprob: -15.907882690429688

Token 617: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38687655329704285
    2. 'i' → logprob: -1.1368765830993652
    3. '(i' → logprob: -12.386876106262207
    4. '   ' → logprob: -14.386876106262207
    5. ' (' → logprob: -14.886876106262207
    6. '	i' → logprob: -15.261876106262207
    7. ' ' → logprob: -16.511877059936523
    8. '(' → logprob: -17.386877059936523
    9. '  ' → logprob: -17.636877059936523
    10. '    ' → logprob: -18.136877059936523

Token 618: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0586695559322834
    2. '<' → logprob: -2.9336695671081543
    3. '+' → logprob: -5.933669567108154
    4. ' +' → logprob: -6.808669567108154
    5. '<N' → logprob: -11.058669090270996
    6. ' ' → logprob: -11.808669090270996
    7. '<n' → logprob: -14.058669090270996
    8. '   ' → logprob: -14.433669090270996
    9. '<len' → logprob: -14.933669090270996
    10. ' ' → logprob: -15.558669090270996

Token 619: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0067154900170862675
    2. ' N' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.756715774536133
    4. '(N' → logprob: -17.006715774536133
    5. '   ' → logprob: -17.131715774536133
    6. '	N' → logprob: -17.756715774536133
    7. ' (' → logprob: -18.506715774536133
    8. '  ' → logprob: -19.006715774536133
    9. '(' → logprob: -19.381715774536133
    10. '<N' → logprob: -20.881715774536133

Token 620: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18015308678150177
    2. ' +' → logprob: -1.8051531314849854
    3. '-' → logprob: -8.305152893066406
    4. ' -' → logprob: -8.805152893066406
    5. '1' → logprob: -12.305152893066406
    6. ' ' → logprob: -13.055152893066406
    7. '   ' → logprob: -14.180152893066406
    8. '()+' → logprob: -14.180152893066406
    9. '+
' → logprob: -14.555152893066406
    10. '       ' → logprob: -14.680152893066406

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '-' → logprob: -16.875001907348633
    4. '```' → logprob: -18.375001907348633
    5. '<|end|>' → logprob: -20.250001907348633
    6. '
' → logprob: -20.750001907348633
    7. '   ' → logprob: -21.250001907348633
    8. '۱' → logprob: -21.375001907348633
    9. 'N' → logprob: -21.875001907348633
    10. '<|end|>' → logprob: -22.312501907348633

Token 622: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27236655354499817
    2. ':
' → logprob: -1.6473665237426758
    3. ' and' → logprob: -3.772366523742676
    4. ':' → logprob: -4.022366523742676
    5. '           ' → logprob: -5.522366523742676
    6. '):
' → logprob: -7.897366523742676
    7. 'and' → logprob: -8.272366523742676
    8. ',' → logprob: -9.022366523742676
    9. '       ' → logprob: -10.522366523742676
    10. ' :
' → logprob: -10.647366523742676

Token 623: ' j' (ID: 441)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.29845407605171204
    2. 'j' → logprob: -1.4234540462493896
    3. ' True' → logprob: -4.173454284667969
    4. ' j' → logprob: -7.048454284667969
    5. '(True' → logprob: -7.673454284667969
    6. 'len' → logprob: -9.423454284667969
    7. 'adj' → logprob: -9.798454284667969
    8. '           ' → logprob: -9.923454284667969
    9. 'i' → logprob: -10.048454284667969
    10. '1' → logprob: -10.673454284667969

Token 624: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5824561715126038
    2. '<=' → logprob: -0.9574561715126038
    3. ' <' → logprob: -3.582456111907959
    4. '<' → logprob: -4.207456111907959
    5. '+' → logprob: -4.332456111907959
    6. ' +' → logprob: -7.082456111907959
    7. '>=' → logprob: -7.707456111907959
    8. ' >=' → logprob: -8.957456588745117
    9. '0' → logprob: -9.832456588745117
    10. '<i' → logprob: -10.082456588745117

Token 625: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010332842357456684
    2. ' i' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.126032829284668
    4. '	i' → logprob: -15.376032829284668
    5. '(i' → logprob: -16.876033782958984
    6. ' ' → logprob: -17.876033782958984
    7. '=i' → logprob: -17.876033782958984
    8. '  ' → logprob: -19.251033782958984
    9. '{i' → logprob: -19.501033782958984
    10. '_i' → logprob: -19.626033782958984

Token 626: ':
' (ID: 734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0028596781194210052
    2. ':
' → logprob: -6.502859592437744
    3. ' +' → logprob: -7.252859592437744
    4. ':' → logprob: -8.002860069274902
    5. '   ' → logprob: -9.127860069274902
    6. '1' → logprob: -9.752860069274902
    7. '           ' → logprob: -9.877860069274902
    8. '0' → logprob: -10.252860069274902
    9. '       ' → logprob: -11.002860069274902
    10. '               ' → logprob: -11.627860069274902

Token 627: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004676113894674927
    2. ' adj' → logprob: -7.750467777252197
    3. 'adj' → logprob: -10.250467300415039
    4. '(adj' → logprob: -14.250467300415039
    5. '           ' → logprob: -14.875467300415039
    6. '                   ' → logprob: -15.750467300415039
    7. '              ' → logprob: -16.12546730041504
    8. '   ' → logprob: -16.25046730041504
    9. ',' → logprob: -17.00046730041504
    10. '	           ' → logprob: -17.25046730041504

Token 628: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.03838949277997017
    2. ' adj' → logprob: -3.2883894443511963
    3. '               ' → logprob: -8.038389205932617
    4. '           ' → logprob: -10.663389205932617
    5. '(adj' → logprob: -13.538389205932617
    6. 'ad' → logprob: -14.913389205932617
    7. '                   ' → logprob: -16.538389205932617
    8. '   ' → logprob: -16.538389205932617
    9. '_adj' → logprob: -17.538389205932617
    10. 'Adj' → logprob: -17.913389205932617

Token 629: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005888025742024183
    2. '.' → logprob: -5.755887985229492
    3. '               ' → logprob: -6.880887985229492
    4. 'adj' → logprob: -7.380887985229492
    5. '           ' → logprob: -7.630887985229492
    6. '.ad' → logprob: -7.880887985229492
    7. '_adj' → logprob: -9.755887985229492
    8. ' adj' → logprob: -10.130887985229492
    9. '(adj' → logprob: -10.505887985229492
    10. '.add' → logprob: -10.630887985229492

Token 630: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.001522599020972848
    2. '(i' → logprob: -6.501522541046143
    3. '(' → logprob: -11.0015230178833
    4. ' (' → logprob: -13.2515230178833
    5. ' ((' → logprob: -13.6265230178833
    6. '(
' → logprob: -14.5015230178833
    7. '(I' → logprob: -15.8765230178833
    8. '   ' → logprob: -17.126522064208984
    9. ' ' → logprob: -17.376522064208984
    10. '  ' → logprob: -18.126522064208984

Token 631: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000182921823579818
    2. '(i' → logprob: -8.62518310546875
    3. ' i' → logprob: -12.75018310546875
    4. '   ' → logprob: -15.12518310546875
    5. ' (' → logprob: -16.62518310546875
    6. '	i' → logprob: -17.37518310546875
    7. '{i' → logprob: -17.50018310546875
    8. '_i' → logprob: -18.25018310546875
    9. ')i' → logprob: -18.75018310546875
    10. '  ' → logprob: -19.12518310546875

Token 632: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000912774819880724
    2. ' +' → logprob: -7.000912666320801
    3. '1' → logprob: -14.2509126663208
    4. '+
' → logprob: -15.1259126663208
    5. '＋' → logprob: -16.625913619995117
    6. '+i' → logprob: -16.750913619995117
    7. ' ' → logprob: -17.125913619995117
    8. ' plus' → logprob: -17.250913619995117
    9. 'plus' → logprob: -17.375913619995117
    10. '()+' → logprob: -17.375913619995117

Token 633: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '+' → logprob: -13.25000286102295
    3. '2' → logprob: -14.62500286102295
    4. ' ' → logprob: -15.75000286102295
    5. '0' → logprob: -16.375001907348633
    6. 'i' → logprob: -17.000001907348633
    7. '6' → logprob: -18.562501907348633
    8. 'j' → logprob: -18.625001907348633
    9. '```' → logprob: -18.687501907348633
    10. '   ' → logprob: -18.812501907348633

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002128382766386494
    2. ',j' → logprob: -8.625212669372559
    3. ' ,' → logprob: -10.375212669372559
    4. ',
' → logprob: -14.000212669372559
    5. '   ' → logprob: -15.125212669372559
    6. ')' → logprob: -15.375212669372559
    7. '<|end|>' → logprob: -15.625212669372559
    8. '‌,' → logprob: -15.750212669372559
    9. ' ' → logprob: -16.375213623046875
    10. '       ' → logprob: -16.750213623046875

Token 635: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001502598519437015
    2. ' j' → logprob: -6.501502513885498
    3. '	j' → logprob: -15.126502990722656
    4. '   ' → logprob: -17.376502990722656
    5. ',j' → logprob: -18.126502990722656
    6. '$j' → logprob: -18.501502990722656
    7. '_j' → logprob: -19.001502990722656
    8. '    ' → logprob: -19.501502990722656
    9. ' ' → logprob: -20.501502990722656
    10. '[j' → logprob: -21.001502990722656

Token 636: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003314129135105759
    2. ')
' → logprob: -8.87533187866211
    3. '           ' → logprob: -9.25033187866211
    4. '))' → logprob: -10.00033187866211
    5. ' )' → logprob: -10.50033187866211
    6. '+' → logprob: -11.00033187866211
    7. '               ' → logprob: -13.12533187866211
    8. '       ' → logprob: -14.25033187866211
    9. '-' → logprob: -14.62533187866211
    10. '+)' → logprob: -14.87533187866211

Token 637: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.253090865968261e-06
    2. '          ' → logprob: -12.250009536743164
    3. '#' → logprob: -13.375009536743164
    4. '<|end|>' → logprob: -13.500009536743164
    5. '       ' → logprob: -14.625009536743164
    6. '            ' → logprob: -15.375009536743164
    7. '		' → logprob: -15.500009536743164
    8. '               ' → logprob: -16.000009536743164
    9. '            
' → logprob: -16.000009536743164
    10. '         ' → logprob: -16.500009536743164

Token 638: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005010855966247618
    2. '#' (adapté à ' #') → logprob: -7.6255011558532715
    3. 'if' → logprob: -11.625500679016113
    4. '          ' → logprob: -13.250500679016113
    5. '       ' → logprob: -13.750500679016113
    6. ' #' → logprob: -14.750500679016113
    7. ' if' → logprob: -15.125500679016113
    8. '```' → logprob: -15.875500679016113
    9. '               ' → logprob: -16.00050163269043
    10. '   ' → logprob: -16.00050163269043

Token 639: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5881684422492981
    2. '           ' → logprob: -0.8381684422492981
    3. ' if' → logprob: -4.463168621063232
    4. '#' → logprob: -7.713168621063232
    5. '6' → logprob: -9.213168144226074
    6. '   ' → logprob: -10.463168144226074
    7. '5' → logprob: -10.588168144226074
    8. '7' → logprob: -11.963168144226074
    9. '       ' → logprob: -11.963168144226074
    10. ' ' → logprob: -12.088168144226074

Token 640: '6' (ID: 21)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010228076949715614
    2. '6' → logprob: -5.135228157043457
    3. '#' → logprob: -5.635228157043457
    4. '5' → logprob: -8.260228157043457
    5. ' if' → logprob: -8.260228157043457
    6. '           ' → logprob: -8.760228157043457
    7. '   ' → logprob: -10.510228157043457
    8. '       ' → logprob: -11.260228157043457
    9. '7' → logprob: -13.760228157043457
    10. ' ' → logprob: -14.260228157043457

Token 641: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7068322896957397
    2. ' if' → logprob: -0.7068322896957397
    3. 'if' → logprob: -4.706832408905029
    4. ' )' → logprob: -5.581832408905029
    5. '   ' → logprob: -7.456832408905029
    6. '           ' → logprob: -8.581831932067871
    7. ' ' → logprob: -11.706831932067871
    8. '#' → logprob: -12.581831932067871
    9. '       ' → logprob: -12.581831932067871
    10. '    ' → logprob: -12.706831932067871

Token 642: ' sommet' (ID: 130502)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27017244696617126
    2. 'if' → logprob: -1.5201724767684937
    3. '           ' → logprob: -4.020172595977783
    4. '   ' → logprob: -9.645172119140625
    5. ' ' → logprob: -10.645172119140625
    6. '       ' → logprob: -10.895172119140625
    7. '          ' → logprob: -12.145172119140625
    8. ' (' → logprob: -12.645172119140625
    9. '         ' → logprob: -13.145172119140625
    10. '  ' → logprob: -13.270172119140625

Token 643: ' en' (ID: 469)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.0179681777954102
    2. ' à' → logprob: -1.5179681777954102
    3. ' ==' → logprob: -2.14296817779541
    4. '+' → logprob: -2.26796817779541
    5. ' at' → logprob: -3.26796817779541
    6. '==' → logprob: -3.64296817779541
    7. ',' → logprob: -3.76796817779541
    8. '=' → logprob: -3.89296817779541
    9. ' in' → logprob: -4.26796817779541
    10. ' =' → logprob: -4.39296817779541

Token 644: ' bas' (ID: 3222)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5126295685768127
    2. 'bas' → logprob: -1.887629508972168
    3. '(i' → logprob: -2.137629508972168
    4. ' bas' → logprob: -2.762629508972168
    5. 'plus' → logprob: -3.637629508972168
    6. 'bottom' → logprob: -4.137629508972168
    7. 'b' → logprob: -4.512629508972168
    8. ' (' → logprob: -4.887629508972168
    9. '(' → logprob: -5.637629508972168
    10. 'i' → logprob: -7.012629508972168

Token 645: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14273086190223694
    2. ' +' → logprob: -2.017730951309204
    3. '   ' → logprob: -10.267730712890625
    4. '```' → logprob: -12.767730712890625
    5. ',' → logprob: -12.892730712890625
    6. ' (+' → logprob: -12.892730712890625
    7. '+
' → logprob: -13.017730712890625
    8. ' ' → logprob: -13.142730712890625
    9. ' (' → logprob: -13.642730712890625
    10. ' +
' → logprob: -13.767730712890625

Token 646: ' droite' (ID: 61428)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0008703675703145564
    2. 'right' → logprob: -7.750870227813721
    3. ' gauche' → logprob: -8.500870704650879
    4. 'j' → logprob: -9.750870704650879
    5. '1' → logprob: -9.875870704650879
    6. '_left' → logprob: -10.000870704650879
    7. ' left' → logprob: -10.875870704650879
    8. '+' → logprob: -11.000870704650879
    9. ' droite' → logprob: -11.500870704650879
    10. '左' → logprob: -11.625870704650879

Token 647: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07006247341632843
    2. '(i' → logprob: -2.6950623989105225
    3. ' =' → logprob: -10.070062637329102
    4. ',' → logprob: -10.070062637329102
    5. '(' → logprob: -11.195062637329102
    6. '((' → logprob: -11.445062637329102
    7. '=(' → logprob: -11.695062637329102
    8. '           ' → logprob: -13.320062637329102
    9. '(I' → logprob: -13.320062637329102
    10. '=' → logprob: -13.695062637329102

Token 648: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1658051311969757
    2. '(i' → logprob: -2.2908051013946533
    3. ' i' → logprob: -3.1658051013946533
    4. ' (' → logprob: -4.665805339813232
    5. '   ' → logprob: -12.540804862976074
    6. '(' → logprob: -12.540804862976074
    7. ',i' → logprob: -13.540804862976074
    8. '	i' → logprob: -13.665804862976074
    9. ' ' → logprob: -14.540804862976074
    10. '{i' → logprob: -14.790804862976074

Token 649: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0033004588913172483
    2. ',' → logprob: -6.003300666809082
    3. ' +' → logprob: -7.128300666809082
    4. '+,' → logprob: -11.003300666809082
    5. '+
' → logprob: -12.753300666809082
    6. ' ,' → logprob: -13.503300666809082
    7. '<' → logprob: -14.128300666809082
    8. ',
' → logprob: -15.628300666809082
    9. ',+' → logprob: -15.628300666809082
    10. '<|end|>' → logprob: -16.378299713134766

Token 650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.23917081207037e-05
    2. '+' → logprob: -10.125041961669922
    3. ' ' → logprob: -13.000041961669922
    4. ',' → logprob: -17.625041961669922
    5. '
' → logprob: -17.875041961669922
    6. '```' → logprob: -18.625041961669922
    7. '+j' → logprob: -18.750041961669922
    8. ',j' → logprob: -19.000041961669922
    9. '+
' → logprob: -19.625041961669922
    10. ' +' → logprob: -19.625041961669922

Token 651: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.280175097752362e-05
    2. ',j' → logprob: -10.125082969665527
    3. ' ,' → logprob: -10.125082969665527
    4. ',
' → logprob: -13.875082969665527
    5. '<|end|>' → logprob: -14.250082969665527
    6. '           ' → logprob: -15.375082969665527
    7. ')' → logprob: -15.875082969665527
    8. ',i' → logprob: -16.25008201599121
    9. ',n' → logprob: -16.50008201599121
    10. ' ' → logprob: -16.75008201599121

Token 652: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.061967797577381134
    2. ' j' → logprob: -2.8119678497314453
    3. ',j' → logprob: -16.686967849731445
    4. '	j' → logprob: -17.311967849731445
    5. '   ' → logprob: -18.061967849731445
    6. ' ' → logprob: -18.061967849731445
    7. ',' → logprob: -18.561967849731445
    8. '(j' → logprob: -19.311967849731445
    9. '_j' → logprob: -19.561967849731445
    10. '  ' → logprob: -19.686967849731445

Token 653: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002314303710591048
    2. ',' → logprob: -8.750231742858887
    3. ' +' → logprob: -9.750231742858887
    4. '+,' → logprob: -11.375231742858887
    5. '+
' → logprob: -13.250231742858887
    6. '+j' → logprob: -14.000231742858887
    7. ',j' → logprob: -14.625231742858887
    8. '```' → logprob: -17.00023078918457
    9. ' ,' → logprob: -17.50023078918457
    10. ' ' → logprob: -17.75023078918457

Token 654: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. ')' → logprob: -18.0
    4. '```' → logprob: -19.25
    5. '
' → logprob: -19.875
    6. '0' → logprob: -20.25
    7. '+' → logprob: -20.25
    8. '<|end|>' → logprob: -22.0
    9. '１' → logprob: -22.625
    10. '۱' → logprob: -22.75

Token 655: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013381359167397022
    2. ' )' → logprob: -9.125133514404297
    3. ')
' → logprob: -10.750133514404297
    4. '),' → logprob: -14.000133514404297
    5. ',' → logprob: -14.875133514404297
    6. '           ' → logprob: -15.000133514404297
    7. '))' → logprob: -15.000133514404297
    8. ')`' → logprob: -15.125133514404297
    9. ')#' → logprob: -15.750133514404297
    10. ')add' → logprob: -15.750133514404297

Token 656: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6839359402656555
    2. ' if' → logprob: -0.8089359402656555
    3. '               ' → logprob: -3.6839358806610107
    4. ' (' → logprob: -4.43393611907959
    5. '.append' → logprob: -5.55893611907959
    6. ',' → logprob: -5.68393611907959
    7. 'if' → logprob: -5.68393611907959
    8. ')' → logprob: -7.05893611907959
    9. '(' → logprob: -7.18393611907959
    10. '(if' → logprob: -8.43393611907959

Token 657: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20141597092151642
    2. 'i' → logprob: -1.701416015625
    3. '(i' → logprob: -13.076416015625
    4. ' (' → logprob: -14.826416015625
    5. '	i' → logprob: -15.451416015625
    6. ' ' → logprob: -16.951416015625
    7. '(' → logprob: -17.701416015625
    8. '   ' → logprob: -18.326416015625
    9. ' ' → logprob: -18.326416015625
    10. '<i' → logprob: -19.076416015625

Token 658: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6932955980300903
    2. ' <' → logprob: -0.6932955980300903
    3. '<N' → logprob: -8.9432954788208
    4. '+' → logprob: -11.6932954788208
    5. '<n' → logprob: -12.1932954788208
    6. '<i' → logprob: -13.1932954788208
    7. ' +' → logprob: -14.5682954788208
    8. '<num' → logprob: -14.6932954788208
    9. '<len' → logprob: -15.1932954788208
    10. '<I' → logprob: -15.3182954788208

Token 659: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2519296407699585
    2. ' N' → logprob: -1.5019296407699585
    3. '(N' → logprob: -15.00192928314209
    4. ' ' → logprob: -15.87692928314209
    5. '	N' → logprob: -16.626930236816406
    6. ' (' → logprob: -18.001930236816406
    7. 'i' → logprob: -18.001930236816406
    8. '<N' → logprob: -18.376930236816406
    9. '   ' → logprob: -18.876930236816406
    10. '  ' → logprob: -19.251930236816406

Token 660: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07002868503332138
    2. '+' → logprob: -2.695028781890869
    3. ' -' → logprob: -9.570028305053711
    4. '<' → logprob: -11.570028305053711
    5. ' +' → logprob: -12.070028305053711
    6. '1' → logprob: -12.070028305053711
    7. '```' → logprob: -14.695028305053711
    8. ' ' → logprob: -15.195028305053711
    9. '<N' → logprob: -15.320028305053711
    10. '   ' → logprob: -15.695028305053711

Token 661: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003270023735240102
    2. '+' → logprob: -8.625327110290527
    3. ' ' → logprob: -9.750327110290527
    4. '```' → logprob: -10.000327110290527
    5. 'N' → logprob: -10.500327110290527
    6. '
' → logprob: -12.250327110290527
    7. '``' → logprob: -12.750327110290527
    8. '-' → logprob: -12.875327110290527
    9. '<|end|>' → logprob: -13.625327110290527
    10. '2' → logprob: -13.625327110290527

Token 662: ' et' (ID: 859)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017914400668814778
    2. '           ' → logprob: -6.376791477203369
    3. '```' → logprob: -10.501791000366211
    4. ',' → logprob: -11.501791000366211
    5. '                   ' → logprob: -11.626791000366211
    6. ' and' → logprob: -11.626791000366211
    7. '              ' → logprob: -11.751791000366211
    8. ':' → logprob: -11.876791000366211
    9. ' if' → logprob: -12.251791000366211
    10. ' adj' → logprob: -12.751791000366211

Token 663: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4740826487541199
    2. ' j' → logprob: -0.9740826487541199
    3. 'i' → logprob: -13.224082946777344
    4. ' i' → logprob: -13.599082946777344
    5. '(j' → logprob: -13.974082946777344
    6. ' ' → logprob: -14.099082946777344
    7. ' (' → logprob: -14.349082946777344
    8. '	j' → logprob: -15.599082946777344
    9. ' ' → logprob: -16.349082946777344
    10. '   ' → logprob: -16.349082946777344

Token 664: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14360111951828003
    2. '<' → logprob: -2.018601179122925
    3. '+' → logprob: -7.143600940704346
    4. ' +' → logprob: -9.393601417541504
    5. '<i' → logprob: -10.268601417541504
    6. '<n' → logprob: -12.143601417541504
    7. ' ' → logprob: -13.018601417541504
    8. '<N' → logprob: -13.393601417541504
    9. '<p' → logprob: -13.393601417541504
    10. ' <=' → logprob: -13.768601417541504

Token 665: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031781906727701426
    2. ' i' → logprob: -5.753178119659424
    3. '(i' → logprob: -15.628178596496582
    4. '=i' → logprob: -16.378177642822266
    5. ' ' → logprob: -16.878177642822266
    6. '	i' → logprob: -17.253177642822266
    7. '=' → logprob: -17.628177642822266
    8. 'N' → logprob: -18.378177642822266
    9. ' (' → logprob: -19.378177642822266
    10. '   ' → logprob: -19.503177642822266

Token 666: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07001335173845291
    2. ' +' → logprob: -2.6950132846832275
    3. '           ' → logprob: -10.070013046264648
    4. '               ' → logprob: -11.320013046264648
    5. ' <' → logprob: -12.445013046264648
    6. '+i' → logprob: -12.445013046264648
    7. '<' → logprob: -12.445013046264648
    8. '+j' → logprob: -12.570013046264648
    9. '1' → logprob: -13.445013046264648
    10. '<i' → logprob: -13.945013046264648

Token 667: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. '+' → logprob: -11.87501049041748
    3. '2' → logprob: -12.75001049041748
    4. ' ' → logprob: -14.87501049041748
    5. '
' → logprob: -16.125009536743164
    6. '```' → logprob: -16.562509536743164
    7. '۱' → logprob: -17.437509536743164
    8. '   ' → logprob: -18.125009536743164
    9. '0' → logprob: -18.187509536743164
    10. '১' → logprob: -19.312509536743164

Token 668: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015180727932602167
    2. '           ' → logprob: -6.876518249511719
    3. ':
' → logprob: -8.251518249511719
    4. '):
' → logprob: -9.376518249511719
    5. '                   ' → logprob: -9.626518249511719
    6. ':' → logprob: -10.501518249511719
    7. ',' → logprob: -10.626518249511719
    8. '              ' → logprob: -12.251518249511719
    9. '.append' → logprob: -12.626518249511719
    10. ')' → logprob: -13.376518249511719

Token 669: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.466968650580384e-05
    2. '           ' → logprob: -9.875054359436035
    3. '                   ' → logprob: -13.625054359436035
    4. '              ' → logprob: -14.000054359436035
    5. '			' → logprob: -15.250054359436035
    6. '	           ' → logprob: -15.250054359436035
    7. ',' → logprob: -15.500054359436035
    8. ':' → logprob: -15.875054359436035
    9. '			   ' → logprob: -16.87505531311035
    10. '             ' → logprob: -16.87505531311035

Token 670: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4082886278629303
    2. '               ' → logprob: -1.158288598060608
    3. ' if' → logprob: -4.408288478851318
    4. 'if' (adapté à ' if') → logprob: -5.033288478851318
    5. ' adj' → logprob: -6.158288478851318
    6. 'adj' → logprob: -8.158288955688477
    7. '                   ' → logprob: -10.408288955688477
    8. '            ' → logprob: -11.408288955688477
    9. '          ' → logprob: -11.658288955688477
    10. '   ' → logprob: -11.658288955688477

Token 671: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2014147937297821
    2. 'i' → logprob: -1.7014148235321045
    3. '	i' → logprob: -14.576415061950684
    4. '(i' → logprob: -14.701415061950684
    5. '   ' → logprob: -15.076415061950684
    6. ' ' → logprob: -15.826415061950684
    7. ' ' → logprob: -17.201414108276367
    8. '  ' → logprob: -17.326414108276367
    9. ' (' → logprob: -17.451414108276367
    10. 'I' → logprob: -17.701414108276367

Token 672: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.023318151012063026
    2. '<' → logprob: -3.77331805229187
    3. '<N' → logprob: -9.77331829071045
    4. '+' → logprob: -11.39831829071045
    5. ' +' → logprob: -12.64831829071045
    6. '<n' → logprob: -14.27331829071045
    7. ' ' → logprob: -15.02331829071045
    8. '<len' → logprob: -17.148317337036133
    9. '<int' → logprob: -17.398317337036133
    10. ' ' → logprob: -17.523317337036133

Token 673: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03804412856698036
    2. ' N' → logprob: -3.2880442142486572
    3. 'i' → logprob: -13.788043975830078
    4. ' ' → logprob: -14.163043975830078
    5. '(N' → logprob: -14.538043975830078
    6. '	N' → logprob: -15.913043975830078
    7. '   ' → logprob: -16.038043975830078
    8. ' (' → logprob: -16.413043975830078
    9. ' i' → logprob: -16.788043975830078
    10. '  ' → logprob: -17.288043975830078

Token 674: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004078997299075127
    2. ' +' → logprob: -5.5040788650512695
    3. '-' → logprob: -15.00407886505127
    4. '+
' → logprob: -15.37907886505127
    5. '1' → logprob: -16.379079818725586
    6. '()+' → logprob: -17.879079818725586
    7. '＋' → logprob: -17.879079818725586
    8. '<' → logprob: -18.004079818725586
    9. ' ' → logprob: -18.004079818725586
    10. '+i' → logprob: -18.754079818725586

Token 675: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011272187111899257
    2. 'N' → logprob: -9.750112533569336
    3. ' ' → logprob: -10.125112533569336
    4. '+' → logprob: -11.250112533569336
    5. '-' → logprob: -14.250112533569336
    6. ' N' → logprob: -15.125112533569336
    7. '```' → logprob: -15.750112533569336
    8. '
' → logprob: -17.250112533569336
    9. '(N' → logprob: -17.250112533569336
    10. 'len' → logprob: -17.375112533569336

Token 676: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009763410314917564
    2. 'and' → logprob: -4.634763240814209
    3. '           ' → logprob: -12.259763717651367
    4. ' ' → logprob: -14.134763717651367
    5. '          ' → logprob: -15.134763717651367
    6. '	and' → logprob: -15.134763717651367
    7. '   ' → logprob: -15.509763717651367
    8. '       ' → logprob: -15.884763717651367
    9. '            ' → logprob: -15.884763717651367
    10. '    ' → logprob: -16.134763717651367

Token 677: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10020752996206284
    2. ' j' → logprob: -2.350207567214966
    3. '	j' → logprob: -14.225207328796387
    4. '   ' → logprob: -15.475207328796387
    5. ' ' → logprob: -16.975208282470703
    6. '(j' → logprob: -16.975208282470703
    7. '    ' → logprob: -17.475208282470703
    8. '  ' → logprob: -18.350208282470703
    9. ' ' → logprob: -18.475208282470703
    10. '_j' → logprob: -18.975208282470703

Token 678: '+' (ID: 10)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.030501417815685272
    2. '<' → logprob: -4.030501365661621
    3. '+' → logprob: -4.655501365661621
    4. ' +' → logprob: -5.905501365661621
    5. ' ' → logprob: -10.780501365661621
    6. '<i' → logprob: -12.405501365661621
    7. '<(' → logprob: -12.780501365661621
    8. ' (' → logprob: -12.780501365661621
    9. ',' → logprob: -13.030501365661621
    10. '<p' → logprob: -13.530501365661621

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043472214019857347
    2. ' ' → logprob: -7.750434875488281
    3. '0' → logprob: -13.250434875488281
    4. '<=' → logprob: -14.000434875488281
    5. '<' → logprob: -14.375434875488281
    6. ' <=' → logprob: -15.250434875488281
    7. ' <' → logprob: -15.875434875488281
    8. '2' → logprob: -16.12543487548828
    9. '+' → logprob: -16.25043487548828
    10. '(' → logprob: -16.75043487548828

Token 680: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3873656392097473
    2. '<=' → logprob: -1.1373655796051025
    3. '<' → logprob: -8.262365341186523
    4. ' <' → logprob: -8.387365341186523
    5. '<|end|>' → logprob: -13.137365341186523
    6. ')<=' → logprob: -13.512365341186523
    7. ' ' → logprob: -13.887365341186523
    8. ' ≤' → logprob: -13.887365341186523
    9. '≤' → logprob: -14.137365341186523
    10. '```' → logprob: -14.262365341186523

Token 681: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003809833142440766
    2. ' i' → logprob: -7.875380992889404
    3. '(i' → logprob: -15.000380516052246
    4. '   ' → logprob: -15.125380516052246
    5. '	i' → logprob: -15.625380516052246
    6. ' ' → logprob: -15.875380516052246
    7. '  ' → logprob: -17.750381469726562
    8. ' (' → logprob: -18.375381469726562
    9. 'N' → logprob: -18.500381469726562
    10. '=i' → logprob: -19.375381469726562

Token 682: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015991552209015936
    2. ' +' → logprob: -8.750160217285156
    3. '+i' → logprob: -13.875160217285156
    4. '+
' → logprob: -15.250160217285156
    5. '1' → logprob: -16.625160217285156
    6. '```' → logprob: -17.750160217285156
    7. '+j' → logprob: -18.125160217285156
    8. '   ' → logprob: -18.125160217285156
    9. 'plus' → logprob: -18.250160217285156
    10. '＋' → logprob: -18.625160217285156

Token 683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '2' → logprob: -16.000001907348633
    4. '+' → logprob: -16.000001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '```' → logprob: -19.125001907348633
    7. '<|end|>' → logprob: -19.250001907348633
    8. '  ' → logprob: -19.812501907348633
    9. '۱' → logprob: -20.062501907348633
    10. '0' → logprob: -20.375001907348633

Token 684: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14975760877132416
    2. ':' → logprob: -2.0247576236724854
    3. '               ' → logprob: -5.024757385253906
    4. '           ' → logprob: -8.524757385253906
    5. '):
' → logprob: -8.649757385253906
    6. ' :
' → logprob: -9.524757385253906
    7. ':
' → logprob: -11.899757385253906
    8. '):' → logprob: -12.149757385253906
    9. ':

' → logprob: -12.149757385253906
    10. ' :' → logprob: -12.399757385253906

Token 685: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1517960956552997e-05
    2. ' adj' → logprob: -12.125011444091797
    3. '	           ' → logprob: -13.625011444091797
    4. '			' → logprob: -13.625011444091797
    5. '              ' → logprob: -13.875011444091797
    6. 'adj' → logprob: -14.250011444091797
    7. '           ' → logprob: -14.500011444091797
    8. '                   ' → logprob: -14.500011444091797
    9. '(adj' → logprob: -15.375011444091797
    10. '		       ' → logprob: -15.750011444091797

Token 686: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.12789331376552582
    2. ' adj' → logprob: -2.1278932094573975
    3. '               ' → logprob: -7.002893447875977
    4. '           ' → logprob: -9.877893447875977
    5. '                   ' → logprob: -13.502893447875977
    6. 'ad' → logprob: -13.877893447875977
    7. '(adj' → logprob: -13.877893447875977
    8. '              ' → logprob: -15.127893447875977
    9. '   ' → logprob: -15.127893447875977
    10. '             ' → logprob: -15.877893447875977

Token 687: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002593130338937044
    2. '.' → logprob: -8.750259399414062
    3. '           ' → logprob: -9.625259399414062
    4. '.ad' → logprob: -10.500259399414062
    5. '.add' → logprob: -12.750259399414062
    6. 'adj' → logprob: -13.500259399414062
    7. ' .' → logprob: -14.250259399414062
    8. '.app' → logprob: -14.875259399414062
    9. '.extend' → logprob: -15.000259399414062
    10. '].' → logprob: -15.250259399414062

Token 688: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.375016212463379
    3. '(
' → logprob: -12.500016212463379
    4. ' ((' → logprob: -14.000016212463379
    5. '(i' → logprob: -14.750016212463379
    6. '   ' → logprob: -18.500017166137695
    7. ' ' → logprob: -18.875017166137695
    8. '(
' → logprob: -19.125017166137695
    9. ' (' → logprob: -19.500017166137695
    10. '[(' → logprob: -19.750017166137695

Token 689: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003851517685689032
    2. '(i' → logprob: -7.875385284423828
    3. ' i' → logprob: -12.375385284423828
    4. ' (' → logprob: -14.500385284423828
    5. '   ' → logprob: -15.375385284423828
    6. '	i' → logprob: -16.875385284423828
    7. '{i' → logprob: -18.125385284423828
    8. '  ' → logprob: -18.375385284423828
    9. '(' → logprob: -18.875385284423828
    10. '_i' → logprob: -19.125385284423828

Token 690: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010270876373397186
    2. ' +' → logprob: -9.250102996826172
    3. ',' → logprob: -12.000102996826172
    4. '+i' → logprob: -15.625102996826172
    5. '+
' → logprob: -16.375102996826172
    6. '+,' → logprob: -16.750102996826172
    7. '```' → logprob: -18.125102996826172
    8. ',i' → logprob: -18.125102996826172
    9. '＋' → logprob: -18.250102996826172
    10. ' ' → logprob: -18.625102996826172

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.666993507067673e-05
    2. '+' → logprob: -10.875036239624023
    3. 'j' → logprob: -11.375036239624023
    4. 'i' → logprob: -12.625036239624023
    5. ' ' → logprob: -13.125036239624023
    6. '2' → logprob: -14.625036239624023
    7. '```' → logprob: -15.875036239624023
    8. ')' → logprob: -16.250036239624023
    9. '(' → logprob: -16.750036239624023
    10. '
' → logprob: -17.000036239624023

Token 692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017028623551595956
    2. ',j' → logprob: -9.125170707702637
    3. ' ,' → logprob: -9.750170707702637
    4. ',
' → logprob: -13.750170707702637
    5. ',p' → logprob: -14.625170707702637
    6. ',n' → logprob: -15.125170707702637
    7. '<|end|>' → logprob: -15.125170707702637
    8. '‌,' → logprob: -16.00016975402832
    9. ',v' → logprob: -16.50016975402832
    10. ',k' → logprob: -16.50016975402832

Token 693: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029750604182481766
    2. ' j' → logprob: -3.5297505855560303
    3. '   ' → logprob: -16.52975082397461
    4. '	j' → logprob: -16.90475082397461
    5. ' ' → logprob: -17.52975082397461
    6. ',j' → logprob: -19.02975082397461
    7. '    ' → logprob: -19.27975082397461
    8. '  ' → logprob: -19.27975082397461
    9. '(j' → logprob: -19.40475082397461
    10. '$j' → logprob: -19.77975082397461

Token 694: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.4285862057004124e-05
    2. ' +' → logprob: -10.50003433227539
    3. '+
' → logprob: -12.87503433227539
    4. '+j' → logprob: -13.25003433227539
    5. ',' → logprob: -13.62503433227539
    6. ')+' → logprob: -14.62503433227539
    7. ')' → logprob: -14.87503433227539
    8. '+,' → logprob: -16.50003433227539
    9. '),' → logprob: -17.12503433227539
    10. '1' → logprob: -17.25003433227539

Token 695: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001208211062476039
    2. 'j' → logprob: -7.376208305358887
    3. '+' → logprob: -7.751208305358887
    4. '2' → logprob: -8.876208305358887
    5. ' ' → logprob: -11.626208305358887
    6. ')' → logprob: -13.251208305358887
    7. '```' → logprob: -15.001208305358887
    8. '   ' → logprob: -15.376208305358887
    9. ' j' → logprob: -15.751208305358887
    10. '++' → logprob: -17.00120735168457

Token 696: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023152378853410482
    2. '           ' → logprob: -6.877315044403076
    3. ')
' → logprob: -7.002315044403076
    4. '))' → logprob: -8.252315521240234
    5. '               ' → logprob: -9.752315521240234
    6. ' )' → logprob: -10.002315521240234
    7. '))
' → logprob: -13.127315521240234
    8. ')`' → logprob: -13.502315521240234
    9. ')`
' → logprob: -13.502315521240234
    10. ')
' → logprob: -15.252315521240234

Token 697: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011881264857947826
    2. '<|end|>' → logprob: -5.011881351470947
    3. ')' → logprob: -5.386881351470947
    4. '               ' → logprob: -8.511880874633789
    5. '<|end|>' → logprob: -9.636880874633789
    6. '       ' → logprob: -9.761880874633789
    7. '		' → logprob: -9.886880874633789
    8. '            
' → logprob: -10.011880874633789
    9. '                   ' → logprob: -10.761880874633789
    10. ']' → logprob: -10.886880874633789

Token 698: ' neighbors' (ID: 31655)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006888123229146004
    2. 'neighbors' (adapté à ' neighbors') → logprob: -5.006887912750244
    3. '		' → logprob: -9.131888389587402
    4. ' neighbors' → logprob: -10.381888389587402
    5. '               ' → logprob: -11.756888389587402
    6. ')' → logprob: -12.256888389587402
    7. '_neighbors' → logprob: -12.256888389587402
    8. '       ' → logprob: -12.506888389587402
    9. '          ' → logprob: -12.881888389587402
    10. '```' → logprob: -13.006888389587402

Token 699: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.3856492842023727e-06
    2. '[i' → logprob: -14.375000953674316
    3. '[' → logprob: -15.250000953674316
    4. '.setdefault' → logprob: -15.375000953674316
    5. '[((' → logprob: -15.500000953674316
    6. '```' → logprob: -18.125001907348633
    7. '((' → logprob: -18.750001907348633
    8. ' [(' → logprob: -18.875001907348633
    9. '
' → logprob: -19.625001907348633
    10. '   ' → logprob: -19.875001907348633

Token 700: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.704273118884885e-07
    2. ' i' → logprob: -14.250000953674316
    3. ')' → logprob: -18.75
    4. '<|end|>' → logprob: -18.875
    5. ')i' → logprob: -19.25
    6. '
' → logprob: -19.875
    7. '	i' → logprob: -20.0
    8. '   ' → logprob: -20.0
    9. '_i' → logprob: -20.75
    10. '```' → logprob: -20.75

Token 701: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16027328372001648
    2. ',j' → logprob: -1.9102733135223389
    3. ' ,' → logprob: -10.410273551940918
    4. ',
' → logprob: -12.035273551940918
    5. ',n' → logprob: -12.410273551940918
    6. ',s' → logprob: -13.910273551940918
    7. ',p' → logprob: -14.285273551940918
    8. ',y' → logprob: -14.535273551940918
    9. ',w' → logprob: -14.785273551940918
    10. ',user' → logprob: -14.910273551940918

Token 702: ')]' (ID: 15710)
  Prédit: ')].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')].' → logprob: -0.02088203839957714
    2. ')]' → logprob: -3.8958821296691895
    3. '].' → logprob: -8.770881652832031
    4. ']' → logprob: -9.145881652832031
    5. ')' → logprob: -10.770881652832031
    6. ']).' → logprob: -10.895881652832031
    7. '])' → logprob: -11.145881652832031
    8. ']].' → logprob: -11.270881652832031
    9. ')])' → logprob: -12.645881652832031
    10. '           ' → logprob: -12.770881652832031

Token 703: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164566993713379
    2. ' =' → logprob: -4.264164447784424
    3. ')' → logprob: -15.139164924621582
    4. '.=' → logprob: -15.139164924621582
    5. '.append' → logprob: -15.639164924621582
    6. ')=' → logprob: -16.639163970947266
    7. '.' → logprob: -16.639163970947266
    8. '=
' → logprob: -17.139163970947266
    9. '+=' → logprob: -17.389163970947266
    10. '=end' → logprob: -17.514163970947266

Token 704: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.318681188422488e-05
    2. ' adj' → logprob: -11.25001335144043
    3. 'ad' → logprob: -16.12501335144043
    4. '   ' → logprob: -20.00001335144043
    5. '(adj' → logprob: -20.12501335144043
    6. '           ' → logprob: -20.37501335144043
    7. 'Adj' → logprob: -20.75001335144043
    8. 'adm' → logprob: -20.75001335144043
    9. 'adv' → logprob: -21.62501335144043
    10. '       ' → logprob: -21.75001335144043

Token 705: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2916724681854248
    2. ' return' → logprob: -2.166672468185425
    3. 'return' → logprob: -2.291672468185425
    4. '	return' → logprob: -3.416672468185425
    5. '<|end|>' → logprob: -6.666672706604004
    6. '
' → logprob: -6.791672706604004
    7. ':return' → logprob: -7.166672706604004
    8. ' ' → logprob: -7.916672706604004
    9. '    
' → logprob: -8.041672706604004
    10. '           ' → logprob: -8.791672706604004

Token 706: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033478669356554747
    2. 'return' → logprob: -6.503347873687744
    3. ' return' → logprob: -7.128347873687744
    4. '           ' → logprob: -7.503347873687744
    5. '	return' → logprob: -7.753347873687744
    6. '       ' → logprob: -10.378347396850586
    7. ':return' → logprob: -11.628347396850586
    8. ' ' → logprob: -12.003347396850586
    9. '```' → logprob: -12.253347396850586
    10. '<|end|>' → logprob: -13.003347396850586

Token 707: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02133946120738983
    2. '   ' → logprob: -4.021339416503906
    3. ' return' → logprob: -5.771339416503906
    4. '	return' → logprob: -9.896339416503906
    5. '```' → logprob: -11.771339416503906
    6. '
' → logprob: -12.396339416503906
    7. ':return' → logprob: -12.771339416503906
    8. ' ' → logprob: -13.146339416503906
    9. '       ' → logprob: -14.271339416503906
    10. '           ' → logprob: -14.521339416503906

Token 708: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0007104054093360901
    2. ' neighbors' → logprob: -7.250710487365723
    3. 'neighbor' → logprob: -15.250710487365723
    4. 'ne' → logprob: -15.250710487365723
    5. '_neighbors' → logprob: -17.125709533691406
    6. '```' → logprob: -19.250709533691406
    7. 'neur' → logprob: -19.750709533691406
    8. 'Neighbors' → logprob: -20.500709533691406
    9. '(ne' → logprob: -20.875709533691406
    10. 'n' → logprob: -22.125709533691406

Token 709: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4092733860015869
    2. '<|end|>' → logprob: -1.159273386001587
    3. '```' → logprob: -5.284273147583008
    4. '
' → logprob: -5.284273147583008
    5. ')' → logprob: -5.909273147583008
    6. '<|end|>' → logprob: -6.034273147583008
    7. '           ' → logprob: -6.284273147583008
    8. '   ' → logprob: -6.784273147583008
    9. '            
' → logprob: -7.534273147583008
    10. '       ' → logprob: -7.534273147583008

Token 710: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02449212595820427
    2. '           ' → logprob: -4.024492263793945
    3. '```' → logprob: -6.274492263793945
    4. '<|end|>' → logprob: -6.899492263793945
    5. ')' → logprob: -7.024492263793945
    6. '       ' → logprob: -7.649492263793945
    7. 'return' → logprob: -7.649492263793945
    8. '   ' → logprob: -7.649492263793945
    9. '#' → logprob: -8.274492263793945
    10. '               ' → logprob: -8.399492263793945

Token 711: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.18564943969249725
    2. 'find' → logprob: -2.0606493949890137
    3. 'dfs' → logprob: -4.685649394989014
    4. ' dfs' → logprob: -5.435649394989014
    5. 'simulate' → logprob: -5.560649394989014
    6. 'score' → logprob: -5.810649394989014
    7. ' get' → logprob: -5.935649394989014
    8. 'b' → logprob: -6.185649394989014
    9. 'possible' → logprob: -6.435649394989014
    10. 'get' → logprob: -6.560649394989014

Token 712: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.3869839310646057
    2. '_group' → logprob: -1.136983871459961
    3. '_' → logprob: -9.511983871459961
    4. '_connected' → logprob: -11.136983871459961
    5. '_clusters' → logprob: -11.886983871459961
    6. '_neighbors' → logprob: -12.011983871459961
    7. 'group' → logprob: -13.011983871459961
    8. '_best' → logprob: -13.261983871459961
    9. '_possible' → logprob: -14.011983871459961
    10. '_g' → logprob: -14.011983871459961

Token 713: '(board' (ID: 41261)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06700893491506577
    2. '(board' → logprob: -2.9420089721679688
    3. '(' → logprob: -4.442008972167969
    4. '(Board' → logprob: -9.067008972167969
    5. ' (' → logprob: -9.692008972167969
    6. '((' → logprob: -10.067008972167969
    7. '(
' → logprob: -11.067008972167969
    8. '(n' → logprob: -11.567008972167969
    9. 'def' → logprob: -12.067008972167969
    10. '_board' → logprob: -12.442008972167969

Token 714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013488641707226634
    2. ',N' → logprob: -9.000134468078613
    3. ' ,' → logprob: -12.000134468078613
    4. '   ' → logprob: -13.250134468078613
    5. ',
' → logprob: -14.125134468078613
    6. '):' → logprob: -14.250134468078613
    7. ',n' → logprob: -14.375134468078613
    8. ',i' → logprob: -14.375134468078613
    9. '):
' → logprob: -15.375134468078613
    10. '(N' → logprob: -15.500134468078613

Token 715: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.31667688488960266
    2. 'N' → logprob: -1.3166768550872803
    3. ' neighbors' → logprob: -5.941677093505859
    4. ' N' → logprob: -7.441677093505859
    5. 'board' → logprob: -9.31667709350586
    6. 'visited' → logprob: -10.69167709350586
    7. 'neighbor' → logprob: -10.69167709350586
    8. 'ne' → logprob: -11.31667709350586
    9. 'players' → logprob: -11.69167709350586
    10. '_neighbors' → logprob: -12.06667709350586

Token 716: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1195860281586647
    2. '):' → logprob: -2.2445859909057617
    3. '):
' → logprob: -5.744585990905762
    4. ',N' → logprob: -5.869585990905762
    5. '   ' → logprob: -8.369585990905762
    6. ')' → logprob: -8.369585990905762
    7. ' ,' → logprob: -8.994585990905762
    8. '(N' → logprob: -10.244585990905762
    9. '):
' → logprob: -10.369585990905762
    10. 'def' → logprob: -11.369585990905762

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010113488882780075
    2. 'N' → logprob: -4.760113716125488
    3. 'def' → logprob: -6.510113716125488
    4. 'from' → logprob: -12.635113716125488
    5. ' N' → logprob: -12.760113716125488
    6. '   ' → logprob: -13.510113716125488
    7. 'n' → logprob: -14.510113716125488
    8. '	N' → logprob: -14.885113716125488
    9. '```' → logprob: -15.010113716125488
    10. '
' → logprob: -15.385113716125488

Token 718: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03374471142888069
    2. 'visited' → logprob: -3.7837448120117188
    3. '   ' → logprob: -5.533744812011719
    4. 'def' → logprob: -5.533744812011719
    5. 'groups' → logprob: -6.033744812011719
    6. 'from' → logprob: -8.908744812011719
    7. ' N' → logprob: -12.658744812011719
    8. 'group' → logprob: -12.783744812011719
    9. ' visited' → logprob: -13.408744812011719
    10. 'seen' → logprob: -13.533744812011719

Token 719: ' Ren' (ID: 17631)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.37968966364860535
    2. 'visited' → logprob: -2.1296896934509277
    3. 'groups' → logprob: -2.2546896934509277
    4. 'def' → logprob: -2.5046896934509277
    5. '   ' → logprob: -4.629689693450928
    6. ' N' → logprob: -8.37968921661377
    7. 'group' → logprob: -8.75468921661377
    8. ' visited' → logprob: -9.25468921661377
    9. 'from' → logprob: -9.62968921661377
    10. 'n' → logprob: -9.87968921661377

Token 720: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.0005486258305609226
    2. 'def' → logprob: -8.750548362731934
    3. 'voi' → logprob: -8.875548362731934
    4. 'voy' → logprob: -9.375548362731934
    5. 'voit' → logprob: -9.375548362731934
    6. 'vo' → logprob: -10.500548362731934
    7. 'it' → logprob: -11.625548362731934
    8. '   ' → logprob: -12.000548362731934
    9. 't' → logprob: -12.000548362731934
    10. 'v' → logprob: -12.375548362731934

Token 721: ' une' (ID: 2463)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.06538629531860352
    2. ' groups' → logprob: -2.8153862953186035
    3. 'visited' → logprob: -6.1903862953186035
    4. '[]' → logprob: -7.5653862953186035
    5. '   ' → logprob: -8.690385818481445
    6. 'group' → logprob: -9.065385818481445
    7. 'def' → logprob: -9.315385818481445
    8. '{}' → logprob: -9.315385818481445
    9. '[(' → logprob: -9.440385818481445
    10. 'board' → logprob: -9.565385818481445

Token 722: ' liste' (ID: 31719)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30276918411254883
    2. 'dict' → logprob: -2.052769184112549
    3. 'list' → logprob: -2.052769184112549
    4. 'liste' → logprob: -6.052769184112549
    5. 'visited' → logprob: -6.927769184112549
    6. 'List' → logprob: -7.302769184112549
    7. ' dict' → logprob: -8.92776870727539
    8. '[]' → logprob: -9.80276870727539
    9. ' list' → logprob: -9.80276870727539
    10. 'from' → logprob: -9.92776870727539

Token 723: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8807098865509033
    2. 'de' → logprob: -2.0057098865509033
    3. 'of' → logprob: -2.1307098865509033
    4. '_of' → logprob: -2.7557098865509033
    5. '[]' → logprob: -2.7557098865509033
    6. '[' → logprob: -3.0057098865509033
    7. ' of' → logprob: -3.0057098865509033
    8. '   ' → logprob: -3.6307098865509033
    9. ' de' → logprob: -4.130709648132324
    10. 'des' → logprob: -4.255709648132324

Token 724: ' groupes' (ID: 72206)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.02739107608795166
    2. '[]' → logprob: -4.402390956878662
    3. '[(' → logprob: -4.527390956878662
    4. 'group' → logprob: -6.652390956878662
    5. 'list' → logprob: -6.902390956878662
    6. '[]
' → logprob: -7.527390956878662
    7. '[' → logprob: -8.27739143371582
    8. '(groups' → logprob: -8.52739143371582
    9. '[((' → logprob: -8.52739143371582
    10. '[group' → logprob: -8.90239143371582

Token 725: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2645714282989502
    2. 'def' → logprob: -1.5145714282989502
    3. ' =' → logprob: -1.8895714282989502
    4. '[]' → logprob: -2.26457142829895
    5. '=[]' → logprob: -2.26457142829895
    6. '(board' → logprob: -3.26457142829895
    7. '[(' → logprob: -3.76457142829895
    8. '=' → logprob: -3.88957142829895
    9. ' (' → logprob: -4.514571189880371
    10. '=[]
' → logprob: -4.889571189880371

Token 726: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26103490591049194
    2. 'def' → logprob: -1.6360349655151367
    3. ' =' → logprob: -3.7610349655151367
    4. '=' → logprob: -5.761034965515137
    5. ',' → logprob: -5.886034965515137
    6. '(board' → logprob: -6.011034965515137
    7. '=[]' → logprob: -6.761034965515137
    8. 'of' → logprob: -7.886034965515137
    9. 'de' → logprob: -8.136034965515137
    10. ':' → logprob: -8.636034965515137

Token 727: ' #' (ID: 1069)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.4575551748275757
    2. '   ' → logprob: -1.7075551748275757
    3. 'def' → logprob: -2.8325552940368652
    4. 'visited' → logprob: -2.8325552940368652
    5. ' groups' → logprob: -3.3325552940368652
    6. 'N' → logprob: -3.5825552940368652
    7. ' N' → logprob: -6.207555294036865
    8. ' visited' → logprob: -6.207555294036865
    9. '(N' → logprob: -9.082554817199707
    10. ' def' → logprob: -9.082554817199707

Token 728: ' Chaque' (ID: 94758)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.14873479306697845
    2. 'def' → logprob: -3.0237348079681396
    3. 'visited' → logprob: -3.0237348079681396
    4. ' groups' → logprob: -3.8987348079681396
    5. '   ' → logprob: -4.2737345695495605
    6. ' visited' → logprob: -5.7737345695495605
    7. '#' → logprob: -6.8987345695495605
    8. 'group' → logprob: -6.8987345695495605
    9. 'N' → logprob: -7.0237345695495605
    10. ' N' → logprob: -8.648735046386719

Token 729: ' groupe' (ID: 29494)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.43539878726005554
    2. 'group' → logprob: -1.310398817062378
    3. ' groupe' → logprob: -2.560398817062378
    4. '_group' → logprob: -6.060398578643799
    5. '_' → logprob: -6.810398578643799
    6. 'token' → logprob: -7.560398578643799
    7. ' token' → logprob: -7.685398578643799
    8. 'def' → logprob: -8.310399055480957
    9. ' _' → logprob: -8.435399055480957
    10. 'g' → logprob: -8.435399055480957

Token 730: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.8263919353485107
    2. ' est' → logprob: -0.8263919353485107
    3. ' =' → logprob: -2.4513919353485107
    4. '=' → logprob: -3.3263919353485107
    5. ' is' → logprob: -6.70139217376709
    6. ':' → logprob: -7.32639217376709
    7. '_est' → logprob: -8.07639217376709
    8. '=[]' → logprob: -8.95139217376709
    9. 'def' → logprob: -9.45139217376709
    10. 'is' → logprob: -9.57639217376709

Token 731: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.012817579321563244
    2. ' []' → logprob: -5.0128173828125
    3. '([]' → logprob: -6.2628173828125
    4. 'un' → logprob: -6.7628173828125
    5. '[(' → logprob: -7.0128173828125
    6. 'une' → logprob: -7.0128173828125
    7. '[]
' → logprob: -7.8878173828125
    8. 'set' → logprob: -8.3878173828125
    9. '([],' → logprob: -8.5128173828125
    10. '[' → logprob: -9.3878173828125

Token 732: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.042287420481443405
    2. 'tuple' → logprob: -4.667287349700928
    3. 'dict' → logprob: -4.917287349700928
    4. 'set' → logprob: -5.042287349700928
    5. '[(' → logprob: -5.042287349700928
    6. 'liste' → logprob: -5.292287349700928
    7. '[' → logprob: -6.042287349700928
    8. 'def' → logprob: -6.292287349700928
    9. '[
' → logprob: -6.667287349700928
    10. '[]' → logprob: -7.042287349700928

Token 733: ' de' (ID: 334)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.075221300125122
    2. 'de' → logprob: -1.450221300125122
    3. 'def' → logprob: -1.825221300125122
    4. 'des' → logprob: -2.450221300125122
    5. 'of' → logprob: -2.450221300125122
    6. ' of' → logprob: -3.450221300125122
    7. '   ' → logprob: -3.700221300125122
    8. ' de' → logprob: -4.325221061706543
    9. ' des' → logprob: -5.450221061706543
    10. '[' → logprob: -5.575221061706543

Token 734: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6307081580162048
    2. '[(' → logprob: -1.7557082176208496
    3. '(' → logprob: -2.0057082176208496
    4. '((' → logprob: -3.2557082176208496
    5. '(s' → logprob: -3.3807082176208496
    6. 'tu' → logprob: -3.6307082176208496
    7. ' tuples' → logprob: -4.13070821762085
    8. 'nodes' → logprob: -4.75570821762085
    9. 'vertices' → logprob: -5.25570821762085
    10. '(t' → logprob: -5.25570821762085

Token 735: ' (' (ID: 350)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.19868652522563934
    2. 'def' → logprob: -2.4486865997314453
    3. '   ' → logprob: -2.8236865997314453
    4. ' [(' → logprob: -4.573686599731445
    5. '([(' → logprob: -4.948686599731445
    6. '[]' → logprob: -5.198686599731445
    7. '[]
' → logprob: -6.198686599731445
    8. ' =' → logprob: -6.448686599731445
    9. '((' → logprob: -6.823686599731445
    10. ' (' → logprob: -6.823686599731445

Token 736: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.007468670606613159
    2. ' (' → logprob: -5.0074687004089355
    3. '(' → logprob: -8.757468223571777
    4. ' tuples' → logprob: -8.757468223571777
    5. ')' → logprob: -9.257468223571777
    6. 'tuple' → logprob: -9.632468223571777
    7. '[i' → logprob: -9.757468223571777
    8. '   ' → logprob: -9.882468223571777
    9. '[(' → logprob: -10.132468223571777
    10. '(tuple' → logprob: -10.507468223571777

Token 737: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.0699901208281517
    2. ',' → logprob: -2.6949901580810547
    3. ',n' → logprob: -10.444990158081055
    4. ' ,' → logprob: -11.569990158081055
    5. ',int' → logprob: -12.194990158081055
    6. ',k' → logprob: -12.819990158081055
    7. ',J' → logprob: -13.569990158081055
    8. ',s' → logprob: -14.319990158081055
    9. ',
' → logprob: -14.444990158081055
    10. ',p' → logprob: -14.569990158081055

Token 738: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009412388317286968
    2. ')
' → logprob: -7.000941276550293
    3. ' )' → logprob: -11.125941276550293
    4. '   ' → logprob: -11.750941276550293
    5. '),' → logprob: -13.125941276550293
    6. '):
' → logprob: -13.625941276550293
    7. '))' → logprob: -14.250941276550293
    8. '):' → logprob: -14.375941276550293
    9. ' ' → logprob: -15.375941276550293
    10. ')]' → logprob: -15.375941276550293

Token 739: ' ayant' (ID: 45436)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4454440474510193
    2. 'def' → logprob: -1.320444107055664
    3. ' =' → logprob: -3.320444107055664
    4. ':' → logprob: -3.570444107055664
    5. ',' → logprob: -4.695444107055664
    6. ':
' → logprob: -5.320444107055664
    7. '=' → logprob: -5.570444107055664
    8. ' def' → logprob: -6.320444107055664
    9. 'visited' → logprob: -6.570444107055664
    10. '[]' → logprob: -7.320444107055664

Token 740: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.32906287908554077
    2. ' la' → logprob: -1.8290629386901855
    3. 'le' → logprob: -2.7040629386901855
    4. 'the' → logprob: -3.2040629386901855
    5. ' the' → logprob: -5.4540629386901855
    6. 'same' → logprob: -5.9540629386901855
    7. ' le' → logprob: -6.3290629386901855
    8. 'board' → logprob: -6.4540629386901855
    9. ' même' → logprob: -7.4540629386901855
    10. ' board' → logprob: -7.8290629386901855

Token 741: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.026656365022063255
    2. ' même' → logprob: -3.90165638923645
    3. 'same' → logprob: -5.151656150817871
    4. '```' → logprob: -8.776656150817871
    5. 'Même' → logprob: -10.151656150817871
    6. ' same' → logprob: -10.401656150817871
    7. ' mêmes' → logprob: -10.901656150817871
    8. 'mé' → logprob: -11.276656150817871
    9. 'mme' → logprob: -11.651656150817871
    10. ' m' → logprob: -11.901656150817871

Token 742: ' numéro' (ID: 65036)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.6671755313873291
    2. 'value' → logprob: -1.667175531387329
    3. 'val' → logprob: -1.792175531387329
    4. 'num' → logprob: -3.042175531387329
    5. 'color' → logprob: -3.667175531387329
    6. ' player' → logprob: -4.16717529296875
    7. 'token' → logprob: -4.66717529296875
    8. ' joueur' → logprob: -4.66717529296875
    9. 'owner' → logprob: -5.41717529296875
    10. ' value' → logprob: -5.66717529296875

Token 743: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7112489938735962
    2. 'def' → logprob: -1.4612489938735962
    3. '   ' → logprob: -2.2112488746643066
    4. ')' → logprob: -3.0862488746643066
    5. ' et' → logprob: -3.9612488746643066
    6. ' def' → logprob: -4.086248874664307
    7. '
' → logprob: -4.211248874664307
    8. ' and' → logprob: -4.586248874664307
    9. ' (' → logprob: -4.836248874664307
    10. ' =' → logprob: -4.961248874664307

Token 744: ' étant' (ID: 47869)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3528115451335907
    2. ' not' → logprob: -2.352811574935913
    3. 'same' → logprob: -2.852811574935913
    4. 'visited' → logprob: -3.102811574935913
    5. 'non' → logprob: -3.602811574935913
    6. 'un' → logprob: -4.352811336517334
    7. 'une' → logprob: -4.352811336517334
    8. 'def' → logprob: -4.977811336517334
    9. '#' → logprob: -5.352811336517334
    10. ' non' → logprob: -5.477811336517334

Token 745: ' connect' (ID: 4837)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.19185659289360046
    2. 'conn' → logprob: -1.8168566226959229
    3. 'connected' → logprob: -4.816856384277344
    4. 'adj' → logprob: -6.566856384277344
    5. ' connect' → logprob: -7.066856384277344
    6. 'cont' → logprob: -7.066856384277344
    7. 'con' → logprob: -8.691856384277344
    8. ' connected' → logprob: -8.941856384277344
    9. ' contiguous' → logprob: -9.441856384277344
    10. ' connex' → logprob: -9.816856384277344

Token 746: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.002433332148939371
    2. 'ées' → logprob: -6.1274333000183105
    3. 'é' → logprob: -8.377433776855469
    4. 'es' → logprob: -11.252433776855469
    5. 'ée' → logprob: -13.127433776855469
    6. 'ès' → logprob: -13.502433776855469
    7. '{' → logprob: -14.377433776855469
    8. 'ed' → logprob: -14.877433776855469
    9. '[' → logprob: -15.502433776855469
    10. '```' → logprob: -15.627433776855469

Token 747: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6969336867332458
    2. ',' → logprob: -1.5719337463378906
    3. '.' → logprob: -2.6969337463378906
    4. ')' → logprob: -2.9469337463378906
    5. '   ' → logprob: -3.0719337463378906
    6. ' par' → logprob: -3.3219337463378906
    7. ' def' → logprob: -3.4469337463378906
    8. '```' → logprob: -3.5719337463378906
    9. ' via' → logprob: -4.446933746337891
    10. ' (' → logprob: -4.821933746337891

Token 748: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.162831112742424
    2. '   ' → logprob: -1.9128310680389404
    3. '(board' → logprob: -7.7878313064575195
    4. ':' → logprob: -8.28783130645752
    5. ' def' → logprob: -8.28783130645752
    6. ',' → logprob: -8.28783130645752
    7. '):
' → logprob: -8.53783130645752
    8. '```' → logprob: -8.66283130645752
    9. '(i' → logprob: -8.78783130645752
    10. ':
' → logprob: -8.91283130645752

Token 749: ' N' (ID: 478)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6681215763092041
    2. 'def' → logprob: -1.168121576309204
    3. ' visited' → logprob: -1.918121576309204
    4. '   ' → logprob: -4.168121337890625
    5. ' def' → logprob: -4.418121337890625
    6. ' groups' → logprob: -7.168121337890625
    7. 'groups' → logprob: -7.168121337890625
    8. ' N' → logprob: -9.418121337890625
    9. 'seen' → logprob: -9.793121337890625
    10. 'result' → logprob: -9.918121337890625

Token 750: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1162932962179184
    2. '=' → logprob: -2.61629319190979
    3. '   ' → logprob: -3.36629319190979
    4. ',' → logprob: -6.366293430328369
    5. 'def' → logprob: -9.116292953491211
    6. ')' → logprob: -9.366292953491211
    7. ' =
' → logprob: -9.616292953491211
    8. '=N' → logprob: -10.366292953491211
    9. ' def' → logprob: -10.491292953491211
    10. '=int' → logprob: -10.616292953491211

Token 751: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005233882926404476
    2. ' len' → logprob: -5.2552337646484375
    3. '(len' → logprob: -16.380233764648438
    4. '   ' → logprob: -17.130233764648438
    5. '[len' → logprob: -19.005233764648438
    6. '	len' → logprob: -19.380233764648438
    7. '=len' → logprob: -19.505233764648438
    8. ' ' → logprob: -21.630233764648438
    9. ',len' → logprob: -22.005233764648438
    10. '```' → logprob: -23.255233764648438

Token 752: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.0005537479883059859
    2. 'board' → logprob: -7.500553607940674
    3. ' board' → logprob: -14.375554084777832
    4. '	board' → logprob: -15.625554084777832
    5. '(' → logprob: -17.625553131103516
    6. '(ne' → logprob: -18.500553131103516
    7. '.board' → logprob: -19.000553131103516
    8. '_board' → logprob: -19.750553131103516
    9. '(block' → logprob: -20.000553131103516
    10. '(Board' → logprob: -20.625553131103516

Token 753: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16092310845851898
    2. ')' → logprob: -1.9109231233596802
    3. '   ' → logprob: -7.285923004150391
    4. ')
' → logprob: -11.53592300415039
    5. ' )
' → logprob: -13.66092300415039
    6. 'def' → logprob: -13.91092300415039
    7. ')`
' → logprob: -14.66092300415039
    8. '):
' → logprob: -14.78592300415039
    9. ')

' → logprob: -15.53592300415039
    10. ' ' → logprob: -15.53592300415039

Token 754: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.4546527564525604
    2. '   ' → logprob: -1.7046527862548828
    3. ' visited' → logprob: -1.7046527862548828
    4. 'def' → logprob: -6.829652786254883
    5. 'groups' → logprob: -7.954652786254883
    6. ' groups' → logprob: -9.079652786254883
    7. '   ' → logprob: -10.454652786254883
    8. ' def' → logprob: -10.579652786254883
    9. '    
' → logprob: -10.954652786254883
    10. '```' → logprob: -11.204652786254883

Token 755: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -2.546478935983032e-05
    2. ' visited' → logprob: -10.750025749206543
    3. 'seen' → logprob: -13.375025749206543
    4. 'groups' → logprob: -13.750025749206543
    5. 'vis' → logprob: -14.125025749206543
    6. 'group' → logprob: -15.250025749206543
    7. '
' → logprob: -15.375025749206543
    8. '   ' → logprob: -15.750025749206543
    9. 'visit' → logprob: -16.750024795532227
    10. 'used' → logprob: -18.000024795532227

Token 756: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194400548934937
    2. '=' → logprob: -1.5019440650939941
    3. '=[[' → logprob: -12.251943588256836
    4. ')' → logprob: -12.376943588256836
    5. '=set' → logprob: -13.126943588256836
    6. ' ' → logprob: -13.126943588256836
    7. ' =
' → logprob: -15.251943588256836
    8. '=[' → logprob: -15.251943588256836
    9. '=
' → logprob: -15.501943588256836
    10. '[' → logprob: -16.001943588256836

Token 757: ' [[' (ID: 9237)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.02534954808652401
    2. '[[' → logprob: -4.0253496170043945
    3. ' set' → logprob: -5.0253496170043945
    4. ' [[' → logprob: -7.7753496170043945
    5. '{' → logprob: -9.150349617004395
    6. '{}' → logprob: -9.525349617004395
    7. '[' → logprob: -12.400349617004395
    8. '{{' → logprob: -15.400349617004395
    9. '{
' → logprob: -15.525349617004395
    10. '=set' → logprob: -15.525349617004395

Token 758: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.842555426876061e-06
    2. ' False' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.8750057220459
    4. '(False' → logprob: -20.5000057220459
    5. '0' → logprob: -21.1250057220459
    6. '=False' → logprob: -23.2500057220459
    7. '.False' → logprob: -24.0000057220459
    8. '
' → logprob: -24.7500057220459
    9. 'F' → logprob: -24.8750057220459
    10. '    ' → logprob: -25.1250057220459

Token 759: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22783270478248596
    2. 'for' → logprob: -1.7278326749801636
    3. ']' → logprob: -3.977832794189453
    4. '[i' → logprob: -5.477832794189453
    5. '           ' → logprob: -6.727832794189453
    6. '   ' → logprob: -6.852832794189453
    7. '][' → logprob: -8.352832794189453
    8. '               ' → logprob: -8.477832794189453
    9. '       ' → logprob: -8.977832794189453
    10. ']*' → logprob: -9.977832794189453

Token 760: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008540933020412922
    2. 'k' → logprob: -5.383541107177734
    3. 'len' → logprob: -6.133541107177734
    4. 'row' → logprob: -7.508541107177734
    5. 'N' → logprob: -7.758541107177734
    6. 'x' → logprob: -8.383541107177734
    7. 'n' → logprob: -8.633541107177734
    8. 'l' → logprob: -9.008541107177734
    9. '(i' → logprob: -9.633541107177734
    10. 'line' → logprob: -9.633541107177734

Token 761: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.796184723294573e-06
    2. ' +' → logprob: -12.125005722045898
    3. '+i' → logprob: -15.875005722045898
    4. ')+' → logprob: -17.6250057220459
    5. '```' → logprob: -17.7500057220459
    6. '+[' → logprob: -18.7500057220459
    7. '+
' → logprob: -18.8750057220459
    8. '+n' → logprob: -19.0000057220459
    9. '1' → logprob: -19.1250057220459
    10. '+j' → logprob: -19.8750057220459

Token 762: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10461153835058212
    2. 'i' → logprob: -2.35461163520813
    3. '(i' → logprob: -5.479611396789551
    4. '+' → logprob: -9.10461139678955
    5. '(' → logprob: -9.85461139678955
    6. ' i' → logprob: -10.10461139678955
    7. ' ' → logprob: -11.97961139678955
    8. ' (' → logprob: -12.10461139678955
    9. '{i' → logprob: -13.10461139678955
    10. '+i' → logprob: -13.22961139678955

Token 763: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. ' )' → logprob: -11.000019073486328
    3. '           ' → logprob: -13.750019073486328
    4. '   ' → logprob: -15.250019073486328
    5. 'for' → logprob: -15.250019073486328
    6. ')
' → logprob: -15.250019073486328
    7. '       ' → logprob: -15.625019073486328
    8. '))' → logprob: -17.625019073486328
    9. '               ' → logprob: -18.125019073486328
    10. '```' → logprob: -18.125019073486328

Token 764: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16023285686969757
    2. 'for' → logprob: -1.9102329015731812
    3. ')' → logprob: -12.410232543945312
    4. '           ' → logprob: -13.035232543945312
    5. '   ' → logprob: -14.660232543945312
    6. ' ' → logprob: -14.785232543945312
    7. '	for' → logprob: -14.910232543945312
    8. '    ' → logprob: -15.160232543945312
    9. '       ' → logprob: -15.160232543945312
    10. '            ' → logprob: -15.660232543945312

Token 765: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020354038861114532
    2. ' i' → logprob: -8.500203132629395
    3. '	i' → logprob: -17.87520408630371
    4. 'in' → logprob: -18.50020408630371
    5. 'range' → logprob: -18.62520408630371
    6. '(i' → logprob: -19.00020408630371
    7. ' in' → logprob: -20.50020408630371
    8. '_i' → logprob: -20.62520408630371
    9. ' range' → logprob: -21.37520408630371
    10. ',i' → logprob: -22.00020408630371

Token 766: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0659126564860344
    2. ' in' → logprob: -2.8159127235412598
    3. 'range' → logprob: -5.56591272354126
    4. ' range' → logprob: -9.190912246704102
    5. 'i' → logprob: -11.690912246704102
    6. ' i' → logprob: -14.940912246704102
    7. 'n' → logprob: -16.4409122467041
    8. ' ' → logprob: -16.8159122467041
    9. '```' → logprob: -16.9409122467041
    10. ' ' → logprob: -16.9409122467041

Token 767: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.128163257315464e-07
    2. ' range' → logprob: -15.25
    3. '(range' → logprob: -23.25
    4. '
' → logprob: -24.625
    5. 'Range' → logprob: -25.75
    6. '   ' → logprob: -26.0
    7. '	range' → logprob: -26.375
    8. '_range' → logprob: -27.625
    9. ' ' → logprob: -28.375
    10. '  ' → logprob: -28.5

Token 768: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005747167742811143
    2. '(N' → logprob: -7.500574588775635
    3. 'range' → logprob: -10.750575065612793
    4. '[N' → logprob: -16.125574111938477
    5. ' N' → logprob: -16.250574111938477
    6. '   ' → logprob: -16.625574111938477
    7. 'len' → logprob: -17.000574111938477
    8. '	N' → logprob: -17.625574111938477
    9. ' range' → logprob: -18.625574111938477
    10. '
' → logprob: -18.750574111938477

Token 769: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12744970619678497
    2. ')]
' → logprob: -2.1274497509002686
    3. ')' → logprob: -8.252449989318848
    4. ')]
' → logprob: -8.877449989318848
    5. ']' → logprob: -9.877449989318848
    6. '           ' → logprob: -10.502449989318848
    7. '   ' → logprob: -11.002449989318848
    8. ' )' → logprob: -11.502449989318848
    9. '       ' → logprob: -11.627449989318848
    10. ')]

' → logprob: -12.502449989318848

Token 770: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6529194116592407
    2. ' for' → logprob: -1.0279194116592407
    3. 'def' → logprob: -2.902919292449951
    4. 'for' → logprob: -2.902919292449951
    5. ' def' → logprob: -5.652919292449951
    6. ' groups' → logprob: -5.777919292449951
    7. '
' → logprob: -6.527919292449951
    8. '```' → logprob: -6.902919292449951
    9. 'groups' → logprob: -6.902919292449951
    10. '    
' → logprob: -7.027919292449951

Token 771: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' (adapté à ' groups') → logprob: -0.011694051325321198
    2. 'def' → logprob: -4.511693954467773
    3. '   ' → logprob: -7.386693954467773
    4. 'group' → logprob: -11.511693954467773
    5. ' groups' → logprob: -11.636693954467773
    6. 'for' → logprob: -12.511693954467773
    7. '
' → logprob: -13.011693954467773
    8. '    
' → logprob: -14.136693954467773
    9. 'from' → logprob: -15.511693954467773
    10. 'tokens' → logprob: -15.761693954467773

Token 772: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47426992654800415
    2. '=' → logprob: -0.9742699265480042
    3. '=[]' → logprob: -8.59926986694336
    4. '=[]
' → logprob: -12.47426986694336
    5. '   ' → logprob: -12.72426986694336
    6. ',' → logprob: -14.09926986694336
    7. '[]' → logprob: -14.97426986694336
    8. '=[]
' → logprob: -15.47426986694336
    9. ' ' → logprob: -15.84926986694336
    10. ']' → logprob: -16.34926986694336

Token 773: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00016742534353397787
    2. ' []' → logprob: -8.750167846679688
    3. '[]
' → logprob: -11.750167846679688
    4. '[]

' → logprob: -14.375167846679688
    5. '[])' → logprob: -16.000167846679688
    6. '[' → logprob: -16.125167846679688
    7. '   ' → logprob: -16.625167846679688
    8. '[]}' → logprob: -16.750167846679688
    9. '[]"' → logprob: -16.875167846679688
    10. '[],' → logprob: -17.250167846679688

Token 774: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18923000991344452
    2. ' for' → logprob: -1.939229965209961
    3. 'for' → logprob: -3.564229965209961
    4. '    
' → logprob: -8.689229965209961
    5. '
' → logprob: -9.939229965209961
    6. 'def' → logprob: -10.189229965209961
    7. '	for' → logprob: -11.689229965209961
    8. '```' → logprob: -13.064229965209961
    9. ' def' → logprob: -13.689229965209961
    10. '  
' → logprob: -13.689229965209961

Token 775: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0014186843764036894
    2. '   ' → logprob: -6.751418590545654
    3. 'def' → logprob: -8.876419067382812
    4. ' for' → logprob: -9.126419067382812
    5. '	for' → logprob: -17.001419067382812
    6. '    
' → logprob: -17.251419067382812
    7. '```' → logprob: -17.626419067382812
    8. '
' → logprob: -17.876419067382812
    9. 'from' → logprob: -18.376419067382812
    10. '       ' → logprob: -19.001419067382812

Token 776: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005233882926404476
    2. ' i' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.255233764648438
    4. '	i' → logprob: -17.505233764648438
    5. '0' → logprob: -18.630233764648438
    6. ' ' → logprob: -18.630233764648438
    7. '```' → logprob: -19.130233764648438
    8. '_i' → logprob: -20.130233764648438
    9. '`' → logprob: -20.255233764648438
    10. '  ' → logprob: -20.380233764648438

Token 777: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0337093286216259
    2. 'in' → logprob: -3.4087092876434326
    3. ' ' → logprob: -10.908709526062012
    4. ')' → logprob: -11.533709526062012
    5. ',' → logprob: -11.533709526062012
    6. '<|end|>' → logprob: -12.158709526062012
    7. '=' → logprob: -12.408709526062012
    8. '0' → logprob: -12.408709526062012
    9. ' i' → logprob: -12.783709526062012
    10. ' ,' → logprob: -13.658709526062012

Token 778: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476016292348504
    2. ' range' → logprob: -6.002476215362549
    3. '0' → logprob: -15.50247573852539
    4. '(range' → logprob: -16.50247573852539
    5. '   ' → logprob: -18.50247573852539
    6. '	range' → logprob: -18.87747573852539
    7. ' ' → logprob: -19.00247573852539
    8. '[' → logprob: -19.25247573852539
    9. 'def' → logprob: -20.25247573852539
    10. '
' → logprob: -20.62747573852539

Token 779: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014171851798892021
    2. '(N' → logprob: -4.264172077178955
    3. ' N' → logprob: -12.264171600341797
    4. '0' → logprob: -13.764171600341797
    5. '   ' → logprob: -13.889171600341797
    6. '(' → logprob: -14.264171600341797
    7. ')' → logprob: -15.014171600341797
    8. 'def' → logprob: -15.389171600341797
    9. ' (' → logprob: -15.889171600341797
    10. '[N' → logprob: -16.389171600341797

Token 780: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0029414482414722443
    2. '):' → logprob: -5.877941608428955
    3. '   ' → logprob: -9.127941131591797
    4. '):
' → logprob: -11.252941131591797
    5. ':
' → logprob: -12.127941131591797
    6. '       ' → logprob: -12.502941131591797
    7. ')' → logprob: -13.377941131591797
    8. ' ):
' → logprob: -14.002941131591797
    9. '):

' → logprob: -14.127941131591797
    10. ':' → logprob: -14.127941131591797

Token 781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002559753193054348
    2. ' for' → logprob: -8.375255584716797
    3. '   ' → logprob: -10.875255584716797
    4. 'for' → logprob: -12.375255584716797
    5. '```' → logprob: -14.125255584716797
    6. '           ' → logprob: -14.500255584716797
    7. '	for' → logprob: -15.000255584716797
    8. ' ' → logprob: -15.375255584716797
    9. '     ' → logprob: -16.375255584716797
    10. '    ' → logprob: -16.625255584716797

Token 782: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004201036412268877
    2. ' for' → logprob: -5.6292009353637695
    3. '   ' → logprob: -8.00420093536377
    4. '       ' → logprob: -8.75420093536377
    5. 'j' → logprob: -9.25420093536377
    6. '           ' → logprob: -12.37920093536377
    7. '```' → logprob: -12.62920093536377
    8. '0' → logprob: -13.37920093536377
    9. '	for' → logprob: -13.37920093536377
    10. ' j' → logprob: -13.75420093536377

Token 783: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0086322957649827
    2. ' j' → logprob: -4.758632183074951
    3. '   ' → logprob: -11.38363265991211
    4. '0' → logprob: -12.38363265991211
    5. '    ' → logprob: -14.38363265991211
    6. '	j' → logprob: -14.63363265991211
    7. '       ' → logprob: -14.75863265991211
    8. ' ' → logprob: -15.13363265991211
    9. '           ' → logprob: -15.63363265991211
    10. '$j' → logprob: -16.63363265991211

Token 784: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07668328285217285
    2. 'in' → logprob: -2.701683282852173
    3. '+' → logprob: -6.326683044433594
    4. '(i' → logprob: -6.701683044433594
    5. ' i' → logprob: -7.326683044433594
    6. '<|end|>' → logprob: -7.576683044433594
    7. ' (' → logprob: -7.701683044433594
    8. '<|end|>' → logprob: -7.951683044433594
    9. '   ' → logprob: -8.076683044433594
    10. '(' → logprob: -8.701683044433594

Token 785: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.354466050863266
    2. ' range' → logprob: -1.3544660806655884
    3. '(i' → logprob: -3.229465961456299
    4. 'i' → logprob: -7.979465961456299
    5. ' (' → logprob: -8.729466438293457
    6. ' i' → logprob: -9.229466438293457
    7. '(range' → logprob: -9.354466438293457
    8. '[i' → logprob: -10.229466438293457
    9. '(j' → logprob: -11.104466438293457
    10. '   ' → logprob: -11.104466438293457

Token 786: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.460291767027229e-05
    2. '(j' → logprob: -9.875094413757324
    3. ' (' → logprob: -10.500094413757324
    4. 'i' → logprob: -11.500094413757324
    5. '   ' → logprob: -13.125094413757324
    6. '(' → logprob: -13.750094413757324
    7. 'j' → logprob: -14.250094413757324
    8. ' i' → logprob: -14.750094413757324
    9. '(len' → logprob: -14.875094413757324
    10. '[i' → logprob: -15.375094413757324

Token 787: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.333223139634356e-05
    2. ' +' → logprob: -10.625033378601074
    3. ')+' → logprob: -12.500033378601074
    4. '+j' → logprob: -12.625033378601074
    5. '):
' → logprob: -14.250033378601074
    6. '+
' → logprob: -15.000033378601074
    7. '+i' → logprob: -15.000033378601074
    8. ']+' → logprob: -15.875033378601074
    9. '1' → logprob: -16.125032424926758
    10. '()+' → logprob: -16.125032424926758

Token 788: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '+' → logprob: -14.250001907348633
    3. ' ' → logprob: -14.375001907348633
    4. 'j' → logprob: -16.375001907348633
    5. '0' → logprob: -16.500001907348633
    6. ')' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '```' → logprob: -18.375001907348633
    9. '
' → logprob: -18.500001907348633
    10. '2' → logprob: -18.875001907348633

Token 789: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004426201339811087
    2. '):' → logprob: -5.754426002502441
    3. '           ' → logprob: -6.754426002502441
    4. '       ' → logprob: -10.379426002502441
    5. '):
' → logprob: -11.254426002502441
    6. '+' → logprob: -11.754426002502441
    7. ']:
' → logprob: -11.879426002502441
    8. ':
' → logprob: -12.129426002502441
    9. '               ' → logprob: -12.379426002502441
    10. '():
' → logprob: -13.004426002502441

Token 790: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015525942435488105
    2. ' if' → logprob: -6.751552581787109
    3. '               ' → logprob: -8.25155258178711
    4. '       ' → logprob: -10.25155258178711
    5. ':' → logprob: -11.25155258178711
    6. '```' → logprob: -11.37655258178711
    7. 'if' → logprob: -11.75155258178711
    8. '                   ' → logprob: -12.00155258178711
    9. '	       ' → logprob: -12.12655258178711
    10. ',' → logprob: -12.12655258178711

Token 791: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09776893258094788
    2. '           ' → logprob: -2.722769021987915
    3. '               ' → logprob: -3.847769021987915
    4. ' if' → logprob: -5.097768783569336
    5. '   ' → logprob: -12.597768783569336
    6. '                   ' → logprob: -13.222768783569336
    7. 'If' → logprob: -13.472768783569336
    8. '       ' → logprob: -14.097768783569336
    9. '```' → logprob: -14.222768783569336
    10. '	if' → logprob: -14.472768783569336

Token 792: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.32362133264541626
    2. ' board' → logprob: -1.9486212730407715
    3. ' not' → logprob: -2.3236212730407715
    4. 'not' → logprob: -3.3236212730407715
    5. '	board' → logprob: -10.57362174987793
    6. '(board' → logprob: -11.07362174987793
    7. '   ' → logprob: -11.82362174987793
    8. ' ' → logprob: -11.94862174987793
    9. '    ' → logprob: -13.19862174987793
    10. '	not' → logprob: -13.88612174987793

Token 793: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[j' → logprob: -13.50000286102295
    3. '][' → logprob: -14.62500286102295
    4. '[I' → logprob: -14.87500286102295
    5. ' [' → logprob: -15.00000286102295
    6. ')[' → logprob: -15.75000286102295
    7. '   ' → logprob: -16.375003814697266
    8. '```' → logprob: -16.500003814697266
    9. '[' → logprob: -17.125003814697266
    10. '
' → logprob: -17.375003814697266

Token 794: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2524353563785553
    2. '][' → logprob: -1.502435326576233
    3. '[j' → logprob: -7.627435207366943
    4. '[' → logprob: -12.752435684204102
    5. ']' → logprob: -12.752435684204102
    6. ')[' → logprob: -13.127435684204102
    7. '(i' → logprob: -13.252435684204102
    8. ']][' → logprob: -13.502435684204102
    9. '   ' → logprob: -13.752435684204102
    10. ' [' → logprob: -13.752435684204102

Token 795: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.15310683415737e-05
    2. ' j' → logprob: -10.750021934509277
    3. '	j' → logprob: -18.50002098083496
    4. '[j' → logprob: -18.62502098083496
    5. '   ' → logprob: -19.25002098083496
    6. ':j' → logprob: -19.37502098083496
    7. '           ' → logprob: -20.00002098083496
    8. ' ' → logprob: -20.12502098083496
    9. ',j' → logprob: -20.25002098083496
    10. ']' → logprob: -20.50002098083496

Token 796: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029827436432242393
    2. ']!=' → logprob: -3.779827356338501
    3. ']==' → logprob: -5.77982759475708
    4. ' !=' → logprob: -6.15482759475708
    5. '!=' → logprob: -7.27982759475708
    6. ' ]' → logprob: -8.404827117919922
    7. ')' → logprob: -8.654827117919922
    8. ']>' → logprob: -9.529827117919922
    9. ')!=' → logprob: -9.779827117919922
    10. '==' → logprob: -9.904827117919922

Token 797: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7215067148208618
    2. '!=' → logprob: -0.7215067148208618
    3. '>' → logprob: -3.9715065956115723
    4. '==' → logprob: -5.221506595611572
    5. ' ==' → logprob: -6.346506595611572
    6. ' >' → logprob: -6.846506595611572
    7. ' not' → logprob: -8.59650707244873
    8. 'and' → logprob: -8.72150707244873
    9. ']!=' → logprob: -9.34650707244873
    10. ')' → logprob: -9.47150707244873

Token 798: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004884536610916257
    2. ' ' → logprob: -7.62548828125
    3. '.' → logprob: -15.87548828125
    4. '-' → logprob: -16.00048828125
    5. '  ' → logprob: -17.50048828125
    6. '   ' → logprob: -17.75048828125
    7. '#' → logprob: -18.25048828125
    8. '```' → logprob: -18.37548828125
    9. ' -' → logprob: -18.62548828125
    10. ' ' → logprob: -18.81298828125

Token 799: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.9292415749514475e-05
    2. ' ' → logprob: -10.500039100646973
    3. '-' → logprob: -11.500039100646973
    4. '.' → logprob: -14.250039100646973
    5. ' -' → logprob: -15.250039100646973
    6. 'None' → logprob: -15.750039100646973
    7. 'empty' → logprob: -16.00004005432129
    8. '1' → logprob: -16.12504005432129
    9. '#' → logprob: -16.31254005432129
    10. '9' → logprob: -17.31254005432129

Token 800: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007501451298594475
    2. 'and' → logprob: -5.007501602172852
    3. '               ' → logprob: -7.382501602172852
    4. '           ' → logprob: -9.007501602172852
    5. ':
' → logprob: -10.632501602172852
    6. '            ' → logprob: -12.632501602172852
    7. ':' → logprob: -12.882501602172852
    8. '                   ' → logprob: -13.007501602172852
    9. '              ' → logprob: -13.382501602172852
    10. '             ' → logprob: -13.882501602172852

Token 801: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.005234952084720135
    2. ' not' → logprob: -5.255234718322754
    3. '           ' → logprob: -14.630234718322754
    4. '!' → logprob: -14.755234718322754
    5. '(not' → logprob: -16.38023567199707
    6. '	not' → logprob: -16.88023567199707
    7. '   ' → logprob: -17.25523567199707
    8. 'and' → logprob: -17.25523567199707
    9. '               ' → logprob: -17.63023567199707
    10. '
' → logprob: -17.63023567199707

Token 802: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0040785204619169235
    2. ' visited' → logprob: -5.504078388214111
    3. '           ' → logprob: -17.254077911376953
    4. '   ' → logprob: -17.504077911376953
    5. '
' → logprob: -17.629077911376953
    6. ' ' → logprob: -19.004077911376953
    7. 'visible' → logprob: -19.004077911376953
    8. ' ' → logprob: -19.504077911376953
    9. 'Visited' → logprob: -19.504077911376953
    10. 'visit' → logprob: -19.504077911376953

Token 803: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002286886883666739
    2. '[' → logprob: -9.375228881835938
    3. '[(' → logprob: -10.125228881835938
    4. '[
' → logprob: -10.125228881835938
    5. ' [' → logprob: -10.375228881835938
    6. '
' → logprob: -11.125228881835938
    7. '```' → logprob: -11.875228881835938
    8. '[I' → logprob: -12.750228881835938
    9. '(i' → logprob: -13.000228881835938
    10. '[[' → logprob: -13.125228881835938

Token 804: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013711919309571385
    2. '[i' → logprob: -6.626371383666992
    3. ' ][' → logprob: -10.376371383666992
    4. ']' → logprob: -12.001371383666992
    5. '[j' → logprob: -13.376371383666992
    6. ']][' → logprob: -13.626371383666992
    7. '[' → logprob: -13.751371383666992
    8. '   ' → logprob: -14.251371383666992
    9. ' [' → logprob: -14.376371383666992
    10. '"][' → logprob: -14.376371383666992

Token 805: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.438573680294212e-06
    2. ' j' → logprob: -12.250005722045898
    3. '[j' → logprob: -14.500005722045898
    4. '][' → logprob: -17.2500057220459
    5. '   ' → logprob: -17.7500057220459
    6. '	j' → logprob: -18.3750057220459
    7. '[' → logprob: -19.0000057220459
    8. ']' → logprob: -19.1250057220459
    9. '_j' → logprob: -19.1250057220459
    10. ',j' → logprob: -19.5000057220459

Token 806: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0030985695775598288
    2. ':
' → logprob: -7.253098487854004
    3. '           ' → logprob: -7.378098487854004
    4. '):
' → logprob: -7.503098487854004
    5. ']:' → logprob: -7.878098487854004
    6. '               ' → logprob: -8.003098487854004
    7. '                   ' → logprob: -8.378098487854004
    8. ']' → logprob: -9.128098487854004
    9. ':' → logprob: -10.378098487854004
    10. '                       ' → logprob: -10.628098487854004

Token 807: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0073503428138792515
    2. '           ' → logprob: -6.007350444793701
    3. ':
' → logprob: -6.257350444793701
    4. ':' → logprob: -6.507350444793701
    5. '```' → logprob: -7.632350444793701
    6. '                   ' → logprob: -8.132349967956543
    7. '                       ' → logprob: -8.882349967956543
    8. ' :' → logprob: -9.132349967956543
    9. '                               ' → logprob: -9.257349967956543
    10. ' :
' → logprob: -9.382349967956543

Token 808: ' stone' (ID: 14352)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.06230386719107628
    2. ' stack' → logprob: -2.8123037815093994
    3. '                   ' → logprob: -8.56230354309082
    4. '               ' → logprob: -9.56230354309082
    5. 'from' → logprob: -10.68730354309082
    6. '   ' → logprob: -10.93730354309082
    7. 'queue' → logprob: -10.93730354309082
    8. '	stack' → logprob: -12.06230354309082
    9. 'def' → logprob: -12.18730354309082
    10. '_stack' → logprob: -13.68730354309082

Token 809: '_number' (ID: 11733)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2169888019561768
    2. 's' → logprob: -1.7169888019561768
    3. '_stack' → logprob: -1.8419888019561768
    4. '_positions' → logprob: -1.9669888019561768
    5. '<|end|>' → logprob: -2.8419888019561768
    6. '_queue' → logprob: -3.5919888019561768
    7. '_type' → logprob: -3.8419888019561768
    8. 'stack' → logprob: -4.091988563537598
    9. ')' → logprob: -4.216988563537598
    10. '=' → logprob: -4.216988563537598

Token 810: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1474335491657257
    2. '=' → logprob: -2.0224335193634033
    3. 'def' → logprob: -6.647433757781982
    4. ',' → logprob: -6.772433757781982
    5. ')' → logprob: -7.397433757781982
    6. '               ' → logprob: -7.897433757781982
    7. '                   ' → logprob: -8.272433280944824
    8. '=i' → logprob: -8.397433280944824
    9. '=int' → logprob: -9.022433280944824
    10. '=
' → logprob: -9.022433280944824

Token 811: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.10020752996206284
    2. ' board' → logprob: -2.350207567214966
    3. '	board' → logprob: -14.100207328796387
    4. '(board' → logprob: -15.975207328796387
    5. '.board' → logprob: -17.225208282470703
    6. 'bord' → logprob: -17.725208282470703
    7. 'b' → logprob: -18.475208282470703
    8. '_board' → logprob: -18.600208282470703
    9. '   ' → logprob: -18.850208282470703
    10. 'Board' → logprob: -19.975208282470703

Token 812: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.500000953674316
    3. '[I' → logprob: -15.250000953674316
    4. ' [' → logprob: -15.875000953674316
    5. '   ' → logprob: -16.250001907348633
    6. '               ' → logprob: -16.250001907348633
    7. '[' → logprob: -16.375001907348633
    8. '][' → logprob: -16.625001907348633
    9. '                   ' → logprob: -16.625001907348633
    10. ')[' → logprob: -17.125001907348633

Token 813: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2811993956565857
    2. '][' → logprob: -1.4061994552612305
    3. '[I' → logprob: -10.78119945526123
    4. '(i' → logprob: -12.40619945526123
    5. '[j' → logprob: -12.40619945526123
    6. ']' → logprob: -12.53119945526123
    7. 'i' → logprob: -12.90619945526123
    8. '   ' → logprob: -13.15619945526123
    9. '```' → logprob: -13.53119945526123
    10. '[' → logprob: -13.53119945526123

Token 814: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00018280261429026723
    2. 'i' → logprob: -8.62518310546875
    3. '][' → logprob: -13.00018310546875
    4. '[j' → logprob: -14.50018310546875
    5. ' j' → logprob: -15.37518310546875
    6. '```' → logprob: -16.00018310546875
    7. '[i' → logprob: -16.37518310546875
    8. ']' → logprob: -17.62518310546875
    9. '	j' → logprob: -17.62518310546875
    10. '   ' → logprob: -17.75018310546875

Token 815: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.27460068464279175
    2. '               ' → logprob: -2.2746007442474365
    3. '                   ' → logprob: -2.6496007442474365
    4. ']' → logprob: -3.1496007442474365
    5. ')
' → logprob: -4.899600505828857
    6. '):
' → logprob: -5.149600505828857
    7. ']:
' → logprob: -5.399600505828857
    8. ')' → logprob: -6.274600505828857
    9. '
' → logprob: -6.774600505828857
    10. '           ' → logprob: -7.149600505828857

Token 816: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.2246291337069124e-05
    2. '                   ' → logprob: -12.250021934509277
    3. 'def' → logprob: -12.250021934509277
    4. '                
' → logprob: -12.375021934509277
    5. '```' → logprob: -13.375021934509277
    6. '
' → logprob: -13.625021934509277
    7. 'stack' → logprob: -13.750021934509277
    8. 'import' → logprob: -14.000021934509277
    9. '           ' → logprob: -14.250021934509277
    10. ' stack' → logprob: -14.375021934509277

Token 817: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.00023178798437584192
    2. 'queue' → logprob: -8.750231742858887
    3. ' stack' → logprob: -9.750231742858887
    4. '                   ' → logprob: -11.750231742858887
    5. '               ' → logprob: -12.375231742858887
    6. 'from' → logprob: -13.250231742858887
    7. 'to' → logprob: -14.500231742858887
    8. 'def' → logprob: -15.625231742858887
    9. '	stack' → logprob: -16.000232696533203
    10. '   ' → logprob: -16.125232696533203

Token 818: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003884894831571728
    2. '=' → logprob: -8.000388145446777
    3. '.append' → logprob: -10.375388145446777
    4. '=[' → logprob: -11.125388145446777
    5. '=[]' → logprob: -12.000388145446777
    6. ' =[' → logprob: -14.250388145446777
    7. '=[]
' → logprob: -15.375388145446777
    8. '    ' → logprob: -17.375389099121094
    9. '                   ' → logprob: -17.500389099121094
    10. ')' → logprob: -17.500389099121094

Token 819: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0002997120900545269
    2. '[((' → logprob: -8.500299453735352
    3. ' [(' → logprob: -9.250299453735352
    4. '[' → logprob: -16.37529945373535
    5. ' [' → logprob: -17.87529945373535
    6. '   ' → logprob: -18.00029945373535
    7. '([(' → logprob: -18.12529945373535
    8. ' ' → logprob: -19.50029945373535
    9. '[]' → logprob: -21.00029945373535
    10. '[]
' → logprob: -22.62529945373535

Token 820: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1160349458805285e-05
    2. '(i' → logprob: -11.750011444091797
    3. ' i' → logprob: -12.750011444091797
    4. ')i' → logprob: -16.125011444091797
    5. ' (' → logprob: -17.000011444091797
    6. '   ' → logprob: -17.500011444091797
    7. ',i' → logprob: -18.125011444091797
    8. '{i' → logprob: -18.375011444091797
    9. '[i' → logprob: -18.625011444091797
    10. '	i' → logprob: -18.750011444091797

Token 821: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5760458707809448
    2. ',j' → logprob: -0.8260458707809448
    3. ' ,' → logprob: -9.201045989990234
    4. ',
' → logprob: -13.826045989990234
    5. ',J' → logprob: -13.951045989990234
    6. ',n' → logprob: -14.701045989990234
    7. ',k' → logprob: -14.826045989990234
    8. ',i' → logprob: -15.076045989990234
    9. ',s' → logprob: -15.576045989990234
    10. '
' → logprob: -15.576045989990234

Token 822: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3135746121406555
    2. ')]
' → logprob: -1.3135745525360107
    3. '           ' → logprob: -8.93857479095459
    4. '               ' → logprob: -9.43857479095459
    5. ')' → logprob: -9.93857479095459
    6. '                   ' → logprob: -11.31357479095459
    7. ',' → logprob: -11.81357479095459
    8. ')]
' → logprob: -11.81357479095459
    9. ']' → logprob: -11.93857479095459
    10. ')]

' → logprob: -12.18857479095459

Token 823: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18730086088180542
    2. 'visited' → logprob: -2.56230092048645
    3. ' while' → logprob: -3.43730092048645
    4. '                   ' → logprob: -3.56230092048645
    5. ' visited' → logprob: -3.81230092048645
    6. 'while' → logprob: -5.062300682067871
    7. '```' → logprob: -6.312300682067871
    8. '   ' → logprob: -6.562300682067871
    9. '                ' → logprob: -7.687300682067871
    10. '           ' → logprob: -7.812300682067871

Token 824: ' group' (ID: 3566)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3136270344257355
    2. 'while' → logprob: -1.313627004623413
    3. '               ' → logprob: -8.438627243041992
    4. '                   ' → logprob: -9.188627243041992
    5. ' while' → logprob: -11.313627243041992
    6. 'positions' → logprob: -11.688627243041992
    7. 'group' (adapté à ' group') → logprob: -11.938627243041992
    8. ' visited' → logprob: -12.063627243041992
    9. 'pos' → logprob: -12.938627243041992
    10. '   ' → logprob: -13.313627243041992

Token 825: '_positions' (ID: 93193)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42604756355285645
    2. ' =' → logprob: -1.4260475635528564
    3. 'visited' → logprob: -3.4260475635528564
    4. '=' → logprob: -3.5510475635528564
    5. '=[]' → logprob: -4.176047325134277
    6. '_positions' → logprob: -4.551047325134277
    7. '=[]
' → logprob: -5.426047325134277
    8. ')' → logprob: -6.051047325134277
    9. '.append' → logprob: -6.051047325134277
    10. '_vis' → logprob: -6.551047325134277

Token 826: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16330264508724213
    2. ' =' → logprob: -1.9133026599884033
    3. '=[]' → logprob: -5.913302421569824
    4. '=[]
' → logprob: -8.288302421569824
    5. '.append' → logprob: -9.288302421569824
    6. ')' → logprob: -11.538302421569824
    7. '[]' → logprob: -12.038302421569824
    8. '   ' → logprob: -12.913302421569824
    9. ' ' → logprob: -13.038302421569824
    10. '=[]
' → logprob: -13.663302421569824

Token 827: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.008638561703264713
    2. '[(' → logprob: -4.758638381958008
    3. ' []' → logprob: -11.508638381958008
    4. '[])' → logprob: -12.008638381958008
    5. '[]
' → logprob: -12.508638381958008
    6. '[]}' → logprob: -12.633638381958008
    7. '[]

' → logprob: -14.258638381958008
    8. '[]>' → logprob: -16.258638381958008
    9. '[' → logprob: -16.383638381958008
    10. ' [(' → logprob: -16.758638381958008

Token 828: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1860300600528717
    2. ' while' → logprob: -1.9360300302505493
    3. 'while' → logprob: -3.686030149459839
    4. '	while' → logprob: -9.186030387878418
    5. '```' → logprob: -9.311030387878418
    6. '   ' → logprob: -9.811030387878418
    7. '                
' → logprob: -9.936030387878418
    8. '                   ' → logprob: -10.186030387878418
    9. ' ' → logprob: -11.311030387878418
    10. '			' → logprob: -11.311030387878418

Token 829: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05605831742286682
    2. 'visited' (adapté à ' visited') → logprob: -3.056058406829834
    3. '               ' → logprob: -5.431058406829834
    4. ' while' → logprob: -5.806058406829834
    5. '                   ' → logprob: -10.556057929992676
    6. ' visited' → logprob: -10.681057929992676
    7. '	while' → logprob: -12.806057929992676
    8. '           ' → logprob: -13.306057929992676
    9. '   ' → logprob: -13.806057929992676
    10. '                ' → logprob: -15.306057929992676

Token 830: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '[I' → logprob: -12.875003814697266
    3. '[' → logprob: -14.125003814697266
    4. ' [' → logprob: -15.625003814697266
    5. '```' → logprob: -16.250003814697266
    6. '
' → logprob: -16.375003814697266
    7. '[
' → logprob: -16.500003814697266
    8. 'i' → logprob: -17.125003814697266
    9. '               ' → logprob: -17.625003814697266
    10. '[s' → logprob: -17.875003814697266

Token 831: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0028589628636837006
    2. '[i' → logprob: -5.877859115600586
    3. '[' → logprob: -10.752859115600586
    4. '[j' → logprob: -11.127859115600586
    5. ']][' → logprob: -11.877859115600586
    6. ']' → logprob: -12.752859115600586
    7. '"][' → logprob: -13.252859115600586
    8. ' ][' → logprob: -13.377859115600586
    9. ''][' → logprob: -14.002859115600586
    10. '   ' → logprob: -14.252859115600586

Token 832: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.2723104848410003e-05
    2. '][' → logprob: -11.125022888183594
    3. 'i' → logprob: -12.125022888183594
    4. '0' → logprob: -14.125022888183594
    5. '[j' → logprob: -14.125022888183594
    6. ' j' → logprob: -14.375022888183594
    7. '[' → logprob: -15.750022888183594
    8. '```' → logprob: -15.875022888183594
    9. '   ' → logprob: -16.625022888183594
    10. ']' → logprob: -17.000022888183594

Token 833: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001514504081569612
    2. ']=' → logprob: -6.626514434814453
    3. '].' → logprob: -8.751514434814453
    4. ']==' → logprob: -11.751514434814453
    5. ')' → logprob: -12.626514434814453
    6. ')]' → logprob: -13.001514434814453
    7. '           ' → logprob: -13.001514434814453
    8. ' ]' → logprob: -13.126514434814453
    9. ']
' → logprob: -13.126514434814453
    10. ']=(' → logprob: -13.251514434814453

Token 834: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008328154683113098
    2. ' =' → logprob: -5.008327960968018
    3. '[i' → logprob: -7.133327960968018
    4. '[' → logprob: -8.008328437805176
    5. ']' → logprob: -8.508328437805176
    6. ']=' → logprob: -9.133328437805176
    7. '=True' → logprob: -9.133328437805176
    8. '[j' → logprob: -10.008328437805176
    9. '   ' → logprob: -12.508328437805176
    10. '=
' → logprob: -12.508328437805176

Token 835: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.836499985889532e-05
    2. ' True' → logprob: -9.7500581741333
    3. '               ' → logprob: -19.250059127807617
    4. '                   ' → logprob: -19.625059127807617
    5. '   ' → logprob: -19.750059127807617
    6. '           ' → logprob: -20.250059127807617
    7. '(True' → logprob: -20.625059127807617
    8. '=True' → logprob: -21.875059127807617
    9. '                       ' → logprob: -22.750059127807617
    10. '                           ' → logprob: -23.000059127807617

Token 836: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006041608285158873
    2. '
' → logprob: -5.631041526794434
    3. ' while' → logprob: -6.506041526794434
    4. '                
' → logprob: -7.506041526794434
    5. 'while' → logprob: -8.131041526794434
    6. '                ' → logprob: -10.381041526794434
    7. ' 
' → logprob: -11.256041526794434
    8. '                   ' → logprob: -11.631041526794434
    9. '	while' → logprob: -11.881041526794434
    10. '			' → logprob: -12.006041526794434

Token 837: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8394386172294617
    2. 'while' → logprob: -1.0894386768341064
    3. ' while' → logprob: -1.4644386768341064
    4. '   ' → logprob: -8.339438438415527
    5. '```' → logprob: -9.339438438415527
    6. '	while' → logprob: -9.589438438415527
    7. '           ' → logprob: -11.464438438415527
    8. ' ' → logprob: -12.089438438415527
    9. '                
' → logprob: -12.339438438415527
    10. '
' → logprob: -12.464438438415527

Token 838: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0029162613209336996
    2. ' while' → logprob: -6.00291633605957
    3. '               ' → logprob: -7.75291633605957
    4. '   ' → logprob: -12.50291633605957
    5. '	while' → logprob: -12.62791633605957
    6. '                   ' → logprob: -13.00291633605957
    7. '           ' → logprob: -13.75291633605957
    8. 'While' → logprob: -14.25291633605957
    9. '```' → logprob: -17.50291633605957
    10. ' ' → logprob: -17.87791633605957

Token 839: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.008619185537099838
    2. ' stack' → logprob: -4.75861930847168
    3. 'len' → logprob: -12.88361930847168
    4. '   ' → logprob: -13.88361930847168
    5. '	stack' → logprob: -14.00861930847168
    6. '(stack' → logprob: -15.50861930847168
    7. ' ' → logprob: -16.75861930847168
    8. ' len' → logprob: -17.13361930847168
    9. '    ' → logprob: -17.75861930847168
    10. '       ' → logprob: -18.63361930847168

Token 840: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2019897699356079
    2. ':' → logprob: -1.701989769935608
    3. '.pop' → logprob: -7.576989650726318
    4. '[-' → logprob: -10.201990127563477
    5. '):
' → logprob: -10.951990127563477
    6. 'pop' → logprob: -12.576990127563477
    7. '):' → logprob: -13.826990127563477
    8. '                   ' → logprob: -14.076990127563477
    9. '```' → logprob: -14.201990127563477
    10. '               ' → logprob: -14.451990127563477

Token 841: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7172010540962219
    2. '(i' → logprob: -0.9672010540962219
    3. 'i' → logprob: -2.717200994491577
    4. 'pos' → logprob: -3.592200994491577
    5. ' i' → logprob: -3.967200994491577
    6. ' (' → logprob: -4.467201232910156
    7. ' pos' → logprob: -5.467201232910156
    8. '   ' → logprob: -7.092201232910156
    9. 'x' → logprob: -7.092201232910156
    10. '(pos' → logprob: -7.842201232910156

Token 842: ' ci' (ID: 7405)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' (adapté à ' ci') → logprob: -0.5150766372680664
    2. 'x' → logprob: -1.1400766372680664
    3. 'i' → logprob: -2.6400766372680664
    4. ' ci' → logprob: -5.015076637268066
    5. ' x' → logprob: -6.265076637268066
    6. 'cur' → logprob: -6.890076637268066
    7. ' i' → logprob: -7.015076637268066
    8. 'pos' → logprob: -8.015076637268066
    9. 'curr' → logprob: -9.015076637268066
    10. 'current' → logprob: -9.140076637268066

Token 843: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0077837081626057625
    2. ',j' → logprob: -6.007783889770508
    3. '                   ' → logprob: -6.257783889770508
    4. ',(' → logprob: -6.382783889770508
    5. ',x' → logprob: -8.132783889770508
    6. ' ,' → logprob: -8.257783889770508
    7. ',c' → logprob: -9.007783889770508
    8. ',d' → logprob: -9.507783889770508
    9. '_,' → logprob: -9.507783889770508
    10. '[' → logprob: -9.507783889770508

Token 844: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04789455980062485
    2. 'j' → logprob: -3.1728944778442383
    3. ',' → logprob: -5.672894477844238
    4. ',j' → logprob: -7.797894477844238
    5. '```' → logprob: -8.047894477844238
    6. ',c' → logprob: -8.422894477844238
    7. ',i' → logprob: -9.297894477844238
    8. 'ci' → logprob: -9.672894477844238
    9. 'k' → logprob: -9.672894477844238
    10. 'h' → logprob: -10.172894477844238

Token 845: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4400566518306732
    2. ' =' → logprob: -1.0650566816329956
    3. ')' → logprob: -4.565056800842285
    4. ')=' → logprob: -7.190056800842285
    5. '                   ' → logprob: -10.440056800842285
    6. '),' → logprob: -10.815056800842285
    7. ']=' → logprob: -11.565056800842285
    8. '=(' → logprob: -11.690056800842285
    9. ']' → logprob: -11.690056800842285
    10. ',' → logprob: -12.190056800842285

Token 846: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.018150994554162025
    2. ' stack' → logprob: -4.018150806427002
    3. '	stack' → logprob: -14.14315128326416
    4. '(stack' → logprob: -15.64315128326416
    5. '   ' → logprob: -16.893150329589844
    6. ' ' → logprob: -17.018150329589844
    7. '.stack' → logprob: -17.143150329589844
    8. 'st' → logprob: -18.393150329589844
    9. '_stack' → logprob: -18.518150329589844
    10. '    ' → logprob: -18.518150329589844

Token 847: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0004833425919059664
    2. '[-' → logprob: -7.875483512878418
    3. 'pop' → logprob: -9.250483512878418
    4. ' pop' → logprob: -13.750483512878418
    5. '.append' → logprob: -13.750483512878418
    6. '=' → logprob: -13.875483512878418
    7. '[' → logprob: -14.250483512878418
    8. '                   ' → logprob: -14.500483512878418
    9. '	pop' → logprob: -14.500483512878418
    10. ')' → logprob: -14.750483512878418

Token 848: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08804334700107574
    2. ')' → logprob: -3.713043451309204
    3. ')
' → logprob: -4.088043212890625
    4. '                       ' → logprob: -4.213043212890625
    5. '               ' → logprob: -5.088043212890625
    6. '                           ' → logprob: -5.463043212890625
    7. '           ' → logprob: -5.713043212890625
    8. '                    
' → logprob: -6.088043212890625
    9. '                               ' → logprob: -6.338043212890625
    10. '()
' → logprob: -6.463043212890625

Token 849: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010312614031136036
    2. ' group' → logprob: -8.001030921936035
    3. 'group' → logprob: -8.126030921936035
    4. '               ' → logprob: -8.251030921936035
    5. '
' → logprob: -10.251030921936035
    6. '                       ' → logprob: -10.501030921936035
    7. '   ' → logprob: -10.751030921936035
    8. '           ' → logprob: -11.251030921936035
    9. '                    
' → logprob: -11.876030921936035
    10. '                  ' → logprob: -12.001030921936035

Token 850: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' (adapté à ' group') → logprob: -0.006354138720780611
    2. '                   ' → logprob: -5.756354331970215
    3. ' group' → logprob: -5.756354331970215
    4. '                       ' → logprob: -12.381354331970215
    5. '   ' → logprob: -13.256354331970215
    6. '               ' → logprob: -13.506354331970215
    7. 'if' → logprob: -14.006354331970215
    8. 'for' → logprob: -15.256354331970215
    9. '	group' → logprob: -16.1313533782959
    10. '       ' → logprob: -16.6313533782959

Token 851: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -7.941850526549388e-06
    2. '.append' → logprob: -11.875007629394531
    3. 'positions' → logprob: -14.125007629394531
    4. 'Positions' → logprob: -15.375007629394531
    5. 'append' → logprob: -17.87500762939453
    6. '```' → logprob: -18.00000762939453
    7. '   ' → logprob: -18.25000762939453
    8. '
' → logprob: -18.25000762939453
    9. '                   ' → logprob: -19.37500762939453
    10. '\' → logprob: -19.50000762939453

Token 852: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012523093027994037
    2. '.' → logprob: -9.00012493133545
    3. ' .' → logprob: -13.62512493133545
    4. '.app' → logprob: -15.37512493133545
    5. 'append' → logprob: -15.50012493133545
    6. '                   ' → logprob: -15.75012493133545
    7. '.ap' → logprob: -17.375125885009766
    8. '.add' → logprob: -18.125125885009766
    9. '.Append' → logprob: -18.125125885009766
    10. '.extend' → logprob: -18.375125885009766

Token 853: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0007164848502725363
    2. '(' → logprob: -7.250716686248779
    3. '(ci' → logprob: -12.000716209411621
    4. ' ((' → logprob: -15.500716209411621
    5. '(
' → logprob: -15.625716209411621
    6. ' (' → logprob: -16.375717163085938
    7. '(c' → logprob: -18.625717163085938
    8. '(((' → logprob: -18.625717163085938
    9. ' ' → logprob: -19.000717163085938
    10. '[(' → logprob: -20.125717163085938

Token 854: 'ci' (ID: 2114)
  Prédit: 'ci'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.0001605115394340828
    2. ' ci' → logprob: -8.750160217285156
    3. '(ci' → logprob: -13.125160217285156
    4. '   ' → logprob: -17.625160217285156
    5. '
' → logprob: -17.750160217285156
    6. '-ci' → logprob: -20.250160217285156
    7. 'cii' → logprob: -20.250160217285156
    8. 'c' → logprob: -20.625160217285156
    9. '_ci' → logprob: -21.000160217285156
    10. ' ' → logprob: -21.125160217285156

Token 855: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.02975870668888092
    2. ',' → logprob: -3.5297586917877197
    3. ',C' → logprob: -12.65475845336914
    4. ' ,' → logprob: -12.77975845336914
    5. ',
' → logprob: -13.27975845336914
    6. ',j' → logprob: -15.02975845336914
    7. ',k' → logprob: -17.27975845336914
    8. ',b' → logprob: -17.52975845336914
    9. ',s' → logprob: -17.77975845336914
    10. ',p' → logprob: -17.90475845336914

Token 856: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.3199920178740285e-05
    2. ')' → logprob: -11.625022888183594
    3. ',j' → logprob: -11.875022888183594
    4. 'dj' → logprob: -13.125022888183594
    5. ',' → logprob: -13.375022888183594
    6. 'cj' → logprob: -13.500022888183594
    7. 'aj' → logprob: -14.125022888183594
    8. ' j' → logprob: -14.750022888183594
    9. '```' → logprob: -15.375022888183594
    10. 'mj' → logprob: -15.875022888183594

Token 857: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.5802292227745056
    2. '))' → logprob: -0.8302292227745056
    3. '                   ' → logprob: -5.83022928237915
    4. ')' → logprob: -7.08022928237915
    5. ')
' → logprob: -7.70522928237915
    6. ' ))
' → logprob: -10.955228805541992
    7. '               ' → logprob: -11.955228805541992
    8. '                       ' → logprob: -12.080228805541992
    9. ' ))' → logprob: -12.080228805541992
    10. '))
' → logprob: -12.205228805541992

Token 858: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000157293034135364
    2. 'for' → logprob: -9.250157356262207
    3. ' for' → logprob: -10.000157356262207
    4. '               ' → logprob: -11.750157356262207
    5. '				' → logprob: -12.875157356262207
    6. '           ' → logprob: -13.750157356262207
    7. '		           ' → logprob: -14.000157356262207
    8. '                    
' → logprob: -14.250157356262207
    9. '   ' → logprob: -14.250157356262207
    10. '                       ' → logprob: -14.375157356262207

Token 859: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001249925117008388
    2. ' for' → logprob: -9.00012493133545
    3. '                   ' → logprob: -13.37512493133545
    4. '	for' → logprob: -17.625125885009766
    5. '                       ' → logprob: -18.875125885009766
    6. '```' → logprob: -19.625125885009766
    7. '                    
' → logprob: -19.750125885009766
    8. '               ' → logprob: -19.750125885009766
    9. 'neighbors' → logprob: -20.375125885009766
    10. '           ' → logprob: -21.250125885009766

Token 860: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.007571842521429062
    2. '(' → logprob: -5.007571697235107
    3. ' ni' → logprob: -8.007572174072266
    4. 'nei' → logprob: -8.132572174072266
    5. '(n' → logprob: -8.882572174072266
    6. 'neighbor' → logprob: -9.632572174072266
    7. '(ne' → logprob: -11.132572174072266
    8. 'n' → logprob: -12.257572174072266
    9. ' (' → logprob: -12.882572174072266
    10. 'nii' → logprob: -14.257572174072266

Token 861: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010977147612720728
    2. ',n' → logprob: -6.876097679138184
    3. ' ,' → logprob: -9.876097679138184
    4. ',(' → logprob: -12.126097679138184
    5. 'n' → logprob: -12.626097679138184
    6. '_,' → logprob: -13.376097679138184
    7. ',
' → logprob: -14.376097679138184
    8. ',new' → logprob: -14.626097679138184
    9. '‌,' → logprob: -15.126097679138184
    10. ',next' → logprob: -15.376097679138184

Token 862: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.055309757590293884
    2. 'e' → logprob: -3.430309772491455
    3. 'j' → logprob: -4.180309772491455
    4. ',n' → logprob: -6.055309772491455
    5. 'b' → logprob: -6.930309772491455
    6. ',j' → logprob: -7.555309772491455
    7. ',' → logprob: -7.805309772491455
    8. 'neighbors' → logprob: -7.930309772491455
    9. 'ei' → logprob: -8.055309295654297
    10. '_neighbors' → logprob: -8.180309295654297

Token 863: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06197608634829521
    2. 'in' → logprob: -2.811976194381714
    3. '	in' → logprob: -12.561976432800293
    4. ' ' → logprob: -13.311976432800293
    5. ',' → logprob: -13.936976432800293
    6. ')' → logprob: -14.686976432800293
    7. ' ' → logprob: -15.561976432800293
    8. '    ' → logprob: -15.686976432800293
    9. 's' → logprob: -15.811976432800293
    10. '```' → logprob: -15.811976432800293

Token 864: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0007099286303855479
    2. ' neighbors' → logprob: -7.2507100105285645
    3. '_neighbors' → logprob: -17.500709533691406
    4. 'ne' → logprob: -18.625709533691406
    5. ' ' → logprob: -20.500709533691406
    6. '   ' → logprob: -20.625709533691406
    7. 'neighbor' → logprob: -21.125709533691406
    8. '
' → logprob: -21.375709533691406
    9. '(ne' → logprob: -22.375709533691406
    10. 'Neighbors' → logprob: -22.500709533691406

Token 865: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.2901189923286438
    2. '[' → logprob: -1.540118932723999
    3. '(ci' → logprob: -3.290118932723999
    4. '(' → logprob: -8.790119171142578
    5. ',(' → logprob: -10.915119171142578
    6. ' (' → logprob: -11.040119171142578
    7. '   ' → logprob: -11.665119171142578
    8. '((' → logprob: -11.915119171142578
    9. '[
' → logprob: -12.790119171142578
    10. '```' → logprob: -13.040119171142578

Token 866: 'ci' (ID: 2114)
  Prédit: 'ci'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -5.9153885558771435e-06
    2. '(ci' → logprob: -12.250005722045898
    3. ' ci' → logprob: -13.750005722045898
    4. '   ' → logprob: -20.1250057220459
    5. ')' → logprob: -20.5000057220459
    6. '
' → logprob: -20.7500057220459
    7. '(' → logprob: -20.8750057220459
    8. 'i' → logprob: -21.6250057220459
    9. '-ci' → logprob: -21.6250057220459
    10. '                   ' → logprob: -22.6250057220459

Token 867: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38741326332092285
    2. ',c' → logprob: -1.8874132633209229
    3. 'ci' → logprob: -2.137413263320923
    4. ',n' → logprob: -3.012413263320923
    5. ',i' → logprob: -7.262413024902344
    6. 'cj' → logprob: -7.512413024902344
    7. ')][' → logprob: -7.512413024902344
    8. '(ci' → logprob: -8.012413024902344
    9. ' ,' → logprob: -9.137413024902344
    10. ')' → logprob: -9.512413024902344

Token 868: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.166338137816638e-05
    2. ')' → logprob: -10.750031471252441
    3. ')]' → logprob: -12.375031471252441
    4. ',j' → logprob: -12.875031471252441
    5. 'nj' → logprob: -13.500031471252441
    6. ')][' → logprob: -15.000031471252441
    7. '])' → logprob: -15.500031471252441
    8. '_j' → logprob: -15.500031471252441
    9. '```' → logprob: -15.500031471252441
    10. ',' → logprob: -15.750031471252441

Token 869: ')]' (ID: 15710)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.44171062111854553
    2. ']:' → logprob: -1.1917105913162231
    3. ')]' → logprob: -3.5667107105255127
    4. ']' → logprob: -4.316710472106934
    5. '):
' → logprob: -5.066710472106934
    6. '):' → logprob: -6.066710472106934
    7. ']]:
' → logprob: -6.441710472106934
    8. ')' → logprob: -7.191710472106934
    9. ']:
' → logprob: -8.441710472106934
    10. '                   ' → logprob: -9.066710472106934

Token 870: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.034583281725645065
    2. ':' → logprob: -3.909583330154419
    3. ':
' → logprob: -4.53458309173584
    4. '                           ' → logprob: -7.15958309173584
    5. '                        
' → logprob: -7.15958309173584
    6. '                               ' → logprob: -7.40958309173584
    7. '                   ' → logprob: -8.65958309173584
    8. '       ' → logprob: -8.65958309173584
    9. '                        ' → logprob: -8.65958309173584
    10. '	                   ' → logprob: -9.65958309173584

Token 871: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0014885544078424573
    2. ' if' → logprob: -6.75148868560791
    3. 'if' → logprob: -8.50148868560791
    4. '	                   ' → logprob: -10.25148868560791
    5. '                           ' → logprob: -10.87648868560791
    6. '```' → logprob: -11.00148868560791
    7. '                        ' → logprob: -11.75148868560791
    8. '                   ' → logprob: -11.75148868560791
    9. '                     ' → logprob: -12.62648868560791
    10. '                        
' → logprob: -12.75148868560791

Token 872: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.19379663467407227
    2. ' if' → logprob: -1.9437966346740723
    3. '                       ' → logprob: -3.6937966346740723
    4. 'if' (adapté à ' if') → logprob: -5.068796634674072
    5. '                               ' → logprob: -6.693796634674072
    6. '           ' → logprob: -8.193796157836914
    7. '               ' → logprob: -9.068796157836914
    8. '                   ' → logprob: -9.818796157836914
    9. '       ' → logprob: -10.568796157836914
    10. '                        ' → logprob: -10.693796157836914

Token 873: ' ' (ID: 220)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.1286296844482422
    2. ' not' → logprob: -1.2536296844482422
    3. '0' → logprob: -1.6286296844482422
    4. 'board' → logprob: -1.8786296844482422
    5. 'ni' → logprob: -3.753629684448242
    6. ' board' → logprob: -4.503629684448242
    7. ' ' → logprob: -5.503629684448242
    8. ' (' → logprob: -7.003629684448242
    9. ' ni' → logprob: -7.003629684448242
    10. '(not' → logprob: -7.753629684448242

Token 874: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9387617111206055
    2. 'not' → logprob: -0.9387617111206055
    3. 'board' → logprob: -2.1887617111206055
    4. 'ni' → logprob: -2.3137617111206055
    5. ' not' → logprob: -5.1887617111206055
    6. '(' → logprob: -8.063761711120605
    7. ' board' → logprob: -8.438761711120605
    8. ' ' → logprob: -8.813761711120605
    9. '(not' → logprob: -8.813761711120605
    10. ' ni' → logprob: -9.063761711120605

Token 875: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.35193151235580444
    2. '<=' → logprob: -1.2269315719604492
    3. ' <' → logprob: -6.351931571960449
    4. '                   ' → logprob: -8.10193157196045
    5. '<n' → logprob: -8.22693157196045
    6. '<' → logprob: -8.35193157196045
    7. '[' → logprob: -8.97693157196045
    8. '                       ' → logprob: -9.22693157196045
    9. '<len' → logprob: -9.35193157196045
    10. '                           ' → logprob: -9.47693157196045

Token 876: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -3.7697225252486533e-06
    2. ' ni' → logprob: -12.500003814697266
    3. 'nj' → logprob: -18.375003814697266
    4. 'nii' → logprob: -19.875003814697266
    5. '   ' → logprob: -20.125003814697266
    6. 'n' → logprob: -20.125003814697266
    7. '-ni' → logprob: -20.125003814697266
    8. 'niu' → logprob: -20.750003814697266
    9. 'Ni' → logprob: -20.875003814697266
    10. '
' → logprob: -21.250003814697266

Token 877: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04146340489387512
    2. '<N' → logprob: -4.041463375091553
    3. '<n' → logprob: -4.041463375091553
    4. ' <' → logprob: -5.666463375091553
    5. 'and' → logprob: -6.916463375091553
    6. ' and' → logprob: -8.041463851928711
    7. '<=' → logprob: -8.416463851928711
    8. '<i' → logprob: -8.666463851928711
    9. '                           ' → logprob: -9.166463851928711
    10. '<len' → logprob: -9.791463851928711

Token 878: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.320199877838604e-07
    2. ' N' → logprob: -15.0
    3. 'len' → logprob: -19.125
    4. '	N' → logprob: -20.25
    5. '   ' → logprob: -20.75
    6. 'n' → logprob: -20.75
    7. '
' → logprob: -21.0
    8. ' ' → logprob: -22.0
    9. '(N' → logprob: -22.125
    10. '>N' → logprob: -22.375

Token 879: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10032711178064346
    2. 'and' → logprob: -2.3503270149230957
    3. '                           ' → logprob: -9.350327491760254
    4. '                       ' → logprob: -10.600327491760254
    5. ',' → logprob: -12.350327491760254
    6. '                            ' → logprob: -14.100327491760254
    7. '                               ' → logprob: -14.225327491760254
    8. '                        ' → logprob: -14.225327491760254
    9. '	and' → logprob: -14.725327491760254
    10. '           ' → logprob: -14.725327491760254

Token 880: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08018770813941956
    2. 'nj' → logprob: -2.5801877975463867
    3. ' nj' → logprob: -7.205187797546387
    4. ' ' → logprob: -7.705187797546387
    5. '   ' → logprob: -10.580187797546387
    6. '               ' → logprob: -11.705187797546387
    7. '                   ' → logprob: -11.830187797546387
    8. '    ' → logprob: -11.830187797546387
    9. '                       ' → logprob: -11.955187797546387
    10. 'nk' → logprob: -12.205187797546387

Token 881: '0' (ID: 15)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.026454728096723557
    2. '0' → logprob: -3.6514546871185303
    3. ' nj' → logprob: -9.15145492553711
    4. 'nk' → logprob: -10.65145492553711
    5. 'ni' → logprob: -12.27645492553711
    6. 'n' → logprob: -12.27645492553711
    7. '
' → logprob: -12.52645492553711
    8. ' ' → logprob: -13.02645492553711
    9. 'len' → logprob: -13.27645492553711
    10. '   ' → logprob: -13.77645492553711

Token 882: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2904168665409088
    2. ' <=' → logprob: -1.9154168367385864
    3. 'nj' → logprob: -2.540416955947876
    4. ' nj' → logprob: -4.415416717529297
    5. 'n' → logprob: -5.790416717529297
    6. ' <' → logprob: -6.040416717529297
    7. '<' → logprob: -6.165416717529297
    8. '<n' → logprob: -6.540416717529297
    9. '                       ' → logprob: -6.790416717529297
    10. '=' → logprob: -6.790416717529297

Token 883: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.24803756177425385
    2. 'len' → logprob: -1.623037576675415
    3. '=' → logprob: -4.623037338256836
    4. 'ni' → logprob: -4.623037338256836
    5. 'nk' → logprob: -7.498037338256836
    6. '(n' → logprob: -7.623037338256836
    7. 'N' → logprob: -8.248037338256836
    8. '(i' → logprob: -8.248037338256836
    9. 'n' → logprob: -8.498037338256836
    10. '(len' → logprob: -8.623037338256836

Token 884: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2823566794395447
    2. ' <=' → logprob: -1.4073567390441895
    3. '<' → logprob: -7.0323567390441895
    4. ' <' → logprob: -8.407356262207031
    5. '<n' → logprob: -9.907356262207031
    6. '≤' → logprob: -11.657356262207031
    7. '[' → logprob: -11.782356262207031
    8. ' and' → logprob: -11.907356262207031
    9. 'and' → logprob: -12.532356262207031
    10. ' ≤' → logprob: -12.657356262207031

Token 885: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -3.643152740551159e-05
    2. ' ni' → logprob: -10.250036239624023
    3. 'i' → logprob: -14.500036239624023
    4. '   ' → logprob: -15.250036239624023
    5. 'n' → logprob: -16.125036239624023
    6. 'Ni' → logprob: -16.500036239624023
    7. '
' → logprob: -16.875036239624023
    8. 'nii' → logprob: -17.750036239624023
    9. '-ni' → logprob: -18.250036239624023
    10. ' ' → logprob: -18.500036239624023

Token 886: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0028664469718933105
    2. 'and' → logprob: -6.377866268157959
    3. '                           ' → logprob: -6.877866268157959
    4. '                               ' → logprob: -9.377866744995117
    5. ':
' → logprob: -11.627866744995117
    6. '                       ' → logprob: -11.877866744995117
    7. '                            ' → logprob: -12.002866744995117
    8. '	and' → logprob: -12.127866744995117
    9. '<|end|>' → logprob: -12.377866744995117
    10. ' ' → logprob: -13.127866744995117

Token 887: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3495692312717438
    2. ' and' → logprob: -1.2245692014694214
    3. '                       ' → logprob: -7.724569320678711
    4. '                               ' → logprob: -7.849569320678711
    5. '                            ' → logprob: -9.474569320678711
    6. 'and' → logprob: -9.724569320678711
    7. ' if' → logprob: -9.724569320678711
    8. '                            
' → logprob: -11.099569320678711
    9. '                        ' → logprob: -11.349569320678711
    10. '                         ' → logprob: -11.599569320678711

Token 888: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5443121194839478
    2. '                               ' → logprob: -1.0443121194839478
    3. ' if' → logprob: -2.919312000274658
    4. '                           ' → logprob: -4.294312000274658
    5. '   ' → logprob: -9.919312477111816
    6. '                       ' → logprob: -9.919312477111816
    7. '                             ' → logprob: -10.544312477111816
    8. '                            ' → logprob: -10.794312477111816
    9. '                                   ' → logprob: -10.919312477111816
    10. ' ' → logprob: -11.794312477111816

Token 889: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.5385182499885559
    2. 'not' → logprob: -0.9135182499885559
    3. ' not' → logprob: -4.28851842880249
    4. ' board' → logprob: -6.91351842880249
    5. '                           ' → logprob: -8.038517951965332
    6. '                               ' → logprob: -9.538517951965332
    7. '                                   ' → logprob: -10.163517951965332
    8. '(not' → logprob: -10.288517951965332
    9. '   ' → logprob: -10.663517951965332
    10. '(board' → logprob: -11.038517951965332

Token 890: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '                   ' → logprob: -13.500003814697266
    3. '                           ' → logprob: -14.000003814697266
    4. '```' → logprob: -15.000003814697266
    5. ' [' → logprob: -15.125003814697266
    6. '][' → logprob: -16.125003814697266
    7. '                               ' → logprob: -16.500003814697266
    8. ')[' → logprob: -16.625003814697266
    9. '[i' → logprob: -16.750003814697266
    10. '                       ' → logprob: -16.750003814697266

Token 891: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.0001785112835932523
    2. '[' → logprob: -8.750178337097168
    3. ' ni' → logprob: -10.875178337097168
    4. '   ' → logprob: -15.500178337097168
    5. 'n' → logprob: -15.750178337097168
    6. '           ' → logprob: -15.875178337097168
    7. 'i' → logprob: -16.000179290771484
    8. 'NI' → logprob: -16.625179290771484
    9. 'nii' → logprob: -16.750179290771484
    10. '```' → logprob: -16.750179290771484

Token 892: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2256578803062439
    2. '[' → logprob: -1.6006579399108887
    3. '[(' → logprob: -9.35065746307373
    4. ']' → logprob: -9.47565746307373
    5. ']][' → logprob: -10.22565746307373
    6. '"][' → logprob: -11.47565746307373
    7. ''][' → logprob: -11.60065746307373
    8. '(ci' → logprob: -12.10065746307373
    9. '(' → logprob: -12.35065746307373
    10. ')][' → logprob: -12.60065746307373

Token 893: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -6.392202976712724e-06
    2. ' nj' → logprob: -12.750006675720215
    3. '[n' → logprob: -13.125006675720215
    4. 'n' → logprob: -14.625006675720215
    5. 'npj' → logprob: -15.125006675720215
    6. 'ni' → logprob: -16.0000057220459
    7. ' ' → logprob: -16.1250057220459
    8. 'nji' → logprob: -16.1250057220459
    9. '[' → logprob: -16.5000057220459
    10. 'nij' → logprob: -16.6250057220459

Token 894: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1809302121400833
    2. ']==' → logprob: -1.805930256843567
    3. ']!=' → logprob: -7.305930137634277
    4. ' ]' → logprob: -8.305930137634277
    5. '[' → logprob: -8.930930137634277
    6. '==' → logprob: -9.555930137634277
    7. ')==' → logprob: -11.305930137634277
    8. '']==' → logprob: -11.805930137634277
    9. '                           ' → logprob: -11.930930137634277
    10. '[i' → logprob: -12.055930137634277

Token 895: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5781940221786499
    2. ' ==' → logprob: -0.8281940221786499
    3. ')==' → logprob: -6.9531941413879395
    4. ']==' → logprob: -7.3281941413879395
    5. '[' → logprob: -8.328193664550781
    6. '                           ' → logprob: -8.703193664550781
    7. '                               ' → logprob: -9.203193664550781
    8. '                            ' → logprob: -10.203193664550781
    9. '                                   ' → logprob: -11.328193664550781
    10. '===' → logprob: -11.328193664550781

Token 896: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.00018220659694634378
    2. ' stone' → logprob: -8.625182151794434
    3. 'ston' → logprob: -13.000182151794434
    4. '   ' → logprob: -15.625182151794434
    5. 'board' → logprob: -16.12518310546875
    6. '```' → logprob: -17.12518310546875
    7. ' ' → logprob: -18.25018310546875
    8. '               ' → logprob: -18.37518310546875
    9. 'stones' → logprob: -18.37518310546875
    10. 'Stone' → logprob: -18.62518310546875

Token 897: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -6.265633419388905e-05
    2. 'number' → logprob: -9.750062942504883
    3. '[' → logprob: -13.375062942504883
    4. '[i' → logprob: -14.000062942504883
    5. '_NUMBER' → logprob: -14.500062942504883
    6. 'Number' → logprob: -15.000062942504883
    7. '   ' → logprob: -15.250062942504883
    8. '[number' → logprob: -15.250062942504883
    9. '               ' → logprob: -15.750062942504883
    10. '_' → logprob: -16.000062942504883

Token 898: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006236979737877846
    2. 'and' → logprob: -5.131237030029297
    3. '                               ' → logprob: -8.256237030029297
    4. '                           ' → logprob: -10.506237030029297
    5. '                            ' → logprob: -11.006237030029297
    6. '                             ' → logprob: -13.381237030029297
    7. ' ' → logprob: -14.006237030029297
    8. '                              ' → logprob: -14.131237030029297
    9. '                                   ' → logprob: -15.006237030029297
    10. '                                ' → logprob: -15.256237030029297

Token 899: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5759606957435608
    2. 'not' → logprob: -0.8259606957435608
    3. '                           ' → logprob: -11.450961112976074
    4. '                               ' → logprob: -12.075961112976074
    5. '(not' → logprob: -13.200961112976074
    6. '                            ' → logprob: -13.950961112976074
    7. ' and' → logprob: -14.325961112976074
    8. 'and' → logprob: -14.575961112976074
    9. '	not' → logprob: -15.075961112976074
    10. '!' → logprob: -15.200961112976074

Token 900: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.011048528365790844
    2. ' visited' → logprob: -4.511048316955566
    3. '
' → logprob: -15.136048316955566
    4. '   ' → logprob: -16.386049270629883
    5. '                   ' → logprob: -16.511049270629883
    6. '                           ' → logprob: -16.886049270629883
    7. '           ' → logprob: -17.136049270629883
    8. '                               ' → logprob: -17.761049270629883
    9. 'visit' → logprob: -18.011049270629883
    10. '               ' → logprob: -18.011049270629883

Token 901: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8193366486229934e-05
    2. 'ni' → logprob: -11.375018119812012
    3. '```' → logprob: -13.125018119812012
    4. '[
' → logprob: -13.375018119812012
    5. '
' → logprob: -13.875018119812012
    6. 'def' → logprob: -14.750018119812012
    7. '(' → logprob: -15.000018119812012
    8. '[(' → logprob: -15.375018119812012
    9. '][' → logprob: -15.625018119812012
    10. 'import' → logprob: -16.250019073486328

Token 902: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.125017166137695
    3. ' ni' → logprob: -12.875017166137695
    4. 'n' → logprob: -15.875017166137695
    5. '-ni' → logprob: -17.250017166137695
    6. 'Ni' → logprob: -18.250017166137695
    7. 'nii' → logprob: -18.375017166137695
    8. '[
' → logprob: -18.875017166137695
    9. '```' → logprob: -19.000017166137695
    10. 'niu' → logprob: -19.250017166137695

Token 903: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1836339682340622
    2. '][' → logprob: -2.308634042739868
    3. '[n' → logprob: -2.683634042739868
    4. '"][' → logprob: -11.308633804321289
    5. ']' → logprob: -12.058633804321289
    6. '```' → logprob: -12.183633804321289
    7. '[
' → logprob: -12.308633804321289
    8. ''][' → logprob: -12.683633804321289
    9. 'nj' → logprob: -12.933633804321289
    10. ',n' → logprob: -12.933633804321289

Token 904: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -1.1994775377388578e-05
    2. '[n' → logprob: -11.750012397766113
    3. ' nj' → logprob: -13.250012397766113
    4. '[' → logprob: -14.500012397766113
    5. 'n' → logprob: -14.750012397766113
    6. 'j' → logprob: -15.000012397766113
    7. '[j' → logprob: -15.125012397766113
    8. '```' → logprob: -15.875012397766113
    9. 'nij' → logprob: -16.125011444091797
    10. 'nju' → logprob: -16.250011444091797

Token 905: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.9517074823379517
    2. ':
' → logprob: -1.4517074823379517
    3. '                           ' → logprob: -2.076707363128662
    4. ':' → logprob: -2.076707363128662
    5. '):
' → logprob: -2.826707363128662
    6. ']:' → logprob: -3.576707363128662
    7. '                               ' → logprob: -4.201707363128662
    8. '[' → logprob: -4.826707363128662
    9. '                       ' → logprob: -5.451707363128662
    10. '():
' → logprob: -6.451707363128662

Token 906: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.00029494395130313933
    2. '                           ' → logprob: -8.87529468536377
    3. '                                   ' → logprob: -9.25029468536377
    4. '                                       ' → logprob: -11.50029468536377
    5. '                       ' → logprob: -11.62529468536377
    6. '                                
' → logprob: -12.00029468536377
    7. '```' → logprob: -12.12529468536377
    8. '                             ' → logprob: -12.25029468536377
    9. '                                ' → logprob: -13.00029468536377
    10. '
' → logprob: -13.12529468536377

Token 907: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.027328329160809517
    2. ' visited' → logprob: -3.9023282527923584
    3. '                               ' → logprob: -5.1523284912109375
    4. '                                   ' → logprob: -7.0273284912109375
    5. '                                       ' → logprob: -10.152328491210938
    6. '   ' → logprob: -10.777328491210938
    7. '           ' → logprob: -11.777328491210938
    8. '                                           ' → logprob: -12.277328491210938
    9. '               ' → logprob: -12.402328491210938
    10. '                   ' → logprob: -12.777328491210938

Token 908: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '
' → logprob: -14.00000286102295
    3. 'ni' → logprob: -14.50000286102295
    4. '[
' → logprob: -14.87500286102295
    5. '```' → logprob: -15.50000286102295
    6. '[i' → logprob: -15.87500286102295
    7. 'import' → logprob: -16.125001907348633
    8. ' [' → logprob: -16.625001907348633
    9. 'def' → logprob: -16.750001907348633
    10. '=' → logprob: -17.000001907348633

Token 909: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.00016313401283696294
    2. '[' → logprob: -8.750163078308105
    3. ' ni' → logprob: -12.375163078308105
    4. 'Ni' → logprob: -15.500163078308105
    5. 'NI' → logprob: -15.875163078308105
    6. '-ni' → logprob: -16.750164031982422
    7. 'niu' → logprob: -17.500164031982422
    8. 'n' → logprob: -17.500164031982422
    9. 'nii' → logprob: -17.625164031982422
    10. '```' → logprob: -18.125164031982422

Token 910: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -14.500001907348633
    3. ' [' → logprob: -14.625001907348633
    4. '[i' → logprob: -15.375001907348633
    5. '[
' → logprob: -15.500001907348633
    6. '[(' → logprob: -16.000001907348633
    7. '
' → logprob: -16.625001907348633
    8. '][' → logprob: -16.750001907348633
    9. '[[' → logprob: -17.125001907348633
    10. '       ' → logprob: -17.375001907348633

Token 911: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.006014595273882151
    2. 'True' → logprob: -5.131014823913574
    3. 'ni' → logprob: -10.381014823913574
    4. '1' → logprob: -11.006014823913574
    5. '[n' → logprob: -11.506014823913574
    6. 'False' → logprob: -12.006014823913574
    7. ' True' → logprob: -12.756014823913574
    8. '[' → logprob: -12.756014823913574
    9. 'nji' → logprob: -13.131014823913574
    10. '
' → logprob: -13.381014823913574

Token 912: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13703535497188568
    2. ']=' → logprob: -2.137035369873047
    3. '[' → logprob: -4.637035369873047
    4. '[j' → logprob: -9.137035369873047
    5. '=' → logprob: -9.637035369873047
    6. '[n' → logprob: -9.762035369873047
    7. '=True' → logprob: -10.887035369873047
    8. ')' → logprob: -10.887035369873047
    9. '                   ' → logprob: -11.137035369873047
    10. '                           ' → logprob: -11.387035369873047

Token 913: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5300198197364807
    2. '=' → logprob: -0.9050198197364807
    3. '=True' → logprob: -5.655019760131836
    4. ' =' → logprob: -5.905019760131836
    5. '[
' → logprob: -8.530019760131836
    6. '=
' → logprob: -8.530019760131836
    7. ']=' → logprob: -10.030019760131836
    8. '=true' → logprob: -10.655019760131836
    9. ']' → logprob: -10.780019760131836
    10. '               ' → logprob: -10.905019760131836

Token 914: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.935296834039036e-06
    2. ' True' → logprob: -12.75000286102295
    3. '(True' → logprob: -20.500003814697266
    4. '=True' → logprob: -22.000003814697266
    5. 'true' → logprob: -23.750003814697266
    6. '.True' → logprob: -24.875003814697266
    7. '   ' → logprob: -25.250003814697266
    8. '[' → logprob: -25.500003814697266
    9. 'TRUE' → logprob: -25.500003814697266
    10. '_true' → logprob: -25.625003814697266

Token 915: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.002003461355343461
    2. '							' → logprob: -7.0020036697387695
    3. '                                   ' → logprob: -8.25200366973877
    4. '<|end|>' → logprob: -8.50200366973877
    5. '                                ' → logprob: -8.87700366973877
    6. '                                
' → logprob: -9.25200366973877
    7. '```' → logprob: -9.37700366973877
    8. '                                       ' → logprob: -9.62700366973877
    9. '                           ' → logprob: -10.37700366973877
    10. '								' → logprob: -10.50200366973877

Token 916: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0018986482173204422
    2. '                                   ' → logprob: -6.876898765563965
    3. '                                       ' → logprob: -8.876898765563965
    4. '```' → logprob: -9.126898765563965
    5. ' stack' → logprob: -9.251898765563965
    6. '               ' → logprob: -9.376898765563965
    7. '                                
' → logprob: -9.501898765563965
    8. '                           ' → logprob: -9.626898765563965
    9. '							' → logprob: -9.626898765563965
    10. 'stack' → logprob: -9.626898765563965

Token 917: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0007099286303855479
    2. ' stack' → logprob: -7.2507100105285645
    3. '                               ' → logprob: -17.625709533691406
    4. '                                   ' → logprob: -19.000709533691406
    5. '(stack' → logprob: -19.125709533691406
    6. '	stack' → logprob: -19.750709533691406
    7. '_stack' → logprob: -20.625709533691406
    8. 'stackoverflow' → logprob: -20.750709533691406
    9. 'Stack' → logprob: -20.875709533691406
    10. '```' → logprob: -20.875709533691406

Token 918: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0564331205387134e-05
    2. '.' → logprob: -11.62501049041748
    3. ' .' → logprob: -14.37501049041748
    4. '.extend' → logprob: -14.62501049041748
    5. 'append' → logprob: -15.12501049041748
    6. '.app' → logprob: -16.250011444091797
    7. '                                   ' → logprob: -17.500011444091797
    8. '                               ' → logprob: -17.500011444091797
    9. '.push' → logprob: -18.125011444091797
    10. '.Append' → logprob: -18.500011444091797

Token 919: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47408199310302734
    2. '((' → logprob: -0.9740819931030273
    3. '(n' → logprob: -13.099081993103027
    4. '(
' → logprob: -13.349081993103027
    5. ' (' → logprob: -13.849081993103027
    6. '[(' → logprob: -15.474081993103027
    7. '(ne' → logprob: -16.974082946777344
    8. '```' → logprob: -17.599082946777344
    9. ' ((' → logprob: -18.724082946777344
    10. '   ' → logprob: -18.849082946777344

Token 920: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.12500286102295
    3. ' ni' → logprob: -14.75000286102295
    4. '   ' → logprob: -16.875001907348633
    5. 'nii' → logprob: -18.250001907348633
    6. '(n' → logprob: -19.000001907348633
    7. '```' → logprob: -19.250001907348633
    8. ' (' → logprob: -19.500001907348633
    9. '-ni' → logprob: -19.500001907348633
    10. ')' → logprob: -20.250001907348633

Token 921: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025674565695226192
    2. ',n' → logprob: -6.002567291259766
    3. 'ni' → logprob: -9.627567291259766
    4. ' ,' → logprob: -11.502567291259766
    5. ',
' → logprob: -12.752567291259766
    6. '[' → logprob: -12.877567291259766
    7. '   ' → logprob: -13.377567291259766
    8. '
' → logprob: -13.377567291259766
    9. '[n' → logprob: -13.877567291259766
    10. '                   ' → logprob: -14.002567291259766

Token 922: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0280383548888494e-06
    2. 'nj' → logprob: -14.500000953674316
    3. ',j' → logprob: -14.875000953674316
    4. ')' → logprob: -16.750001907348633
    5. '_j' → logprob: -16.750001907348633
    6. ',' → logprob: -17.000001907348633
    7. '```' → logprob: -17.875001907348633
    8. 'jj' → logprob: -18.375001907348633
    9. 'jw' → logprob: -18.375001907348633
    10. ' j' → logprob: -18.375001907348633

Token 923: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04895373806357384
    2. ')' → logprob: -3.0489537715911865
    3. '))
' → logprob: -8.548954010009766
    4. ')))' → logprob: -9.173954010009766
    5. '                               ' → logprob: -10.548954010009766
    6. '                           ' → logprob: -10.923954010009766
    7. ',' → logprob: -12.548954010009766
    8. ' ))' → logprob: -12.673954010009766
    9. ')}' → logprob: -12.798954010009766
    10. '                       ' → logprob: -13.423954010009766

Token 924: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1214669942855835
    2. ')' → logprob: -1.3714669942855835
    3. '```' → logprob: -1.7464669942855835
    4. '           ' → logprob: -2.246467113494873
    5. '                           ' → logprob: -2.621467113494873
    6. '                               ' → logprob: -3.371467113494873
    7. '                       ' → logprob: -3.996467113494873
    8. '                   ' → logprob: -5.371467113494873
    9. '<|end|>' → logprob: -6.121467113494873
    10. '       ' → logprob: -6.496467113494873

Token 925: ' groups' (ID: 8896)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3179924190044403
    2. 'groups' (adapté à ' groups') → logprob: -1.5679924488067627
    3. '               ' → logprob: -2.8179924488067627
    4. '```' → logprob: -6.567992210388184
    5. '           ' → logprob: -6.817992210388184
    6. ' groups' → logprob: -7.067992210388184
    7. '       ' → logprob: -7.817992210388184
    8. '(groups' → logprob: -8.692992210388184
    9. '                   ' → logprob: -9.567992210388184
    10. 'return' → logprob: -10.067992210388184

Token 926: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015943869948387146
    2. '.' → logprob: -8.75015926361084
    3. 'append' → logprob: -14.50015926361084
    4. '.app' → logprob: -15.37515926361084
    5. '.Append' → logprob: -16.375160217285156
    6. '.extend' → logprob: -16.625160217285156
    7. '_append' → logprob: -17.500160217285156
    8. '.add' → logprob: -17.750160217285156
    9. '.push' → logprob: -19.000160217285156
    10. 'Append' → logprob: -19.125160217285156

Token 927: '(' (ID: 7)
  Prédit: '(group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -1.1160349458805285e-05
    2. '((' → logprob: -11.500011444091797
    3. 'group' → logprob: -14.000011444091797
    4. '(' → logprob: -15.625011444091797
    5. ' (' → logprob: -17.750011444091797
    6. '(groups' → logprob: -18.875011444091797
    7. '"group' → logprob: -19.000011444091797
    8. '(tuple' → logprob: -19.125011444091797
    9. '[group' → logprob: -19.625011444091797
    10. ' group' → logprob: -19.750011444091797

Token 928: ' (' (ID: 350)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -4.320199877838604e-07
    2. ' group' → logprob: -14.75
    3. '(group' → logprob: -17.375
    4. '[group' → logprob: -20.625
    5. '   ' → logprob: -20.875
    6. '"group' → logprob: -21.625
    7. '[' → logprob: -22.5
    8. 'set' → logprob: -22.875
    9. '	group' → logprob: -23.125
    10. 'groups' → logprob: -24.25

Token 929: 'stone' (ID: 18617)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.6359415054321289
    2. 'stone' → logprob: -0.7609415054321289
    3. 'board' → logprob: -6.135941505432129
    4. '   ' → logprob: -8.510941505432129
    5. ' stone' → logprob: -8.510941505432129
    6. ' group' → logprob: -8.885941505432129
    7. 'ston' → logprob: -9.385941505432129
    8. 'set' → logprob: -9.635941505432129
    9. '[' → logprob: -9.760941505432129
    10. '(' → logprob: -9.760941505432129

Token 930: '_number' (ID: 11733)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.5781816840171814
    2. '_number' → logprob: -0.8281816840171814
    3. 'number' → logprob: -7.328181743621826
    4. '_numbers' → logprob: -7.578181743621826
    5. ',' → logprob: -7.953181743621826
    6. '[' → logprob: -8.578181266784668
    7. 'positions' → logprob: -8.703181266784668
    8. '   ' → logprob: -9.953181266784668
    9. '```' → logprob: -9.953181266784668
    10. ')_' → logprob: -10.578181266784668

Token 931: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ',[' → logprob: -11.875015258789062
    3. ',
' → logprob: -12.250015258789062
    4. ' ,' → logprob: -13.125015258789062
    5. ',g' → logprob: -14.750015258789062
    6. ',user' → logprob: -16.000015258789062
    7. '[group' → logprob: -16.125015258789062
    8. '[' → logprob: -16.500015258789062
    9. ',list' → logprob: -16.625015258789062
    10. ',List' → logprob: -17.250015258789062

Token 932: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.0004306692280806601
    2. ' group' → logprob: -7.750430583953857
    3. '[group' → logprob: -18.125431060791016
    4. '"group' → logprob: -19.375431060791016
    5. 'groups' → logprob: -21.000431060791016
    6. '(group' → logprob: -21.125431060791016
    7. '[' → logprob: -22.125431060791016
    8. '	group' → logprob: -22.125431060791016
    9. 'set' → logprob: -22.250431060791016
    10. '   ' → logprob: -22.375431060791016

Token 933: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -5.300083648762666e-05
    2. 'positions' → logprob: -10.000053405761719
    3. 'Positions' → logprob: -12.500053405761719
    4. ')_' → logprob: -13.750053405761719
    5. ')' → logprob: -14.375053405761719
    6. ',' → logprob: -14.500053405761719
    7. 's' → logprob: -14.875053405761719
    8. '```' → logprob: -14.875053405761719
    9. '[' → logprob: -15.250053405761719
    10. '[_' → logprob: -16.00005340576172

Token 934: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3080716346157715e-05
    2. ' )' → logprob: -10.750022888183594
    3. '))' → logprob: -14.125022888183594
    4. ')}' → logprob: -14.625022888183594
    5. ')
' → logprob: -15.500022888183594
    6. '   ' → logprob: -16.625022888183594
    7. '               ' → logprob: -17.750022888183594
    8. ');' → logprob: -18.250022888183594
    9. '           ' → logprob: -18.625022888183594
    10. '),' → logprob: -18.875022888183594

Token 935: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010521204239921644
    2. ' )' → logprob: -9.375104904174805
    3. ')
' → logprob: -10.875104904174805
    4. '               ' → logprob: -14.750104904174805
    5. '           ' → logprob: -15.000104904174805
    6. '   ' → logprob: -15.500104904174805
    7. ')}' → logprob: -16.125104904174805
    8. '       ' → logprob: -16.375104904174805
    9. ')return' → logprob: -16.375104904174805
    10. '))' → logprob: -16.500104904174805

Token 936: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04759838432073593
    2. '   ' → logprob: -3.922598361968994
    3. '
' → logprob: -4.047598361968994
    4. '```' → logprob: -5.297598361968994
    5. 'return' → logprob: -6.297598361968994
    6. '<|end|>' → logprob: -6.797598361968994
    7. ')' → logprob: -7.797598361968994
    8. ' return' → logprob: -7.922598361968994
    9. '               ' → logprob: -9.422598838806152
    10. '<|end|>' → logprob: -9.672598838806152

Token 937: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013874927535653114
    2. 'return' (adapté à ' return') → logprob: -4.5138750076293945
    3. '```' → logprob: -6.6388750076293945
    4. '
' → logprob: -7.3888750076293945
    5. 'def' → logprob: -7.7638750076293945
    6. ')' → logprob: -8.388875007629395
    7. ' return' → logprob: -8.763875007629395
    8. '    
' → logprob: -10.263875007629395
    9. ')
' → logprob: -10.388875007629395
    10. '``' → logprob: -12.263875007629395

Token 938: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.000553151941858232
    2. ' groups' → logprob: -7.500553131103516
    3. '(groups' → logprob: -15.750553131103516
    4. '.groups' → logprob: -19.625553131103516
    5. 'group' → logprob: -20.875553131103516
    6. '   ' → logprob: -21.250553131103516
    7. 'roups' → logprob: -22.375553131103516
    8. '_groups' → logprob: -22.750553131103516
    9. '[' → logprob: -23.000553131103516
    10. '```' → logprob: -23.250553131103516

Token 939: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016269792104139924
    2. '
' → logprob: -6.501626968383789
    3. '```' → logprob: -9.126626968383789
    4. '<|end|>' → logprob: -11.501626968383789
    5. '

' → logprob: -13.376626968383789
    6. '#' → logprob: -13.751626968383789
    7. ' def' → logprob: -14.001626968383789
    8. '``' → logprob: -14.376626968383789
    9. ')' → logprob: -15.126626968383789
    10. '  
' → logprob: -15.251626968383789

Token 940: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016523292288184166
    2. '
' → logprob: -6.501652240753174
    3. '```' → logprob: -8.876652717590332
    4. '

' → logprob: -11.626652717590332
    5. '``' → logprob: -14.376652717590332
    6. '<|end|>' → logprob: -15.251652717590332
    7. ' def' → logprob: -15.876652717590332
    8. '\' → logprob: -16.001651763916016
    9. '#' → logprob: -16.001651763916016
    10. ':def' → logprob: -16.126651763916016

Token 941: ' has' (ID: 853)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.9607967138290405
    2. ' can' → logprob: -1.2107967138290405
    3. ' is' → logprob: -2.58579683303833
    4. 'is' → logprob: -2.58579683303833
    5. ' check' → logprob: -3.33579683303833
    6. 'simulate' → logprob: -3.33579683303833
    7. 'check' → logprob: -3.96079683303833
    8. 'remove' → logprob: -4.58579683303833
    9. ' remove' → logprob: -4.71079683303833
    10. ' has' → logprob: -4.71079683303833

Token 942: '_empty' (ID: 35051)
  Prédit: '_lib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lib' → logprob: -0.019426073879003525
    2. '_empty' → logprob: -4.644425868988037
    3. '_adj' → logprob: -4.769425868988037
    4. 'lib' → logprob: -7.019425868988037
    5. '_any' → logprob: -9.269426345825195
    6. '_no' → logprob: -10.019426345825195
    7. '_' → logprob: -10.644426345825195
    8. '_group' → logprob: -10.894426345825195
    9. '(lib' → logprob: -11.519426345825195
    10. 'empty' → logprob: -11.644426345825195

Token 943: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.006031419150531292
    2. '_neighbor' → logprob: -5.756031513214111
    3. 'adj' → logprob: -6.881031513214111
    4. '(adj' → logprob: -7.256031513214111
    5. '_neighbors' → logprob: -7.256031513214111
    6. '_ad' → logprob: -8.506031036376953
    7. '_space' → logprob: -9.506031036376953
    8. '_' → logprob: -10.131031036376953
    9. '((' → logprob: -10.506031036376953
    10. '(' → logprob: -10.631031036376953

Token 944: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.0027585108764469624
    2. '((' → logprob: -6.752758502960205
    3. 'ac' → logprob: -7.127758502960205
    4. 'acency' → logprob: -7.752758502960205
    5. '(adj' → logprob: -8.252758979797363
    6. '[(' → logprob: -10.752758979797363
    7. '=(' → logprob: -10.877758979797363
    8. 'adj' → logprob: -10.877758979797363
    9. '(' → logprob: -11.377758979797363
    10. 'ent' → logprob: -12.377758979797363

Token 945: '(group' (ID: 36416)
  Prédit: '(board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.18858802318572998
    2. '(' → logprob: -2.3135881423950195
    3. '((' → logprob: -2.8135881423950195
    4. '(node' → logprob: -4.9385881423950195
    5. '(adj' → logprob: -6.4385881423950195
    6. '(ne' → logprob: -6.9385881423950195
    7. '(pos' → logprob: -7.4385881423950195
    8. '(position' → logprob: -7.9385881423950195
    9. '(
' → logprob: -8.06358814239502
    10. '(group' → logprob: -8.43858814239502

Token 946: '_positions' (ID: 93193)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7344176173210144
    2. '):' → logprob: -1.6094176769256592
    3. '_positions' → logprob: -2.359417676925659
    4. '):
' → logprob: -2.984417676925659
    5. '(group' → logprob: -3.109417676925659
    6. ')' → logprob: -3.234417676925659
    7. '(' → logprob: -3.609417676925659
    8. '(pos' → logprob: -3.859417676925659
    9. '_pos' → logprob: -4.23441743850708
    10. 'positions' → logprob: -5.35941743850708

Token 947: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6656825866666622e-05
    2. '   ' → logprob: -11.25002670288086
    3. '):' → logprob: -12.00002670288086
    4. '(board' → logprob: -12.62502670288086
    5. ' ,' → logprob: -13.87502670288086
    6. ',
' → logprob: -14.37502670288086
    7. ',pos' → logprob: -15.12502670288086
    8. ',(' → logprob: -15.12502670288086
    9. ')' → logprob: -15.37502670288086
    10. '،' → logprob: -15.75002670288086

Token 948: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.04939896613359451
    2. 'neighbors' → logprob: -3.049398899078369
    3. ' board' → logprob: -7.424398899078369
    4. ' neighbors' → logprob: -8.549399375915527
    5. 'neighbor' → logprob: -11.799399375915527
    6. '   ' → logprob: -12.674399375915527
    7. '
' → logprob: -13.299399375915527
    8. '```' → logprob: -13.424399375915527
    9. 'ne' → logprob: -14.049399375915527
    10. '	board' → logprob: -14.174399375915527

Token 949: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3311227262020111
    2. '):' → logprob: -1.7061227560043335
    3. '):
' → logprob: -2.331122636795044
    4. '   ' → logprob: -5.831122875213623
    5. ')' → logprob: -9.331122398376465
    6. '):
' → logprob: -9.956122398376465
    7. '):

' → logprob: -11.331122398376465
    8. '```' → logprob: -11.581122398376465
    9. ' ' → logprob: -12.081122398376465
    10. '       ' → logprob: -12.581122398376465

Token 950: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0005541055579669774
    2. ' neighbors' → logprob: -7.500554084777832
    3. 'board' → logprob: -14.125554084777832
    4. '_neighbors' → logprob: -15.625554084777832
    5. 'neighbor' → logprob: -15.750554084777832
    6. '
' → logprob: -17.50055503845215
    7. 'ne' → logprob: -17.75055503845215
    8. 'len' → logprob: -18.00055503845215
    9. '```' → logprob: -18.00055503845215
    10. '   ' → logprob: -18.12555503845215

Token 951: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2019556611776352
    2. '):
' → logprob: -1.7019556760787964
    3. '   ' → logprob: -7.826955795288086
    4. ')' → logprob: -9.576955795288086
    5. ',' → logprob: -9.951955795288086
    6. '):
' → logprob: -10.826955795288086
    7. '):

' → logprob: -12.701955795288086
    8. ' ):' → logprob: -13.826955795288086
    9. ' ' → logprob: -14.201955795288086
    10. 'def' → logprob: -14.451955795288086

Token 952: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004167914390563965
    2. ' for' → logprob: -5.5041680335998535
    3. 'for' → logprob: -9.379167556762695
    4. '	for' → logprob: -12.379167556762695
    5. '   ' → logprob: -14.129167556762695
    6. '```' → logprob: -16.379167556762695
    7. '       ' → logprob: -17.754167556762695
    8. '
' → logprob: -18.379167556762695
    9. '   ' → logprob: -18.629167556762695
    10. '    
' → logprob: -19.504167556762695

Token 953: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25387585163116455
    2. '   ' → logprob: -1.5038758516311646
    3. ' for' → logprob: -6.253875732421875
    4. '	for' → logprob: -10.753875732421875
    5. '```' → logprob: -14.753875732421875
    6. 'def' → logprob: -16.003875732421875
    7. '       ' → logprob: -18.628875732421875
    8. '
' → logprob: -18.878875732421875
    9. '   ' → logprob: -19.253875732421875
    10. '``' → logprob: -19.378875732421875

Token 954: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023177918046712875
    2. '   ' → logprob: -4.0231781005859375
    3. 'def' → logprob: -5.7731781005859375
    4. ' for' → logprob: -6.2731781005859375
    5. '	for' → logprob: -10.898178100585938
    6. '
' → logprob: -14.273178100585938
    7. '       ' → logprob: -17.148178100585938
    8. 'return' → logprob: -17.273178100585938
    9. 'empty' → logprob: -17.398178100585938
    10. '```' → logprob: -17.523178100585938

Token 955: 'term' (ID: 8044)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0019298245897516608
    2. 'term' → logprob: -6.376929759979248
    3. 'def' → logprob: -9.001930236816406
    4. 'tect' → logprob: -9.501930236816406
    5. 'fin' → logprob: -11.751930236816406
    6. '#' → logprob: -12.126930236816406
    7. '
' → logprob: -12.751930236816406
    8. 'fect' → logprob: -12.876930236816406
    9. 'éf' → logprob: -12.876930236816406
    10. '``' → logprob: -14.126930236816406

Token 956: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.00016396844875998795
    2. '   ' → logprob: -9.500164031982422
    3. 'ines' → logprob: -10.500164031982422
    4. '```' → logprob: -11.000164031982422
    5. 'iné' → logprob: -11.375164031982422
    6. 'mine' → logprob: -12.500164031982422
    7. 'in' → logprob: -12.500164031982422
    8. 'inue' → logprob: -12.500164031982422
    9. 'inez' → logprob: -12.750164031982422
    10. 'rine' → logprob: -12.875164031982422

Token 957: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12062828242778778
    2. 'si' → logprob: -2.2456283569335938
    3. 'def' → logprob: -5.995628356933594
    4. 'whether' → logprob: -6.245628356933594
    5. '   ' → logprob: -6.495628356933594
    6. 's' → logprob: -6.620628356933594
    7. ' if' → logprob: -8.495628356933594
    8. '```' → logprob: -8.870628356933594
    9. ' si' → logprob: -9.370628356933594
    10. 'for' → logprob: -10.370628356933594

Token 958: ' un' (ID: 537)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.0004733294772449881
    2. 'len' → logprob: -7.875473499298096
    3. ' any' → logprob: -9.625473022460938
    4. 'au' → logprob: -12.250473022460938
    5. 'il' → logprob: -12.500473022460938
    6. '   ' → logprob: -12.500473022460938
    7. 'un' → logprob: -12.500473022460938
    8. 'there' → logprob: -13.250473022460938
    9. 'tout' → logprob: -13.500473022460938
    10. '
' → logprob: -13.500473022460938

Token 959: ' groupe' (ID: 29494)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.112818144261837
    2. 'position' → logprob: -3.4878182411193848
    3. ' sommet' → logprob: -3.7378182411193848
    4. 'any' → logprob: -3.9878182411193848
    5. 's' → logprob: -4.862818241119385
    6. 'pos' → logprob: -5.112818241119385
    7. 'm' → logprob: -5.737818241119385
    8. 'g' → logprob: -5.737818241119385
    9. 'token' → logprob: -5.862818241119385
    10. '(s' → logprob: -6.362818241119385

Token 960: ' possède' (ID: 76927)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.21566030383110046
    2. 'a' → logprob: -1.8406603336334229
    3. ' possède' → logprob: -3.965660333633423
    4. '_' → logprob: -4.590660095214844
    5. '_position' → logprob: -6.090660095214844
    6. '_a' → logprob: -7.465660095214844
    7. ' has' → logprob: -7.465660095214844
    8. 'poss' → logprob: -7.715660095214844
    9. ' contient' → logprob: -7.965660095214844
    10. '_positions' → logprob: -8.090660095214844

Token 961: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.19818907976150513
    2. 'un' → logprob: -1.8231890201568604
    3. 'any' → logprob: -4.9481892585754395
    4. 'une' → logprob: -5.3231892585754395
    5. ' au' → logprob: -5.3231892585754395
    6. 'adj' → logprob: -7.1981892585754395
    7. ' un' → logprob: -8.323188781738281
    8. 'quel' → logprob: -9.448188781738281
    9. 'at' → logprob: -9.573188781738281
    10. 'des' → logprob: -9.698188781738281

Token 962: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0005317062605172396
    2. 'mo' → logprob: -8.125532150268555
    3. 'm' → logprob: -9.375532150268555
    4. 'menos' → logprob: -9.625532150268555
    5. ' moins' → logprob: -11.125532150268555
    6. 'minimum' → logprob: -11.250532150268555
    7. '```' → logprob: -11.500532150268555
    8. '   ' → logprob: -11.625532150268555
    9. 'least' → logprob: -11.750532150268555
    10. '#' → logprob: -12.250532150268555

Token 963: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.010918602347373962
    2. 'adj' → logprob: -5.635918617248535
    3. 'moins' → logprob: -6.260918617248535
    4. 'vo' → logprob: -6.385918617248535
    5. '```' → logprob: -6.510918617248535
    6. 'une' → logprob: -7.385918617248535
    7. 'au' → logprob: -7.385918617248535
    8. 'd' → logprob: -8.010918617248535
    9. ''un' → logprob: -8.760918617248535
    10. '   ' → logprob: -9.510918617248535

Token 964: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.46037840843200684
    2. ' sommet' → logprob: -1.4603784084320068
    3. 'vo' → logprob: -2.585378408432007
    4. 'adj' → logprob: -2.960378408432007
    5. ' voisin' → logprob: -5.210378646850586
    6. 's' → logprob: -5.835378646850586
    7. '```' → logprob: -8.585378646850586
    8. 'position' → logprob: -8.960378646850586
    9. 'point' → logprob: -8.960378646850586
    10. '(adj' → logprob: -8.960378646850586

Token 965: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.11958887428045273
    2. ' adjacent' → logprob: -2.244588851928711
    3. '_adj' → logprob: -5.244588851928711
    4. ' adj' → logprob: -7.744588851928711
    5. ' voisin' → logprob: -7.869588851928711
    6. '(adj' → logprob: -7.869588851928711
    7. '_' → logprob: -9.244588851928711
    8. '_ad' → logprob: -10.494588851928711
    9. 'vo' → logprob: -10.619588851928711
    10. 'Adjacent' → logprob: -10.744588851928711

Token 966: ' vide' (ID: 21835)
  Prédit: ' vide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vide' → logprob: -1.0709611177444458
    2. 'vide' → logprob: -1.4459611177444458
    3. ' à' → logprob: -1.6959611177444458
    4. 'adj' → logprob: -1.9459611177444458
    5. 'à' → logprob: -2.8209609985351562
    6. ' adjacent' → logprob: -4.695960998535156
    7. '```' → logprob: -5.320960998535156
    8. '   ' → logprob: -5.445960998535156
    9. ' qui' → logprob: -5.695960998535156
    10. 'empty' → logprob: -6.320960998535156

Token 967: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2140333503484726
    2. 'for' → logprob: -2.089033365249634
    3. ' for' → logprob: -3.589033365249634
    4. ':
' → logprob: -4.214033126831055
    5. '(
' → logprob: -4.464033126831055
    6. 'def' → logprob: -4.714033126831055
    7. '
' → logprob: -6.214033126831055
    8. '(group' → logprob: -6.714033126831055
    9. '(' → logprob: -6.839033126831055
    10. '```' → logprob: -7.089033126831055

Token 968: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05184544622898102
    2. ' )' → logprob: -3.1768455505371094
    3. ')
' → logprob: -5.926845550537109
    4. '):' → logprob: -6.051845550537109
    5. 'def' → logprob: -7.051845550537109
    6. ' )
' → logprob: -7.926845550537109
    7. '   ' → logprob: -8.42684555053711
    8. '):
' → logprob: -8.42684555053711
    9. 'empty' → logprob: -8.42684555053711
    10. 'i' → logprob: -8.67684555053711

Token 969: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07135823369026184
    2. ')
' → logprob: -2.6963582038879395
    3. ' )' → logprob: -7.0713582038879395
    4. ' )
' → logprob: -8.321358680725098
    5. '):
' → logprob: -9.071358680725098
    6. ')
' → logprob: -9.446358680725098
    7. '):' → logprob: -9.821358680725098
    8. ')

' → logprob: -10.946358680725098
    9. '   ' → logprob: -11.071358680725098
    10. ',' → logprob: -11.946358680725098

Token 970: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012403888104017824
    2. ' for' → logprob: -9.625123977661133
    3. ':' → logprob: -10.875123977661133
    4. 'for' → logprob: -11.000123977661133
    5. ':
' → logprob: -11.500123977661133
    6. 'def' → logprob: -12.000123977661133
    7. '```' → logprob: -13.125123977661133
    8. '       ' → logprob: -13.625123977661133
    9. '
' → logprob: -14.625123977661133
    10. '   ' → logprob: -14.875123977661133

Token 971: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47828614711761475
    2. 'for' (adapté à ' for') → logprob: -0.9782861471176147
    3. ' for' → logprob: -5.478286266326904
    4. '	for' → logprob: -10.728285789489746
    5. '```' → logprob: -13.478285789489746
    6. 'def' → logprob: -14.978285789489746
    7. '   ' → logprob: -16.728286743164062
    8. '       ' → logprob: -16.853286743164062
    9. '
' → logprob: -17.228286743164062
    10. '``' → logprob: -17.603286743164062

Token 972: ' (' (ID: 350)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8951895833015442
    2. '(pos' → logprob: -1.3951895236968994
    3. '(i' → logprob: -1.6451895236968994
    4. '(ci' → logprob: -2.1451895236968994
    5. 'i' → logprob: -4.2701897621154785
    6. 'ci' → logprob: -5.0201897621154785
    7. ' (' → logprob: -5.2701897621154785
    8. '(pi' → logprob: -5.6451897621154785
    9. ' pos' → logprob: -6.2701897621154785
    10. 'pi' → logprob: -6.8951897621154785

Token 973: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32806283235549927
    2. 'ci' → logprob: -1.3280627727508545
    3. 'pos' → logprob: -4.328063011169434
    4. 'pi' → logprob: -6.953063011169434
    5. 'x' → logprob: -7.953063011169434
    6. '(ci' → logprob: -9.703063011169434
    7. '(i' → logprob: -10.703063011169434
    8. 'ni' → logprob: -10.828063011169434
    9. 'ii' → logprob: -11.328063011169434
    10. 'node' → logprob: -11.453063011169434

Token 974: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.04863233491778374
    2. ',' → logprob: -3.0486323833465576
    3. ',n' → logprob: -11.048632621765137
    4. ' ,' → logprob: -11.048632621765137
    5. ',i' → logprob: -11.423632621765137
    6. ',k' → logprob: -13.923632621765137
    7. ',user' → logprob: -15.423632621765137
    8. ',w' → logprob: -16.04863166809082
    9. ',
' → logprob: -16.29863166809082
    10. ',int' → logprob: -16.42363166809082

Token 975: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004424667276907712
    2. ' )' → logprob: -8.375442504882812
    3. '),' → logprob: -8.625442504882812
    4. 'in' → logprob: -11.250442504882812
    5. ' in' → logprob: -11.750442504882812
    6. ',' → logprob: -12.250442504882812
    7. '),(' → logprob: -13.125442504882812
    8. '   ' → logprob: -13.500442504882812
    9. ',)' → logprob: -13.750442504882812
    10. ')
' → logprob: -14.750442504882812

Token 976: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3423694372177124
    2. 'in' → logprob: -1.9673694372177124
    3. ',' → logprob: -2.592369556427002
    4. ' in' → logprob: -2.717369556427002
    5. ' )' → logprob: -5.342369556427002
    6. ' ,' → logprob: -6.217369556427002
    7. ',)' → logprob: -7.467369556427002
    8. '   ' → logprob: -7.717369556427002
    9. ',in' → logprob: -7.842369556427002
    10. ',n' → logprob: -8.092369079589844

Token 977: ' group' (ID: 3566)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0012622561771422625
    2. 'group' → logprob: -7.126262187957764
    3. ' neighbors' → logprob: -7.751262187957764
    4. ' group' → logprob: -11.501262664794922
    5. '_neighbors' → logprob: -12.126262664794922
    6. 'groups' → logprob: -12.251262664794922
    7. 'ne' → logprob: -13.126262664794922
    8. '(ne' → logprob: -13.376262664794922
    9. 'neighbor' → logprob: -13.876262664794922
    10. '   ' → logprob: -13.876262664794922

Token 978: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.004549507517367601
    2. 'positions' → logprob: -6.129549503326416
    3. '):
' → logprob: -7.004549503326416
    4. ')' → logprob: -7.379549503326416
    5. 's' → logprob: -8.254549980163574
    6. '   ' → logprob: -8.879549980163574
    7. 'Positions' → logprob: -9.754549980163574
    8. '):' → logprob: -9.879549980163574
    9. '_neighbors' → logprob: -9.879549980163574
    10. '```' → logprob: -10.004549980163574

Token 979: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4160493016242981
    2. ':' → logprob: -1.1660492420196533
    3. '       ' → logprob: -3.7910492420196533
    4. '   ' → logprob: -5.166049480438232
    5. ',' → logprob: -8.541049003601074
    6. '):
' → logprob: -8.666049003601074
    7. ':
' → logprob: -10.791049003601074
    8. '           ' → logprob: -10.916049003601074
    9. ' :
' → logprob: -11.541049003601074
    10. '):' → logprob: -11.916049003601074

Token 980: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00842225644737482
    2. ' for' → logprob: -4.883422374725342
    3. 'for' → logprob: -7.758422374725342
    4. '   ' → logprob: -7.883422374725342
    5. '	for' → logprob: -12.008421897888184
    6. '	   ' → logprob: -13.133421897888184
    7. '           ' → logprob: -13.758421897888184
    8. '	' → logprob: -14.383421897888184
    9. '     ' → logprob: -14.758421897888184
    10. '```' → logprob: -14.758421897888184

Token 981: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0042162323370575905
    2. ' for' → logprob: -5.504216194152832
    3. '           ' → logprob: -9.129216194152832
    4. '       ' → logprob: -10.754216194152832
    5. '	for' → logprob: -11.879216194152832
    6. '   ' → logprob: -14.379216194152832
    7. '```' → logprob: -14.879216194152832
    8. '         ' → logprob: -17.37921714782715
    9. ' ' → logprob: -17.50421714782715
    10. '               ' → logprob: -17.75421714782715

Token 982: ' (' (ID: 350)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.00852167047560215
    2. '(' → logprob: -4.883521556854248
    3. ' ni' → logprob: -7.383521556854248
    4. ' (' → logprob: -8.383522033691406
    5. '(n' → logprob: -9.758522033691406
    6. 'nei' → logprob: -12.758522033691406
    7. 'n' → logprob: -13.758522033691406
    8. '   ' → logprob: -14.383522033691406
    9. 'neighbor' → logprob: -14.883522033691406
    10. 'nii' → logprob: -15.008522033691406

Token 983: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.625003814697266
    3. 'nei' → logprob: -15.750003814697266
    4. '```' → logprob: -16.250003814697266
    5. ' ni' → logprob: -16.625003814697266
    6. '(n' → logprob: -17.000003814697266
    7. 'n' → logprob: -17.000003814697266
    8. '   ' → logprob: -17.125003814697266
    9. 'ii' → logprob: -17.250003814697266
    10. 'nii' → logprob: -17.500003814697266

Token 984: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.2519572377204895
    2. ',' → logprob: -1.5019571781158447
    3. ' ,' → logprob: -10.626956939697266
    4. ',next' → logprob: -13.751956939697266
    5. ',
' → logprob: -14.376956939697266
    6. ',np' → logprob: -14.376956939697266
    7. ',int' → logprob: -14.626956939697266
    8. ',no' → logprob: -15.626956939697266
    9. ',num' → logprob: -15.751956939697266
    10. ',new' → logprob: -15.876956939697266

Token 985: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0012994037242606282
    2. 'nj' → logprob: -7.1262993812561035
    3. ',j' → logprob: -8.626299858093262
    4. 'i' → logprob: -8.876299858093262
    5. ',' → logprob: -9.126299858093262
    6. ',n' → logprob: -9.876299858093262
    7. 'ni' → logprob: -13.126299858093262
    8. '(n' → logprob: -13.126299858093262
    9. '(' → logprob: -13.251299858093262
    10. 'n' → logprob: -13.376299858093262

Token 986: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.372916686814278e-05
    2. ' )' → logprob: -9.8750638961792
    3. 'in' → logprob: -11.5000638961792
    4. '   ' → logprob: -13.8750638961792
    5. ' in' → logprob: -14.2500638961792
    6. '    ' → logprob: -15.5000638961792
    7. ')
' → logprob: -16.250062942504883
    8. '),' → logprob: -16.875062942504883
    9. '       ' → logprob: -17.500062942504883
    10. '	' → logprob: -17.500062942504883

Token 987: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47407862544059753
    2. 'in' → logprob: -0.9740786552429199
    3. '	in' → logprob: -13.724078178405762
    4. '    ' → logprob: -15.474078178405762
    5. '   ' → logprob: -15.599078178405762
    6. ' ' → logprob: -16.474079132080078
    7. ')' → logprob: -17.349079132080078
    8. '        ' → logprob: -17.474079132080078
    9. '       ' → logprob: -17.599079132080078
    10. ',' → logprob: -17.974079132080078

Token 988: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.0001584850688232109
    2. ' neighbors' → logprob: -8.750158309936523
    3. '_neighbors' → logprob: -18.125158309936523
    4. 'ne' → logprob: -18.125158309936523
    5. '(ne' → logprob: -18.750158309936523
    6. 'neighbor' → logprob: -19.000158309936523
    7. '   ' → logprob: -19.750158309936523
    8. '[' → logprob: -21.250158309936523
    9. '```' → logprob: -21.375158309936523
    10. ')' → logprob: -22.375158309936523

Token 989: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.128163257315464e-07
    2. '((' → logprob: -15.875
    3. '[i' → logprob: -16.375
    4. '[
' → logprob: -17.75
    5. '   ' → logprob: -17.875
    6. '[' → logprob: -18.125
    7. '(i' → logprob: -18.625
    8. '[((' → logprob: -18.625
    9. ' [(' → logprob: -18.625
    10. '.get' → logprob: -19.125

Token 990: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7432603272027336e-06
    2. '(i' → logprob: -13.375001907348633
    3. ' i' → logprob: -15.750001907348633
    4. ' (' → logprob: -17.500001907348633
    5. '(' → logprob: -17.750001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '
' → logprob: -18.750001907348633
    8. ')i' → logprob: -18.875001907348633
    9. ')' → logprob: -19.000001907348633
    10. '_i' → logprob: -20.500001907348633

Token 991: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.02515333890914917
    2. 'j' → logprob: -3.775153398513794
    3. ',' → logprob: -6.275153160095215
    4. ',i' → logprob: -11.275153160095215
    5. 'i' → logprob: -12.775153160095215
    6. ' ,' → logprob: -12.900153160095215
    7. ',n' → logprob: -13.025153160095215
    8. ' j' → logprob: -14.025153160095215
    9. '[j' → logprob: -14.150153160095215
    10. ')' → logprob: -15.275153160095215

Token 992: ')]' (ID: 15710)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.20425717532634735
    2. ']:
' → logprob: -1.8292571306228638
    3. ']' → logprob: -4.579257011413574
    4. ')]' → logprob: -5.329257011413574
    5. '):' → logprob: -5.454257011413574
    6. ']):' → logprob: -6.329257011413574
    7. '):
' → logprob: -6.704257011413574
    8. ']:
' → logprob: -7.579257011413574
    9. '       ' → logprob: -8.079257011413574
    10. ')' → logprob: -8.079257011413574

Token 993: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02665357105433941
    2. ':' → logprob: -4.02665376663208
    3. ':
' → logprob: -4.90165376663208
    4. '          ' → logprob: -8.401653289794922
    5. '<|end|>' → logprob: -8.526653289794922
    6. '       ' → logprob: -9.276653289794922
    7. '	       ' → logprob: -9.526653289794922
    8. '               ' → logprob: -9.776653289794922
    9. '<|end|>' → logprob: -9.776653289794922
    10. '		' → logprob: -9.901653289794922

Token 994: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.895480277715251e-06
    2. ' if' → logprob: -12.625008583068848
    3. 'if' → logprob: -13.250008583068848
    4. '                           ' → logprob: -13.375008583068848
    5. '```' → logprob: -14.375008583068848
    6. '               ' → logprob: -14.500008583068848
    7. '         ' → logprob: -15.000008583068848
    8. '       ' → logprob: -15.250008583068848
    9. '   ' → logprob: -15.500008583068848
    10. '                   ' → logprob: -16.500009536743164

Token 995: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0016706573078408837
    2. ' if' → logprob: -6.751670837402344
    3. '               ' → logprob: -8.126670837402344
    4. '           ' → logprob: -8.501670837402344
    5. '```' → logprob: -13.876670837402344
    6. ' ' → logprob: -15.751670837402344
    7. '   ' → logprob: -16.126670837402344
    8. '	if' → logprob: -16.126670837402344
    9. ' ' → logprob: -16.251670837402344
    10. '#' → logprob: -16.626670837402344

Token 996: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07362842559814453
    2. 'board' → logprob: -3.4486284255981445
    3. ' ' → logprob: -3.5736284255981445
    4. 'ni' → logprob: -4.8236284255981445
    5. ' board' → logprob: -5.9486284255981445
    6. ' ni' → logprob: -8.823628425598145
    7. '   ' → logprob: -9.323628425598145
    8. '	board' → logprob: -9.886128425598145
    9. '(board' → logprob: -10.823628425598145
    10. '(' → logprob: -11.011128425598145

Token 997: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045946359634399414
    2. 'ni' → logprob: -3.4209463596343994
    3. 'board' → logprob: -4.42094612121582
    4. ' ' → logprob: -9.04594612121582
    5. ' board' → logprob: -11.48344612121582
    6. 'NI' → logprob: -11.98344612121582
    7. ' ni' → logprob: -11.98344612121582
    8. '	board' → logprob: -12.23344612121582
    9. '   ' → logprob: -12.29594612121582
    10. 'i' → logprob: -12.67094612121582

Token 998: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8807826638221741
    2. '[i' → logprob: -1.5057826042175293
    3. '[' → logprob: -2.0057826042175293
    4. '<' → logprob: -2.7557826042175293
    5. ' ==' → logprob: -3.1307826042175293
    6. '<n' → logprob: -3.5057826042175293
    7. '][' → logprob: -4.380782604217529
    8. ' ni' → logprob: -4.505782604217529
    9. 'ni' → logprob: -4.755782604217529
    10. ' >=' → logprob: -4.880782604217529

Token 999: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.00012368128227535635
    2. ' ni' → logprob: -9.000123977661133
    3. 'n' → logprob: -16.500123977661133
    4. 'nii' → logprob: -17.250123977661133
    5. '   ' → logprob: -17.375123977661133
    6. '-ni' → logprob: -17.750123977661133
    7. 'nj' → logprob: -18.375123977661133
    8. 'ny' → logprob: -18.375123977661133
    9. 'Ni' → logprob: -18.500123977661133
    10. '  ' → logprob: -18.500123977661133

Token 1000: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5143463015556335
    2. ' <' → logprob: -1.0143463611602783
    3. '<N' → logprob: -3.7643463611602783
    4. '<n' → logprob: -4.139346122741699
    5. '<i' → logprob: -8.8893461227417
    6. '<int' → logprob: -9.8893461227417
    7. 'and' → logprob: -10.0143461227417
    8. '<len' → logprob: -10.6393461227417
    9. ' ni' → logprob: -11.1393461227417
    10. '<size' → logprob: -11.1393461227417

Token 1001: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005589702632278204
    2. 'N' → logprob: -5.505589485168457
    3. ' len' → logprob: -6.505589485168457
    4. '(len' → logprob: -11.630589485168457
    5. ' N' → logprob: -12.880589485168457
    6. 'n' → logprob: -13.880589485168457
    7. '   ' → logprob: -14.880589485168457
    8. '=len' → logprob: -15.130589485168457
    9. '
' → logprob: -15.255589485168457
    10. '[len' → logprob: -15.380589485168457

Token 1002: '(board' (ID: 41261)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.1602560132741928
    2. '(board' → logprob: -1.910256028175354
    3. ' board' → logprob: -10.410256385803223
    4. '	board' → logprob: -13.910256385803223
    5. '(' → logprob: -14.285256385803223
    6. '_board' → logprob: -16.535255432128906
    7. '.board' → logprob: -17.035255432128906
    8. '
' → logprob: -17.285255432128906
    9. 'boards' → logprob: -18.160255432128906
    10. '(
' → logprob: -18.160255432128906

Token 1003: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037490393151529133
    2. 'and' → logprob: -8.000374794006348
    3. ' and' → logprob: -10.250374794006348
    4. ' )' → logprob: -13.750374794006348
    5. '           ' → logprob: -14.125374794006348
    6. '   ' → logprob: -14.625374794006348
    7. ')
' → logprob: -14.625374794006348
    8. '):
' → logprob: -15.000374794006348
    9. '[' → logprob: -15.625374794006348
    10. ']' → logprob: -15.750374794006348

Token 1004: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.31327295303344727
    2. ' and' → logprob: -1.3132729530334473
    3. '           ' → logprob: -11.688272476196289
    4. '               ' → logprob: -14.563272476196289
    5. '       ' → logprob: -14.688272476196289
    6. '          ' → logprob: -14.688272476196289
    7. '	and' → logprob: -14.813272476196289
    8. '[' → logprob: -15.063272476196289
    9. '```' → logprob: -15.563272476196289
    10. '   ' → logprob: -15.563272476196289

Token 1005: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002481008181348443
    2. ' ' → logprob: -6.002480983734131
    3. 'nj' → logprob: -13.127481460571289
    4. ' nj' → logprob: -14.002481460571289
    5. '   ' → logprob: -15.002481460571289
    6. 'board' → logprob: -15.002481460571289
    7. ' ' → logprob: -15.502481460571289
    8. '    ' → logprob: -15.752481460571289
    9. '  ' → logprob: -15.752481460571289
    10. '            ' → logprob: -15.877481460571289

Token 1006: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011755822924897075
    2. 'nj' → logprob: -6.751175403594971
    3. ' ' → logprob: -12.626175880432129
    4. ' nj' → logprob: -14.376175880432129
    5. 'ni' → logprob: -15.001175880432129
    6. 'nk' → logprob: -15.376175880432129
    7. 'n' → logprob: -15.626175880432129
    8. '   ' → logprob: -16.001174926757812
    9. 'nij' → logprob: -16.126174926757812
    10. 'len' → logprob: -17.001174926757812

Token 1007: ' <=' (ID: 5017)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.43340885639190674
    2. '[j' → logprob: -1.6834088563919067
    3. '<n' → logprob: -2.683408737182617
    4. 'nj' → logprob: -3.308408737182617
    5. '[' → logprob: -3.683408737182617
    6. '<' → logprob: -4.683408737182617
    7. '<len' → logprob: -5.058408737182617
    8. '[(' → logprob: -5.183408737182617
    9. 'len' → logprob: -6.058408737182617
    10. ' <' → logprob: -6.183408737182617

Token 1008: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.0009435036336071789
    2. ' nj' → logprob: -7.125943660736084
    3. 'len' → logprob: -9.125943183898926
    4. 'n' → logprob: -10.625943183898926
    5. 'nk' → logprob: -13.125943183898926
    6. '0' → logprob: -13.750943183898926
    7. 'nv' → logprob: -14.750943183898926
    8. '   ' → logprob: -14.750943183898926
    9. '(n' → logprob: -15.000943183898926
    10. 'ni' → logprob: -15.500943183898926

Token 1009: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.27970007061958313
    2. '<' → logprob: -1.5297000408172607
    3. '<len' → logprob: -4.40470027923584
    4. ' <=' → logprob: -4.52970027923584
    5. ' <' → logprob: -5.52970027923584
    6. '<n' → logprob: -7.90470027923584
    7. 'len' → logprob: -10.15470027923584
    8. '<i' → logprob: -13.27970027923584
    9. '<size' → logprob: -13.52970027923584
    10. '<N' → logprob: -13.90470027923584

Token 1010: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -5.2762428822461516e-05
    2. ' ni' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.625052452087402
    4. '
' → logprob: -15.500052452087402
    5. 'n' → logprob: -16.00005340576172
    6. 'len' → logprob: -16.37505340576172
    7. '-ni' → logprob: -16.75005340576172
    8. 'Ni' → logprob: -17.00005340576172
    9. 'nii' → logprob: -17.12505340576172
    10. '(' → logprob: -17.12505340576172

Token 1011: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.453866571187973
    2. 'and' → logprob: -1.0788666009902954
    3. '               ' → logprob: -3.953866481781006
    4. ':
' → logprob: -5.328866481781006
    5. '           ' → logprob: -7.328866481781006
    6. ':' → logprob: -9.203866958618164
    7. '              ' → logprob: -11.078866958618164
    8. '                   ' → logprob: -11.578866958618164
    9. '	and' → logprob: -11.703866958618164
    10. '<|end|>' → logprob: -11.953866958618164

Token 1012: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037020931486040354
    2. ' and' → logprob: -5.628702163696289
    3. 'and' → logprob: -9.378702163696289
    4. '           ' → logprob: -12.003702163696289
    5. '                   ' → logprob: -13.003702163696289
    6. '              ' → logprob: -13.253702163696289
    7. ':
' → logprob: -13.753702163696289
    8. '```' → logprob: -13.753702163696289
    9. ' ' → logprob: -14.128702163696289
    10. '                
' → logprob: -14.128702163696289

Token 1013: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03806077316403389
    2. 'board' → logprob: -3.2880606651306152
    3. ' if' → logprob: -11.663061141967773
    4. '               ' → logprob: -11.788061141967773
    5. '                   ' → logprob: -12.913061141967773
    6. ' board' → logprob: -14.788061141967773
    7. '(board' → logprob: -15.913061141967773
    8. '           ' → logprob: -16.413061141967773
    9. '	board' → logprob: -18.163061141967773
    10. '```' → logprob: -18.163061141967773

Token 1014: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.004078401252627373
    2. ' board' → logprob: -5.504078388214111
    3. '	board' → logprob: -17.004077911376953
    4. '(board' → logprob: -18.629077911376953
    5. '   ' → logprob: -20.004077911376953
    6. 'bord' → logprob: -20.129077911376953
    7. '.board' → logprob: -20.379077911376953
    8. '           ' → logprob: -20.754077911376953
    9. '               ' → logprob: -20.879077911376953
    10. 'boards' → logprob: -21.129077911376953

Token 1015: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00862876046448946
    2. '[i' → logprob: -4.758628845214844
    3. ' [' → logprob: -11.633628845214844
    4. '   ' → logprob: -13.758628845214844
    5. '[(' → logprob: -13.883628845214844
    6. '[n' → logprob: -14.758628845214844
    7. '```' → logprob: -14.758628845214844
    8. '[ii' → logprob: -14.883628845214844
    9. '[int' → logprob: -15.383628845214844
    10. 'i' → logprob: -15.383628845214844

Token 1016: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -8.709308167453855e-05
    2. '[' → logprob: -9.375086784362793
    3. ' ni' → logprob: -14.000086784362793
    4. '
' → logprob: -14.625086784362793
    5. '   ' → logprob: -15.375086784362793
    6. 'i' → logprob: -15.875086784362793
    7. '```' → logprob: -16.12508773803711
    8. 'n' → logprob: -16.25008773803711
    9. '(' → logprob: -16.62508773803711
    10. '-ni' → logprob: -17.00008773803711

Token 1017: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14292462170124054
    2. '][' → logprob: -2.0179245471954346
    3. '[n' → logprob: -8.517924308776855
    4. ']' → logprob: -11.392924308776855
    5. '[(' → logprob: -11.642924308776855
    6. '   ' → logprob: -12.017924308776855
    7. '[i' → logprob: -12.767924308776855
    8. ')[' → logprob: -12.892924308776855
    9. '}[' → logprob: -13.142924308776855
    10. '(' → logprob: -13.392924308776855

Token 1018: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -8.180258191714529e-06
    2. '[n' → logprob: -12.375008583068848
    3. 'n' → logprob: -13.250008583068848
    4. ' nj' → logprob: -13.875008583068848
    5. '0' → logprob: -15.000008583068848
    6. '(n' → logprob: -15.375008583068848
    7. 'npj' → logprob: -15.500008583068848
    8. 'nji' → logprob: -15.750008583068848
    9. '
' → logprob: -15.875008583068848
    10. 'j' → logprob: -17.00000762939453

Token 1019: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5226390361785889
    2. ']==' → logprob: -1.1476390361785889
    3. '==' → logprob: -2.772639036178589
    4. ' ==' → logprob: -3.647639036178589
    5. ')==' → logprob: -7.647639274597168
    6. ')' → logprob: -8.022639274597168
    7. '[' → logprob: -8.897639274597168
    8. ' ]' → logprob: -9.522639274597168
    9. '']==' → logprob: -10.647639274597168
    10. '               ' → logprob: -10.772639274597168

Token 1020: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759517550468445
    2. ' ==' → logprob: -0.8259517550468445
    3. ']==' → logprob: -12.07595157623291
    4. '[' → logprob: -12.70095157623291
    5. ')==' → logprob: -13.82595157623291
    6. '=' → logprob: -13.95095157623291
    7. '()==' → logprob: -14.57595157623291
    8. ' ' → logprob: -15.07595157623291
    9. '===' → logprob: -15.07595157623291
    10. '==
' → logprob: -15.20095157623291

Token 1021: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.875335693359375
    4. ' ' → logprob: -21.625335693359375
    5. '۰' → logprob: -22.125335693359375
    6. '  ' → logprob: -22.625335693359375
    7. '00' → logprob: -23.125335693359375
    8. '               ' → logprob: -23.875335693359375
    9. '                   ' → logprob: -23.875335693359375
    10. '    ' → logprob: -23.875335693359375

Token 1022: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -21.375
    4. '۰' → logprob: -22.625
    5. '00' → logprob: -24.0
    6. '
' → logprob: -24.25
    7. '```' → logprob: -24.375
    8. '  ' → logprob: -24.625
    9. '０' → logprob: -24.625
    10. '000' → logprob: -24.875

Token 1023: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9396231174468994
    2. ':' → logprob: -1.0646231174468994
    3. ':
' → logprob: -1.4396231174468994
    4. ':return' → logprob: -3.9396231174468994
    5. '                       ' → logprob: -5.31462287902832
    6. '               ' → logprob: -6.31462287902832
    7. '                  ' → logprob: -8.06462287902832
    8. '                           ' → logprob: -8.93962287902832
    9. ' or' → logprob: -9.31462287902832
    10. '                    ' → logprob: -9.43962287902832

Token 1024: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -2.6656825866666622e-05
    2. '                       ' → logprob: -11.50002670288086
    3. '                  ' → logprob: -12.00002670288086
    4. ' return' → logprob: -12.37502670288086
    5. 'return' → logprob: -12.87502670288086
    6. '                    ' → logprob: -13.62502670288086
    7. '                 ' → logprob: -14.62502670288086
    8. '               ' → logprob: -14.75002670288086
    9. '                    
' → logprob: -15.00002670288086
    10. ':
' → logprob: -15.12502670288086

Token 1025: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009722442366182804
    2. ' return' → logprob: -4.7597222328186035
    3. '                       ' → logprob: -7.0097222328186035
    4. '                   ' → logprob: -8.509722709655762
    5. '	return' → logprob: -13.509722709655762
    6. ':return' → logprob: -14.009722709655762
    7. '               ' → logprob: -15.009722709655762
    8. '                               ' → logprob: -16.759721755981445
    9. '       ' → logprob: -16.759721755981445
    10. '```' → logprob: -17.134721755981445

Token 1026: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00020354038861114532
    2. ' True' → logprob: -8.500203132629395
    3. '(True' → logprob: -21.62520408630371
    4. '   ' → logprob: -22.25020408630371
    5. '=True' → logprob: -22.50020408630371
    6. 'true' → logprob: -22.75020408630371
    7. 'False' → logprob: -23.12520408630371
    8. '
' → logprob: -25.25020408630371
    9. 'TRUE' → logprob: -25.37520408630371
    10. '1' → logprob: -25.75020408630371

Token 1027: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22924615442752838
    2. '               ' → logprob: -2.104246139526367
    3. '           ' → logprob: -3.729246139526367
    4. '    
' → logprob: -4.104246139526367
    5. '       ' → logprob: -4.729246139526367
    6. '                   ' → logprob: -5.479246139526367
    7. '<|end|>' → logprob: -5.479246139526367
    8. '                
' → logprob: -5.729246139526367
    9. '                    
' → logprob: -5.729246139526367
    10. '    ' → logprob: -5.854246139526367

Token 1028: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004234051739331335
    2. '               ' → logprob: -8.250423431396484
    3. 'return' → logprob: -10.000423431396484
    4. '    
' → logprob: -10.625423431396484
    5. '                   ' → logprob: -11.000423431396484
    6. '           ' → logprob: -11.000423431396484
    7. '       ' → logprob: -11.125423431396484
    8. ' return' → logprob: -11.250423431396484
    9. '
' → logprob: -11.625423431396484
    10. '                    
' → logprob: -12.000423431396484

Token 1029: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011570692993700504
    2. 'return' (adapté à ' return') → logprob: -5.261570930480957
    3. '               ' → logprob: -5.886570930480957
    4. '                   ' → logprob: -6.511570930480957
    5. '           ' → logprob: -7.261570930480957
    6. '
' → logprob: -7.761570930480957
    7. '       ' → logprob: -8.261570930480957
    8. ' return' → logprob: -8.511570930480957
    9. '```' → logprob: -8.511570930480957
    10. ' ' → logprob: -9.011570930480957

Token 1030: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.547789674485102e-05
    2. ' False' → logprob: -10.250035285949707
    3. 'True' → logprob: -21.000036239624023
    4. '(False' → logprob: -21.250036239624023
    5. 'false' → logprob: -23.000036239624023
    6. '_false' → logprob: -25.500036239624023
    7. '=False' → logprob: -26.375036239624023
    8. '   ' → logprob: -26.625036239624023
    9. '.False' → logprob: -27.125036239624023
    10. 'FALSE' → logprob: -27.250036239624023

Token 1031: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00027575582498684525
    2. '
' → logprob: -8.250275611877441
    3. '<|end|>' → logprob: -11.625275611877441
    4. '```' → logprob: -12.750275611877441
    5. '  
' → logprob: -14.125275611877441
    6. '

' → logprob: -14.250275611877441
    7. '    
' → logprob: -14.750275611877441
    8. ')' → logprob: -15.750275611877441
    9. ' def' → logprob: -16.000276565551758
    10. '#' → logprob: -16.250276565551758

Token 1032: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019336353288963437
    2. '
' → logprob: -6.251933574676514
    3. '

' → logprob: -13.001934051513672
    4. '```' → logprob: -13.251934051513672
    5. ' def' → logprob: -15.251934051513672
    6. '\' → logprob: -15.751934051513672
    7. '  
' → logprob: -15.751934051513672
    8. '#' → logprob: -16.376934051513672
    9. '<|end|>' → logprob: -16.376934051513672
    10. ':def' → logprob: -16.376934051513672

Token 1033: ' simulate' (ID: 66687)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -0.08040278404951096
    2. 'compute' → logprob: -2.8304028511047363
    3. 'calculate' → logprob: -4.330402851104736
    4. 'score' → logprob: -6.705402851104736
    5. 'apply' → logprob: -6.705402851104736
    6. 'evaluate' → logprob: -6.955402851104736
    7. 'copy' → logprob: -7.705402851104736
    8. 'play' → logprob: -7.830402851104736
    9. 'remove' → logprob: -8.330402374267578
    10. 'best' → logprob: -8.580402374267578

Token 1034: '_turn' (ID: 89223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2720191478729248
    2. '_place' → logprob: -2.272019147872925
    3. '_move' → logprob: -2.522019147872925
    4. '(' → logprob: -3.022019147872925
    5. '_position' → logprob: -6.397019386291504
    6. '_step' → logprob: -6.772019386291504
    7. '(_' → logprob: -7.647019386291504
    8. '_p' → logprob: -7.772019386291504
    9. '_put' → logprob: -7.897019386291504
    10. 'placement' → logprob: -8.147019386291504

Token 1035: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.00563616631552577
    2. '(' → logprob: -5.255636215209961
    3. '(N' → logprob: -8.005636215209961
    4. '(Board' → logprob: -10.255636215209961
    5. '(player' → logprob: -11.005636215209961
    6. ' (' → logprob: -11.380636215209961
    7. '(parent' → logprob: -13.505636215209961
    8. '(
' → logprob: -14.005636215209961
    9. '(def' → logprob: -14.505636215209961
    10. '(n' → logprob: -14.880636215209961

Token 1036: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012213163427077234
    2. ' ,' → logprob: -9.2501220703125
    3. '   ' → logprob: -11.2501220703125
    4. ',i' → logprob: -12.3751220703125
    5. ',
' → logprob: -12.8751220703125
    6. '):' → logprob: -13.2501220703125
    7. ',N' → logprob: -14.0001220703125
    8. ',b' → logprob: -14.0001220703125
    9. ',n' → logprob: -14.5001220703125
    10. '):
' → logprob: -14.6251220703125

Token 1037: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.3048134744167328
    2. 'N' → logprob: -1.8048135042190552
    3. 'player' → logprob: -3.1798133850097656
    4. 'C' → logprob: -3.3048133850097656
    5. 'stone' → logprob: -5.429813385009766
    6. ' neighbors' → logprob: -5.554813385009766
    7. ' N' → logprob: -6.179813385009766
    8. 'players' → logprob: -6.179813385009766
    9. 'placement' → logprob: -6.679813385009766
    10. 'move' → logprob: -6.804813385009766

Token 1038: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.248469718324486e-05
    2. '   ' → logprob: -11.000022888183594
    3. ' ,' → logprob: -12.375022888183594
    4. '(board' → logprob: -15.125022888183594
    5. ',i' → logprob: -15.250022888183594
    6. ',
' → logprob: -15.250022888183594
    7. '):' → logprob: -15.625022888183594
    8. ',b' → logprob: -15.750022888183594
    9. 'def' → logprob: -16.000022888183594
    10. ',n' → logprob: -17.125022888183594

Token 1039: ' player' (ID: 5033)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.010977666825056076
    2. 'C' → logprob: -5.385977745056152
    3. 'current' → logprob: -5.885977745056152
    4. ' player' → logprob: -6.510977745056152
    5. 'stone' → logprob: -7.635977745056152
    6. 'pos' → logprob: -8.010977745056152
    7. 'N' → logprob: -8.010977745056152
    8. 'placement' → logprob: -8.135977745056152
    9. 'c' → logprob: -8.260977745056152
    10. 'move' → logprob: -9.635977745056152

Token 1040: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.32869085669517517
    2. ',' → logprob: -1.3286908864974976
    3. '):
' → logprob: -4.328691005706787
    4. '_code' → logprob: -7.203691005706787
    5. '_color' → logprob: -7.828691005706787
    6. '_position' → logprob: -8.828690528869629
    7. '_positions' → logprob: -9.078690528869629
    8. '_pos' → logprob: -9.453690528869629
    9. 'C' → logprob: -9.453690528869629
    10. ' ,' → logprob: -9.703690528869629

Token 1041: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017594329547137022
    2. '    
' → logprob: -7.1267595291137695
    3. 'def' → logprob: -7.8767595291137695
    4. '
' → logprob: -8.50175952911377
    5. ' 
' → logprob: -9.25175952911377
    6. '```' → logprob: -9.25175952911377
    7. ':' → logprob: -10.00175952911377
    8. '   
' → logprob: -11.12675952911377
    9. '    ' → logprob: -11.37675952911377
    10. '  
' → logprob: -11.62675952911377

Token 1042: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004021645523607731
    2. '   ' → logprob: -5.754021644592285
    3. 'best' → logprob: -7.129021644592285
    4. 'max' → logprob: -10.379021644592285
    5. 'import' → logprob: -11.879021644592285
    6. ' N' → logprob: -12.879021644592285
    7. 'def' → logprob: -13.879021644592285
    8. 'score' → logprob: -15.504021644592285
    9. 'result' → logprob: -16.3790225982666
    10. ' best' → logprob: -16.5040225982666

Token 1043: ' Pour' (ID: 13931)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.025210995227098465
    2. 'best' → logprob: -3.7752110958099365
    3. 'max' → logprob: -6.525210857391357
    4. 'import' → logprob: -8.150211334228516
    5. 'def' → logprob: -9.025211334228516
    6. '   ' → logprob: -9.775211334228516
    7. ' N' → logprob: -11.525211334228516
    8. 'score' → logprob: -11.775211334228516
    9. 'result' → logprob: -12.900211334228516
    10. 'possible' → logprob: -13.525211334228516

Token 1044: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005041740834712982
    2. ' i' → logprob: -5.755041599273682
    3. ' chaque' → logprob: -7.130041599273682
    4. 'each' → logprob: -7.130041599273682
    5. '_i' → logprob: -9.88004207611084
    6. '_' → logprob: -10.13004207611084
    7. 'N' → logprob: -10.25504207611084
    8. 'ch' → logprob: -10.63004207611084
    9. ' each' → logprob: -10.88004207611084
    10. 'line' → logprob: -11.13004207611084

Token 1045: ' sommet' (ID: 130502)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5217151045799255
    2. 'i' → logprob: -1.7717151641845703
    3. ' i' → logprob: -2.0217151641845703
    4. '(i' → logprob: -3.0217151641845703
    5. ' position' → logprob: -3.8967151641845703
    6. 'position' → logprob: -4.14671516418457
    7. '(' → logprob: -4.27171516418457
    8. ' ' → logprob: -6.64671516418457
    9. 'pos' → logprob: -6.77171516418457
    10. '_' → logprob: -7.64671516418457

Token 1046: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.1496976763010025
    2. '(i' → logprob: -2.149697780609131
    3. ' vide' → logprob: -4.399697780609131
    4. ' (' → logprob: -5.274697780609131
    5. '(' → logprob: -5.649697780609131
    6. 'possible' → logprob: -8.024697303771973
    7. ' vacant' → logprob: -8.899697303771973
    8. '```' → logprob: -8.899697303771973
    9. 'vid' → logprob: -9.274697303771973
    10. ' possible' → logprob: -9.399697303771973

Token 1047: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004200324881821871
    2. ' (' → logprob: -6.004200458526611
    3. ',' → logprob: -6.629200458526611
    4. '(board' → logprob: -8.879199981689453
    5. '(' → logprob: -9.879199981689453
    6. '
' → logprob: -10.004199981689453
    7. ',
' → logprob: -10.254199981689453
    8. '[i' → logprob: -10.504199981689453
    9. ',i' → logprob: -10.629199981689453
    10. '   ' → logprob: -11.254199981689453

Token 1048: ' sim' (ID: 1845)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0006786584854126
    2. ' for' → logprob: -1.5006786584854126
    3. ' on' → logprob: -2.125678539276123
    4. 'simulate' → logprob: -3.000678539276123
    5. 'try' → logprob: -3.375678539276123
    6. '   ' → logprob: -3.500678539276123
    7. 'placer' → logprob: -3.500678539276123
    8. ' essayer' → logprob: -3.500678539276123
    9. 'on' → logprob: -4.000678539276123
    10. 'tester' → logprob: -4.750678539276123

Token 1049: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.2213500291109085
    2. 'uler' → logprob: -1.971350073814392
    3. 'ulate' → logprob: -3.4713499546051025
    4. 'ple' → logprob: -4.346350193023682
    5. 'ulte' → logprob: -6.096350193023682
    6. 'ul' → logprob: -6.471350193023682
    7. 'plement' → logprob: -6.721350193023682
    8. 'u' → logprob: -6.721350193023682
    9. 'pler' → logprob: -6.846350193023682
    10. 'plete' → logprob: -6.971350193023682

Token 1050: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.45337316393852234
    2. ' placing' → logprob: -1.8283731937408447
    3. ' le' → logprob: -2.0783731937408447
    4. ' placer' → logprob: -3.4533731937408447
    5. ' la' → logprob: -4.703372955322266
    6. ' de' → logprob: -5.078372955322266
    7. 'placer' → logprob: -5.578372955322266
    8. '   ' → logprob: -5.703372955322266
    9. ' (' → logprob: -5.703372955322266
    10. 'placing' → logprob: -5.703372955322266

Token 1051: ' pose' (ID: 17557)
  Prédit: 'pose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pose' → logprob: -0.19197919964790344
    2. 'placement' → logprob: -2.316979169845581
    3. ' pose' → logprob: -3.066979169845581
    4. 'pos' → logprob: -4.56697940826416
    5. ' placement' → logprob: -4.69197940826416
    6. 'position' → logprob: -5.44197940826416
    7. 'poser' → logprob: -6.81697940826416
    8. 'mise' → logprob: -7.06697940826416
    9. 'place' → logprob: -7.19197940826416
    10. 'poss' → logprob: -7.56697940826416

Token 1052: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012231895700097084
    2. ' d' → logprob: -4.762231826782227
    3. '   ' → logprob: -5.887231826782227
    4. 'du' → logprob: -7.387231826782227
    5. '(d' → logprob: -9.512231826782227
    6. '(board' → logprob: -10.387231826782227
    7. ' ' → logprob: -10.512231826782227
    8. ' (' → logprob: -11.012231826782227
    9. 'de' → logprob: -11.137231826782227
    10. '(
' → logprob: -11.387231826782227

Token 1053: ' la' (ID: 557)
  Prédit: ' player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.5446873307228088
    2. ' (' → logprob: -1.419687271118164
    3. 'player' → logprob: -2.294687271118164
    4. '(' → logprob: -3.044687271118164
    5. ' ' → logprob: -5.044687271118164
    6. ' joueur' → logprob: -5.044687271118164
    7. '(player' → logprob: -5.044687271118164
    8. '1' → logprob: -5.544687271118164
    9. ' stone' → logprob: -6.169687271118164
    10. ' pierre' → logprob: -6.169687271118164

Token 1054: ' pierre' (ID: 70323)
  Prédit: ' pierre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pierre' → logprob: -0.017125459387898445
    2. 'p' → logprob: -4.392125606536865
    3. 'pier' → logprob: -6.517125606536865
    4. ' ' → logprob: -7.017125606536865
    5. ' stone' → logprob: -7.767125606536865
    6. 'pi' → logprob: -7.892125606536865
    7. 'stone' → logprob: -8.017125129699707
    8. ' pion' → logprob: -8.517125129699707
    9. ' piet' → logprob: -9.642125129699707
    10. ' Pierre' → logprob: -9.642125129699707

Token 1055: ' du' (ID: 1462)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -1.1591404676437378
    2. ' (' → logprob: -1.5341404676437378
    3. '   ' → logprob: -1.9091404676437378
    4. ',' → logprob: -1.9091404676437378
    5. '(
' → logprob: -2.9091405868530273
    6. '(i' → logprob: -3.2841405868530273
    7. ' sur' → logprob: -3.9091405868530273
    8. '(board' → logprob: -4.159140586853027
    9. '(' → logprob: -4.534140586853027
    10. '(pos' → logprob: -5.784140586853027

Token 1056: ' joueur' (ID: 72629)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.07344578206539154
    2. ' player' → logprob: -2.9484457969665527
    3. 'jou' → logprob: -4.573445796966553
    4. ' joueur' → logprob: -4.823445796966553
    5. 'c' → logprob: -12.073445320129395
    6. 'play' → logprob: -12.323445320129395
    7. ' ' → logprob: -12.323445320129395
    8. '   ' → logprob: -13.073445320129395
    9. '(player' → logprob: -13.198445320129395
    10. '	player' → logprob: -13.198445320129395

Token 1057: ',' (ID: 11)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.9812152981758118
    2. ',' → logprob: -1.231215238571167
    3. ' (' → logprob: -2.106215238571167
    4. '(i' → logprob: -2.981215238571167
    5. '   ' → logprob: -3.106215238571167
    6. ' sur' → logprob: -4.356215476989746
    7. 'en' → logprob: -4.356215476989746
    8. '(board' → logprob: -4.481215476989746
    9. '(player' → logprob: -4.981215476989746
    10. '(' → logprob: -4.981215476989746

Token 1058: ' calc' (ID: 25691)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42300334572792053
    2. '   ' → logprob: -1.1730033159255981
    3. 'calcul' → logprob: -4.798003196716309
    4. ' #' → logprob: -5.048003196716309
    5. 'calculate' → logprob: -5.048003196716309
    6. ' calculates' → logprob: -5.548003196716309
    7. 'score' → logprob: -5.673003196716309
    8. 'for' → logprob: -6.298003196716309
    9. 'max' → logprob: -7.423003196716309
    10. '
' → logprob: -7.923003196716309

Token 1059: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.5775079727172852
    2. 'cule' → logprob: -0.8275079727172852
    3. 'ul' → logprob: -6.702507972717285
    4. '```' → logprob: -8.952507972717285
    5. 'cul' → logprob: -9.327507972717285
    6. 'ulé' → logprob: -9.327507972717285
    7. 'ulate' → logprob: -11.952507972717285
    8. 'cules' → logprob: -12.577507972717285
    9. 'u' → logprob: -12.702507972717285
    10. 'culate' → logprob: -13.077507972717285

Token 1060: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3945663869380951
    2. 'le' → logprob: -1.1445664167404175
    3. '_le' → logprob: -5.894566535949707
    4. ' l' → logprob: -6.144566535949707
    5. 'l' → logprob: -6.894566535949707
    6. '_' → logprob: -7.394566535949707
    7. ' la' → logprob: -8.269566535949707
    8. 's' → logprob: -8.769566535949707
    9. ' ' → logprob: -9.269566535949707
    10. 'the' → logprob: -9.519566535949707

Token 1061: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0007954508764669299
    2. 'me' → logprob: -7.375795364379883
    3. ' score' → logprob: -9.375795364379883
    4. 'max' → logprob: -9.625795364379883
    5. 'best' → logprob: -11.375795364379883
    6. 'maximum' → logprob: -12.875795364379883
    7. 'next' → logprob: -13.375795364379883
    8. ' meilleur' → logprob: -13.625795364379883
    9. 'gain' → logprob: -14.250795364379883
    10. '_score' → logprob: -15.750795364379883

Token 1062: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2914066016674042
    2. ',' → logprob: -2.6664066314697266
    3. ' (' → logprob: -2.7914066314697266
    4. ' et' → logprob: -3.2914066314697266
    5. '
' → logprob: -3.5414066314697266
    6. '(' → logprob: -4.166406631469727
    7. '(
' → logprob: -5.166406631469727
    8. ':' → logprob: -5.541406631469727
    9. ',
' → logprob: -5.541406631469727
    10. '(board' → logprob: -5.666406631469727

Token 1063: ' ren' (ID: 5427)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2666376531124115
    2. '   ' → logprob: -2.0166375637054443
    3. 'best' → logprob: -3.1416375637054443
    4. ' #' → logprob: -4.016637802124023
    5. 'et' → logprob: -4.266637802124023
    6. 'cho' → logprob: -5.141637802124023
    7. 'max' → logprob: -5.266637802124023
    8. ' et' → logprob: -5.516637802124023
    9. ' best' → logprob: -6.016637802124023
    10. 'me' → logprob: -6.266637802124023

Token 1064: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.04829923436045647
    2. 'turn' → logprob: -4.048299312591553
    3. 'e' → logprob: -4.548299312591553
    4. '   ' → logprob: -5.048299312591553
    5. 'return' → logprob: -6.048299312591553
    6. 'tour' → logprob: -6.048299312591553
    7. '
' → logprob: -6.673299312591553
    8. '       ' → logprob: -6.673299312591553
    9. '```' → logprob: -6.798299312591553
    10. 'd' → logprob: -7.173299312591553

Token 1065: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7554240822792053
    2. ' la' → logprob: -1.8804240226745605
    3. ' le' → logprob: -2.5054240226745605
    4. 'max' → logprob: -2.6304240226745605
    5. 'le' → logprob: -2.7554240226745605
    6. '(' → logprob: -2.8804240226745605
    7. 'the' → logprob: -3.2554240226745605
    8. ' (' → logprob: -4.3804240226745605
    9. '    ' → logprob: -5.1304240226745605
    10. 'la' → logprob: -5.2554240226745605

Token 1066: ' valeur' (ID: 41664)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.7399598956108093
    2. 'best' → logprob: -1.864959955215454
    3. ' meilleur' → logprob: -2.489959955215454
    4. 'max' → logprob: -2.614959955215454
    5. ' max' → logprob: -2.614959955215454
    6. 'me' → logprob: -3.489959955215454
    7. ' meilleure' → logprob: -3.614959955215454
    8. '(' → logprob: -3.739959955215454
    9. ' (' → logprob: -4.364959716796875
    10. ' maximum' → logprob: -4.864959716796875

Token 1067: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7767385840415955
    2. ' maximale' → logprob: -1.0267386436462402
    3. 'max' → logprob: -2.4017386436462402
    4. ' maximal' → logprob: -2.9017386436462402
    5. '_max' → logprob: -3.7767386436462402
    6. '   ' → logprob: -5.27673864364624
    7. ' maximum' → logprob: -6.27673864364624
    8. ',' → logprob: -6.40173864364624
    9. ' ,' → logprob: -7.15173864364624
    10. ' _' → logprob: -7.52673864364624

Token 1068: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3204784095287323
    2. 'max' → logprob: -1.9454784393310547
    3. 'score' → logprob: -3.0704784393310547
    4. '(max' → logprob: -4.070478439331055
    5. '(
' → logprob: -4.445478439331055
    6. ',' → logprob: -4.695478439331055
    7. 'et' → logprob: -5.195478439331055
    8. '_max' → logprob: -5.320478439331055
    9. '=' → logprob: -5.445478439331055
    10. ':' → logprob: -5.695478439331055

Token 1069: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003431738819926977
    2. 'def' → logprob: -6.503431797027588
    3. ':' → logprob: -6.753431797027588
    4. '(' → logprob: -8.62843132019043
    5. '    
' → logprob: -9.00343132019043
    6. '```' → logprob: -9.12843132019043
    7. ' :' → logprob: -9.25343132019043
    8. ':
' → logprob: -9.37843132019043
    9. '
' → logprob: -10.75343132019043
    10. '       ' → logprob: -10.75343132019043

Token 1070: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5283670425415039
    2. 'max' → logprob: -1.528367042541504
    3. 'best' → logprob: -1.903367042541504
    4. ' best' → logprob: -4.028367042541504
    5. ' max' → logprob: -4.403367042541504
    6. 'N' (adapté à ' N') → logprob: -4.403367042541504
    7. ' N' → logprob: -6.903367042541504
    8. 'result' → logprob: -7.528367042541504
    9. 'score' → logprob: -7.778367042541504
    10. '
' → logprob: -9.903367042541504

Token 1071: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.894021213054657
    2. ' =' → logprob: -1.2690212726593018
    3. '   ' → logprob: -1.3940212726593018
    4. ':' → logprob: -3.1440212726593018
    5. ',' → logprob: -5.019021034240723
    6. '):' → logprob: -5.144021034240723
    7. ')' → logprob: -5.894021034240723
    8. 'def' → logprob: -6.769021034240723
    9. '.' → logprob: -7.144021034240723
    10. '  ' → logprob: -8.519021034240723

Token 1072: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07889066636562347
    2. ' len' → logprob: -2.578890562057495
    3. '   ' → logprob: -14.078890800476074
    4. '(len' → logprob: -16.203889846801758
    5. '	len' → logprob: -17.828889846801758
    6. '=len' → logprob: -17.828889846801758
    7. '[len' → logprob: -18.078889846801758
    8. ' ' → logprob: -18.328889846801758
    9. '  ' → logprob: -18.328889846801758
    10. '    ' → logprob: -19.078889846801758

Token 1073: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.0011904643615707755
    2. 'board' → logprob: -6.751190662384033
    3. ' board' → logprob: -10.876190185546875
    4. '	board' → logprob: -14.001190185546875
    5. '(' → logprob: -15.376190185546875
    6. '.board' → logprob: -16.126190185546875
    7. '_board' → logprob: -16.376190185546875
    8. 'N' → logprob: -17.501190185546875
    9. '(N' → logprob: -17.501190185546875
    10. '```' → logprob: -17.501190185546875

Token 1074: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2521694302558899
    2. ')' → logprob: -1.5021693706512451
    3. '   ' → logprob: -8.377169609069824
    4. ')
' → logprob: -12.377169609069824
    5. '):
' → logprob: -12.877169609069824
    6. ' )
' → logprob: -14.002169609069824
    7. ')

' → logprob: -14.002169609069824
    8. '```' → logprob: -15.127169609069824
    9. ' )' → logprob: -15.252169609069824
    10. '
' → logprob: -15.502169609069824

Token 1075: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07442180067300797
    2. ' max' → logprob: -2.9494218826293945
    3. 'max' → logprob: -4.3244218826293945
    4. ' result' → logprob: -5.5744218826293945
    5. 'result' → logprob: -6.6994218826293945
    6. ' for' → logprob: -7.9494218826293945
    7. ' best' → logprob: -8.949421882629395
    8. '```' → logprob: -8.949421882629395
    9. ' score' → logprob: -9.574421882629395
    10. '
' → logprob: -9.699421882629395

Token 1076: ' max' (ID: 2999)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.2520194947719574
    2. 'max' (adapté à ' max') → logprob: -1.5020195245742798
    3. '   ' → logprob: -10.002019882202148
    4. 'score' → logprob: -10.252019882202148
    5. ' best' → logprob: -11.877019882202148
    6. 'result' → logprob: -13.377019882202148
    7. ' max' → logprob: -13.877019882202148
    8. '
' → logprob: -15.377019882202148
    9. 'me' → logprob: -17.25201988220215
    10. 'maximum' → logprob: -17.25201988220215

Token 1077: '_score' (ID: 22555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34898725152015686
    2. '_score' → logprob: -1.2239872217178345
    3. ' _' → logprob: -8.598987579345703
    4. '_space' → logprob: -9.098987579345703
    5. 'score' → logprob: -9.473987579345703
    6. '_scores' → logprob: -10.348987579345703
    7. '_token' → logprob: -10.723987579345703
    8. '_val' → logprob: -11.223987579345703
    9. '_possible' → logprob: -11.223987579345703
    10. '_value' → logprob: -11.223987579345703

Token 1078: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024331748485565
    2. ' =' → logprob: -1.910243272781372
    3. ' ' → logprob: -11.160243034362793
    4. '=
' → logprob: -13.660243034362793
    5. ' =
' → logprob: -14.035243034362793
    6. '_' → logprob: -14.160243034362793
    7. ',' → logprob: -14.160243034362793
    8. '   ' → logprob: -14.660243034362793
    9. '  ' → logprob: -14.785243034362793
    10. ')' → logprob: -15.535243034362793

Token 1079: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.013077527284622192
    2. 'float' → logprob: -4.513077735900879
    3. ' -' → logprob: -6.513077735900879
    4. '-int' → logprob: -8.263077735900879
    5. '-f' → logprob: -9.513077735900879
    6. 'None' → logprob: -9.638077735900879
    7. ' float' → logprob: -10.013077735900879
    8. '-none' → logprob: -10.388077735900879
    9. '-s' → logprob: -11.138077735900879
    10. '-(' → logprob: -11.513077735900879

Token 1080: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.711976170539856
    2. '100' → logprob: -0.961976170539856
    3. 'float' → logprob: -2.2119760513305664
    4. '1' → logprob: -4.211976051330566
    5. '999' → logprob: -6.211976051330566
    6. '200' → logprob: -7.836976051330566
    7. '101' → logprob: -8.711976051330566
    8. '500' → logprob: -8.836976051330566
    9. 'int' → logprob: -9.461976051330566
    10. '987' → logprob: -10.961976051330566

Token 1081: '**' (ID: 410)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.5502851009368896
    2. '0' → logprob: -1.1752851009368896
    3. '000' → logprob: -2.1752851009368896
    4. '**' → logprob: -7.175285339355469
    5. ' ' → logprob: -9.550285339355469
    6. '
' → logprob: -10.175285339355469
    7. '_' → logprob: -11.800285339355469
    8. '1' → logprob: -12.300285339355469
    9. '   ' → logprob: -12.300285339355469
    10. '```' → logprob: -12.925285339355469

Token 1082: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0010222092969343066
    2. '6' → logprob: -7.1260223388671875
    3. '7' → logprob: -9.251022338867188
    4. '8' → logprob: -9.751022338867188
    5. '10' → logprob: -9.751022338867188
    6. '5' → logprob: -13.001022338867188
    7. '15' → logprob: -13.001022338867188
    8. '18' → logprob: -14.626022338867188
    9. '12' → logprob: -15.626022338867188
    10. '20' → logprob: -17.251022338867188

Token 1083: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005503272172063589
    2. '<|end|>' → logprob: -6.505503177642822
    3. '   ' → logprob: -6.630503177642822
    4. 'for' → logprob: -6.755503177642822
    5. ' for' → logprob: -7.630503177642822
    6. ' 
' → logprob: -7.880503177642822
    7. '  
' → logprob: -9.13050365447998
    8. '    
' → logprob: -9.38050365447998
    9. ' ' → logprob: -9.75550365447998
    10. ',' → logprob: -10.00550365447998

Token 1084: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0349099300801754
    2. 'for' → logprob: -3.909909963607788
    3. ' for' → logprob: -5.034909725189209
    4. '   ' → logprob: -5.034909725189209
    5. '    
' → logprob: -7.034909725189209
    6. ' 
' → logprob: -9.159910202026367
    7. '  
' → logprob: -9.784910202026367
    8. ' ' → logprob: -10.284910202026367
    9. '   
' → logprob: -10.659910202026367
    10. '```' → logprob: -10.784910202026367

Token 1085: ' assez' (ID: 33376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11922135949134827
    2. '
' → logprob: -3.4942214488983154
    3. ' for' → logprob: -3.4942214488983154
    4. '   ' → logprob: -3.8692214488983154
    5. 'None' → logprob: -3.8692214488983154
    6. 'import' → logprob: -5.244221210479736
    7. ' None' → logprob: -6.619221210479736
    8. 'INF' → logprob: -6.994221210479736
    9. 'float' → logprob: -7.369221210479736
    10. 'inf' → logprob: -7.619221210479736

Token 1086: ' petit' (ID: 20577)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10196582227945328
    2. '_large' → logprob: -3.22696590423584
    3. '+' → logprob: -3.97696590423584
    4. '<|end|>' → logprob: -4.35196590423584
    5. ' large' → logprob: -4.72696590423584
    6. '
' → logprob: -5.60196590423584
    7. 'import' → logprob: -5.85196590423584
    8. '000' → logprob: -5.97696590423584
    9. '0' → logprob: -6.60196590423584
    10. 'large' → logprob: -6.72696590423584

Token 1087: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23024187982082367
    2. 'for' → logprob: -1.7302418947219849
    3. ' for' → logprob: -3.6052417755126953
    4. ' 
' → logprob: -7.980241775512695
    5. '   ' → logprob: -8.230241775512695
    6. '  
' → logprob: -8.605241775512695
    7. '   
' → logprob: -9.355241775512695
    8. '```' → logprob: -9.480241775512695
    9. '<|end|>' → logprob: -9.855241775512695
    10. '    
' → logprob: -9.980241775512695

Token 1088: ' minimum' (ID: 11085)
  Prédit: 'comm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comm' → logprob: -0.5618799924850464
    2. 'être' → logprob: -2.061880111694336
    3. 'contin' → logprob: -2.811880111694336
    4. 'ac' → logprob: -3.186880111694336
    5. 'ne' → logprob: -3.436880111694336
    6. 'que' → logprob: -3.686880111694336
    7. 'initial' → logprob: -3.811880111694336
    8. ' garantir' → logprob: -3.936880111694336
    9. 'ass' → logprob: -4.186880111694336
    10. ' permettre' → logprob: -4.436880111694336

Token 1089: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7822075486183167
    2. '_' → logprob: -1.2822074890136719
    3. '+' → logprob: -2.282207489013672
    4. 'for' → logprob: -2.907207489013672
    5. '   ' → logprob: -3.657207489013672
    6. ' for' → logprob: -4.907207489013672
    7. '=' → logprob: -5.032207489013672
    8. ',' → logprob: -5.157207489013672
    9. '<|end|>' → logprob: -5.157207489013672
    10. '```' → logprob: -5.282207489013672

Token 1090: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017324654385447502
    2. ' for' → logprob: -4.642324447631836
    3. 'for' → logprob: -5.517324447631836
    4. '
' → logprob: -6.142324447631836
    5. '    
' → logprob: -6.767324447631836
    6. '	for' → logprob: -8.642324447631836
    7. ' 
' → logprob: -11.642324447631836
    8. '```' → logprob: -11.642324447631836
    9. '  
' → logprob: -12.017324447631836
    10. '   
' → logprob: -12.517324447631836

Token 1091: ' placed' (ID: 12989)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001624952768906951
    2. '   ' → logprob: -6.751625061035156
    3. 'best' → logprob: -8.001625061035156
    4. ' for' → logprob: -9.126625061035156
    5. 'max' → logprob: -12.001625061035156
    6. 'empty' → logprob: -13.751625061035156
    7. '
' → logprob: -13.876625061035156
    8. 'result' → logprob: -14.251625061035156
    9. 'possible' → logprob: -14.501625061035156
    10. 'score' → logprob: -14.626625061035156

Token 1092: '_any' (ID: 95226)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3263557553291321
    2. '_token' → logprob: -1.3263556957244873
    3. ' =' → logprob: -5.451355934143066
    4. '_position' → logprob: -6.076355934143066
    5. '_pos' → logprob: -6.951355934143066
    6. '<|end|>' → logprob: -7.201355934143066
    7. '=' → logprob: -7.451355934143066
    8. '_tokens' → logprob: -7.576355934143066
    9. '_positions' → logprob: -7.576355934143066
    10. 'token' → logprob: -7.826355934143066

Token 1093: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04836239293217659
    2. '_' → logprob: -3.7983624935150146
    3. ' =' → logprob: -4.0483622550964355
    4. '_token' → logprob: -5.0483622550964355
    5. '_=' → logprob: -7.2983622550964355
    6. '_tokens' → logprob: -10.048362731933594
    7. ' _' → logprob: -10.048362731933594
    8. '=_' → logprob: -10.423362731933594
    9. '=True' → logprob: -10.673362731933594
    10. ' ' → logprob: -10.798362731933594

Token 1094: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.014169743284583092
    2. ' False' → logprob: -4.264169692993164
    3. 'True' → logprob: -12.014169692993164
    4. ' True' → logprob: -16.014169692993164
    5. 'F' → logprob: -19.014169692993164
    6. '(False' → logprob: -19.764169692993164
    7. '=False' → logprob: -20.139169692993164
    8. '   ' → logprob: -20.514169692993164
    9. '0' → logprob: -20.889169692993164
    10. 'false' → logprob: -21.014169692993164

Token 1095: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35534921288490295
    2. '   ' → logprob: -1.2303491830825806
    3. '    
' → logprob: -5.105349063873291
    4. ' for' → logprob: -8.23034954071045
    5. '  
' → logprob: -8.73034954071045
    6. ' 
' → logprob: -8.98034954071045
    7. 'for' → logprob: -9.60534954071045
    8. '\n' → logprob: -9.98034954071045
    9. ':
' → logprob: -10.10534954071045
    10. ':' → logprob: -10.35534954071045

Token 1096: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06702587753534317
    2. ' for' → logprob: -3.442025899887085
    3. '
' → logprob: -3.567025899887085
    4. 'for' → logprob: -5.817025661468506
    5. '    
' → logprob: -7.067025661468506
    6. '```' → logprob: -7.692025661468506
    7. ' 
' → logprob: -8.567026138305664
    8. '  
' → logprob: -10.067026138305664
    9. '	for' → logprob: -10.692026138305664
    10. '\n' → logprob: -11.442026138305664

Token 1097: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00788023043423891
    2. ' for' → logprob: -5.007880210876465
    3. '   ' → logprob: -6.757880210876465
    4. '
' → logprob: -13.507880210876465
    5. '```' → logprob: -13.882880210876465
    6. '	for' → logprob: -16.25788116455078
    7. ' ' → logprob: -16.38288116455078
    8. '    
' → logprob: -18.00788116455078
    9. '       ' → logprob: -18.25788116455078
    10. '``' → logprob: -19.13288116455078

Token 1098: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14268672466278076
    2. ' i' → logprob: -2.0176868438720703
    3. '   ' → logprob: -12.26768684387207
    4. ' (' → logprob: -13.01768684387207
    5. '(i' → logprob: -13.39268684387207
    6. '	i' → logprob: -13.51768684387207
    7. ' ' → logprob: -14.26768684387207
    8. '_i' → logprob: -14.26768684387207
    9. '  ' → logprob: -16.14268684387207
    10. '```' → logprob: -16.39268684387207

Token 1099: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014206756837666035
    2. 'in' → logprob: -4.264206886291504
    3. ',' → logprob: -10.889206886291504
    4. '   ' → logprob: -11.764206886291504
    5. ' ' → logprob: -12.139206886291504
    6. ')' → logprob: -13.014206886291504
    7. '
' → logprob: -13.639206886291504
    8. '=' → logprob: -13.639206886291504
    9. ' ,' → logprob: -13.764206886291504
    10. '	in' → logprob: -14.139206886291504

Token 1100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38687798380851746
    2. ' range' → logprob: -1.1368780136108398
    3. '0' → logprob: -12.51187801361084
    4. ' in' → logprob: -13.76187801361084
    5. '(range' → logprob: -13.76187801361084
    6. ' ' → logprob: -14.63687801361084
    7. 'in' → logprob: -15.13687801361084
    8. '   ' → logprob: -15.26187801361084
    9. '	range' → logprob: -16.636877059936523
    10. ')' → logprob: -16.761877059936523

Token 1101: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.20106007158756256
    2. 'N' → logprob: -2.3260600566864014
    3. ' (' → logprob: -3.7010600566864014
    4. '0' → logprob: -3.8260600566864014
    5. '(' → logprob: -4.0760602951049805
    6. ' N' → logprob: -4.0760602951049805
    7. ' ' → logprob: -6.3260602951049805
    8. ')' → logprob: -6.5760602951049805
    9. ' range' → logprob: -8.07606029510498
    10. '   ' → logprob: -8.70106029510498

Token 1102: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0013453540159389377
    2. '   ' → logprob: -7.251345157623291
    3. '):' → logprob: -7.501345157623291
    4. '       ' → logprob: -9.87634563446045
    5. '):
' → logprob: -11.62634563446045
    6. ':
' → logprob: -12.12634563446045
    7. ' ):
' → logprob: -12.50134563446045
    8. ')' → logprob: -12.62634563446045
    9. ':' → logprob: -12.75134563446045
    10. ' ' → logprob: -13.12634563446045

Token 1103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024059813003987074
    2. '   ' → logprob: -6.627406120300293
    3. ' for' → logprob: -8.127406120300293
    4. '	   ' → logprob: -8.127406120300293
    5. '	for' → logprob: -8.127406120300293
    6. '	' → logprob: -9.002406120300293
    7. '	       ' → logprob: -10.127406120300293
    8. '    ' → logprob: -12.002406120300293
    9. '```' → logprob: -12.377406120300293
    10. ' ' → logprob: -12.502406120300293

Token 1104: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7500346899032593
    2. 'for' (adapté à ' for') → logprob: -0.7500346899032593
    3. ' j' → logprob: -3.625034809112549
    4. 'j' → logprob: -4.125034809112549
    5. '   ' → logprob: -5.000034809112549
    6. '	   ' → logprob: -6.000034809112549
    7. '       ' → logprob: -6.500034809112549
    8. '	for' → logprob: -7.875034809112549
    9. ' ' → logprob: -8.12503433227539
    10. '    ' → logprob: -8.12503433227539

Token 1105: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0619727298617363
    2. ' j' → logprob: -2.8119726181030273
    3. '   ' → logprob: -12.936972618103027
    4. '0' → logprob: -13.186972618103027
    5. '	j' → logprob: -15.061972618103027
    6. ' ' → logprob: -15.686972618103027
    7. '       ' → logprob: -15.936972618103027
    8. '    ' → logprob: -16.061973571777344
    9. '           ' → logprob: -16.686973571777344
    10. ' ' → logprob: -17.561973571777344

Token 1106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018228961154818535
    2. 'in' → logprob: -4.018229007720947
    3. '   ' → logprob: -11.518228530883789
    4. ')' → logprob: -11.768228530883789
    5. '=' → logprob: -12.018228530883789
    6. '<|end|>' → logprob: -12.018228530883789
    7. '       ' → logprob: -12.268228530883789
    8. '        ' → logprob: -12.268228530883789
    9. '	in' → logprob: -12.268228530883789
    10. '    ' → logprob: -12.393228530883789

Token 1107: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.48345130681991577
    2. 'range' → logprob: -0.9834513068199158
    3. '0' → logprob: -5.3584513664245605
    4. '(i' → logprob: -5.4834513664245605
    5. '(' → logprob: -8.233450889587402
    6. '(range' → logprob: -9.233450889587402
    7. ' (' → logprob: -9.483450889587402
    8. ' ' → logprob: -10.858450889587402
    9. 'i' → logprob: -12.608450889587402
    10. ' i' → logprob: -12.983450889587402

Token 1108: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5817370414733887
    2. '(i' → logprob: -0.8317370414733887
    3. '0' → logprob: -5.456737041473389
    4. ' i' → logprob: -6.706737041473389
    5. ' (' → logprob: -8.956737518310547
    6. 'j' → logprob: -9.831737518310547
    7. ')' → logprob: -10.456737518310547
    8. '(' → logprob: -10.581737518310547
    9. '   ' → logprob: -10.956737518310547
    10. '(j' → logprob: -11.331737518310547

Token 1109: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006652565789408982
    2. ' +' → logprob: -7.500665187835693
    3. ')+' → logprob: -10.000665664672852
    4. '):
' → logprob: -10.000665664672852
    5. ')' → logprob: -11.375665664672852
    6. '):' → logprob: -12.375665664672852
    7. '+
' → logprob: -13.500665664672852
    8. '   ' → logprob: -14.125665664672852
    9. '       ' → logprob: -14.125665664672852
    10. '+j' → logprob: -14.125665664672852

Token 1110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002278542669955641
    2. ' ' → logprob: -8.875227928161621
    3. 'i' → logprob: -10.250227928161621
    4. 'j' → logprob: -10.375227928161621
    5. '0' → logprob: -11.250227928161621
    6. '+' → logprob: -13.000227928161621
    7. '
' → logprob: -13.125227928161621
    8. ')' → logprob: -14.000227928161621
    9. '   ' → logprob: -14.000227928161621
    10. '(i' → logprob: -15.000227928161621

Token 1111: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00645683566108346
    2. '):' → logprob: -5.1314568519592285
    3. '+' → logprob: -7.7564568519592285
    4. '           ' → logprob: -10.25645637512207
    5. '):

' → logprob: -10.38145637512207
    6. '       ' → logprob: -11.38145637512207
    7. '):
' → logprob: -12.25645637512207
    8. ' +' → logprob: -12.38145637512207
    9. ')' → logprob: -12.88145637512207
    10. ' ):
' → logprob: -12.88145637512207

Token 1112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00026181264547631145
    2. ':' → logprob: -8.875262260437012
    3. ':
' → logprob: -9.625262260437012
    4. '            
' → logprob: -11.000262260437012
    5. ' if' → logprob: -11.250262260437012
    6. '               ' → logprob: -12.000262260437012
    7. ' :' → logprob: -12.250262260437012
    8. '```' → logprob: -12.750262260437012
    9. ' :
' → logprob: -13.250262260437012
    10. '          ' → logprob: -13.375262260437012

Token 1113: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16691496968269348
    2. ' if' → logprob: -1.916914939880371
    3. 'if' (adapté à ' if') → logprob: -5.416914939880371
    4. '           ' → logprob: -6.166914939880371
    5. '   ' → logprob: -10.666914939880371
    6. ' ' → logprob: -11.041914939880371
    7. '                   ' → logprob: -11.166914939880371
    8. ' ' → logprob: -11.166914939880371
    9. '			' → logprob: -11.166914939880371
    10. '	           ' → logprob: -11.541914939880371

Token 1114: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.4740819036960602
    2. ' board' → logprob: -0.9740818738937378
    3. '	board' → logprob: -12.724081993103027
    4. '(board' → logprob: -13.474081993103027
    5. '.board' → logprob: -15.974081993103027
    6. '   ' → logprob: -16.09908103942871
    7. '           ' → logprob: -16.84908103942871
    8. ' ' → logprob: -16.97408103942871
    9. ' ' → logprob: -17.09908103942871
    10. '    ' → logprob: -17.34908103942871

Token 1115: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. ' [' → logprob: -14.750000953674316
    3. '[(' → logprob: -14.875000953674316
    4. '[' → logprob: -15.500000953674316
    5. '```' → logprob: -15.750000953674316
    6. '[j' → logprob: -16.000001907348633
    7. '           ' → logprob: -16.750001907348633
    8. '
' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.500001907348633
    10. '(i' → logprob: -18.000001907348633

Token 1116: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16599257290363312
    2. '][' → logprob: -1.9159926176071167
    3. '[j' → logprob: -5.165992736816406
    4. '[' → logprob: -11.665992736816406
    5. ' [' → logprob: -12.165992736816406
    6. ' ][' → logprob: -12.165992736816406
    7. '
' → logprob: -12.290992736816406
    8. '```' → logprob: -12.665992736816406
    9. ']' → logprob: -12.790992736816406
    10. '[I' → logprob: -12.790992736816406

Token 1117: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.0100624169572257e-05
    2. '0' → logprob: -11.375020027160645
    3. '[j' → logprob: -12.375020027160645
    4. ' j' → logprob: -13.000020027160645
    5. '```' → logprob: -14.500020027160645
    6. '   ' → logprob: -14.750020027160645
    7. ']' → logprob: -15.000020027160645
    8. ' ' → logprob: -15.000020027160645
    9. '	j' → logprob: -16.37502098083496
    10. '[' → logprob: -16.50002098083496

Token 1118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13654108345508575
    2. ']==' → logprob: -2.1365411281585693
    3. ' ==' → logprob: -5.26154088973999
    4. '==' → logprob: -5.51154088973999
    5. ' ]' → logprob: -8.386541366577148
    6. ')' → logprob: -10.761541366577148
    7. ')==' → logprob: -11.011541366577148
    8. '']' → logprob: -11.011541366577148
    9. '']==' → logprob: -11.261541366577148
    10. '           ' → logprob: -11.386541366577148

Token 1119: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47408488392829895
    2. '==' → logprob: -0.9740848541259766
    3. ']==' → logprob: -12.599084854125977
    4. ')==' → logprob: -13.849084854125977
    5. '=' → logprob: -14.099084854125977
    6. '==
' → logprob: -14.099084854125977
    7. ' ' → logprob: -14.349084854125977
    8. '[' → logprob: -14.474084854125977
    9. '()==' → logprob: -15.099084854125977
    10. '===' → logprob: -15.474084854125977

Token 1120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '۰' → logprob: -22.130233764648438
    4. '   ' → logprob: -22.255233764648438
    5. ' ' → logprob: -22.505233764648438
    6. '  ' → logprob: -22.755233764648438
    7. '```' → logprob: -23.005233764648438
    8. ' ' → logprob: -23.505233764648438
    9. '_' → logprob: -24.005233764648438
    10. '00' → logprob: -24.130233764648438

Token 1121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -22.375
    4. '۰' → logprob: -22.75
    5. '00' → logprob: -23.5
    6. '```' → logprob: -24.5
    7. '000' → logprob: -24.625
    8. '  ' → logprob: -24.75
    9. '０' → logprob: -24.875
    10. ' ' → logprob: -24.875

Token 1122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.040453020483255386
    2. ':
' → logprob: -3.7904529571533203
    3. '               ' → logprob: -4.16545295715332
    4. '                               ' → logprob: -7.79045295715332
    5. ' :' → logprob: -8.29045295715332
    6. '           ' → logprob: -8.54045295715332
    7. '                           ' → logprob: -9.29045295715332
    8. '                       ' → logprob: -9.41545295715332
    9. '):' → logprob: -9.54045295715332
    10. '):
' → logprob: -10.04045295715332

Token 1123: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.043731674551963806
    2. ':' → logprob: -3.543731689453125
    3. ':
' → logprob: -5.543731689453125
    4. '                               ' → logprob: -6.043731689453125
    5. '           ' → logprob: -6.168731689453125
    6. '                
' → logprob: -6.543731689453125
    7. '                       ' → logprob: -7.043731689453125
    8. '                           ' → logprob: -7.793731689453125
    9. ' :' → logprob: -7.918731689453125
    10. '                        
' → logprob: -8.043731689453125

Token 1124: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.1656370609998703
    2. 'new' → logprob: -2.7906370162963867
    3. '                   ' → logprob: -3.0406370162963867
    4. ' board' → logprob: -3.5406370162963867
    5. '               ' → logprob: -5.290637016296387
    6. ' #' → logprob: -5.290637016296387
    7. '#' (adapté à ' #') → logprob: -6.415637016296387
    8. 'board' → logprob: -6.415637016296387
    9. '   ' → logprob: -7.540637016296387
    10. ' temp' → logprob: -8.790637016296387

Token 1125: ' Cop' (ID: 28412)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.23860596120357513
    2. 'board' → logprob: -1.9886059761047363
    3. '#' → logprob: -3.1136059761047363
    4. 'temp' → logprob: -3.7386059761047363
    5. '                   ' → logprob: -6.238605976104736
    6. '               ' → logprob: -6.238605976104736
    7. 'tmp' → logprob: -6.863605976104736
    8. '   ' → logprob: -7.613605976104736
    9. 'nou' → logprob: -7.613605976104736
    10. ' new' → logprob: -7.988605976104736

Token 1126: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006738580763339996
    2. 'ie' → logprob: -5.256738662719727
    3. 'ier' → logprob: -7.381738662719727
    4. '```' → logprob: -8.881738662719727
    5. '[y' → logprob: -9.006738662719727
    6. 'e' → logprob: -9.131738662719727
    7. '#' → logprob: -9.506738662719727
    8. '               ' → logprob: -9.631738662719727
    9. ')y' → logprob: -10.006738662719727
    10. 'yleft' → logprob: -10.256738662719727

Token 1127: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5827025175094604
    2. 'board' → logprob: -1.7077025175094604
    3. '=' → logprob: -2.20770263671875
    4. '_board' → logprob: -2.20770263671875
    5. ' of' → logprob: -2.33270263671875
    6. '(board' → logprob: -2.45770263671875
    7. 'of' → logprob: -2.58270263671875
    8. '.deepcopy' → logprob: -3.08270263671875
    9. '               ' → logprob: -3.70770263671875
    10. 'du' → logprob: -3.95770263671875

Token 1128: ' plateau' (ID: 78303)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0018802082631736994
    2. '[' → logprob: -7.001880168914795
    3. ' board' → logprob: -7.376880168914795
    4. ' [' → logprob: -8.251880645751953
    5. '[
' → logprob: -9.876880645751953
    6. '[b' → logprob: -11.126880645751953
    7. '[i' → logprob: -12.501880645751953
    8. 'bord' → logprob: -12.501880645751953
    9. '(board' → logprob: -12.626880645751953
    10. '_board' → logprob: -13.626880645751953

Token 1129: '
' (ID: 198)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5517064332962036
    2. '               ' → logprob: -1.1767064332962036
    3. ' new' → logprob: -2.426706314086914
    4. 'tmp' → logprob: -4.551706314086914
    5. 'temp' → logprob: -4.926706314086914
    6. ' =' → logprob: -5.801706314086914
    7. 'board' → logprob: -6.426706314086914
    8. ' temp' → logprob: -7.051706314086914
    9. ' tmp' → logprob: -7.426706314086914
    10. '[new' → logprob: -7.551706314086914

Token 1130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009460213594138622
    2. 'new' → logprob: -5.13446044921875
    3. ' new' → logprob: -6.50946044921875
    4. 'tmp' → logprob: -7.63446044921875
    5. ' =' → logprob: -8.00946044921875
    6. 'temp' → logprob: -8.38446044921875
    7. 'board' → logprob: -8.63446044921875
    8. ' deepcopy' → logprob: -8.75946044921875
    9. ' board' → logprob: -9.25946044921875
    10. 'import' → logprob: -9.63446044921875

Token 1131: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.06531471759080887
    2. ' new' → logprob: -2.815314769744873
    3. 'import' → logprob: -6.440314769744873
    4. 'temp' → logprob: -6.690314769744873
    5. 'copy' → logprob: -8.815314292907715
    6. 'tmp' → logprob: -8.940314292907715
    7. 'board' → logprob: -9.315314292907715
    8. 'cop' → logprob: -10.065314292907715
    9. ' temp' → logprob: -10.190314292907715
    10. '   ' → logprob: -10.815314292907715

Token 1132: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.0238813403993845
    2. '_' → logprob: -3.773881435394287
    3. 'board' → logprob: -8.398880958557129
    4. ' board' → logprob: -8.773880958557129
    5. ' _' → logprob: -9.023880958557129
    6. '_bo' → logprob: -9.523880958557129
    7. '_plate' → logprob: -10.148880958557129
    8. '_b' → logprob: -11.398880958557129
    9. '_BOARD' → logprob: -13.398880958557129
    10. '_
' → logprob: -13.523880958557129

Token 1133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04861336573958397
    2. '=' → logprob: -3.0486133098602295
    3. '=[' → logprob: -10.798613548278809
    4. '[i' → logprob: -13.673613548278809
    5. ' =[' → logprob: -13.798613548278809
    6. '=
' → logprob: -14.048613548278809
    7. '   ' → logprob: -14.298613548278809
    8. ' =
' → logprob: -14.548613548278809
    9. '=[[' → logprob: -14.798613548278809
    10. '               ' → logprob: -15.298613548278809

Token 1134: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015829472104087472
    2. '[i' → logprob: -7.251583099365234
    3. '[row' → logprob: -8.376583099365234
    4. '[line' → logprob: -8.501583099365234
    5. '[array' → logprob: -9.626583099365234
    6. '[list' → logprob: -9.626583099365234
    7. '[result' → logprob: -10.376583099365234
    8. '[j' → logprob: -10.626583099365234
    9. '[new' → logprob: -11.001583099365234
    10. '[b' → logprob: -11.001583099365234

Token 1135: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.008650499396026134
    2. 'line' → logprob: -4.758650302886963
    3. 'list' → logprob: -10.883650779724121
    4. 'ligne' → logprob: -11.633650779724121
    5. ' row' → logprob: -11.883650779724121
    6. 'board' → logprob: -13.883650779724121
    7. 'lst' → logprob: -15.758650779724121
    8. 'l' → logprob: -16.508649826049805
    9. 'r' → logprob: -16.883649826049805
    10. ' line' → logprob: -16.883649826049805

Token 1136: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.004236412234604359
    2. '.copy' → logprob: -5.504236221313477
    3. '[:' → logprob: -8.754236221313477
    4. '[::-' → logprob: -16.129236221313477
    5. '.' → logprob: -17.379236221313477
    6. 'copy' → logprob: -17.629236221313477
    7. '[' → logprob: -17.754236221313477
    8. '[:-' → logprob: -18.754236221313477
    9. '.deepcopy' → logprob: -18.879236221313477
    10. '+' → logprob: -19.254236221313477

Token 1137: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47446519136428833
    2. ' for' → logprob: -0.9744651913642883
    3. '               ' → logprob: -7.974465370178223
    4. '                   ' → logprob: -11.224465370178223
    5. '                ' → logprob: -11.474465370178223
    6. '              ' → logprob: -12.474465370178223
    7. ']' → logprob: -12.599465370178223
    8. ')' → logprob: -12.849465370178223
    9. '	for' → logprob: -12.849465370178223
    10. '           ' → logprob: -13.599465370178223

Token 1138: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.1472419600977446e-06
    2. ' row' → logprob: -13.750000953674316
    3. 'board' → logprob: -16.750001907348633
    4. '	row' → logprob: -19.000001907348633
    5. '(row' → logprob: -19.375001907348633
    6. 'line' → logprob: -20.500001907348633
    7. 'r' → logprob: -21.125001907348633
    8. '=row' → logprob: -21.875001907348633
    9. 'ro' → logprob: -22.000001907348633
    10. '$row' → logprob: -22.125001907348633

Token 1139: ' in' (ID: 306)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.00025287605240009725
    2. ' row' → logprob: -8.750252723693848
    3. 'in' → logprob: -9.625252723693848
    4. 'board' → logprob: -11.000252723693848
    5. '(row' → logprob: -11.875252723693848
    6. ' in' → logprob: -13.125252723693848
    7. '=row' → logprob: -13.625252723693848
    8. 'range' → logprob: -14.500252723693848
    9. '	row' → logprob: -15.125252723693848
    10. 'r' → logprob: -15.875252723693848

Token 1140: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -3.4121114822482923e-06
    2. ' board' → logprob: -12.625003814697266
    3. '
' → logprob: -17.500003814697266
    4. '   ' → logprob: -19.500003814697266
    5. '(board' → logprob: -19.500003814697266
    6. '	board' → logprob: -20.125003814697266
    7. ' ' → logprob: -20.875003814697266
    8. 'book' → logprob: -21.375003814697266
    9. '.board' → logprob: -21.750003814697266
    10. 'block' → logprob: -21.875003814697266

Token 1141: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1605834662914276
    2. ']
' → logprob: -2.16058349609375
    3. ']' → logprob: -3.41058349609375
    4. ']
' → logprob: -11.16058349609375
    5. ']

' → logprob: -11.28558349609375
    6. '                
' → logprob: -11.66058349609375
    7. '                   ' → logprob: -11.78558349609375
    8. '           ' → logprob: -11.91058349609375
    9. ' ]
' → logprob: -12.03558349609375
    10. '              ' → logprob: -12.53558349609375

Token 1142: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.5094070477061905e-05
    2. 'new' → logprob: -11.250015258789062
    3. '			' → logprob: -14.000015258789062
    4. ' new' → logprob: -14.500015258789062
    5. '                
' → logprob: -14.875015258789062
    6. '```' → logprob: -15.750015258789062
    7. '              ' → logprob: -16.375015258789062
    8. '                   ' → logprob: -16.500015258789062
    9. ' ' → logprob: -17.375015258789062
    10. '       ' → logprob: -18.000015258789062

Token 1143: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.16988462209701538
    2. ' new' → logprob: -2.16988468170166
    3. '               ' → logprob: -3.16988468170166
    4. '                ' → logprob: -11.79488468170166
    5. '                   ' → logprob: -11.79488468170166
    6. '                               ' → logprob: -11.79488468170166
    7. '```' → logprob: -12.16988468170166
    8. '                
' → logprob: -13.41988468170166
    9. '[new' → logprob: -13.41988468170166
    10. '           ' → logprob: -13.66988468170166

Token 1144: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -8.77627644513268e-06
    2. 'board' → logprob: -12.125008583068848
    3. 'Board' → logprob: -13.875008583068848
    4. '```' → logprob: -14.750008583068848
    5. '_BOARD' → logprob: -15.000008583068848
    6. '[i' → logprob: -15.500008583068848
    7. '_' → logprob: -15.625008583068848
    8. 'new' → logprob: -15.875008583068848
    9. 'def' → logprob: -16.000009536743164
    10. '[' → logprob: -16.000009536743164

Token 1145: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003392767102923244
    2. '               ' → logprob: -8.12533950805664
    3. '][' → logprob: -10.75033950805664
    4. '[I' → logprob: -12.00033950805664
    5. '                   ' → logprob: -12.12533950805664
    6. ')[' → logprob: -12.87533950805664
    7. '                ' → logprob: -13.50033950805664
    8. ' [' → logprob: -13.75033950805664
    9. '```' → logprob: -14.12533950805664
    10. '           ' → logprob: -14.12533950805664

Token 1146: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0024881421122699976
    2. '[j' → logprob: -7.002488136291504
    3. '[i' → logprob: -7.252488136291504
    4. ']' → logprob: -7.502488136291504
    5. '               ' → logprob: -8.877488136291504
    6. ''][' → logprob: -10.252488136291504
    7. '"][' → logprob: -10.502488136291504
    8. ' ][' → logprob: -10.627488136291504
    9. '<|end|>' → logprob: -10.877488136291504
    10. ']][' → logprob: -11.377488136291504

Token 1147: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.7432603272027336e-06
    2. ' j' → logprob: -13.750001907348633
    3. '                   ' → logprob: -14.875001907348633
    4. '               ' → logprob: -15.625001907348633
    5. '	j' → logprob: -17.500001907348633
    6. '                       ' → logprob: -17.875001907348633
    7. '           ' → logprob: -17.875001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '                               ' → logprob: -18.500001907348633
    10. '                           ' → logprob: -18.875001907348633

Token 1148: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007801333907991648
    2. ']=' → logprob: -5.507801532745361
    3. '=' → logprob: -5.632801532745361
    4. ' =' → logprob: -9.382801055908203
    5. ' ]' → logprob: -10.007801055908203
    6. ')' → logprob: -12.007801055908203
    7. ')]' → logprob: -14.007801055908203
    8. ']+=' → logprob: -15.507801055908203
    9. ')=' → logprob: -15.632801055908203
    10. '               ' → logprob: -15.882801055908203

Token 1149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00317783304490149
    2. ' =' → logprob: -5.753177642822266
    3. '=
' → logprob: -16.628177642822266
    4. '=

' → logprob: -18.253177642822266
    5. '＝' → logprob: -19.878177642822266
    6. '.=' → logprob: -20.378177642822266
    7. ' =
' → logprob: -20.628177642822266
    8. ']=' → logprob: -20.878177642822266
    9. ')=' → logprob: -21.503177642822266
    10. '                ' → logprob: -21.753177642822266

Token 1150: ' player' (ID: 5033)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -6.988221684878226e-06
    2. ' player' → logprob: -11.875006675720215
    3. 'C' → logprob: -18.50000762939453
    4. 'user' → logprob: -18.62500762939453
    5. '	player' → logprob: -19.37500762939453
    6. '(player' → logprob: -19.75000762939453
    7. '   ' → logprob: -20.00000762939453
    8. 'patient' → logprob: -20.62500762939453
    9. '[player' → logprob: -20.87500762939453
    10. 'person' → logprob: -21.12500762939453

Token 1151: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010747836902737617
    2. '                
' → logprob: -4.635747909545898
    3. '
' → logprob: -7.260747909545898
    4. '<|end|>' → logprob: -8.885747909545898
    5. '                    
' → logprob: -10.510747909545898
    6. '               
' → logprob: -11.010747909545898
    7. '<|end|>' → logprob: -11.010747909545898
    8. '  
' → logprob: -11.385747909545898
    9. '                
' → logprob: -11.760747909545898
    10. '                ' → logprob: -11.885747909545898

Token 1152: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2831888198852539
    2. '
' → logprob: -1.533188819885254
    3. '                
' → logprob: -3.658188819885254
    4. '<|end|>' → logprob: -5.658188819885254
    5. '  
' → logprob: -8.283188819885254
    6. ' 
' → logprob: -8.908188819885254
    7. '```' → logprob: -9.033188819885254
    8. '                    
' → logprob: -9.033188819885254
    9. '<|end|>' → logprob: -9.033188819885254
    10. '               
' → logprob: -9.283188819885254

Token 1153: ' placed' (ID: 12989)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.04594305902719498
    2. '               ' → logprob: -3.545943021774292
    3. 'neighbors' → logprob: -4.420943260192871
    4. '   ' → logprob: -6.295943260192871
    5. '#' → logprob: -7.045943260192871
    6. 'new' → logprob: -8.295943260192871
    7. '                   ' → logprob: -8.420943260192871
    8. ' groups' → logprob: -8.920943260192871
    9. '       ' → logprob: -9.045943260192871
    10. 'neighbor' → logprob: -9.045943260192871

Token 1154: '_any' (ID: 95226)
  Prédit: '_any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_any' → logprob: -2.696889623621246e-06
    2. 'any' → logprob: -13.37500286102295
    3. 'Any' → logprob: -14.00000286102295
    4. '_ANY' → logprob: -16.000001907348633
    5. '[Any' → logprob: -16.125001907348633
    6. '_some' → logprob: -17.750001907348633
    7. '_possible' → logprob: -18.375001907348633
    8. '-any' → logprob: -18.625001907348633
    9. '_all' → logprob: -18.625001907348633
    10. ' any' → logprob: -18.875001907348633

Token 1155: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759519934654236
    2. ' =' → logprob: -0.8259519934654236
    3. '=True' → logprob: -11.32595157623291
    4. '[' → logprob: -15.07595157623291
    5. '=False' → logprob: -16.450952529907227
    6. '   ' → logprob: -17.075952529907227
    7. ' ' → logprob: -17.200952529907227
    8. 'True' → logprob: -17.575952529907227
    9. '<|end|>' → logprob: -17.950952529907227
    10. '=
' → logprob: -18.450952529907227

Token 1156: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861456897109747
    2. ' True' → logprob: -4.758614540100098
    3. '(True' → logprob: -17.258615493774414
    4. 'False' → logprob: -18.008615493774414
    5. '=True' → logprob: -20.133615493774414
    6. 'true' → logprob: -20.383615493774414
    7. '   ' → logprob: -22.008615493774414
    8. 'Tr' → logprob: -22.258615493774414
    9. ' ' → logprob: -22.758615493774414
    10. '.True' → logprob: -23.383615493774414

Token 1157: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12210910767316818
    2. '               ' → logprob: -2.2471091747283936
    3. '                
' → logprob: -5.1221089363098145
    4. '<|end|>' → logprob: -6.2471089363098145
    5. '  
' → logprob: -7.1221089363098145
    6. ' 
' → logprob: -8.997109413146973
    7. '<|end|>' → logprob: -9.497109413146973
    8. '
                
' → logprob: -9.622109413146973
    9. '
' → logprob: -9.997109413146973
    10. '    
' → logprob: -10.122109413146973

Token 1158: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022891871631145477
    2. '                
' → logprob: -6.752289295196533
    3. '
' → logprob: -7.127289295196533
    4. '   ' → logprob: -8.252288818359375
    5. '    
' → logprob: -10.877288818359375
    6. '```' → logprob: -11.502288818359375
    7. '           ' → logprob: -12.252288818359375
    8. '                   ' → logprob: -12.252288818359375
    9. '       ' → logprob: -12.377288818359375
    10. '#' → logprob: -13.252288818359375

Token 1159: ' #' (ID: 1069)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.012390267103910446
    2. '#' (adapté à ' #') → logprob: -5.13739013671875
    3. '               ' → logprob: -5.13739013671875
    4. '   ' → logprob: -8.76239013671875
    5. 'group' → logprob: -9.26239013671875
    6. '                   ' → logprob: -9.26239013671875
    7. 'all' → logprob: -10.01239013671875
    8. '           ' → logprob: -10.38739013671875
    9. ' groups' → logprob: -10.63739013671875
    10. 'neighbors' → logprob: -10.63739013671875

Token 1160: ' Cal' (ID: 4453)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.0026515135541558266
    2. '#' → logprob: -6.002651691436768
    3. 'group' → logprob: -9.62765121459961
    4. '               ' → logprob: -9.75265121459961
    5. '                   ' → logprob: -11.37765121459961
    6. '   ' → logprob: -11.62765121459961
    7. 'all' → logprob: -11.62765121459961
    8. ' groups' → logprob: -11.87765121459961
    9. '           ' → logprob: -12.50265121459961
    10. '(groups' → logprob: -13.37765121459961

Token 1161: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.15561999380588531
    2. 'culate' → logprob: -2.2806200981140137
    3. 'l' → logprob: -3.7806200981140137
    4. 'cule' → logprob: -4.530620098114014
    5. 'cules' → logprob: -5.655620098114014
    6. 'c' → logprob: -6.655620098114014
    7. 'culation' → logprob: -7.155620098114014
    8. 'groups' → logprob: -7.405620098114014
    9. 'culator' → logprob: -7.530620098114014
    10. 'culated' → logprob: -7.530620098114014

Token 1162: ' les' (ID: 1341)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1298007220029831
    2. 'groups' → logprob: -2.379800796508789
    3. ' groups' → logprob: -4.629800796508789
    4. 'les' → logprob: -5.129800796508789
    5. '                   ' → logprob: -5.254800796508789
    6. ' les' → logprob: -6.629800796508789
    7. '_groups' → logprob: -6.629800796508789
    8. '(groups' → logprob: -6.629800796508789
    9. ' des' → logprob: -6.754800796508789
    10. 'des' → logprob: -7.504800796508789

Token 1163: ' groupes' (ID: 72206)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.007349392864853144
    2. 'group' → logprob: -5.007349491119385
    3. '#' → logprob: -7.757349491119385
    4. 'scores' → logprob: -9.632349014282227
    5. 'to' → logprob: -10.132349014282227
    6. 'removed' → logprob: -10.507349014282227
    7. ' groups' → logprob: -11.257349014282227
    8. 'score' → logprob: -11.632349014282227
    9. ' groupes' → logprob: -11.882349014282227
    10. '   ' → logprob: -12.257349014282227

Token 1164: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002229594625532627
    2. 'groups' → logprob: -6.377229690551758
    3. '(groups' → logprob: -8.377229690551758
    4. ' groups' → logprob: -8.752229690551758
    5. ',' → logprob: -9.502229690551758
    6. '                
' → logprob: -10.627229690551758
    7. 'et' → logprob: -12.252229690551758
    8. ' =' → logprob: -12.377229690551758
    9. ' for' → logprob: -12.502229690551758
    10. 'group' → logprob: -12.627229690551758

Token 1165: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001167483744211495
    2. ' =' → logprob: -7.001167297363281
    3. ',' → logprob: -9.251167297363281
    4. 'et' → logprob: -9.876167297363281
    5. '=' → logprob: -10.001167297363281
    6. '                
' → logprob: -11.126167297363281
    7. '=find' → logprob: -11.376167297363281
    8. 's' → logprob: -12.126167297363281
    9. 'found' → logprob: -12.626167297363281
    10. '   ' → logprob: -13.001167297363281

Token 1166: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' (adapté à ' groups') → logprob: -0.00018101456225849688
    2. ' groups' → logprob: -8.750181198120117
    3. '               ' → logprob: -10.875181198120117
    4. 'new' → logprob: -14.125181198120117
    5. 'group' → logprob: -14.250181198120117
    6. '   ' → logprob: -14.375181198120117
    7. '                   ' → logprob: -14.500181198120117
    8. '(groups' → logprob: -15.125181198120117
    9. '.groups' → logprob: -15.625181198120117
    10. '           ' → logprob: -15.625181198120117

Token 1167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062102798372507095
    2. '=' → logprob: -2.812102794647217
    3. '               ' → logprob: -9.187103271484375
    4. '                   ' → logprob: -10.687103271484375
    5. '   ' → logprob: -12.187103271484375
    6. '=find' → logprob: -12.812103271484375
    7. '           ' → logprob: -14.437103271484375
    8. ',' → logprob: -15.187103271484375
    9. '                ' → logprob: -15.312103271484375
    10. ')' → logprob: -16.062103271484375

Token 1168: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0024779161904007196
    2. ' find' → logprob: -6.002478122711182
    3. '(find' → logprob: -13.377477645874023
    4. '   ' → logprob: -15.502477645874023
    5. '=find' → logprob: -15.627477645874023
    6. '	find' → logprob: -16.002477645874023
    7. '               ' → logprob: -16.002477645874023
    8. '                   ' → logprob: -16.502477645874023
    9. '.find' → logprob: -18.377477645874023
    10. '           ' → logprob: -18.502477645874023

Token 1169: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.00013131031300872564
    2. 'groups' → logprob: -9.000131607055664
    3. '(groups' → logprob: -12.875131607055664
    4. 'new' → logprob: -13.375131607055664
    5. '(new' → logprob: -13.750131607055664
    6. '(board' → logprob: -14.000131607055664
    7. 's' → logprob: -14.500131607055664
    8. '_board' → logprob: -15.250131607055664
    9. ' groups' → logprob: -15.500131607055664
    10. '```' → logprob: -15.500131607055664

Token 1170: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -3.690834273584187e-05
    2. 'new' → logprob: -10.25003719329834
    3. '               ' → logprob: -14.87503719329834
    4. '(
' → logprob: -14.87503719329834
    5. '```' → logprob: -15.25003719329834
    6. '(' → logprob: -15.37503719329834
    7. '[new' → logprob: -15.87503719329834
    8. ')new' → logprob: -16.625036239624023
    9. '=new' → logprob: -16.750036239624023
    10. '(board' → logprob: -16.750036239624023

Token 1171: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -1.1398757123970427e-05
    2. 'board' → logprob: -11.500011444091797
    3. 'new' → logprob: -15.375011444091797
    4. '_b' → logprob: -15.625011444091797
    5. '(board' → logprob: -15.625011444091797
    6. '
' → logprob: -16.250011444091797
    7. '_BOARD' → logprob: -16.250011444091797
    8. 'oard' → logprob: -16.500011444091797
    9. 'Board' → logprob: -16.750011444091797
    10. ')' → logprob: -17.000011444091797

Token 1172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -13.125004768371582
    3. '(ne' → logprob: -13.625004768371582
    4. ',new' → logprob: -14.875004768371582
    5. ',
' → logprob: -15.125004768371582
    6. '               ' → logprob: -16.000003814697266
    7. ')' → logprob: -16.375003814697266
    8. '           ' → logprob: -16.750003814697266
    9. ',n' → logprob: -17.000003814697266
    10. '(' → logprob: -17.000003814697266

Token 1173: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.002806656062602997
    2. ' neighbors' → logprob: -5.877806663513184
    3. 'ne' → logprob: -14.127806663513184
    4. 'neighbor' → logprob: -15.002806663513184
    5. '_neighbors' → logprob: -15.252806663513184
    6. '               ' → logprob: -15.502806663513184
    7. '   ' → logprob: -16.502805709838867
    8. '                   ' → logprob: -16.627805709838867
    9. '(ne' → logprob: -17.127805709838867
    10. '           ' → logprob: -17.252805709838867

Token 1174: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19666428864002228
    2. ')
' → logprob: -2.071664333343506
    3. '               ' → logprob: -2.946664333343506
    4. ')
' → logprob: -10.946663856506348
    5. ')

' → logprob: -11.196663856506348
    6. '                   ' → logprob: -12.571663856506348
    7. '):
' → logprob: -13.446663856506348
    8. '              ' → logprob: -13.696663856506348
    9. '           ' → logprob: -13.946663856506348
    10. '   ' → logprob: -14.446663856506348

Token 1175: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003488129877950996
    2. 'for' → logprob: -8.375349044799805
    3. '```' → logprob: -10.250349044799805
    4. '
' → logprob: -10.750349044799805
    5. ' for' → logprob: -10.750349044799805
    6. '   ' → logprob: -11.375349044799805
    7. '                
' → logprob: -11.500349044799805
    8. '           ' → logprob: -12.000349044799805
    9. '       ' → logprob: -12.125349044799805
    10. '                   ' → logprob: -13.125349044799805

Token 1176: ' #' (ID: 1069)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.0607430934906006
    2. '               ' → logprob: -1.6857430934906006
    3. 'removed' → logprob: -1.8107430934906006
    4. '#' (adapté à ' #') → logprob: -2.8107430934906006
    5. 'capt' → logprob: -3.0607430934906006
    6. 'scores' → logprob: -3.0607430934906006
    7. 'score' → logprob: -3.4357430934906006
    8. 'dead' → logprob: -3.5607430934906006
    9. 'captures' → logprob: -3.8107430934906006
    10. 'remove' → logprob: -4.18574333190918

Token 1177: ' Cher' (ID: 48756)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8682669401168823
    2. 'to' → logprob: -1.1182669401168823
    3. 'removed' → logprob: -2.493267059326172
    4. 'scores' → logprob: -3.118267059326172
    5. 'groups' → logprob: -3.243267059326172
    6. 'score' → logprob: -3.493267059326172
    7. 'capt' → logprob: -4.368267059326172
    8. 'remove' → logprob: -4.743267059326172
    9. 'rem' → logprob: -4.993267059326172
    10. 'empty' → logprob: -5.118267059326172

Token 1178: 'che' (ID: 926)
  Prédit: 'cher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.06040738523006439
    2. '               ' → logprob: -3.1854074001312256
    3. 'cker' → logprob: -5.0604071617126465
    4. 'che' → logprob: -5.5604071617126465
    5. '   ' → logprob: -5.9354071617126465
    6. '#' → logprob: -6.5604071617126465
    7. '           ' → logprob: -7.1854071617126465
    8. 'ch' → logprob: -7.5604071617126465
    9. '       ' → logprob: -7.6854071617126465
    10. 'ker' → logprob: -7.6854071617126465

Token 1179: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5248215794563293
    2. ' les' → logprob: -1.1498215198516846
    3. '               ' → logprob: -3.0248215198516846
    4. '                   ' → logprob: -4.024821758270264
    5. 'for' → logprob: -4.399821758270264
    6. '   ' → logprob: -5.649821758270264
    7. ' for' → logprob: -5.649821758270264
    8. 'à' → logprob: -6.274821758270264
    9. ' à' → logprob: -6.774821758270264
    10. ' ceux' → logprob: -7.899821758270264

Token 1180: ' groupes' (ID: 72206)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.20599763095378876
    2. 'groups' → logprob: -1.8309975862503052
    3. 'removed' → logprob: -5.080997467041016
    4. 'group' → logprob: -5.205997467041016
    5. 'stones' → logprob: -5.455997467041016
    6. 'scores' → logprob: -6.205997467041016
    7. 'score' → logprob: -6.455997467041016
    8. 'for' → logprob: -6.580997467041016
    9. 'capt' → logprob: -6.955997467041016
    10. '#' → logprob: -7.455997467041016

Token 1181: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.17830000817775726
    2. 'to' → logprob: -2.303299903869629
    3. 'for' → logprob: -3.553299903869629
    4. 'sans' → logprob: -4.178299903869629
    5. '_to' → logprob: -5.303299903869629
    6. 'without' → logprob: -5.553299903869629
    7. 'qui' → logprob: -6.178299903869629
    8. '               ' → logprob: -6.303299903869629
    9. ' à' → logprob: -6.428299903869629
    10. '                   ' → logprob: -6.803299903869629

Token 1182: ' supprimer' (ID: 119553)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.002282053232192993
    2. 'supp' → logprob: -6.75228214263916
    3. 's' → logprob: -8.00228214263916
    4. 'ret' → logprob: -8.12728214263916
    5. ' supprimer' → logprob: -8.75228214263916
    6. 'remove' → logprob: -8.87728214263916
    7. 'reten' → logprob: -9.75228214263916
    8. 'su' → logprob: -9.87728214263916
    9. 'capt' → logprob: -10.50228214263916
    10. '_sup' → logprob: -11.50228214263916

Token 1183: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08059724420309067
    2. 'for' → logprob: -3.080597162246704
    3. 'to' → logprob: -4.330597400665283
    4. ' for' → logprob: -4.330597400665283
    5. ' to' → logprob: -5.455597400665283
    6. ',' → logprob: -8.455596923828125
    7. '```' → logprob: -9.205596923828125
    8. ':' → logprob: -9.705596923828125
    9. 'deleted' → logprob: -9.955596923828125
    10. '                
' → logprob: -9.955596923828125

Token 1184: 'sans' (ID: 106726)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02252810448408127
    2. 'to' → logprob: -4.147528171539307
    3. 'groups' → logprob: -6.022528171539307
    4. ' for' → logprob: -6.022528171539307
    5. 'group' → logprob: -8.022527694702148
    6. 'stone' → logprob: -8.522527694702148
    7. 'g' → logprob: -8.647527694702148
    8. 'pour' → logprob: -8.647527694702148
    9. '               ' → logprob: -8.772527694702148
    10. ' to' → logprob: -8.897527694702148

Token 1185: ' sommet' (ID: 130502)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -1.0262932777404785
    2. 'adj' → logprob: -1.1512932777404785
    3. ' somm' → logprob: -1.7762932777404785
    4. 's' → logprob: -2.4012932777404785
    5. ' empty' → logprob: -3.9012932777404785
    6. 'som' → logprob: -4.1512932777404785
    7. ' sommet' → logprob: -4.1512932777404785
    8. '_empty' → logprob: -5.6512932777404785
    9. 'vo' → logprob: -6.7762932777404785
    10. 'vide' → logprob: -6.7762932777404785

Token 1186: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6687315702438354
    2. 'vide' → logprob: -1.2937315702438354
    3. ' vide' → logprob: -2.043731689453125
    4. ' adjacent' → logprob: -3.043731689453125
    5. '_adj' → logprob: -4.293731689453125
    6. ' adj' → logprob: -4.793731689453125
    7. 's' → logprob: -5.418731689453125
    8. 'empty' → logprob: -6.043731689453125
    9. ' empty' → logprob: -6.293731689453125
    10. '_empty' → logprob: -6.543731689453125

Token 1187: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.07419238984584808
    2. ' vide' → logprob: -2.6991922855377197
    3. 'vid' → logprob: -6.074192523956299
    4. '```' → logprob: -7.699192523956299
    5. 'empty' → logprob: -7.824192523956299
    6. '_v' → logprob: -8.19919204711914
    7. ')' → logprob: -9.07419204711914
    8. '0' → logprob: -9.07419204711914
    9. ' ' → logprob: -9.32419204711914
    10. 'v' → logprob: -9.69919204711914

Token 1188: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03697444126009941
    2. 's' → logprob: -3.9119744300842285
    3. '):
' → logprob: -4.7869744300842285
    4. '(s' → logprob: -5.7869744300842285
    5. ')' → logprob: -5.9119744300842285
    6. '               ' → logprob: -7.2869744300842285
    7. ' )
' → logprob: -8.036974906921387
    8. ')

' → logprob: -8.536974906921387
    9. '                   ' → logprob: -8.661974906921387
    10. 'e' → logprob: -8.911974906921387

Token 1189: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001756456564180553
    2. 'for' → logprob: -6.75175666809082
    3. ' for' → logprob: -7.50175666809082
    4. '```' → logprob: -10.87675666809082
    5. '   ' → logprob: -12.12675666809082
    6. '
' → logprob: -12.50175666809082
    7. '                
' → logprob: -13.12675666809082
    8. '#' → logprob: -14.37675666809082
    9. 'import' → logprob: -14.62675666809082
    10. ',' → logprob: -14.75175666809082

Token 1190: ' remove' (ID: 6234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6694213151931763
    2. 'to' → logprob: -1.1694213151931763
    3. 'groups' → logprob: -2.4194211959838867
    4. '               ' → logprob: -3.0444211959838867
    5. ' for' → logprob: -4.169421195983887
    6. ' to' → logprob: -4.544421195983887
    7. 'scores' → logprob: -4.919421195983887
    8. 'score' → logprob: -6.169421195983887
    9. 'removed' → logprob: -6.294421195983887
    10. ' groups' → logprob: -6.544421195983887

Token 1191: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.17711816728115082
    2. 'd' → logprob: -1.927118182182312
    3. ' =' → logprob: -5.302118301391602
    4. '_list' → logprob: -5.427118301391602
    5. 's' → logprob: -5.427118301391602
    6. '_positions' → logprob: -6.927118301391602
    7. '_candidates' → logprob: -7.177118301391602
    8. 'groups' → logprob: -8.177118301391602
    9. '=' → logprob: -8.552118301391602
    10. '_group' → logprob: -8.927118301391602

Token 1192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761387944221497
    2. ' =' → logprob: -0.8261387944221497
    3. '=[]' → logprob: -8.576138496398926
    4. '=[]
' → logprob: -12.326138496398926
    5. '   ' → logprob: -12.951138496398926
    6. ' ' → logprob: -13.826138496398926
    7. '[]' → logprob: -13.951138496398926
    8. 's' → logprob: -14.826138496398926
    9. ':' → logprob: -14.826138496398926
    10. '  ' → logprob: -15.076138496398926

Token 1193: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.007042378652840853
    2. '[]' → logprob: -5.257042407989502
    3. '[(' → logprob: -7.257042407989502
    4. '[' → logprob: -7.257042407989502
    5. '[]

' → logprob: -8.007041931152344
    6. ' []
' → logprob: -10.257041931152344
    7. '[
' → logprob: -11.132041931152344
    8. '[i' → logprob: -12.507041931152344
    9. ' [' → logprob: -13.382041931152344
    10. '[s' → logprob: -13.382041931152344

Token 1194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0048942966386675835
    2. 'for' → logprob: -5.754894256591797
    3. ' for' → logprob: -6.379894256591797
    4. '   ' → logprob: -11.629894256591797
    5. '```' → logprob: -12.129894256591797
    6. '           ' → logprob: -13.754894256591797
    7. '                   ' → logprob: -13.754894256591797
    8. '                
' → logprob: -13.879894256591797
    9. '
' → logprob: -14.004894256591797
    10. '              ' → logprob: -14.379894256591797

Token 1195: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008142773061990738
    2. ' for' → logprob: -5.508142948150635
    3. '               ' → logprob: -5.508142948150635
    4. '```' → logprob: -13.508142471313477
    5. '   ' → logprob: -14.508142471313477
    6. '           ' → logprob: -15.758142471313477
    7. '                   ' → logprob: -16.008142471313477
    8. '              ' → logprob: -16.133142471313477
    9. '
' → logprob: -16.883142471313477
    10. '	for' → logprob: -17.008142471313477

Token 1196: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.18267464637756348
    2. 'num' → logprob: -2.6826746463775635
    3. '(st' → logprob: -3.3076746463775635
    4. 'color' → logprob: -3.8076746463775635
    5. '(' → logprob: -4.182674407958984
    6. 'number' → logprob: -4.557674407958984
    7. '(s' → logprob: -5.932674407958984
    8. '(num' → logprob: -6.057674407958984
    9. '(number' → logprob: -6.307674407958984
    10. 'group' → logprob: -6.557674407958984

Token 1197: '_num' (ID: 9834)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.004946496803313494
    2. 'number' → logprob: -6.004946708679199
    3. '_type' → logprob: -6.504946708679199
    4. ',' → logprob: -7.629946708679199
    5. '_num' → logprob: -8.5049467086792
    6. 'type' → logprob: -9.2549467086792
    7. '               ' → logprob: -10.0049467086792
    8. ',_' → logprob: -10.7549467086792
    9. '_,' → logprob: -11.2549467086792
    10. '_' → logprob: -11.2549467086792

Token 1198: ',pos' (ID: 128292)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000892759533599019
    2. ',g' → logprob: -8.375892639160156
    3. ',pos' → logprob: -8.500892639160156
    4. ',_' → logprob: -9.000892639160156
    5. 'ber' → logprob: -10.000892639160156
    6. ' ,' → logprob: -10.125892639160156
    7. ',num' → logprob: -10.625892639160156
    8. ',s' → logprob: -10.625892639160156
    9. 'er' → logprob: -10.875892639160156
    10. ',new' → logprob: -11.000892639160156

Token 1199: '_list' (ID: 4162)
  Prédit: 'itions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.05246799811720848
    2. 's' → logprob: -3.3024680614471436
    3. ',' → logprob: -4.4274678230285645
    4. '_groups' → logprob: -7.6774678230285645
    5. '_positions' → logprob: -7.8024678230285645
    6. 'ITIONS' → logprob: -8.177468299865723
    7. 'positions' → logprob: -8.427468299865723
    8. ' in' → logprob: -8.677468299865723
    9. 'ist' → logprob: -9.052468299865723
    10. 'essions' → logprob: -9.302468299865723

Token 1200: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01817803643643856
    2. 'in' → logprob: -4.0181779861450195
    3. 's' → logprob: -12.39317798614502
    4. 'en' → logprob: -12.51817798614502
    5. ',' → logprob: -12.51817798614502
    6. '_in' → logprob: -12.64317798614502
    7. '   ' → logprob: -13.26817798614502
    8. '               ' → logprob: -13.39317798614502
    9. '	in' → logprob: -13.76817798614502
    10. 'er' → logprob: -14.01817798614502

Token 1201: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -7.20734242349863e-05
    2. ' groups' → logprob: -9.750072479248047
    3. '(groups' → logprob: -11.875072479248047
    4. '[' → logprob: -12.500072479248047
    5. '   ' → logprob: -13.250072479248047
    6. '[(' → logprob: -15.250072479248047
    7. '.groups' → logprob: -15.625072479248047
    8. 'group' → logprob: -16.125072479248047
    9. '
' → logprob: -16.375072479248047
    10. '       ' → logprob: -16.500072479248047

Token 1202: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.448477178812027
    2. '                   ' → logprob: -1.4484771490097046
    3. ':' → logprob: -2.073477268218994
    4. '               ' → logprob: -8.448476791381836
    5. '   ' → logprob: -8.948476791381836
    6. ',' → logprob: -9.573476791381836
    7. '                       ' → logprob: -10.073476791381836
    8. '		           ' → logprob: -10.073476791381836
    9. ' :
' → logprob: -10.198476791381836
    10. ' if' → logprob: -10.448476791381836

Token 1203: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00020449401927180588
    2. '   ' → logprob: -9.000204086303711
    3. ' if' → logprob: -10.750204086303711
    4. '               ' → logprob: -11.125204086303711
    5. 'if' → logprob: -11.375204086303711
    6. '       ' → logprob: -11.625204086303711
    7. '
' → logprob: -12.125204086303711
    8. '           ' → logprob: -12.375204086303711
    9. '		           ' → logprob: -12.500204086303711
    10. '```' → logprob: -12.625204086303711

Token 1204: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5262846946716309
    2. '                   ' → logprob: -1.0262846946716309
    3. ' if' → logprob: -3.026284694671631
    4. '               ' → logprob: -6.401284694671631
    5. '   ' → logprob: -7.526284694671631
    6. '                       ' → logprob: -9.026285171508789
    7. '       ' → logprob: -10.651285171508789
    8. '           ' → logprob: -11.526285171508789
    9. '```' → logprob: -12.151285171508789
    10. '                    ' → logprob: -12.901285171508789

Token 1205: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.02977687679231167
    2. ' not' → logprob: -3.5297768115997314
    3. 'has' → logprob: -11.279776573181152
    4. '   ' → logprob: -12.279776573181152
    5. '               ' → logprob: -12.904776573181152
    6. ' has' → logprob: -13.154776573181152
    7. '                   ' → logprob: -13.404776573181152
    8. '(not' → logprob: -13.529776573181152
    9. '	not' → logprob: -13.779776573181152
    10. '!' → logprob: -15.529776573181152

Token 1206: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.0013278567930683494
    2. ' has' → logprob: -6.626327991485596
    3. '(has' → logprob: -13.751327514648438
    4. '   ' → logprob: -15.126327514648438
    5. '	has' → logprob: -15.251327514648438
    6. 'have' → logprob: -16.501327514648438
    7. 'ha' → logprob: -16.501327514648438
    8. ' ' → logprob: -17.251327514648438
    9. '.has' → logprob: -17.376327514648438
    10. '
' → logprob: -17.501327514648438

Token 1207: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -3.35706390615087e-05
    2. 'empty' → logprob: -10.375033378601074
    3. '_EMPTY' → logprob: -14.000033378601074
    4. '_' → logprob: -15.375033378601074
    5. 'Empty' → logprob: -15.750033378601074
    6. '```' → logprob: -15.875033378601074
    7. ' empty' → logprob: -16.00003433227539
    8. 's' → logprob: -16.50003433227539
    9. ')_' → logprob: -16.50003433227539
    10. '
' → logprob: -16.50003433227539

Token 1208: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -3.35706390615087e-05
    2. '_ad' → logprob: -10.875033378601074
    3. ' _' → logprob: -12.125033378601074
    4. '_' → logprob: -12.250033378601074
    5. 'adj' → logprob: -13.625033378601074
    6. '```' → logprob: -14.250033378601074
    7. ''_' → logprob: -14.625033378601074
    8. ' ' → logprob: -15.250033378601074
    9. ')_' → logprob: -15.750033378601074
    10. ' adjacent' → logprob: -16.12503433227539

Token 1209: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.00031425125780515373
    2. 'ac' → logprob: -8.625314712524414
    3. 'cent' → logprob: -10.000314712524414
    4. 'acency' → logprob: -10.750314712524414
    5. '(' → logprob: -11.000314712524414
    6. 'ent' → logprob: -11.500314712524414
    7. '```' → logprob: -12.750314712524414
    8. 'adj' → logprob: -12.750314712524414
    9. 'acen' → logprob: -13.250314712524414
    10. 'aced' → logprob: -13.312814712524414

Token 1210: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -3.3213025744771585e-05
    2. '(' → logprob: -11.125033378601074
    3. ' (' → logprob: -11.125033378601074
    4. '((' → logprob: -13.000033378601074
    5. 'pos' → logprob: -14.375033378601074
    6. '(position' → logprob: -15.000033378601074
    7. ',pos' → logprob: -15.500033378601074
    8. '(remove' → logprob: -16.500032424926758
    9. '(group' → logprob: -17.250032424926758
    10. '[pos' → logprob: -17.250032424926758

Token 1211: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.20877951383590698
    2. 'acent' → logprob: -1.7087795734405518
    3. '(pos' → logprob: -6.458779335021973
    4. 'pos' → logprob: -7.458779335021973
    5. 'list' → logprob: -7.458779335021973
    6. 'ected' → logprob: -7.583779335021973
    7. 'ac' → logprob: -7.708779335021973
    8. 'ent' → logprob: -7.708779335021973
    9. 'os' → logprob: -7.833779335021973
    10. 'ect' → logprob: -8.208779335021973

Token 1212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20167507231235504
    2. ',new' → logprob: -1.7016750574111938
    3. '(new' → logprob: -9.451675415039062
    4. ' ,' → logprob: -9.576675415039062
    5. 'new' → logprob: -10.076675415039062
    6. ',
' → logprob: -10.201675415039062
    7. '                   ' → logprob: -11.576675415039062
    8. ',(' → logprob: -12.076675415039062
    9. '(' → logprob: -12.951675415039062
    10. '```' → logprob: -13.201675415039062

Token 1213: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0013302408624440432
    2. ' new' → logprob: -6.626330375671387
    3. '```' → logprob: -13.626330375671387
    4. '                   ' → logprob: -14.251330375671387
    5. '
' → logprob: -14.376330375671387
    6. 'board' → logprob: -15.126330375671387
    7. ')new' → logprob: -15.251330375671387
    8. '   ' → logprob: -15.376330375671387
    9. 'New' → logprob: -15.501330375671387
    10. '	new' → logprob: -15.751330375671387

Token 1214: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -9.610702363715973e-06
    2. 'board' → logprob: -11.625009536743164
    3. 'new' → logprob: -15.500009536743164
    4. '_BOARD' → logprob: -15.625009536743164
    5. 'Board' → logprob: -16.500009536743164
    6. '
' → logprob: -16.875009536743164
    7. '_' → logprob: -17.125009536743164
    8. 'oard' → logprob: -17.375009536743164
    9. '```' → logprob: -17.375009536743164
    10. '_b' → logprob: -17.625009536743164

Token 1215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004307988099753857
    2. '):
' → logprob: -6.129308223724365
    3. '                   ' → logprob: -6.379308223724365
    4. '                       ' → logprob: -9.129307746887207
    5. ' ,' → logprob: -9.254307746887207
    6. '):' → logprob: -9.504307746887207
    7. ')' → logprob: -10.254307746887207
    8. ',
' → logprob: -10.379307746887207
    9. '               ' → logprob: -10.754307746887207
    10. '```' → logprob: -11.879307746887207

Token 1216: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -7.517272024415433e-05
    2. ' neighbors' → logprob: -9.500075340270996
    3. '_neighbors' → logprob: -16.75007438659668
    4. '               ' → logprob: -16.75007438659668
    5. 'ne' → logprob: -17.50007438659668
    6. 'neighbor' → logprob: -17.62507438659668
    7. '                   ' → logprob: -17.62507438659668
    8. '   ' → logprob: -18.37507438659668
    9. '```' → logprob: -18.37507438659668
    10. ')' → logprob: -19.00007438659668

Token 1217: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024253273382782936
    2. '):' → logprob: -4.0242533683776855
    3. ')' → logprob: -5.7742533683776855
    4. '                   ' → logprob: -6.0242533683776855
    5. '                       ' → logprob: -8.774252891540527
    6. '):

' → logprob: -8.899252891540527
    7. '):
' → logprob: -9.149252891540527
    8. '               ' → logprob: -9.524252891540527
    9. ':' → logprob: -10.274252891540527
    10. ':
' → logprob: -10.774252891540527

Token 1218: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07116729766130447
    2. '                   ' → logprob: -2.696167230606079
    3. ' and' → logprob: -7.071167469024658
    4. ':
' → logprob: -9.3211669921875
    5. ':' → logprob: -9.6961669921875
    6. 'remove' → logprob: -10.4461669921875
    7. ',' → logprob: -10.5711669921875
    8. '               ' → logprob: -10.6961669921875
    9. ' remove' → logprob: -10.6961669921875
    10. '
' → logprob: -10.9461669921875

Token 1219: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' (adapté à ' remove') → logprob: -0.7019225358963013
    2. '                       ' → logprob: -1.3269225358963013
    3. 'if' → logprob: -1.7019225358963013
    4. ' if' → logprob: -3.4519224166870117
    5. '                   ' → logprob: -4.076922416687012
    6. ' remove' → logprob: -5.326922416687012
    7. '                           ' → logprob: -6.201922416687012
    8. '   ' → logprob: -7.701922416687012
    9. '               ' → logprob: -8.826922416687012
    10. '#' → logprob: -9.326922416687012

Token 1220: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -5.512236498361744e-07
    2. '                   ' → logprob: -16.125
    3. 'groups' → logprob: -16.625
    4. 'remove' → logprob: -16.625
    5. '_tokens' → logprob: -16.875
    6. '               ' → logprob: -17.125
    7. '_group' → logprob: -17.25
    8. '```' → logprob: -17.625
    9. 'Groups' → logprob: -18.0
    10. '_remove' → logprob: -18.25

Token 1221: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000730781932361424
    2. '.' → logprob: -7.250730991363525
    3. '.add' → logprob: -11.250730514526367
    4. 'append' → logprob: -13.000730514526367
    5. '.extend' → logprob: -13.125730514526367
    6. ' .' → logprob: -13.750730514526367
    7. '                       ' → logprob: -13.875730514526367
    8. '=' → logprob: -15.000730514526367
    9. '.app' → logprob: -15.375730514526367
    10. '.push' → logprob: -15.500730514526367

Token 1222: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.010827206075191498
    2. '(' → logprob: -5.13582706451416
    3. '(st' → logprob: -5.38582706451416
    4. '(pos' → logprob: -8.13582706451416
    5. ' (' → logprob: -11.76082706451416
    6. '   ' → logprob: -12.51082706451416
    7. ' ' → logprob: -14.76082706451416
    8. ' ((' → logprob: -16.010828018188477
    9. '(
' → logprob: -16.010828018188477
    10. '(stock' → logprob: -16.135828018188477

Token 1223: 'stone' (ID: 18617)
  Prédit: 'stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -8.566264295950532e-05
    2. ' stone' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.000085830688477
    4. 'ston' → logprob: -16.625085830688477
    5. 'Stone' → logprob: -16.750085830688477
    6. 'stones' → logprob: -17.000085830688477
    7. '石' → logprob: -18.000085830688477
    8. '    ' → logprob: -18.000085830688477
    9. 'STONE' → logprob: -18.000085830688477
    10. '
' → logprob: -18.875085830688477

Token 1224: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0010361451422795653
    2. 'num' → logprob: -6.876036167144775
    3. '[' → logprob: -14.501035690307617
    4. '1' → logprob: -14.876035690307617
    5. '_' → logprob: -15.126035690307617
    6. 'Num' → logprob: -15.126035690307617
    7. '0' → logprob: -15.501035690307617
    8. ' num' → logprob: -15.876035690307617
    9. '[num' → logprob: -15.876035690307617
    10. '	num' → logprob: -16.251035690307617

Token 1225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029817141592502594
    2. ',pos' → logprob: -3.5298171043395996
    3. ' ,' → logprob: -9.779817581176758
    4. '                   ' → logprob: -12.279817581176758
    5. ',p' → logprob: -13.154817581176758
    6. '                       ' → logprob: -13.279817581176758
    7. '               ' → logprob: -13.904817581176758
    8. ',len' → logprob: -15.279817581176758
    9. '```' → logprob: -16.154817581176758
    10. ',
' → logprob: -16.529817581176758

Token 1226: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.547789674485102e-05
    2. ' pos' → logprob: -10.250035285949707
    3. '[pos' → logprob: -20.375036239624023
    4. 'position' → logprob: -22.250036239624023
    5. '	pos' → logprob: -23.125036239624023
    6. '   ' → logprob: -23.750036239624023
    7. '(pos' → logprob: -24.000036239624023
    8. '           ' → logprob: -24.250036239624023
    9. '                   ' → logprob: -24.375036239624023
    10. 'len' → logprob: -24.625036239624023

Token 1227: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0003502434410620481
    2. 'list' → logprob: -8.000349998474121
    3. 'List' → logprob: -12.500349998474121
    4. 'ist' → logprob: -13.000349998474121
    5. '_lists' → logprob: -13.000349998474121
    6. 'l' → logprob: -13.375349998474121
    7. 'liste' → logprob: -13.875349998474121
    8. 's' → logprob: -13.875349998474121
    9. 'lst' → logprob: -14.500349998474121
    10. 'itions' → logprob: -14.625349998474121

Token 1228: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00690517108887434
    2. '))
' → logprob: -5.0069050788879395
    3. ')' → logprob: -9.506905555725098
    4. '                   ' → logprob: -10.006905555725098
    5. '                       ' → logprob: -10.631905555725098
    6. '               ' → logprob: -10.756905555725098
    7. '))

' → logprob: -11.756905555725098
    8. ')))' → logprob: -12.631905555725098
    9. '))}
' → logprob: -12.631905555725098
    10. '));' → logprob: -13.006905555725098

Token 1229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00814560055732727
    2. '
' → logprob: -4.883145809173584
    3. '```' → logprob: -8.258145332336426
    4. '                
' → logprob: -8.633145332336426
    5. '                   ' → logprob: -9.758145332336426
    6. '           ' → logprob: -11.883145332336426
    7. 'for' → logprob: -11.883145332336426
    8. '                       ' → logprob: -12.133145332336426
    9. '  
' → logprob: -12.508145332336426
    10. '    
' → logprob: -12.508145332336426

Token 1230: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44638869166374207
    2. '#' (adapté à ' #') → logprob: -1.5713887214660645
    3. 'for' → logprob: -1.9463887214660645
    4. 'score' → logprob: -5.0713887214660645
    5. ' for' → logprob: -6.8213887214660645
    6. '```' → logprob: -6.9463887214660645
    7. '                
' → logprob: -8.196388244628906
    8. 'total' → logprob: -8.196388244628906
    9. 'scores' → logprob: -8.946388244628906
    10. ' #' → logprob: -8.946388244628906

Token 1231: ' Calcul' (ID: 57243)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.7919946312904358
    2. '#' → logprob: -1.166994571685791
    3. 'for' → logprob: -2.041994571685791
    4. 'removed' → logprob: -3.041994571685791
    5. 'total' → logprob: -3.416994571685791
    6. 'stones' → logprob: -4.916994571685791
    7. 'count' → logprob: -5.666994571685791
    8. 'nb' → logprob: -5.916994571685791
    9. '               ' → logprob: -6.041994571685791
    10. 'num' → logprob: -6.416994571685791

Token 1232: ' du' (ID: 1462)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031135229393839836
    2. ' du' → logprob: -4.156135082244873
    3. 'du' → logprob: -4.531135082244873
    4. 'er' → logprob: -5.781135082244873
    5. 'score' → logprob: -7.406135082244873
    6. '                   ' → logprob: -9.031135559082031
    7. '_score' → logprob: -9.281135559082031
    8. ' score' → logprob: -9.656135559082031
    9. ' of' → logprob: -10.156135559082031
    10. '           ' → logprob: -10.531135559082031

Token 1233: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0007943779928609729
    2. 'removed' → logprob: -7.625794410705566
    3. 'total' → logprob: -8.875794410705566
    4. 'player' → logprob: -9.250794410705566
    5. ' score' → logprob: -11.375794410705566
    6. 'delta' → logprob: -11.750794410705566
    7. 'remove' → logprob: -11.875794410705566
    8. 'net' → logprob: -11.875794410705566
    9. '#' → logprob: -12.000794410705566
    10. 'scores' → logprob: -12.375794410705566

Token 1234: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14460402727127075
    2. 'score' → logprob: -2.019603967666626
    3. 'total' → logprob: -7.519604206085205
    4. 'player' → logprob: -7.519604206085205
    5. 'removed' → logprob: -8.019603729248047
    6. ' score' → logprob: -9.144603729248047
    7. 'user' → logprob: -9.144603729248047
    8. '                
' → logprob: -10.019603729248047
    9. 'scores' → logprob: -10.269603729248047
    10. '                   ' → logprob: -10.394603729248047

Token 1235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005904443096369505
    2. 'score' → logprob: -7.5005903244018555
    3. ' score' → logprob: -11.000590324401855
    4. '                
' → logprob: -11.750590324401855
    5. 'total' → logprob: -13.125590324401855
    6. '              ' → logprob: -13.125590324401855
    7. '                   ' → logprob: -13.375590324401855
    8. '```' → logprob: -13.625590324401855
    9. '                ' → logprob: -13.750590324401855
    10. '   ' → logprob: -14.000590324401855

Token 1236: ' gain' (ID: 11621)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.25674477219581604
    2. '               ' → logprob: -1.8817447423934937
    3. 'player' → logprob: -2.756744861602783
    4. 'total' → logprob: -5.381744861602783
    5. 'removed' → logprob: -6.381744861602783
    6. 'user' → logprob: -7.006744861602783
    7. ' player' → logprob: -7.381744861602783
    8. '                   ' → logprob: -7.631744861602783
    9. ' score' → logprob: -7.631744861602783
    10. 'own' → logprob: -8.256744384765625

Token 1237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02821158617734909
    2. '=' → logprob: -3.6532115936279297
    3. '               ' → logprob: -7.02821159362793
    4. '                   ' → logprob: -7.27821159362793
    5. '                ' → logprob: -8.65321159362793
    6. '_score' → logprob: -9.90321159362793
    7. '   ' → logprob: -11.02821159362793
    8. 's' → logprob: -11.02821159362793
    9. '                       ' → logprob: -11.27821159362793
    10. '                    ' → logprob: -11.65321159362793

Token 1238: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016027313540689647
    2. ' ' → logprob: -9.000160217285156
    3. 'sum' → logprob: -10.500160217285156
    4. '                   ' → logprob: -12.375160217285156
    5. '               ' → logprob: -12.875160217285156
    6. '   ' → logprob: -14.125160217285156
    7. ' sum' → logprob: -14.375160217285156
    8. '                       ' → logprob: -14.750160217285156
    9. 'len' → logprob: -15.250160217285156
    10. '           ' → logprob: -16.375160217285156

Token 1239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.657694418914616e-05
    2. ' ' → logprob: -10.250056266784668
    3. 'sum' → logprob: -11.000056266784668
    4. '                   ' → logprob: -13.750056266784668
    5. '               ' → logprob: -14.000056266784668
    6. '   ' → logprob: -14.375056266784668
    7. '                       ' → logprob: -14.875056266784668
    8. 'len' → logprob: -15.250056266784668
    9. '
' → logprob: -15.250056266784668
    10. '           ' → logprob: -15.375056266784668

Token 1240: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022426463663578033
    2. '
' → logprob: -4.397426605224609
    3. 'for' → logprob: -4.897426605224609
    4. ' for' → logprob: -6.272426605224609
    5. '                
' → logprob: -8.27242660522461
    6. '                   ' → logprob: -9.14742660522461
    7. '                ' → logprob: -10.39742660522461
    8. '               
' → logprob: -10.77242660522461
    9. '```' → logprob: -11.02242660522461
    10. '                       ' → logprob: -11.39742660522461

Token 1241: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002732240129262209
    2. 'for' → logprob: -6.252732276916504
    3. ' for' → logprob: -7.377732276916504
    4. '```' → logprob: -9.127732276916504
    5. '
' → logprob: -10.377732276916504
    6. '                   ' → logprob: -10.752732276916504
    7. '                ' → logprob: -12.127732276916504
    8. '                
' → logprob: -12.877732276916504
    9. '                       ' → logprob: -13.127732276916504
    10. '              ' → logprob: -13.252732276916504

Token 1242: ' lose' (ID: 12577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011753437109291553
    2. '               ' → logprob: -4.511753559112549
    3. ' for' → logprob: -7.261753559112549
    4. '
' → logprob: -13.13675308227539
    5. '```' → logprob: -14.26175308227539
    6. '                   ' → logprob: -14.38675308227539
    7. '	for' → logprob: -15.76175308227539
    8. '   ' → logprob: -16.76175308227539
    9. '                
' → logprob: -17.26175308227539
    10. '              ' → logprob: -17.26175308227539

Token 1243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28283455967903137
    2. '=' → logprob: -1.407834529876709
    3. '               ' → logprob: -7.157834529876709
    4. 'for' → logprob: -8.032835006713867
    5. '                   ' → logprob: -8.532835006713867
    6. '                ' → logprob: -9.032835006713867
    7. ' ' → logprob: -10.282835006713867
    8. ' +=' → logprob: -10.532835006713867
    9. ')' → logprob: -11.032835006713867
    10. ' for' → logprob: -11.282835006713867

Token 1244: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013279760023579001
    2. ' ' → logprob: -6.626327991485596
    3. 'sum' → logprob: -14.501327514648438
    4. 'len' → logprob: -14.626327514648438
    5. '                   ' → logprob: -15.626327514648438
    6. '   ' → logprob: -15.751327514648438
    7. '               ' → logprob: -15.813827514648438
    8. '(' → logprob: -16.126327514648438
    9. ' sum' → logprob: -16.251327514648438
    10. '                       ' → logprob: -16.376327514648438

Token 1245: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001427538663847372
    2. ' ' → logprob: -8.875143051147461
    3. 'sum' → logprob: -14.500143051147461
    4. 'len' → logprob: -14.875143051147461
    5. '[]' → logprob: -15.000143051147461
    6. 'player' → logprob: -15.375143051147461
    7. '1' → logprob: -15.625143051147461
    8. '   ' → logprob: -15.625143051147461
    9. '(' → logprob: -16.06264305114746
    10. '[' → logprob: -16.18764305114746

Token 1246: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00433979881927371
    2. 'for' → logprob: -5.629339694976807
    3. ' for' → logprob: -7.254339694976807
    4. '                   ' → logprob: -11.254340171813965
    5. '```' → logprob: -12.254340171813965
    6. '
' → logprob: -12.379340171813965
    7. '                
' → logprob: -12.879340171813965
    8. '                ' → logprob: -13.129340171813965
    9. '              ' → logprob: -13.379340171813965
    10. '           ' → logprob: -13.379340171813965

Token 1247: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000556843588128686
    2. 'for' → logprob: -8.125556945800781
    3. ' for' → logprob: -8.625556945800781
    4. '```' → logprob: -10.500556945800781
    5. '                   ' → logprob: -10.750556945800781
    6. '
' → logprob: -11.250556945800781
    7. '                
' → logprob: -11.625556945800781
    8. '                ' → logprob: -13.125556945800781
    9. '              ' → logprob: -13.125556945800781
    10. '           ' → logprob: -13.375556945800781

Token 1248: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044519953429698944
    2. '               ' → logprob: -3.2945199012756348
    3. ' for' → logprob: -5.044519901275635
    4. '                   ' → logprob: -11.919520378112793
    5. '	for' → logprob: -13.419520378112793
    6. '   ' → logprob: -13.669520378112793
    7. '           ' → logprob: -13.669520378112793
    8. '```' → logprob: -13.669520378112793
    9. '              ' → logprob: -14.919520378112793
    10. '
' → logprob: -15.294520378112793

Token 1249: ' Sup' (ID: 13606)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013749953359365463
    2. '               ' → logprob: -6.751375198364258
    3. ' for' → logprob: -8.501375198364258
    4. '                   ' → logprob: -14.251375198364258
    5. '```' → logprob: -14.376375198364258
    6. '
' → logprob: -15.376375198364258
    7. '   ' → logprob: -16.001375198364258
    8. '           ' → logprob: -16.376375198364258
    9. '	for' → logprob: -16.876375198364258
    10. '                ' → logprob: -18.751375198364258

Token 1250: 'primer' (ID: 55821)
  Prédit: 'primer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primer' → logprob: -0.07806110382080078
    2. 'prim' → logprob: -3.078061103820801
    3. 'for' → logprob: -4.078061103820801
    4. 'pr' → logprob: -5.578061103820801
    5. 'prime' → logprob: -5.703061103820801
    6. 'p' → logprob: -5.828061103820801
    7. 'press' → logprob: -7.453061103820801
    8. '               ' → logprob: -8.3280611038208
    9. ' for' → logprob: -8.5780611038208
    10. 'primir' → logprob: -8.7030611038208

Token 1251: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3137008249759674
    2. ' for' → logprob: -1.313700795173645
    3. '               ' → logprob: -7.8137006759643555
    4. ' pour' → logprob: -10.938700675964355
    5. '```' → logprob: -12.188700675964355
    6. '                   ' → logprob: -12.938700675964355
    7. 'pour' → logprob: -13.188700675964355
    8. '                ' → logprob: -13.438700675964355
    9. 'token' → logprob: -13.688700675964355
    10. '                
' → logprob: -14.063700675964355

Token 1252: ' pierres' (ID: 115592)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.47397086024284363
    2. 'pos' → logprob: -2.473970890045166
    3. 'group' → logprob: -2.473970890045166
    4. 'for' → logprob: -2.973970890045166
    5. 'groups' → logprob: -2.973970890045166
    6. 'stones' → logprob: -3.223970890045166
    7. ' for' → logprob: -4.723970890045166
    8. ' positions' → logprob: -4.848970890045166
    9. ' stones' → logprob: -4.848970890045166
    10. 'stone' → logprob: -4.973970890045166

Token 1253: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20234981179237366
    2. ' for' → logprob: -1.9523497819900513
    3. '               ' → logprob: -3.202349901199341
    4. '                   ' → logprob: -8.202349662780762
    5. ' pour' → logprob: -9.077349662780762
    6. '
' → logprob: -9.452349662780762
    7. 'pour' → logprob: -10.077349662780762
    8. ':
' → logprob: -11.702349662780762
    9. 'dans' → logprob: -11.702349662780762
    10. '                
' → logprob: -11.702349662780762

Token 1254: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009570498019456863
    2. 'for' → logprob: -5.009570598602295
    3. ' for' → logprob: -6.009570598602295
    4. ' pour' → logprob: -8.759570121765137
    5. '                   ' → logprob: -9.509570121765137
    6. 'pour' → logprob: -10.009570121765137
    7. '```' → logprob: -10.134570121765137
    8. ' des' → logprob: -11.134570121765137
    9. '                       ' → logprob: -11.509570121765137
    10. '                ' → logprob: -11.509570121765137

Token 1255: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09000135958194733
    2. ' for' → logprob: -2.840001344680786
    3. '               ' → logprob: -3.590001344680786
    4. '```' → logprob: -10.340001106262207
    5. '                   ' → logprob: -11.590001106262207
    6. '   ' → logprob: -13.715001106262207
    7. '           ' → logprob: -13.965001106262207
    8. '
' → logprob: -14.090001106262207
    9. '	for' → logprob: -14.590001106262207
    10. '``' → logprob: -14.965001106262207

Token 1256: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.039518170058727264
    2. '(' → logprob: -4.289518356323242
    3. '(st' → logprob: -4.539518356323242
    4. ' stone' → logprob: -5.039518356323242
    5. '(s' → logprob: -5.164518356323242
    6. '(_,' → logprob: -6.664518356323242
    7. ' (' → logprob: -8.289518356323242
    8. 's' → logprob: -8.789518356323242
    9. 'sn' → logprob: -8.914518356323242
    10. '(sn' → logprob: -9.789518356323242

Token 1257: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00019066639652010053
    2. 'num' → logprob: -8.750190734863281
    3. '_' → logprob: -12.000190734863281
    4. '               ' → logprob: -12.250190734863281
    5. ',' → logprob: -12.500190734863281
    6. '```' → logprob: -13.000190734863281
    7. ',num' → logprob: -13.250190734863281
    8. '                   ' → logprob: -13.375190734863281
    9. '_token' → logprob: -13.750190734863281
    10. '_type' → logprob: -13.875190734863281

Token 1258: ',' (ID: 11)
  Prédit: ',pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',pos' → logprob: -0.038058821111917496
    2. ',' → logprob: -3.2880587577819824
    3. ' ,' → logprob: -11.16305923461914
    4. ',p' → logprob: -14.16305923461914
    5. ',val' → logprob: -14.41305923461914
    6. ',num' → logprob: -14.41305923461914
    7. ',n' → logprob: -15.53805923461914
    8. ',len' → logprob: -15.91305923461914
    9. ',_' → logprob: -16.03805923461914
    10. '_,' → logprob: -16.41305923461914

Token 1259: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00977616012096405
    2. 'positions' → logprob: -4.6347761154174805
    3. ' pos' → logprob: -11.25977611541748
    4. ' positions' → logprob: -12.88477611541748
    5. 'position' → logprob: -13.25977611541748
    6. 'group' → logprob: -13.38477611541748
    7. 'poss' → logprob: -15.00977611541748
    8. 'poses' → logprob: -15.25977611541748
    9. '	pos' → logprob: -15.75977611541748
    10. 'pose' → logprob: -16.009777069091797

Token 1260: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.20299020409584045
    2. 's' → logprob: -1.702990174293518
    3. 'list' → logprob: -7.2029900550842285
    4. '               ' → logprob: -8.827990531921387
    5. 'ections' → logprob: -9.202990531921387
    6. '_LIST' → logprob: -9.577990531921387
    7. '                   ' → logprob: -9.577990531921387
    8. '_lists' → logprob: -9.827990531921387
    9. '_lst' → logprob: -9.827990531921387
    10. 'ects' → logprob: -10.077990531921387

Token 1261: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0729517713189125
    2. '                   ' → logprob: -3.1979517936706543
    3. 'in' → logprob: -3.5729517936706543
    4. '               ' → logprob: -7.322951793670654
    5. '   ' → logprob: -7.697951793670654
    6. '                       ' → logprob: -9.197951316833496
    7. ':
' → logprob: -10.072951316833496
    8. '	in' → logprob: -10.697951316833496
    9. '                  ' → logprob: -10.822951316833496
    10. '                    ' → logprob: -10.822951316833496

Token 1262: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.0002494191285222769
    2. ' remove' → logprob: -8.375249862670898
    3. '(remove' → logprob: -11.750249862670898
    4. '   ' → logprob: -12.500249862670898
    5. '
' → logprob: -12.625249862670898
    6. '[(' → logprob: -13.875249862670898
    7. 'removed' → logprob: -14.625249862670898
    8. ' ' → logprob: -14.625249862670898
    9. '	remove' → logprob: -15.125249862670898
    10. 'groups' → logprob: -15.125249862670898

Token 1263: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.0005530327325686812
    2. '_list' → logprob: -8.000553131103516
    3. '_lists' → logprob: -10.125553131103516
    4. '```' → logprob: -10.250553131103516
    5. '_group' → logprob: -10.500553131103516
    6. '               ' → logprob: -10.625553131103516
    7. 's' → logprob: -11.125553131103516
    8. '                   ' → logprob: -11.500553131103516
    9. '(remove' → logprob: -11.750553131103516
    10. 'groups' → logprob: -11.875553131103516

Token 1264: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49590808153152466
    2. '                   ' → logprob: -1.3709080219268799
    3. ':
' → logprob: -1.9959080219268799
    4. '   ' → logprob: -7.370908260345459
    5. '               ' → logprob: -7.995908260345459
    6. '                       ' → logprob: -9.6209077835083
    7. '		           ' → logprob: -10.2459077835083
    8. '           ' → logprob: -10.8709077835083
    9. ',' → logprob: -10.9959077835083
    10. '	               ' → logprob: -11.2459077835083

Token 1265: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020060802344232798
    2. '   ' → logprob: -7.0020060539245605
    3. ' for' → logprob: -7.6270060539245605
    4. '               ' → logprob: -7.8770060539245605
    5. '                       ' → logprob: -9.502006530761719
    6. 'for' → logprob: -9.877006530761719
    7. '       ' → logprob: -10.252006530761719
    8. '           ' → logprob: -11.002006530761719
    9. '	               ' → logprob: -11.627006530761719
    10. '```' → logprob: -12.002006530761719

Token 1266: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17676198482513428
    2. ' for' → logprob: -2.551762104034424
    3. 'if' → logprob: -2.676762104034424
    4. ' if' → logprob: -4.926762104034424
    5. '                   ' → logprob: -5.301762104034424
    6. '                       ' → logprob: -6.676762104034424
    7. '   ' → logprob: -6.676762104034424
    8. '```' → logprob: -8.426761627197266
    9. '               ' → logprob: -8.801761627197266
    10. ' ' → logprob: -9.801761627197266

Token 1267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43209108710289
    2. ' =' → logprob: -1.0570911169052124
    3. '                   ' → logprob: -6.682091236114502
    4. '=len' → logprob: -6.682091236114502
    5. 'for' → logprob: -8.057090759277344
    6. '+=' → logprob: -8.682090759277344
    7. '                       ' → logprob: -9.932090759277344
    8. '_' → logprob: -9.932090759277344
    9. ' +=' → logprob: -10.432090759277344
    10. '   ' → logprob: -10.682090759277344

Token 1268: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011049113236367702
    2. ' len' → logprob: -4.511049270629883
    3. '(len' → logprob: -13.761049270629883
    4. 'sum' → logprob: -15.886049270629883
    5. '[len' → logprob: -16.761049270629883
    6. '=len' → logprob: -16.886049270629883
    7. '                   ' → logprob: -17.511049270629883
    8. '0' → logprob: -18.261049270629883
    9. '	len' → logprob: -18.761049270629883
    10. '```' → logprob: -19.011049270629883

Token 1269: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.008636434562504292
    2. 'pos' → logprob: -4.758636474609375
    3. ' pos' → logprob: -11.508636474609375
    4. '(' → logprob: -11.508636474609375
    5. ' (' → logprob: -13.508636474609375
    6. '[pos' → logprob: -15.008636474609375
    7. '(
' → logprob: -16.758636474609375
    8. '	pos' → logprob: -17.008636474609375
    9. ',pos' → logprob: -17.383636474609375
    10. '(count' → logprob: -17.758636474609375

Token 1270: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.47495681833243e-05
    2. 'list' → logprob: -11.375024795532227
    3. 'ist' → logprob: -12.500024795532227
    4. 's' → logprob: -12.625024795532227
    5. 'List' → logprob: -13.125024795532227
    6. 'l' → logprob: -13.875024795532227
    7. 'os' → logprob: -14.125024795532227
    8. 'lst' → logprob: -14.375024795532227
    9. 'pos' → logprob: -14.750024795532227
    10. '[' → logprob: -15.250024795532227

Token 1271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018123136833310127
    2. ')
' → logprob: -4.393123149871826
    3. '                   ' → logprob: -5.393123149871826
    4. '):
' → logprob: -7.018123149871826
    5. '<|end|>' → logprob: -9.518122673034668
    6. ' )' → logprob: -11.268122673034668
    7. '):' → logprob: -11.643122673034668
    8. '               ' → logprob: -11.893122673034668
    9. '   ' → logprob: -12.018122673034668
    10. ')*' → logprob: -12.393122673034668

Token 1272: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00029637437546625733
    2. '               ' → logprob: -8.875296592712402
    3. 'if' → logprob: -9.625296592712402
    4. ' if' → logprob: -10.875296592712402
    5. '
' → logprob: -11.000296592712402
    6. '                    
' → logprob: -11.125296592712402
    7. '```' → logprob: -11.125296592712402
    8. '           ' → logprob: -12.000296592712402
    9. 'for' → logprob: -12.125296592712402
    10. '                    ' → logprob: -12.875296592712402

Token 1273: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007901760749518871
    2. '                   ' → logprob: -5.257901668548584
    3. 'for' → logprob: -6.632901668548584
    4. ' if' → logprob: -6.632901668548584
    5. '```' → logprob: -11.007902145385742
    6. '               ' → logprob: -11.382902145385742
    7. ' for' → logprob: -13.132902145385742
    8. '                       ' → logprob: -14.632902145385742
    9. 'gain' → logprob: -15.132902145385742
    10. '
' → logprob: -15.632902145385742

Token 1274: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.012512595392763615
    2. ' stone' → logprob: -4.387512683868408
    3. '   ' → logprob: -13.26251220703125
    4. 'ston' → logprob: -15.01251220703125
    5. 'Stone' → logprob: -15.38751220703125
    6. '    ' → logprob: -16.13751220703125
    7. 'STONE' → logprob: -16.13751220703125
    8. '石' → logprob: -16.38751220703125
    9. 'stones' → logprob: -16.38751220703125
    10. ' ' → logprob: -16.76251220703125

Token 1275: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -2.975612187583465e-05
    2. 'num' → logprob: -10.625029563903809
    3. '_n' → logprob: -13.625029563903809
    4. '                   ' → logprob: -14.000029563903809
    5. '               ' → logprob: -14.125029563903809
    6. '==' → logprob: -14.875029563903809
    7. '_NUM' → logprob: -14.875029563903809
    8. '#' → logprob: -15.000029563903809
    9. '_' → logprob: -15.375029563903809
    10. '_number' → logprob: -15.875029563903809

Token 1276: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6417297720909119
    2. '==' → logprob: -0.7667297720909119
    3. ' !=' → logprob: -5.016729831695557
    4. '!=' → logprob: -6.016729831695557
    5. '==
' → logprob: -11.516729354858398
    6. '=' → logprob: -11.891729354858398
    7. ')==' → logprob: -13.891729354858398
    8. '==-' → logprob: -13.891729354858398
    9. ' ==
' → logprob: -14.266729354858398
    10. '()==' → logprob: -14.391729354858398

Token 1277: ' player' (ID: 5033)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.0017158739501610398
    2. ' player' → logprob: -6.376715660095215
    3. '   ' → logprob: -12.501715660095215
    4. '                   ' → logprob: -13.001715660095215
    5. '               ' → logprob: -13.126715660095215
    6. 'user' → logprob: -13.126715660095215
    7. 'C' → logprob: -14.126715660095215
    8. '	player' → logprob: -14.626715660095215
    9. '           ' → logprob: -14.751715660095215
    10. '1' → logprob: -14.751715660095215

Token 1278: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.26229822635650635
    2. ':
' → logprob: -1.6372982263565063
    3. ':' → logprob: -3.387298107147217
    4. '                   ' → logprob: -6.262298107147217
    5. '                      ' → logprob: -8.762298583984375
    6. '-' → logprob: -9.512298583984375
    7. '):
' → logprob: -10.512298583984375
    8. '                        
' → logprob: -10.512298583984375
    9. '					' → logprob: -10.637298583984375
    10. ' -' → logprob: -10.637298583984375

Token 1279: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00012773419439326972
    2. '                   ' → logprob: -9.375127792358398
    3. '               ' → logprob: -11.500127792358398
    4. '                      ' → logprob: -12.000127792358398
    5. '```' → logprob: -12.000127792358398
    6. 'lose' → logprob: -13.000127792358398
    7. ':
' → logprob: -13.000127792358398
    8. ':' → logprob: -13.250127792358398
    9. 'loss' → logprob: -13.250127792358398
    10. 'gain' → logprob: -13.375127792358398

Token 1280: ' lose' (ID: 12577)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' (adapté à ' lose') → logprob: -0.0007873523863963783
    2. '                   ' → logprob: -8.250787734985352
    3. ' lose' → logprob: -8.500787734985352
    4. '                       ' → logprob: -8.625787734985352
    5. 'gain' → logprob: -9.125787734985352
    6. '               ' → logprob: -10.875787734985352
    7. 'loss' → logprob: -11.875787734985352
    8. '                      ' → logprob: -13.500787734985352
    9. '```' → logprob: -13.750787734985352
    10. '           ' → logprob: -13.750787734985352

Token 1281: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10594736039638519
    2. ' +=' → logprob: -2.355947256088257
    3. '-=' → logprob: -5.480947494506836
    4. ' -=' → logprob: -6.480947494506836
    5. '=' → logprob: -10.730947494506836
    6. '   ' → logprob: -13.355947494506836
    7. '-' → logprob: -13.605947494506836
    8. '                   ' → logprob: -14.605947494506836
    9. ']+=' → logprob: -15.230947494506836
    10. '+' → logprob: -15.605947494506836

Token 1282: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0005530327325686812
    2. ' count' → logprob: -7.500553131103516
    3. '	count' → logprob: -20.750553131103516
    4. '(count' → logprob: -20.875553131103516
    5. '$count' → logprob: -21.875553131103516
    6. ' ' → logprob: -22.000553131103516
    7. '                   ' → logprob: -22.125553131103516
    8. '                       ' → logprob: -22.375553131103516
    9. '[count' → logprob: -22.375553131103516
    10. '   ' → logprob: -22.500553131103516

Token 1283: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02610253356397152
    2. '               ' → logprob: -4.026102542877197
    3. '
' → logprob: -5.026102542877197
    4. 'else' → logprob: -8.026102066040039
    5. ' else' → logprob: -8.026102066040039
    6. '           ' → logprob: -8.651102066040039
    7. '   ' → logprob: -9.151102066040039
    8. '                       ' → logprob: -9.276102066040039
    9. '<|end|>' → logprob: -9.776102066040039
    10. '                ' → logprob: -9.901102066040039

Token 1284: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010106886737048626
    2. 'else' → logprob: -5.385107040405273
    3. '               ' → logprob: -6.260107040405273
    4. '
' → logprob: -6.510107040405273
    5. ' else' → logprob: -6.510107040405273
    6. '```' → logprob: -7.635107040405273
    7. '           ' → logprob: -9.885107040405273
    8. '                       ' → logprob: -11.260107040405273
    9. '   ' → logprob: -11.385107040405273
    10. '                  ' → logprob: -12.135107040405273

Token 1285: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.09394655376672745
    2. ' else' → logprob: -2.5939464569091797
    3. '                   ' → logprob: -4.21894645690918
    4. '               ' → logprob: -8.71894645690918
    5. '   ' → logprob: -10.09394645690918
    6. 'elif' → logprob: -11.71894645690918
    7. '```' → logprob: -11.96894645690918
    8. '           ' → logprob: -12.59394645690918
    9. '       ' → logprob: -12.96894645690918
    10. '
' → logprob: -13.21894645690918

Token 1286: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08759122341871262
    2. ':
' → logprob: -2.7125911712646484
    3. ':' → logprob: -4.712591171264648
    4. '                   ' → logprob: -4.837591171264648
    5. '                        ' → logprob: -8.587591171264648
    6. '                      ' → logprob: -8.587591171264648
    7. '                    ' → logprob: -9.837591171264648
    8. '                           ' → logprob: -10.337591171264648
    9. '                     ' → logprob: -10.337591171264648
    10. '{
' → logprob: -10.837591171264648

Token 1287: '                       ' (ID: 968)
  Prédit: ' gain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gain' → logprob: -0.6580931544303894
    2. '                       ' → logprob: -1.1580932140350342
    3. 'gain' → logprob: -2.408093214035034
    4. '                   ' → logprob: -3.283093214035034
    5. '                    ' → logprob: -4.408092975616455
    6. ' ' → logprob: -4.783092975616455
    7. '                        ' → logprob: -5.033092975616455
    8. '+' → logprob: -5.908092975616455
    9. '               ' → logprob: -6.158092975616455
    10. '```' → logprob: -6.533092975616455

Token 1288: ' gain' (ID: 11621)
  Prédit: ' gain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gain' → logprob: -0.251949280500412
    2. 'gain' (adapté à ' gain') → logprob: -1.5019493103027344
    3. '                       ' → logprob: -11.001949310302734
    4. '_gain' → logprob: -13.876949310302734
    5. '```' → logprob: -14.376949310302734
    6. 'score' → logprob: -14.751949310302734
    7. '                   ' → logprob: -14.751949310302734
    8. '+' → logprob: -15.501949310302734
    9. ' ' → logprob: -16.001949310302734
    10. 'g' → logprob: -16.126949310302734

Token 1289: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1602608859539032
    2. '+=' → logprob: -1.9102609157562256
    3. '+' → logprob: -10.535261154174805
    4. ']+=' → logprob: -12.285261154174805
    5. ' +' → logprob: -13.035261154174805
    6. ' -=' → logprob: -13.535261154174805
    7. '+=(' → logprob: -14.535261154174805
    8. ' ' → logprob: -15.660261154174805
    9. '    ' → logprob: -15.660261154174805
    10. '            ' → logprob: -15.785261154174805

Token 1290: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -9.615255839889869e-05
    2. ' count' → logprob: -9.250096321105957
    3. '(count' → logprob: -19.37509536743164
    4. '[count' → logprob: -21.37509536743164
    5. '$count' → logprob: -21.37509536743164
    6. '	count' → logprob: -21.50009536743164
    7. '=count' → logprob: -22.50009536743164
    8. '.count' → logprob: -22.62509536743164
    9. '<count' → logprob: -22.62509536743164
    10. 'cou' → logprob: -23.00009536743164

Token 1291: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02427363023161888
    2. '                   ' → logprob: -4.27427339553833
    3. '
' → logprob: -5.89927339553833
    4. '                
' → logprob: -6.27427339553833
    5. '  
' → logprob: -6.52427339553833
    6. '<|end|>' → logprob: -6.89927339553833
    7. '    
' → logprob: -7.14927339553833
    8. ' 
' → logprob: -7.64927339553833
    9. '                    
' → logprob: -7.89927339553833
    10. ' for' → logprob: -8.524273872375488

Token 1292: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.045893874019384384
    2. '
' → logprob: -3.295893907546997
    3. '                
' → logprob: -5.545893669128418
    4. '                   ' → logprob: -6.545893669128418
    5. '    
' → logprob: -7.670893669128418
    6. '  
' → logprob: -7.670893669128418
    7. '```' → logprob: -8.045893669128418
    8. ' 
' → logprob: -8.170893669128418
    9. '                    
' → logprob: -8.295893669128418
    10. 'for' → logprob: -9.295893669128418

Token 1293: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4976615905761719
    2. '               ' → logprob: -1.3726615905761719
    3. ' for' → logprob: -2.372661590576172
    4. 'for' (adapté à ' for') → logprob: -3.122661590576172
    5. '
' → logprob: -7.747661590576172
    6. '   ' → logprob: -7.997661590576172
    7. '                       ' → logprob: -8.497661590576172
    8. '           ' → logprob: -9.372661590576172
    9. '                ' → logprob: -9.872661590576172
    10. '```' → logprob: -9.997661590576172

Token 1294: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5543359518051147
    2. '(pos' → logprob: -1.9293359518051147
    3. '(pi' → logprob: -2.4293360710144043
    4. ' (' → logprob: -2.8043360710144043
    5. '(x' → logprob: -3.3043360710144043
    6. '(' → logprob: -3.3043360710144043
    7. '(ii' → logprob: -3.5543360710144043
    8. '(ci' → logprob: -4.554336071014404
    9. 'pos' → logprob: -4.804336071014404
    10. '(si' → logprob: -5.429336071014404

Token 1295: 'pi' (ID: 3455)
  Prédit: 'pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.2565114498138428
    2. 'x' → logprob: -2.0065114498138428
    3. 'pos' → logprob: -3.7565114498138428
    4. 'ni' → logprob: -4.256511688232422
    5. 'ii' → logprob: -4.256511688232422
    6. 'i' → logprob: -4.381511688232422
    7. '(pi' → logprob: -4.631511688232422
    8. 'ci' → logprob: -5.006511688232422
    9. 'oi' → logprob: -5.631511688232422
    10. '(x' → logprob: -5.631511688232422

Token 1296: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13755680620670319
    2. 'i' → logprob: -2.637556791305542
    3. ',i' → logprob: -2.887556791305542
    4. '_i' → logprob: -6.887557029724121
    5. ' ,' → logprob: -8.887557029724121
    6. ',p' → logprob: -10.137557029724121
    7. 'pi' → logprob: -10.262557029724121
    8. '[i' → logprob: -11.262557029724121
    9. '_,' → logprob: -11.887557029724121
    10. '[' → logprob: -12.262557029724121

Token 1297: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008261365815997124
    2. 'j' → logprob: -5.008261203765869
    3. 'pi' → logprob: -6.508261203765869
    4. ')' → logprob: -11.133261680603027
    5. 'pj' → logprob: -11.508261680603027
    6. ')i' → logprob: -12.508261680603027
    7. 'p' → logprob: -12.633261680603027
    8. 'ij' → logprob: -12.633261680603027
    9. '(pi' → logprob: -12.758261680603027
    10. '
' → logprob: -12.883261680603027

Token 1298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8074162653647363e-05
    2. ' )' → logprob: -11.625018119812012
    3. 'in' → logprob: -11.750018119812012
    4. ' in' → logprob: -14.500018119812012
    5. ')
' → logprob: -14.875018119812012
    6. '),' → logprob: -15.875018119812012
    7. '```' → logprob: -17.125017166137695
    8. '   ' → logprob: -17.250017166137695
    9. ',)' → logprob: -17.875017166137695
    10. '_)' → logprob: -18.000017166137695

Token 1299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5783513784408569
    2. 'in' → logprob: -0.8283513784408569
    3. ',' → logprob: -6.2033514976501465
    4. '                   ' → logprob: -9.203351020812988
    5. ',in' → logprob: -9.453351020812988
    6. '                       ' → logprob: -10.203351020812988
    7. ' ,' → logprob: -10.203351020812988
    8. ',p' → logprob: -10.453351020812988
    9. '                           ' → logprob: -11.078351020812988
    10. '	in' → logprob: -11.203351020812988

Token 1300: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00033558503491804004
    2. ' pos' → logprob: -8.000335693359375
    3. '(pos' → logprob: -16.750335693359375
    4. 'position' → logprob: -17.125335693359375
    5. '   ' → logprob: -17.625335693359375
    6. '	pos' → logprob: -18.375335693359375
    7. '[pos' → logprob: -19.000335693359375
    8. '    ' → logprob: -19.500335693359375
    9. 'remove' → logprob: -19.875335693359375
    10. 'pi' → logprob: -20.125335693359375

Token 1301: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.664371848164592e-05
    2. 'List' → logprob: -11.750016212463379
    3. '                   ' → logprob: -12.500016212463379
    4. 'ist' → logprob: -13.500016212463379
    5. '                       ' → logprob: -14.125016212463379
    6. '               ' → logprob: -14.375016212463379
    7. 'list' → logprob: -14.750016212463379
    8. '_LIST' → logprob: -15.250016212463379
    9. '   ' → logprob: -15.500016212463379
    10. '```' → logprob: -15.500016212463379

Token 1302: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.016798939555883408
    2. ':
' → logprob: -4.266798973083496
    3. ':' → logprob: -6.141798973083496
    4. '                   ' → logprob: -8.016798973083496
    5. '                           ' → logprob: -9.266798973083496
    6. '                      ' → logprob: -11.516798973083496
    7. '                        ' → logprob: -11.891798973083496
    8. '   ' → logprob: -11.891798973083496
    9. '       ' → logprob: -12.141798973083496
    10. 'new' → logprob: -12.516798973083496

Token 1303: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001250942936167121
    2. ' new' → logprob: -7.001250743865967
    3. 'new' → logprob: -8.501251220703125
    4. '                   ' → logprob: -9.126251220703125
    5. '                           ' → logprob: -11.626251220703125
    6. '   ' → logprob: -11.876251220703125
    7. '                               ' → logprob: -12.876251220703125
    8. '```' → logprob: -13.251251220703125
    9. '                        
' → logprob: -14.126251220703125
    10. '                      ' → logprob: -14.251251220703125

Token 1304: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4742248058319092
    2. 'new' (adapté à ' new') → logprob: -0.9742248058319092
    3. '   ' → logprob: -9.849225044250488
    4. '                           ' → logprob: -9.974225044250488
    5. '                       ' → logprob: -10.224225044250488
    6. '	new' → logprob: -12.599225044250488
    7. '                               ' → logprob: -12.599225044250488
    8. '                   ' → logprob: -12.974225044250488
    9. '_new' → logprob: -14.349225044250488
    10. 'newline' → logprob: -14.599225044250488

Token 1305: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.750000953674316
    3. 'board' → logprob: -14.750000953674316
    4. '_BOARD' → logprob: -15.625000953674316
    5. '	board' → logprob: -16.375001907348633
    6. 'Board' → logprob: -16.500001907348633
    7. '```' → logprob: -16.625001907348633
    8. '               ' → logprob: -16.875001907348633
    9. '_b' → logprob: -17.000001907348633
    10. '   ' → logprob: -17.125001907348633

Token 1306: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '                   ' → logprob: -14.375000953674316
    3. ' [' → logprob: -15.750000953674316
    4. '```' → logprob: -15.875000953674316
    5. '                       ' → logprob: -16.125001907348633
    6. 'pi' → logprob: -16.750001907348633
    7. '[i' → logprob: -16.875001907348633
    8. '                           ' → logprob: -17.250001907348633
    9. '               ' → logprob: -18.250001907348633
    10. '(pi' → logprob: -18.500001907348633

Token 1307: 'pi' (ID: 3455)
  Prédit: 'pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.013865873217582703
    2. '[' → logprob: -4.638865947723389
    3. '(pi' → logprob: -5.513865947723389
    4. ' pi' → logprob: -10.63886547088623
    5. '                   ' → logprob: -11.63886547088623
    6. '   ' → logprob: -12.26386547088623
    7. '_pi' → logprob: -12.26386547088623
    8. '           ' → logprob: -12.38886547088623
    9. '.pi' → logprob: -12.51386547088623
    10. '               ' → logprob: -12.63886547088623

Token 1308: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5138158202171326
    2. '[p' → logprob: -1.0138158798217773
    3. '[' → logprob: -3.2638158798217773
    4. '                       ' → logprob: -8.013815879821777
    5. ''][' → logprob: -9.013815879821777
    6. ')[' → logprob: -9.888815879821777
    7. '                           ' → logprob: -10.013815879821777
    8. '"][' → logprob: -10.138815879821777
    9. '```' → logprob: -10.388815879821777
    10. ']][' → logprob: -10.888815879821777

Token 1309: 'pj' (ID: 54765)
  Prédit: 'pj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pj' → logprob: -4.537180211627856e-05
    2. '[p' → logprob: -10.125045776367188
    3. ' pj' → logprob: -12.625045776367188
    4. '```' → logprob: -14.750045776367188
    5. '
' → logprob: -15.125045776367188
    6. '-p' → logprob: -15.625045776367188
    7. '(p' → logprob: -15.750045776367188
    8. '[' → logprob: -15.875045776367188
    9. '/p' → logprob: -16.000045776367188
    10. 'dj' → logprob: -16.000045776367188

Token 1310: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12986373901367188
    2. ']' → logprob: -2.629863739013672
    3. ']=' → logprob: -3.129863739013672
    4. ' =' → logprob: -5.379863739013672
    5. ')' → logprob: -7.004863739013672
    6. ')=' → logprob: -7.754863739013672
    7. '                       ' → logprob: -11.879863739013672
    8. '                           ' → logprob: -12.254863739013672
    9. ' ]' → logprob: -12.504863739013672
    10. ']==' → logprob: -13.129863739013672

Token 1311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004307884373702109
    2. ' =' → logprob: -7.750430583953857
    3. '=
' → logprob: -17.250431060791016
    4. '==' → logprob: -18.875431060791016
    5. '=

' → logprob: -18.875431060791016
    6. ')=' → logprob: -19.375431060791016
    7. '                           ' → logprob: -19.375431060791016
    8. ']=' → logprob: -19.500431060791016
    9. '[' → logprob: -19.750431060791016
    10. '＝' → logprob: -19.875431060791016

Token 1312: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -20.875001907348633
    4. '<|end|>' → logprob: -20.875001907348633
    5. '```' → logprob: -22.625001907348633
    6. '   ' → logprob: -23.500001907348633
    7. ' ' → logprob: -23.750001907348633
    8. '=' → logprob: -23.750001907348633
    9. '000' → logprob: -24.125001907348633
    10. '                               ' → logprob: -24.250001907348633

Token 1313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '000' → logprob: -21.625
    4. '۰' → logprob: -21.625
    5. '00' → logprob: -22.0
    6. '   ' → logprob: -22.375
    7. '```' → logprob: -23.25
    8. '=' → logprob: -23.625
    9. '০' → logprob: -23.8125
    10. '０' → logprob: -23.8125

Token 1314: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11149964481592178
    2. '<|end|>' → logprob: -2.611499547958374
    3. '               ' → logprob: -4.611499786376953
    4. '                
' → logprob: -4.736499786376953
    5. ' 
' → logprob: -5.611499786376953
    6. '  
' → logprob: -5.986499786376953
    7. '<|end|>' → logprob: -6.236499786376953
    8. '                        
' → logprob: -6.361499786376953
    9. '    
' → logprob: -6.736499786376953
    10. '                    
' → logprob: -7.486499786376953

Token 1315: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1316: ' sup' (ID: 1982)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6520116329193115
    2. '                        
' → logprob: -1.9020116329193115
    3. '0' → logprob: -2.1520116329193115
    4. '                               ' → logprob: -3.0270116329193115
    5. '                       ' → logprob: -3.5270116329193115
    6. '                           ' → logprob: -3.6520116329193115
    7. ' 
' → logprob: -4.152011871337891
    8. '                            
' → logprob: -4.527011871337891
    9. '```' → logprob: -4.527011871337891
    10. '<|end|>' → logprob: -4.527011871337891

Token 1317: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.49211084842681885
    2. 'prim' → logprob: -1.3671108484268188
    3. 'primer' → logprob: -2.1171107292175293
    4. 'pr' → logprob: -4.492110729217529
    5. 'p' → logprob: -6.742110729217529
    6. 'press' → logprob: -7.742110729217529
    7. 'prima' → logprob: -8.242111206054688
    8. 'pressed' → logprob: -8.617111206054688
    9. 'primir' → logprob: -9.367111206054688
    10. 'pri' → logprob: -9.742111206054688

Token 1318: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1319: ' pierres' (ID: 115592)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.36400309205055237
    2. 'p' → logprob: -1.73900306224823
    3. ' pierres' → logprob: -2.7390031814575195
    4. 'pier' → logprob: -2.9890031814575195
    5. 'stones' → logprob: -5.2390031814575195
    6. 'stone' → logprob: -5.9890031814575195
    7. '(pi' → logprob: -5.9890031814575195
    8. '```' → logprob: -6.9890031814575195
    9. ' pierre' → logprob: -7.3640031814575195
    10. '(p' → logprob: -7.8640031814575195

Token 1320: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6264467239379883
    2. '<|end|>' → logprob: -0.8764467239379883
    3. '               ' → logprob: -3.6264467239379883
    4. '                        
' → logprob: -5.251446723937988
    5. '<|end|>' → logprob: -5.251446723937988
    6. '```' → logprob: -5.626446723937988
    7. '                
' → logprob: -6.126446723937988
    8. '  
' → logprob: -6.376446723937988
    9. '    
' → logprob: -7.251446723937988
    10. '                            
' → logprob: -7.626446723937988

Token 1321: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2945052683353424
    2. '               ' → logprob: -1.79450523853302
    3. '  
' → logprob: -4.0445051193237305
    4. '                
' → logprob: -4.0445051193237305
    5. '<|end|>' → logprob: -4.1695051193237305
    6. '```' → logprob: -4.5445051193237305
    7. ' 
' → logprob: -4.7945051193237305
    8. '    
' → logprob: -5.0445051193237305
    9. '                        
' → logprob: -5.4195051193237305
    10. '                    
' → logprob: -5.7945051193237305

Token 1322: ' score' (ID: 8429)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6719241738319397
    2. '
' → logprob: -0.7969241738319397
    3. '<|end|>' → logprob: -4.171924114227295
    4. '                
' → logprob: -4.296924114227295
    5. '  
' → logprob: -5.546924114227295
    6. ' 
' → logprob: -6.546924114227295
    7. '```' → logprob: -7.421924114227295
    8. ' ' → logprob: -7.421924114227295
    9. '<|end|>' → logprob: -7.421924114227295
    10. '                    
' → logprob: -8.296924591064453

Token 1323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3689431846141815
    2. ' +=' → logprob: -1.368943214416504
    3. '=' → logprob: -3.243943214416504
    4. '                ' → logprob: -4.993943214416504
    5. '               ' → logprob: -5.868943214416504
    6. '+=' → logprob: -5.868943214416504
    7. '                   ' → logprob: -6.618943214416504
    8. '                    ' → logprob: -6.993943214416504
    9. '            ' → logprob: -8.868943214416504
    10. '                  ' → logprob: -9.868943214416504

Token 1324: ' gain' (ID: 11621)
  Prédit: 'gain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gain' → logprob: -0.05524241179227829
    2. ' gain' → logprob: -2.9302423000335693
    3. '                   ' → logprob: -8.180242538452148
    4. '               ' → logprob: -10.430242538452148
    5. '                       ' → logprob: -10.930242538452148
    6. '   ' → logprob: -11.180242538452148
    7. ' ' → logprob: -12.680242538452148
    8. '                    ' → logprob: -12.680242538452148
    9. '                ' → logprob: -13.180242538452148
    10. '  ' → logprob: -13.180242538452148

Token 1325: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014656426385045052
    2. '-' → logprob: -4.5146565437316895
    3. '               ' → logprob: -6.8896565437316895
    4. ' +' → logprob: -7.1396565437316895
    5. '<|end|>' → logprob: -7.2646565437316895
    6. '                ' → logprob: -8.139656066894531
    7. '                   ' → logprob: -8.514656066894531
    8. '+' → logprob: -8.889656066894531
    9. '
' → logprob: -9.139656066894531
    10. '                    ' → logprob: -10.264656066894531

Token 1326: ' lose' (ID: 12577)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.005943136755377054
    2. ' lose' → logprob: -5.130943298339844
    3. '   ' → logprob: -12.630943298339844
    4. '               ' → logprob: -13.005943298339844
    5. 'loss' → logprob: -13.005943298339844
    6. '
' → logprob: -13.130943298339844
    7. '```' → logprob: -14.005943298339844
    8. 'los' → logprob: -14.255943298339844
    9. '                   ' → logprob: -14.255943298339844
    10. '              ' → logprob: -14.505943298339844

Token 1327: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02206713706254959
    2. '
' → logprob: -4.022067070007324
    3. '                
' → logprob: -6.397067070007324
    4. '<|end|>' → logprob: -6.397067070007324
    5. ' 
' → logprob: -9.022067070007324
    6. '  
' → logprob: -9.397067070007324
    7. '                   ' → logprob: -9.522067070007324
    8. '<|end|>' → logprob: -10.022067070007324
    9. '                ' → logprob: -10.272067070007324
    10. '                    
' → logprob: -10.522067070007324

Token 1328: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024760687723755836
    2. '                
' → logprob: -4.524760723114014
    3. '<|end|>' → logprob: -4.649760723114014
    4. '
' → logprob: -6.899760723114014
    5. '```' → logprob: -7.274760723114014
    6. '<|end|>' → logprob: -7.649760723114014
    7. '  
' → logprob: -7.899760723114014
    8. '               
' → logprob: -8.399760246276855
    9. ' 
' → logprob: -8.774760246276855
    10. '                    
' → logprob: -9.149760246276855

Token 1329: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025508119724690914
    2. 'if' (adapté à ' if') → logprob: -6.5025506019592285
    3. ' if' → logprob: -6.8775506019592285
    4. '                   ' → logprob: -11.752551078796387
    5. '			' → logprob: -12.752551078796387
    6. '                
' → logprob: -13.377551078796387
    7. '              ' → logprob: -13.627551078796387
    8. '                               ' → logprob: -13.877551078796387
    9. '                       ' → logprob: -14.002551078796387
    10. '           ' → logprob: -14.752551078796387

Token 1330: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.023245595395565033
    2. ' score' → logprob: -3.7732455730438232
    3. '                   ' → logprob: -16.023244857788086
    4. '               ' → logprob: -16.898244857788086
    5. '(score' → logprob: -17.273244857788086
    6. '	score' → logprob: -17.523244857788086
    7. '_score' → logprob: -18.648244857788086
    8. '                       ' → logprob: -19.273244857788086
    9. 'Score' → logprob: -19.648244857788086
    10. '                 ' → logprob: -20.773244857788086

Token 1331: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03805583342909813
    2. '>' → logprob: -3.288055896759033
    3. '               ' → logprob: -12.788055419921875
    4. '                   ' → logprob: -12.913055419921875
    5. '   ' → logprob: -13.163055419921875
    6. ' >
' → logprob: -13.288055419921875
    7. ' ' → logprob: -13.788055419921875
    8. '                ' → logprob: -14.663055419921875
    9. '           ' → logprob: -14.913055419921875
    10. ' >=' → logprob: -14.913055419921875

Token 1332: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4740773141384125
    2. ' max' → logprob: -0.9740773439407349
    3. '                   ' → logprob: -15.849077224731445
    4. 'score' → logprob: -16.849077224731445
    5. '_max' → logprob: -16.974077224731445
    6. '               ' → logprob: -17.099077224731445
    7. '=max' → logprob: -17.474077224731445
    8. '	max' → logprob: -17.724077224731445
    9. '(max' → logprob: -17.849077224731445
    10. ' score' → logprob: -19.599077224731445

Token 1333: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.750000953674316
    3. '_scores' → logprob: -15.000000953674316
    4. ' _' → logprob: -15.000000953674316
    5. '_code' → logprob: -15.875000953674316
    6. '_s' → logprob: -17.500001907348633
    7. 'score' → logprob: -17.625001907348633
    8. '```' → logprob: -17.625001907348633
    9. '_SCORE' → logprob: -17.750001907348633
    10. '_sc' → logprob: -17.875001907348633

Token 1334: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7878152132034302
    2. ':' → logprob: -1.2878152132034302
    3. ':
' → logprob: -1.6628152132034302
    4. '               ' → logprob: -2.7878150939941406
    5. '                       ' → logprob: -4.912815093994141
    6. '                           ' → logprob: -5.037815093994141
    7. '                               ' → logprob: -6.162815093994141
    8. ' :
' → logprob: -8.03781509399414
    9. '           ' → logprob: -8.28781509399414
    10. '                ' → logprob: -8.28781509399414

Token 1335: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02251516468822956
    2. '                       ' → logprob: -4.772515296936035
    3. '                               ' → logprob: -5.397515296936035
    4. ' max' → logprob: -5.397515296936035
    5. '               ' → logprob: -6.147515296936035
    6. '                           ' → logprob: -6.397515296936035
    7. '                    
' → logprob: -7.772515296936035
    8. '                                   ' → logprob: -8.897515296936035
    9. '                    ' → logprob: -9.522515296936035
    10. '                                       ' → logprob: -9.772515296936035

Token 1336: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.20216254889965057
    2. ' max' → logprob: -1.702162504196167
    3. '                   ' → logprob: -7.202162742614746
    4. '                       ' → logprob: -12.827162742614746
    5. '               ' → logprob: -14.827162742614746
    6. '                    ' → logprob: -14.827162742614746
    7. '   ' → logprob: -16.20216178894043
    8. 'score' → logprob: -16.70216178894043
    9. '	max' → logprob: -16.82716178894043
    10. 'best' → logprob: -17.07716178894043

Token 1337: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.127333340875339e-06
    2. '_scores' → logprob: -13.125003814697266
    3. '_code' → logprob: -14.000003814697266
    4. '_' → logprob: -14.750003814697266
    5. ' _' → logprob: -15.375003814697266
    6. '_token' → logprob: -15.750003814697266
    7. '_s' → logprob: -16.125003814697266
    8. 'Score' → logprob: -16.625003814697266
    9. 'score' → logprob: -16.750003814697266
    10. '```' → logprob: -16.750003814697266

Token 1338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931726932525635
    2. ' =' → logprob: -0.6931726932525635
    3. '                   ' → logprob: -11.068172454833984
    4. '                    ' → logprob: -12.693172454833984
    5. '=
' → logprob: -12.818172454833984
    6. '=max' → logprob: -13.693172454833984
    7. ' =
' → logprob: -14.193172454833984
    8. ',' → logprob: -14.693172454833984
    9. '_score' → logprob: -15.443172454833984
    10. '＝' → logprob: -15.443172454833984

Token 1339: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.31326964497566223
    2. ' score' → logprob: -1.3132696151733398
    3. '                   ' → logprob: -12.06326961517334
    4. '                    ' → logprob: -14.68826961517334
    5. '                       ' → logprob: -14.81326961517334
    6. '                               ' → logprob: -15.18826961517334
    7. '(score' → logprob: -15.18826961517334
    8. '                ' → logprob: -15.81326961517334
    9. '	score' → logprob: -15.81326961517334
    10. '_score' → logprob: -15.93826961517334

Token 1340: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1341: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9877867698669434
    2. '               ' → logprob: -1.2377867698669434
    3. '   ' → logprob: -2.3627867698669434
    4. 'return' → logprob: -2.6127867698669434
    5. '    
' → logprob: -2.8627867698669434
    6. '                    
' → logprob: -3.3627867698669434
    7. '                
' → logprob: -3.8627867698669434
    8. ' return' → logprob: -4.362786769866943
    9. '                        
' → logprob: -4.737786769866943
    10. '  
' → logprob: -4.737786769866943

Token 1342: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6423311829566956
    2. '               ' → logprob: -1.5173311233520508
    3. 'return' → logprob: -1.8923311233520508
    4. ' return' → logprob: -3.767331123352051
    5. 'if' → logprob: -3.892331123352051
    6. '                   ' → logprob: -4.017331123352051
    7. '           ' → logprob: -4.642331123352051
    8. '
' → logprob: -4.642331123352051
    9. ' if' → logprob: -4.767331123352051
    10. '                       ' → logprob: -5.642331123352051

Token 1343: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05181114375591278
    2. 'if' → logprob: -3.0518112182617188
    3. '   ' → logprob: -5.801811218261719
    4. ' return' → logprob: -8.676811218261719
    5. ' if' → logprob: -10.676811218261719
    6. '
' → logprob: -13.676811218261719
    7. '```' → logprob: -14.051811218261719
    8. '	return' → logprob: -15.551811218261719
    9. '    
' → logprob: -15.926811218261719
    10. '#' → logprob: -16.30181121826172

Token 1344: ' aucun' (ID: 41678)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08903587609529495
    2. ' max' → logprob: -3.339035987854004
    3. ' placed' → logprob: -3.714035987854004
    4. 'not' → logprob: -4.089035987854004
    5. 'max' → logprob: -4.964035987854004
    6. 'placed' → logprob: -6.464035987854004
    7. '   ' → logprob: -10.339035987854004
    8. ' ' → logprob: -12.964035987854004
    9. '  ' → logprob: -14.089035987854004
    10. ' placé' → logprob: -14.214035987854004

Token 1345: ' placement' (ID: 29002)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.387033224105835
    2. 'max' → logprob: -1.387033224105835
    3. 'placement' → logprob: -1.637033224105835
    4. ' n' → logprob: -1.762033224105835
    5. 'n' → logprob: -2.887033224105835
    6. '>' → logprob: -3.637033224105835
    7. '   ' → logprob: -4.387033462524414
    8. ' placement' → logprob: -4.762033462524414
    9. ' >' → logprob: -5.512033462524414
    10. 'placer' → logprob: -5.512033462524414

Token 1346: ' possible' (ID: 4149)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.68473881483078
    2. '==' → logprob: -1.6847388744354248
    3. 'n' → logprob: -2.434738874435425
    4. '   ' → logprob: -2.809738874435425
    5. ' n' → logprob: -2.934738874435425
    6. '_possible' → logprob: -3.059738874435425
    7. ' possible' → logprob: -3.309738874435425
    8. 'possible' → logprob: -3.934738874435425
    9. ' !=' → logprob: -6.184738636016846
    10. '!=' → logprob: -6.809738636016846

Token 1347: ' (' (ID: 350)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13473233580589294
    2. '               ' → logprob: -2.509732246398926
    3. '   ' → logprob: -4.009732246398926
    4. ':' → logprob: -4.509732246398926
    5. '==' → logprob: -4.759732246398926
    6. ':return' → logprob: -6.134732246398926
    7. ' ==' → logprob: -6.509732246398926
    8. '       ' → logprob: -7.134732246398926
    9. 'else' → logprob: -7.509732246398926
    10. '           ' → logprob: -7.634732246398926

Token 1348: 'tr' (ID: 371)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.018283620476722717
    2. ' max' → logprob: -4.018283843994141
    3. 'not' → logprob: -9.51828384399414
    4. ' not' → logprob: -10.01828384399414
    5. '   ' → logprob: -11.14328384399414
    6. '
' → logprob: -14.89328384399414
    7. 'True' → logprob: -15.76828384399414
    8. '    ' → logprob: -16.26828384399414
    9. '  ' → logprob: -16.39328384399414
    10. 'placed' → logprob: -16.64328384399414

Token 1349: 'ès' (ID: 4119)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.10440419614315033
    2. 'e' → logprob: -3.1044042110443115
    3. 'es' → logprob: -3.9794042110443115
    4. 'ouve' → logprob: -4.604403972625732
    5. 'em' → logprob: -5.104403972625732
    6. 'ans' → logprob: -5.604403972625732
    7. 'ès' → logprob: -6.229403972625732
    8. 'op' → logprob: -6.229403972625732
    9. 'ee' → logprob: -6.604403972625732
    10. 'eturn' → logprob: -6.729403972625732

Token 1350: ' improbable' (ID: 180942)
  Prédit: ' likely'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' likely' → logprob: -0.417827308177948
    2. ' probable' → logprob: -2.0428273677825928
    3. 'likely' → logprob: -2.0428273677825928
    4. 'possible' → logprob: -3.0428273677825928
    5. ' possible' → logprob: -3.6678273677825928
    6. '_possible' → logprob: -5.292827129364014
    7. 'prob' → logprob: -6.667827129364014
    8. '```' → logprob: -7.542827129364014
    9. '_' → logprob: -7.792827129364014
    10. 'unlikely' → logprob: -7.792827129364014

Token 1351: ' car' (ID: 1669)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7743497490882874
    2. ',' → logprob: -1.3993496894836426
    3. ':
' → logprob: -2.5243496894836426
    4. '),' → logprob: -2.5243496894836426
    5. ':' → logprob: -2.8993496894836426
    6. '):' → logprob: -3.3993496894836426
    7. '   ' → logprob: -3.7743496894836426
    8. ')' → logprob: -4.274349689483643
    9. '               ' → logprob: -5.524349689483643
    10. '           ' → logprob: -7.899349689483643

Token 1352: ' au' (ID: 2791)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -1.2747873067855835
    2. 'max' → logprob: -1.8997873067855835
    3. ' board' → logprob: -2.024787425994873
    4. ' not' → logprob: -2.399787425994873
    5. ' max' → logprob: -2.399787425994873
    6. 'player' → logprob: -2.899787425994873
    7. ' le' → logprob: -3.149787425994873
    8. ' player' → logprob: -3.399787425994873
    9. 'not' → logprob: -3.524787425994873
    10. ' all' → logprob: -3.774787425994873

Token 1353: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0015498562715947628
    2. 'minimum' → logprob: -7.12654972076416
    3. 'mo' → logprob: -7.87654972076416
    4. '   ' → logprob: -8.75154972076416
    5. 'min' → logprob: -9.62654972076416
    6. ' moins' → logprob: -10.25154972076416
    7. '  ' → logprob: -10.50154972076416
    8. '     ' → logprob: -10.87654972076416
    9. '    ' → logprob: -11.37654972076416
    10. 'm' → logprob: -11.62654972076416

Token 1354: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.9132776856422424
    2. ' un' → logprob: -1.2882776260375977
    3. 'un' → logprob: -1.6632776260375977
    4. ' une' → logprob: -2.0382776260375977
    5. '   ' → logprob: -6.913277626037598
    6. '1' → logprob: -7.288277626037598
    7. 'one' → logprob: -7.663277626037598
    8. ' one' → logprob: -8.038277626037598
    9. '    ' → logprob: -8.538277626037598
    10. 'il' → logprob: -9.038277626037598

Token 1355: ' sommet' (ID: 130502)
  Prédit: 'placement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.9363613128662109
    2. ' sommet' → logprob: -0.9363613128662109
    3. ' emplacement' → logprob: -2.686361312866211
    4. 'es' → logprob: -3.811361312866211
    5. ' espace' → logprob: -3.936361312866211
    6. ' placement' → logprob: -4.436361312866211
    7. 'place' → logprob: -4.811361312866211
    8. ' case' → logprob: -4.811361312866211
    9. 'em' → logprob: -4.811361312866211
    10. 'case' → logprob: -4.811361312866211

Token 1356: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.5484368801116943
    2. ' vide' → logprob: -0.9234368801116943
    3. ' est' → logprob: -4.048437118530273
    4. ' ' → logprob: -6.548437118530273
    5. '```' → logprob: -6.673437118530273
    6. 'n' → logprob: -7.548437118530273
    7. ' ' → logprob: -7.548437118530273
    8. ' libre' → logprob: -7.798437118530273
    9. 'vid' → logprob: -7.798437118530273
    10. ' disponible' → logprob: -7.798437118530273

Token 1357: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6915425062179565
    2. '),' → logprob: -0.8165425062179565
    3. '):' → logprob: -3.691542625427246
    4. '```' → logprob: -4.941542625427246
    5. '>' → logprob: -5.441542625427246
    6. ')' → logprob: -5.441542625427246
    7. '):

' → logprob: -6.066542625427246
    8. ' est' → logprob: -6.191542625427246
    9. ' exists' → logprob: -6.566542625427246
    10. ' ),' → logprob: -6.691542625427246

Token 1358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24521353840827942
    2. '       ' → logprob: -1.870213508605957
    3. '               ' → logprob: -3.120213508605957
    4. 'else' → logprob: -4.245213508605957
    5. ' else' → logprob: -5.995213508605957
    6. 'return' → logprob: -6.620213508605957
    7. ' return' → logprob: -7.745213508605957
    8. '           ' → logprob: -8.495213508605957
    9. '                   ' → logprob: -8.620213508605957
    10. ':
' → logprob: -9.120213508605957

Token 1359: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1321244239807129
    2. 'if' → logprob: -2.132124423980713
    3. 'return' → logprob: -5.382124423980713
    4. ' if' → logprob: -8.132123947143555
    5. 'else' → logprob: -9.257123947143555
    6. '```' → logprob: -9.382123947143555
    7. '               ' → logprob: -10.007123947143555
    8. '       ' → logprob: -10.257123947143555
    9. '           ' → logprob: -11.507123947143555
    10. ' return' → logprob: -11.632123947143555

Token 1360: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41573137044906616
    2. 'if' → logprob: -1.165731430053711
    3. ' if' → logprob: -3.915731430053711
    4. 'return' → logprob: -4.790731430053711
    5. ' return' → logprob: -8.665731430053711
    6. '```' → logprob: -10.790731430053711
    7. 'else' → logprob: -11.165731430053711
    8. '               ' → logprob: -12.415731430053711
    9. '	if' → logprob: -13.290731430053711
    10. '       ' → logprob: -14.415731430053711

Token 1361: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23807619512081146
    2. ' return' → logprob: -1.9880762100219727
    3. '   ' → logprob: -2.6130762100219727
    4. 'if' → logprob: -7.488076210021973
    5. '       ' → logprob: -7.738076210021973
    6. ' if' → logprob: -8.613076210021973
    7. '           ' → logprob: -8.988076210021973
    8. '               ' → logprob: -9.613076210021973
    9. 'else' → logprob: -9.988076210021973
    10. '_return' → logprob: -10.488076210021973

Token 1362: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2604956030845642
    2. 'max' → logprob: -1.760495662689209
    3. ' max' → logprob: -3.385495662689209
    4. ' ' → logprob: -4.260495662689209
    5. '-' → logprob: -4.885495662689209
    6. '   ' → logprob: -7.510495662689209
    7. ' -' → logprob: -7.635495662689209
    8. 'None' → logprob: -7.760495662689209
    9. 'player' → logprob: -9.13549518585205
    10. ' None' → logprob: -9.38549518585205

Token 1363: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6424933671951294
    2. '0' → logprob: -0.7674933671951294
    3. '-' → logprob: -4.89249324798584
    4. 'None' → logprob: -6.51749324798584
    5. ' max' → logprob: -7.89249324798584
    6. 'player' → logprob: -8.51749324798584
    7. ' ' → logprob: -9.01749324798584
    8. '   ' → logprob: -10.01749324798584
    9. 'score' → logprob: -10.26749324798584
    10. 'placed' → logprob: -10.76749324798584

Token 1364: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6624302864074707
    2. '
' → logprob: -0.9124302864074707
    3. 'return' → logprob: -2.6624302864074707
    4. '               ' → logprob: -4.787430286407471
    5. ' return' → logprob: -5.412430286407471
    6. '       ' → logprob: -9.537429809570312
    7. '	return' → logprob: -9.912429809570312
    8. '    
' → logprob: -10.037429809570312
    9. 'else' → logprob: -10.412429809570312
    10. '                
' → logprob: -10.412429809570312

Token 1365: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.21903887391090393
    2. 'def' → logprob: -2.219038963317871
    3. 'default' → logprob: -2.469038963317871
    4. ' défaut' → logprob: -5.719038963317871
    5. 'd' → logprob: -10.094038963317871
    6. ' default' → logprob: -13.594038963317871
    7. 'dés' → logprob: -14.469038963317871
    8. '0' → logprob: -14.469038963317871
    9. 'return' → logprob: -14.594038963317871
    10. '   ' → logprob: -14.719038963317871

Token 1366: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32450130581855774
    2. '
' → logprob: -1.3245012760162354
    3. 'return' → logprob: -5.1995015144348145
    4. '               ' → logprob: -5.6995015144348145
    5. ' return' → logprob: -6.4495015144348145
    6. '       ' → logprob: -7.8245015144348145
    7. '           ' → logprob: -9.324501037597656
    8. '    
' → logprob: -9.574501037597656
    9. '```' → logprob: -9.574501037597656
    10. '                   ' → logprob: -10.074501037597656

Token 1367: 'pas' (ID: 21122)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9382635354995728
    2. '   ' → logprob: -1.1882635354995728
    3. ' return' → logprob: -1.6882635354995728
    4. '0' → logprob: -2.438263416290283
    5. '               ' → logprob: -3.563263416290283
    6. ')
' → logprob: -6.313263416290283
    7. ' ' → logprob: -7.313263416290283
    8. ')' → logprob: -8.063263893127441
    9. '       ' → logprob: -8.688263893127441
    10. '                   ' → logprob: -8.688263893127441

Token 1368: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.016608433797955513
    2. 'de' → logprob: -4.141608238220215
    3. '_de' → logprob: -7.891608238220215
    4. ' possible' → logprob: -10.141608238220215
    5. ' d' → logprob: -10.266608238220215
    6. ')' → logprob: -10.641608238220215
    7. 'd' → logprob: -10.641608238220215
    8. 'possible' → logprob: -11.266608238220215
    9. '_' → logprob: -11.641608238220215
    10. 'er' → logprob: -11.766608238220215

Token 1369: ' score' (ID: 8429)
  Prédit: 'placement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.21680307388305664
    2. 'score' → logprob: -1.8418030738830566
    3. 'move' → logprob: -4.341803073883057
    4. 'c' → logprob: -5.341803073883057
    5. ' changement' → logprob: -5.341803073883057
    6. ' placement' → logprob: -6.091803073883057
    7. 'gain' → logprob: -6.216803073883057
    8. 'change' → logprob: -6.341803073883057
    9. 'ch' → logprob: -6.591803073883057
    10. ' score' → logprob: -6.716803073883057

Token 1370: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1695890575647354
    2. ')' → logprob: -1.9195890426635742
    3. '   ' → logprob: -4.794589042663574
    4. '               ' → logprob: -7.544589042663574
    5. ' )
' → logprob: -8.419589042663574
    6. 'return' → logprob: -9.919589042663574
    7. '           ' → logprob: -10.294589042663574
    8. ').' → logprob: -10.294589042663574
    9. '
' → logprob: -10.419589042663574
    10. ' )' → logprob: -10.544589042663574

Token 1371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16360704600811005
    2. 'return' → logprob: -1.9136070013046265
    3. '```' → logprob: -6.413607120513916
    4. '               ' → logprob: -6.788607120513916
    5. 'if' → logprob: -7.913607120513916
    6. 'else' → logprob: -9.163606643676758
    7. ' return' → logprob: -9.663606643676758
    8. '
' → logprob: -10.288606643676758
    9. '           ' → logprob: -11.413606643676758
    10. '                   ' → logprob: -11.663606643676758

Token 1372: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7314944863319397
    2. 'return' → logprob: -0.7314944863319397
    3. ' return' → logprob: -3.731494426727295
    4. 'if' (adapté à ' if') → logprob: -4.481494426727295
    5. ' if' → logprob: -6.981494426727295
    6. '```' → logprob: -7.231494426727295
    7. '       ' → logprob: -7.731494426727295
    8. '               ' → logprob: -9.106494903564453
    9. 'else' → logprob: -9.481494903564453
    10. '
' → logprob: -10.731494903564453

Token 1373: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20155446231365204
    2. 'not' → logprob: -1.7015544176101685
    3. ' max' → logprob: -9.951554298400879
    4. 'placed' → logprob: -10.326554298400879
    5. ' placed' → logprob: -10.326554298400879
    6. 'max' → logprob: -10.701554298400879
    7. '   ' → logprob: -12.201554298400879
    8. '	not' → logprob: -14.826554298400879
    9. '(not' → logprob: -16.576555252075195
    10. '    ' → logprob: -18.076555252075195

Token 1374: ' placed' (ID: 12989)
  Prédit: ' placed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.5759404897689819
    2. 'placed' → logprob: -0.8259404897689819
    3. 'max' → logprob: -14.700940132141113
    4. ' placé' → logprob: -15.700940132141113
    5. ' max' → logprob: -15.950940132141113
    6. 'plac' → logprob: -16.20094108581543
    7. ' ' → logprob: -16.95094108581543
    8. 'placement' → logprob: -16.95094108581543
    9. 'Placed' → logprob: -16.95094108581543
    10. ' ' → logprob: -17.20094108581543

Token 1375: '_any' (ID: 95226)
  Prédit: '_any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_any' → logprob: -1.0280383548888494e-06
    2. 'Any' → logprob: -14.625000953674316
    3. '_possible' → logprob: -14.750000953674316
    4. 'any' → logprob: -16.375001907348633
    5. '
' → logprob: -17.125001907348633
    6. '_ANY' → logprob: -18.375001907348633
    7. ' _' → logprob: -18.500001907348633
    8. '_' → logprob: -18.500001907348633
    9. '_only' → logprob: -19.125001907348633
    10. '_all' → logprob: -19.250001907348633

Token 1376: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.015937000513076782
    2. ':' → logprob: -4.265936851501465
    3. ':return' → logprob: -6.890936851501465
    4. '   ' → logprob: -7.390936851501465
    5. '       ' → logprob: -9.265936851501465
    6. 'return' → logprob: -10.640936851501465
    7. ' :
' → logprob: -12.140936851501465
    8. ' return' → logprob: -12.515936851501465
    9. '               ' → logprob: -12.515936851501465
    10. '):
' → logprob: -13.265936851501465

Token 1377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023314091376960278
    2. ' return' → logprob: -6.377331256866455
    3. 'return' → logprob: -7.502331256866455
    4. '   ' → logprob: -9.752331733703613
    5. '	' → logprob: -12.002331733703613
    6. '	return' → logprob: -12.877331733703613
    7. '
' → logprob: -13.002331733703613
    8. '```' → logprob: -13.002331733703613
    9. '           ' → logprob: -13.502331733703613
    10. ' ' → logprob: -13.627331733703613

Token 1378: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009122979827225208
    2. ' return' → logprob: -7.000912189483643
    3. '   ' → logprob: -14.3759126663208
    4. '
' → logprob: -16.625911712646484
    5. '```' → logprob: -16.750911712646484
    6. '       ' → logprob: -17.000911712646484
    7. 'ret' → logprob: -17.375911712646484
    8. '	return' → logprob: -19.000911712646484
    9. '{return' → logprob: -19.750911712646484
    10. '_return' → logprob: -19.750911712646484

Token 1379: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -20.87502098083496
    4. '
' → logprob: -24.50002098083496
    5. '000' → logprob: -24.50002098083496
    6. '  ' → logprob: -24.87502098083496
    7. ' ' → logprob: -25.00002098083496
    8. '```' → logprob: -25.50002098083496
    9. '00' → logprob: -25.62502098083496
    10. '۰' → logprob: -26.25002098083496

Token 1380: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '000' → logprob: -22.875
    4. '00' → logprob: -23.625
    5. '۰' → logprob: -24.0
    6. '   ' → logprob: -24.25
    7. '```' → logprob: -25.25
    8. '
' → logprob: -26.0
    9. '０' → logprob: -26.0
    10. '  ' → logprob: -26.25

Token 1381: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12432198226451874
    2. '
' → logprob: -2.374321937561035
    3. ' return' → logprob: -4.374321937561035
    4. 'return' → logprob: -5.124321937561035
    5. '    
' → logprob: -6.249321937561035
    6. ' 
' → logprob: -6.624321937561035
    7. '<|end|>' → logprob: -7.374321937561035
    8. ' else' → logprob: -7.874321937561035
    9. '	return' → logprob: -8.249321937561035
    10. '  
' → logprob: -8.374321937561035

Token 1382: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16045311093330383
    2. '   ' → logprob: -2.6604530811309814
    3. ' return' → logprob: -3.1604530811309814
    4. '```' → logprob: -3.7854530811309814
    5. '
' → logprob: -4.5354533195495605
    6. 'else' → logprob: -6.6604533195495605
    7. '    
' → logprob: -7.5354533195495605
    8. '	return' → logprob: -8.410452842712402
    9. ' 
' → logprob: -8.910452842712402
    10. '<|end|>' → logprob: -9.535452842712402

Token 1383: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.32771071791648865
    2. '   ' → logprob: -1.702710747718811
    3. '
' → logprob: -2.9527106285095215
    4. ' return' → logprob: -3.5777106285095215
    5. 'else' → logprob: -4.5777106285095215
    6. ' else' → logprob: -6.4527106285095215
    7. '```' → logprob: -6.4527106285095215
    8. ' 
' → logprob: -6.5777106285095215
    9. '	return' → logprob: -6.9527106285095215
    10. '    
' → logprob: -7.0777106285095215

Token 1384: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5759395360946655
    2. 'max' → logprob: -0.8259395360946655
    3. '   ' → logprob: -17.200939178466797
    4. '	max' → logprob: -17.200939178466797
    5. '(max' → logprob: -18.075939178466797
    6. ' ' → logprob: -19.450939178466797
    7. '_max' → logprob: -19.575939178466797
    8. ' ' → logprob: -20.825939178466797
    9. '[max' → logprob: -20.950939178466797
    10. '=max' → logprob: -20.950939178466797

Token 1385: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.320199877838604e-07
    2. 'score' → logprob: -14.875
    3. '_scores' → logprob: -17.375
    4. 'Score' → logprob: -17.75
    5. '_max' → logprob: -18.625
    6. '_SCORE' → logprob: -18.75
    7. '_token' → logprob: -19.25
    8. '_code' → logprob: -19.5
    9. '```' → logprob: -19.75
    10. '\' → logprob: -19.875

Token 1386: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16293403506278992
    2. 'for' → logprob: -2.1629340648651123
    3. 'if' → logprob: -3.9129340648651123
    4. '
' → logprob: -5.037933826446533
    5. '#' → logprob: -5.787933826446533
    6. '```' → logprob: -5.787933826446533
    7. '<|end|>' → logprob: -6.287933826446533
    8. 'while' → logprob: -7.787933826446533
    9. ' for' → logprob: -8.662934303283691
    10. 'import' → logprob: -9.287934303283691

Token 1387: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7264310121536255
    2. 'for' → logprob: -0.9764310121536255
    3. 'while' → logprob: -1.9764310121536255
    4. 'if' → logprob: -7.726430892944336
    5. '```' → logprob: -7.726430892944336
    6. '#' → logprob: -9.226430892944336
    7. ' while' → logprob: -9.601430892944336
    8. ' for' → logprob: -9.851430892944336
    9. '
' → logprob: -10.476430892944336
    10. 'import' → logprob: -11.101430892944336

Token 1388: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00016706773021724075
    2. ' main' → logprob: -8.750166893005371
    3. 'solve' → logprob: -12.250166893005371
    4. 'def' → logprob: -12.750166893005371
    5. 'process' → logprob: -14.125166893005371
    6. 'life' → logprob: -17.250167846679688
    7. 'play' → logprob: -18.500167846679688
    8. 'parse' → logprob: -18.500167846679688
    9. 'solution' → logprob: -18.625167846679688
    10. 'run' → logprob: -18.750167846679688

Token 1389: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.023294392973184586
    2. '():
' → logprob: -3.773294448852539
    3. '()' → logprob: -10.398294448852539
    4. '(' → logprob: -11.398294448852539
    5. '():
' → logprob: -13.023294448852539
    6. 'def' → logprob: -13.523294448852539
    7. '():

' → logprob: -14.148294448852539
    8. ':' → logprob: -14.148294448852539
    9. ' ():' → logprob: -14.273294448852539
    10. '_' → logprob: -14.648294448852539

Token 1390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3653448522090912
    2. ' while' → logprob: -1.3653448820114136
    3. 'import' → logprob: -3.740344762802124
    4. '```' → logprob: -4.490345001220703
    5. 'while' → logprob: -4.615345001220703
    6. ' import' → logprob: -5.240345001220703
    7. '	while' → logprob: -8.490345001220703
    8. '
' → logprob: -8.865345001220703
    9. ' line' → logprob: -9.615345001220703
    10. '	import' → logprob: -9.615345001220703

Token 1391: ' neighbors' (ID: 31655)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10364783555269241
    2. ' while' → logprob: -2.3536479473114014
    3. '   ' → logprob: -5.853647708892822
    4. 'import' → logprob: -7.853647708892822
    5. '
' → logprob: -9.35364818572998
    6. '```' → logprob: -9.60364818572998
    7. '    
' → logprob: -11.10364818572998
    8. '	while' → logprob: -12.47864818572998
    9. ' 
' → logprob: -13.35364818572998
    10. ' import' → logprob: -13.85364818572998

Token 1392: '_cache' (ID: 27045)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10411141812801361
    2. ' =' → logprob: -2.979111433029175
    3. '()' → logprob: -3.354111433029175
    4. '(' → logprob: -5.729111194610596
    5. 'def' → logprob: -5.854111194610596
    6. '=sys' → logprob: -6.354111194610596
    7. '   ' → logprob: -6.729111194610596
    8. 'import' → logprob: -6.979111194610596
    9. '=
' → logprob: -7.354111194610596
    10. 'for' → logprob: -7.854111194610596

Token 1393: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07901151478290558
    2. ' =' → logprob: -2.5790114402770996
    3. '={}' → logprob: -9.454011917114258
    4. ' ' → logprob: -11.329011917114258
    5. '   ' → logprob: -11.454011917114258
    6. '=
' → logprob: -12.079011917114258
    7. '={}
' → logprob: -12.954011917114258
    8. '=[]' → logprob: -12.954011917114258
    9. '  ' → logprob: -13.079011917114258
    10. '=None' → logprob: -13.704011917114258

Token 1394: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -4.246537173457909e-06
    2. 'None' → logprob: -13.250003814697266
    3. '{}
' → logprob: -13.500003814697266
    4. 'get' → logprob: -14.125003814697266
    5. '{' → logprob: -16.000003814697266
    6. '{}

' → logprob: -16.125003814697266
    7. ' {}' → logprob: -16.750003814697266
    8. '{}_' → logprob: -17.875003814697266
    9. '[]' → logprob: -18.125003814697266
    10. '{})' → logprob: -18.375003814697266

Token 1395: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2118118703365326
    2. '   ' → logprob: -1.711811900138855
    3. '```' → logprob: -5.2118120193481445
    4. ' while' → logprob: -5.4618120193481445
    5. 'import' → logprob: -7.4618120193481445
    6. 'for' → logprob: -10.211812019348145
    7. '
' → logprob: -10.836812019348145
    8. '``' → logprob: -11.961812019348145
    9. '    
' → logprob: -12.336812019348145
    10. '	while' → logprob: -12.461812019348145

Token 1396: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10044755786657333
    2. 'for' → logprob: -2.350447654724121
    3. 'import' → logprob: -8.350447654724121
    4. '   ' → logprob: -13.100447654724121
    5. '```' → logprob: -13.350447654724121
    6. ' while' → logprob: -13.975447654724121
    7. 'line' → logprob: -17.225446701049805
    8. ' for' → logprob: -18.350446701049805
    9. 'lines' → logprob: -19.100446701049805
    10. 'input' → logprob: -19.350446701049805

Token 1397: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0002964935847558081
    2. ' True' → logprob: -8.375296592712402
    3. '   ' → logprob: -9.750296592712402
    4. '(True' → logprob: -12.250296592712402
    5. '
' → logprob: -13.625296592712402
    6. 'true' → logprob: -14.250296592712402
    7. '```' → logprob: -14.750296592712402
    8. '=True' → logprob: -15.250296592712402
    9. '1' → logprob: -15.250296592712402
    10. '       ' → logprob: -16.625295639038086

Token 1398: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7400972843170166
    2. '       ' → logprob: -0.7400972843170166
    3. ':
' → logprob: -3.2400972843170166
    4. '   ' → logprob: -5.2400970458984375
    5. '<|end|>' → logprob: -7.9900970458984375
    6. ',' → logprob: -8.240097045898438
    7. '<|end|>' → logprob: -9.365097045898438
    8. '```' → logprob: -9.490097045898438
    9. ' :' → logprob: -9.615097045898438
    10. '():' → logprob: -9.865097045898438

Token 1399: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07645117491483688
    2. 'line' → logprob: -2.826451063156128
    3. ' line' → logprob: -4.451451301574707
    4. '       ' → logprob: -6.201451301574707
    5. '	line' → logprob: -7.951451301574707
    6. '```' → logprob: -8.076451301574707
    7. 'input' → logprob: -11.201451301574707
    8. '#line' → logprob: -12.826451301574707
    9. '   ' → logprob: -12.951451301574707
    10. '(line' → logprob: -13.326451301574707

Token 1400: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0002848152944352478
    2. ' line' → logprob: -8.500285148620605
    3. 'ligne' → logprob: -9.750285148620605
    4. '   ' → logprob: -10.875285148620605
    5. 'l' → logprob: -13.375285148620605
    6. 'try' → logprob: -13.375285148620605
    7. '	line' → logprob: -14.500285148620605
    8. ' ligne' → logprob: -15.500285148620605
    9. 'lines' → logprob: -17.00028419494629
    10. 'L' → logprob: -17.25028419494629

Token 1401: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693104147911072
    2. ' =' → logprob: -2.1269309520721436
    3. '=line' → logprob: -13.501931190490723
    4. '=sys' → logprob: -13.751931190490723
    5. '=input' → logprob: -14.501931190490723
    6. 's' → logprob: -17.001930236816406
    7. '＝' → logprob: -17.251930236816406
    8. '=s' → logprob: -18.251930236816406
    9. '=
' → logprob: -18.251930236816406
    10. '="""' → logprob: -19.126930236816406

Token 1402: ' ''
' (ID: 25366)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.003178782993927598
    2. ' sys' → logprob: -5.753178596496582
    3. 'input' → logprob: -13.753178596496582
    4. '(sys' → logprob: -18.5031795501709
    5. '=sys' → logprob: -18.6281795501709
    6. '	sys' → logprob: -20.1281795501709
    7. ' input' → logprob: -20.2531795501709
    8. '   ' → logprob: -21.0031795501709
    9. 'Sys' → logprob: -22.7531795501709
    10. 'import' → logprob: -22.8781795501709

Token 1403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5646987557411194
    2. '=' → logprob: -1.1896986961364746
    3. 'line' → logprob: -2.5646986961364746
    4. '=line' → logprob: -3.3146986961364746
    5. ' =' → logprob: -5.064698696136475
    6. 'while' → logprob: -5.689698696136475
    7. ' line' → logprob: -5.814698696136475
    8. 'try' → logprob: -7.689698696136475
    9. '```' → logprob: -8.439699172973633
    10. '#line' → logprob: -8.939699172973633

Token 1404: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0009153862483799458
    2. 'try' → logprob: -7.50091552734375
    3. 'while' (adapté à ' while') → logprob: -8.62591552734375
    4. '       ' → logprob: -9.25091552734375
    5. ' line' → logprob: -9.37591552734375
    6. '
' → logprob: -13.75091552734375
    7. '(line' → logprob: -14.87591552734375
    8. '   ' → logprob: -15.37591552734375
    9. '=line' → logprob: -15.87591552734375
    10. '        
' → logprob: -16.25091552734375

Token 1405: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0005648265941999853
    2. ' line' → logprob: -7.500565052032471
    3. 'not' → logprob: -12.000564575195312
    4. 'len' → logprob: -12.250564575195312
    5. '(line' → logprob: -14.250564575195312
    6. ' not' → logprob: -15.500564575195312
    7. 'True' → logprob: -16.750564575195312
    8. '#line' → logprob: -18.375564575195312
    9. ' True' → logprob: -18.625564575195312
    10. '	line' → logprob: -18.875564575195312

Token 1406: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.3150622546672821
    2. '=' → logprob: -1.5650622844696045
    3. '==' → logprob: -2.8150622844696045
    4. ' =' → logprob: -6.940062046051025
    5. ' ==' → logprob: -8.190062522888184
    6. 'strip' → logprob: -11.065062522888184
    7. '=line' → logprob: -12.065062522888184
    8. '.' → logprob: -12.815062522888184
    9. ':=' → logprob: -13.065062522888184
    10. '()==' → logprob: -13.565062522888184

Token 1407: '()' (ID: 416)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.48377352952957153
    2. '()==' → logprob: -0.9837735295295715
    3. '()' → logprob: -4.983773708343506
    4. '=' → logprob: -5.983773708343506
    5. ' ==' → logprob: -8.608773231506348
    6. '===' → logprob: -9.358773231506348
    7. ' =' → logprob: -13.108773231506348
    8. '====' → logprob: -13.108773231506348
    9. '()=="' → logprob: -13.233773231506348
    10. ')==' → logprob: -13.483773231506348

Token 1408: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0003255719493608922
    2. '()==' → logprob: -8.625325202941895
    3. ' ==' → logprob: -9.000325202941895
    4. '=' → logprob: -10.875325202941895
    5. '===' → logprob: -12.875325202941895
    6. '()' → logprob: -14.750325202941895
    7. '==
' → logprob: -15.250325202941895
    8. '```' → logprob: -16.25032615661621
    9. '=='' → logprob: -16.37532615661621
    10. ']==' → logprob: -16.87532615661621

Token 1409: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0015081972815096378
    2. ''' → logprob: -6.5015082359313965
    3. '""' → logprob: -12.751507759094238
    4. ' '':
' → logprob: -13.501507759094238
    5. '''
' → logprob: -14.001507759094238
    6. '"":' → logprob: -14.876507759094238
    7. ''''' → logprob: -15.751507759094238
    8. '''.' → logprob: -16.001508712768555
    9. ''',' → logprob: -16.501508712768555
    10. ' ''' → logprob: -18.376508712768555

Token 1410: '           ' (ID: 352)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.45363950729370117
    2. ' line' → logprob: -1.4536395072937012
    3. '           ' → logprob: -2.453639507293701
    4. '=line' → logprob: -3.828639507293701
    5. '=' → logprob: -4.328639507293701
    6. '       ' → logprob: -4.953639507293701
    7. ' =' → logprob: -6.453639507293701
    8. ':
' → logprob: -7.703639507293701
    9. '(line' → logprob: -7.828639507293701
    10. '```' → logprob: -8.57863998413086

Token 1411: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -2.165027217415627e-05
    2. ' line' → logprob: -10.750021934509277
    3. 'try' → logprob: -16.12502098083496
    4. '           ' → logprob: -18.00002098083496
    5. '	line' → logprob: -18.50002098083496
    6. '```' → logprob: -19.25002098083496
    7. 'l' → logprob: -19.37502098083496
    8. '       ' → logprob: -19.50002098083496
    9. '#line' → logprob: -19.87502098083496
    10. 'ligne' → logprob: -20.50002098083496

Token 1412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001059486996382475
    2. '=line' → logprob: -7.126059532165527
    3. '=sys' → logprob: -8.626059532165527
    4. ' =' → logprob: -9.501059532165527
    5. '=
' → logprob: -15.126059532165527
    6. '=input' → logprob: -15.251059532165527
    7. 'line' → logprob: -16.37605857849121
    8. '=}' → logprob: -17.37605857849121
    9. '=user' → logprob: -17.62605857849121
    10. '＝' → logprob: -18.00105857849121

Token 1413: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00023333763238042593
    2. ' sys' → logprob: -8.75023365020752
    3. 'input' → logprob: -9.50023365020752
    4. '=sys' → logprob: -17.875232696533203
    5. ' input' → logprob: -18.375232696533203
    6. '(sys' → logprob: -19.625232696533203
    7. 'import' → logprob: -19.875232696533203
    8. 'stdin' → logprob: -20.375232696533203
    9. '	sys' → logprob: -20.875232696533203
    10. 'Sys' → logprob: -22.500232696533203

Token 1414: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.024311332032084465
    2. 'stdin' → logprob: -4.274311542510986
    3. 'in' → logprob: -4.649311542510986
    4. '.readline' → logprob: -8.149311065673828
    5. 'sys' → logprob: -9.399311065673828
    6. '(stdin' → logprob: -9.899311065673828
    7. 'din' → logprob: -10.024311065673828
    8. 'd' → logprob: -10.399311065673828
    9. '=sys' → logprob: -12.274311065673828
    10. ' stdin' → logprob: -12.274311065673828

Token 1415: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.625
    3. '```' → logprob: -17.125
    4. ' readline' → logprob: -17.25
    5. '.stdin' → logprob: -17.5
    6. 'read' → logprob: -19.0
    7. '.readlines' → logprob: -19.125
    8. 'stdin' → logprob: -19.75
    9. '   ' → logprob: -20.875
    10. '
' → logprob: -20.875

Token 1416: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7042244076728821
    2. '           ' → logprob: -0.7042244076728821
    3. '()' → logprob: -5.954224586486816
    4. '=' → logprob: -6.204224586486816
    5. 'if' → logprob: -6.454224586486816
    6. '()
' → logprob: -6.704224586486816
    7. '().' → logprob: -6.954224586486816
    8. ' =' → logprob: -7.329224586486816
    9. ' if' → logprob: -7.579224586486816
    10. '(' → logprob: -8.704224586486816

Token 1417: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020262619480490685
    2. '           ' → logprob: -4.645262718200684
    3. 'if' → logprob: -4.895262718200684
    4. ' if' → logprob: -5.895262718200684
    5. '```' → logprob: -9.895262718200684
    6. 's' → logprob: -9.895262718200684
    7. 'n' → logprob: -10.020262718200684
    8. '   ' → logprob: -11.645262718200684
    9. 'If' → logprob: -11.770262718200684
    10. '<|end|>' → logprob: -11.895262718200684

Token 1418: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -7.088138227118179e-05
    2. '           ' → logprob: -10.250070571899414
    3. ' if' → logprob: -10.250070571899414
    4. 'If' → logprob: -17.250070571899414
    5. '
' → logprob: -18.625070571899414
    6. ';if' → logprob: -18.625070571899414
    7. '       ' → logprob: -19.375070571899414
    8. 's' → logprob: -19.500070571899414
    9. '	if' → logprob: -20.125070571899414
    10. '```' → logprob: -20.250070571899414

Token 1419: ' not' (ID: 625)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.049170080572366714
    2. 'not' → logprob: -3.0491700172424316
    3. ' not' → logprob: -7.549170017242432
    4. ' line' → logprob: -9.79917049407959
    5. '(line' → logprob: -15.29917049407959
    6. '#line' → logprob: -15.79917049407959
    7. 'len' → logprob: -16.799169540405273
    8. '	line' → logprob: -17.549169540405273
    9. '=line' → logprob: -18.049169540405273
    10. '[line' → logprob: -18.299169540405273

Token 1420: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0001584850688232109
    2. ' line' → logprob: -8.750158309936523
    3. '	line' → logprob: -19.875158309936523
    4. '#line' → logprob: -21.375158309936523
    5. '(line' → logprob: -21.500158309936523
    6. 'ligne' → logprob: -22.250158309936523
    7. '=line' → logprob: -22.625158309936523
    8. '[line' → logprob: -23.000158309936523
    9. 'Line' → logprob: -24.250158309936523
    10. '
' → logprob: -24.875158309936523

Token 1421: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09050044417381287
    2. ':' → logprob: -2.4655003547668457
    3. '               ' → logprob: -6.965500354766846
    4. '):
' → logprob: -8.090500831604004
    5. '.strip' → logprob: -8.715500831604004
    6. ':return' → logprob: -9.715500831604004
    7. '           ' → logprob: -11.090500831604004
    8. ' or' → logprob: -11.215500831604004
    9. ')' → logprob: -11.590500831604004
    10. 'continue' → logprob: -12.090500831604004

Token 1422: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018158364109694958
    2. '           ' → logprob: -6.3768157958984375
    3. 'break' → logprob: -9.751815795898438
    4. 'return' → logprob: -10.251815795898438
    5. '                   ' → logprob: -12.501815795898438
    6. ':
' → logprob: -13.126815795898438
    7. ' break' → logprob: -13.126815795898438
    8. ' return' → logprob: -13.126815795898438
    9. '                       ' → logprob: -13.251815795898438
    10. ':return' → logprob: -13.751815795898438

Token 1423: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004379924852401018
    2. '               ' → logprob: -5.754379749298096
    3. ' return' → logprob: -7.254379749298096
    4. 'break' → logprob: -7.754379749298096
    5. '                   ' → logprob: -9.754380226135254
    6. 'exit' → logprob: -12.504380226135254
    7. 'import' → logprob: -13.379380226135254
    8. 'print' → logprob: -14.629380226135254
    9. '                       ' → logprob: -14.754380226135254
    10. '
' → logprob: -15.129380226135254

Token 1424: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020022729877382517
    2. '
' → logprob: -6.377002239227295
    3. '        
' → logprob: -8.877002716064453
    4. 'n' → logprob: -9.627002716064453
    5. 'if' → logprob: -10.877002716064453
    6. ',' → logprob: -11.377002716064453
    7. '```' → logprob: -11.377002716064453
    8. 's' → logprob: -11.502002716064453
    9. 'tokens' → logprob: -11.752002716064453
    10. 'parts' → logprob: -12.002002716064453

Token 1425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016611411410849541
    2. '```' → logprob: -9.250165939331055
    3. 'n' → logprob: -10.875165939331055
    4. 'if' → logprob: -11.375165939331055
    5. 'parts' → logprob: -11.625165939331055
    6. '
' → logprob: -11.875165939331055
    7. '           ' → logprob: -12.250165939331055
    8. 'tokens' → logprob: -12.500165939331055
    9. 's' → logprob: -12.625165939331055
    10. '        
' → logprob: -12.750165939331055

Token 1426: ' if' (ID: 538)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07655851542949677
    2. 'n' → logprob: -2.8265585899353027
    3. '       ' → logprob: -4.326558589935303
    4. 'parts' → logprob: -6.826558589935303
    5. 'if' (adapté à ' if') → logprob: -9.326558113098145
    6. 'try' → logprob: -9.826558113098145
    7. 'tokens' → logprob: -10.576558113098145
    8. ' parts' → logprob: -12.076558113098145
    9. '```' → logprob: -13.201558113098145
    10. ' N' → logprob: -13.451558113098145

Token 1427: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04859202727675438
    2. 'line' → logprob: -3.0485920906066895
    3. ' not' → logprob: -13.423591613769531
    4. ''' → logprob: -14.298591613769531
    5. '(line' → logprob: -14.423591613769531
    6. '#line' → logprob: -14.798591613769531
    7. '	line' → logprob: -15.048591613769531
    8. '   ' → logprob: -15.048591613769531
    9. ' ' → logprob: -15.298591613769531
    10. '=line' → logprob: -15.673591613769531

Token 1428: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.6530025601387024
    2. '.' → logprob: -0.7780025601387024
    3. '==' → logprob: -4.153002738952637
    4. ' ==' → logprob: -5.903002738952637
    5. '.startswith' → logprob: -7.153002738952637
    6. ' .' → logprob: -7.403002738952637
    7. '   ' → logprob: -9.278002738952637
    8. '```' → logprob: -9.653002738952637
    9. '().' → logprob: -9.778002738952637
    10. '.split' → logprob: -10.278002738952637

Token 1429: '()' (ID: 416)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.4569723308086395
    2. '==' → logprob: -1.456972360610962
    3. '()' → logprob: -2.081972360610962
    4. ' ==' → logprob: -4.706972122192383
    5. '()=="' → logprob: -9.581972122192383
    6. '().' → logprob: -10.081972122192383
    7. ')==' → logprob: -11.206972122192383
    8. '===' → logprob: -12.206972122192383
    9. '=='' → logprob: -12.456972122192383
    10. '```' → logprob: -12.581972122192383

Token 1430: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00892275758087635
    2. ' ==' → logprob: -4.883922576904297
    3. '()==' → logprob: -6.883922576904297
    4. '=='' → logprob: -8.508922576904297
    5. '==
' → logprob: -9.758922576904297
    6. ')==' → logprob: -11.508922576904297
    7. '=="' → logprob: -11.633922576904297
    8. '=' → logprob: -12.383922576904297
    9. '===' → logprob: -12.383922576904297
    10. ']==' → logprob: -13.258922576904297

Token 1431: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5759987235069275
    2. '"' → logprob: -0.8259987235069275
    3. '0' → logprob: -9.825998306274414
    4. ' '' → logprob: -12.325998306274414
    5. '('' → logprob: -15.075998306274414
    6. '`' → logprob: -15.325998306274414
    7. ' "' → logprob: -15.325998306274414
    8. '("' → logprob: -17.950998306274414
    9. ' ' → logprob: -18.075998306274414
    10. '```' → logprob: -18.200998306274414

Token 1432: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018613664724398404
    2. ''' → logprob: -8.7501859664917
    3. '"' → logprob: -11.3751859664917
    4. '':
' → logprob: -12.0001859664917
    5. '':' → logprob: -12.2501859664917
    6. '```' → logprob: -13.2501859664917
    7. '''' → logprob: -13.5001859664917
    8. ' ' → logprob: -14.5001859664917
    9. '#' → logprob: -14.7501859664917
    10. '``' → logprob: -15.2501859664917

Token 1433: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029750604182481766
    2. '0' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.15475082397461
    4. '  ' → logprob: -17.40475082397461
    5. ' ' → logprob: -17.40475082397461
    6. ''' → logprob: -18.52975082397461
    7. '':
' → logprob: -18.65475082397461
    8. ',' → logprob: -19.27975082397461
    9. ' '' → logprob: -19.27975082397461
    10. '':' → logprob: -20.02975082397461

Token 1434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -18.750036239624023
    4. ''' → logprob: -19.625036239624023
    5. '  ' → logprob: -20.375036239624023
    6. '   ' → logprob: -20.500036239624023
    7. '
' → logprob: -20.875036239624023
    8. '00' → logprob: -21.250036239624023
    9. ''''
' → logprob: -21.250036239624023
    10. '``' → logprob: -21.875036239624023

Token 1435: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.008778716437518597
    2. '\n' → logprob: -5.3837785720825195
    3. '':' → logprob: -5.5087785720825195
    4. ''' → logprob: -10.25877857208252
    5. '':
' → logprob: -10.38377857208252
    6. ''):
' → logprob: -11.13377857208252
    7. '":
' → logprob: -11.75877857208252
    8. '):
' → logprob: -13.00877857208252
    9. '       ' → logprob: -13.13377857208252
    10. '\r' → logprob: -13.50877857208252

Token 1436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.049755782238208e-05
    2. 'break' → logprob: -11.12505054473877
    3. ' break' → logprob: -11.62505054473877
    4. '		' → logprob: -11.75005054473877
    5. 'continue' → logprob: -12.12505054473877
    6. ':
' → logprob: -12.25005054473877
    7. ':' → logprob: -13.00005054473877
    8. '               ' → logprob: -13.37505054473877
    9. '       ' → logprob: -13.62505054473877
    10. ' continue' → logprob: -13.62505054473877

Token 1437: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0008635803242214024
    2. '           ' → logprob: -7.750863552093506
    3. 'return' → logprob: -8.250864028930664
    4. ' break' → logprob: -8.750864028930664
    5. '	break' → logprob: -11.625864028930664
    6. '       ' → logprob: -13.125864028930664
    7. '```' → logprob: -14.000864028930664
    8. '               ' → logprob: -14.250864028930664
    9. '		' → logprob: -14.625864028930664
    10. '_break' → logprob: -15.375864028930664

Token 1438: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001923352392623201
    2. '
' → logprob: -9.375192642211914
    3. '        
' → logprob: -9.500192642211914
    4. '```' → logprob: -11.125192642211914
    5. '   ' → logprob: -11.250192642211914
    6. 'n' → logprob: -13.250192642211914
    7. '    
' → logprob: -14.375192642211914
    8. '           ' → logprob: -14.375192642211914
    9. '            
' → logprob: -14.625192642211914
    10. '  
' → logprob: -14.750192642211914

Token 1439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001025895617203787
    2. '```' → logprob: -10.000102996826172
    3. '   ' → logprob: -10.375102996826172
    4. '        
' → logprob: -10.750102996826172
    5. 'n' → logprob: -13.500102996826172
    6. '
' → logprob: -13.750102996826172
    7. '           ' → logprob: -14.375102996826172
    8. '    
' → logprob: -15.625102996826172
    9. ' parts' → logprob: -15.750102996826172
    10. '            
' → logprob: -15.875102996826172

Token 1440: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -3.650518920039758e-06
    2. '       ' → logprob: -13.250003814697266
    3. 'parts' → logprob: -14.000003814697266
    4. 'n' → logprob: -14.250003814697266
    5. ' N' → logprob: -14.750003814697266
    6. '   ' → logprob: -17.875003814697266
    7. ' parts' → logprob: -17.875003814697266
    8. '```' → logprob: -18.375003814697266
    9. 'tokens' → logprob: -19.375003814697266
    10. '	N' → logprob: -21.000003814697266

Token 1441: ',C' (ID: 26924)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5260254144668579
    2. '=' → logprob: -1.151025414466858
    3. ',' → logprob: -2.4010252952575684
    4. '_tokens' → logprob: -7.026025295257568
    5. 'tokens' → logprob: -7.401025295257568
    6. '=int' → logprob: -8.651025772094727
    7. ',N' → logprob: -8.776025772094727
    8. ',n' → logprob: -10.276025772094727
    9. ' ,' → logprob: -10.901025772094727
    10. '=line' → logprob: -10.901025772094727

Token 1442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40762048959732056
    2. '=' → logprob: -1.1576204299926758
    3. ',' → logprob: -3.907620429992676
    4. ',N' → logprob: -8.282620429992676
    5. '=line' → logprob: -9.157620429992676
    6. '=N' → logprob: -10.907620429992676
    7. '=input' → logprob: -11.282620429992676
    8. '=int' → logprob: -11.532620429992676
    9. ',line' → logprob: -11.782620429992676
    10. ',C' → logprob: -12.032620429992676

Token 1443: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.023246875032782555
    2. ' map' → logprob: -3.7732467651367188
    3. 'list' → logprob: -13.523246765136719
    4. '(map' → logprob: -17.02324676513672
    5. '[' → logprob: -17.89824676513672
    6. 'line' → logprob: -18.27324676513672
    7. '	map' → logprob: -18.39824676513672
    8. 'tuple' → logprob: -19.14824676513672
    9. '.map' → logprob: -19.39824676513672
    10. ' list' → logprob: -19.64824676513672

Token 1444: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006372620700858533
    2. '(str' → logprob: -7.750637054443359
    3. 'int' → logprob: -8.50063705444336
    4. 'str' → logprob: -13.87563705444336
    5. '[int' → logprob: -13.87563705444336
    6. '=int' → logprob: -14.25063705444336
    7. '(lambda' → logprob: -15.62563705444336
    8. '```' → logprob: -15.75063705444336
    9. '(' → logprob: -15.87563705444336
    10. ' int' → logprob: -16.12563705444336

Token 1445: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.028516806662082672
    2. 'line' → logprob: -4.40351676940918
    3. ')' → logprob: -4.90351676940918
    4. ',line' → logprob: -5.15351676940918
    5. ',' → logprob: -6.40351676940918
    6. '=line' → logprob: -7.65351676940918
    7. '[line' → logprob: -8.52851676940918
    8. '#line' → logprob: -8.90351676940918
    9. '(' → logprob: -9.52851676940918
    10. ' line' → logprob: -9.65351676940918

Token 1446: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.4137084484100342
    2. '().' → logprob: -1.1637084484100342
    3. '.split' → logprob: -3.913708448410034
    4. '.' → logprob: -5.038708686828613
    5. ' .' → logprob: -10.788708686828613
    6. '   ' → logprob: -12.163708686828613
    7. '.rstrip' → logprob: -13.288708686828613
    8. '.readline' → logprob: -13.788708686828613
    9. 'strip' → logprob: -13.788708686828613
    10. '```' → logprob: -14.163708686828613

Token 1447: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4855663721391466e-05
    2. '.split' → logprob: -11.125015258789062
    3. '()' → logprob: -16.875015258789062
    4. 'split' → logprob: -18.125015258789062
    5. '()
' → logprob: -19.625015258789062
    6. '()[' → logprob: -20.125015258789062
    7. ' ().' → logprob: -20.125015258789062
    8. '(' → logprob: -21.125015258789062
    9. '('').' → logprob: -21.125015258789062
    10. '```' → logprob: -21.375015258789062

Token 1448: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.75
    3. '(split' → logprob: -19.5
    4. '.split' → logprob: -19.75
    5. 'spl' → logprob: -21.5
    6. ')' → logprob: -22.5
    7. '```' → logprob: -24.5
    8. '_split' → logprob: -24.5
    9. '().' → logprob: -24.875
    10. ' ' → logprob: -25.5

Token 1449: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6955826282501221
    2. '())' → logprob: -0.6955826282501221
    3. '()' → logprob: -6.320582389831543
    4. '())
' → logprob: -7.570582389831543
    5. ')
' → logprob: -9.195582389831543
    6. '')' → logprob: -12.445582389831543
    7. '()
' → logprob: -12.570582389831543
    8. '))' → logprob: -12.945582389831543
    9. '(' → logprob: -13.070582389831543
    10. ' )' → logprob: -13.695582389831543

Token 1450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044666738249361515
    2. '   ' → logprob: -5.879466533660889
    3. 'neighbors' → logprob: -6.629466533660889
    4. '```' → logprob: -8.629467010498047
    5. 'board' → logprob: -9.004467010498047
    6. 'if' → logprob: -10.879467010498047
    7. '           ' → logprob: -12.629467010498047
    8. '
' → logprob: -12.629467010498047
    9. '        
' → logprob: -13.004467010498047
    10. '	board' → logprob: -13.754467010498047

Token 1451: ' board' (ID: 6796)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8973017334938049
    2. 'neighbors' → logprob: -0.8973017334938049
    3. 'board' (adapté à ' board') → logprob: -1.7723016738891602
    4. '   ' → logprob: -4.39730167388916
    5. '       ' → logprob: -6.14730167388916
    6. ' if' → logprob: -9.64730167388916
    7. 'ne' → logprob: -9.64730167388916
    8. 'neighbor' → logprob: -9.77230167388916
    9. '```' → logprob: -10.52230167388916
    10. ' neighbors' → logprob: -10.52230167388916

Token 1452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759440064430237
    2. ' =' → logprob: -0.8259440064430237
    3. '   ' → logprob: -12.575943946838379
    4. '[' → logprob: -15.575943946838379
    5. '=[]' → logprob: -15.700943946838379
    6. '    ' → logprob: -16.075944900512695
    7. '＝' → logprob: -16.200944900512695
    8. '.append' → logprob: -16.575944900512695
    9. ')' → logprob: -16.950944900512695
    10. '=create' → logprob: -17.075944900512695

Token 1453: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.676292231422849e-05
    2. ' read' → logprob: -11.000017166137695
    3. '	read' → logprob: -22.500017166137695
    4. '   ' → logprob: -23.000017166137695
    5. '(read' → logprob: -24.500017166137695
    6. '[' → logprob: -25.625017166137695
    7. '[]' → logprob: -26.375017166137695
    8. 'reading' → logprob: -26.375017166137695
    9. '  ' → logprob: -26.750017166137695
    10. '.read' → logprob: -26.875017166137695

Token 1454: '_board' (ID: 55737)
  Prédit: '_board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -3.4121114822482923e-06
    2. 'board' → logprob: -12.625003814697266
    3. '(board' → logprob: -17.125003814697266
    4. '_b' → logprob: -17.750003814697266
    5. ' board' → logprob: -18.250003814697266
    6. '```' → logprob: -18.250003814697266
    7. '_' → logprob: -18.375003814697266
    8. 'Board' → logprob: -18.625003814697266
    9. '_BOARD' → logprob: -18.875003814697266
    10. '_bo' → logprob: -19.125003814697266

Token 1455: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -3.173704271830502e-06
    2. 'N' → logprob: -12.87500286102295
    3. '(
' → logprob: -15.75000286102295
    4. '(' → logprob: -16.250003814697266
    5. '```' → logprob: -16.250003814697266
    6. '       ' → logprob: -16.375003814697266
    7. '   ' → logprob: -17.375003814697266
    8. 'def' → logprob: -18.125003814697266
    9. '
' → logprob: -18.375003814697266
    10. ' (' → logprob: -19.125003814697266

Token 1456: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2521461844444275
    2. ')
' → logprob: -1.5021462440490723
    3. '       ' → logprob: -8.502145767211914
    4. ')
' → logprob: -11.627145767211914
    5. '   ' → logprob: -12.377145767211914
    6. ' )' → logprob: -15.502145767211914
    7. ')

' → logprob: -15.627145767211914
    8. ')`
' → logprob: -15.627145767211914
    9. ' )
' → logprob: -16.127145767211914
    10. ' ' → logprob: -16.752145767211914

Token 1457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4765606224536896
    2. 'neighbors' → logprob: -0.9765605926513672
    3. '   ' → logprob: -6.976560592651367
    4. 'ne' → logprob: -7.226560592651367
    5. ' neighbors' → logprob: -7.851560592651367
    6. '```' → logprob: -8.851560592651367
    7. '           ' → logprob: -8.976560592651367
    8. '_neighbors' → logprob: -9.351560592651367
    9. 'neighbor' → logprob: -10.851560592651367
    10. '(ne' → logprob: -11.476560592651367

Token 1458: ' if' (ID: 538)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.03423752263188362
    2. 'if' (adapté à ' if') → logprob: -3.4092376232147217
    3. '       ' → logprob: -7.659237384796143
    4. 'ne' → logprob: -10.1592378616333
    5. '   ' → logprob: -10.5342378616333
    6. 'neighbor' → logprob: -10.7842378616333
    7. '```' → logprob: -11.7842378616333
    8. ' neighbors' → logprob: -11.7842378616333
    9. '           ' → logprob: -12.0342378616333
    10. 'print' → logprob: -12.6592378616333

Token 1459: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13113008439540863
    2. 'C' → logprob: -3.1311299800872803
    3. '(N' → logprob: -3.3811299800872803
    4. ' N' → logprob: -4.256130218505859
    5. 'neighbors' → logprob: -4.631130218505859
    6. ' (' → logprob: -4.756130218505859
    7. '(C' → logprob: -5.381130218505859
    8. '(' → logprob: -5.756130218505859
    9. ' neighbors' → logprob: -6.131130218505859
    10. ' C' → logprob: -6.256130218505859

Token 1460: ' not' (ID: 625)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3015332520008087
    2. '==' → logprob: -1.8015332221984863
    3. ' >' → logprob: -2.9265332221984863
    4. ' ==' → logprob: -3.3015332221984863
    5. '>=' → logprob: -6.926533222198486
    6. '!=' → logprob: -7.426533222198486
    7. ' !=' → logprob: -7.551533222198486
    8. '<' → logprob: -7.551533222198486
    9. '   ' → logprob: -7.801533222198486
    10. ' <' → logprob: -8.051533699035645

Token 1461: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.60866779088974
    2. ' in' → logprob: -1.2336678504943848
    3. '(ne' → logprob: -2.1086678504943848
    4. 'neighbors' → logprob: -3.2336678504943848
    5. '_neighbors' → logprob: -6.358667850494385
    6. 'ne' → logprob: -6.608667850494385
    7. ' neighbors' → logprob: -8.233667373657227
    8. '```' → logprob: -8.858667373657227
    9. '   ' → logprob: -9.108667373657227
    10. '       ' → logprob: -9.358667373657227

Token 1462: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -7.493430894101039e-05
    2. ' neighbors' → logprob: -9.500075340270996
    3. 'neighbor' → logprob: -18.00007438659668
    4. '_neighbors' → logprob: -18.62507438659668
    5. 'ne' → logprob: -20.00007438659668
    6. '```' → logprob: -20.62507438659668
    7. 'Neighbors' → logprob: -22.00007438659668
    8. '   ' → logprob: -22.50007438659668
    9. '(ne' → logprob: -24.00007438659668
    10. 'neur' → logprob: -24.00007438659668

Token 1463: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -1.1279553291387856e-05
    2. ':' → logprob: -11.875011444091797
    3. ':
' → logprob: -13.250011444091797
    4. '_cached' → logprob: -13.750011444091797
    5. '   ' → logprob: -14.500011444091797
    6. 'cache' → logprob: -14.625011444091797
    7. '_CACHE' → logprob: -15.000011444091797
    8. '```' → logprob: -16.875011444091797
    9. 'Cache' → logprob: -17.000011444091797
    10. '_c' → logprob: -17.875011444091797

Token 1464: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.039170216768980026
    2. ':' → logprob: -3.289170265197754
    3. '   ' → logprob: -8.039170265197754
    4. '=' → logprob: -8.164170265197754
    5. '):
' → logprob: -8.539170265197754
    6. '           ' → logprob: -9.164170265197754
    7. '       ' → logprob: -9.539170265197754
    8. '():
' → logprob: -9.789170265197754
    9. ' =' → logprob: -10.289170265197754
    10. ' and' → logprob: -11.039170265197754

Token 1465: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03522565960884094
    2. '   ' → logprob: -4.035225868225098
    3. 'neighbors' → logprob: -4.410225868225098
    4. '```' → logprob: -5.535225868225098
    5. '       ' → logprob: -7.535225868225098
    6. ' neighbors' → logprob: -8.410225868225098
    7. '_neighbors' → logprob: -10.285225868225098
    8. 'ne' → logprob: -11.035225868225098
    9. '               ' → logprob: -11.285225868225098
    10. '``' → logprob: -12.660225868225098

Token 1466: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.00033713103039190173
    2. ' neighbors' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.875337600708008
    4. '```' → logprob: -15.250337600708008
    5. '       ' → logprob: -15.625337600708008
    6. '_neighbors' → logprob: -15.750337600708008
    7. '           ' → logprob: -16.250337600708008
    8. 'neighbor' → logprob: -16.875337600708008
    9. 'ne' → logprob: -17.625337600708008
    10. 'Neighbors' → logprob: -18.250337600708008

Token 1467: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -7.97024549683556e-05
    2. 'cache' → logprob: -9.750080108642578
    3. '[(' → logprob: -11.625080108642578
    4. 'neighbors' → logprob: -12.125080108642578
    5. '=' → logprob: -12.875080108642578
    6. '_neighbors' → logprob: -13.625080108642578
    7. '[' → logprob: -13.875080108642578
    8. '[N' → logprob: -14.250080108642578
    9. '_cached' → logprob: -14.750080108642578
    10. 'Cache' → logprob: -14.750080108642578

Token 1468: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.00016623330884613097
    2. '=' → logprob: -9.125165939331055
    3. '=N' → logprob: -10.375165939331055
    4. ' =' → logprob: -10.875165939331055
    5. '[' → logprob: -12.375165939331055
    6. '[n' → logprob: -13.000165939331055
    7. '=[' → logprob: -15.875165939331055
    8. ' [' → logprob: -15.875165939331055
    9. '   ' → logprob: -16.375165939331055
    10. 'N' → logprob: -16.625165939331055

Token 1469: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005948117468506098
    2. ']=' → logprob: -5.130948066711426
    3. '=' → logprob: -11.005948066711426
    4. ')' → logprob: -13.380948066711426
    5. ' ]' → logprob: -14.755948066711426
    6. '           ' → logprob: -15.255948066711426
    7. '   ' → logprob: -15.380948066711426
    8. ' =' → logprob: -16.130949020385742
    9. ')=' → logprob: -16.380949020385742
    10. ']=(' → logprob: -16.380949020385742

Token 1470: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.615255839889869e-05
    2. ' =' → logprob: -9.250096321105957
    3. '=
' → logprob: -18.12509536743164
    4. '=n' → logprob: -20.37509536743164
    5. '=

' → logprob: -20.75009536743164
    6. ']=' → logprob: -21.00009536743164
    7. '=get' → logprob: -21.12509536743164
    8. '[' → logprob: -21.62509536743164
    9. '=}' → logprob: -21.75009536743164
    10. '_=' → logprob: -21.87509536743164

Token 1471: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.0206720617134124e-05
    2. ' get' → logprob: -11.50001049041748
    3. '(get' → logprob: -24.000009536743164
    4. '=get' → logprob: -24.375009536743164
    5. '[get' → logprob: -25.625009536743164
    6. '	get' → logprob: -25.875009536743164
    7. '.get' → logprob: -27.125009536743164
    8. ',get' → logprob: -28.625009536743164
    9. '/get' → logprob: -29.000009536743164
    10. '_get' → logprob: -29.125009536743164

Token 1472: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.03804677724838257
    2. 'neighbors' → logprob: -3.2880468368530273
    3. '_ne' → logprob: -12.663046836853027
    4. '(ne' → logprob: -13.413046836853027
    5. 'Neighbors' → logprob: -15.038046836853027
    6. ' neighbors' → logprob: -15.538046836853027
    7. '```' → logprob: -16.53804588317871
    8. 'ne' → logprob: -16.91304588317871
    9. 'neighbor' → logprob: -17.53804588317871
    10. '(_' → logprob: -19.03804588317871

Token 1473: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -15.625
    3. '```' → logprob: -16.875
    4. '(' → logprob: -17.375
    5. '(n' → logprob: -17.625
    6. 'N' → logprob: -17.875
    7. '
' → logprob: -18.0
    8. '(
' → logprob: -18.25
    9. ')' → logprob: -18.5
    10. 'def' → logprob: -19.125

Token 1474: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -14.625007629394531
    4. '))' → logprob: -16.00000762939453
    5. '       ' → logprob: -17.25000762939453
    6. '   ' → logprob: -18.00000762939453
    7. ')return' → logprob: -18.00000762939453
    8. '())' → logprob: -18.50000762939453
    9. ')#' → logprob: -18.50000762939453
    10. '           ' → logprob: -18.87500762939453

Token 1475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2983558177947998
    2. 'neighbors' → logprob: -1.4233558177947998
    3. '           ' → logprob: -4.298356056213379
    4. '```' → logprob: -6.298356056213379
    5. '   ' → logprob: -6.673356056213379
    6. ' neighbors' → logprob: -8.298356056213379
    7. 'ne' → logprob: -9.923356056213379
    8. 'neighbor' → logprob: -10.298356056213379
    9. '_neighbors' → logprob: -11.048356056213379
    10. '(ne' → logprob: -12.673356056213379

Token 1476: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.0014186843764036894
    2. ' neighbors' → logprob: -7.126418590545654
    3. '       ' → logprob: -7.501418590545654
    4. '           ' → logprob: -10.626419067382812
    5. 'neighbor' → logprob: -11.626419067382812
    6. 'board' → logprob: -11.751419067382812
    7. '   ' → logprob: -11.876419067382812
    8. '```' → logprob: -12.126419067382812
    9. 'ne' → logprob: -13.001419067382812
    10. '_neighbors' → logprob: -13.251419067382812

Token 1477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695425748825073
    2. '=' → logprob: -2.1269543170928955
    3. '=N' → logprob: -10.626954078674316
    4. '_cache' → logprob: -14.626954078674316
    5. '[N' → logprob: -14.876954078674316
    6. '=
' → logprob: -15.126954078674316
    7. '   ' → logprob: -15.876954078674316
    8. '=n' → logprob: -16.126955032348633
    9. '=current' → logprob: -16.126955032348633
    10. '=C' → logprob: -16.376955032348633

Token 1478: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -7.493430894101039e-05
    2. ' neighbors' → logprob: -9.500075340270996
    3. '_neighbors' → logprob: -17.50007438659668
    4. '(ne' → logprob: -18.25007438659668
    5. '   ' → logprob: -18.50007438659668
    6. '```' → logprob: -18.75007438659668
    7. 'ne' → logprob: -19.00007438659668
    8. 'neighbor' → logprob: -19.12507438659668
    9. '       ' → logprob: -19.62507438659668
    10. '           ' → logprob: -20.37507438659668

Token 1479: '_cache' (ID: 27045)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.3880060911178589
    2. '_cache' → logprob: -1.1380060911178589
    3. 'Cache' → logprob: -7.138006210327148
    4. '_CACHE' → logprob: -9.638006210327148
    5. '[n' → logprob: -9.888006210327148
    6. '[C' → logprob: -10.013006210327148
    7. '[(' → logprob: -10.388006210327148
    8. 'CACHE' → logprob: -10.388006210327148
    9. '_cached' → logprob: -10.388006210327148
    10. 'cache' → logprob: -11.138006210327148

Token 1480: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -3.054500666621607e-06
    2. 'N' → logprob: -12.75000286102295
    3. '[n' → logprob: -16.750003814697266
    4. '[' → logprob: -17.875003814697266
    5. '```' → logprob: -18.875003814697266
    6. ' [' → logprob: -19.125003814697266
    7. '[
' → logprob: -20.625003814697266
    8. '<N' → logprob: -20.750003814697266
    9. '	N' → logprob: -20.750003814697266
    10. '   ' → logprob: -20.875003814697266

Token 1481: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015547768212854862
    2. '       ' → logprob: -4.890547752380371
    3. ')
' → logprob: -4.890547752380371
    4. ']' → logprob: -8.640547752380371
    5. '<|end|>' → logprob: -8.890547752380371
    6. '
' → logprob: -11.140547752380371
    7. '   ' → logprob: -11.640547752380371
    8. '<|end|>' → logprob: -11.765547752380371
    9. ')]' → logprob: -12.140547752380371
    10. '           ' → logprob: -12.265547752380371

Token 1482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18143266439437866
    2. 'score' → logprob: -1.9314327239990234
    3. '   ' → logprob: -4.681432723999023
    4. 'print' → logprob: -5.056432723999023
    5. 'result' → logprob: -5.431432723999023
    6. '```' → logprob: -7.431432723999023
    7. '        
' → logprob: -9.181432723999023
    8. ' score' → logprob: -9.306432723999023
    9. '	score' → logprob: -9.556432723999023
    10. 'max' → logprob: -10.681432723999023

Token 1483: ' res' (ID: 694)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.18249408900737762
    2. 'print' → logprob: -2.1824941635131836
    3. 'result' → logprob: -2.9324941635131836
    4. '       ' → logprob: -7.307494163513184
    5. 'max' → logprob: -10.432494163513184
    6. 'res' (adapté à ' res') → logprob: -10.557494163513184
    7. ' score' → logprob: -10.807494163513184
    8. 'best' → logprob: -11.182494163513184
    9. 'answer' → logprob: -11.682494163513184
    10. ' print' → logprob: -12.182494163513184

Token 1484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0462249219417572
    2. '=' → logprob: -3.79622483253479
    3. 'ult' → logprob: -4.171225070953369
    4. 'ults' → logprob: -5.421225070953369
    5. '=res' → logprob: -6.046225070953369
    6. 'ultat' → logprob: -8.421224594116211
    7. '   ' → logprob: -8.546224594116211
    8. 'ULT' → logprob: -10.796224594116211
    9. '=result' → logprob: -11.796224594116211
    10. 's' → logprob: -11.921224594116211

Token 1485: ' simulate' (ID: 66687)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -0.00033546582562848926
    2. ' simulate' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.000335693359375
    4. 'sim' → logprob: -19.375335693359375
    5. 'solve' → logprob: -21.500335693359375
    6. '(sim' → logprob: -21.875335693359375
    7. 'simulation' → logprob: -22.500335693359375
    8. ' ' → logprob: -22.875335693359375
    9. ' ' → logprob: -24.250335693359375
    10. '```' → logprob: -24.500335693359375

Token 1486: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -2.451116051815916e-05
    2. 'turn' → logprob: -10.625024795532227
    3. 'Turn' → logprob: -16.250024795532227
    4. '(turn' → logprob: -16.875024795532227
    5. '_' → logprob: -17.625024795532227
    6. '_t' → logprob: -18.250024795532227
    7. '```' → logprob: -18.375024795532227
    8. '_round' → logprob: -20.750024795532227
    9. '_step' → logprob: -20.750024795532227
    10. '(_' → logprob: -21.000024795532227

Token 1487: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -1.7432603272027336e-06
    2. 'board' → logprob: -13.375001907348633
    3. ' board' → logprob: -17.125001907348633
    4. '(' → logprob: -17.375001907348633
    5. '	board' → logprob: -18.250001907348633
    6. '.board' → logprob: -19.375001907348633
    7. '(Board' → logprob: -20.000001907348633
    8. ' (' → logprob: -20.375001907348633
    9. '```' → logprob: -20.375001907348633
    10. '(
' → logprob: -21.000001907348633

Token 1488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031258241506293416
    2. '       ' → logprob: -9.250312805175781
    3. ',res' → logprob: -9.500312805175781
    4. ' ,' → logprob: -9.625312805175781
    5. '(board' → logprob: -9.875312805175781
    6. ',n' → logprob: -11.750312805175781
    7. '(' → logprob: -12.125312805175781
    8. '(res' → logprob: -12.750312805175781
    9. '```' → logprob: -13.000312805175781
    10. ',
' → logprob: -13.500312805175781

Token 1489: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.5775361061096191
    2. 'C' → logprob: -0.8275361061096191
    3. ' neighbors' → logprob: -6.577536106109619
    4. ' C' → logprob: -8.577535629272461
    5. 'ne' → logprob: -11.827535629272461
    6. 'neighbor' → logprob: -12.827535629272461
    7. '```' → logprob: -13.327535629272461
    8. '_neighbors' → logprob: -13.452535629272461
    9. '
' → logprob: -14.202535629272461
    10. 'Neighbors' → logprob: -14.327535629272461

Token 1490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014165864326059818
    2. ',C' → logprob: -4.264165878295898
    3. ' ,' → logprob: -13.264165878295898
    4. '       ' → logprob: -15.264165878295898
    5. ',
' → logprob: -15.639165878295898
    6. ',N' → logprob: -16.3891658782959
    7. '(C' → logprob: -16.6391658782959
    8. ',res' → logprob: -17.5141658782959
    9. '```' → logprob: -17.7641658782959
    10. '           ' → logprob: -18.0141658782959

Token 1491: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0015023599844425917
    2. ' C' → logprob: -6.501502513885498
    3. '   ' → logprob: -19.251502990722656
    4. ')' → logprob: -19.876502990722656
    5. '=C' → logprob: -19.876502990722656
    6. '	C' → logprob: -20.126502990722656
    7. '>C' → logprob: -20.501502990722656
    8. ''C' → logprob: -21.001502990722656
    9. 'c' → logprob: -21.626502990722656
    10. '_C' → logprob: -22.251502990722656

Token 1492: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25193241238594055
    2. ')
' → logprob: -1.5019323825836182
    3. ')
' → logprob: -13.126932144165039
    4. '       ' → logprob: -14.251932144165039
    5. ')`
' → logprob: -16.00193214416504
    6. '   ' → logprob: -16.25193214416504
    7. ')

' → logprob: -16.50193214416504
    8. ')return' → logprob: -16.50193214416504
    9. ' )' → logprob: -16.75193214416504
    10. ')#' → logprob: -17.00193214416504

Token 1493: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12838925421237946
    2. '       ' → logprob: -2.128389358520508
    3. ' print' → logprob: -7.128389358520508
    4. '```' → logprob: -7.503389358520508
    5. '   ' → logprob: -9.253389358520508
    6. '
' → logprob: -12.128389358520508
    7. '	print' → logprob: -12.628389358520508
    8. '``' → logprob: -14.128389358520508
    9. '        
' → logprob: -14.128389358520508
    10. '#print' → logprob: -14.628389358520508

Token 1494: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. '       ' → logprob: -14.750000953674316
    3. ' print' → logprob: -14.750000953674316
    4. '```' → logprob: -16.125
    5. '
' → logprob: -19.625
    6. '        
' → logprob: -20.25
    7. '	print' → logprob: -20.625
    8. '``' → logprob: -21.0
    9. '#print' → logprob: -21.125
    10. '   ' → logprob: -22.125

Token 1495: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -5.512236498361744e-07
    2. 'res' → logprob: -14.500000953674316
    3. '(' → logprob: -18.25
    4. '(max' → logprob: -19.25
    5. '(result' → logprob: -20.25
    6. ' res' → logprob: -20.5
    7. '(f' → logprob: -21.625
    8. '$res' → logprob: -22.0
    9. '=res' → logprob: -22.25
    10. ' (' → logprob: -22.25

Token 1496: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.000001907348633
    3. '   ' → logprob: -15.500001907348633
    4. ')`' → logprob: -16.125001907348633
    5. ' )' → logprob: -16.625001907348633
    6. '`)' → logprob: -16.750001907348633
    7. '       ' → logprob: -17.250001907348633
    8. '')' → logprob: -17.250001907348633
    9. '())' → logprob: -17.750001907348633
    10. '")' → logprob: -18.000001907348633

Token 1497: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1498: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1602313369512558
    2. '__' → logprob: -1.910231351852417
    3. '___' → logprob: -12.535231590270996
    4. '_' → logprob: -13.285231590270996
    5. '_name' → logprob: -14.910231590270996
    6. '____' → logprob: -14.910231590270996
    7. '/__' → logprob: -15.160231590270996
    8. ' ' → logprob: -15.285231590270996
    9. '(__' → logprob: -15.660231590270996
    10. '```' → logprob: -16.16023063659668

Token 1499: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011650689877569675
    2. '==' → logprob: -4.761650562286377
    3. ' ==' → logprob: -5.886650562286377
    4. 'if' → logprob: -9.136651039123535
    5. ' __' → logprob: -9.761651039123535
    6. '=="' → logprob: -10.136651039123535
    7. '```' → logprob: -10.511651039123535
    8. 'name' → logprob: -11.886651039123535
    9. '.__' → logprob: -12.636651039123535
    10. '__.__' → logprob: -12.761651039123535

Token 1500: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007345817284658551
    2. '__.__' → logprob: -7.375734806060791
    3. '==' → logprob: -9.750734329223633
    4. ' ==' → logprob: -11.875734329223633
    5. '=="' → logprob: -11.875734329223633
    6. '__.' → logprob: -12.000734329223633
    7. '__["' → logprob: -12.125734329223633
    8. '__
' → logprob: -12.125734329223633
    9. '```' → logprob: -12.375734329223633
    10. '__('' → logprob: -12.500734329223633

Token 1501: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7051961421966553
    2. '__' → logprob: -0.7051961421966553
    3. ' ==' → logprob: -5.205196380615234
    4. '=="' → logprob: -5.205196380615234
    5. '=='' → logprob: -6.955196380615234
    6. '==
' → logprob: -10.830196380615234
    7. '__.__' → logprob: -11.830196380615234
    8. '===' → logprob: -12.330196380615234
    9. '=' → logprob: -12.330196380615234
    10. '```' → logprob: -12.580196380615234

Token 1502: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048836600035429
    2. ''' → logprob: -3.0488367080688477
    3. '__' → logprob: -8.298836708068848
    4. ' "__' → logprob: -14.923836708068848
    5. '"name' → logprob: -17.29883575439453
    6. ' '__' → logprob: -17.42383575439453
    7. '"user' → logprob: -18.42383575439453
    8. 'main' → logprob: -18.42383575439453
    9. ''name' → logprob: -18.67383575439453
    10. '('__' → logprob: -18.92383575439453

Token 1503: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10033660382032394
    2. '__' → logprob: -2.3503365516662598
    3. '"' → logprob: -9.600337028503418
    4. 'python' → logprob: -10.600337028503418
    5. 'name' → logprob: -10.850337028503418
    6. '__":
' → logprob: -12.225337028503418
    7. ''' → logprob: -12.475337028503418
    8. 'built' → logprob: -12.725337028503418
    9. 'root' → logprob: -14.225337028503418
    10. '```' → logprob: -14.475337028503418

Token 1504: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.01564987376332283
    2. '__' → logprob: -4.265649795532227
    3. '__':
' → logprob: -6.515649795532227
    4. '__["' → logprob: -13.265649795532227
    5. '__
' → logprob: -13.515649795532227
    6. '__.__' → logprob: -14.890649795532227
    7. '```' → logprob: -14.890649795532227
    8. '__()
' → logprob: -15.265649795532227
    9. '==' → logprob: -16.015649795532227
    10. '__);
' → logprob: -16.015649795532227

Token 1505: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.751746746478602e-05
    2. '	main' → logprob: -10.25004768371582
    3. ' main' → logprob: -11.75004768371582
    4. '   ' → logprob: -12.87504768371582
    5. '(main' → logprob: -14.50004768371582
    6. '
' → logprob: -14.50004768371582
    7. '_main' → logprob: -15.62504768371582
    8. '```' → logprob: -15.62504768371582
    9. '    
' → logprob: -15.87504768371582
    10. '__' → logprob: -16.75004768371582

Token 1506: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '   ' → logprob: -20.25
    4. '	main' → logprob: -21.0
    5. 'import' → logprob: -22.375
    6. '.main' → logprob: -26.0
    7. '(main' → logprob: -26.0
    8. '_main' → logprob: -26.625
    9. '
' → logprob: -28.125
    10. '```' → logprob: -28.875

Token 1507: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1505
Tokens correctement prédits (1ère position, stricte): 595
Tokens correctement prédits (1ère position, avec adaptation): 651
Tokens correctement prédits (top 10): 1206
Précision stricte (1ère position): 39.53%
Précision adaptée (1ère position): 43.26%
Précision (top 10): 80.13%
================================================================================
