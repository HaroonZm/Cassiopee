================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution pour le problème "Swapping Characters"
# 
# On doit générer la chaîne lexicographiquement la plus petite possible en effectuant au plus k permutations de caractères adjacents.
# Chaque swap permet de déplacer un caractère d'une position vers la gauche en échangeant avec son voisin immédiat.
#
# Approche détaillée :
# - On cherche à "faire remonter" progressivement les caractères les plus petits vers le début de la chaîne.
# - Une méthode efficace consiste à itérer sur la chaîne en position courant (i).
# - Pour chaque position i, on regarde dans un segment limité par la quantité de swaps restants k (car on ne peut pas faire remonter un caractère trop loin si k est petit).
# - On cherche dans s[i : i+k+1] le caractère minimum et sa position min_pos.
# - On déplace ce caractère min_pos vers i en effectuant min_pos - i swaps adjacents, ce qui réduit k de (min_pos - i).
# - On continue ainsi jusqu'à épuisement de k ou jusqu'à la fin de la chaîne.
#
# Complexité :
# - Il est crucial d'implémenter cette recherche efficacement.
# - Pour cela, on peut utiliser une structure de données telle que segment tree, ou une approche gloutonne en utilisant des indices.
# - Ici on applique une méthode basée sur un heap (tas) ou un arbre de segment.
# - Mais à cause de la limitation du nombre maximal de swaps très grand (jusqu'à 10^9), et la taille importante de la chaîne (2*10^5),
#   on privilégie une approche gloutonne en se servant d'un tableau index ou d'une structure adaptée.
#
# Implémentation choisie :
# - On utilise une structure de données "fenwick tree" ou "BIT" pour gérer efficacement.
# - Cependant, ici une méthode plus simple et efficace étant donné la contrainte : la méthode du "greedy with index scanning".
#
# Remarque :
# - On peut optimiser en utilisant une file d'attente pour chaque caractère pour retrouver rapidement la position minimale possible.
#
# Nous implémentons cette approche avec une liste de positions de chaque lettre, puis on essaie d'attraper le premier caractère le plus proche possible.

import sys
input = sys.stdin.readline

def main():
    s = list(input().strip())
    k = int(input())
    n = len(s)

    # Liste de positions pour chaque lettre
    from collections import deque
    positions = [deque() for _ in range(26)]
    for i, ch in enumerate(s):
        positions[ord(ch) - ord('a')].append(i)

    result = []
    current_pos = 0  # position dans s à partir de laquelle on choisit les caractères pour final result

    while current_pos < n and k > 0:
        # On cherche le plus petit caractère qui peut être amené à la position current_pos
        found = False
        for c in range(26):
            # Retirer toutes les positions < current_pos car déjà traitées
            while positions[c] and positions[c][0] < current_pos:
                positions[c].popleft()
            if not positions[c]:
                continue
            pos = positions[c][0]
            dist = pos - current_pos
            if dist <= k:
                # On peut amener ce caractère en current_pos en faisant dist swaps
                k -= dist
                # Enlever ce caractère de la liste des positions
                positions[c].popleft()
                # Ajouter à la réponse
                result.append(chr(c + ord('a')))
                # Marquer cette position comme "retirée" dans s : on va reconstruire le reste en enlevant ce caractère
                # On va gérer la mise à jour en pratique en "ignorant" celle position au moment de recréer la partie restante
                # mais pour la simplicité on reconstituera la chaîne plus tard.
                # On doit aussi enlever la lettre choisie de la chaîne.
                # Pour gérer le reste, on va ignorer cette position (on va reconstruire le suffixe plus loin)
                # On ne peut pas effacer dans s directement car cela créerait des problèmes d'index
                # Donc on stocke les indices des lettres retirées pour reconstruire le suffixe ensuite.
                # On va garder en tête que cette position est "occupée" donc on la supprime virtuellement.
                # On avance current_pos de 1 car on a placé un caractère dans result
                current_pos += 1
                found = True
                break
        if not found:
            # Aucune lettre peut être déplacée vers current_pos car cost trop élevé.
            break

    # On ajoute le reste des caractères (non choisis) dans leur ordre originale sauf ceux déjà déplacés
    # Pour cela, on récupère tous les indices >= current_pos qui n'ont pas été retirés (ils sont toujours en positions)
    # On va utiliser un set des indices retirés pour éviter duplication
    removed = set()
    # On avait retiré les positions où on a pris les lettres (mais on ne stocke pas explicitement les indices retirés)
    # En fait, on a juste "sauté" les indices déjà traités car current_pos avance toujours.
    # Donc les indices utilisés = ceux < current_pos + ceux déplacés (on les aura comptés dans result).
    # Plus simple : reconstruisons la partie restante à partir des indices >= current_pos + les indices non visités.
    # On doit reconstruire le suffixe avec les lettres qui ne sont pas dans result.
    # Cependant, il y a un problème : certaines lettres ont été déplacées mais pas supprimées de s
    # Or on a fait la suppression virtuelle en avançant current_pos pour la logique, ce qui correspond à supprimer un caractère dans la sur chaîne mentale.
    # Donc en réalité, les premiers current_pos-lettres sont déjà dans result.
    # Le suffixe est donc s[current_pos:] (ceux restant)
    # Par contre, les caractères déjà utilisés ne sont plus à leurs positions initiales. Il faut reconstruire.
    # Puisqu'on ne bouge les caractères qu'avec k swaps (c'est-à-dire, on a déplacé dans le résultat les caractères désirés), 
    # la chaîne restant est s[current_pos:] toutes lettres qui n'ont pas été déplacées.
    # Or la chaîne finale = result + restantes lettres dans l'ordre.

    # On récupère la partie restante non traitée
    suffix = []
    taken_positions = set()
    # positions des lettres utilisées en result ont été retirées de positions[], on ne les print plus
    # le suffixe est donc tout le reste de s à partir de current_pos, mais attention les caractères à positions < current_pos 
    # ont été supprimés
    # En fait, on n'a pas modifié s, donc on doit supprimer les caractères qui ont été "sortis".
    # On a avancé current_pos pour correspondre à la taille du résultat.
    # Chaque caractère choisi correspond à un caractère dans s qui a été "déplacé" vers le début (simulé)
    # Mais la chaîne finale est bien "result" + "s sous chaîne avec caractères non déplacés dans l'ordre".
    # D'où suffix = s avec les caractères de s qui ne sont pas dans result, en maintenant l'ordre.
    # Pour y arriver, on peut parcourir s depuis current_pos, en ignorant les indices qui apparaissent dans result.

    # Le problème est qu'on n'a pas trace des positions exactes déplacées (car on ne les stocke pas individuellement).
    # On va procéder ainsi : On sait que "current_pos" marque le nombre de caractères déjà fixés en result,
    # et ceux ont été retirés de la chaîne centrale.
    # Or on a déplacé ces caractères vers le début (cf swaps), donc les caractères restants sont tous ceux situés à droite de current_pos
    # et n'ayant pas été déplacés.
    # En fait, la description dans l'énoncé implique que l'ordre relatif des caractères non déplacés ne change pas.
    # 
    # On va donc prendre le reste de la chaîne s à partir de current_pos : s[current_pos:]
    # et on concatène result + s[current_pos:]

    # Remarque : dans les swaps le morceau restant est celui après la position où l'on a inséré le caractère sélectionné avec la réduction de k.
    # Comme on a toujours avancé current_pos d'un en plaçant un caractère, cela correspond bien au suffixe.

    result.extend(s[current_pos:])
    print("".join(result))


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' pour' (ID: 1930)
  → Token d'amorce (pas de prédiction)

Token 3: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2306215465068817
    2. ' résoudre' → logprob: -2.480621576309204
    3. 'le' → logprob: -2.980621576309204
    4. 'l' → logprob: -3.605621576309204
    5. ' ce' → logprob: -5.105621337890625
    6. '#' → logprob: -5.105621337890625
    7. ' les' → logprob: -5.230621337890625
    8. ' Python' → logprob: -5.230621337890625
    9. ' la' → logprob: -5.730621337890625
    10. 'les' → logprob: -6.605621337890625

Token 4: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.6013149619102478
    2. ' problème' → logprob: -2.1013150215148926
    3. 'tri' → logprob: -2.3513150215148926
    4. ' tri' → logprob: -3.2263150215148926
    5. ' prochain' → logprob: -3.4763150215148926
    6. 'jour' → logprob: -3.7263150215148926
    7. ' code' → logprob: -3.9763150215148926
    8. ' jour' → logprob: -4.101315021514893
    9. ' calcul' → logprob: -4.601315021514893
    10. 'calcul' → logprob: -4.601315021514893

Token 5: ' "' (ID: 392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3293476402759552
    2. ' :' → logprob: -1.5793476104736328
    3. '```' → logprob: -2.829347610473633
    4. 's' → logprob: -5.704347610473633
    5. '\n' → logprob: -5.954347610473633
    6. 'def' → logprob: -6.454347610473633
    7. '`' → logprob: -6.579347610473633
    8. ''''' → logprob: -6.829347610473633
    9. '\' → logprob: -7.079347610473633
    10. '#' → logprob: -7.079347610473633

Token 6: 'Sw' (ID: 15254)
  Prédit: 'Two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Two' → logprob: -1.3768683671951294
    2. ' Two' → logprob: -1.8768683671951294
    3. '2' → logprob: -3.12686824798584
    4. 'def' → logprob: -3.25186824798584
    5. ' des' → logprob: -3.37686824798584
    6. ' ' → logprob: -3.37686824798584
    7. ' "' → logprob: -3.62686824798584
    8. 'max' → logprob: -3.87686824798584
    9. 'de' → logprob: -3.87686824798584
    10. 'two' → logprob: -3.87686824798584

Token 7: 'apping' (ID: 5041)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.11298853158950806
    2. 'apping' → logprob: -2.9879884719848633
    3. 'ift' → logprob: -3.9879884719848633
    4. 'ag' → logprob: -4.862988471984863
    5. 'itch' → logprob: -5.237988471984863
    6. 'api' → logprob: -5.487988471984863
    7. 'aps' → logprob: -5.612988471984863
    8. 'im' → logprob: -6.362988471984863
    9. 'appy' → logprob: -6.737988471984863
    10. 'it' → logprob: -6.737988471984863

Token 8: ' Characters' (ID: 93090)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45216861367225647
    2. ' s' → logprob: -2.0771687030792236
    3. '"' → logprob: -2.3271687030792236
    4. ' "' → logprob: -2.9521687030792236
    5. ' ' → logprob: -4.4521684646606445
    6. ' of' → logprob: -5.2021684646606445
    7. ' Elements' → logprob: -5.4521684646606445
    8. '"""' → logprob: -5.5771684646606445
    9. 'Strings' → logprob: -5.8271684646606445
    10. '}' → logprob: -5.8271684646606445

Token 9: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.42803841829299927
    2. 's' → logprob: -1.6780383586883545
    3. ':' → logprob: -2.1780383586883545
    4. ' :' → logprob: -3.8030383586883545
    5. '"""' → logprob: -4.428038597106934
    6. '```' → logprob: -5.428038597106934
    7. '":' → logprob: -5.678038597106934
    8. '#' → logprob: -5.928038597106934
    9. '\n' → logprob: -7.053038597106934
    10. ''' → logprob: -7.678038597106934

Token 10: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7335025072097778
    2. '```' → logprob: -1.4835025072097778
    3. ':' → logprob: -2.3585023880004883
    4. 's' → logprob: -2.6085023880004883
    5. ' :' → logprob: -2.7335023880004883
    6. 'a' → logprob: -4.608502388000488
    7. ' ```' → logprob: -4.733502388000488
    8. '\n' → logprob: -4.983502388000488
    9. 'n' → logprob: -4.983502388000488
    10. ' def' → logprob: -5.233502388000488

Token 11: ' 
' (ID: 793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028507540002465248
    2. 'def' → logprob: -4.653507709503174
    3. ' #' → logprob: -5.403507709503174
    4. 's' → logprob: -5.528507709503174
    5. ' def' → logprob: -5.903507709503174
    6. ' d' → logprob: -6.153507709503174
    7. '_' → logprob: -6.778507709503174
    8. 'd' → logprob: -6.903507709503174
    9. ' ​' → logprob: -7.778507709503174
    10. '#' → logprob: -8.028507232666016

Token 12: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.228619784116745
    2. '#' → logprob: -2.2286198139190674
    3. ' ' → logprob: -2.9786198139190674
    4. 'd' → logprob: -4.478619575500488
    5. ' #' → logprob: -4.978619575500488
    6. 's' → logprob: -5.228619575500488
    7. 'a' → logprob: -5.353619575500488
    8. ' def' → logprob: -5.353619575500488
    9. 'import' → logprob: -5.853619575500488
    10. ' 
' → logprob: -6.228619575500488

Token 13: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6920433044433594
    2. ' ' → logprob: -1.3170433044433594
    3. 'd' → logprob: -1.8170433044433594
    4. ' def' → logprob: -4.317043304443359
    5. ' #' → logprob: -4.317043304443359
    6. '#' → logprob: -4.317043304443359
    7. ' d' → logprob: -4.942043304443359
    8. 'de' → logprob: -5.192043304443359
    9. ' de' → logprob: -5.442043304443359
    10. 'a' → logprob: -5.692043304443359

Token 14: ' doit' (ID: 21822)
  Prédit: ' veut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' veut' → logprob: -0.7935494184494019
    2. ' va' → logprob: -1.2935494184494019
    3. ' souhaite' → logprob: -2.7935495376586914
    4. ' peut' → logprob: -3.1685495376586914
    5. ' ' → logprob: -3.2935495376586914
    6. 'e' → logprob: -3.4185495376586914
    7. ' échange' → logprob: -3.4185495376586914
    8. ' a' → logprob: -4.793549537658691
    9. ' commence' → logprob: -5.168549537658691
    10. '  ' → logprob: -5.293549537658691

Token 15: ' génér' (ID: 18939)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7645249366760254
    2. ' éch' → logprob: -1.5145249366760254
    3. ' écrire' → logprob: -2.1395249366760254
    4. ' effectuer' → logprob: -2.6395249366760254
    5. ' ' → logprob: -4.264524936676025
    6. ' réaliser' → logprob: -4.389524936676025
    7. 'é' → logprob: -4.514524936676025
    8. ' remplacer' → logprob: -4.639524936676025
    9. '  ' → logprob: -4.639524936676025
    10. ' #' → logprob: -4.889524936676025

Token 16: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0065994407050311565
    2. 'érer' → logprob: -5.631599426269531
    3. 'erer' → logprob: -6.881599426269531
    4. 'aler' → logprob: -7.381599426269531
    5. 'al' → logprob: -7.881599426269531
    6. 'é' → logprob: -8.131599426269531
    7. '#' → logprob: -8.256599426269531
    8. 'ér' → logprob: -9.381599426269531
    9. 'e' → logprob: -9.506599426269531
    10. 'éer' → logprob: -9.881599426269531

Token 17: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.900253176689148
    2. ' une' → logprob: -0.900253176689148
    3. ' ' → logprob: -2.2752532958984375
    4. ' le' → logprob: -3.4002532958984375
    5. ' la' → logprob: -4.0252532958984375
    6. 'une' → logprob: -4.9002532958984375
    7. ' des' → logprob: -5.2752532958984375
    8. ' toutes' → logprob: -5.5252532958984375
    9. ' deux' → logprob: -6.0252532958984375
    10. 'un' → logprob: -6.0252532958984375

Token 18: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -1.2866930961608887
    2. ' liste' → logprob: -1.4116930961608887
    3. ' suite' → logprob: -2.6616930961608887
    4. ' prochaine' → logprob: -2.6616930961608887
    5. ' ' → logprob: -2.9116930961608887
    6. 's' → logprob: -2.9116930961608887
    7. '   ' → logprob: -3.0366930961608887
    8. 'suite' → logprob: -3.5366930961608887
    9. ' chaine' → logprob: -3.6616930961608887
    10. ' solution' → logprob: -4.036693096160889

Token 19: ' lex' (ID: 37772)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5779478549957275
    2. ' suivante' → logprob: -1.0779478549957275
    3. ' ' → logprob: -3.4529478549957275
    4. ' complète' → logprob: -4.327947616577148
    5. 's' → logprob: -4.702947616577148
    6. ' s' → logprob: -5.327947616577148
    7. ' à' → logprob: -5.452947616577148
    8. ' finale' → logprob: -5.702947616577148
    9. 'de' → logprob: -5.952947616577148
    10. '```' → logprob: -6.202947616577148

Token 20: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.18436643481254578
    2. 'i' → logprob: -2.434366464614868
    3. 'iquement' → logprob: -2.934366464614868
    4. 'ico' → logprob: -4.184366226196289
    5. 'ique' → logprob: -6.059366226196289
    6. 'ical' → logprob: -6.059366226196289
    7. 'é' → logprob: -6.684366226196289
    8. '#' → logprob: -6.934366226196289
    9. 'icamente' → logprob: -7.309366226196289
    10. '```' → logprob: -7.434366226196289

Token 21: 'ograph' (ID: 4257)
  Prédit: 'quement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quement' → logprob: -0.594514787197113
    2. 'al' → logprob: -0.844514787197113
    3. 'a' → logprob: -4.594514846801758
    4. 'ale' → logprob: -5.344514846801758
    5. 'alem' → logprob: -7.844514846801758
    6. '```' → logprob: -7.969514846801758
    7. 'iquement' → logprob: -8.094514846801758
    8. 'que' → logprob: -8.219514846801758
    9. '-' → logprob: -8.594514846801758
    10. 'q' → logprob: -8.719514846801758

Token 22: 'iquement' (ID: 83934)
  Prédit: 'iquement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquement' → logprob: -0.017067570239305496
    2. 'ique' → logprob: -5.2670674324035645
    3. 'm' → logprob: -6.0170674324035645
    4. 'é' → logprob: -6.1420674324035645
    5. 'i' → logprob: -6.1420674324035645
    6. 'quement' → logprob: -6.6420674324035645
    7. 'ment' → logprob: -7.3920674324035645
    8. 'al' → logprob: -7.8920674324035645
    9. 'ical' → logprob: -8.142067909240723
    10. ' ' → logprob: -8.267067909240723

Token 23: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41761136054992676
    2. ' ' → logprob: -1.1676113605499268
    3. 'e' → logprob: -4.417611122131348
    4. ' _' → logprob: -4.792611122131348
    5. 'm' → logprob: -6.292611122131348
    6. '_space' → logprob: -6.417611122131348
    7. 'u' → logprob: -6.792611122131348
    8. '```' → logprob: -7.542611122131348
    9. 's' → logprob: -7.792611122131348
    10. 'r' → logprob: -8.167611122131348

Token 24: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.16507789492607117
    2. 'plus' → logprob: -2.0400779247283936
    3. 'moins' → logprob: -4.7900776863098145
    4. 's' → logprob: -6.4150776863098145
    5. ' ' → logprob: -6.5400776863098145
    6. '+' → logprob: -6.5400776863098145
    7. 'm' → logprob: -6.9150776863098145
    8. '-plus' → logprob: -6.9150776863098145
    9. ' moindre' → logprob: -6.9150776863098145
    10. '-' → logprob: -6.9150776863098145

Token 25: ' petite' (ID: 28119)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19846749305725098
    2. '_' → logprob: -2.073467493057251
    3. '<|end|>' → logprob: -3.073467493057251
    4. '  ' → logprob: -6.573467254638672
    5. '```' → logprob: -7.323467254638672
    6. 'space' → logprob: -7.448467254638672
    7. ' possible' → logprob: -7.635967254638672
    8. 'r' → logprob: -7.760967254638672
    9. 'e' → logprob: -8.010967254638672
    10. '<|end|>' → logprob: -8.135967254638672

Token 26: ' possible' (ID: 4149)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10009050369262695
    2. '_' → logprob: -3.350090503692627
    3. ' possible' → logprob: -3.975090503692627
    4. ',' → logprob: -4.850090503692627
    5. ' ,' → logprob: -4.975090503692627
    6. '_possible' → logprob: -5.350090503692627
    7. ' 
' → logprob: -5.475090503692627
    8. 'e' → logprob: -5.725090503692627
    9. '.' → logprob: -6.225090503692627
    10. 'possible' → logprob: -6.475090503692627

Token 27: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1058765649795532
    2. ' ' → logprob: -1.3558765649795532
    3. ':' → logprob: -1.8558765649795532
    4. '\' → logprob: -2.7308764457702637
    5. ' 
' → logprob: -3.1058764457702637
    6. ' :' → logprob: -3.1058764457702637
    7. ',' → logprob: -3.3558764457702637
    8. '.' → logprob: -4.480876445770264
    9. '  
' → logprob: -4.605876445770264
    10. '#' → logprob: -4.730876445770264

Token 28: ' effect' (ID: 3159)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9341574311256409
    2. ' respect' → logprob: -2.059157371520996
    3. ' faisant' → logprob: -2.059157371520996
    4. ' utilisant' → logprob: -2.684157371520996
    5. ' échange' → logprob: -3.184157371520996
    6. '```' → logprob: -3.309157371520996
    7. ' supprim' → logprob: -3.434157371520996
    8. ' perm' → logprob: -3.684157371520996
    9. ' effect' → logprob: -3.684157371520996
    10. ' réalis' → logprob: -3.684157371520996

Token 29: 'uant' (ID: 44411)
  Prédit: 'uant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uant' → logprob: -0.012604422867298126
    2. 'u' → logprob: -4.637604236602783
    3. '#' → logprob: -6.137604236602783
    4. ' u' → logprob: -8.387604713439941
    5. 'uan' → logprob: -9.137604713439941
    6. 'uent' → logprob: -9.387604713439941
    7. '<u' → logprob: -9.512604713439941
    8. 'uer' → logprob: -10.012604713439941
    9. '   ' → logprob: -10.637604713439941
    10. '(u' → logprob: -11.137604713439941

Token 30: ' au' (ID: 2791)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34307169914245605
    2. ' des' → logprob: -1.343071699142456
    3. ' un' → logprob: -4.843071937561035
    4. '  ' → logprob: -4.843071937561035
    5. '<|end|>' → logprob: -5.593071937561035
    6. 's' → logprob: -5.718071937561035
    7. ' uniquement' → logprob: -6.343071937561035
    8. 'des' → logprob: -6.343071937561035
    9. '```' → logprob: -7.093071937561035
    10. ' ' → logprob: -7.718071937561035

Token 31: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.4678647220134735
    2. 'moins' → logprob: -1.217864751815796
    3. ' plus' → logprob: -3.092864751815796
    4. ' moins' → logprob: -4.592864513397217
    5. '```' → logprob: -5.592864513397217
    6. 'maximum' → logprob: -5.717864513397217
    7. 'minimum' → logprob: -5.967864513397217
    8. '   ' → logprob: -6.217864513397217
    9. '  ' → logprob: -6.342864513397217
    10. ' maximum' → logprob: -6.842864513397217

Token 32: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40905874967575073
    2. ' une' → logprob: -1.7840588092803955
    3. ' un' → logprob: -2.0340588092803955
    4. 'une' → logprob: -4.534058570861816
    5. ' deux' → logprob: -4.659058570861816
    6. ' one' → logprob: -5.659058570861816
    7. 'un' → logprob: -5.659058570861816
    8. ' n' → logprob: -6.159058570861816
    9. '```' → logprob: -6.159058570861816
    10. '  ' → logprob: -6.534058570861816

Token 33: ' permutations' (ID: 174595)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.5159981846809387
    2. ' ' → logprob: -1.640998125076294
    3. ' échanges' → logprob: -2.390998125076294
    4. '  ' → logprob: -2.515998125076294
    5. ' espac' → logprob: -4.515998363494873
    6. ' espace' → logprob: -5.390998363494873
    7. ' é' → logprob: -5.640998363494873
    8. 'é' → logprob: -5.890998363494873
    9. ' éch' → logprob: -5.890998363494873
    10. ' déplacements' → logprob: -7.015998363494873

Token 34: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7792132496833801
    2. ':' → logprob: -1.6542131900787354
    3. '_' → logprob: -2.6542131900787354
    4. ' :' → logprob: -2.7792131900787354
    5. '```' → logprob: -3.0292131900787354
    6. 'def' → logprob: -3.2792131900787354
    7. '#' → logprob: -3.9042131900787354
    8. ' 

' → logprob: -4.1542134284973145
    9. ' 
' → logprob: -4.1542134284973145
    10. 'n' → logprob: -4.2792134284973145

Token 35: ' caractères' (ID: 183106)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6452284455299377
    2. ' caractères' → logprob: -1.020228385925293
    3. 'de' → logprob: -3.145228385925293
    4. ' deux' → logprob: -3.520228385925293
    5. 'car' → logprob: -4.645228385925293
    6. ' adjacent' → logprob: -5.020228385925293
    7. ' espaces' → logprob: -5.645228385925293
    8. ' caracteres' → logprob: -6.020228385925293
    9. 'adj' → logprob: -6.020228385925293
    10. ' car' → logprob: -6.270228385925293

Token 36: ' adj' (ID: 20251)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8798301219940186
    2. ' ' → logprob: -2.0048301219940186
    3. ':' → logprob: -2.1298301219940186
    4. '#' → logprob: -2.3798301219940186
    5. '```' → logprob: -2.5048301219940186
    6. ' 
' → logprob: -2.6298301219940186
    7. 'n' → logprob: -2.7548301219940186
    8. ' 

' → logprob: -2.7548301219940186
    9. '\' → logprob: -3.1298301219940186
    10. '
' → logprob: -3.2548301219940186

Token 37: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.7606781125068665
    2. 'a' → logprob: -0.8856781125068665
    3. 'u' → logprob: -2.5106780529022217
    4. 'acent' → logprob: -3.6356780529022217
    5. 'acency' → logprob: -6.260678291320801
    6. 'oints' → logprob: -6.385678291320801
    7. '```' → logprob: -6.510678291320801
    8. 'e' → logprob: -6.635678291320801
    9. 'а' → logprob: -7.510678291320801
    10. '#' → logprob: -7.510678291320801

Token 38: 'ents' (ID: 1094)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6425573229789734
    2. 'entes' → logprob: -1.2675573825836182
    3. 'ent' → logprob: -2.642557382583618
    4. 'es' → logprob: -2.642557382583618
    5. 'ents' → logprob: -3.267557382583618
    6. 'ente' → logprob: -5.392557144165039
    7. 'en' → logprob: -5.767557144165039
    8. '```' → logprob: -6.267557144165039
    9. 't' → logprob: -7.267557144165039
    10. '#' → logprob: -7.767557144165039

Token 39: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.840812623500824
    2. 'def' → logprob: -1.3408126831054688
    3. 'd' → logprob: -1.8408126831054688
    4. ':' → logprob: -3.2158126831054688
    5. '#' → logprob: -3.9658126831054688
    6. 'n' → logprob: -4.090812683105469
    7. ' :' → logprob: -4.465812683105469
    8. ' 
' → logprob: -4.590812683105469
    9. 'i' → logprob: -4.590812683105469
    10. '_' → logprob: -4.715812683105469

Token 40: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.584427535533905
    2. 'def' → logprob: -1.3344275951385498
    3. ' ' → logprob: -2.83442759513855
    4. ':' → logprob: -3.20942759513855
    5. 'n' → logprob: -4.209427356719971
    6. 'i' → logprob: -4.334427356719971
    7. '_' → logprob: -4.459427356719971
    8. '#' → logprob: -4.834427356719971
    9. ' :' → logprob: -5.084427356719971
    10. ' d' → logprob: -5.209427356719971

Token 41: ' Chaque' (ID: 94758)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02767811343073845
    2. 'def' → logprob: -4.5276780128479
    3. 'i' → logprob: -4.9026780128479
    4. 'n' → logprob: -5.9026780128479
    5. '#' → logprob: -6.2776780128479
    6. '_' → logprob: -6.5276780128479
    7. ' 
' → logprob: -7.1526780128479
    8. ' ' → logprob: -7.9026780128479
    9. ' d' → logprob: -8.027678489685059
    10. 'a' → logprob: -8.027678489685059

Token 42: ' swap' (ID: 25489)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029168516397476196
    2. '  ' → logprob: -4.279168605804443
    3. ' caractère' → logprob: -5.154168605804443
    4. '_' → logprob: -5.904168605804443
    5. ' espace' → logprob: -6.404168605804443
    6. ' _' → logprob: -7.154168605804443
    7. ' "' → logprob: -7.529168605804443
    8. ' ,' → logprob: -7.779168605804443
    9. ' ' → logprob: -8.279168128967285
    10. ' ligne' → logprob: -8.529168128967285

Token 43: ' permet' (ID: 11798)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2977515459060669
    2. '  ' → logprob: -2.4227514266967773
    3. 's' → logprob: -2.6727514266967773
    4. ' de' → logprob: -3.2977514266967773
    5. ' entre' → logprob: -3.9227514266967773
    6. ' s' → logprob: -5.047751426696777
    7. ' permet' → logprob: -5.172751426696777
    8. ' peut' → logprob: -5.172751426696777
    9. ' est' → logprob: -5.422751426696777
    10. ' d' → logprob: -5.672751426696777

Token 44: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.09987208247184753
    2. ' de' → logprob: -2.97487211227417
    3. 'd' → logprob: -3.72487211227417
    4. 'de' → logprob: -4.59987211227417
    5. ' ' → logprob: -5.97487211227417
    6. '	' → logprob: -6.22487211227417
    7. '	d' → logprob: -6.47487211227417
    8. ' uniquement' → logprob: -6.59987211227417
    9. 't' → logprob: -6.97487211227417
    10. ' ' → logprob: -7.84987211227417

Token 45: ' déplacer' (ID: 142135)
  Prédit: ' éch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éch' → logprob: -0.7502644658088684
    2. 'éch' → logprob: -1.1252644062042236
    3. ' déplacer' → logprob: -2.0002644062042236
    4. 'é' → logprob: -3.8752644062042236
    5. ' inter' → logprob: -3.8752644062042236
    6. ' perm' → logprob: -4.625264644622803
    7. 'dé' → logprob: -5.875264644622803
    8. 'inter' → logprob: -5.875264644622803
    9. 'swap' → logprob: -6.250264644622803
    10. 'perm' → logprob: -6.875264644622803

Token 46: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1640441119670868
    2. ' ' → logprob: -1.9140441417694092
    3. ' une' → logprob: -6.91404390335083
    4. ' d' → logprob: -7.16404390335083
    5. 'un' → logprob: -7.16404390335083
    6. ' le' → logprob: -8.289044380187988
    7. '  ' → logprob: -8.914044380187988
    8. ' a' → logprob: -8.914044380187988
    9. ' ' → logprob: -9.289044380187988
    10. ''un' → logprob: -9.289044380187988

Token 47: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.3679276406764984
    2. ' ' → logprob: -2.1179275512695312
    3. 'e' → logprob: -2.8679275512695312
    4. 'car' → logprob: -3.1179275512695312
    5. ' caract' → logprob: -3.2429275512695312
    6. ' car' → logprob: -4.242927551269531
    7. ' caractères' → logprob: -4.742927551269531
    8. 'élé' → logprob: -5.117927551269531
    9. ' espace' → logprob: -5.492927551269531
    10. ' adjacent' → logprob: -6.117927551269531

Token 48: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019426539540290833
    2. ' vers' → logprob: -5.269426345825195
    3. '_' → logprob: -5.394426345825195
    4. ' à' → logprob: -5.519426345825195
    5. ' de' → logprob: -6.394426345825195
    6. ' d' → logprob: -6.519426345825195
    7. '  ' → logprob: -7.394426345825195
    8. ' s' → logprob: -8.269426345825195
    9. ' distant' → logprob: -8.519426345825195
    10. 's' → logprob: -8.769426345825195

Token 49: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.2157522588968277
    2. ''un' → logprob: -2.090752363204956
    3. 'e' → logprob: -3.340752363204956
    4. 'ans' → logprob: -5.340752124786377
    5. ''à' → logprob: -5.340752124786377
    6. ''au' → logprob: -5.340752124786377
    7. ' une' → logprob: -5.465752124786377
    8. ''' → logprob: -5.465752124786377
    9. 'une' → logprob: -5.715752124786377
    10. '’une' → logprob: -6.090752124786377

Token 50: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.32751044631004333
    2. ' ' → logprob: -1.5775104761123657
    3. 'position' → logprob: -3.077510356903076
    4. ' case' → logprob: -4.202510356903076
    5. 'case' → logprob: -5.827510356903076
    6. ' seule' → logprob: -5.827510356903076
    7. ' place' → logprob: -6.202510356903076
    8. '  ' → logprob: -7.702510356903076
    9. ' unité' → logprob: -7.827510356903076
    10. ' pos' → logprob: -7.952510356903076

Token 51: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.05914336442947388
    2. ' à' → logprob: -3.309143304824829
    3. ' ' → logprob: -4.559143543243408
    4. ' donnée' → logprob: -5.059143543243408
    5. ' plus' → logprob: -6.184143543243408
    6. ' de' → logprob: -7.684143543243408
    7. ' donné' → logprob: -7.809143543243408
    8. 'vers' → logprob: -8.43414306640625
    9. 'à' → logprob: -8.80914306640625
    10. '  ' → logprob: -9.30914306640625

Token 52: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2420043796300888
    2. 'la' → logprob: -2.49200439453125
    3. ' une' → logprob: -2.61700439453125
    4. ' ' → logprob: -3.61700439453125
    5. 'une' → logprob: -4.11700439453125
    6. ' l' → logprob: -5.61700439453125
    7. 'l' → logprob: -6.49200439453125
    8. 'à' → logprob: -6.61700439453125
    9. ' sa' → logprob: -6.74200439453125
    10. '#' → logprob: -7.17950439453125

Token 53: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.1275690197944641
    2. ' droite' → logprob: -2.6275689601898193
    3. 'g' → logprob: -3.5025689601898193
    4. ' ' → logprob: -4.252569198608398
    5. ' position' → logprob: -6.502569198608398
    6. ' g' → logprob: -8.002569198608398
    7. 'dro' → logprob: -8.127569198608398
    8. ' ' → logprob: -8.752569198608398
    9. 'position' → logprob: -8.752569198608398
    10. '	g' → logprob: -9.690069198608398

Token 54: ' en' (ID: 469)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2940623164176941
    2. ' ' → logprob: -2.169062376022339
    3. 'def' → logprob: -3.294062376022339
    4. 'i' → logprob: -3.544062376022339
    5. '#' → logprob: -3.919062376022339
    6. ':' → logprob: -4.04406213760376
    7. '_' → logprob: -4.66906213760376
    8. ' 
' → logprob: -5.29406213760376
    9. 'n' → logprob: -5.54406213760376
    10. ' d' → logprob: -5.91906213760376

Token 55: ' échange' (ID: 139953)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.825602650642395
    2. ' une' → logprob: -1.325602650642395
    3. '1' → logprob: -2.2006025314331055
    4. 'une' → logprob: -2.3256025314331055
    5. 'au' → logprob: -3.7006025314331055
    6. ' au' → logprob: -3.7006025314331055
    7. ' d' → logprob: -4.7006025314331055
    8. ' un' → logprob: -5.7006025314331055
    9. 'un' → logprob: -6.0756025314331055
    10. '  ' → logprob: -6.2006025314331055

Token 56: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.3229737877845764
    2. ' d' → logprob: -1.6979737281799316
    3. 's' → logprob: -3.1979737281799316
    4. 'd' → logprob: -3.9479737281799316
    5. ' de' → logprob: -4.322973728179932
    6. '#' → logprob: -5.197973728179932
    7. '```' → logprob: -5.447973728179932
    8. 'r' → logprob: -5.697973728179932
    9. ' ' → logprob: -5.822973728179932
    10. '`' → logprob: -7.697973728179932

Token 57: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8774502277374268
    2. '<|end|>' → logprob: -1.8774502277374268
    3. ' avec' → logprob: -2.3774502277374268
    4. ' adjacent' → logprob: -2.6274502277374268
    5. ' deux' → logprob: -3.0024502277374268
    6. 's' → logprob: -3.1274502277374268
    7. ' de' → logprob: -3.5024502277374268
    8. ' son' → logprob: -3.8774502277374268
    9. ' le' → logprob: -4.002449989318848
    10. 'de' → logprob: -4.377449989318848

Token 58: ' son' (ID: 2391)
  Prédit: ' son'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' son' → logprob: -1.4212359189987183
    2. ' le' → logprob: -1.6712359189987183
    3. ' celui' → logprob: -2.046236038208008
    4. 'le' → logprob: -2.296236038208008
    5. 'son' → logprob: -2.546236038208008
    6. ' ' → logprob: -2.546236038208008
    7. ' celle' → logprob: -2.671236038208008
    8. ' la' → logprob: -3.421236038208008
    9. ' un' → logprob: -4.171236038208008
    10. ' l' → logprob: -4.296236038208008

Token 59: ' voisin' (ID: 145411)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.3354114592075348
    2. 'adj' → logprob: -1.9604114294052124
    3. ' voisin' → logprob: -2.210411548614502
    4. ' ' → logprob: -4.335411548614502
    5. ' vois' → logprob: -5.335411548614502
    6. ' adjacent' → logprob: -5.710411548614502
    7. ' adj' → logprob: -5.960411548614502
    8. '_' → logprob: -6.460411548614502
    9. ' immédi' → logprob: -6.835411548614502
    10. 'im' → logprob: -6.835411548614502

Token 60: ' immédi' (ID: 69896)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5744900703430176
    2. '_' → logprob: -1.8244900703430176
    3. 's' → logprob: -2.3244900703430176
    4. '#' → logprob: -2.8244900703430176
    5. ',' → logprob: -3.4494900703430176
    6. 'def' → logprob: -3.9494900703430176
    7. '.' → logprob: -4.074490070343018
    8. ':' → logprob: -4.199490070343018
    9. 'e' → logprob: -5.074490070343018
    10. 'n' → logprob: -5.324490070343018

Token 61: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0034852009266614914
    2. ' at' → logprob: -6.503485202789307
    3. 'ant' → logprob: -7.253485202789307
    4. 'ent' → logprob: -7.378485202789307
    5. 'é' → logprob: -8.503484725952148
    6. 'à' → logprob: -8.753484725952148
    7. 't' → logprob: -9.128484725952148
    8. '	at' → logprob: -10.253484725952148
    9. '```' → logprob: -10.378484725952148
    10. 'ate' → logprob: -10.878484725952148

Token 62: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.291139155626297
    2. 'def' → logprob: -2.9161391258239746
    3. ':' → logprob: -3.0411391258239746
    4. '_' → logprob: -3.1661391258239746
    5. ',' → logprob: -4.416139125823975
    6. 's' → logprob: -4.541139125823975
    7. 'd' → logprob: -4.541139125823975
    8. 'i' → logprob: -4.666139125823975
    9. '[' → logprob: -4.791139125823975
    10. '#' → logprob: -4.791139125823975

Token 63: '#
' (ID: 11240)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02829236164689064
    2. 'def' → logprob: -4.528292179107666
    3. 'i' → logprob: -4.653292179107666
    4. 'n' → logprob: -5.778292179107666
    5. '#' → logprob: -6.778292179107666
    6. '_' → logprob: -7.403292179107666
    7. 's' → logprob: -7.528292179107666
    8. 'a' → logprob: -7.778292179107666
    9. 'from' → logprob: -7.903292179107666
    10. 'f' → logprob: -8.028292655944824

Token 64: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15515370666980743
    2. 'def' → logprob: -2.030153751373291
    3. 'i' → logprob: -5.405153751373291
    4. 'n' → logprob: -5.655153751373291
    5. 'a' → logprob: -6.780153751373291
    6. '#' → logprob: -6.780153751373291
    7. 'de' → logprob: -7.530153751373291
    8. 'import' → logprob: -8.030153274536133
    9. ' d' → logprob: -8.405153274536133
    10. ' 
' → logprob: -8.780153274536133

Token 65: ' Appro' (ID: 24145)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6450877785682678
    2. 'def' → logprob: -0.7700877785682678
    3. 'n' → logprob: -4.770087718963623
    4. 'from' → logprob: -5.895087718963623
    5. 'import' → logprob: -8.395088195800781
    6. ' def' → logprob: -8.520088195800781
    7. 'a' → logprob: -8.645088195800781
    8. 'de' → logprob: -8.770088195800781
    9. '#' → logprob: -8.895088195800781
    10. 'i' → logprob: -9.145088195800781

Token 66: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.09945710003376007
    2. 'x' → logprob: -2.974457025527954
    3. 'ch' → logprob: -3.849457025527954
    4. 'ches' → logprob: -4.474457263946533
    5. '#' → logprob: -5.724457263946533
    6. 'cher' → logprob: -5.974457263946533
    7. 'xi' → logprob: -6.474457263946533
    8. 'xim' → logprob: -6.724457263946533
    9. 'ach' → logprob: -7.224457263946533
    10. 'c' → logprob: -7.974457263946533

Token 67: ' déta' (ID: 99673)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.184610977768898
    2. ':' → logprob: -1.8096109628677368
    3. ' #' → logprob: -6.809610843658447
    4. ' :
' → logprob: -7.059610843658447
    5. ' ' → logprob: -7.184610843658447
    6. '#' → logprob: -8.059611320495605
    7. ' ' → logprob: -8.684611320495605
    8. ' =' → logprob: -9.059611320495605
    9. ' d' → logprob: -9.184611320495605
    10. ' de' → logprob: -9.184611320495605

Token 68: 'illée' (ID: 102272)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.025484368205070496
    2. 'é' → logprob: -3.775484323501587
    3. 'e' → logprob: -6.900484561920166
    4. 'ation' → logprob: -7.275484561920166
    5. 's' → logprob: -9.150484085083008
    6. 'ee' → logprob: -9.775484085083008
    7. 'rée' → logprob: -10.275484085083008
    8. 'és' → logprob: -10.275484085083008
    9. 'lée' → logprob: -10.275484085083008
    10. '=' → logprob: -10.400484085083008

Token 69: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.21964570879936218
    2. ':' → logprob: -1.7196457386016846
    3. ' :
' → logprob: -4.9696455001831055
    4. 'def' → logprob: -5.2196455001831055
    5. '#' → logprob: -6.2196455001831055
    6. ' ' → logprob: -7.2196455001831055
    7. '```' → logprob: -7.2196455001831055
    8. ' def' → logprob: -7.8446455001831055
    9. ' #' → logprob: -8.094645500183105
    10. ' ' → logprob: -8.219645500183105

Token 70: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9900071024894714
    2. 'def' → logprob: -1.2400071620941162
    3. ' #' → logprob: -1.4900071620941162
    4. ' def' → logprob: -3.490007162094116
    5. 'from' → logprob: -4.365006923675537
    6. 'n' → logprob: -4.365006923675537
    7. '```' → logprob: -4.365006923675537
    8. ' ' → logprob: -4.615006923675537
    9. ' ```' → logprob: -4.865006923675537
    10. 'for' → logprob: -5.365006923675537

Token 71: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.717634379863739
    2. ' #' → logprob: -1.3426344394683838
    3. '#' → logprob: -2.467634439468384
    4. ' def' → logprob: -2.592634439468384
    5. 'def' → logprob: -3.217634439468384
    6. 'n' → logprob: -4.217634201049805
    7. ' 
' → logprob: -4.842634201049805
    8. 'd' → logprob: -5.467634201049805
    9. ' n' → logprob: -5.842634201049805
    10. 'from' → logprob: -5.967634201049805

Token 72: ' On' (ID: 2160)
  Prédit: ' Parc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Parc' → logprob: -1.32660973072052
    2. 'On' → logprob: -2.2016096115112305
    3. ' Util' → logprob: -2.4516096115112305
    4. ' Trier' → logprob: -2.4516096115112305
    5. 'Util' → logprob: -2.7016096115112305
    6. ' On' → logprob: -2.7016096115112305
    7. '#' → logprob: -3.0766096115112305
    8. ' Trou' → logprob: -3.4516096115112305
    9. 'Pour' → logprob: -3.5766096115112305
    10. ' on' → logprob: -3.8266096115112305

Token 73: ' cherche' (ID: 52345)
  Prédit: ' cherche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cherche' → logprob: -1.0411434173583984
    2. ' peut' → logprob: -2.0411434173583984
    3. ' va' → logprob: -2.6661434173583984
    4. ' commence' → logprob: -2.7911434173583984
    5. ' parc' → logprob: -2.9161434173583984
    6. ' veut' → logprob: -2.9161434173583984
    7. ' recherche' → logprob: -3.5411434173583984
    8. ' part' → logprob: -3.5411434173583984
    9. ' parcour' → logprob: -3.9161434173583984
    10. ' parcours' → logprob: -4.041143417358398

Token 74: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3439711332321167
    2. ' le' → logprob: -1.5939711332321167
    3. ' ' → logprob: -3.3439712524414062
    4. ' la' → logprob: -4.218971252441406
    5. ' d' → logprob: -5.218971252441406
    6. ' un' → logprob: -5.343971252441406
    7. ' l' → logprob: -5.343971252441406
    8. ' a' → logprob: -5.468971252441406
    9. ' les' → logprob: -5.593971252441406
    10. 'à' → logprob: -5.593971252441406

Token 75: ' "' (ID: 392)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.8438234925270081
    2. ' déplacer' → logprob: -1.3438234329223633
    3. 'tr' → logprob: -2.9688234329223633
    4. ' parcour' → logprob: -3.0938234329223633
    5. ' ' → logprob: -3.4688234329223633
    6. 'placer' → logprob: -3.5938234329223633
    7. ' avancer' → logprob: -3.9688234329223633
    8. 'dé' → logprob: -4.468823432922363
    9. ' sélectionner' → logprob: -4.468823432922363
    10. ' placer' → logprob: -4.593823432922363

Token 76: 'faire' (ID: 99415)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.46490901708602905
    2. 'placer' → logprob: -2.214909076690674
    3. 'min' → logprob: -2.589909076690674
    4. 'dé' → logprob: -2.839909076690674
    5. 'chercher' → logprob: -3.464909076690674
    6. ' trouver' → logprob: -3.964909076690674
    7. ' déplacer' → logprob: -4.714909076690674
    8. 'mettre' → logprob: -4.714909076690674
    9. 'faire' → logprob: -4.839909076690674
    10. ' ' → logprob: -5.339909076690674

Token 77: ' rem' (ID: 1662)
  Prédit: ' avancer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avancer' → logprob: -1.2615866661071777
    2. 'le' → logprob: -1.5115866661071777
    3. ' le' → logprob: -2.1365866661071777
    4. ' un' → logprob: -2.6365866661071777
    5. ' bou' → logprob: -2.7615866661071777
    6. ' ' → logprob: -3.1365866661071777
    7. 'un' → logprob: -3.3865866661071777
    8. ' une' → logprob: -3.5115866661071777
    9. '```' → logprob: -4.261586666107178
    10. 's' → logprob: -4.386586666107178

Token 78: 'onter' (ID: 61808)
  Prédit: 'onter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onter' → logprob: -0.0314326174557209
    2. 'placer' → logprob: -3.531432628631592
    3. 'pl' → logprob: -6.656432628631592
    4. 'p' → logprob: -8.406432151794434
    5. 'on' → logprob: -9.031432151794434
    6. 'ont' → logprob: -11.406432151794434
    7. 'oner' → logprob: -11.531432151794434
    8. 'onte' → logprob: -11.531432151794434
    9. '```' → logprob: -12.531432151794434
    10. 'placement' → logprob: -13.031432151794434

Token 79: '"' (ID: 1)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.11236993223428726
    2. ' ' → logprob: -3.612370014190674
    3. 'le' → logprob: -3.737370014190674
    4. ' au' → logprob: -4.112370014190674
    5. ' un' → logprob: -4.237370014190674
    6. ' les' → logprob: -4.737370014190674
    7. '"' → logprob: -5.237370014190674
    8. ' la' → logprob: -5.862370014190674
    9. ' à' → logprob: -6.487370014190674
    10. ' chaque' → logprob: -7.237370014190674

Token 80: ' progressivement' (ID: 177924)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.10794684290885925
    2. 'le' → logprob: -3.1079468727111816
    3. ' les' → logprob: -3.7329468727111816
    4. ' un' → logprob: -4.107946872711182
    5. ' ' → logprob: -5.357946872711182
    6. ' au' → logprob: -5.357946872711182
    7. ' la' → logprob: -6.232946872711182
    8. ' l' → logprob: -6.857946872711182
    9. 'les' → logprob: -7.232946872711182
    10. ' à' → logprob: -7.357946872711182

Token 81: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.16864213347434998
    2. 'le' → logprob: -2.418642044067383
    3. ' les' → logprob: -3.543642044067383
    4. ' ' → logprob: -3.668642044067383
    5. ' la' → logprob: -6.043642044067383
    6. 'les' → logprob: -6.418642044067383
    7. ' l' → logprob: -6.543642044067383
    8. ' un' → logprob: -6.668642044067383
    9. ' dans' → logprob: -7.168642044067383
    10. ' au' → logprob: -7.293642044067383

Token 82: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4064008891582489
    2. ' caractères' → logprob: -1.1564009189605713
    3. ' caract' → logprob: -5.406400680541992
    4. ' car' → logprob: -5.406400680541992
    5. ' plus' → logprob: -5.531400680541992
    6. ' meilleurs' → logprob: -6.406400680541992
    7. ' lettres' → logprob: -7.156400680541992
    8. ' caracteres' → logprob: -7.281400680541992
    9. ' ' → logprob: -7.531400680541992
    10. 'plus' → logprob: -7.781400680541992

Token 83: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.49910908937454224
    2. ' vers' → logprob: -1.7491090297698975
    3. ' de' → logprob: -3.2491090297698975
    4. ' à' → logprob: -3.4991090297698975
    5. ' qui' → logprob: -3.4991090297698975
    6. ' dans' → logprob: -3.9991090297698975
    7. ' lex' → logprob: -3.9991090297698975
    8. ' d' → logprob: -4.499109268188477
    9. ' suivants' → logprob: -4.624109268188477
    10. ' ' → logprob: -4.624109268188477

Token 84: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.0914368629455566
    2. ' à' → logprob: -1.3414368629455566
    3. ' plus' → logprob: -1.3414368629455566
    4. 'à' → logprob: -2.0914368629455566
    5. 'moins' → logprob: -5.091436862945557
    6. 'pro' → logprob: -6.716436862945557
    7. ' -' → logprob: -6.841436862945557
    8. 'près' → logprob: -6.966436862945557
    9. ' proches' → logprob: -7.091436862945557
    10. '-' → logprob: -7.091436862945557

Token 85: ' petits' (ID: 38141)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.08841507881879807
    2. ' petits' → logprob: -2.9634151458740234
    3. ' à' → logprob: -4.088415145874023
    4. 'à' → logprob: -5.088415145874023
    5. ' proches' → logprob: -6.088415145874023
    6. ' petit' → logprob: -6.713415145874023
    7. ' petites' → logprob: -6.838415145874023
    8. 'pro' → logprob: -6.838415145874023
    9. ' ' → logprob: -7.088415145874023
    10. ' lex' → logprob: -7.713415145874023

Token 86: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.19458994269371033
    2. ' dans' → logprob: -2.694589853286743
    3. ' en' → logprob: -3.819589853286743
    4. ' à' → logprob: -3.944589853286743
    5. ' de' → logprob: -4.069590091705322
    6. ' au' → logprob: -4.194590091705322
    7. ' ' → logprob: -5.194590091705322
    8. ' possibles' → logprob: -5.319590091705322
    9. ' les' → logprob: -5.444590091705322
    10. 'dans' → logprob: -5.569590091705322

Token 87: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20839455723762512
    2. ' ' → logprob: -2.5833945274353027
    3. 'la' → logprob: -3.3333945274353027
    4. ' l' → logprob: -3.5833945274353027
    5. ' gauche' → logprob: -4.208394527435303
    6. 'l' → logprob: -4.583394527435303
    7. ' ' → logprob: -4.833394527435303
    8. '   ' → logprob: -5.333394527435303
    9. ' le' → logprob: -5.958394527435303
    10. 'g' → logprob: -6.333394527435303

Token 88: ' début' (ID: 29589)
  Prédit: ' gauche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.39624306559562683
    2. ' début' → logprob: -1.3962430953979492
    3. 'g' → logprob: -3.146243095397949
    4. 'dé' → logprob: -3.646243095397949
    5. 'prem' → logprob: -6.396243095397949
    6. ' ' → logprob: -6.521243095397949
    7. ' gau' → logprob: -6.646243095397949
    8. 'a' → logprob: -7.521243095397949
    9. 'é' → logprob: -7.771243095397949
    10. ' ' → logprob: -7.771243095397949

Token 89: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5050937533378601
    2. ' ' → logprob: -2.130093812942505
    3. '.' → logprob: -2.255093812942505
    4. ',' → logprob: -2.380093812942505
    5. ' en' → logprob: -4.255093574523926
    6. 's' → logprob: -4.505093574523926
    7. ' ,' → logprob: -4.630093574523926
    8. 'de' → logprob: -5.255093574523926
    9. ' d' → logprob: -5.380093574523926
    10. ' du' → logprob: -5.630093574523926

Token 90: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08065232634544373
    2. 'la' → logprob: -2.7056522369384766
    3. ' l' → logprob: -5.330652236938477
    4. 'l' → logprob: -5.580652236938477
    5. ' ' → logprob: -6.955652236938477
    6. ' ' → logprob: -7.830652236938477
    7. 'a' → logprob: -7.955652236938477
    8. 's' → logprob: -9.580652236938477
    9. ' a' → logprob: -9.705652236938477
    10. 'chaine' → logprob: -10.955652236938477

Token 91: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.07578062266111374
    2. 'chaine' → logprob: -3.2007806301116943
    3. ' chaine' → logprob: -4.325780391693115
    4. 'cha' → logprob: -4.950780391693115
    5. ' liste' → logprob: -5.075780391693115
    6. ' string' → logprob: -6.450780391693115
    7. 'liste' → logprob: -6.950780391693115
    8. ' ligne' → logprob: -7.450780391693115
    9. 'string' → logprob: -7.575780391693115
    10. 'ligne' → logprob: -7.700780391693115

Token 92: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3269485235214233
    2. '.' → logprob: -1.5769485235214233
    3. ' ' → logprob: -1.9519485235214233
    4. ',' → logprob: -2.076948642730713
    5. 's' → logprob: -2.576948642730713
    6. ' en' → logprob: -3.701948642730713
    7. ' ,' → logprob: -3.701948642730713
    8. '#' → logprob: -3.701948642730713
    9. ' def' → logprob: -4.201948642730713
    10. 'import' → logprob: -4.326948642730713

Token 93: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3160613477230072
    2. '```' → logprob: -3.06606125831604
    3. 'n' → logprob: -3.19106125831604
    4. ' ' → logprob: -3.31606125831604
    5. '#' → logprob: -3.56606125831604
    6. 's' → logprob: -4.066061496734619
    7. 'i' → logprob: -4.191061496734619
    8. ':' → logprob: -4.566061496734619
    9. ' def' → logprob: -4.816061496734619
    10. '\' → logprob: -4.941061496734619

Token 94: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5997351408004761
    2. ' ' → logprob: -1.724735140800476
    3. '```' → logprob: -2.4747352600097656
    4. ' def' → logprob: -3.5997352600097656
    5. '\' → logprob: -3.8497352600097656
    6. 's' → logprob: -4.099735260009766
    7. ':' → logprob: -4.349735260009766
    8. '#' → logprob: -4.349735260009766
    9. '.' → logprob: -4.474735260009766
    10. ',' → logprob: -4.599735260009766

Token 95: ' Une' (ID: 19758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5459460020065308
    2. ' for' → logprob: -1.9209460020065308
    3. 'for' → logprob: -2.1709461212158203
    4. 'Pour' → logprob: -2.1709461212158203
    5. 'On' → logprob: -2.2959461212158203
    6. ' On' → logprob: -2.5459461212158203
    7. ' Pour' → logprob: -2.7959461212158203
    8. 'def' → logprob: -3.4209461212158203
    9. ' def' → logprob: -3.9209461212158203
    10. ' #' → logprob: -3.9209461212158203

Token 96: ' méthode' (ID: 71490)
  Prédit: ' boucle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' boucle' → logprob: -0.10386409610509872
    2. ' fois' → logprob: -3.9788641929626465
    3. 'bou' → logprob: -4.4788641929626465
    4. ' bou' → logprob: -4.8538641929626465
    5. ' ' → logprob: -4.9788641929626465
    6. ' for' → logprob: -5.6663641929626465
    7. ' approche' → logprob: -5.7913641929626465
    8. ' possible' → logprob: -5.9788641929626465
    9. 'fois' → logprob: -5.9788641929626465
    10. '   ' → logprob: -6.0413641929626465

Token 97: ' efficace' (ID: 54338)
  Prédit: ' simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' simple' → logprob: -0.5494584441184998
    2. ' classique' → logprob: -2.4244585037231445
    3. ' naï' → logprob: -2.4244585037231445
    4. ' possible' → logprob: -2.6744585037231445
    5. ':' → logprob: -3.5494585037231445
    6. ' consiste' → logprob: -3.7994585037231445
    7. ' naive' → logprob: -4.4244585037231445
    8. ' gl' → logprob: -4.4244585037231445
    9. ' efficace' → logprob: -4.4244585037231445
    10. 'simple' → logprob: -4.5494585037231445

Token 98: ' consiste' (ID: 46504)
  Prédit: ' consiste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' consiste' → logprob: -0.09364329278469086
    2. ' serait' → logprob: -3.3436431884765625
    3. ' cons' → logprob: -3.7186431884765625
    4. ' est' → logprob: -4.3436431884765625
    5. ':' → logprob: -5.2186431884765625
    6. 'cons' → logprob: -5.5936431884765625
    7. ' :' → logprob: -5.7186431884765625
    8. ' pour' → logprob: -5.9686431884765625
    9. ' consist' → logprob: -7.3436431884765625
    10. ' pourrait' → logprob: -8.468643188476562

Token 99: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.30515486001968384
    2. ' d' → logprob: -1.430154800415039
    3. ' de' → logprob: -3.805154800415039
    4. 'à' → logprob: -7.555154800415039
    5. ' ' → logprob: -7.930154800415039
    6. ' a' → logprob: -8.430154800415039
    7. 'd' → logprob: -9.430154800415039
    8. ' simplement' → logprob: -9.930154800415039
    9. ' to' → logprob: -10.180154800415039
    10. ',' → logprob: -10.180154800415039

Token 100: ' it' (ID: 480)
  Prédit: ' parcour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -0.5286892652511597
    2. ' utiliser' → logprob: -1.1536892652511597
    3. 'util' → logprob: -2.778689384460449
    4. 'par' → logprob: -4.153689384460449
    5. 'impl' → logprob: -5.403689384460449
    6. 'tr' → logprob: -5.903689384460449
    7. ''utiliser' → logprob: -7.028689384460449
    8. ' explorer' → logprob: -7.403689384460449
    9. 'sim' → logprob: -7.528689384460449
    10. ' chercher' → logprob: -7.653689384460449

Token 101: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.0647745206952095
    2. 'er' → logprob: -3.564774513244629
    3. 'é' → logprob: -3.939774513244629
    4. 'ér' → logprob: -4.314774513244629
    5. 'e' → logprob: -7.564774513244629
    6. '#' → logprob: -8.814774513244629
    7. ' ' → logprob: -9.189774513244629
    8. '   ' → logprob: -9.314774513244629
    9. 'éer' → logprob: -9.564774513244629
    10. 'ération' → logprob: -9.814774513244629

Token 102: ' sur' (ID: 1512)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19602817296981812
    2. ' sur' → logprob: -1.821028232574463
    3. 'sur' → logprob: -4.946028232574463
    4. ' à' → logprob: -5.071028232574463
    5. ' through' → logprob: -7.071028232574463
    6. ' over' → logprob: -7.321028232574463
    7. 's' → logprob: -8.196027755737305
    8. ' au' → logprob: -8.821027755737305
    9. ' i' → logprob: -9.446027755737305
    10. ' s' → logprob: -9.821027755737305

Token 103: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.07190396636724472
    2. 'la' → logprob: -4.196904182434082
    3. ' les' → logprob: -4.196904182434082
    4. ' range' → logprob: -4.696904182434082
    5. ' chaque' → logprob: -4.696904182434082
    6. ' ' → logprob: -4.821904182434082
    7. ' l' → logprob: -5.571904182434082
    8. 'l' → logprob: -6.571904182434082
    9. 'les' → logprob: -6.696904182434082
    10. ' i' → logprob: -6.696904182434082

Token 104: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.19377709925174713
    2. 'chaine' → logprob: -2.693777084350586
    3. 's' → logprob: -3.443777084350586
    4. ' chaine' → logprob: -3.693777084350586
    5. ' string' → logprob: -4.443777084350586
    6. 'string' → logprob: -4.693777084350586
    7. ' liste' → logprob: -4.693777084350586
    8. 'cha' → logprob: -5.068777084350586
    9. ' range' → logprob: -5.193777084350586
    10. ' s' → logprob: -5.443777084350586

Token 105: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46007028222084045
    2. ' en' → logprob: -1.335070252418518
    3. ' caractère' → logprob: -3.0850703716278076
    4. 'en' → logprob: -4.7100701332092285
    5. ' caract' → logprob: -4.7100701332092285
    6. ' car' → logprob: -4.9600701332092285
    7. ' s' → logprob: -5.2100701332092285
    8. 's' → logprob: -5.2100701332092285
    9. 'car' → logprob: -5.3350701332092285
    10. ' ,' → logprob: -5.5850701332092285

Token 106: ' position' (ID: 4010)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5937453508377075
    2. ' parcour' → logprob: -2.218745231628418
    3. ' utilisant' → logprob: -2.593745231628418
    4. 'range' → logprob: -2.718745231628418
    5. ' avanç' → logprob: -3.718745231628418
    6. ' cher' → logprob: -3.968745231628418
    7. ' dé' → logprob: -4.093745231628418
    8. ' part' → logprob: -4.218745231628418
    9. 's' → logprob: -4.593745231628418
    10. ' effect' → logprob: -4.968745231628418

Token 107: ' courant' (ID: 74694)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8372442722320557
    2. ' ' → logprob: -1.8372442722320557
    3. ' i' → logprob: -1.9622442722320557
    4. ' par' → logprob: -1.9622442722320557
    5. ' s' → logprob: -2.2122442722320557
    6. ' =' → logprob: -5.087244033813477
    7. ',' → logprob: -5.712244033813477
    8. ' de' → logprob: -6.587244033813477
    9. 'par' → logprob: -6.712244033813477
    10. '=' → logprob: -7.212244033813477

Token 108: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18191996216773987
    2. 's' → logprob: -2.556920051574707
    3. 'e' → logprob: -3.181920051574707
    4. ' ,' → logprob: -4.056920051574707
    5. ':' → logprob: -4.806920051574707
    6. ' ' → logprob: -5.431920051574707
    7. ' e' → logprob: -5.681920051574707
    8. ' i' → logprob: -5.806920051574707
    9. ' s' → logprob: -6.181920051574707
    10. ' en' → logprob: -6.681920051574707

Token 109: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2085177898406982
    2. ' i' → logprob: -1.2085177898406982
    3. ' )' → logprob: -2.4585177898406982
    4. '),' → logprob: -2.5835177898406982
    5. '):' → logprob: -2.5835177898406982
    6. 'i' → logprob: -2.7085177898406982
    7. 's' → logprob: -3.8335177898406982
    8. ' ),' → logprob: -3.9585177898406982
    9. 'pos' → logprob: -4.083518028259277
    10. ' s' → logprob: -4.833518028259277

Token 110: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7346170544624329
    2. '+' → logprob: -1.859616994857788
    3. '):' → logprob: -2.359616994857788
    4. ' )' → logprob: -2.609616994857788
    5. '=' → logprob: -2.734616994857788
    6. ' =' → logprob: -3.609616994857788
    7. '):
' → logprob: -3.859616994857788
    8. ' +' → logprob: -3.859616994857788
    9. '),' → logprob: -4.609617233276367
    10. ' ' → logprob: -4.984617233276367

Token 111: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3136529922485352
    2. ' ' → logprob: -1.3136529922485352
    3. '   ' → logprob: -2.438652992248535
    4. '```' → logprob: -2.563652992248535
    5. 'while' → logprob: -3.313652992248535
    6. ' while' → logprob: -3.313652992248535
    7. 'for' → logprob: -3.438652992248535
    8. ':' → logprob: -3.438652992248535
    9. '#' → logprob: -3.563652992248535
    10. ' ,' → logprob: -3.688652992248535

Token 112: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7356424331665039
    2. ' ' → logprob: -1.610642433166504
    3. ',' → logprob: -2.735642433166504
    4. '```' → logprob: -2.735642433166504
    5. ' while' → logprob: -3.485642433166504
    6. ' ' → logprob: -3.610642433166504
    7. ' #' → logprob: -4.360642433166504
    8. '#' → logprob: -4.485642433166504
    9. ' ,' → logprob: -4.610642433166504
    10. ' n' → logprob: -4.735642433166504

Token 113: ' Pour' (ID: 13931)
  Prédit: ' Pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Pour' → logprob: -1.6486607789993286
    2. ' for' → logprob: -1.7736607789993286
    3. 'Pour' → logprob: -1.7736607789993286
    4. 'for' → logprob: -2.023660659790039
    5. ' On' → logprob: -2.273660659790039
    6. 'À' → logprob: -3.023660659790039
    7. ' À' → logprob: -3.023660659790039
    8. 'On' → logprob: -3.148660659790039
    9. '#' → logprob: -3.898660659790039
    10. ' A' → logprob: -4.398660659790039

Token 114: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.046986665576696396
    2. ' i' → logprob: -3.5469865798950195
    3. ' ' → logprob: -5.1719865798950195
    4. ' j' → logprob: -5.2969865798950195
    5. ' each' → logprob: -5.5469865798950195
    6. 'i' → logprob: -8.04698657989502
    7. 'each' → logprob: -8.17198657989502
    8. '  ' → logprob: -8.29698657989502
    9. ' trouver' → logprob: -8.54698657989502
    10. ' chercher' → logprob: -8.79698657989502

Token 115: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6742313504219055
    2. ' position' → logprob: -0.9242313504219055
    3. 'position' → logprob: -3.1742312908172607
    4. 'i' → logprob: -3.7992312908172607
    5. ' caractère' → logprob: -3.9242312908172607
    6. ' ' → logprob: -5.67423152923584
    7. ' ' → logprob: -6.54923152923584
    8. 'pos' → logprob: -7.29923152923584
    9. ' caract' → logprob: -7.42423152923584
    10. 'car' → logprob: -7.54923152923584

Token 116: ' i' (ID: 575)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.3948591649532318
    2. ',' → logprob: -1.3948591947555542
    3. ' ' → logprob: -3.0198590755462646
    4. ' i' → logprob: -3.7698590755462646
    5. ' suivante' → logprob: -5.769859313964844
    6. 'i' → logprob: -5.894859313964844
    7. '  ' → logprob: -9.269859313964844
    8. ' on' → logprob: -9.394859313964844
    9. ',i' → logprob: -9.644859313964844
    10. ' =' → logprob: -10.144859313964844

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07036585360765457
    2. ' ,' → logprob: -2.6953659057617188
    3. ':' → logprob: -8.820365905761719
    4. ' ' → logprob: -9.195365905761719
    5. ' :' → logprob: -9.445365905761719
    6. ',
' → logprob: -10.820365905761719
    7. '#' → logprob: -11.445365905761719
    8. '=' → logprob: -11.820365905761719
    9. '>,' → logprob: -11.820365905761719
    10. ' ' → logprob: -12.070365905761719

Token 118: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1944892555475235
    2. 'on' → logprob: -2.1944892406463623
    3. ' chercher' → logprob: -3.9444892406463623
    4. ' rechercher' → logprob: -4.069489479064941
    5. 'chercher' → logprob: -4.194489479064941
    6. '#' → logprob: -4.944489479064941
    7. ' regarder' → logprob: -6.069489479064941
    8. ' ' → logprob: -6.944489479064941
    9. ' ' → logprob: -6.944489479064941
    10. ' trouver' → logprob: -7.444489479064941

Token 119: ' regarde' (ID: 115760)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -0.2094470113515854
    2. ' cherche' → logprob: -2.084446907043457
    3. ' regarde' → logprob: -3.334446907043457
    4. ' recherche' → logprob: -4.209446907043457
    5. 'chercher' → logprob: -5.209446907043457
    6. 'reg' → logprob: -6.084446907043457
    7. ' chercher' → logprob: -6.834446907043457
    8. ' essa' → logprob: -7.084446907043457
    9. 'cher' → logprob: -7.084446907043457
    10. 'expl' → logprob: -7.334446907043457

Token 120: ' dans' (ID: 2671)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.28717681765556335
    2. ' jusqu' → logprob: -2.5371768474578857
    3. ' la' → logprob: -2.6621768474578857
    4. ' l' → logprob: -3.4121768474578857
    5. 'les' → logprob: -4.162176609039307
    6. ' le' → logprob: -4.287176609039307
    7. ' ' → logprob: -4.412176609039307
    8. ' dans' → logprob: -5.662176609039307
    9. ' j' → logprob: -5.662176609039307
    10. ' sur' → logprob: -6.287176609039307

Token 121: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7786068320274353
    2. ' range' → logprob: -0.7786068320274353
    3. 'range' → logprob: -2.90360689163208
    4. ' les' → logprob: -4.27860689163208
    5. ' l' → logprob: -5.27860689163208
    6. ' une' → logprob: -6.02860689163208
    7. ' le' → logprob: -6.65360689163208
    8. ' ' → logprob: -6.90360689163208
    9. ' i' → logprob: -7.02860689163208
    10. ' un' → logprob: -7.02860689163208

Token 122: ' segment' (ID: 14806)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.072242259979248
    2. ' interval' → logprob: -1.447242259979248
    3. ' range' → logprob: -2.072242259979248
    4. 'interval' → logprob: -2.572242259979248
    5. ' rayon' → logprob: -2.697242259979248
    6. 'ray' → logprob: -2.947242259979248
    7. 'e' → logprob: -4.197242259979248
    8. 'window' → logprob: -4.322242259979248
    9. ' window' → logprob: -4.572242259979248
    10. ' segment' → logprob: -4.822242259979248

Token 123: ' limité' (ID: 135767)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9512805938720703
    2. '[i' → logprob: -1.4512805938720703
    3. ' [' → logprob: -1.9512805938720703
    4. ' suivant' → logprob: -2.5762805938720703
    5. '[' → logprob: -2.7012805938720703
    6. 'de' → logprob: -3.2012805938720703
    7. '[j' → logprob: -3.8262805938720703
    8. ' plus' → logprob: -5.20128059387207
    9. '[next' → logprob: -5.57628059387207
    10. ' ' → logprob: -6.32628059387207

Token 124: ' par' (ID: 686)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7822545766830444
    2. ' à' → logprob: -1.4072545766830444
    3. ' d' → logprob: -2.657254695892334
    4. 'de' → logprob: -2.782254695892334
    5. '[' → logprob: -3.157254695892334
    6. ' ' → logprob: -3.532254695892334
    7. 'd' → logprob: -4.157254695892334
    8. ' par' → logprob: -4.282254695892334
    9. ' aux' → logprob: -4.782254695892334
    10. ' [' → logprob: -5.282254695892334

Token 125: ' la' (ID: 557)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7376675605773926
    2. ' la' → logprob: -1.8626675605773926
    3. 'k' → logprob: -1.9876675605773926
    4. ' i' → logprob: -2.1126675605773926
    5. ' min' → logprob: -2.7376675605773926
    6. 'i' → logprob: -4.112667560577393
    7. 'min' → logprob: -4.237667560577393
    8. 'la' → logprob: -5.237667560577393
    9. ' l' → logprob: -6.237667560577393
    10. ' ' → logprob: -6.862667560577393

Token 126: ' quantité' (ID: 89219)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16854514181613922
    2. 'i' → logprob: -3.2935452461242676
    3. ' k' → logprob: -3.2935452461242676
    4. ' min' → logprob: -3.4185452461242676
    5. 'min' → logprob: -3.7935452461242676
    6. ' i' → logprob: -4.918545246124268
    7. ' nombre' → logprob: -5.543545246124268
    8. ' reste' → logprob: -6.168545246124268
    9. 's' → logprob: -6.293545246124268
    10. ' budget' → logprob: -6.793545246124268

Token 127: ' de' (ID: 334)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9759666919708252
    2. ' restante' → logprob: -1.1009666919708252
    3. ' de' → logprob: -1.4759666919708252
    4. 'k' → logprob: -4.225966453552246
    5. 'de' → logprob: -4.475966453552246
    6. ' d' → logprob: -4.475966453552246
    7. ' disponible' → logprob: -5.350966453552246
    8. ' maximale' → logprob: -5.600966453552246
    9. ' rest' → logprob: -5.850966453552246
    10. ' ' → logprob: -6.100966453552246

Token 128: ' swaps' (ID: 150699)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.19763730466365814
    2. 'k' → logprob: -1.8226373195648193
    3. ' swaps' → logprob: -4.82263708114624
    4. ' l' → logprob: -5.57263708114624
    5. ' déplacement' → logprob: -6.94763708114624
    6. ' swap' → logprob: -7.19763708114624
    7. ' déplacements' → logprob: -7.44763708114624
    8. 's' → logprob: -7.82263708114624
    9. 'swap' → logprob: -8.072637557983398
    10. ' ' → logprob: -8.197637557983398

Token 129: ' rest' (ID: 2867)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2369554042816162
    2. ' restante' → logprob: -1.4869554042816162
    3. ' rest' → logprob: -1.7369554042816162
    4. '_rest' → logprob: -2.986955404281616
    5. ' disponible' → logprob: -3.236955404281616
    6. ' possible' → logprob: -3.236955404281616
    7. '_possible' → logprob: -3.361955404281616
    8. 'rest' → logprob: -3.361955404281616
    9. '_' → logprob: -3.986955404281616
    10. ' restantes' → logprob: -3.986955404281616

Token 130: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.639824628829956
    2. 'ante' → logprob: -0.764824628829956
    3. 'ant' → logprob: -5.639824867248535
    4. 'antes' → logprob: -6.889824867248535
    5. 'r' → logprob: -8.264824867248535
    6. 'a' → logprob: -8.264824867248535
    7. 'nants' → logprob: -8.389824867248535
    8. 're' → logprob: -8.514824867248535
    9. 'raints' → logprob: -8.639824867248535
    10. '#' → logprob: -8.764824867248535

Token 131: ' k' (ID: 372)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.828722357749939
    2. ' ' → logprob: -1.828722357749939
    3. ' (' → logprob: -1.953722357749939
    4. ' de' → logprob: -2.5787224769592285
    5. ' suivante' → logprob: -2.9537224769592285
    6. ',' → logprob: -3.3287224769592285
    7. ' à' → logprob: -3.3287224769592285
    8. ' jusqu' → logprob: -3.3287224769592285
    9. ' j' → logprob: -3.4537224769592285
    10. 'de' → logprob: -3.7037224769592285

Token 132: ' (' (ID: 350)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -1.6475181579589844
    2. ',' → logprob: -2.1475181579589844
    3. ' jusqu' → logprob: -2.2725181579589844
    4. ' (' → logprob: -2.5225181579589844
    5. ' la' → logprob: -3.0225181579589844
    6. '[j' → logprob: -3.2725181579589844
    7. ' à' → logprob: -3.2725181579589844
    8. '[' → logprob: -3.3975181579589844
    9. ' de' → logprob: -3.6475181579589844
    10. 'jus' → logprob: -3.7725181579589844

Token 133: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1976081281900406
    2. ' )' → logprob: -1.8226081132888794
    3. '[' → logprob: -5.44760799407959
    4. '),' → logprob: -5.94760799407959
    5. ' ' → logprob: -6.57260799407959
    6. ',' → logprob: -6.94760799407959
    7. ' la' → logprob: -7.44760799407959
    8. ' de' → logprob: -7.57260799407959
    9. ' à' → logprob: -7.69760799407959
    10. ' jusqu' → logprob: -7.69760799407959

Token 134: ' on' (ID: 402)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9567879438400269
    2. ' on' → logprob: -1.5817879438400269
    3. ' i' → logprob: -1.7067879438400269
    4. 'i' → logprob: -2.5817880630493164
    5. 'k' → logprob: -2.5817880630493164
    6. ' ' → logprob: -4.456788063049316
    7. ' j' → logprob: -4.706788063049316
    8. ')' → logprob: -4.706788063049316
    9. 'on' → logprob: -4.956788063049316
    10. ' la' → logprob: -4.956788063049316

Token 135: ' ne' (ID: 453)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.3016633093357086
    2. 'pe' → logprob: -1.4266632795333862
    3. ' ne' → logprob: -4.551663398742676
    4. ' a' → logprob: -6.301663398742676
    5. 'a' → logprob: -6.551663398742676
    6. '#' → logprob: -6.801663398742676
    7. ' peux' → logprob: -6.801663398742676
    8. ' pe' → logprob: -7.051663398742676
    9. ' doit' → logprob: -7.426663398742676
    10. 'ne' → logprob: -7.426663398742676

Token 136: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.19355235993862152
    2. ' peut' → logprob: -1.9435523748397827
    3. 'ne' → logprob: -4.193552494049072
    4. ' ne' → logprob: -4.443552494049072
    5. 'n' → logprob: -6.443552494049072
    6. ' pe' → logprob: -7.193552494049072
    7. 'pour' → logprob: -7.318552494049072
    8. ' peux' → logprob: -7.443552494049072
    9. 've' → logprob: -7.568552494049072
    10. 'do' → logprob: -7.943552494049072

Token 137: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.2230379581451416
    2. ' pas' → logprob: -1.8480379581451416
    3. 'dé' → logprob: -3.9730379581451416
    4. 'faire' → logprob: -5.8480377197265625
    5. 'aller' → logprob: -6.0980377197265625
    6. ' dé' → logprob: -6.2230377197265625
    7. ' déplacer' → logprob: -6.3480377197265625
    8. ' dépasser' → logprob: -6.3480377197265625
    9. 'plus' → logprob: -6.5980377197265625
    10. 'swap' → logprob: -6.7230377197265625

Token 138: ' faire' (ID: 8119)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.4101729094982147
    2. 'aller' → logprob: -1.910172939300537
    3. ' dépasser' → logprob: -3.035172939300537
    4. ' dé' → logprob: -3.535172939300537
    5. 'faire' → logprob: -4.535172939300537
    6. 'util' → logprob: -4.660172939300537
    7. 'swap' → logprob: -4.785172939300537
    8. 'éch' → logprob: -4.785172939300537
    9. ' aller' → logprob: -4.785172939300537
    10. ' déplacer' → logprob: -4.785172939300537

Token 139: ' rem' (ID: 1662)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.2942788004875183
    2. 'plus' → logprob: -1.544278860092163
    3. 'de' → logprob: -4.669278621673584
    4. ' de' → logprob: -5.169278621673584
    5. ' d' → logprob: -5.669278621673584
    6. ' dépasser' → logprob: -5.669278621673584
    7. 'd' → logprob: -5.919278621673584
    8. 'k' → logprob: -6.169278621673584
    9. ' mieux' → logprob: -6.544278621673584
    10. ' ' → logprob: -6.544278621673584

Token 140: 'onter' (ID: 61808)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.03638492524623871
    2. 'onter' → logprob: -3.9113848209381104
    3. 'pl' → logprob: -4.5363850593566895
    4. 'p' → logprob: -7.0363850593566895
    5. 'plac' → logprob: -7.1613850593566895
    6. 'placements' → logprob: -7.5363850593566895
    7. 'et' → logprob: -7.5363850593566895
    8. 'pla' → logprob: -8.286384582519531
    9. 'a' → logprob: -8.411384582519531
    10. 'er' → logprob: -8.536384582519531

Token 141: ' un' (ID: 537)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.573825478553772
    2. ' les' → logprob: -1.823825478553772
    3. ' le' → logprob: -2.0738253593444824
    4. ')' → logprob: -2.1988253593444824
    5. ' un' → logprob: -2.3238253593444824
    6. 'le' → logprob: -3.0738253593444824
    7. ' de' → logprob: -3.0738253593444824
    8. ' que' → logprob: -3.4488253593444824
    9. ' des' → logprob: -3.6988253593444824
    10. 'les' → logprob: -3.8238253593444824

Token 142: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.6560081839561462
    2. 'car' → logprob: -1.031008243560791
    3. ' caract' → logprob: -3.656008243560791
    4. ' car' → logprob: -4.281008243560791
    5. ' plus' → logprob: -4.531008243560791
    6. ' espace' → logprob: -4.781008243560791
    7. 's' → logprob: -4.906008243560791
    8. 'plus' → logprob: -5.156008243560791
    9. '```' → logprob: -5.156008243560791
    10. ' ' → logprob: -5.281008243560791

Token 143: ' trop' (ID: 14765)
  Prédit: ' trop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trop' → logprob: -1.0249260663986206
    2. ' plus' → logprob: -1.1499260663986206
    3. 'plus' → logprob: -2.52492618560791
    4. 'jus' → logprob: -2.64992618560791
    5. ' jusqu' → logprob: -2.89992618560791
    6. ' au' → logprob: -3.52492618560791
    7. ' de' → logprob: -4.27492618560791
    8. ' à' → logprob: -4.39992618560791
    9. 'au' → logprob: -4.52492618560791
    10. ')' → logprob: -4.52492618560791

Token 144: ' loin' (ID: 40875)
  Prédit: 'loin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loin' → logprob: -0.2508212625980377
    2. ' loin' → logprob: -2.250821352005005
    3. 'lo' → logprob: -2.500821352005005
    4. ' élo' → logprob: -3.500821352005005
    5. 'é' → logprob: -5.750821113586426
    6. ' ' → logprob: -8.000821113586426
    7. 'l' → logprob: -9.000821113586426
    8. ' l' → logprob: -9.125821113586426
    9. ' ' → logprob: -9.250821113586426
    10. '>' → logprob: -9.625821113586426

Token 145: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6639242172241211
    2. ' )' → logprob: -0.9139242172241211
    3. ' vers' → logprob: -3.913924217224121
    4. '),' → logprob: -4.163924217224121
    5. ' ),' → logprob: -4.163924217224121
    6. ' de' → logprob: -4.663924217224121
    7. ' à' → logprob: -5.288924217224121
    8. ' dans' → logprob: -5.663924217224121
    9. ').' → logprob: -5.663924217224121
    10. ' ).' → logprob: -5.788924217224121

Token 146: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.35884711146354675
    2. 'k' → logprob: -1.7338471412658691
    3. ' on' → logprob: -2.733847141265869
    4. ' la' → logprob: -3.608847141265869
    5. ' ' → logprob: -5.358847141265869
    6. ' l' → logprob: -5.483847141265869
    7. ' le' → logprob: -5.608847141265869
    8. ' celui' → logprob: -5.733847141265869
    9. ' i' → logprob: -5.983847141265869
    10. 'l' → logprob: -6.233847141265869

Token 147: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.2421865463256836
    2. ' est' → logprob: -1.3671865463256836
    3. '>' → logprob: -1.4921865463256836
    4. ' <' → logprob: -2.4921865463256836
    5. ' n' → logprob: -3.2421865463256836
    6. ' reste' → logprob: -3.4921865463256836
    7. ' >=' → logprob: -4.242186546325684
    8. 'est' → logprob: -4.617186546325684
    9. ' ==' → logprob: -4.617186546325684
    10. 'n' → logprob: -4.992186546325684

Token 148: ' petit' (ID: 20577)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.059359412640333176
    2. ' ' → logprob: -4.309359550476074
    3. ' nul' → logprob: -4.559359550476074
    4. ' insuff' → logprob: -4.809359550476074
    5. ' ép' → logprob: -4.934359550476074
    6. ' trop' → logprob: -5.559359550476074
    7. 'plus' → logprob: -5.809359550476074
    8. 'ép' → logprob: -5.934359550476074
    9. 'nul' → logprob: -6.559359550476074
    10. 'n' → logprob: -6.934359550476074

Token 149: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19190962612628937
    2. '),' → logprob: -2.3169095516204834
    3. ').' → logprob: -2.6919095516204834
    4. ' )' → logprob: -6.1919097900390625
    5. ')"' → logprob: -6.5669097900390625
    6. 'e' → logprob: -7.3169097900390625
    7. '):' → logprob: -7.3169097900390625
    8. ')."' → logprob: -7.3169097900390625
    9. '")' → logprob: -7.4419097900390625
    10. ')
' → logprob: -7.9419097900390625

Token 150: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8224952220916748
    2. '#' → logprob: -1.5724952220916748
    3. ' for' → logprob: -2.447495222091675
    4. ' ' → logprob: -3.322495222091675
    5. ' #' → logprob: -3.322495222091675
    6. ',' → logprob: -3.447495222091675
    7. '[' → logprob: -3.822495222091675
    8. 'for' → logprob: -4.072495460510254
    9. '\' → logprob: -4.197495460510254
    10. ')' → logprob: -4.322495460510254

Token 151: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5474249124526978
    2. ' for' → logprob: -1.7974249124526978
    3. ' j' → logprob: -2.172424793243408
    4. 'for' → logprob: -2.297424793243408
    5. '   ' → logprob: -3.297424793243408
    6. ' #' → logprob: -3.297424793243408
    7. ' on' → logprob: -3.422424793243408
    8. '[' → logprob: -3.422424793243408
    9. '```' → logprob: -3.547424793243408
    10. ')' → logprob: -3.922424793243408

Token 152: ' On' (ID: 2160)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'On' → logprob: -0.22920899093151093
    2. ' On' → logprob: -2.2292089462280273
    3. '#' → logprob: -3.2292089462280273
    4. 'for' → logprob: -4.229208946228027
    5. ' on' → logprob: -4.729208946228027
    6. 'Pour' → logprob: -4.979208946228027
    7. 'Nous' → logprob: -5.729208946228027
    8. 'on' → logprob: -5.854208946228027
    9. 'Re' → logprob: -6.229208946228027
    10. ' for' → logprob: -6.354208946228027

Token 153: ' cherche' (ID: 52345)
  Prédit: ' cherche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cherche' → logprob: -0.4256506860256195
    2. 'cherche' → logprob: -1.425650715827942
    3. ' regarde' → logprob: -2.6756505966186523
    4. ' recherche' → logprob: -3.6756505966186523
    5. ' trouve' → logprob: -5.425650596618652
    6. ' chois' → logprob: -6.675650596618652
    7. ' sélection' → logprob: -7.050650596618652
    8. ' continue' → logprob: -7.175650596618652
    9. 'tr' → logprob: -7.300650596618652
    10. 'cher' → logprob: -7.675650596618652

Token 154: ' dans' (ID: 2671)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.04308722913265228
    2. 'le' → logprob: -4.168087005615234
    3. ' la' → logprob: -4.293087005615234
    4. ' à' → logprob: -5.793087005615234
    5. ' dans' → logprob: -6.043087005615234
    6. ' ' → logprob: -6.293087005615234
    7. ' l' → logprob: -6.543087005615234
    8. ' ' → logprob: -6.668087005615234
    9. '_le' → logprob: -6.793087005615234
    10. 'à' → logprob: -8.168087005615234

Token 155: ' s' (ID: 265)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3086431920528412
    2. ' range' → logprob: -2.058643102645874
    3. ' le' → logprob: -2.433643102645874
    4. 'range' → logprob: -4.058643341064453
    5. ' s' → logprob: -4.933643341064453
    6. ' l' → logprob: -5.058643341064453
    7. ' les' → logprob: -5.433643341064453
    8. ' i' → logprob: -5.558643341064453
    9. 'la' → logprob: -6.308643341064453
    10. ' ' → logprob: -6.558643341064453

Token 156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04059302434325218
    2. '[' → logprob: -3.290592908859253
    3. ' [' → logprob: -6.915593147277832
    4. '[s' → logprob: -7.665593147277832
    5. '[l' → logprob: -8.540593147277832
    6. '[max' → logprob: -8.915593147277832
    7. ' ' → logprob: -9.040593147277832
    8. 's' → logprob: -9.290593147277832
    9. '[j' → logprob: -9.790593147277832
    10. '[:' → logprob: -9.915593147277832

Token 157: ' :' (ID: 712)
  Prédit: ':i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.0966678038239479
    2. ':' → logprob: -2.471667766571045
    3. ' :' → logprob: -5.096667766571045
    4. ':j' → logprob: -6.846667766571045
    5. ':min' → logprob: -8.721668243408203
    6. ':]' → logprob: -8.971668243408203
    7. '+' → logprob: -9.596668243408203
    8. ':].' → logprob: -10.471668243408203
    9. ':index' → logprob: -10.846668243408203
    10. ':s' → logprob: -11.221668243408203

Token 158: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012185494415462017
    2. ' i' → logprob: -4.512185573577881
    3. 'min' → logprob: -6.887185573577881
    4. ' min' → logprob: -9.262185096740723
    5. ' ' → logprob: -11.637185096740723
    6. '   ' → logprob: -12.637185096740723
    7. ' ' → logprob: -13.137185096740723
    8. ']' → logprob: -13.512185096740723
    9. '  ' → logprob: -13.512185096740723
    10. '(i' → logprob: -13.637185096740723

Token 159: '+k' (ID: 110434)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37392741441726685
    2. ' +' → logprob: -1.748927354812622
    3. '+k' → logprob: -1.998927354812622
    4. '+i' → logprob: -6.248927593231201
    5. '+n' → logprob: -8.373927116394043
    6. '+j' → logprob: -9.373927116394043
    7. '+l' → logprob: -9.623927116394043
    8. '+p' → logprob: -9.998927116394043
    9. '+m' → logprob: -9.998927116394043
    10. '+s' → logprob: -10.373927116394043

Token 160: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019377965945750475
    2. ' +' → logprob: -6.2519378662109375
    3. ']' → logprob: -11.626937866210938
    4. '+]' → logprob: -16.751937866210938
    5. '＋' → logprob: -17.376937866210938
    6. '[' → logprob: -17.376937866210938
    7. '
' → logprob: -17.501937866210938
    8. ' ' → logprob: -17.626937866210938
    9. '+k' → logprob: -17.751937866210938
    10. 's' → logprob: -17.876937866210938

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7146746763028204e-05
    2. ' ' → logprob: -10.25003719329834
    3. ']' → logprob: -13.62503719329834
    4. '2' → logprob: -16.000036239624023
    5. '   ' → logprob: -16.500036239624023
    6. '
' → logprob: -16.812536239624023
    7. '```' → logprob: -17.250036239624023
    8. '  ' → logprob: -17.562536239624023
    9. ' ' → logprob: -17.562536239624023
    10. '+' → logprob: -17.562536239624023

Token 162: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002287164330482483
    2. ' ]' → logprob: -6.1272873878479
    3. '],' → logprob: -9.752286911010742
    4. '].' → logprob: -10.502286911010742
    5. ']
' → logprob: -12.502286911010742
    6. '+' → logprob: -13.627286911010742
    7. ' ' → logprob: -13.627286911010742
    8. ')' → logprob: -13.752286911010742
    9. '"]' → logprob: -14.002286911010742
    10. '[' → logprob: -14.127286911010742

Token 163: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.25807490944862366
    2. 'le' → logprob: -2.383074998855591
    3. ' la' → logprob: -2.633074998855591
    4. ',' → logprob: -3.008074998855591
    5. ']' → logprob: -6.258074760437012
    6. ' celui' → logprob: -6.258074760437012
    7. ' ,' → logprob: -6.508074760437012
    8. ' the' → logprob: -6.633074760437012
    9. 'min' → logprob: -6.758074760437012
    10. 'the' → logprob: -6.758074760437012

Token 164: ' caractère' (ID: 80509)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.46242427825927734
    2. 'car' → logprob: -1.3374242782592773
    3. 'plus' → logprob: -2.9624242782592773
    4. ' caractère' → logprob: -3.9624242782592773
    5. ' car' → logprob: -4.587424278259277
    6. ' minimal' → logprob: -5.212424278259277
    7. ' caract' → logprob: -5.337424278259277
    8. ' index' → logprob: -5.462424278259277
    9. 'min' → logprob: -5.587424278259277
    10. ' minimum' → logprob: -5.962424278259277

Token 165: ' minimum' (ID: 11085)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2147437334060669
    2. ' minimal' → logprob: -2.0897436141967773
    3. ' minimum' → logprob: -3.8397436141967773
    4. ' min' → logprob: -4.089743614196777
    5. 'min' → logprob: -4.589743614196777
    6. '_min' → logprob: -4.589743614196777
    7. ' smallest' → logprob: -5.714743614196777
    8. ' lex' → logprob: -6.089743614196777
    9. 'le' → logprob: -6.464743614196777
    10. '_le' → logprob: -7.214743614196777

Token 166: ' et' (ID: 859)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.7672371864318848
    2. ' suivant' → logprob: -2.0172371864318848
    3. ' s' → logprob: -2.1422371864318848
    4. ' possible' → logprob: -2.2672371864318848
    5. ',' → logprob: -2.2672371864318848
    6. 's' → logprob: -2.8922371864318848
    7. 'possible' → logprob: -3.2672371864318848
    8. '_' → logprob: -3.2672371864318848
    9. '_s' → logprob: -3.5172371864318848
    10. '.' → logprob: -3.7672371864318848

Token 167: ' sa' (ID: 880)
  Prédit: ' son'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' son' → logprob: -1.0389550924301147
    2. 'son' → logprob: -1.2889550924301147
    3. ' sa' → logprob: -1.5389550924301147
    4. 'sa' → logprob: -2.5389552116394043
    5. 'l' → logprob: -3.6639552116394043
    6. ' l' → logprob: -4.038955211639404
    7. 's' → logprob: -4.413955211639404
    8. ' la' → logprob: -5.163955211639404
    9. 'la' → logprob: -5.288955211639404
    10. ' ' → logprob: -5.538955211639404

Token 168: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.6497020125389099
    2. 'position' → logprob: -0.7747020125389099
    3. '_position' → logprob: -4.524702072143555
    4. 'pos' → logprob: -6.149702072143555
    5. 'indice' → logprob: -6.274702072143555
    6. 'index' → logprob: -7.024702072143555
    7. ' index' → logprob: -8.149702072143555
    8. '_pos' → logprob: -8.274702072143555
    9. '_index' → logprob: -8.274702072143555
    10. '_' → logprob: -9.149702072143555

Token 169: ' min' (ID: 1349)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.3147323727607727
    2. ',' → logprob: -2.439732313156128
    3. 'min' → logprob: -3.314732313156128
    4. ' s' → logprob: -3.814732313156128
    5. 's' → logprob: -4.064732551574707
    6. ' i' → logprob: -4.189732551574707
    7. ' dans' → logprob: -4.314732551574707
    8. ' (' → logprob: -4.939732551574707
    9. ' ' → logprob: -5.064732551574707
    10. ' next' → logprob: -5.064732551574707

Token 170: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.06096595898270607
    2. '_idx' → logprob: -3.5609660148620605
    3. '_index' → logprob: -4.3109660148620605
    4. '_' → logprob: -4.9359660148620605
    5. 'pos' → logprob: -5.1859660148620605
    6. '_char' → logprob: -6.3109660148620605
    7. '_i' → logprob: -6.6859660148620605
    8. '_ind' → logprob: -7.4359660148620605
    9. '_j' → logprob: -8.935965538024902
    10. '_val' → logprob: -8.935965538024902

Token 171: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.292694091796875
    2. '.' → logprob: -1.292694091796875
    3. '#' → logprob: -1.542694091796875
    4. '
' → logprob: -3.417694091796875
    5. '```' → logprob: -3.542694091796875
    6. ' =' → logprob: -3.792694091796875
    7. 's' → logprob: -3.917694091796875
    8. 'token' → logprob: -4.417694091796875
    9. ' ' → logprob: -4.417694091796875
    10. 'min' → logprob: -4.542694091796875

Token 172: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3707902133464813
    2. ' s' → logprob: -2.8707902431488037
    3. ',' → logprob: -2.9957902431488037
    4. '   ' → logprob: -3.6207902431488037
    5. ' #' → logprob: -3.7457902431488037
    6. '```' → logprob: -3.9957902431488037
    7. 's' → logprob: -4.120790004730225
    8. '  
' → logprob: -4.495790004730225
    9. 'min' → logprob: -4.620790004730225
    10. ' ' → logprob: -4.870790004730225

Token 173: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5315006375312805
    2. 'min' → logprob: -2.2815005779266357
    3. ' #' → logprob: -2.6565005779266357
    4. '   ' → logprob: -2.9065005779266357
    5. ' min' → logprob: -3.1565005779266357
    6. ' s' → logprob: -3.2815005779266357
    7. '```' → logprob: -4.281500816345215
    8. 'token' → logprob: -4.406500816345215
    9. ' for' → logprob: -4.406500816345215
    10. 's' → logprob: -4.531500816345215

Token 174: ' On' (ID: 2160)
  Prédit: ' On'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' On' → logprob: -0.5403151512145996
    2. 'On' → logprob: -1.1653151512145996
    3. '#' → logprob: -3.0403151512145996
    4. ' Si' → logprob: -4.5403151512146
    5. 'Si' → logprob: -4.7903151512146
    6. ' Ensuite' → logprob: -4.9153151512146
    7. ' #' → logprob: -5.2903151512146
    8. ' if' → logprob: -5.4153151512146
    9. ' Effect' → logprob: -5.4153151512146
    10. 'Effect' → logprob: -5.5403151512146

Token 175: ' dé' (ID: 2393)
  Prédit: ' dé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dé' → logprob: -0.8935038447380066
    2. ' effect' → logprob: -1.8935039043426514
    3. ' échange' → logprob: -1.8935039043426514
    4. ' swap' → logprob: -2.7685039043426514
    5. 'effect' → logprob: -3.0185039043426514
    6. ' perm' → logprob: -3.0185039043426514
    7. 'swap' → logprob: -3.1435039043426514
    8. 'dé' → logprob: -4.268503665924072
    9. 'é' → logprob: -5.018503665924072
    10. 'd' → logprob: -5.143503665924072

Token 176: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.0039759352803230286
    2. 'f' → logprob: -6.628975868225098
    3. 'cale' → logprob: -7.003975868225098
    4. 'c' → logprob: -7.628975868225098
    5. 'term' → logprob: -8.253975868225098
    6. '#' → logprob: -8.378975868225098
    7. 'placer' → logprob: -9.128975868225098
    8. 'tect' → logprob: -9.378975868225098
    9. 'pl' → logprob: -9.753975868225098
    10. 'plac' → logprob: -9.878975868225098

Token 177: ' ce' (ID: 2357)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.0098363161087036
    2. ' ce' → logprob: -1.0098363161087036
    3. ' le' → logprob: -1.3848363161087036
    4. 'min' → logprob: -4.259836196899414
    5. ' ' → logprob: -5.884836196899414
    6. 'le' → logprob: -6.634836196899414
    7. ' celui' → logprob: -6.759836196899414
    8. '[min' → logprob: -7.509836196899414
    9. 's' → logprob: -8.509836196899414
    10. ' s' → logprob: -9.009836196899414

Token 178: ' caractère' (ID: 80509)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.48411643505096436
    2. 'min' → logprob: -2.609116554260254
    3. ' caract' → logprob: -2.609116554260254
    4. 'car' → logprob: -2.734116554260254
    5. ' caractère' → logprob: -3.109116554260254
    6. '_min' → logprob: -3.234116554260254
    7. '_' → logprob: -3.734116554260254
    8. ' car' → logprob: -3.734116554260254
    9. ' minimum' → logprob: -3.859116554260254
    10. ' _' → logprob: -5.359116554260254

Token 179: ' min' (ID: 1349)
  Prédit: ' vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.07638689875602722
    2. ' de' → logprob: -3.8263869285583496
    3. ' à' → logprob: -3.8263869285583496
    4. ' min' → logprob: -4.45138692855835
    5. 'min' → logprob: -4.70138692855835
    6. 'à' → logprob: -6.32638692855835
    7. 'vers' → logprob: -6.45138692855835
    8. ' au' → logprob: -6.57638692855835
    9. 'de' → logprob: -6.82638692855835
    10. ' plus' → logprob: -7.95138692855835

Token 180: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0004856074519921094
    2. '_' → logprob: -8.00048542022705
    3. ' _' → logprob: -9.37548542022705
    4. '_position' → logprob: -10.62548542022705
    5. 'pos' → logprob: -10.87548542022705
    6. '_s' → logprob: -13.00048542022705
    7. '"_' → logprob: -13.00048542022705
    8. ''_' → logprob: -13.12548542022705
    9. '   ' → logprob: -13.37548542022705
    10. '_char' → logprob: -13.37548542022705

Token 181: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.005434981547296047
    2. ' ' → logprob: -6.630434989929199
    3. ' à' → logprob: -6.755434989929199
    4. ' jusqu' → logprob: -7.005434989929199
    5. 'vers' → logprob: -7.630434989929199
    6. '   ' → logprob: -8.2554349899292
    7. ' de' → logprob: -8.5054349899292
    8. ' -' → logprob: -8.5054349899292
    9. '    ' → logprob: -8.8804349899292
    10. ' plus' → logprob: -9.0054349899292

Token 182: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1221657544374466
    2. 'i' → logprob: -2.2471656799316406
    3. ' la' → logprob: -4.747165679931641
    4. ' ' → logprob: -8.24716567993164
    5. ' ' → logprob: -9.24716567993164
    6. ' l' → logprob: -9.49716567993164
    7. 'la' → logprob: -9.87216567993164
    8. '	i' → logprob: -9.99716567993164
    9. 'l' → logprob: -10.49716567993164
    10. 's' → logprob: -10.99716567993164

Token 183: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.8160358667373657
    2. 'en' → logprob: -0.9410358667373657
    3. ',' → logprob: -1.9410358667373657
    4. ' par' → logprob: -4.441035747528076
    5. 'par' → logprob: -6.316035747528076
    6. 's' → logprob: -6.441035747528076
    7. ' ' → logprob: -6.441035747528076
    8. ' by' → logprob: -6.441035747528076
    9. ' via' → logprob: -6.441035747528076
    10. '#' → logprob: -6.941035747528076

Token 184: ' effect' (ID: 3159)
  Prédit: ' effect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effect' → logprob: -0.33313482999801636
    2. 'effect' → logprob: -2.333134889602661
    3. 'é' → logprob: -3.208134889602661
    4. ' faisant' → logprob: -3.833134889602661
    5. ' le' → logprob: -4.083134651184082
    6. ' échange' → logprob: -4.208134651184082
    7. 'swap' → logprob: -4.458134651184082
    8. ' perm' → logprob: -4.458134651184082
    9. 'sw' → logprob: -4.708134651184082
    10. ' utilisant' → logprob: -4.833134651184082

Token 185: 'uant' (ID: 44411)
  Prédit: 'uant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uant' → logprob: -0.03386479616165161
    2. 'u' → logprob: -3.533864736557007
    3. ' u' → logprob: -6.408864974975586
    4. '#' → logprob: -7.533864974975586
    5. 'uent' → logprob: -8.033864974975586
    6. '=' → logprob: -8.533864974975586
    7. '   ' → logprob: -8.908864974975586
    8. 'ect' → logprob: -9.033864974975586
    9. '[u' → logprob: -9.033864974975586
    10. '``' → logprob: -9.158864974975586

Token 186: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.09852700680494308
    2. ' des' → logprob: -3.223526954650879
    3. 'min' → logprob: -3.348526954650879
    4. ' une' → logprob: -4.723526954650879
    5. '(min' → logprob: -5.098526954650879
    6. ' success' → logprob: -6.973526954650879
    7. ' (' → logprob: -7.598526954650879
    8. ' les' → logprob: -7.848526954650879
    9. ' ' → logprob: -7.973526954650879
    10. ' un' → logprob: -8.098526954650879

Token 187: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.9743012671824545e-05
    2. '_' → logprob: -11.000020027160645
    3. '(pos' → logprob: -13.875020027160645
    4. 'Pos' → logprob: -14.875020027160645
    5. 'pos' → logprob: -15.500020027160645
    6. '(_' → logprob: -15.625020027160645
    7. '_min' → logprob: -15.625020027160645
    8. ' _' → logprob: -15.750020027160645
    9. '(min' → logprob: -15.750020027160645
    10. '(' → logprob: -15.875020027160645

Token 188: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020703045651316643
    2. '-' → logprob: -3.895703077316284
    3. '-i' → logprob: -8.770703315734863
    4. ' ' → logprob: -12.895703315734863
    5. '  ' → logprob: -14.520703315734863
    6. '<|end|>' → logprob: -14.520703315734863
    7. '   ' → logprob: -14.645703315734863
    8. '#' → logprob: -14.770703315734863
    9. ' #' → logprob: -15.770703315734863
    10. ' ' → logprob: -15.770703315734863

Token 189: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.034679897129535675
    2. ' i' → logprob: -3.409679889678955
    3. '1' → logprob: -6.909679889678955
    4. ' ' → logprob: -10.659680366516113
    5. '```' → logprob: -12.159680366516113
    6. '_i' → logprob: -12.784680366516113
    7. '	i' → logprob: -14.534680366516113
    8. '`' → logprob: -14.534680366516113
    9. '[i' → logprob: -15.159680366516113
    10. 's' → logprob: -15.159680366516113

Token 190: ' swaps' (ID: 150699)
  Prédit: ' swaps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' swaps' → logprob: -0.3120296001434326
    2. ' échanges' → logprob: -1.8120296001434326
    3. 'sw' → logprob: -2.5620296001434326
    4. ' ' → logprob: -5.312029838562012
    5. 'swap' → logprob: -5.437029838562012
    6. 's' → logprob: -6.062029838562012
    7. ' ' → logprob: -6.062029838562012
    8. ' swap' → logprob: -6.187029838562012
    9. ' déplacements' → logprob: -6.562029838562012
    10. ' fois' → logprob: -6.687029838562012

Token 191: ' adj' (ID: 20251)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.218907117843628
    2. ',' → logprob: -1.468907117843628
    3. '.' → logprob: -1.718907117843628
    4. ' =' → logprob: -2.718907117843628
    5. ' s' → logprob: -3.218907117843628
    6. 'def' → logprob: -3.343907117843628
    7. '#' → logprob: -4.093907356262207
    8. ')' → logprob: -4.218907356262207
    9. '```' → logprob: -4.218907356262207
    10. ' ' → logprob: -4.343907356262207

Token 192: 'ac' (ID: 359)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.3762725293636322
    2. ']' → logprob: -1.3762725591659546
    3. '])' → logprob: -3.751272439956665
    4. 'ac' → logprob: -4.126272678375244
    5. ']=' → logprob: -4.751272678375244
    6. '=' → logprob: -5.876272678375244
    7. 'oints' → logprob: -6.001272678375244
    8. 'ents' → logprob: -7.251272678375244
    9. '[i' → logprob: -7.376272678375244
    10. '+' → logprob: -7.626272678375244

Token 193: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.04482249543070793
    2. 'ent' → logprob: -3.4198224544525146
    3. 'entes' → logprob: -4.544822692871094
    4. 'es' → logprob: -7.919822692871094
    5. 'és' → logprob: -9.919822692871094
    6. 'ente' → logprob: -11.169822692871094
    7. 'é' → logprob: -11.669822692871094
    8. 'e' → logprob: -11.919822692871094
    9. 'ént' → logprob: -11.919822692871094
    10. '#' → logprob: -12.419822692871094

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2300606966018677
    2. ' =' → logprob: -2.105060577392578
    3. ':' → logprob: -2.480060577392578
    4. '.' → logprob: -2.605060577392578
    5. 's' → logprob: -2.855060577392578
    6. '```' → logprob: -2.855060577392578
    7. '[' → logprob: -3.355060577392578
    8. ']' → logprob: -3.480060577392578
    9. ' s' → logprob: -3.605060577392578
    10. ')' → logprob: -3.605060577392578

Token 195: ' ce' (ID: 2357)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9568639397621155
    2. ' en' → logprob: -1.3318638801574707
    3. ' puis' → logprob: -1.8318638801574707
    4. '```' → logprob: -3.2068638801574707
    5. ' ce' → logprob: -3.3318638801574707
    6. ' et' → logprob: -3.8318638801574707
    7. ' #' → logprob: -3.8318638801574707
    8. 's' → logprob: -4.081863880157471
    9. ' s' → logprob: -4.706863880157471
    10. ' car' → logprob: -4.956863880157471

Token 196: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.08452939242124557
    2. '#' → logprob: -3.209529399871826
    3. 'qui' → logprob: -3.709529399871826
    4. 'ci' → logprob: -5.209529399871826
    5. 's' → logprob: -5.334529399871826
    6. 'pend' → logprob: -6.834529399871826
    7. ' #' → logprob: -6.834529399871826
    8. '```' → logprob: -7.209529399871826
    9. 'n' → logprob: -7.584529399871826
    10. ' code' → logprob: -8.209528923034668

Token 197: ' réduit' (ID: 120775)
  Prédit: ' réduit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réduit' → logprob: -0.7289015650749207
    2. ' permet' → logprob: -1.4789016246795654
    3. ' dé' → logprob: -3.1039016246795654
    4. ' dim' → logprob: -3.4789016246795654
    5. ' met' → logprob: -3.6039016246795654
    6. ' rédu' → logprob: -3.6039016246795654
    7. ' lib' → logprob: -3.8539016246795654
    8. ' correspond' → logprob: -3.8539016246795654
    9. ' décr' → logprob: -3.9789016246795654
    10. ' mod' → logprob: -4.728901386260986

Token 198: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.008594953455030918
    2. 'k' → logprob: -5.133594989776611
    3. ' ' → logprob: -6.633594989776611
    4. ' l' → logprob: -7.133594989776611
    5. ' ' → logprob: -8.508594512939453
    6. '_k' → logprob: -9.133594512939453
    7. ' le' → logprob: -9.508594512939453
    8. '	k' → logprob: -9.883594512939453
    9. ' la' → logprob: -10.258594512939453
    10. 'l' → logprob: -11.258594512939453

Token 199: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.31928032636642456
    2. ' =' → logprob: -2.0692803859710693
    3. '=' → logprob: -3.3192803859710693
    4. ' -=' → logprob: -3.8192803859710693
    5. ',' → logprob: -4.06928014755249
    6. ' d' → logprob: -4.31928014755249
    7. '   ' → logprob: -4.94428014755249
    8. ' +=' → logprob: -4.94428014755249
    9. '```' → logprob: -5.69428014755249
    10. ')' → logprob: -5.94428014755249

Token 200: ' (' (ID: 350)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5859691500663757
    2. 'min' → logprob: -0.9609691500663757
    3. '(min' → logprob: -2.9609692096710205
    4. ' (' → logprob: -4.710968971252441
    5. '(' → logprob: -9.960968971252441
    6. '[min' → logprob: -10.710968971252441
    7. ' ' → logprob: -10.835968971252441
    8. '```' → logprob: -11.210968971252441
    9. ' ' → logprob: -11.835968971252441
    10. '	min' → logprob: -12.210968971252441

Token 201: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09126849472522736
    2. ' min' → logprob: -2.466268539428711
    3. '(min' → logprob: -6.091268539428711
    4. ' (' → logprob: -9.966268539428711
    5. 'max' → logprob: -12.716268539428711
    6. '	min' → logprob: -12.966268539428711
    7. '```' → logprob: -12.966268539428711
    8. '   ' → logprob: -13.216268539428711
    9. '[min' → logprob: -13.341268539428711
    10. ' ' → logprob: -13.841268539428711

Token 202: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.128163257315464e-07
    2. 'pos' → logprob: -15.75
    3. '_' → logprob: -16.625
    4. 'Pos' → logprob: -17.375
    5. '_p' → logprob: -18.5
    6. '	pos' → logprob: -18.75
    7. '_position' → logprob: -19.125
    8. ' _' → logprob: -19.25
    9. '_positions' → logprob: -19.5
    10. '[pos' → logprob: -19.5

Token 203: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016060292720794678
    2. '-' → logprob: -4.1410603523254395
    3. ' ' → logprob: -11.516059875488281
    4. '-i' → logprob: -11.766059875488281
    5. ')' → logprob: -12.391059875488281
    6. ' ' → logprob: -13.016059875488281
    7. '#' → logprob: -14.891059875488281
    8. '   ' → logprob: -15.266059875488281
    9. ' minus' → logprob: -15.703559875488281
    10. 's' → logprob: -16.20355987548828

Token 204: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.575944185256958
    2. ' i' → logprob: -0.825944185256958
    3. '	i' → logprob: -12.950943946838379
    4. ' ' → logprob: -13.700943946838379
    5. ' ' → logprob: -14.325943946838379
    6. '_i' → logprob: -15.325943946838379
    7. '1' → logprob: -16.450944900512695
    8. '   ' → logprob: -16.575944900512695
    9. ' (' → logprob: -16.950944900512695
    10. '  ' → logprob: -17.325944900512695

Token 205: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00819585844874382
    2. ')
' → logprob: -5.133195877075195
    3. ').' → logprob: -6.383195877075195
    4. ' )' → logprob: -8.383195877075195
    5. ')

' → logprob: -8.883195877075195
    6. ')
' → logprob: -9.758195877075195
    7. ').
' → logprob: -10.758195877075195
    8. '#' → logprob: -10.883195877075195
    9. '),' → logprob: -11.008195877075195
    10. ')#' → logprob: -11.258195877075195

Token 206: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0303925275802612
    2. 'def' → logprob: -1.2803925275802612
    3. '   ' → logprob: -2.405392646789551
    4. ' for' → logprob: -2.905392646789551
    5. 'for' → logprob: -3.530392646789551
    6. 'min' → logprob: -3.905392646789551
    7. ']' → logprob: -3.905392646789551
    8. ' i' → logprob: -3.905392646789551
    9. 'i' → logprob: -4.405392646789551
    10. '  
' → logprob: -4.530392646789551

Token 207: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3718303442001343
    2. 'def' → logprob: -1.4968303442001343
    3. '   ' → logprob: -1.9968303442001343
    4. '```' → logprob: -2.621830463409424
    5. ' i' → logprob: -2.746830463409424
    6. ' def' → logprob: -2.871830463409424
    7. 'for' → logprob: -3.246830463409424
    8. ' ' → logprob: -3.621830463409424
    9. ' s' → logprob: -3.746830463409424
    10. ' ' → logprob: -3.996830463409424

Token 208: ' On' (ID: 2160)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9691664576530457
    2. 'for' → logprob: -1.7191665172576904
    3. ' i' → logprob: -2.0941665172576904
    4. '#' → logprob: -2.3441665172576904
    5. 'def' → logprob: -2.4691665172576904
    6. ' #' → logprob: -3.3441665172576904
    7. ' def' → logprob: -3.4691665172576904
    8. ' n' → logprob: -4.219166278839111
    9. 'i' → logprob: -4.344166278839111
    10. ' if' → logprob: -4.469166278839111

Token 209: ' continue' (ID: 4901)
  Prédit: ' dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dé' → logprob: -1.0108850002288818
    2. ' continue' → logprob: -1.6358850002288818
    3. ' échange' → logprob: -2.260885000228882
    4. ' perm' → logprob: -2.510885000228882
    5. 'continue' → logprob: -2.760885000228882
    6. 'dé' → logprob: -3.010885000228882
    7. ' ins' → logprob: -4.510885238647461
    8. ' effect' → logprob: -4.635885238647461
    9. '#' → logprob: -4.760885238647461
    10. 'effect' → logprob: -4.885885238647461

Token 210: ' ainsi' (ID: 16371)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.33316096663475037
    2. ' s' → logprob: -2.333160877227783
    3. ',' → logprob: -3.333160877227783
    4. ' for' → logprob: -3.583160877227783
    5. 's' → logprob: -3.708160877227783
    6. ' jusqu' → logprob: -3.833160877227783
    7. ':' → logprob: -4.833160877227783
    8. 'for' → logprob: -4.833160877227783
    9. '```' → logprob: -4.958160877227783
    10. 'def' → logprob: -5.083160877227783

Token 211: ' jusqu' (ID: 21961)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.0016885995864868
    2. ' jusqu' → logprob: -1.3766885995864868
    3. ':' → logprob: -1.8766885995864868
    4. 'à' → logprob: -3.3766884803771973
    5. 'def' → logprob: -3.5016884803771973
    6. 'for' → logprob: -3.7516884803771973
    7. '#' → logprob: -4.251688480377197
    8. ' for' → logprob: -4.251688480377197
    9. 's' → logprob: -4.376688480377197
    10. ',' → logprob: -4.501688480377197

Token 212: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.007673587184399366
    2. '’à' → logprob: -5.257673740386963
    3. 'à' → logprob: -6.257673740386963
    4. ''au' → logprob: -8.007673263549805
    5. ' à' → logprob: -8.882673263549805
    6. ''a' → logprob: -11.007673263549805
    7. 'a' → logprob: -11.882673263549805
    8. 'au' → logprob: -11.882673263549805
    9. '   ' → logprob: -12.257673263549805
    10. ''' → logprob: -12.257673263549805

Token 213: ' ép' (ID: 19960)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.858110785484314
    2. ' la' → logprob: -1.483110785484314
    3. ' ce' → logprob: -1.608110785484314
    4. ' i' → logprob: -2.7331109046936035
    5. 'la' → logprob: -2.9831109046936035
    6. 'k' → logprob: -4.4831109046936035
    7. 'ce' → logprob: -4.7331109046936035
    8. ' k' → logprob: -4.9831109046936035
    9. '```' → logprob: -6.6081109046936035
    10. ' l' → logprob: -6.8581109046936035

Token 214: 'uis' (ID: 4560)
  Prédit: 'uis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uis' → logprob: -0.020471116527915
    2. 'u' → logprob: -4.020471096038818
    3. 'ui' → logprob: -7.270471096038818
    4. 'uir' → logprob: -7.270471096038818
    5. '#' → logprob: -8.395471572875977
    6. 'uire' → logprob: -8.895471572875977
    7. '
' → logprob: -9.020471572875977
    8. '```' → logprob: -9.145471572875977
    9. '=' → logprob: -9.395471572875977
    10. 'i' → logprob: -10.145471572875977

Token 215: 'ement' (ID: 962)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.071277379989624
    2. 'ant' → logprob: -1.071277379989624
    3. 'ement' → logprob: -1.446277379989624
    4. 'e' → logprob: -3.196277379989624
    5. '#' → logprob: -4.196277618408203
    6. 'é' → logprob: -4.446277618408203
    7. 'ion' → logprob: -5.821277618408203
    8. 'ation' → logprob: -6.071277618408203
    9. 'a' → logprob: -6.196277618408203
    10. 'ent' → logprob: -7.071277618408203

Token 216: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20977847278118134
    2. ' ou' → logprob: -2.7097785472869873
    3. ' or' → logprob: -3.5847785472869873
    4. 'de' → logprob: -3.5847785472869873
    5. '_' → logprob: -3.9597785472869873
    6. ' ' → logprob: -4.959778308868408
    7. 'i' → logprob: -5.334778308868408
    8. 'for' → logprob: -5.334778308868408
    9. '   ' → logprob: -5.584778308868408
    10. 's' → logprob: -5.709778308868408

Token 217: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6327306628227234
    2. 'k' → logprob: -0.7577306628227234
    3. ' la' → logprob: -10.257730484008789
    4. ' ' → logprob: -10.507730484008789
    5. ' l' → logprob: -10.882730484008789
    6. 'l' → logprob: -11.382730484008789
    7. ' ' → logprob: -11.382730484008789
    8. 's' → logprob: -11.507730484008789
    9. 'la' → logprob: -12.757730484008789
    10. '```' → logprob: -12.882730484008789

Token 218: ' ou' (ID: 2031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8186234831809998
    2. ' =' → logprob: -2.0686235427856445
    3. ']' → logprob: -2.3186235427856445
    4. '[' → logprob: -2.6936235427856445
    5. ',' → logprob: -2.8186235427856445
    6. ' or' → logprob: -3.3186235427856445
    7. 'def' → logprob: -3.4436235427856445
    8. '[i' → logprob: -3.8186235427856445
    9. '=' → logprob: -3.9436235427856445
    10. '[
' → logprob: -4.6936235427856445

Token 219: ' jusqu' (ID: 21961)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08868314325809479
    2. ' à' → logprob: -3.5886831283569336
    3. ' ' → logprob: -4.338683128356934
    4. ' fin' → logprob: -4.338683128356934
    5. 'la' → logprob: -4.588683128356934
    6. 'à' → logprob: -5.463683128356934
    7. 'i' → logprob: -5.838683128356934
    8. ' i' → logprob: -5.838683128356934
    9. 'fin' → logprob: -5.963683128356934
    10. 'len' → logprob: -6.088683128356934

Token 220: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.000505730917211622
    2. ''au' → logprob: -8.250505447387695
    3. '’à' → logprob: -8.625505447387695
    4. 'à' → logprob: -10.875505447387695
    5. ''' → logprob: -11.000505447387695
    6. ''a' → logprob: -11.000505447387695
    7. ' à' → logprob: -11.750505447387695
    8. '#' → logprob: -13.125505447387695
    9. 'a' → logprob: -14.500505447387695
    10. 'au' → logprob: -14.500505447387695

Token 221: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7851171493530273
    2. 'la' → logprob: -0.9101171493530273
    3. 'len' → logprob: -2.2851171493530273
    4. 'i' → logprob: -3.6601171493530273
    5. 'fin' → logprob: -5.035117149353027
    6. ' len' → logprob: -6.035117149353027
    7. ' i' → logprob: -6.785117149353027
    8. ' fin' → logprob: -7.035117149353027
    9. ' ce' → logprob: -7.035117149353027
    10. 'l' → logprob: -7.535117149353027

Token 222: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0397811196744442
    2. 'len' → logprob: -3.539781093597412
    3. ' fin' → logprob: -5.164781093597412
    4. 'long' → logprob: -5.664781093597412
    5. 'n' → logprob: -7.539781093597412
    6. ' longueur' → logprob: -8.78978157043457
    7. '```' → logprob: -10.91478157043457
    8. 'chaine' → logprob: -11.03978157043457
    9. '#' → logprob: -11.16478157043457
    10. ' len' → logprob: -11.41478157043457

Token 223: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.021483302116394
    2. '[i' → logprob: -1.646483302116394
    3. ']' → logprob: -2.2714834213256836
    4. '_' → logprob: -2.3964834213256836
    5. ':' → logprob: -3.3964834213256836
    6. '[:]' → logprob: -3.3964834213256836
    7. '```' → logprob: -3.6464834213256836
    8. 'def' → logprob: -3.6464834213256836
    9. '[:' → logprob: -3.7714834213256836
    10. 's' → logprob: -4.146483421325684

Token 224: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8924748301506042
    2. 'la' → logprob: -0.8924748301506042
    3. 's' → logprob: -1.892474889755249
    4. ' s' → logprob: -3.517474889755249
    5. 'l' → logprob: -8.392475128173828
    6. 'len' → logprob: -10.017475128173828
    7. ' ' → logprob: -10.767475128173828
    8. 'chaine' → logprob: -10.892475128173828
    9. ' l' → logprob: -11.767475128173828
    10. ' ' → logprob: -12.267475128173828

Token 225: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.16268563270568848
    2. ' chaîne' → logprob: -2.2876856327056885
    3. 's' → logprob: -3.2876856327056885
    4. 'string' → logprob: -5.162685394287109
    5. 'cha' → logprob: -5.412685394287109
    6. ' chaine' → logprob: -7.412685394287109
    7. ' s' → logprob: -8.16268539428711
    8. 'chain' → logprob: -9.66268539428711
    9. 'ligne' → logprob: -10.16268539428711
    10. '#' → logprob: -10.41268539428711

Token 226: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44467008113861084
    2. 'n' → logprob: -2.1946702003479004
    3. '```' → logprob: -2.3196702003479004
    4. ' def' → logprob: -2.9446702003479004
    5. '[' → logprob: -3.8196702003479004
    6. '   ' → logprob: -4.3196702003479
    7. 'i' → logprob: -4.5696702003479
    8. 's' → logprob: -5.1946702003479
    9. ']' → logprob: -5.3196702003479
    10. 'for' → logprob: -5.4446702003479

Token 227: '#
' (ID: 11240)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.731071949005127
    2. 'def' → logprob: -1.231071949005127
    3. 'n' → logprob: -1.981071949005127
    4. 'i' → logprob: -3.606071949005127
    5. 'for' → logprob: -4.356071949005127
    6. ' for' → logprob: -4.606071949005127
    7. 's' → logprob: -4.856071949005127
    8. ' ```' → logprob: -5.231071949005127
    9. '   ' → logprob: -5.481071949005127
    10. ' 
' → logprob: -5.606071949005127

Token 228: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17418916523456573
    2. 'n' → logprob: -1.9241892099380493
    3. 'i' → logprob: -4.54918909072876
    4. 'for' → logprob: -6.17418909072876
    5. '```' → logprob: -7.17418909072876
    6. ' def' → logprob: -8.424189567565918
    7. 's' → logprob: -9.549189567565918
    8. ' n' → logprob: -9.674189567565918
    9. ' for' → logprob: -10.049189567565918
    10. 'import' → logprob: -10.424189567565918

Token 229: ' Complex' (ID: 35812)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4996853768825531
    2. 'n' → logprob: -0.9996854066848755
    3. 'for' → logprob: -4.374685287475586
    4. 'i' → logprob: -4.499685287475586
    5. '```' → logprob: -6.874685287475586
    6. ' for' → logprob: -8.124685287475586
    7. ' def' → logprob: -9.374685287475586
    8. 's' → logprob: -9.624685287475586
    9. ' n' → logprob: -10.499685287475586
    10. 'import' → logprob: -10.749685287475586

Token 230: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.001635428168810904
    2. 'ity' → logprob: -7.251635551452637
    3. 'def' → logprob: -7.751635551452637
    4. 'ite' → logprob: -8.751635551452637
    5. 'it' → logprob: -9.376635551452637
    6. '#' → logprob: -9.501635551452637
    7. 'é' → logprob: -10.126635551452637
    8. 'té' → logprob: -10.126635551452637
    9. 'e' → logprob: -10.251635551452637
    10. 'import' → logprob: -10.751635551452637

Token 231: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12727181613445282
    2. '#' → logprob: -2.877271890640259
    3. 'O' → logprob: -3.127271890640259
    4. ' :' → logprob: -4.75227165222168
    5. ':
' → logprob: -5.50227165222168
    6. ' =' → logprob: -6.25227165222168
    7. '=' → logprob: -6.50227165222168
    8. ' O' → logprob: -6.50227165222168
    9. ' tempore' → logprob: -8.00227165222168
    10. ' #' → logprob: -8.37727165222168

Token 232: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.007007336709648371
    2. 'O' → logprob: -5.132007122039795
    3. 'n' → logprob: -7.757007122039795
    4. ' #' → logprob: -8.132007598876953
    5. ' O' → logprob: -8.382007598876953
    6. '```' → logprob: -10.132007598876953
    7. ' n' → logprob: -10.257007598876953
    8. '\' → logprob: -11.007007598876953
    9. '#
' → logprob: -11.257007598876953
    10. ' en' → logprob: -12.507007598876953

Token 233: ' -' (ID: 533)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.010542849078774452
    2. '#' → logprob: -4.760542869567871
    3. ' O' → logprob: -6.260542869567871
    4. '```' → logprob: -11.510542869567871
    5. ' #' → logprob: -13.135542869567871
    6. '\' → logprob: -13.260542869567871
    7. 'n' → logprob: -13.885542869567871
    8. '\(' → logprob: -14.510542869567871
    9. '	O' → logprob: -15.760542869567871
    10. '``' → logprob: -15.885542869567871

Token 234: ' Il' (ID: 5329)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.004654641728848219
    2. ' O' → logprob: -5.379654407501221
    3. 'n' → logprob: -10.754654884338379
    4. '#' → logprob: -11.879654884338379
    5. '\' → logprob: -13.754654884338379
    6. 'On' → logprob: -14.254654884338379
    7. '\(' → logprob: -14.254654884338379
    8. ' ' → logprob: -14.504654884338379
    9. ' \(' → logprob: -14.504654884338379
    10. '```' → logprob: -14.504654884338379

Token 235: ' est' (ID: 893)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7530220746994019
    2. 'n' → logprob: -1.8780220746994019
    3. 's' → logprob: -1.8780220746994019
    4. '#' → logprob: -2.7530221939086914
    5. ' faut' → logprob: -2.7530221939086914
    6. ' est' → logprob: -3.2530221939086914
    7. ' s' → logprob: -4.128022193908691
    8. 'est' → logprob: -4.128022193908691
    9. 'f' → logprob: -5.003022193908691
    10. ''est' → logprob: -5.503022193908691

Token 236: ' crucial' (ID: 19008)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.6402525305747986
    2. ' important' → logprob: -1.5152525901794434
    3. ' O' → logprob: -1.8902525901794434
    4. ' possible' → logprob: -3.3902525901794434
    5. 'important' → logprob: -4.515252590179443
    6. ' préférable' → logprob: -4.890252590179443
    7. ' à' → logprob: -5.390252590179443
    8. 'import' → logprob: -5.765252590179443
    9. ' difficile' → logprob: -5.765252590179443
    10. 'o' → logprob: -5.890252590179443

Token 237: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1262205839157104
    2. ' de' → logprob: -1.1262205839157104
    3. 'de' → logprob: -1.7512205839157104
    4. '#' → logprob: -2.751220703125
    5. 'd' → logprob: -3.001220703125
    6. 'import' → logprob: -3.126220703125
    7. 'O' → logprob: -5.626220703125
    8. 'e' → logprob: -6.001220703125
    9. ' ' → logprob: -6.126220703125
    10. ' à' → logprob: -6.376220703125

Token 238: ''' (ID: 6)
  Prédit: ''utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utiliser' → logprob: -1.0521527528762817
    2. 'e' → logprob: -2.177152633666992
    3. ' éviter' → logprob: -2.177152633666992
    4. ''év' → logprob: -2.427152633666992
    5. ''' → logprob: -2.552152633666992
    6. '’éviter' → logprob: -3.302152633666992
    7. ''import' → logprob: -3.427152633666992
    8. ' e' → logprob: -4.052152633666992
    9. ''effect' → logprob: -4.177152633666992
    10. ' utiliser' → logprob: -4.302152633666992

Token 239: 'impl' (ID: 10766)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.5947892069816589
    2. 'optim' → logprob: -1.2197892665863037
    3. 'impl' → logprob: -3.0947892665863037
    4. 'év' → logprob: -3.4697892665863037
    5. 'not' → logprob: -3.7197892665863037
    6. ' noter' → logprob: -3.8447892665863037
    7. 'opter' → logprob: -5.219789028167725
    8. ' utiliser' → logprob: -5.844789028167725
    9. 'prendre' → logprob: -5.844789028167725
    10. ''utiliser' → logprob: -5.969789028167725

Token 240: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.00590710761025548
    2. 'ement' → logprob: -5.50590705871582
    3. 'é' → logprob: -6.50590705871582
    4. 'iqué' → logprob: -9.50590705871582
    5. 'ment' → logprob: -9.88090705871582
    6. 'ém' → logprob: -9.88090705871582
    7. '#' → logprob: -10.13090705871582
    8. 'éments' → logprob: -10.75590705871582
    9. '```' → logprob: -11.25590705871582
    10. 'em' → logprob: -11.63090705871582

Token 241: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.07582460343837738
    2. 'ation' → logprob: -2.825824499130249
    3. 'é' → logprob: -4.950824737548828
    4. 'ent' → logprob: -5.575824737548828
    5. 'ée' → logprob: -6.325824737548828
    6. 'e' → logprob: -7.825824737548828
    7. '#' → logprob: -8.200824737548828
    8. 'entation' → logprob: -8.200824737548828
    9. 'enter' → logprob: -9.700824737548828
    10. 'ment' → logprob: -11.075824737548828

Token 242: ' cette' (ID: 7696)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.29267156124115
    2. ' effic' → logprob: -1.66767156124115
    3. 'efficient' → logprob: -1.91767156124115
    4. 'une' → logprob: -2.1676716804504395
    5. ' un' → logprob: -2.7926716804504395
    6. ' efficacement' → logprob: -2.7926716804504395
    7. ' efficient' → logprob: -3.1676716804504395
    8. ' efficace' → logprob: -3.2926716804504395
    9. ' la' → logprob: -4.6676716804504395
    10. 'import' → logprob: -4.6676716804504395

Token 243: ' recherche' (ID: 24975)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solution' → logprob: -1.250732183456421
    2. '#' → logprob: -1.875732183456421
    3. 'solution' → logprob: -2.500732183456421
    4. 'part' → logprob: -2.625732183456421
    5. ' en' → logprob: -2.875732183456421
    6. 'en' → logprob: -3.125732183456421
    7. 'appro' → logprob: -3.250732183456421
    8. '```' → logprob: -3.500732183456421
    9. ' part' → logprob: -3.750732183456421
    10. 'n' → logprob: -3.750732183456421

Token 244: ' efficacement' (ID: 155449)
  Prédit: ' efficace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' efficace' → logprob: -0.7072877287864685
    2. ' optimale' → logprob: -1.8322877883911133
    3. ' effic' → logprob: -2.2072877883911133
    4. ' du' → logprob: -2.7072877883911133
    5. 'efficient' → logprob: -2.8322877883911133
    6. ' de' → logprob: -3.5822877883911133
    7. ' optim' → logprob: -4.332287788391113
    8. ' efficient' → logprob: -4.332287788391113
    9. ' en' → logprob: -4.582287788391113
    10. 'import' → logprob: -4.957287788391113

Token 245: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3727763891220093
    2. '[' → logprob: -1.4977763891220093
    3. 'def' → logprob: -1.4977763891220093
    4. 's' → logprob: -2.747776508331299
    5. ']' → logprob: -2.997776508331299
    6. '[i' → logprob: -3.122776508331299
    7. '=' → logprob: -3.997776508331299
    8. ' s' → logprob: -3.997776508331299
    9. '```' → logprob: -4.622776508331299
    10. ' for' → logprob: -4.997776508331299

Token 246: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5084848999977112
    2. ' for' → logprob: -1.8834848403930664
    3. 'for' → logprob: -2.2584848403930664
    4. '#' → logprob: -3.1334848403930664
    5. 'n' → logprob: -3.3834848403930664
    6. '```' → logprob: -4.258484840393066
    7. ' def' → logprob: -4.383484840393066
    8. 's' → logprob: -4.758484840393066
    9. ' s' → logprob: -5.258484840393066
    10. ' n' → logprob: -5.258484840393066

Token 247: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06092939153313637
    2. '#' → logprob: -3.435929298400879
    3. ' def' → logprob: -5.560929298400879
    4. 's' → logprob: -5.560929298400879
    5. 'for' → logprob: -5.810929298400879
    6. '[' → logprob: -5.935929298400879
    7. '```' → logprob: -5.935929298400879
    8. ' s' → logprob: -6.310929298400879
    9. ' for' → logprob: -6.310929298400879
    10. 'token' → logprob: -6.560929298400879

Token 248: ' Pour' (ID: 13931)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5868164896965027
    2. '#' → logprob: -1.4618165493011475
    3. 'def' → logprob: -1.9618165493011475
    4. 'import' → logprob: -3.3368165493011475
    5. 'On' → logprob: -3.9618165493011475
    6. 'Voici' → logprob: -5.586816310882568
    7. '```' → logprob: -5.961816310882568
    8. 'n' → logprob: -6.336816310882568
    9. ' from' → logprob: -6.336816310882568
    10. 'Une' → logprob: -6.461816310882568

Token 249: ' cela' (ID: 17542)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.438831090927124
    2. ' i' → logprob: -1.688831090927124
    3. ' trouver' → logprob: -2.938831090927124
    4. ' optimiser' → logprob: -3.188831090927124
    5. ' éviter' → logprob: -3.813831090927124
    6. 'i' → logprob: -4.188831329345703
    7. ' _' → logprob: -5.438831329345703
    8. ' l' → logprob: -5.438831329345703
    9. ' ' → logprob: -5.688831329345703
    10. ' la' → logprob: -6.188831329345703

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15861700475215912
    2. ' on' → logprob: -3.1586170196533203
    3. '#' → logprob: -3.4086170196533203
    4. 'import' → logprob: -4.40861701965332
    5. 'def' → logprob: -4.53361701965332
    6. ' ,' → logprob: -4.65861701965332
    7. ' s' → logprob: -5.28361701965332
    8. 'n' → logprob: -5.40861701965332
    9. 's' → logprob: -5.90861701965332
    10. 'on' → logprob: -6.03361701965332

Token 251: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.04046160355210304
    2. 'on' → logprob: -4.540461540222168
    3. 'import' → logprob: -4.790461540222168
    4. '#' → logprob: -4.915461540222168
    5. 'from' → logprob: -5.040461540222168
    6. ' from' → logprob: -5.915461540222168
    7. ' il' → logprob: -6.290461540222168
    8. ' #' → logprob: -7.665461540222168
    9. ' s' → logprob: -7.790461540222168
    10. ' import' → logprob: -7.790461540222168

Token 252: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.073947973549366
    2. '#' → logprob: -3.0739479064941406
    3. 'pe' → logprob: -5.198947906494141
    4. ' peux' → logprob: -5.698947906494141
    5. ' pourra' → logprob: -5.698947906494141
    6. ' pourrait' → logprob: -5.823947906494141
    7. 'import' → logprob: -5.948947906494141
    8. ' utilise' → logprob: -6.073947906494141
    9. 'util' → logprob: -6.573947906494141
    10. ' utilis' → logprob: -7.073947906494141

Token 253: ' utiliser' (ID: 43227)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.05705766752362251
    2. ' utiliser' → logprob: -3.0570576190948486
    3. 'impl' → logprob: -5.307057857513428
    4. 'pré' → logprob: -7.057057857513428
    5. 'maint' → logprob: -7.432057857513428
    6. ''utiliser' → logprob: -8.05705738067627
    7. 'tr' → logprob: -8.18205738067627
    8. '#' → logprob: -8.30705738067627
    9. 'sim' → logprob: -8.55705738067627
    10. '```' → logprob: -8.93205738067627

Token 254: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.0681216716766357
    2. ' un' → logprob: -1.1931216716766357
    3. 'une' → logprob: -1.4431216716766357
    4. 'un' → logprob: -2.1931216716766357
    5. 'deque' → logprob: -6.943121910095215
    6. ' des' → logprob: -7.193121910095215
    7. 'import' → logprob: -7.443121910095215
    8. 'heap' → logprob: -7.568121910095215
    9. 'collections' → logprob: -7.693121910095215
    10. 'des' → logprob: -7.818121910095215

Token 255: ' structure' (ID: 8866)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.8291864395141602
    2. 'heap' → logprob: -1.2041864395141602
    3. 'fen' → logprob: -2.07918643951416
    4. 'liste' → logprob: -3.20418643951416
    5. 'segment' → logprob: -3.95418643951416
    6. 'min' → logprob: -4.07918643951416
    7. 'from' → logprob: -4.07918643951416
    8. 'import' → logprob: -4.45418643951416
    9. 'priority' → logprob: -4.95418643951416
    10. 'structure' → logprob: -5.32918643951416

Token 256: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.36502644419670105
    2. ' de' → logprob: -1.8650264739990234
    3. 'deque' → logprob: -1.9900264739990234
    4. 'heap' → logprob: -4.990026473999023
    5. 'd' → logprob: -5.615026473999023
    6. '#' → logprob: -7.490026473999023
    7. 'import' → logprob: -7.615026473999023
    8. 'data' → logprob: -7.615026473999023
    9. '```' → logprob: -7.740026473999023
    10. 'mon' → logprob: -8.240026473999023

Token 257: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6409235596656799
    2. ' données' → logprob: -0.7659235596656799
    3. 'don' → logprob: -5.515923500061035
    4. 'tas' → logprob: -6.515923500061035
    5. 'data' → logprob: -7.015923500061035
    6. ' donnée' → logprob: -7.515923500061035
    7. 'heap' → logprob: -7.890923500061035
    8. ' data' → logprob: -8.140923500061035
    9. 'min' → logprob: -8.390923500061035
    10. 'segment' → logprob: -8.640923500061035

Token 258: ' telle' (ID: 70904)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3805705308914185
    2. 'de' → logprob: -1.3805705308914185
    3. 'deque' → logprob: -1.5055705308914185
    4. ' comme' → logprob: -2.255570411682129
    5. 'comme' → logprob: -2.880570411682129
    6. 'heap' → logprob: -3.630570411682129
    7. 'type' → logprob: -4.380570411682129
    8. '```' → logprob: -4.755570411682129
    9. ' spécialisée' → logprob: -5.005570411682129
    10. ' appropri' → logprob: -5.005570411682129

Token 259: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.7556580901145935
    2. 'qu' → logprob: -1.1306581497192383
    3. ' que' → logprob: -2.1306581497192383
    4. ' qu' → logprob: -2.8806581497192383
    5. '#' → logprob: -4.255658149719238
    6. 'import' → logprob: -4.630658149719238
    7. '```' → logprob: -4.880658149719238
    8. 'comme' → logprob: -8.505658149719238
    9. 'une' → logprob: -8.880658149719238
    10. 'deque' → logprob: -8.880658149719238

Token 260: ' segment' (ID: 14806)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.49343231320381165
    2. ' une' → logprob: -1.4934322834014893
    3. 'un' → logprob: -2.4934322834014893
    4. 'une' → logprob: -2.8684322834014893
    5. 'heap' → logprob: -5.243432521820068
    6. 'deque' → logprob: -5.618432521820068
    7. 'a' → logprob: -5.993432521820068
    8. ' ' → logprob: -6.243432521820068
    9. '```' → logprob: -6.368432521820068
    10. ' a' → logprob: -6.618432521820068

Token 261: ' tree' (ID: 8165)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.079935722053051
    2. 'tree' → logprob: -3.2049357891082764
    3. '_' → logprob: -4.204935550689697
    4. ' tree' → logprob: -4.454935550689697
    5. '_t' → logprob: -4.829935550689697
    6. ' _' → logprob: -6.829935550689697
    7. 't' → logprob: -8.079936027526855
    8. 'tre' → logprob: -9.704936027526855
    9. 'ree' → logprob: -10.079936027526855
    10. ' arbre' → logprob: -10.204936027526855

Token 262: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7131918668746948
    2. '[' → logprob: -1.5881918668746948
    3. ' =' → logprob: -1.8381918668746948
    4. ' def' → logprob: -3.0881919860839844
    5. ']' → logprob: -4.213191986083984
    6. ':' → logprob: -4.463191986083984
    7. '[
' → logprob: -4.463191986083984
    8. '```' → logprob: -4.463191986083984
    9. '_' → logprob: -4.838191986083984
    10. '[i' → logprob: -4.963191986083984

Token 263: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.32614317536354065
    2. '#' → logprob: -1.9511431455612183
    3. 'ou' → logprob: -2.201143264770508
    4. ' or' → logprob: -4.576143264770508
    5. ' mais' → logprob: -5.576143264770508
    6. 'fen' → logprob: -5.576143264770508
    7. ' fen' → logprob: -6.201143264770508
    8. ' #' → logprob: -6.951143264770508
    9. 'mais' → logprob: -7.076143264770508
    10. 'heap' → logprob: -7.326143264770508

Token 264: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.47601109743118286
    2. 'une' → logprob: -1.851011037826538
    3. ' un' → logprob: -2.226011037826538
    4. 'heap' → logprob: -3.351011037826538
    5. 'un' → logprob: -3.476011037826538
    6. '#' → logprob: -4.226011276245117
    7. 'import' → logprob: -4.976011276245117
    8. ' heap' → logprob: -5.101011276245117
    9. 'deque' → logprob: -5.101011276245117
    10. ' simplement' → logprob: -5.351011276245117

Token 265: ' approche' (ID: 102373)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.8666396141052246
    2. 'deque' → logprob: -1.4916396141052246
    3. ' heap' → logprob: -2.4916396141052246
    4. 'fen' → logprob: -2.6166396141052246
    5. 'liste' → logprob: -3.1166396141052246
    6. ' liste' → logprob: -3.3666396141052246
    7. 'priority' → logprob: -3.6166396141052246
    8. 'import' → logprob: -3.7416396141052246
    9. ' priority' → logprob: -4.366639614105225
    10. 'balanced' → logprob: -5.116639614105225

Token 266: ' gl' (ID: 2000)
  Prédit: 'gl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gl' → logprob: -0.19729267060756683
    2. ' gl' → logprob: -2.6972925662994385
    3. '```' → logprob: -2.8222925662994385
    4. 'na' → logprob: -3.8222925662994385
    5. 'simple' → logprob: -4.322292804718018
    6. ' naï' → logprob: -5.447292804718018
    7. 'plus' → logprob: -6.447292804718018
    8. 'import' → logprob: -6.697292804718018
    9. 'par' → logprob: -6.697292804718018
    10. 'de' → logprob: -6.947292804718018

Token 267: 'out' (ID: 468)
  Prédit: 'obal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'obal' → logprob: -0.0070480601862072945
    2. 'ob' → logprob: -5.2570481300354
    3. 'iding' → logprob: -8.007047653198242
    4. 'isser' → logprob: -8.007047653198242
    5. 'oba' → logprob: -8.132047653198242
    6. 'issante' → logprob: -8.257047653198242
    7. 'ide' → logprob: -8.632047653198242
    8. 'iss' → logprob: -9.007047653198242
    9. 'obals' → logprob: -9.507047653198242
    10. 'oble' → logprob: -10.132047653198242

Token 268: 'onne' (ID: 25335)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.10288313031196594
    2. 'e' → logprob: -2.6028831005096436
    3. 'gle' → logprob: -4.727883338928223
    4. 'ée' → logprob: -5.477883338928223
    5. 'le' → logprob: -5.727883338928223
    6. 'ue' → logprob: -6.352883338928223
    7. 'de' → logprob: -7.102883338928223
    8. 'ine' → logprob: -7.352883338928223
    9. 'ique' → logprob: -7.477883338928223
    10. 'al' → logprob: -7.727883338928223

Token 269: ' en' (ID: 469)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1240109205245972
    2. '[i' → logprob: -2.1240110397338867
    3. '[' → logprob: -2.2490110397338867
    4. ' s' → logprob: -2.2490110397338867
    5. 's' → logprob: -2.3740110397338867
    6. ',' → logprob: -3.6240110397338867
    7. ' =' → logprob: -3.6240110397338867
    8. 'def' → logprob: -3.8740110397338867
    9. ' for' → logprob: -3.9990110397338867
    10. ':' → logprob: -4.124011039733887

Token 270: ' utilisant' (ID: 92474)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.6561851501464844
    2. 'util' → logprob: -2.4061851501464844
    3. 'for' → logprob: -2.5311851501464844
    4. 'une' → logprob: -2.9061851501464844
    5. '```' → logprob: -2.9061851501464844
    6. ' parcour' → logprob: -3.5311851501464844
    7. 'simple' → logprob: -4.156185150146484
    8. 'place' → logprob: -4.156185150146484
    9. ' utilisant' → logprob: -4.156185150146484
    10. 'gl' → logprob: -4.656185150146484

Token 271: ' des' (ID: 731)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7790328860282898
    2. 'une' → logprob: -0.9040328860282898
    3. ' un' → logprob: -2.4040329456329346
    4. 'un' → logprob: -3.4040329456329346
    5. 'deque' → logprob: -6.2790327072143555
    6. 'a' → logprob: -6.6540327072143555
    7. ' des' → logprob: -6.6540327072143555
    8. '```' → logprob: -6.7790327072143555
    9. 'heap' → logprob: -6.9040327072143555
    10. 'collections' → logprob: -7.0290327072143555

Token 272: ' indices' (ID: 30378)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.7525989413261414
    2. 'list' → logprob: -2.377599000930786
    3. 'heap' → logprob: -2.502599000930786
    4. 'deque' → logprob: -2.502599000930786
    5. ' listes' → logprob: -2.752599000930786
    6. 'import' → logprob: -3.627599000930786
    7. ' heap' → logprob: -3.877599000930786
    8. ' collections' → logprob: -4.002598762512207
    9. ' structures' → logprob: -4.502598762512207
    10. '```' → logprob: -4.502598762512207

Token 273: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5532416105270386
    2. 's' → logprob: -2.678241729736328
    3. ' =' → logprob: -2.678241729736328
    4. '[i' → logprob: -3.178241729736328
    5. '[' → logprob: -3.428241729736328
    6. 'import' → logprob: -3.803241729736328
    7. ')' → logprob: -3.803241729736328
    8. ' s' → logprob: -4.053241729736328
    9. '```' → logprob: -4.053241729736328
    10. ' ]' → logprob: -4.553241729736328

Token 274: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.648585557937622
    2. 'def' → logprob: -1.898585557937622
    3. ' for' → logprob: -2.148585557937622
    4. '[i' → logprob: -2.273585557937622
    5. '```' → logprob: -2.523585557937622
    6. '   ' → logprob: -2.648585557937622
    7. ']' → logprob: -2.898585557937622
    8. '[' → logprob: -3.148585557937622
    9. 'i' → logprob: -3.648585557937622
    10. ':' → logprob: -4.148585319519043

Token 275: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7094448804855347
    2. '```' → logprob: -2.084444999694824
    3. '   ' → logprob: -2.459444999694824
    4. 'for' → logprob: -2.834444999694824
    5. 'i' → logprob: -2.834444999694824
    6. '[i' → logprob: -3.584444999694824
    7. '
' → logprob: -3.709444999694824
    8. ' for' → logprob: -3.709444999694824
    9. '[' → logprob: -3.709444999694824
    10. 'n' → logprob: -3.959444999694824

Token 276: ' Ici' (ID: 145754)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17238643765449524
    2. 'for' → logprob: -3.172386407852173
    3. '```' → logprob: -3.547386407852173
    4. 'n' → logprob: -3.922386407852173
    5. ' for' → logprob: -3.922386407852173
    6. ' def' → logprob: -4.297386646270752
    7. 'i' → logprob: -4.547386646270752
    8. '#' → logprob: -4.922386646270752
    9. ' i' → logprob: -5.672386646270752
    10. 's' → logprob: -6.047386646270752

Token 277: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9239664673805237
    2. ' s' → logprob: -1.923966407775879
    3. ':' → logprob: -2.548966407775879
    4. ' on' → logprob: -2.673966407775879
    5. '```' → logprob: -2.673966407775879
    6. 'def' → logprob: -2.798966407775879
    7. ' =' → logprob: -2.798966407775879
    8. 's' → logprob: -3.048966407775879
    9. '#' → logprob: -3.048966407775879
    10. ' :' → logprob: -5.798966407775879

Token 278: ' applique' (ID: 180579)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5340193510055542
    2. ' n' → logprob: -2.4090194702148438
    3. '```' → logprob: -2.6590194702148438
    4. ' def' → logprob: -2.7840194702148438
    5. 'n' → logprob: -2.9090194702148438
    6. ' s' → logprob: -3.1590194702148438
    7. 's' → logprob: -3.9090194702148438
    8. ' va' → logprob: -4.034019470214844
    9. ' utilise' → logprob: -4.909019470214844
    10. ' continue' → logprob: -5.034019470214844

Token 279: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2215006798505783
    2. 'une' → logprob: -1.7215006351470947
    3. ' simplement' → logprob: -4.096500873565674
    4. ' la' → logprob: -5.971500873565674
    5. ' un' → logprob: -8.596500396728516
    6. ' l' → logprob: -9.596500396728516
    7. ' directement' → logprob: -9.721500396728516
    8. '```' → logprob: -9.971500396728516
    9. 'la' → logprob: -10.096500396728516
    10. ' simply' → logprob: -10.221500396728516

Token 280: ' méthode' (ID: 71490)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simple' → logprob: -1.6930302381515503
    2. 'bou' → logprob: -1.6930302381515503
    3. 'for' → logprob: -1.8180302381515503
    4. 'appro' → logprob: -1.8180302381515503
    5. ' approche' → logprob: -2.06803035736084
    6. 'gl' → logprob: -3.56803035736084
    7. ' boucle' → logprob: -3.56803035736084
    8. ' simple' → logprob: -4.19303035736084
    9. 'solution' → logprob: -4.31803035736084
    10. 'mé' → logprob: -4.69303035736084

Token 281: ' basée' (ID: 153941)
  Prédit: ' gl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gl' → logprob: -0.9781773686408997
    2. 'gl' → logprob: -1.3531773090362549
    3. ' simple' → logprob: -1.7281773090362549
    4. 'simple' → logprob: -2.103177309036255
    5. ' naï' → logprob: -3.603177309036255
    6. 'na' → logprob: -4.353177547454834
    7. ' naive' → logprob: -4.853177547454834
    8. '```' → logprob: -4.978177547454834
    9. '_gl' → logprob: -5.853177547454834
    10. '   ' → logprob: -6.478177547454834

Token 282: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.026716262102127075
    2. 'sur' → logprob: -3.6517162322998047
    3. '_sur' → logprob: -8.151716232299805
    4. 'import' → logprob: -10.026716232299805
    5. '#' → logprob: -10.276716232299805
    6. ' ' → logprob: -11.776716232299805
    7. 's' → logprob: -12.026716232299805
    8. ' ' → logprob: -12.026716232299805
    9. ' on' → logprob: -12.151716232299805
    10. '_' → logprob: -12.651716232299805

Token 283: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.2599738538265228
    2. ' une' → logprob: -2.5099737644195557
    3. 'la' → logprob: -3.2599737644195557
    4. 'un' → logprob: -3.5099737644195557
    5. 'l' → logprob: -3.8849737644195557
    6. 'liste' → logprob: -4.009974002838135
    7. ' un' → logprob: -4.509974002838135
    8. ' la' → logprob: -5.009974002838135
    9. ' liste' → logprob: -5.134974002838135
    10. 'list' → logprob: -5.509974002838135

Token 284: ' heap' (ID: 37237)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6243377923965454
    2. 'liste' → logprob: -2.124337673187256
    3. 'while' → logprob: -2.874337673187256
    4. 'simple' → logprob: -2.874337673187256
    5. 'list' → logprob: -3.124337673187256
    6. 'p' → logprob: -3.874337673187256
    7. ' tableau' → logprob: -3.874337673187256
    8. ' for' → logprob: -4.124337673187256
    9. 'table' → logprob: -4.374337673187256
    10. 'deque' → logprob: -4.624337673187256

Token 285: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2890069782733917
    2. '[' → logprob: -2.6640069484710693
    3. '```' → logprob: -3.2890069484710693
    4. ':' → logprob: -3.4140069484710693
    5. '
' → logprob: -4.039007186889648
    6. '  
' → logprob: -4.414007186889648
    7. '[
' → logprob: -4.664007186889648
    8. 'def' → logprob: -4.914007186889648
    9. ':
' → logprob: -5.164007186889648
    10. ' 
' → logprob: -5.414007186889648

Token 286: 'tas' (ID: 34419)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19540241360664368
    2. 'q' → logprob: -1.9454023838043213
    3. ' )' → logprob: -4.0704026222229
    4. 'import' → logprob: -5.1954026222229
    5. ').' → logprob: -5.8204026222229
    6. 'heap' → logprob: -6.1954026222229
    7. '[])' → logprob: -6.3204026222229
    8. '[' → logprob: -6.4454026222229
    9. '[]' → logprob: -7.0704026222229
    10. 'que' → logprob: -7.6954026222229

Token 287: ')' (ID: 8)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3778909146785736
    2. ')' → logprob: -1.252890944480896
    3. '[' → logprob: -3.7528908252716064
    4. ']' → logprob: -6.1278910636901855
    5. 'import' → logprob: -7.5028910636901855
    6. '[
' → logprob: -8.127890586853027
    7. '[]' → logprob: -8.252890586853027
    8. 'que' → logprob: -8.502890586853027
    9. ',' → logprob: -8.627890586853027
    10. ' =' → logprob: -8.627890586853027

Token 288: ' ou' (ID: 2031)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8256244659423828
    2. 'def' → logprob: -0.8256244659423828
    3. ':' → logprob: -3.325624465942383
    4. '```' → logprob: -3.450624465942383
    5. 'from' → logprob: -4.200624465942383
    6. '[' → logprob: -4.450624465942383
    7. 'i' → logprob: -5.450624465942383
    8. ':
' → logprob: -5.950624465942383
    9. ']' → logprob: -6.075624465942383
    10. 'n' → logprob: -6.325624465942383

Token 289: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4216219484806061
    2. 'une' → logprob: -2.1716220378875732
    3. ' un' → logprob: -2.2966220378875732
    4. 'deque' → logprob: -2.4216220378875732
    5. ' simplement' → logprob: -4.546621799468994
    6. 'un' → logprob: -4.671621799468994
    7. ' deque' → logprob: -5.546621799468994
    8. 'collections' → logprob: -6.546621799468994
    9. ' simple' → logprob: -6.671621799468994
    10. 'd' → logprob: -6.796621799468994

Token 290: ' arbre' (ID: 164180)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.07026661932468414
    2. 'fen' → logprob: -4.8202667236328125
    3. ' deque' → logprob: -4.8202667236328125
    4. 'segment' → logprob: -5.1952667236328125
    5. 'import' → logprob: -5.4452667236328125
    6. 'for' → logprob: -5.4452667236328125
    7. 'd' → logprob: -5.5702667236328125
    8. ' tableau' → logprob: -5.6952667236328125
    9. 'double' → logprob: -5.8202667236328125
    10. 'index' → logprob: -5.9452667236328125

Token 291: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7720323204994202
    2. '[' → logprob: -1.5220322608947754
    3. ')' → logprob: -2.1470322608947754
    4. 'def' → logprob: -2.8970322608947754
    5. 's' → logprob: -3.5220322608947754
    6. 'import' → logprob: -3.7720322608947754
    7. ']' → logprob: -4.272032260894775
    8. ' de' → logprob: -4.272032260894775
    9. 'de' → logprob: -4.897032260894775
    10. '[
' → logprob: -5.272032260894775

Token 292: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.05237569659948349
    2. 'seg' → logprob: -3.4273757934570312
    3. 'segments' → logprob: -4.552375793457031
    4. 'interval' → logprob: -5.677375793457031
    5. 'suffix' → logprob: -6.052375793457031
    6. 'fen' → logprob: -7.552375793457031
    7. ' segment' → logprob: -7.802375793457031
    8. 's' → logprob: -8.427375793457031
    9. 'd' → logprob: -8.927375793457031
    10. 'fusion' → logprob: -8.927375793457031

Token 293: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7526370882987976
    2. ':' → logprob: -1.6276371479034424
    3. 'import' → logprob: -2.2526371479034424
    4. '```' → logprob: -3.1276371479034424
    5. '
' → logprob: -3.3776371479034424
    6. ']' → logprob: -3.8776371479034424
    7. ',' → logprob: -4.252636909484863
    8. ' =' → logprob: -4.252636909484863
    9. '#' → logprob: -4.377636909484863
    10. '.' → logprob: -4.377636909484863

Token 294: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16858945786952972
    2. '[' → logprob: -2.7935893535614014
    3. 'i' → logprob: -3.6685893535614014
    4. '```' → logprob: -3.9185893535614014
    5. ':' → logprob: -4.5435895919799805
    6. 'n' → logprob: -5.0435895919799805
    7. 'for' → logprob: -5.1685895919799805
    8. 's' → logprob: -5.5435895919799805
    9. ']' → logprob: -5.9185895919799805
    10. 'import' → logprob: -6.1685895919799805

Token 295: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1994890421628952
    2. 'i' → logprob: -2.949489116668701
    3. '[' → logprob: -3.324489116668701
    4. 'n' → logprob: -3.449489116668701
    5. 's' → logprob: -4.449489116668701
    6. '   ' → logprob: -4.949489116668701
    7. ' def' → logprob: -5.199489116668701
    8. ' ' → logprob: -5.324489116668701
    9. 'import' → logprob: -5.324489116668701
    10. ' 
' → logprob: -5.324489116668701

Token 296: ' Mais' (ID: 13880)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7860990166664124
    2. 'i' → logprob: -1.2860989570617676
    3. 'for' → logprob: -2.2860989570617676
    4. 'n' → logprob: -2.9110989570617676
    5. '```' → logprob: -3.7860989570617676
    6. 'import' → logprob: -3.9110989570617676
    7. ' for' → logprob: -4.036098957061768
    8. 'from' → logprob: -4.161098957061768
    9. ' i' → logprob: -4.411098957061768
    10. ' def' → logprob: -5.036098957061768

Token 297: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0859898328781128
    2. ' on' → logprob: -1.8359898328781128
    3. ' voici' → logprob: -2.4609899520874023
    4. ' def' → logprob: -2.5859899520874023
    5. ' la' → logprob: -2.7109899520874023
    6. '#' → logprob: -2.9609899520874023
    7. ' s' → logprob: -3.0859899520874023
    8. 'import' → logprob: -3.3359899520874023
    9. ' pour' → logprob: -3.7109899520874023
    10. ' ici' → logprob: -3.8359899520874023

Token 298: ' cause' (ID: 7075)
  Prédit: 'cause'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cause' → logprob: -0.41297298669815063
    2. 'ce' → logprob: -2.287972927093506
    3. '#' → logprob: -2.662972927093506
    4. 'la' → logprob: -3.162972927093506
    5. 'l' → logprob: -3.412972927093506
    6. 'part' → logprob: -4.287972927093506
    7. 'cha' → logprob: -4.787972927093506
    8. 'court' → logprob: -4.912972927093506
    9. 'fa' → logprob: -5.037972927093506
    10. 'import' → logprob: -5.287972927093506

Token 299: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03587935119867325
    2. ' d' → logprob: -3.535879373550415
    3. ' du' → logprob: -5.660879135131836
    4. 'de' → logprob: -6.910879135131836
    5. ' des' → logprob: -7.035879135131836
    6. 'd' → logprob: -8.035879135131836
    7. '#' → logprob: -8.660879135131836
    8. 'du' → logprob: -9.660879135131836
    9. ' que' → logprob: -9.910879135131836
    10. '_de' → logprob: -10.285879135131836

Token 300: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.05096546560525894
    2. 'l' → logprob: -4.300965309143066
    3. ' la' → logprob: -4.300965309143066
    4. '#' → logprob: -4.800965309143066
    5. 'limitations' → logprob: -5.800965309143066
    6. 'sa' → logprob: -5.925965309143066
    7. 'lim' → logprob: -6.175965309143066
    8. 'tail' → logprob: -6.175965309143066
    9. 'leur' → logprob: -6.300965309143066
    10. ' contraintes' → logprob: -7.300965309143066

Token 301: ' limitation' (ID: 37039)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.018024567514657974
    2. 'long' → logprob: -4.268024444580078
    3. '#' → logprob: -5.893024444580078
    4. ' #' → logprob: -8.268024444580078
    5. ' taille' → logprob: -8.393024444580078
    6. 'complex' → logprob: -9.268024444580078
    7. 'ta' → logprob: -9.518024444580078
    8. 'lim' → logprob: -9.768024444580078
    9. ' longueur' → logprob: -10.018024444580078
    10. 'l' → logprob: -10.143024444580078

Token 302: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.059581026434898376
    2. ' d' → logprob: -3.8095810413360596
    3. 's' → logprob: -4.4345808029174805
    4. ' du' → logprob: -4.5595808029174805
    5. 'de' → logprob: -5.3095808029174805
    6. ' des' → logprob: -5.9345808029174805
    7. ' s' → logprob: -6.4345808029174805
    8. '#' → logprob: -6.6845808029174805
    9. ' of' → logprob: -7.0595808029174805
    10. ',' → logprob: -7.5595808029174805

Token 303: ' nombre' (ID: 9733)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -1.7569961547851562
    2. 'code' → logprob: -2.1319961547851562
    3. 's' → logprob: -2.2569961547851562
    4. ' code' → logprob: -2.5069961547851562
    5. 'nombre' → logprob: -2.5069961547851562
    6. '#' → logprob: -2.6319961547851562
    7. 'temps' → logprob: -2.7569961547851562
    8. 'car' → logprob: -3.3819961547851562
    9. 'long' → logprob: -3.3819961547851562
    10. ' nombre' → logprob: -3.6319961547851562

Token 304: ' maximal' (ID: 65414)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.29090651869773865
    2. ' d' → logprob: -2.2909064292907715
    3. '_' → logprob: -2.7909064292907715
    4. 's' → logprob: -3.9159064292907715
    5. '_de' → logprob: -4.2909064292907715
    6. ' s' → logprob: -4.5409064292907715
    7. 'import' → logprob: -4.5409064292907715
    8. 'de' → logprob: -4.6659064292907715
    9. '_s' → logprob: -4.9159064292907715
    10. '_d' → logprob: -5.6659064292907715

Token 305: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.360289216041565
    2. ' de' → logprob: -1.360289216041565
    3. 'de' → logprob: -1.360289216041565
    4. 'd' → logprob: -1.485289216041565
    5. '#' → logprob: -6.360289096832275
    6. 'des' → logprob: -7.110289096832275
    7. ' des' → logprob: -7.860289096832275
    8. 's' → logprob: -8.485289573669434
    9. 'def' → logprob: -8.985289573669434
    10. ' ' → logprob: -9.110289573669434

Token 306: ' swaps' (ID: 150699)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6153953671455383
    2. 'sw' → logprob: -0.8653953671455383
    3. ' caractères' → logprob: -4.490395545959473
    4. ' swaps' → logprob: -4.740395545959473
    5. 'k' → logprob: -5.240395545959473
    6. 'chars' → logprob: -5.740395545959473
    7. 'swap' → logprob: -6.240395545959473
    8. 'characters' → logprob: -6.740395545959473
    9. 'per' → logprob: -6.865395545959473
    10. '```' → logprob: -6.865395545959473

Token 307: ' très' (ID: 9412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11103099584579468
    2. ' ,' → logprob: -3.3610310554504395
    3. 's' → logprob: -3.9860310554504395
    4. ' possible' → logprob: -3.9860310554504395
    5. 'possible' → logprob: -4.4860310554504395
    6. ' ' → logprob: -5.2360310554504395
    7. ' de' → logprob: -6.1110310554504395
    8. '_possible' → logprob: -6.1110310554504395
    9. '#' → logprob: -6.4860310554504395
    10. ' s' → logprob: -6.4860310554504395

Token 308: ' grand' (ID: 6363)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6760739088058472
    2. 'grand' → logprob: -2.1760740280151367
    3. 'pet' → logprob: -2.4260740280151367
    4. 'important' → logprob: -2.5510740280151367
    5. 'rest' → logprob: -2.9260740280151367
    6. 'fa' → logprob: -3.1760740280151367
    7. ' faible' → logprob: -3.4260740280151367
    8. 'lim' → logprob: -4.301074028015137
    9. 'limit' → logprob: -4.301074028015137
    10. ' limité' → logprob: -4.426074028015137

Token 309: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1777164489030838
    2. 'e' → logprob: -3.0527164936065674
    3. 's' → logprob: -3.1777164936065674
    4. ' ,' → logprob: -4.052716255187988
    5. ',
' → logprob: -4.302716255187988
    6. ' s' → logprob: -4.802716255187988
    7. 'es' → logprob: -4.927716255187988
    8. '#' → logprob: -5.177716255187988
    9. 'def' → logprob: -5.677716255187988
    10. ' (' → logprob: -5.677716255187988

Token 310: 'jus' (ID: 56271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8560633063316345
    2. ' n' → logprob: -1.8560633659362793
    3. ' )' → logprob: -1.9810633659362793
    4. 'n' → logprob: -2.8560633659362793
    5. ' s' → logprob: -2.8560633659362793
    6. 's' → logprob: -2.9810633659362793
    7. '),' → logprob: -3.4810633659362793
    8. ' ),' → logprob: -3.9810633659362793
    9. ',' → logprob: -4.481063365936279
    10. 'len' → logprob: -5.356063365936279

Token 311: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.667831301689148
    2. 'te' → logprob: -1.292831301689148
    3. 'q' → logprob: -2.5428314208984375
    4. 'té' → logprob: -2.9178314208984375
    5. 'que' → logprob: -3.7928314208984375
    6. 't' → logprob: -4.0428314208984375
    7. 'ste' → logprob: -4.9178314208984375
    8. '#' → logprob: -4.9178314208984375
    9. '```' → logprob: -5.0428314208984375
    10. 'st' → logprob: -6.4178314208984375

Token 312: ''à' (ID: 33688)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.804038405418396
    2. '=' → logprob: -1.804038405418396
    3. 'import' → logprob: -2.6790385246276855
    4. ')' → logprob: -2.8040385246276855
    5. '   ' → logprob: -3.1790385246276855
    6. ''' → logprob: -3.3040385246276855
    7. ''à' → logprob: -3.4290385246276855
    8. ']' → logprob: -3.5540385246276855
    9. '```' → logprob: -4.6790385246276855
    10. 'e' → logprob: -4.8040385246276855

Token 313: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0016967225819826126
    2. '100' → logprob: -6.876696586608887
    3. ' ' → logprob: -7.626696586608887
    4. '1' → logprob: -10.251696586608887
    5. '2' → logprob: -10.251696586608887
    6. '200' → logprob: -10.876696586608887
    7. 'len' → logprob: -10.876696586608887
    8. '500' → logprob: -11.251696586608887
    9. 'int' → logprob: -11.376696586608887
    10. ' ' → logprob: -11.501696586608887

Token 314: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012868782505393028
    2. '100' → logprob: -9.250128746032715
    3. '1' → logprob: -11.500128746032715
    4. '2' → logprob: -12.000128746032715
    5. '```' → logprob: -12.250128746032715
    6. ' ' → logprob: -12.500128746032715
    7. '200' → logprob: -13.250128746032715
    8. 'int' → logprob: -13.375128746032715
    9. '500' → logprob: -13.500128746032715
    10. 'len' → logprob: -14.500128746032715

Token 315: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.007638105191290379
    2. '7' → logprob: -6.007637977600098
    3. '^' → logprob: -6.632637977600098
    4. ' **' → logprob: -6.632637977600098
    5. '6' → logprob: -6.882637977600098
    6. '9' → logprob: -7.632637977600098
    7. 'def' → logprob: -8.007637977600098
    8. '0' → logprob: -8.257637977600098
    9. '000' → logprob: -9.007637977600098
    10. 'import' → logprob: -9.132637977600098

Token 316: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6999945044517517
    2. '6' → logprob: -0.8249945044517517
    3. '7' → logprob: -3.3249945640563965
    4. '5' → logprob: -3.5749945640563965
    5. '8' → logprob: -6.8249945640563965
    6. '```' → logprob: -9.949994087219238
    7. '^' → logprob: -11.449994087219238
    8. ' ' → logprob: -11.699994087219238
    9. '18' → logprob: -11.949994087219238
    10. '**' → logprob: -12.074994087219238

Token 317: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062293678522109985
    2. '),' → logprob: -3.562293767929077
    3. ' )' → logprob: -3.937293767929077
    4. '):' → logprob: -4.812293529510498
    5. ',' → logprob: -6.312293529510498
    6. ' ),' → logprob: -7.312293529510498
    7. '#' → logprob: -7.562293529510498
    8. '):
' → logprob: -7.937293529510498
    9. ')#' → logprob: -8.187294006347656
    10. ' or' → logprob: -8.937294006347656

Token 318: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17688246071338654
    2. ' on' → logprob: -2.55188250541687
    3. 'n' → logprob: -3.17688250541687
    4. ' n' → logprob: -4.176882266998291
    5. ' il' → logprob: -4.426882266998291
    6. ' #' → logprob: -5.676882266998291
    7. 'on' → logprob: -5.926882266998291
    8. 'import' → logprob: -5.926882266998291
    9. 'il' → logprob: -6.551882266998291
    10. ' s' → logprob: -7.051882266998291

Token 319: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3191993236541748
    2. ' la' → logprob: -1.5691993236541748
    3. '#' → logprob: -3.694199323654175
    4. 'l' → logprob: -3.694199323654175
    5. 'le' → logprob: -5.319199562072754
    6. 'de' → logprob: -5.444199562072754
    7. 'une' → logprob: -6.694199562072754
    8. ' l' → logprob: -6.819199562072754
    9. ' de' → logprob: -7.319199562072754
    10. 'les' → logprob: -7.319199562072754

Token 320: ' taille' (ID: 41644)
  Prédit: ' taille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taille' → logprob: -0.6281684637069702
    2. 'tail' → logprob: -1.2531684637069702
    3. ' nature' → logprob: -3.1281685829162598
    4. ' longueur' → logprob: -3.2531685829162598
    5. 'long' → logprob: -4.37816858291626
    6. '#' → logprob: -4.50316858291626
    7. 'nature' → logprob: -4.62816858291626
    8. 'n' → logprob: -5.12816858291626
    9. 'complex' → logprob: -5.12816858291626
    10. 'import' → logprob: -5.25316858291626

Token 321: ' importante' (ID: 13431)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7538373470306396
    2. 'de' → logprob: -1.5038373470306396
    3. 'max' → logprob: -2.5038373470306396
    4. ' maximale' → logprob: -2.7538373470306396
    5. 's' → logprob: -3.3788373470306396
    6. 'du' → logprob: -4.003837585449219
    7. 'n' → logprob: -4.128837585449219
    8. '=' → logprob: -4.128837585449219
    9. 'import' → logprob: -4.128837585449219
    10. ' du' → logprob: -4.503837585449219

Token 322: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.12779071927070618
    2. 'de' → logprob: -2.627790689468384
    3. 's' → logprob: -4.252790927886963
    4. ' du' → logprob: -5.252790927886963
    5. ' s' → logprob: -5.627790927886963
    6. 'import' → logprob: -5.752790927886963
    7. 'e' → logprob: -5.752790927886963
    8. ' maximale' → logprob: -5.877790927886963
    9. 'max' → logprob: -5.877790927886963
    10. ',' → logprob: -6.252790927886963

Token 323: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.15293073654174805
    2. ' la' → logprob: -2.027930736541748
    3. 's' → logprob: -4.902930736541748
    4. 'l' → logprob: -6.652930736541748
    5. ' s' → logprob: -6.652930736541748
    6. 'chaine' → logprob: -9.777931213378906
    7. '#' → logprob: -10.527931213378906
    8. 'a' → logprob: -10.652931213378906
    9. ' l' → logprob: -10.777931213378906
    10. ' ' → logprob: -11.152931213378906

Token 324: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.19760411977767944
    2. 's' → logprob: -2.572604179382324
    3. ' chaîne' → logprob: -2.572604179382324
    4. 'string' → logprob: -4.322604179382324
    5. 'cha' → logprob: -4.697604179382324
    6. '#' → logprob: -6.947604179382324
    7. '```' → logprob: -7.072604179382324
    8. ' chaine' → logprob: -7.322604179382324
    9. ' s' → logprob: -7.572604179382324
    10. 'texte' → logprob: -8.197604179382324

Token 325: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2347419112920761
    2. ' s' → logprob: -2.4847419261932373
    3. 's' → logprob: -2.9847419261932373
    4. ' (' → logprob: -3.2347419261932373
    5. '#' → logprob: -4.609741687774658
    6. ',
' → logprob: -4.984741687774658
    7. 'n' → logprob: -5.359741687774658
    8. ' ,' → logprob: -5.359741687774658
    9. ' n' → logprob: -5.484741687774658
    10. '(s' → logprob: -6.484741687774658

Token 326: '2' (ID: 17)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5963505506515503
    2. 'n' → logprob: -1.3463505506515503
    3. 's' → logprob: -2.97135066986084
    4. ')' → logprob: -3.22135066986084
    5. ' jusqu' → logprob: -3.72135066986084
    6. ' s' → logprob: -4.22135066986084
    7. '10' → logprob: -4.72135066986084
    8. ' ' → logprob: -4.97135066986084
    9. ' up' → logprob: -5.09635066986084
    10. '100' → logprob: -5.22135066986084

Token 327: '*' (ID: 9)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015465710312128067
    2. '*' → logprob: -5.51546573638916
    3. '10' → logprob: -5.64046573638916
    4. ' *' → logprob: -6.14046573638916
    5. '5' → logprob: -6.26546573638916
    6. ' ' → logprob: -6.76546573638916
    7. '**' → logprob: -6.89046573638916
    8. '1' → logprob: -7.76546573638916
    9. '000' → logprob: -8.14046573638916
    10. '00' → logprob: -8.64046573638916

Token 328: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008022748865187168
    2. ' ' → logprob: -4.883022785186768
    3. '1' → logprob: -7.883022785186768
    4. ' ' → logprob: -10.88302230834961
    5. '0' → logprob: -11.63302230834961
    6. ' 
' → logprob: -13.00802230834961
    7. '
' → logprob: -13.13302230834961
    8. '(' → logprob: -13.63302230834961
    9. '```' → logprob: -13.63302230834961
    10. '*' → logprob: -13.75802230834961

Token 329: '^' (ID: 61)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.12909136712551117
    2. '**' → logprob: -2.129091262817383
    3. '6' → logprob: -6.754091262817383
    4. '^' → logprob: -7.629091262817383
    5. '4' → logprob: -8.254091262817383
    6. '7' → logprob: -8.629091262817383
    7. '0' → logprob: -10.379091262817383
    8. '3' → logprob: -10.754091262817383
    9. 'import' → logprob: -12.254091262817383
    10. '```' → logprob: -12.754091262817383

Token 330: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.009304316714406013
    2. '6' → logprob: -5.009304523468018
    3. '**' → logprob: -6.384304523468018
    4. '^' → logprob: -7.884304523468018
    5. '4' → logprob: -8.38430404663086
    6. '0' → logprob: -9.00930404663086
    7. '3' → logprob: -9.25930404663086
    8. '7' → logprob: -9.88430404663086
    9. '```' → logprob: -11.88430404663086
    10. '\xe2\x81' → logprob: -12.13430404663086

Token 331: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09673294425010681
    2. '),' → logprob: -2.9717328548431396
    3. 's' → logprob: -4.471733093261719
    4. ',' → logprob: -5.346733093261719
    5. ' )' → logprob: -5.346733093261719
    6. ' s' → logprob: -5.471733093261719
    7. ']' → logprob: -5.971733093261719
    8. '):
' → logprob: -5.971733093261719
    9. '):' → logprob: -5.971733093261719
    10. '#' → logprob: -6.346733093261719

Token 332: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12376219034194946
    2. ' s' → logprob: -3.1237621307373047
    3. 'n' → logprob: -3.9987621307373047
    4. ' n' → logprob: -4.623762130737305
    5. ' on' → logprob: -4.623762130737305
    6. ' #' → logprob: -4.623762130737305
    7. 's' → logprob: -4.998762130737305
    8. ',' → logprob: -5.498762130737305
    9. 'import' → logprob: -6.498762130737305
    10. ' il' → logprob: -6.623762130737305

Token 333: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.061499230563640594
    2. ' on' → logprob: -4.311499118804932
    3. 'n' → logprob: -4.436499118804932
    4. ' #' → logprob: -4.561499118804932
    5. 'def' → logprob: -4.811499118804932
    6. ' n' → logprob: -4.936499118804932
    7. 'import' → logprob: -6.061499118804932
    8. ' il' → logprob: -6.186499118804932
    9. ' s' → logprob: -7.311499118804932
    10. ' 
' → logprob: -7.561499118804932

Token 334: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27002421021461487
    2. ' on' → logprob: -2.020024299621582
    3. 'on' (adapté à ' on') → logprob: -2.645024299621582
    4. ' il' → logprob: -4.395024299621582
    5. 'il' → logprob: -4.770024299621582
    6. 'import' → logprob: -5.770024299621582
    7. 'nous' → logprob: -5.770024299621582
    8. ' #' → logprob: -6.645024299621582
    9. 'la' → logprob: -6.895024299621582
    10. 'n' → logprob: -7.145024299621582

Token 335: ' privilég' (ID: 164587)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2972021102905273
    2. 'impl' → logprob: -2.4222021102905273
    3. ' va' → logprob: -2.4222021102905273
    4. ' peut' → logprob: -2.6722021102905273
    5. ' utilise' → logprob: -2.6722021102905273
    6. 'pe' → logprob: -2.7972021102905273
    7. ' continue' → logprob: -3.1722021102905273
    8. ' n' → logprob: -3.6722021102905273
    9. ' doit' → logprob: -3.7972021102905273
    10. 'util' → logprob: -4.047202110290527

Token 336: 'ie' (ID: 396)
  Prédit: 'ère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.26738637685775757
    2. 'e' → logprob: -1.7673864364624023
    3. 'er' → logprob: -3.2673864364624023
    4. 'é' → logprob: -4.767386436462402
    5. 'ue' → logprob: -5.517386436462402
    6. 'ér' → logprob: -5.517386436462402
    7. 'ée' → logprob: -6.267386436462402
    8. 'ére' → logprob: -6.392386436462402
    9. 'ège' → logprob: -6.767386436462402
    10. 'érons' → logprob: -7.392386436462402

Token 337: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6975449919700623
    2. 'une' → logprob: -0.6975449919700623
    3. 'l' → logprob: -5.822545051574707
    4. ' l' → logprob: -7.697545051574707
    5. 'la' → logprob: -8.322545051574707
    6. 'un' → logprob: -8.447545051574707
    7. 'd' → logprob: -8.697545051574707
    8. 'a' → logprob: -9.447545051574707
    9. ' la' → logprob: -9.572545051574707
    10. ' un' → logprob: -10.072545051574707

Token 338: ' approche' (ID: 102373)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7283216714859009
    2. 'import' → logprob: -1.6033216714859009
    3. 'appro' → logprob: -2.6033215522766113
    4. 'deque' → logprob: -2.6033215522766113
    5. 'dé' → logprob: -3.6033215522766113
    6. ' approche' → logprob: -3.6033215522766113
    7. 'liste' → logprob: -3.9783215522766113
    8. 'fen' → logprob: -4.103321552276611
    9. ' from' → logprob: -4.478321552276611
    10. 'def' → logprob: -4.728321552276611

Token 339: ' gl' (ID: 2000)
  Prédit: 'gl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gl' → logprob: -0.4670478105545044
    2. ' gl' → logprob: -1.0920478105545044
    3. 'gre' → logprob: -4.092047691345215
    4. 'import' → logprob: -4.217047691345215
    5. '```' → logprob: -6.217047691345215
    6. 'de' → logprob: -7.717047691345215
    7. 'g' → logprob: -8.217047691345215
    8. 'gr' → logprob: -8.217047691345215
    9. 'deque' → logprob: -8.217047691345215
    10. ' greedy' → logprob: -8.342047691345215

Token 340: 'out' (ID: 468)
  Prédit: 'obal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obal' → logprob: -0.18179820477962494
    2. 'ob' → logprob: -1.8067982196807861
    3. 'oble' → logprob: -6.806797981262207
    4. 'obals' → logprob: -8.431797981262207
    5. 'obe' → logprob: -8.681797981262207
    6. 'out' → logprob: -9.306797981262207
    7. 'oba' → logprob: -9.431797981262207
    8. '#' → logprob: -9.681797981262207
    9. 'ocale' → logprob: -10.181797981262207
    10. 'ide' → logprob: -10.306797981262207

Token 341: 'onne' (ID: 25335)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.9380236864089966
    2. 'ue' → logprob: -1.3130236864089966
    3. 'uée' → logprob: -2.438023567199707
    4. 'e' → logprob: -2.813023567199707
    5. 'u' → logprob: -3.063023567199707
    6. 'ed' → logprob: -3.188023567199707
    7. 'ueuse' → logprob: -3.563023567199707
    8. 'ace' → logprob: -3.938023567199707
    9. 'oss' → logprob: -4.813023567199707
    10. 'ose' → logprob: -5.188023567199707

Token 342: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5536936521530151
    2. '[i' → logprob: -1.6786936521530151
    3. ' for' → logprob: -2.0536937713623047
    4. 'i' → logprob: -2.1786937713623047
    5. ',' → logprob: -2.6786937713623047
    6. ':' → logprob: -3.1786937713623047
    7. ' i' → logprob: -3.4286937713623047
    8. '```' → logprob: -3.6786937713623047
    9. '[' → logprob: -3.9286937713623047
    10. 's' → logprob: -4.053693771362305

Token 343: ' se' (ID: 458)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.7975837588310242
    2. ' utilisant' → logprob: -1.172583818435669
    3. 'python' → logprob: -1.797583818435669
    4. 'gre' → logprob: -4.04758358001709
    5. 'p' → logprob: -5.04758358001709
    6. ' python' → logprob: -5.42258358001709
    7. 'prior' → logprob: -6.04758358001709
    8. 's' → logprob: -6.17258358001709
    9. '```' → logprob: -6.17258358001709
    10. 'tir' → logprob: -6.29758358001709

Token 344: ' servant' (ID: 67352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2655671238899231
    2. 'rv' → logprob: -1.5155670642852783
    3. 'app' → logprob: -6.015567302703857
    4. 'erv' → logprob: -6.515567302703857
    5. 'u' → logprob: -6.890567302703857
    6. '#' → logprob: -7.140567302703857
    7. 'vr' → logprob: -7.140567302703857
    8. '```' → logprob: -7.390567302703857
    9. 'rb' → logprob: -7.515567302703857
    10. 'pla' → logprob: -7.890567302703857

Token 345: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.44847264885902405
    2. ' de' → logprob: -2.323472738265991
    3. ' du' → logprob: -2.323472738265991
    4. ' des' → logprob: -2.448472738265991
    5. 'd' → logprob: -3.323472738265991
    6. 'de' → logprob: -3.823472738265991
    7. 'du' → logprob: -4.323472499847412
    8. 'des' → logprob: -5.198472499847412
    9. ' uniquement' → logprob: -6.698472499847412
    10. 'import' → logprob: -8.57347297668457

Token 346: ''un' (ID: 9788)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.21029417216777802
    2. ' une' → logprob: -2.460294246673584
    3. ' collections' → logprob: -2.960294246673584
    4. 'collections' → logprob: -3.585294246673584
    5. 'un' → logprob: -5.585294246673584
    6. ' la' → logprob: -5.835294246673584
    7. 'une' → logprob: -5.835294246673584
    8. ' des' → logprob: -5.960294246673584
    9. ' deque' → logprob: -6.085294246673584
    10. ' a' → logprob: -6.460294246673584

Token 347: ' tableau' (ID: 67053)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.1866400241851807
    2. 'deque' → logprob: -1.5616400241851807
    3. ' segment' → logprob: -1.6866400241851807
    4. ' heap' → logprob: -2.0616400241851807
    5. 'segment' → logprob: -3.5616400241851807
    6. ' double' → logprob: -3.9366400241851807
    7. ' tableau' → logprob: -4.061639785766602
    8. ' priority' → logprob: -4.436639785766602
    9. ' deque' → logprob: -4.436639785766602
    10. 'list' → logprob: -4.811639785766602

Token 348: ' index' (ID: 3472)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3840888738632202
    2. ' s' → logprob: -2.2590889930725098
    3. ' =' → logprob: -2.8840889930725098
    4. 'de' → logprob: -3.3840889930725098
    5. '[' → logprob: -3.6340889930725098
    6. ' de' → logprob: -3.6340889930725098
    7. '_' → logprob: -3.7590889930725098
    8. ' of' → logprob: -4.63408899307251
    9. 'd' → logprob: -5.50908899307251
    10. '_s' → logprob: -5.50908899307251

Token 349: ' ou' (ID: 2031)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42756885290145874
    2. '[' → logprob: -1.4275689125061035
    3. 's' → logprob: -2.6775689125061035
    4. ' =' → logprob: -4.0525689125061035
    5. '_positions' → logprob: -5.0525689125061035
    6. 'es' → logprob: -5.9275689125061035
    7. ']' → logprob: -6.0525689125061035
    8. '=' → logprob: -6.4275689125061035
    9. '[
' → logprob: -6.8025689125061035
    10. ' ' → logprob: -6.9275689125061035

Token 350: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.44382017850875854
    2. 'd' → logprob: -1.1938202381134033
    3. ' de' → logprob: -4.193819999694824
    4. 'de' → logprob: -4.943819999694824
    5. ' une' → logprob: -5.193819999694824
    6. ' un' → logprob: -5.443819999694824
    7. 'deque' → logprob: -5.443819999694824
    8. 'dict' → logprob: -5.568819999694824
    9. ' dict' → logprob: -6.068819999694824
    10. 'import' → logprob: -6.318819999694824

Token 351: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.6055421829223633
    2. ''un' → logprob: -1.1055421829223633
    3. 'e' → logprob: -2.2305421829223633
    4. 'une' → logprob: -5.105542182922363
    5. 'es' → logprob: -5.855542182922363
    6. 'iction' → logprob: -6.355542182922363
    7. 'un' → logprob: -6.605542182922363
    8. '’une' → logprob: -7.230542182922363
    9. ''' → logprob: -7.480542182922363
    10. 'u' → logprob: -7.605542182922363

Token 352: ' structure' (ID: 8866)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.09142950922250748
    2. 'heap' → logprob: -3.4664294719696045
    3. 'fen' → logprob: -4.341429710388184
    4. 'd' → logprob: -4.466429710388184
    5. 'dict' → logprob: -4.716429710388184
    6. 'liste' → logprob: -5.466429710388184
    7. 'priority' → logprob: -6.091429710388184
    8. 'balanced' → logprob: -6.216429710388184
    9. 'collections' → logprob: -6.341429710388184
    10. 'double' → logprob: -6.716429710388184

Token 353: ' adaptée' (ID: 139884)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4758961498737335
    2. '[]' → logprob: -2.350896120071411
    3. ' de' → logprob: -2.475896120071411
    4. 'import' → logprob: -2.850896120071411
    5. ']' → logprob: -3.225896120071411
    6. 'd' → logprob: -3.600896120071411
    7. 'deque' → logprob: -4.10089635848999
    8. 'from' → logprob: -4.85089635848999
    9. 'aux' → logprob: -4.97589635848999
    10. '```' → logprob: -5.22589635848999

Token 354: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3097281455993652
    2. '[' → logprob: -1.6847281455993652
    3. ':' → logprob: -2.0597281455993652
    4. ' =' → logprob: -2.3097281455993652
    5. '[i' → logprob: -2.5597281455993652
    6. ']' → logprob: -2.6847281455993652
    7. 's' → logprob: -3.5597281455993652
    8. '=' → logprob: -3.6847281455993652
    9. 'import' → logprob: -4.059728145599365
    10. '_' → logprob: -4.184728145599365

Token 355: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20740725100040436
    2. 'i' → logprob: -2.707407236099243
    3. 'n' → logprob: -2.832407236099243
    4. 'from' → logprob: -3.707407236099243
    5. 's' → logprob: -3.957407236099243
    6. '```' → logprob: -4.832407474517822
    7. 'import' → logprob: -5.457407474517822
    8. 'for' → logprob: -5.957407474517822
    9. '#' → logprob: -7.332407474517822
    10. ' from' → logprob: -7.832407474517822

Token 356: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008721524849534035
    2. 'n' → logprob: -5.008721351623535
    3. '```' → logprob: -6.758721351623535
    4. 'i' → logprob: -7.258721351623535
    5. 'for' → logprob: -9.133721351623535
    6. 'from' → logprob: -11.633721351623535
    7. 's' → logprob: -11.883721351623535
    8. ' def' → logprob: -12.008721351623535
    9. 'import' → logprob: -12.133721351623535
    10. '``' → logprob: -13.758721351623535

Token 357: ' Impl' (ID: 144563)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02664242871105671
    2. 'n' → logprob: -3.901642322540283
    3. 'from' → logprob: -5.276642322540283
    4. 'i' → logprob: -7.901642322540283
    5. 'import' → logprob: -8.276642799377441
    6. 's' → logprob: -8.526642799377441
    7. '```' → logprob: -9.401642799377441
    8. 'for' → logprob: -10.151642799377441
    9. ' def' → logprob: -11.276642799377441
    10. 'de' → logprob: -12.151642799377441

Token 358: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.00564528675749898
    2. 'ement' → logprob: -5.255645275115967
    3. 'é' → logprob: -7.880645275115967
    4. 'éments' → logprob: -11.505645751953125
    5. 'import' → logprob: -11.880645751953125
    6. 'ements' → logprob: -12.380645751953125
    7. '#' → logprob: -12.755645751953125
    8. 'entation' → logprob: -13.255645751953125
    9. 'def' → logprob: -13.380645751953125
    10. '```' → logprob: -13.505645751953125

Token 359: 'ation' (ID: 387)
  Prédit: 'entation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entation' → logprob: -0.9399362206459045
    2. 'ent' → logprob: -1.4399361610412598
    3. 'er' → logprob: -1.9399361610412598
    4. 'def' → logprob: -2.0649361610412598
    5. 'mentation' → logprob: -3.0649361610412598
    6. 'ented' → logprob: -3.6899361610412598
    7. 'ment' → logprob: -3.8149361610412598
    8. 'ation' → logprob: -5.68993616104126
    9. 'import' → logprob: -6.06493616104126
    10. 'ement' → logprob: -7.31493616104126

Token 360: ' chois' (ID: 33475)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014254359528422356
    2. ':' → logprob: -5.139254570007324
    3. 'n' → logprob: -5.889254570007324
    4. 's' → logprob: -6.264254570007324
    5. '```' → logprob: -6.264254570007324
    6. ':
' → logprob: -7.514254570007324
    7. ' def' → logprob: -7.889254570007324
    8. 'from' → logprob: -8.014254570007324
    9. ' :' → logprob: -9.014254570007324
    10. 'import' → logprob: -9.764254570007324

Token 361: 'ie' (ID: 396)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0006950391689315438
    2. 'ee' → logprob: -8.00069522857666
    3. 'é' → logprob: -8.37569522857666
    4. 'e' → logprob: -9.37569522857666
    5. 'import' → logprob: -11.25069522857666
    6. '#' → logprob: -11.37569522857666
    7. 'def' → logprob: -11.37569522857666
    8. 'er' → logprob: -13.62569522857666
    9. 'rée' → logprob: -13.87569522857666
    10. 'ue' → logprob: -14.00069522857666

Token 362: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7336912751197815
    2. ' :' → logprob: -1.2336912155151367
    3. ' :
' → logprob: -2.6086912155151367
    4. ' =' → logprob: -2.7336912155151367
    5. ':
' → logprob: -2.9836912155151367
    6. 'def' → logprob: -3.6086912155151367
    7. 'import' → logprob: -5.733691215515137
    8. 's' → logprob: -6.108691215515137
    9. ' :

' → logprob: -6.233691215515137
    10. '```' → logprob: -6.608691215515137

Token 363: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05355367437005043
    2. ' def' → logprob: -3.803553581237793
    3. 's' → logprob: -4.553553581237793
    4. 'from' → logprob: -4.553553581237793
    5. ' s' → logprob: -5.053553581237793
    6. 'import' → logprob: -6.928553581237793
    7. 'n' → logprob: -7.803553581237793
    8. '```' → logprob: -7.803553581237793
    9. ' from' → logprob: -8.303553581237793
    10. '#' → logprob: -8.803553581237793

Token 364: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4798993468284607
    2. 'from' → logprob: -0.9798993468284607
    3. 'n' → logprob: -6.2298994064331055
    4. 'import' → logprob: -6.3548994064331055
    5. '```' → logprob: -6.9798994064331055
    6. 's' → logprob: -7.1048994064331055
    7. ' from' → logprob: -9.104899406433105
    8. ' def' → logprob: -9.229899406433105
    9. '
' → logprob: -9.354899406433105
    10. 'class' → logprob: -11.354899406433105

Token 365: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30729275941848755
    2. 'from' → logprob: -1.5572926998138428
    3. ' def' → logprob: -3.8072926998138428
    4. 's' → logprob: -4.682292938232422
    5. 'import' → logprob: -4.682292938232422
    6. ' from' → logprob: -5.807292938232422
    7. '```' → logprob: -5.807292938232422
    8. '
' → logprob: -6.057292938232422
    9. 'On' → logprob: -6.807292938232422
    10. ' s' → logprob: -6.807292938232422

Token 366: ' utilise' (ID: 70283)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18465359508991241
    2. 'n' → logprob: -3.4346535205841064
    3. ' continue' → logprob: -3.5596535205841064
    4. 'continue' → logprob: -3.9346535205841064
    5. 'impl' → logprob: -4.6846537590026855
    6. ' def' → logprob: -4.6846537590026855
    7. ' utilise' → logprob: -4.8096537590026855
    8. 'from' → logprob: -4.9346537590026855
    9. 'dé' → logprob: -5.1846537590026855
    10. 'util' → logprob: -5.3096537590026855

Token 367: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5560987591743469
    2. ' un' → logprob: -0.9310987591743469
    3. 'une' → logprob: -3.681098699569702
    4. 'un' → logprob: -5.431098937988281
    5. ' list' → logprob: -7.306098937988281
    6. 'from' → logprob: -7.806098937988281
    7. ' ' → logprob: -8.556098937988281
    8. 'list' → logprob: -8.681098937988281
    9. 'import' → logprob: -8.806098937988281
    10. ' from' → logprob: -8.931098937988281

Token 368: ' structure' (ID: 8866)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12233064323663712
    2. 'def' → logprob: -3.122330665588379
    3. 'import' → logprob: -3.247330665588379
    4. ' from' → logprob: -4.372330665588379
    5. 'deque' → logprob: -4.747330665588379
    6. 'list' → logprob: -5.872330665588379
    7. 'heap' → logprob: -6.247330665588379
    8. 'liste' → logprob: -6.747330665588379
    9. ' def' → logprob: -7.122330665588379
    10. 'fen' → logprob: -7.372330665588379

Token 369: ' de' (ID: 334)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0860620737075806
    2. 'from' → logprob: -1.4610620737075806
    3. 'de' → logprob: -1.5860620737075806
    4. ' de' → logprob: -2.086061954498291
    5. 'deque' → logprob: -3.461061954498291
    6. '[]' → logprob: -3.711061954498291
    7. 'd' → logprob: -4.211061954498291
    8. ' from' → logprob: -5.461061954498291
    9. '```' → logprob: -5.461061954498291
    10. 'heap' → logprob: -5.586061954498291

Token 370: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.37245574593544006
    2. ' données' → logprob: -1.4974557161331177
    3. 'don' → logprob: -3.2474558353424072
    4. 'liste' → logprob: -4.497455596923828
    5. 'list' → logprob: -5.247455596923828
    6. 'tas' → logprob: -5.247455596923828
    7. 'min' → logprob: -5.372455596923828
    8. 'segment' → logprob: -5.622455596923828
    9. ' liste' → logprob: -5.872455596923828
    10. 'data' → logprob: -6.122455596923828

Token 371: ' "' (ID: 392)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6017923951148987
    2. 'from' → logprob: -1.351792335510254
    3. 'deque' → logprob: -2.226792335510254
    4. 'de' → logprob: -3.226792335510254
    5. ' de' → logprob: -4.476792335510254
    6. 'class' → logprob: -5.101792335510254
    7. ' deque' → logprob: -5.101792335510254
    8. 'd' → logprob: -5.351792335510254
    9. '```' → logprob: -5.476792335510254
    10. ' import' → logprob: -6.101792335510254

Token 372: 'fen' (ID: 12353)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.5996615290641785
    2. 'd' → logprob: -1.9746615886688232
    3. 'fen' → logprob: -2.3496615886688232
    4. 'Segment' → logprob: -2.4746615886688232
    5. 'Fen' → logprob: -3.5996615886688232
    6. 'heap' → logprob: -3.5996615886688232
    7. 'list' → logprob: -4.224661350250244
    8. 'segment' → logprob: -4.349661350250244
    9. 'liste' → logprob: -4.849661350250244
    10. 'balanced' → logprob: -5.099661350250244

Token 373: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.035944223403930664
    2. 'wick' → logprob: -3.4109442234039307
    3. 'être' → logprob: -6.410943984985352
    4. 'et' → logprob: -8.410943984985352
    5. 't' → logprob: -9.035943984985352
    6. '```' → logprob: -9.410943984985352
    7. 'ê' → logprob: -10.285943984985352
    8. 'êt' → logprob: -10.410943984985352
    9. 'etre' → logprob: -10.660943984985352
    10. 'wt' → logprob: -10.910943984985352

Token 374: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.9905268549919128
    2. ' tree' → logprob: -1.1155269145965576
    3. '_tree' → logprob: -1.7405269145965576
    4. 'Tree' → logprob: -2.6155269145965576
    5. ' ' → logprob: -3.6155269145965576
    6. 'ree' → logprob: -5.2405266761779785
    7. ' (' → logprob: -5.3655266761779785
    8. '(tree' → logprob: -5.4905266761779785
    9. '"' → logprob: -6.2405266761779785
    10. ' Tree' → logprob: -6.4905266761779785

Token 375: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08541599661111832
    2. ' (' → logprob: -3.460416078567505
    3. 'class' → logprob: -4.210415840148926
    4. ' =' → logprob: -4.710415840148926
    5. ' "' → logprob: -4.835415840148926
    6. ' ("' → logprob: -5.335415840148926
    7. ' or' → logprob: -5.960415840148926
    8. 'import' → logprob: -6.585415840148926
    9. '("' → logprob: -6.585415840148926
    10. 's' → logprob: -7.210415840148926

Token 376: ' ou' (ID: 2031)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.14222180843353271
    2. 'import' → logprob: -2.3922219276428223
    3. ' class' → logprob: -4.892221927642822
    4. '#' → logprob: -5.142221927642822
    5. '
' → logprob: -5.142221927642822
    6. '_' → logprob: -5.517221927642822
    7. 'def' → logprob: -5.892221927642822
    8. '(
' → logprob: -6.142221927642822
    9. 'from' → logprob: -6.142221927642822
    10. '```' → logprob: -6.142221927642822

Token 377: ' "' (ID: 392)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9404555559158325
    2. 'un' → logprob: -1.8154555559158325
    3. ' segment' → logprob: -1.9404555559158325
    4. 'segment' → logprob: -2.315455436706543
    5. ' une' → logprob: -2.690455436706543
    6. 'BIT' → logprob: -2.940455436706543
    7. '"' → logprob: -3.565455436706543
    8. 'une' → logprob: -4.190455436706543
    9. ' BIT' → logprob: -4.565455436706543
    10. ' "' → logprob: -5.065455436706543

Token 378: 'BIT' (ID: 41038)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.12384003400802612
    2. 'BIT' → logprob: -2.748840093612671
    3. ' segment' → logprob: -3.998840093612671
    4. 'binary' → logprob: -4.748839855194092
    5. 'balanced' → logprob: -4.748839855194092
    6. 'bit' → logprob: -5.623839855194092
    7. 'fen' → logprob: -6.123839855194092
    8. 'tree' → logprob: -6.248839855194092
    9. 'heap' → logprob: -6.248839855194092
    10. 'ar' → logprob: -6.373839855194092

Token 379: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0720185041427612
    2. ' (' → logprob: -1.1970185041427612
    3. ' =' → logprob: -1.8220185041427612
    4. ')' → logprob: -2.572018623352051
    5. ']' → logprob: -3.822018623352051
    6. 'class' → logprob: -4.072018623352051
    7. '```' → logprob: -4.447018623352051
    8. '#' → logprob: -4.822018623352051
    9. '">' → logprob: -4.822018623352051
    10. '(' → logprob: -5.322018623352051

Token 380: ' pour' (ID: 1930)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.11262676864862442
    2. 'import' → logprob: -2.612626791000366
    3. 'from' → logprob: -4.862626552581787
    4. '
' → logprob: -4.987626552581787
    5. ' class' → logprob: -5.362626552581787
    6. '#' → logprob: -5.987626552581787
    7. ':' → logprob: -6.237626552581787
    8. '(
' → logprob: -6.237626552581787
    9. 'def' → logprob: -6.487626552581787
    10. '```' → logprob: -6.487626552581787

Token 381: ' gérer' (ID: 86786)
  Prédit: ' gérer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.8483285307884216
    2. ' effectuer' → logprob: -1.3483285903930664
    3. ' maintenir' → logprob: -2.5983285903930664
    4. ' faciliter' → logprob: -2.8483285903930664
    5. ' suivre' → logprob: -2.9733285903930664
    6. 'maint' → logprob: -3.4733285903930664
    7. ' compter' → logprob: -3.7233285903930664
    8. ' permettre' → logprob: -4.223328590393066
    9. ' faire' → logprob: -4.473328590393066
    10. ' pouvoir' → logprob: -5.223328590393066

Token 382: ' efficacement' (ID: 155449)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.09489976614713669
    2. ' la' → logprob: -3.0948996543884277
    3. ' efficacement' → logprob: -4.219899654388428
    4. ' l' → logprob: -4.594899654388428
    5. ' le' → logprob: -4.969899654388428
    6. 'les' → logprob: -4.969899654388428
    7. ' ' → logprob: -5.844899654388428
    8. ' au' → logprob: -7.344899654388428
    9. ' ' → logprob: -7.719899654388428
    10. 's' → logprob: -8.094900131225586

Token 383: '.
' (ID: 558)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.09913144260644913
    2. ' la' → logprob: -3.0991313457489014
    3. ' l' → logprob: -3.8491313457489014
    4. 'les' → logprob: -4.3491315841674805
    5. ' le' → logprob: -4.5991315841674805
    6. ' des' → logprob: -6.3491315841674805
    7. 's' → logprob: -7.3491315841674805
    8. ' ' → logprob: -7.3491315841674805
    9. 'la' → logprob: -7.7241315841674805
    10. '_' → logprob: -8.34913158416748

Token 384: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0481116846203804
    2. 'import' → logprob: -3.7981116771698
    3. ' class' → logprob: -5.048111915588379
    4. 'from' → logprob: -5.298111915588379
    5. '#' → logprob: -5.423111915588379
    6. 'def' → logprob: -5.673111915588379
    7. '```' → logprob: -6.048111915588379
    8. '
' → logprob: -6.798111915588379
    9. '_' → logprob: -7.298111915588379
    10. 'n' → logprob: -8.673111915588379

Token 385: ' -' (ID: 533)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.048288438469171524
    2. 'import' → logprob: -3.673288345336914
    3. 'def' → logprob: -4.923288345336914
    4. '```' → logprob: -5.173288345336914
    5. 'from' → logprob: -5.173288345336914
    6. ' class' → logprob: -6.423288345336914
    7. '
' → logprob: -7.048288345336914
    8. '#' → logprob: -7.798288345336914
    9. 'n' → logprob: -9.548288345336914
    10. '``' → logprob: -10.173288345336914

Token 386: ' Cependant' (ID: 74480)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7484989762306213
    2. 'from' → logprob: -0.7484989762306213
    3. 'def' → logprob: -3.3734989166259766
    4. 'import' → logprob: -4.123498916625977
    5. ' class' → logprob: -6.123498916625977
    6. '#' → logprob: -7.623498916625977
    7. ' from' → logprob: -7.873498916625977
    8. 'n' → logprob: -8.998498916625977
    9. '```' → logprob: -9.123498916625977
    10. ' def' → logprob: -9.873498916625977

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22389917075634003
    2. '#' → logprob: -2.7238991260528564
    3. ' on' → logprob: -3.0988991260528564
    4. ' ,' → logprob: -3.9738991260528564
    5. ' la' → logprob: -4.2238993644714355
    6. ' s' → logprob: -4.7238993644714355
    7. 'def' → logprob: -4.8488993644714355
    8. 'import' → logprob: -5.0988993644714355
    9. ' ' → logprob: -5.2238993644714355
    10. ' #' → logprob: -5.8488993644714355

Token 388: ' ici' (ID: 27994)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34680265188217163
    2. ' on' → logprob: -1.5968027114868164
    3. ' la' → logprob: -3.5968027114868164
    4. 'on' → logprob: -3.9718027114868164
    5. ' #' → logprob: -4.346802711486816
    6. 'def' → logprob: -4.596802711486816
    7. 'import' → logprob: -5.096802711486816
    8. ' ' → logprob: -5.721802711486816
    9. ' il' → logprob: -5.971802711486816
    10. ' s' → logprob: -6.846802711486816

Token 389: ' une' (ID: 2463)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7632160782814026
    2. ' on' → logprob: -0.7632160782814026
    3. 'on' → logprob: -2.888216018676758
    4. ' ,' → logprob: -5.763216018676758
    5. '#' → logprob: -6.013216018676758
    6. ' nous' → logprob: -6.138216018676758
    7. ' la' → logprob: -6.763216018676758
    8. 'nous' → logprob: -6.763216018676758
    9. 'def' → logprob: -8.513216018676758
    10. 'import' → logprob: -8.638216018676758

Token 390: ' méthode' (ID: 71490)
  Prédit: ' approche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approche' → logprob: -1.4311739206314087
    2. 'import' → logprob: -1.9311739206314087
    3. 'liste' → logprob: -2.056173801422119
    4. 'appro' → logprob: -2.431173801422119
    5. 'simple' → logprob: -2.556173801422119
    6. ' liste' → logprob: -2.931173801422119
    7. ' solution' → logprob: -3.056173801422119
    8. 'solution' → logprob: -3.431173801422119
    9. 'from' → logprob: -3.806173801422119
    10. ' simple' → logprob: -4.056173801422119

Token 391: ' plus' (ID: 2932)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simple' → logprob: -1.1334013938903809
    2. 'gl' → logprob: -1.3834013938903809
    3. ' simple' → logprob: -2.258401393890381
    4. ' gl' → logprob: -2.508401393890381
    5. ' naï' → logprob: -2.508401393890381
    6. 'na' → logprob: -2.633401393890381
    7. ' directe' → logprob: -4.008401393890381
    8. 'simpl' → logprob: -4.258401393890381
    9. ' naive' → logprob: -5.133401393890381
    10. ' basée' → logprob: -5.258401393890381

Token 392: ' simple' (ID: 4705)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simple' → logprob: -0.004773530177772045
    2. 'na' → logprob: -6.2547736167907715
    3. 'direct' → logprob: -6.5047736167907715
    4. ' simple' → logprob: -7.1297736167907715
    5. 'simpl' → logprob: -9.129773139953613
    6. 'python' → logprob: -9.254773139953613
    7. '```' → logprob: -9.379773139953613
    8. ' directe' → logprob: -9.754773139953613
    9. 'sim' → logprob: -10.004773139953613
    10. ' naï' → logprob: -10.754773139953613

Token 393: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.514169454574585
    2. ' s' → logprob: -1.764169454574585
    3. 'def' → logprob: -1.764169454574585
    4. 's' → logprob: -3.639169454574585
    5. ' :' → logprob: -4.514169692993164
    6. ' consiste' → logprob: -5.639169692993164
    7. ' est' → logprob: -5.764169692993164
    8. ' =' → logprob: -6.014169692993164
    9. '#' → logprob: -6.139169692993164
    10. ' def' → logprob: -6.639169692993164

Token 394: ' efficace' (ID: 54338)
  Prédit: ' directe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directe' → logprob: -0.5832986831665039
    2. 'direct' → logprob: -1.458298683166504
    3. 'gre' → logprob: -2.333298683166504
    4. ' intuitive' → logprob: -2.583298683166504
    5. ' naï' → logprob: -4.958298683166504
    6. 'int' → logprob: -5.083298683166504
    7. ' direct' → logprob: -5.333298683166504
    8. 'python' → logprob: -5.458298683166504
    9. 'gl' → logprob: -5.708298683166504
    10. 'na' → logprob: -6.333298683166504

Token 395: ' étant' (ID: 47869)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8043654561042786
    2. 's' → logprob: -1.4293653964996338
    3. 'def' → logprob: -2.429365396499634
    4. ':' → logprob: -2.679365396499634
    5. ' est' → logprob: -3.554365396499634
    6. '#' → logprob: -3.804365396499634
    7. ' =' → logprob: -4.054365634918213
    8. ' possible' → logprob: -4.304365634918213
    9. ' consiste' → logprob: -4.304365634918213
    10. 'n' → logprob: -4.429365634918213

Token 396: ' donné' (ID: 52079)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.1430844068527222
    2. 'de' → logprob: -1.5180844068527222
    3. 'une' → logprob: -1.6430844068527222
    4. ' possible' → logprob: -2.6430845260620117
    5. 's' → logprob: -2.7680845260620117
    6. ' de' → logprob: -3.5180845260620117
    7. 'd' → logprob: -3.6430845260620117
    8. 'plus' → logprob: -4.393084526062012
    9. 'import' → logprob: -4.768084526062012
    10. ' d' → logprob: -5.268084526062012

Token 397: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5149837732315063
    2. ' la' → logprob: -1.1399837732315063
    3. 'l' → logprob: -3.764983654022217
    4. ' que' → logprob: -3.889983654022217
    5. 'que' → logprob: -4.139983654022217
    6. 'le' → logprob: -4.639983654022217
    7. 'les' → logprob: -5.014983654022217
    8. ' l' → logprob: -5.889983654022217
    9. ' les' → logprob: -7.139983654022217
    10. 'qu' → logprob: -7.264983654022217

Token 398: ' contr' (ID: 6030)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.0890117809176445
    2. 'lim' → logprob: -3.7140116691589355
    3. ' taille' → logprob: -4.3390116691589355
    4. 'import' → logprob: -4.4640116691589355
    5. 'nature' → logprob: -4.7140116691589355
    6. 'long' → logprob: -4.9640116691589355
    7. ' nature' → logprob: -5.7140116691589355
    8. 'from' → logprob: -6.0890116691589355
    9. ' longueur' → logprob: -6.7140116691589355
    10. 'pet' → logprob: -6.7140116691589355

Token 399: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.009384511969983578
    2. 'aint' → logprob: -5.259384632110596
    3. 'a' → logprob: -6.259384632110596
    4. '#' → logprob: -7.009384632110596
    5. 'aine' → logprob: -7.759384632110596
    6. 'ain' → logprob: -8.134384155273438
    7. '```' → logprob: -8.759384155273438
    8. 'int' → logprob: -9.759384155273438
    9. 'ained' → logprob: -10.009384155273438
    10. 'aints' → logprob: -10.134384155273438

Token 400: ' :' (ID: 712)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.391379714012146
    2. ' de' → logprob: -1.391379714012146
    3. ' s' → logprob: -1.516379714012146
    4. 'import' → logprob: -2.6413798332214355
    5. ' d' → logprob: -2.8913798332214355
    6. '#' → logprob: -3.2663798332214355
    7. 'def' → logprob: -3.3913798332214355
    8. 'de' → logprob: -3.5163798332214355
    9. ' =' → logprob: -4.7663798332214355
    10. ' suivante' → logprob: -4.7663798332214355

Token 401: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8641508221626282
    2. ' s' → logprob: -1.8641507625579834
    3. 'n' → logprob: -1.9891507625579834
    4. ' n' → logprob: -2.2391507625579834
    5. ' def' → logprob: -2.9891507625579834
    6. '```' → logprob: -3.1141507625579834
    7. 's' → logprob: -3.2391507625579834
    8. 'from' → logprob: -3.4891507625579834
    9. 'import' → logprob: -5.1141510009765625
    10. ' from' → logprob: -5.2391510009765625

Token 402: ' méthode' (ID: 71490)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0790303945541382
    2. 'def' → logprob: -1.8290303945541382
    3. 'from' → logprob: -1.9540303945541382
    4. 's' → logprob: -2.4540305137634277
    5. ' def' → logprob: -2.7040305137634277
    6. ' from' → logprob: -2.9540305137634277
    7. 'n' → logprob: -3.4540305137634277
    8. ' n' → logprob: -3.9540305137634277
    9. ' taille' → logprob: -4.204030513763428
    10. '#' → logprob: -4.704030513763428

Token 403: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7079586982727051
    2. ' =' → logprob: -1.582958698272705
    3. ' suivante' → logprob: -2.707958698272705
    4. 'import' → logprob: -2.957958698272705
    5. '=' → logprob: -3.207958698272705
    6. 's' → logprob: -3.332958698272705
    7. ' s' → logprob: -3.832958698272705
    8. 'de' → logprob: -4.457958698272705
    9. '#' → logprob: -4.582958698272705
    10. '   ' → logprob: -4.582958698272705

Token 404: ' "' (ID: 392)
  Prédit: 'gre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gre' → logprob: -1.3772876262664795
    2. 'heap' → logprob: -1.8772876262664795
    3. ' greedy' → logprob: -2.0022876262664795
    4. '```' → logprob: -2.5022876262664795
    5. 'for' → logprob: -3.0022876262664795
    6. 'p' → logprob: -3.5022876262664795
    7. 'double' → logprob: -3.6272876262664795
    8. ' double' → logprob: -3.7522876262664795
    9. 'while' → logprob: -3.7522876262664795
    10. ' heap' → logprob: -3.8772876262664795

Token 405: 'gre' (ID: 9174)
  Prédit: 'gre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gre' → logprob: -0.5532239675521851
    2. 'double' → logprob: -2.5532240867614746
    3. 'd' → logprob: -3.3032240867614746
    4. 'two' → logprob: -3.5532240867614746
    5. 'p' → logprob: -3.6782240867614746
    6. 'min' → logprob: -3.6782240867614746
    7. 'fen' → logprob: -3.6782240867614746
    8. 'segment' → logprob: -3.8032240867614746
    9. 'priority' → logprob: -4.053224086761475
    10. 'for' → logprob: -4.178224086761475

Token 406: 'edy' (ID: 12442)
  Prédit: 'edy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edy' → logprob: -0.005129150580614805
    2. 'ed' → logprob: -5.755129337310791
    3. 'd' → logprob: -6.755129337310791
    4. 'dy' → logprob: -8.130128860473633
    5. 'ddy' → logprob: -8.755128860473633
    6. 'edi' → logprob: -9.005128860473633
    7. 'e' → logprob: -9.880128860473633
    8. 'di' → logprob: -10.505128860473633
    9. '```' → logprob: -10.505128860473633
    10. '#' → logprob: -10.755128860473633

Token 407: ' with' (ID: 483)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.35468563437461853
    2. '"' → logprob: -1.229685664176941
    3. ' approach' → logprob: -6.4796857833862305
    4. '_"' → logprob: -7.2296857833862305
    5. '_' → logprob: -7.7296857833862305
    6. 'e' → logprob: -7.9796857833862305
    7. ' ")' → logprob: -8.10468578338623
    8. ' "_' → logprob: -8.10468578338623
    9. '```' → logprob: -8.47968578338623
    10. '">' → logprob: -9.10468578338623

Token 408: ' index' (ID: 3472)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7681379914283752
    2. 'priority' → logprob: -2.0181379318237305
    3. ' priority' → logprob: -2.6431379318237305
    4. 'deque' → logprob: -3.3931379318237305
    5. 'pos' → logprob: -3.5181379318237305
    6. ' heap' → logprob: -3.8931379318237305
    7. 'index' → logprob: -3.8931379318237305
    8. 'window' → logprob: -3.8931379318237305
    9. 'fen' → logprob: -4.0181379318237305
    10. 'indices' → logprob: -4.1431379318237305

Token 409: ' scanning' (ID: 53387)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.094171166419983
    2. 's' → logprob: -1.344171166419983
    3. ' "' → logprob: -1.969171166419983
    4. '"' → logprob: -2.5941710472106934
    5. 'ing' → logprob: -2.8441710472106934
    6. ' "]' → logprob: -3.4691710472106934
    7. ' array' → logprob: -3.5941710472106934
    8. '_map' → logprob: -3.8441710472106934
    9. ' s' → logprob: -4.094171047210693
    10. '_array' → logprob: -4.344171047210693

Token 410: '".
' (ID: 26880)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5029927492141724
    2. ' "' → logprob: -1.1279927492141724
    3. ']"' → logprob: -3.502992630004883
    4. '"]' → logprob: -4.502992630004883
    5. ']' → logprob: -5.127992630004883
    6. ' "]' → logprob: -6.002992630004883
    7. '```' → logprob: -6.002992630004883
    8. 'for' → logprob: -6.127992630004883
    9. ' for' → logprob: -6.377992630004883
    10. 's' → logprob: -6.502992630004883

Token 411: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5594326257705688
    2. 'n' → logprob: -1.5594326257705688
    3. 'i' → logprob: -1.9344326257705688
    4. 'for' → logprob: -2.9344325065612793
    5. ' for' → logprob: -5.059432506561279
    6. 's' → logprob: -5.309432506561279
    7. '```' → logprob: -5.559432506561279
    8. 'from' → logprob: -6.434432506561279
    9. ' def' → logprob: -7.184432506561279
    10. '#' → logprob: -7.809432506561279

Token 412: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1866762340068817
    2. 'def' → logprob: -1.811676263809204
    3. 'i' → logprob: -5.311676025390625
    4. '```' → logprob: -6.436676025390625
    5. 'for' → logprob: -8.311676025390625
    6. 's' → logprob: -9.686676025390625
    7. 'from' → logprob: -11.186676025390625
    8. 'import' → logprob: -11.436676025390625
    9. ' def' → logprob: -11.686676025390625
    10. '
' → logprob: -11.811676025390625

Token 413: ' Rem' (ID: 6890)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5762951970100403
    2. 'def' → logprob: -0.8262951970100403
    3. '```' → logprob: -8.326294898986816
    4. 'i' → logprob: -9.576294898986816
    5. 'from' → logprob: -10.576294898986816
    6. ' def' → logprob: -12.451294898986816
    7. ' n' → logprob: -12.576294898986816
    8. 'for' → logprob: -12.701294898986816
    9. '
' → logprob: -12.826294898986816
    10. 'import' → logprob: -13.076294898986816

Token 414: 'arque' (ID: 167524)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.2938772439956665
    2. 'pl' → logprob: -2.293877124786377
    3. 'aining' → logprob: -2.668877124786377
    4. 'arque' → logprob: -2.793877124786377
    5. 'placement' → logprob: -5.168877124786377
    6. 'er' → logprob: -5.418877124786377
    7. 'place' → logprob: -5.918877124786377
    8. 'plac' → logprob: -6.168877124786377
    9. 'ar' → logprob: -6.293877124786377
    10. 'a' → logprob: -6.668877124786377

Token 415: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14888416230678558
    2. ' :' → logprob: -2.6488840579986572
    3. 's' → logprob: -2.8988840579986572
    4. ':
' → logprob: -5.773884296417236
    5. 'import' → logprob: -6.773884296417236
    6. 'def' → logprob: -6.773884296417236
    7. ' :
' → logprob: -6.773884296417236
    8. ' suivante' → logprob: -6.898884296417236
    9. '```' → logprob: -7.148884296417236
    10. '
' → logprob: -7.398884296417236

Token 416: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36545246839523315
    2. '#' → logprob: -1.240452527999878
    3. 'import' → logprob: -5.365452289581299
    4. 'for' → logprob: -5.365452289581299
    5. 'n' → logprob: -6.490452289581299
    6. 'i' → logprob: -6.865452289581299
    7. ' #' → logprob: -6.990452289581299
    8. 'from' → logprob: -7.240452289581299
    9. '```' → logprob: -7.240452289581299
    10. ' def' → logprob: -7.490452289581299

Token 417: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07203908264636993
    2. ' def' → logprob: -3.1970391273498535
    3. '#' → logprob: -4.5720391273498535
    4. 'n' → logprob: -4.9470391273498535
    5. 'for' → logprob: -5.4470391273498535
    6. ' for' → logprob: -6.6970391273498535
    7. ' n' → logprob: -6.6970391273498535
    8. 'import' → logprob: -7.1970391273498535
    9. ' 
' → logprob: -7.5720391273498535
    10. ' #' → logprob: -7.5720391273498535

Token 418: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016994323581457138
    2. ' def' → logprob: -4.266994476318359
    3. 'from' → logprob: -6.641994476318359
    4. 'n' → logprob: -7.266994476318359
    5. 'import' → logprob: -7.891994476318359
    6. ' n' → logprob: -8.39199447631836
    7. '#' → logprob: -9.26699447631836
    8. 'for' → logprob: -10.26699447631836
    9. ' from' → logprob: -11.01699447631836
    10. '
' → logprob: -11.01699447631836

Token 419: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06812447309494019
    2. ' peut' → logprob: -4.318124294281006
    3. ' def' → logprob: -4.318124294281006
    4. 'n' → logprob: -4.568124294281006
    5. ' continue' → logprob: -4.568124294281006
    6. 'continue' → logprob: -4.943124294281006
    7. ' n' → logprob: -5.818124294281006
    8. 'est' → logprob: -6.693124294281006
    9. 'import' → logprob: -7.068124294281006
    10. 'pe' → logprob: -7.443124294281006

Token 420: ' optimiser' (ID: 195777)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.6614058017730713
    2. 'contin' → logprob: -1.7864058017730713
    3. 'util' → logprob: -2.1614058017730713
    4. ' utiliser' → logprob: -3.0364058017730713
    5. 'faire' → logprob: -3.9114058017730713
    6. 'repr' → logprob: -3.9114058017730713
    7. ' simplement' → logprob: -4.536405563354492
    8. ' effectuer' → logprob: -4.661405563354492
    9. 'impl' → logprob: -4.786405563354492
    10. 'aj' → logprob: -4.911405563354492

Token 421: ' en' (ID: 469)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8898653984069824
    2. ' l' → logprob: -1.5148653984069824
    3. ' le' → logprob: -1.5148653984069824
    4. ' encore' → logprob: -3.1398653984069824
    5. '_' → logprob: -3.3898653984069824
    6. 'le' → logprob: -4.514865398406982
    7. 's' → logprob: -4.514865398406982
    8. ' s' → logprob: -5.014865398406982
    9. ' davantage' → logprob: -5.264865398406982
    10. 'la' → logprob: -5.639865398406982

Token 422: ' utilisant' (ID: 92474)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.5478053689002991
    2. ' parcour' → logprob: -2.2978053092956543
    3. 'continu' → logprob: -3.1728053092956543
    4. 'év' → logprob: -3.1728053092956543
    5. 'tr' → logprob: -3.6728053092956543
    6. ' utilisant' → logprob: -3.9228053092956543
    7. ' utiliser' → logprob: -4.047805309295654
    8. ' continu' → logprob: -4.172805309295654
    9. ' év' → logprob: -4.172805309295654
    10. ' continuer' → logprob: -4.172805309295654

Token 423: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3076423108577728
    2. ' une' → logprob: -1.9326423406600952
    3. 'un' → logprob: -2.5576422214508057
    4. 'une' → logprob: -3.9326422214508057
    5. ' des' → logprob: -4.932642459869385
    6. 'collections' → logprob: -5.057642459869385
    7. ' bis' → logprob: -6.682642459869385
    8. ' collections' → logprob: -6.807642459869385
    9. ' ' → logprob: -6.932642459869385
    10. 'la' → logprob: -7.057642459869385

Token 424: ' file' (ID: 1974)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.0194001197814941
    2. 'deque' → logprob: -1.7694001197814941
    3. ' heap' → logprob: -2.394400119781494
    4. 'priority' → logprob: -2.519400119781494
    5. 'from' → logprob: -2.644400119781494
    6. 'import' → logprob: -3.144400119781494
    7. ' priority' → logprob: -3.269400119781494
    8. 'min' → logprob: -3.644400119781494
    9. 'liste' → logprob: -3.894400119781494
    10. ' min' → logprob: -4.019400119781494

Token 425: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.42554140090942383
    2. 'deque' → logprob: -1.3005414009094238
    3. 'from' → logprob: -3.550541400909424
    4. 'd' → logprob: -3.925541400909424
    5. 'import' → logprob: -4.925541400909424
    6. ' deque' → logprob: -5.175541400909424
    7. 'de' → logprob: -5.300541400909424
    8. ' de' → logprob: -5.800541400909424
    9. 'queue' → logprob: -6.675541400909424
    10. ' from' → logprob: -7.175541400909424

Token 426: ''att' (ID: 50189)
  Prédit: ''att'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''att' → logprob: -0.08610846102237701
    2. 'e' → logprob: -2.711108446121216
    3. 'prior' → logprob: -5.586108684539795
    4. 'att' → logprob: -5.711108684539795
    5. '’att' → logprob: -6.211108684539795
    6. ''' → logprob: -7.086108684539795
    7. ' priorité' → logprob: -7.086108684539795
    8. ''abord' → logprob: -7.211108684539795
    9. 'import' → logprob: -7.461108684539795
    10. 'priority' → logprob: -7.461108684539795

Token 427: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.00014060820103622973
    2. '#' → logprob: -10.750140190124512
    3. 'ent' → logprob: -10.750140190124512
    4. 'e' → logprob: -10.875140190124512
    5. 'nte' → logprob: -11.000140190124512
    6. 'entes' → logprob: -11.500140190124512
    7. '```' → logprob: -12.000140190124512
    8. '<' → logprob: -12.375140190124512
    9. 'ete' → logprob: -12.625140190124512
    10. '"' → logprob: -12.750140190124512

Token 428: ' pour' (ID: 1930)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13380855321884155
    2. 'deque' → logprob: -2.3838086128234863
    3. 'import' → logprob: -4.258808612823486
    4. 'de' → logprob: -4.758808612823486
    5. ' from' → logprob: -5.258808612823486
    6. ',' → logprob: -7.008808612823486
    7. '.' → logprob: -7.258808612823486
    8. '[]' → logprob: -7.758808612823486
    9. '```' → logprob: -7.883808612823486
    10. '[' → logprob: -8.133808135986328

Token 429: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.3449489176273346
    2. 'import' → logprob: -2.2199490070343018
    3. ' parcour' → logprob: -3.0949490070343018
    4. ' les' → logprob: -3.9699490070343018
    5. ' stock' → logprob: -4.094948768615723
    6. 'from' → logprob: -4.344948768615723
    7. ' gérer' → logprob: -4.719948768615723
    8. 'les' → logprob: -4.719948768615723
    9. 'maint' → logprob: -4.719948768615723
    10. ' traiter' → logprob: -4.844948768615723

Token 430: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.07403963059186935
    2. ' caractère' → logprob: -2.9490396976470947
    3. ' lettre' → logprob: -4.824039459228516
    4. 'lett' → logprob: -5.199039459228516
    5. 'c' → logprob: -5.699039459228516
    6. ' caract' → logprob: -6.949039459228516
    7. 'char' → logprob: -7.699039459228516
    8. ' ' → logprob: -9.199039459228516
    9. ' car' → logprob: -9.324039459228516
    10. 'a' → logprob: -9.449039459228516

Token 431: ' pour' (ID: 1930)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7053990960121155
    2. 'def' → logprob: -1.5803990364074707
    3. 's' → logprob: -2.2053990364074707
    4. 'import' → logprob: -2.2053990364074707
    5. '
' → logprob: -4.205399036407471
    6. ' from' → logprob: -4.705399036407471
    7. '```' → logprob: -4.705399036407471
    8. ':' → logprob: -4.955399036407471
    9. 'a' → logprob: -5.205399036407471
    10. 'n' → logprob: -5.580399036407471

Token 432: ' retrouver' (ID: 53435)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.41668516397476196
    2. ' chaque' → logprob: -1.9166851043701172
    3. ' pouvoir' → logprob: -3.666685104370117
    4. ' conserver' → logprob: -4.041685104370117
    5. 'stock' → logprob: -4.166685104370117
    6. ' continuer' → logprob: -4.291685104370117
    7. 's' → logprob: -4.916685104370117
    8. 'p' → logprob: -5.166685104370117
    9. ' gérer' → logprob: -5.166685104370117
    10. ' éviter' → logprob: -5.291685104370117

Token 433: ' rapidement' (ID: 43157)
  Prédit: ' rapidement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rapidement' → logprob: -0.6709587574005127
    2. ' les' → logprob: -1.5459587574005127
    3. ' facilement' → logprob: -2.4209587574005127
    4. ' le' → logprob: -3.0459587574005127
    5. ' la' → logprob: -3.0459587574005127
    6. 'les' → logprob: -3.4209587574005127
    7. ' leurs' → logprob: -4.045958518981934
    8. 'le' → logprob: -4.295958518981934
    9. ' leur' → logprob: -4.545958518981934
    10. ' ses' → logprob: -5.170958518981934

Token 434: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8136134147644043
    2. ' les' → logprob: -1.3136134147644043
    3. 'le' → logprob: -1.9386134147644043
    4. ' le' → logprob: -2.1886134147644043
    5. ' la' → logprob: -4.063613414764404
    6. 'la' → logprob: -5.563613414764404
    7. ' leurs' → logprob: -5.813613414764404
    8. 'leurs' → logprob: -6.438613414764404
    9. ' ses' → logprob: -6.688613414764404
    10. 'leur' → logprob: -6.813613414764404

Token 435: ' position' (ID: 4010)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8175450563430786
    2. 'position' → logprob: -1.3175450563430786
    3. 'pro' → logprob: -1.6925450563430786
    4. ' plus' → logprob: -3.692544937133789
    5. ' position' → logprob: -3.817544937133789
    6. 'prem' → logprob: -4.442544937133789
    7. 'pos' → logprob: -4.567544937133789
    8. ' prochain' → logprob: -4.692544937133789
    9. ' prochaine' → logprob: -4.942544937133789
    10. 'min' → logprob: -5.192544937133789

Token 436: ' minimale' (ID: 143217)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7377691268920898
    2. 'def' → logprob: -1.3627691268920898
    3. 'import' → logprob: -2.11276912689209
    4. 'from' → logprob: -2.61276912689209
    5. '_' → logprob: -4.36276912689209
    6. 'de' → logprob: -4.73776912689209
    7. ' suivante' → logprob: -5.23776912689209
    8. '#' → logprob: -5.36276912689209
    9. ' de' → logprob: -5.48776912689209
    10. ',' → logprob: -5.73776912689209

Token 437: ' possible' (ID: 4149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5421205163002014
    2. 'from' → logprob: -1.6671204566955566
    3. 'n' → logprob: -2.6671204566955566
    4. 'import' → logprob: -2.7921204566955566
    5. 's' → logprob: -3.4171204566955566
    6. '
' → logprob: -4.417120456695557
    7. ' 
' → logprob: -4.792120456695557
    8. '[' → logprob: -5.542120456695557
    9. 'a' → logprob: -5.542120456695557
    10. '```' → logprob: -5.542120456695557

Token 438: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2847527861595154
    2. 'from' → logprob: -1.5347528457641602
    3. '```' → logprob: -4.40975284576416
    4. 'n' → logprob: -4.78475284576416
    5. 'import' → logprob: -5.15975284576416
    6. ' from' → logprob: -5.90975284576416
    7. 's' → logprob: -6.78475284576416
    8. ' def' → logprob: -7.65975284576416
    9. '\' → logprob: -8.28475284576416
    10. '[' → logprob: -8.53475284576416

Token 439: '#
' (ID: 11240)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6296989321708679
    2. 'n' → logprob: -1.2546989917755127
    3. 'def' → logprob: -2.8796989917755127
    4. 'import' → logprob: -3.5046989917755127
    5. ' from' → logprob: -3.8796989917755127
    6. 'i' → logprob: -4.004698753356934
    7. 'a' → logprob: -4.629698753356934
    8. 's' → logprob: -4.879698753356934
    9. '[' → logprob: -5.004698753356934
    10. ' 
' → logprob: -5.004698753356934

Token 440: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21820254623889923
    2. 'from' → logprob: -1.7182025909423828
    3. 'n' → logprob: -4.218202590942383
    4. '```' → logprob: -6.718202590942383
    5. 'import' → logprob: -7.468202590942383
    6. 'class' → logprob: -9.343202590942383
    7. 'k' → logprob: -10.718202590942383
    8. '
' → logprob: -11.593202590942383
    9. ' from' → logprob: -12.093202590942383
    10. 's' → logprob: -12.218202590942383

Token 441: ' Nous' (ID: 20193)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27031564712524414
    2. 'from' → logprob: -1.5203156471252441
    3. 'n' → logprob: -4.145315647125244
    4. 'import' → logprob: -6.270315647125244
    5. '```' → logprob: -7.770315647125244
    6. 'class' → logprob: -9.770315170288086
    7. 'N' → logprob: -12.645315170288086
    8. ' from' → logprob: -13.020315170288086
    9. '#' → logprob: -14.395315170288086
    10. '``' → logprob: -14.395315170288086

Token 442: ' impl' (ID: 15443)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012938085943460464
    2. ' def' → logprob: -4.512938022613525
    3. 'import' → logprob: -7.262938022613525
    4. 'from' → logprob: -7.387938022613525
    5. '```' → logprob: -8.762938499450684
    6. ' n' → logprob: -9.387938499450684
    7. 'n' → logprob: -9.762938499450684
    8. ':' → logprob: -10.012938499450684
    9. ' déf' → logprob: -10.137938499450684
    10. '#' → logprob: -10.512938499450684

Token 443: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.02813555672764778
    2. 'ement' → logprob: -3.7781355381011963
    3. 'éments' → logprob: -6.528135776519775
    4. 'ements' → logprob: -6.778135776519775
    5. 'def' → logprob: -6.903135776519775
    6. 'é' → logprob: -7.028135776519775
    7. 'import' → logprob: -9.028135299682617
    8. 'icit' → logprob: -9.153135299682617
    9. 'iments' → logprob: -11.028135299682617
    10. '#' → logprob: -11.153135299682617

Token 444: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.00974227860569954
    2. 'er' → logprob: -5.259742259979248
    3. 'ent' → logprob: -6.134742259979248
    4. 'tons' → logprob: -7.259742259979248
    5. 'e' → logprob: -7.634742259979248
    6. 't' → logprob: -7.634742259979248
    7. 'ont' → logprob: -8.509742736816406
    8. 'def' → logprob: -9.009742736816406
    9. 'on' → logprob: -9.634742736816406
    10. 'ents' → logprob: -9.634742736816406

Token 445: ' cette' (ID: 7696)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06049805507063866
    2. ' la' → logprob: -3.685497999191284
    3. ' def' → logprob: -4.060498237609863
    4. '```' → logprob: -4.435498237609863
    5. ':' → logprob: -6.435498237609863
    6. ' =' → logprob: -6.685498237609863
    7. 'class' → logprob: -7.435498237609863
    8. ' une' → logprob: -8.060498237609863
    9. ' le' → logprob: -8.810498237609863
    10. 'import' → logprob: -9.310498237609863

Token 446: ' approche' (ID: 102373)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5514771342277527
    2. 'def' → logprob: -0.9264771342277527
    3. ':' → logprob: -4.676476955413818
    4. ' class' → logprob: -5.426476955413818
    5. 'import' → logprob: -5.676476955413818
    6. ' code' → logprob: -6.051476955413818
    7. ' import' → logprob: -6.801476955413818
    8. ' solution' → logprob: -6.926476955413818
    9. 'from' → logprob: -7.051476955413818
    10. ' :' → logprob: -7.301476955413818

Token 447: ' avec' (ID: 3937)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.013106346130371
    2. 'def' → logprob: -1.513106346130371
    3. ':
' → logprob: -1.888106346130371
    4. ':' → logprob: -2.013106346130371
    5. 'import' → logprob: -3.263106346130371
    6. '
' → logprob: -3.388106346130371
    7. 'from' → logprob: -3.638106346130371
    8. 'n' → logprob: -4.013106346130371
    9. ':

' → logprob: -4.638106346130371
    10. 's' → logprob: -6.513106346130371

Token 448: ' une' (ID: 2463)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1011826992034912
    2. 'import' → logprob: -1.6011826992034912
    3. 'une' → logprob: -1.9761826992034912
    4. 'collections' → logprob: -2.601182699203491
    5. ' Python' → logprob: -2.976182699203491
    6. 'python' → logprob: -2.976182699203491
    7. 'Python' → logprob: -2.976182699203491
    8. 'un' → logprob: -3.101182699203491
    9. ' une' → logprob: -3.851182699203491
    10. 'def' → logprob: -4.22618293762207

Token 449: ' liste' (ID: 31719)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.007502152118831873
    2. '```' → logprob: -5.50750207901001
    3. 'def' → logprob: -6.38250207901001
    4. 'import' → logprob: -6.38250207901001
    5. ' from' → logprob: -10.507502555847168
    6. 'python' → logprob: -12.882502555847168
    7. 'de' → logprob: -13.382502555847168
    8. 'deque' → logprob: -13.632502555847168
    9. '
' → logprob: -13.882502555847168
    10. '``' → logprob: -14.132502555847168

Token 450: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9186597466468811
    2. '```' → logprob: -1.6686596870422363
    3. 's' → logprob: -1.9186596870422363
    4. 'de' → logprob: -2.1686596870422363
    5. 'positions' → logprob: -2.9186596870422363
    6. 'import' → logprob: -2.9186596870422363
    7. 'def' → logprob: -4.293659687042236
    8. '_positions' → logprob: -5.043659687042236
    9. 'des' → logprob: -5.418659687042236
    10. 'd' → logprob: -5.543659687042236

Token 451: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.28949105739593506
    2. 'de' → logprob: -2.0394911766052246
    3. 'queues' → logprob: -2.6644911766052246
    4. 'deque' → logprob: -3.4144911766052246
    5. 'pos' → logprob: -4.664491176605225
    6. 'import' → logprob: -6.539491176605225
    7. ' listes' → logprob: -6.539491176605225
    8. 'indices' → logprob: -6.789491176605225
    9. '```' → logprob: -6.914491176605225
    10. 'list' → logprob: -7.164491176605225

Token 452: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2301991879940033
    2. 'import' → logprob: -2.605199098587036
    3. 'positions' → logprob: -2.730199098587036
    4. 's' → logprob: -4.230199337005615
    5. 'def' → logprob: -4.230199337005615
    6. '```' → logprob: -5.230199337005615
    7. '_positions' → logprob: -5.480199337005615
    8. 'de' → logprob: -5.480199337005615
    9. ' from' → logprob: -5.605199337005615
    10. ':' → logprob: -5.980199337005615

Token 453: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.09421596676111221
    2. 'car' → logprob: -3.4692158699035645
    3. 'cha' → logprob: -3.5942158699035645
    4. 'positions' → logprob: -4.8442158699035645
    5. 'ch' → logprob: -5.2192158699035645
    6. 'each' → logprob: -5.4692158699035645
    7. 'occ' → logprob: -6.3442158699035645
    8. 'collections' → logprob: -6.7192158699035645
    9. 'poss' → logprob: -6.9692158699035645
    10. ' caractères' → logprob: -6.9692158699035645

Token 454: ' lettre' (ID: 68013)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.005640789866447449
    2. ' caractère' → logprob: -5.255640983581543
    3. 'char' → logprob: -8.130640983581543
    4. '#' → logprob: -10.880640983581543
    5. '```' → logprob: -10.880640983581543
    6. 'c' → logprob: -11.255640983581543
    7. 'ch' → logprob: -11.255640983581543
    8. ' caractères' → logprob: -11.505640983581543
    9. ' caract' → logprob: -11.630640983581543
    10. 'lett' → logprob: -11.630640983581543

Token 455: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04002774506807327
    2. 'import' → logprob: -3.7900278568267822
    3. 'positions' → logprob: -4.540027618408203
    4. 'def' → logprob: -5.915027618408203
    5. 's' → logprob: -6.540027618408203
    6. ' from' → logprob: -7.665027618408203
    7. 'de' → logprob: -8.165027618408203
    8. '```' → logprob: -8.165027618408203
    9. 'n' → logprob: -8.415027618408203
    10. '#' → logprob: -8.790027618408203

Token 456: ' puis' (ID: 18766)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.727756679058075
    2. 'from' → logprob: -0.852756679058075
    3. 'positions' → logprob: -3.1027567386627197
    4. 'de' → logprob: -4.852756500244141
    5. '```' → logprob: -4.852756500244141
    6. ' positions' → logprob: -5.102756500244141
    7. ' import' → logprob: -5.227756500244141
    8. ' de' → logprob: -5.477756500244141
    9. ' from' → logprob: -5.477756500244141
    10. 's' → logprob: -5.852756500244141

Token 457: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.20498134195804596
    2. 'une' → logprob: -2.3299813270568848
    3. 'un' → logprob: -3.5799813270568848
    4. ' une' → logprob: -4.079981327056885
    5. ' un' → logprob: -4.704981327056885
    6. '#' → logprob: -4.704981327056885
    7. 'en' → logprob: -5.079981327056885
    8. 'from' → logprob: -5.704981327056885
    9. ' import' → logprob: -6.079981327056885
    10. '```' → logprob: -6.079981327056885

Token 458: ' essa' (ID: 19417)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.3090089559555054
    2. 'import' → logprob: -1.4340089559555054
    3. 'util' → logprob: -1.8090089559555054
    4. ' continue' → logprob: -3.184009075164795
    5. 'proc' → logprob: -3.434009075164795
    6. 'from' → logprob: -3.434009075164795
    7. ' utilise' → logprob: -3.434009075164795
    8. 's' → logprob: -4.059009075164795
    9. 'impl' → logprob: -4.059009075164795
    10. 'p' → logprob: -4.059009075164795

Token 459: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0015525942435488105
    2. 'y' → logprob: -6.876552581787109
    3. 'ye' → logprob: -7.876552581787109
    4. 'aye' → logprob: -9.75155258178711
    5. 'ime' → logprob: -9.87655258178711
    6. 'iera' → logprob: -11.75155258178711
    7. 'uie' → logprob: -12.25155258178711
    8. 'iye' → logprob: -12.87655258178711
    9. '#' → logprob: -13.00155258178711
    10. '
' → logprob: -13.50155258178711

Token 460: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3670116364955902
    2. ':' → logprob: -2.242011547088623
    3. 'de' → logprob: -2.367011547088623
    4. ' d' → logprob: -2.742011547088623
    5. '   ' → logprob: -3.867011547088623
    6. 'd' → logprob: -4.492011547088623
    7. '    ' → logprob: -5.617011547088623
    8. 'import' → logprob: -5.617011547088623
    9. ':
' → logprob: -7.367011547088623
    10. '_' → logprob: -7.617011547088623

Token 461: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.32344406843185425
    2. 'placer' → logprob: -1.573444128036499
    3. ''utiliser' → logprob: -4.69844388961792
    4. ''effect' → logprob: -4.69844388961792
    5. 'é' → logprob: -5.07344388961792
    6. 'er' → logprob: -5.19844388961792
    7. 'dé' → logprob: -5.44844388961792
    8. 'effect' → logprob: -6.07344388961792
    9. ''é' → logprob: -6.07344388961792
    10. ' déplacer' → logprob: -6.19844388961792

Token 462: 'attr' (ID: 6035)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.9413310885429382
    2. 'util' → logprob: -1.441331148147583
    3. 'tr' → logprob: -1.566331148147583
    4. 'dé' → logprob: -3.066331148147583
    5. 'prendre' → logprob: -3.316331148147583
    6. ' utiliser' → logprob: -4.691330909729004
    7. 'effect' → logprob: -4.816330909729004
    8. 'pop' → logprob: -5.191330909729004
    9. 'faire' → logprob: -5.316330909729004
    10. 'les' → logprob: -5.316330909729004

Token 463: 'aper' (ID: 3831)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.48944926261901855
    2. 'iper' → logprob: -0.9894492626190186
    3. 'p' → logprob: -4.614449501037598
    4. 'pper' → logprob: -6.614449501037598
    5. '   ' → logprob: -7.614449501037598
    6. 'iner' → logprob: -7.739449501037598
    7. 'aper' → logprob: -7.989449501037598
    8. 'eper' → logprob: -8.114449501037598
    9. 'ip' → logprob: -8.239449501037598
    10. 'i' → logprob: -8.364449501037598

Token 464: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6412138342857361
    2. ' le' → logprob: -0.8912138342857361
    3. 'le' → logprob: -3.391213893890381
    4. ' les' → logprob: -4.516213893890381
    5. '_le' → logprob: -5.516213893890381
    6. 'la' → logprob: -5.641213893890381
    7. ' ' → logprob: -5.891213893890381
    8. ' chaque' → logprob: -6.016213893890381
    9. ' l' → logprob: -6.391213893890381
    10. 's' → logprob: -7.641213893890381

Token 465: ' premier' (ID: 15506)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8912664651870728
    2. ' plus' → logprob: -2.016266345977783
    3. ' premier' → logprob: -2.141266345977783
    4. ' prochain' → logprob: -2.141266345977783
    5. 'prem' → logprob: -2.516266345977783
    6. 'pro' → logprob: -2.641266345977783
    7. 'min' → logprob: -4.266266345977783
    8. 'next' → logprob: -4.391266345977783
    9. ' next' → logprob: -4.391266345977783
    10. 'car' → logprob: -4.516266345977783

Token 466: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.0127170085906982
    2. ' caractère' → logprob: -1.5127170085906982
    3. 'indice' → logprob: -1.7627170085906982
    4. 'pos' → logprob: -3.2627170085906982
    5. ' caract' → logprob: -3.5127170085906982
    6. ' index' → logprob: -3.6377170085906982
    7. 'index' → logprob: -3.7627170085906982
    8. 'occ' → logprob: -3.7627170085906982
    9. 'élé' → logprob: -3.8877170085906982
    10. ' car' → logprob: -4.262717247009277

Token 467: ' le' (ID: 505)
  Prédit: ' disponible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' disponible' → logprob: -1.4987510442733765
    2. 'possible' → logprob: -1.4987510442733765
    3. 's' → logprob: -1.7487510442733765
    4. 'import' → logprob: -2.498751163482666
    5. ' possible' → logprob: -3.248751163482666
    6. 'de' → logprob: -3.623751163482666
    7. 'from' → logprob: -3.998751163482666
    8. ' à' → logprob: -3.998751163482666
    9. ']' → logprob: -4.373751163482666
    10. 'available' → logprob: -4.373751163482666

Token 468: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.13246768712997437
    2. ' plus' → logprob: -2.507467746734619
    3. 'quel' → logprob: -4.507467746734619
    4. 't' → logprob: -5.007467746734619
    5. 'x' → logprob: -5.257467746734619
    6. 'gal' → logprob: -5.507467746734619
    7. 'ft' → logprob: -5.507467746734619
    8. 's' → logprob: -5.632467746734619
    9. '_plus' → logprob: -6.382467746734619
    10. '+' → logprob: -6.882467746734619

Token 469: ' proche' (ID: 61089)
  Prédit: ' petit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' petit' → logprob: -0.09573771059513092
    2. 'pet' → logprob: -2.5957376956939697
    3. ' à' → logprob: -5.095737934112549
    4. ' proche' → logprob: -5.470737934112549
    5. 'à' → logprob: -5.970737934112549
    6. 'pro' → logprob: -7.095737934112549
    7. ' small' → logprob: -7.345737934112549
    8. 'small' → logprob: -7.595737934112549
    9. '_small' → logprob: -8.22073745727539
    10. 'min' → logprob: -8.47073745727539

Token 470: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.9896088242530823
    2. 'from' → logprob: -1.4896087646484375
    3. 'import' → logprob: -2.3646087646484375
    4. ' possible' → logprob: -2.3646087646484375
    5. 'de' → logprob: -2.8646087646484375
    6. '```' → logprob: -3.2396087646484375
    7. ',' → logprob: -3.9896087646484375
    8. 's' → logprob: -3.9896087646484375
    9. ':' → logprob: -4.7396087646484375
    10. 'def' → logprob: -5.2396087646484375

Token 471: '.

' (ID: 364)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5967801213264465
    2. 'def' → logprob: -1.8467800617218018
    3. 'import' → logprob: -2.3467800617218018
    4. '```' → logprob: -2.3467800617218018
    5. 's' → logprob: -3.0967800617218018
    6. ':
' → logprob: -4.471780300140381
    7. ':' → logprob: -4.721780300140381
    8. 'de' → logprob: -5.096780300140381
    9. 'positions' → logprob: -5.221780300140381
    10. '
' → logprob: -5.221780300140381

Token 472: 'import' (ID: 561)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.09049422293901443
    2. 'def' → logprob: -2.590494155883789
    3. 'import' → logprob: -5.090494155883789
    4. 'n' → logprob: -5.340494155883789
    5. '```' → logprob: -7.465494155883789
    6. 's' → logprob: -11.965494155883789
    7. 'class' → logprob: -12.340494155883789
    8. ' from' → logprob: -12.840494155883789
    9. 'letters' → logprob: -14.590494155883789
    10. '#' → logprob: -14.715494155883789

Token 473: ' sys' (ID: 12228)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.010419572703540325
    2. 'sys' → logprob: -4.7604193687438965
    3. ' collections' → logprob: -6.7604193687438965
    4. 'heap' → logprob: -7.7604193687438965
    5. ' sys' → logprob: -9.010419845581055
    6. 'bis' → logprob: -9.260419845581055
    7. ' heap' → logprob: -13.885419845581055
    8. ' bis' → logprob: -16.385419845581055
    9. 'collection' → logprob: -16.885419845581055
    10. 'string' → logprob: -17.760419845581055

Token 474: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2766965329647064
    2. 'import' → logprob: -1.5266965627670288
    3. 'from' → logprob: -3.9016964435577393
    4. 'sys' → logprob: -6.526696681976318
    5. 'input' → logprob: -6.776696681976318
    6. '

' → logprob: -7.151696681976318
    7. '
' → logprob: -8.52669620513916
    8. 's' → logprob: -8.77669620513916
    9. 'data' → logprob: -9.27669620513916
    10. '' → logprob: -9.40169620513916

Token 475: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.482817679643631
    2. 'import' → logprob: -0.9828176498413086
    3. 'from' → logprob: -4.982817649841309
    4. 'sys' → logprob: -6.482817649841309
    5. 'def' → logprob: -8.357817649841309
    6. 'n' → logprob: -10.607817649841309
    7. 's' → logprob: -10.607817649841309
    8. ' input' → logprob: -10.732817649841309
    9. 'read' → logprob: -12.232817649841309
    10. '_input' → logprob: -12.482817649841309

Token 476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3557897210121155
    2. ' =' → logprob: -1.7307896614074707
    3. '()' → logprob: -2.1057896614074707
    4. '().' → logprob: -8.480790138244629
    5. '.' → logprob: -9.855790138244629
    6. '.readline' → logprob: -10.355790138244629
    7. '=sys' → logprob: -10.605790138244629
    8. '="""' → logprob: -10.730790138244629
    9. '.=' → logprob: -10.855790138244629
    10. '=[]' → logprob: -11.480790138244629

Token 477: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002478273818269372
    2. ' sys' → logprob: -6.002478122711182
    3. '=sys' → logprob: -13.50247859954834
    4. 'input' → logprob: -13.75247859954834
    5. '	sys' → logprob: -16.502477645874023
    6. '(sys' → logprob: -18.002477645874023
    7. 'lambda' → logprob: -19.752477645874023
    8. ' input' → logprob: -20.252477645874023
    9. 'stdin' → logprob: -21.127477645874023
    10. '_sys' → logprob: -21.502477645874023

Token 478: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.001689462224021554
    2. '.readline' → logprob: -6.876689434051514
    3. '.stdout' → logprob: -7.376689434051514
    4. '.' → logprob: -11.376689910888672
    5. '.std' → logprob: -12.126689910888672
    6. 'stdin' → logprob: -12.376689910888672
    7. '._' → logprob: -12.876689910888672
    8. ' .' → logprob: -12.876689910888672
    9. '.next' → logprob: -13.876689910888672
    10. '.setdefault' → logprob: -14.251689910888672

Token 479: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.017423074692487717
    2. 'read' → logprob: -4.142423152923584
    3. 'import' → logprob: -7.642423152923584
    4. 'buffer' → logprob: -7.892423152923584
    5. 'input' → logprob: -8.392422676086426
    6. '.read' → logprob: -9.142422676086426
    7. 'stdin' → logprob: -9.642422676086426
    8. 'reader' → logprob: -10.267422676086426
    9. '_read' → logprob: -10.892422676086426
    10. '=input' → logprob: -11.017422676086426

Token 480: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24456144869327545
    2. 'def' → logprob: -1.7445614337921143
    3. 'from' → logprob: -3.4945614337921143
    4. '
' → logprob: -4.994561672210693
    5. 's' → logprob: -5.744561672210693
    6. 'k' → logprob: -6.369561672210693
    7. 'class' → logprob: -9.869561195373535
    8. 'import' → logprob: -10.244561195373535
    9. '

' → logprob: -10.494561195373535
    10. '  
' → logprob: -10.744561195373535

Token 481: 'def' (ID: 1314)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8034221529960632
    2. 'n' → logprob: -1.303422212600708
    3. 'def' → logprob: -1.303422212600708
    4. 's' → logprob: -4.803421974182129
    5. 'k' → logprob: -7.303421974182129
    6. 'import' → logprob: -9.678421974182129
    7. 'class' → logprob: -9.928421974182129
    8. '```' → logprob: -11.678421974182129
    9. 'N' → logprob: -12.803421974182129
    10. ' from' → logprob: -13.053421974182129

Token 482: ' main' (ID: 2758)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.7340990900993347
    2. ' smallest' → logprob: -2.1090991497039795
    3. 'min' → logprob: -2.2340991497039795
    4. 'small' → logprob: -2.3590991497039795
    5. 'swap' → logprob: -2.7340991497039795
    6. 'lex' → logprob: -3.3590991497039795
    7. 'sw' → logprob: -3.3590991497039795
    8. 'main' → logprob: -3.6090991497039795
    9. 'minimal' → logprob: -4.4840989112854
    10. ' solve' → logprob: -4.4840989112854

Token 483: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00047261794679798186
    2. '():
' → logprob: -7.750472545623779
    3. ' ():' → logprob: -10.625473022460938
    4. '()' → logprob: -11.000473022460938
    5. '(' → logprob: -14.000473022460938
    6. '():
' → logprob: -16.625473022460938
    7. '():

' → logprob: -18.000473022460938
    8. '(":' → logprob: -18.125473022460938
    9. ' ()' → logprob: -18.500473022460938
    10. '().' → logprob: -18.625473022460938

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28504928946495056
    2. 'n' → logprob: -1.785049319267273
    3. ' n' → logprob: -2.6600492000579834
    4. ' s' → logprob: -4.9100494384765625
    5. 's' → logprob: -6.2850494384765625
    6. '	n' → logprob: -7.1600494384765625
    7. '   ' → logprob: -9.660049438476562
    8. 'k' → logprob: -9.785049438476562
    9. '```' → logprob: -10.035049438476562
    10. '(n' → logprob: -10.535049438476562

Token 485: ' s' (ID: 265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44279196858406067
    2. ' n' → logprob: -1.4427919387817383
    3. '   ' → logprob: -2.1927919387817383
    4. 's' (adapté à ' s') → logprob: -4.942791938781738
    5. ' s' → logprob: -6.317791938781738
    6. 'k' → logprob: -7.317791938781738
    7. '	n' → logprob: -8.567791938781738
    8. ' k' → logprob: -9.692791938781738
    9. ' ' → logprob: -10.442791938781738
    10. '	s' → logprob: -13.192791938781738

Token 486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34896478056907654
    2. '=' → logprob: -1.223964810371399
    3. '   ' → logprob: -7.723964691162109
    4. ' ' → logprob: -9.84896469116211
    5. '=input' → logprob: -12.22396469116211
    6. '=int' → logprob: -12.59896469116211
    7. ',' → logprob: -12.97396469116211
    8. ' =
' → logprob: -13.22396469116211
    9. '  ' → logprob: -13.22396469116211
    10. '=list' → logprob: -13.59896469116211

Token 487: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09522280842065811
    2. 'list' → logprob: -2.8452227115631104
    3. ' input' → logprob: -3.4702227115631104
    4. ' list' → logprob: -6.4702229499816895
    5. 'sys' → logprob: -10.220222473144531
    6. 's' → logprob: -11.595222473144531
    7. ' sys' → logprob: -13.095222473144531
    8. 'str' → logprob: -15.095222473144531
    9. ' s' → logprob: -15.345222473144531
    10. '(input' → logprob: -15.720222473144531

Token 488: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.644463479053229e-05
    2. '(sys' → logprob: -10.250046730041504
    3. '(' → logprob: -11.750046730041504
    4. '(str' → logprob: -12.875046730041504
    5. 'input' → logprob: -15.000046730041504
    6. ' (' → logprob: -16.750045776367188
    7. '(map' → logprob: -17.000045776367188
    8. '=input' → logprob: -17.875045776367188
    9. '(stdin' → logprob: -19.000045776367188
    10. '(
' → logprob: -19.125045776367188

Token 489: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.4418171455617994e-05
    2. '()' → logprob: -10.250044822692871
    3. '())' → logprob: -11.625044822692871
    4. '()[' → logprob: -19.375043869018555
    5. ' ().' → logprob: -19.625043869018555
    6. '(' → logprob: -19.625043869018555
    7. '())
' → logprob: -19.750043869018555
    8. '()
' → logprob: -19.750043869018555
    9. '.strip' → logprob: -21.125043869018555
    10. '(strip' → logprob: -21.250043869018555

Token 490: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.01419112179428339
    2. 'rstrip' → logprob: -4.264191150665283
    3. 'read' → logprob: -10.514190673828125
    4. ' strip' → logprob: -15.264190673828125
    5. 'str' → logprob: -16.389190673828125
    6. '_strip' → logprob: -16.764190673828125
    7. 'r' → logprob: -17.139190673828125
    8. 'rst' → logprob: -17.514190673828125
    9. 'decode' → logprob: -18.014190673828125
    10. '-strip' → logprob: -18.139190673828125

Token 491: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019282266497612
    2. '())
' → logprob: -4.019282341003418
    3. '()' → logprob: -7.019282341003418
    4. ')' → logprob: -8.394282341003418
    5. '()
' → logprob: -12.269282341003418
    6. '(' → logprob: -13.019282341003418
    7. '())
' → logprob: -13.394282341003418
    8. ')
' → logprob: -13.894282341003418
    9. '('' → logprob: -14.019282341003418
    10. '())

' → logprob: -15.144282341003418

Token 492: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10084747523069382
    2. '   ' → logprob: -2.7258474826812744
    3. ' k' → logprob: -4.225847244262695
    4. '	k' → logprob: -4.350847244262695
    5. 'n' → logprob: -6.100847244262695
    6. ' n' → logprob: -8.475847244262695
    7. ',k' → logprob: -8.475847244262695
    8. '	n' → logprob: -8.975847244262695
    9. '_k' → logprob: -10.100847244262695
    10. '
' → logprob: -10.850847244262695

Token 493: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -4.596781946020201e-05
    2. 'n' → logprob: -10.000045776367188
    3. ' k' → logprob: -15.125045776367188
    4. '   ' → logprob: -16.125045776367188
    5. 'from' → logprob: -17.000045776367188
    6. 'import' → logprob: -17.250045776367188
    7. '
' → logprob: -17.750045776367188
    8. 'K' → logprob: -17.750045776367188
    9. '	k' → logprob: -18.000045776367188
    10. '_k' → logprob: -18.625045776367188

Token 494: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16122488677501678
    2. '=' → logprob: -1.9112248420715332
    3. '=int' → logprob: -6.911224842071533
    4. ',' → logprob: -13.161225318908691
    5. ' ' → logprob: -13.911225318908691
    6. 'int' → logprob: -16.036224365234375
    7. ' ' → logprob: -16.036224365234375
    8. ' =
' → logprob: -16.536224365234375
    9. '=input' → logprob: -16.536224365234375
    10. ')' → logprob: -16.661224365234375

Token 495: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.8624639324116288e-06
    2. ' int' → logprob: -13.250001907348633
    3. '	int' → logprob: -22.375001907348633
    4. '   ' → logprob: -23.500001907348633
    5. '[int' → logprob: -23.625001907348633
    6. '=int' → logprob: -24.125001907348633
    7. '  ' → logprob: -24.250001907348633
    8. '(int' → logprob: -24.625001907348633
    9. ' ' → logprob: -25.375001907348633
    10. '
' → logprob: -26.000001907348633

Token 496: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00016039233014453202
    2. '(' → logprob: -9.000160217285156
    3. 'input' → logprob: -10.250160217285156
    4. '()' → logprob: -14.250160217285156
    5. ' input' → logprob: -14.750160217285156
    6. ' (' → logprob: -15.125160217285156
    7. '=input' → logprob: -16.125160217285156
    8. '(
' → logprob: -16.875160217285156
    9. ',input' → logprob: -17.750160217285156
    10. '	input' → logprob: -18.125160217285156

Token 497: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002841133624315262
    2. '()' → logprob: -6.252840995788574
    3. '().' → logprob: -7.002840995788574
    4. '())
' → logprob: -13.252840995788574
    5. ' ())' → logprob: -14.627840995788574
    6. '();)' → logprob: -15.377840995788574
    7. '()
' → logprob: -15.877840995788574
    8. ')' → logprob: -16.50284194946289
    9. '()))' → logprob: -16.75284194946289
    10. '()]' → logprob: -17.00284194946289

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09318432211875916
    2. 'n' → logprob: -2.843184232711792
    3. 'from' → logprob: -3.843184232711792
    4. ' n' → logprob: -6.218184471130371
    5. 'import' → logprob: -6.218184471130371
    6. 'pos' → logprob: -6.343184471130371
    7. 'positions' → logprob: -6.593184471130371
    8. ' from' → logprob: -6.843184471130371
    9. '
' → logprob: -7.343184471130371
    10. '    
' → logprob: -8.593184471130371

Token 499: ' n' (ID: 297)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3260427713394165
    2. 'n' (adapté à ' n') → logprob: -1.8260427713394165
    3. 'pos' → logprob: -2.326042652130127
    4. 'positions' → logprob: -4.326042652130127
    5. 'import' → logprob: -5.076042652130127
    6. '   ' → logprob: -11.826043128967285
    7. ' from' → logprob: -11.951043128967285
    8. 'position' → logprob: -12.451043128967285
    9. ' n' → logprob: -12.951043128967285
    10. 'npos' → logprob: -13.076043128967285

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023346781730652
    2. '=' → logprob: -1.910233497619629
    3. '=len' → logprob: -11.785233497619629
    4. '=int' → logprob: -13.535233497619629
    5. '=s' → logprob: -15.160233497619629
    6. '=k' → logprob: -16.785232543945312
    7. '=size' → logprob: -17.285232543945312
    8. ' =
' → logprob: -17.410232543945312
    9. '=n' → logprob: -17.535232543945312
    10. '   ' → logprob: -17.660232543945312

Token 501: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6931955814361572
    2. ' len' → logprob: -0.6931955814361572
    3. '(len' → logprob: -9.943195343017578
    4. '=len' → logprob: -15.443195343017578
    5. '   ' → logprob: -17.318195343017578
    6. '	len' → logprob: -17.818195343017578
    7. '[len' → logprob: -18.193195343017578
    8. ' ' → logprob: -19.318195343017578
    9. ' ' → logprob: -19.943195343017578
    10. ',len' → logprob: -19.943195343017578

Token 502: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.034592388459714e-06
    2. 's' → logprob: -12.125005722045898
    3. '(' → logprob: -14.375005722045898
    4. ' (' → logprob: -19.2500057220459
    5. '(
' → logprob: -19.3750057220459
    6. ')' → logprob: -21.6250057220459
    7. '```' → logprob: -22.2500057220459
    8. '(S' → logprob: -23.2500057220459
    9. 'S' → logprob: -23.3750057220459
    10. '_s' → logprob: -23.7500057220459

Token 503: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038077641278505325
    2. ')
' → logprob: -3.2880775928497314
    3. '   ' → logprob: -10.288077354431152
    4. ')
' → logprob: -14.038077354431152
    5. ')

' → logprob: -14.038077354431152
    6. ' )' → logprob: -15.038077354431152
    7. '))' → logprob: -15.913077354431152
    8. '
' → logprob: -17.16307830810547
    9. ')#' → logprob: -17.28807830810547
    10. 'def' → logprob: -17.66307830810547

Token 504: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12393271178007126
    2. 'positions' → logprob: -2.3739326000213623
    3. 'from' → logprob: -3.8739326000213623
    4. 'import' → logprob: -6.623932838439941
    5. '   ' → logprob: -7.123932838439941
    6. ' positions' → logprob: -8.623932838439941
    7. ' pos' → logprob: -8.998932838439941
    8. 'position' → logprob: -9.873932838439941
    9. ' from' → logprob: -10.123932838439941
    10. '	pos' → logprob: -10.123932838439941

Token 505: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07610789686441422
    2. 'from' → logprob: -3.326107978820801
    3. 'positions' → logprob: -3.326107978820801
    4. 'import' → logprob: -6.576107978820801
    5. 'position' → logprob: -11.0761079788208
    6. '#' (adapté à ' #') → logprob: -12.3261079788208
    7. 'char' → logprob: -12.9511079788208
    8. 'idx' → logprob: -14.5761079788208
    9. 'queues' → logprob: -14.5761079788208
    10. 'freq' → logprob: -14.5761079788208

Token 506: ' Liste' (ID: 61030)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2847215533256531
    2. 'from' → logprob: -1.7847216129302979
    3. 'positions' → logprob: -2.534721612930298
    4. 'import' → logprob: -7.659721374511719
    5. '#' → logprob: -9.409721374511719
    6. 'char' → logprob: -10.034721374511719
    7. 'position' → logprob: -10.534721374511719
    8. ' from' → logprob: -11.784721374511719
    9. 'freq' → logprob: -12.409721374511719
    10. ' positions' → logprob: -12.784721374511719

Token 507: ' de' (ID: 334)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6757371425628662
    2. 'positions' → logprob: -1.4257371425628662
    3. '_pos' → logprob: -2.050737142562866
    4. '_positions' → logprob: -2.175737142562866
    5. 'of' → logprob: -6.175737380981445
    6. 's' → logprob: -6.300737380981445
    7. 'de' → logprob: -6.675737380981445
    8. 'des' → logprob: -6.925737380981445
    9. ' =' → logprob: -7.175737380981445
    10. '_of' → logprob: -7.550737380981445

Token 508: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.17902027070522308
    2. '[]' → logprob: -1.9290202856063843
    3. 'pos' → logprob: -4.554020404815674
    4. 'from' → logprob: -5.804020404815674
    5. '[' → logprob: -6.179020404815674
    6. '[pos' → logprob: -7.179020404815674
    7. '[]
' → logprob: -7.554020404815674
    8. 'de' → logprob: -7.679020404815674
    9. 'queues' → logprob: -7.679020404815674
    10. 'import' → logprob: -8.429019927978516

Token 509: ' pour' (ID: 1930)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.32271793484687805
    2. 'positions' → logprob: -1.3227179050445557
    3. ' =' → logprob: -4.822718143463135
    4. '=' → logprob: -7.572718143463135
    5. 'char' → logprob: -8.572717666625977
    6. '_pos' → logprob: -8.822717666625977
    7. '   ' → logprob: -8.947717666625977
    8. '_positions' → logprob: -9.072717666625977
    9. 'chars' → logprob: -9.197717666625977
    10. 'par' → logprob: -10.072717666625977

Token 510: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.2395503669977188
    2. 'each' → logprob: -2.3645503520965576
    3. 'c' → logprob: -3.1145503520965576
    4. ' each' → logprob: -3.7395503520965576
    5. 'ch' → logprob: -4.114550590515137
    6. ' c' → logprob: -4.614550590515137
    7. ' i' → logprob: -5.114550590515137
    8. 'i' → logprob: -5.239550590515137
    9. 'chr' → logprob: -5.614550590515137
    10. ' chacune' → logprob: -5.614550590515137

Token 511: ' lettre' (ID: 68013)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0931527316570282
    2. 'lett' → logprob: -3.4681527614593506
    3. ' caractère' → logprob: -3.5931527614593506
    4. ' lettre' → logprob: -3.8431527614593506
    5. 'char' → logprob: -5.7181525230407715
    6. 'chr' → logprob: -6.4681525230407715
    7. ' caract' → logprob: -6.7181525230407715
    8. 'import' → logprob: -7.0931525230407715
    9. 'ch' → logprob: -7.2181525230407715
    10. 'c' → logprob: -7.4681525230407715

Token 512: '
' (ID: 198)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3789685070514679
    2. ' =' → logprob: -1.7539684772491455
    3. 'pos' → logprob: -2.3789684772491455
    4. ' positions' → logprob: -3.3789684772491455
    5. '   ' → logprob: -4.753968715667725
    6. '_positions' → logprob: -6.128968715667725
    7. '=' → logprob: -6.378968715667725
    8. 'from' → logprob: -6.878968715667725
    9. ' pos' → logprob: -7.753968715667725
    10. ':' → logprob: -7.878968715667725

Token 513: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3983737528324127
    2. 'positions' → logprob: -1.1483737230300903
    3. '   ' → logprob: -5.023373603820801
    4. 'from' → logprob: -5.898373603820801
    5. ' positions' → logprob: -6.773373603820801
    6. ' =' → logprob: -7.648373603820801
    7. ' pos' → logprob: -8.6483736038208
    8. '=' → logprob: -9.5233736038208
    9. ' from' → logprob: -9.8983736038208
    10. 'poses' → logprob: -9.8983736038208

Token 514: ' from' (ID: 591)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1274225264787674
    2. 'positions' → logprob: -2.127422571182251
    3. 'from' (adapté à ' from') → logprob: -7.627422332763672
    4. ' positions' → logprob: -12.877422332763672
    5. 'poses' → logprob: -13.377422332763672
    6. ' pos' → logprob: -13.502422332763672
    7. 'import' → logprob: -13.877422332763672
    8. 'position' → logprob: -14.377422332763672
    9. 'char' → logprob: -15.877422332763672
    10. 'poss' → logprob: -16.127422332763672

Token 515: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.000204851632588543
    2. ' collections' → logprob: -8.500205039978027
    3. 'string' → logprob: -14.000205039978027
    4. 'heap' → logprob: -14.750205039978027
    5. 'bis' → logprob: -16.37520408630371
    6. '_' → logprob: -17.00020408630371
    7. 'collection' → logprob: -17.62520408630371
    8. '
' → logprob: -19.00020408630371
    9. 'queue' → logprob: -19.75020408630371
    10. 'collect' → logprob: -20.00020408630371

Token 516: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.002190352650359273
    2. ' import' → logprob: -6.127190589904785
    3. '	import' → logprob: -13.002190589904785
    4. '```' → logprob: -13.752190589904785
    5. 'from' → logprob: -14.377190589904785
    6. 'collections' → logprob: -14.627190589904785
    7. ''import' → logprob: -15.502190589904785
    8. '#import' → logprob: -15.627190589904785
    9. '_import' → logprob: -16.00218963623047
    10. '.import' → logprob: -16.50218963623047

Token 517: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -4.4656579120783135e-05
    2. 'default' → logprob: -10.250044822692871
    3. 'import' → logprob: -12.000044822692871
    4. ' deque' → logprob: -13.750044822692871
    5. 'collections' → logprob: -14.000044822692871
    6. 'de' → logprob: -14.000044822692871
    7. 'from' → logprob: -15.875044822692871
    8. '```' → logprob: -16.625043869018555
    9. '
' → logprob: -17.000043869018555
    10. ' defaultdict' → logprob: -17.625043869018555

Token 518: '
' (ID: 198)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6471898555755615
    2. 'pos' → logprob: -0.7721898555755615
    3. '   ' → logprob: -4.522190093994141
    4. ' positions' → logprob: -6.272190093994141
    5. 'queues' → logprob: -7.147190093994141
    6. ' pos' → logprob: -8.02219009399414
    7. 'poses' → logprob: -8.14719009399414
    8. 'que' → logprob: -9.64719009399414
    9. 'position' → logprob: -9.77219009399414
    10. '
' → logprob: -10.14719009399414

Token 519: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.31727129220962524
    2. 'positions' → logprob: -1.3172712326049805
    3. '   ' → logprob: -5.5672712326049805
    4. 'queues' → logprob: -9.94227123260498
    5. 'position' → logprob: -10.19227123260498
    6. 'poses' → logprob: -10.31727123260498
    7. ' positions' → logprob: -10.81727123260498
    8. 'que' → logprob: -11.31727123260498
    9. ' pos' → logprob: -11.69227123260498
    10. 'poss' → logprob: -12.19227123260498

Token 520: ' positions' (ID: 15897)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1002146452665329
    2. 'positions' (adapté à ' positions') → logprob: -2.350214719772339
    3. 'position' → logprob: -12.725214958190918
    4. 'poses' → logprob: -12.975214958190918
    5. 'char' → logprob: -13.600214958190918
    6. 'poss' → logprob: -14.725214958190918
    7. 'queues' → logprob: -14.850214958190918
    8. 'indices' → logprob: -15.725214958190918
    9. ' positions' → logprob: -15.975214958190918
    10. ' pos' → logprob: -16.2252140045166

Token 521: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859565943479538
    2. ' =' → logprob: -3.048595666885376
    3. '=[' → logprob: -11.798595428466797
    4. '[' → logprob: -14.798595428466797
    5. '=[]' → logprob: -15.173595428466797
    6. '=[[' → logprob: -16.673595428466797
    7. '=
' → logprob: -17.798595428466797
    8. ' =[' → logprob: -17.798595428466797
    9. '＝' → logprob: -18.173595428466797
    10. '=[]
' → logprob: -18.298595428466797

Token 522: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004694037605077028
    2. '{' → logprob: -5.754693984985352
    3. ' [' → logprob: -6.504693984985352
    4. '[int' → logprob: -11.754693984985352
    5. ' {' → logprob: -12.379693984985352
    6. '[array' → logprob: -13.129693984985352
    7. 'default' → logprob: -14.129693984985352
    8. '[list' → logprob: -14.629693984985352
    9. '[col' → logprob: -14.754693984985352
    10. '[arr' → logprob: -15.379693984985352

Token 523: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -4.842555426876061e-06
    2. ' deque' → logprob: -12.250004768371582
    3. 'de' → logprob: -18.6250057220459
    4. '   ' → logprob: -19.5000057220459
    5. '[' → logprob: -20.2500057220459
    6. '[]' → logprob: -20.5000057220459
    7. 'collections' → logprob: -21.0000057220459
    8. 'Deque' → logprob: -21.7500057220459
    9. '	de' → logprob: -22.1250057220459
    10. ' ' → logprob: -22.1250057220459

Token 524: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015250948490574956
    2. '()]' → logprob: -6.501524925231934
    3. '([]' → logprob: -10.876524925231934
    4. '(range' → logprob: -13.001524925231934
    5. '[]' → logprob: -14.251524925231934
    6. '()]
' → logprob: -14.876524925231934
    7. '([' → logprob: -15.251524925231934
    8. '()
' → logprob: -15.376524925231934
    9. 'range' → logprob: -17.00152587890625
    10. ']()' → logprob: -17.37652587890625

Token 525: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6652606129646301
    2. ' for' → logprob: -1.4152605533599854
    3. '()' → logprob: -1.4152605533599854
    4. ')' → logprob: -9.540260314941406
    5. '   ' → logprob: -10.540260314941406
    6. '	for' → logprob: -10.790260314941406
    7. ']' → logprob: -12.415260314941406
    8. '       ' → logprob: -12.790260314941406
    9. '[' → logprob: -13.040260314941406
    10. ' ' → logprob: -13.040260314941406

Token 526: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014507819898426533
    2. '_c' → logprob: -4.88950777053833
    3. '_range' → logprob: -5.26450777053833
    4. '_chr' → logprob: -7.76450777053833
    5. '_char' → logprob: -8.139508247375488
    6. '_ch' → logprob: -8.139508247375488
    7. ' _' → logprob: -8.264508247375488
    8. '_i' → logprob: -8.514508247375488
    9. '_j' → logprob: -9.764508247375488
    10. '_ord' → logprob: -10.139508247375488

Token 527: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004166487138718367
    2. ' range' → logprob: -5.504166603088379
    3. '(range' → logprob: -9.379166603088379
    4. 'in' → logprob: -13.254166603088379
    5. '26' → logprob: -13.879166603088379
    6. '(' → logprob: -15.004166603088379
    7. ' in' → logprob: -15.129166603088379
    8. '	range' → logprob: -16.254165649414062
    9. 's' → logprob: -16.379165649414062
    10. '"' → logprob: -17.129165649414062

Token 528: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01200789213180542
    2. ' range' → logprob: -4.512007713317871
    3. '(range' → logprob: -7.012007713317871
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -10.012007713317871
    5. '26' → logprob: -12.137007713317871
    6. '(' → logprob: -12.387007713317871
    7. '	range' → logprob: -13.762007713317871
    8. '('' → logprob: -14.012007713317871
    9. ''' → logprob: -14.637007713317871
    10. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -14.637007713317871

Token 529: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25193139910697937
    2. '26' → logprob: -1.5019314289093018
    3. '27' → logprob: -13.251931190490723
    4. '28' → logprob: -14.876931190490723
    5. '25' → logprob: -16.25193214416504
    6. '
' → logprob: -17.50193214416504
    7. '32' → logprob: -18.00193214416504
    8. ' ' → logprob: -18.12693214416504
    9. '24' → logprob: -18.12693214416504
    10. '(ord' → logprob: -18.12693214416504

Token 530: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: 0.0
    2. '27' → logprob: -19.0
    3. '(' → logprob: -20.125
    4. ' ' → logprob: -20.625
    5. 'alphabet' → logprob: -21.375
    6. '
' → logprob: -22.125
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -22.625
    8. '   ' → logprob: -22.875
    9. '```' → logprob: -22.875
    10. '=' → logprob: -23.125

Token 531: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007529280846938491
    2. ')]
' → logprob: -7.375752925872803
    3. ']' → logprob: -9.875753402709961
    4. ' )' → logprob: -10.250753402709961
    5. ')]
' → logprob: -11.000753402709961
    6. ')' → logprob: -11.250753402709961
    7. ')]

' → logprob: -11.750753402709961
    8. ' ]' → logprob: -13.750753402709961
    9. '')]' → logprob: -15.375753402709961
    10. '>]' → logprob: -15.375753402709961

Token 532: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1629912555217743
    2. ' for' → logprob: -1.9129912853240967
    3. '   ' → logprob: -5.912991046905518
    4. '	for' → logprob: -9.787991523742676
    5. '<|end|>' → logprob: -13.912991523742676
    6. ' ' → logprob: -14.662991523742676
    7. ' 
' → logprob: -15.037991523742676
    8. '    
' → logprob: -15.162991523742676
    9. '```' → logprob: -15.537991523742676
    10. '  ' → logprob: -15.662991523742676

Token 533: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.313314952421933e-05
    2. ' for' → logprob: -10.250062942504883
    3. '   ' → logprob: -10.500062942504883
    4. '	for' → logprob: -16.000062942504883
    5. '```' → logprob: -20.500062942504883
    6. '
' → logprob: -20.875062942504883
    7. '#' → logprob: -21.375062942504883
    8. '    
' → logprob: -21.875062942504883
    9. ' ' → logprob: -22.750062942504883
    10. 'For' → logprob: -23.750062942504883

Token 534: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003365350130479783
    2. ' i' → logprob: -8.000336647033691
    3. 'idx' → logprob: -13.750336647033691
    4. ' idx' → logprob: -17.250335693359375
    5. '	i' → logprob: -19.250335693359375
    6. 'index' → logprob: -20.125335693359375
    7. '_i' → logprob: -21.125335693359375
    8. '(i' → logprob: -22.125335693359375
    9. '```' → logprob: -23.500335693359375
    10. ' ' → logprob: -23.625335693359375

Token 535: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5793972015380859
    2. ',' → logprob: -1.454397201538086
    3. 'in' → logprob: -1.579397201538086
    4. ' ,' → logprob: -9.704397201538086
    5. ',char' → logprob: -10.954397201538086
    6. ',in' → logprob: -11.079397201538086
    7. ',s' → logprob: -11.454397201538086
    8. ',v' → logprob: -13.079397201538086
    9. ',n' → logprob: -13.079397201538086
    10. ' ' → logprob: -13.329397201538086

Token 536: ' ch' (ID: 549)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20151254534721375
    2. 'ch' → logprob: -1.7015125751495361
    3. ' c' → logprob: -9.951512336730957
    4. 'char' → logprob: -9.951512336730957
    5. ' ch' → logprob: -12.451512336730957
    6. '[ch' → logprob: -17.951513290405273
    7. '	ch' → logprob: -19.451513290405273
    8. '[c' → logprob: -19.701513290405273
    9. '	c' → logprob: -20.201513290405273
    10. '(ch' → logprob: -20.451513290405273

Token 537: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01417115144431591
    2. 'in' → logprob: -4.264171123504639
    3. 'n' → logprob: -13.264171600341797
    4. 's' → logprob: -13.264171600341797
    5. ' ' → logprob: -13.514171600341797
    6. '   ' → logprob: -14.514171600341797
    7. ',' → logprob: -15.014171600341797
    8. '	in' → logprob: -15.139171600341797
    9. ')' → logprob: -15.264171600341797
    10. '  ' → logprob: -15.639171600341797

Token 538: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.029769696295261383
    2. ' enumerate' → logprob: -3.5297696590423584
    3. 's' → logprob: -11.154769897460938
    4. 'range' → logprob: -12.404769897460938
    5. 'en' → logprob: -14.529769897460938
    6. '```' → logprob: -16.029769897460938
    7. '.enumer' → logprob: -16.279769897460938
    8. 'enqueue' → logprob: -17.029769897460938
    9. 'enum' → logprob: -17.404769897460938
    10. '
' → logprob: -18.029769897460938

Token 539: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.039501093327999115
    2. 's' → logprob: -3.289501190185547
    3. ' s' → logprob: -6.539501190185547
    4. ')' → logprob: -12.289501190185547
    5. '(' → logprob: -12.539501190185547
    6. ' (' → logprob: -13.414501190185547
    7. ')s' → logprob: -13.414501190185547
    8. 'range' → logprob: -14.164501190185547
    9. '	s' → logprob: -15.164501190185547
    10. ',' → logprob: -15.789501190185547

Token 540: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22560879588127136
    2. '):' → logprob: -1.6006088256835938
    3. '):
' → logprob: -8.725608825683594
    4. '   ' → logprob: -11.475608825683594
    5. ']:
' → logprob: -12.100608825683594
    6. ':' → logprob: -12.475608825683594
    7. '():
' → logprob: -12.475608825683594
    8. ']:' → logprob: -12.975608825683594
    9. ']):
' → logprob: -13.725608825683594
    10. ']):' → logprob: -13.725608825683594

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003124956041574478
    2. 'positions' → logprob: -6.128125190734863
    3. ' positions' → logprob: -7.003125190734863
    4. '   ' → logprob: -10.628125190734863
    5. '.positions' → logprob: -13.378125190734863
    6. 'Positions' → logprob: -14.128125190734863
    7. '           ' → logprob: -14.253125190734863
    8. '_positions' → logprob: -14.503125190734863
    9. '	   ' → logprob: -14.753125190734863
    10. '```' → logprob: -14.878125190734863

Token 542: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' (adapté à ' positions') → logprob: -0.0001182052365038544
    2. ' positions' → logprob: -9.125118255615234
    3. '   ' → logprob: -11.750118255615234
    4. '       ' → logprob: -13.625118255615234
    5. '           ' → logprob: -16.500118255615234
    6. 'indices' → logprob: -17.250118255615234
    7. '.positions' → logprob: -17.375118255615234
    8. '```' → logprob: -17.750118255615234
    9. 'indexes' → logprob: -18.500118255615234
    10. 'position' → logprob: -18.875118255615234

Token 543: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47409558296203613
    2. '[ch' → logprob: -0.9740955829620361
    3. ')[' → logprob: -12.599095344543457
    4. '
' → logprob: -12.724095344543457
    5. ' [' → logprob: -12.974095344543457
    6. '[
' → logprob: -13.099095344543457
    7. 'ord' → logprob: -13.474095344543457
    8. '[pos' → logprob: -13.974095344543457
    9. '[idx' → logprob: -14.349095344543457
    10. 's' → logprob: -14.474095344543457

Token 544: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -2.15310683415737e-05
    2. '(ord' → logprob: -11.000021934509277
    3. ' ord' → logprob: -12.250021934509277
    4. '
' → logprob: -19.87502098083496
    5. '_ord' → logprob: -20.00002098083496
    6. '   ' → logprob: -21.12502098083496
    7. '(' → logprob: -22.12502098083496
    8. 'ords' → logprob: -22.25002098083496
    9. '{' → logprob: -22.87502098083496
    10. ' ' → logprob: -23.00002098083496

Token 545: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0007314971298910677
    2. 'ch' → logprob: -7.750731468200684
    3. '[ch' → logprob: -8.125731468200684
    4. '(s' → logprob: -12.875731468200684
    5. '(' → logprob: -14.375731468200684
    6. '	ch' → logprob: -14.500731468200684
    7. ' (' → logprob: -14.875731468200684
    8. 's' → logprob: -15.250731468200684
    9. '```' → logprob: -15.625731468200684
    10. '/ch' → logprob: -15.750731468200684

Token 546: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07910238206386566
    2. ')-' → logprob: -2.7041022777557373
    3. '-' → logprob: -5.954102516174316
    4. '[ch' → logprob: -6.079102516174316
    5. ' -' → logprob: -6.704102516174316
    6. '(ch' → logprob: -6.704102516174316
    7. '[' → logprob: -7.079102516174316
    8. '(s' → logprob: -8.079102516174316
    9. '[i' → logprob: -8.329102516174316
    10. 's' → logprob: -9.329102516174316

Token 547: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22426730394363403
    2. ' -' → logprob: -2.4742672443389893
    3. '(i' → logprob: -2.7242672443389893
    4. '(ch' → logprob: -3.9742672443389893
    5. '[i' → logprob: -4.349267482757568
    6. ').' → logprob: -5.474267482757568
    7. '[ch' → logprob: -5.599267482757568
    8. '].' → logprob: -5.724267482757568
    9. '[' → logprob: -5.974267482757568
    10. '-ch' → logprob: -6.099267482757568

Token 548: ' ord' (ID: 6608)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.2529098093509674
    2. 'ord' → logprob: -1.502909779548645
    3. 'a' → logprob: -7.1279096603393555
    4. '96' → logprob: -9.252909660339355
    5. '65' → logprob: -10.252909660339355
    6. ' ord' → logprob: -10.377909660339355
    7. '(ord' → logprob: -11.502909660339355
    8. '```' → logprob: -13.377909660339355
    9. ''a' → logprob: -13.877909660339355
    10. '`' → logprob: -14.377909660339355

Token 549: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.6240566083070007e-06
    2. ''a' → logprob: -13.875001907348633
    3. '("' → logprob: -14.625001907348633
    4. 'a' → logprob: -15.750001907348633
    5. ' ('' → logprob: -17.000001907348633
    6. '(' → logprob: -17.625001907348633
    7. ''' → logprob: -20.625001907348633
    8. '>('' → logprob: -21.000001907348633
    9. ''A' → logprob: -21.125001907348633
    10. '('@' → logprob: -21.875001907348633

Token 550: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001170225441455841
    2. ''a' → logprob: -6.7511701583862305
    3. ''' → logprob: -18.126171112060547
    4. ' a' → logprob: -19.751171112060547
    5. '97' → logprob: -20.126171112060547
    6. '’a' → logprob: -20.376171112060547
    7. '`' → logprob: -20.626171112060547
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -20.626171112060547
    9. '```' → logprob: -21.251171112060547
    10. '"a' → logprob: -21.626171112060547

Token 551: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3870692253112793
    2. ')].' → logprob: -1.1370692253112793
    3. '")' → logprob: -9.262069702148438
    4. ')]' → logprob: -10.137069702148438
    5. '')]' → logprob: -10.262069702148438
    6. ']].' → logprob: -12.012069702148438
    7. '']' → logprob: -12.387069702148438
    8. '').' → logprob: -12.762069702148438
    9. ')][' → logprob: -13.012069702148438
    10. '].' → logprob: -13.387069702148438

Token 552: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0021388400346040726
    2. ').' → logprob: -6.752138614654541
    3. ')].' → logprob: -7.002138614654541
    4. '.append' → logprob: -10.5021390914917
    5. '()].' → logprob: -10.5021390914917
    6. ''].' → logprob: -14.0021390914917
    7. '.' → logprob: -14.6271390914917
    8. ']].' → logprob: -14.6271390914917
    9. ' ].' → logprob: -14.8771390914917
    10. ']).' → logprob: -15.2521390914917

Token 553: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.5776860184123507e-06
    2. '.append' → logprob: -13.25000286102295
    3. ' append' → logprob: -15.00000286102295
    4. '_append' → logprob: -15.00000286102295
    5. 'appen' → logprob: -16.000001907348633
    6. 'app' → logprob: -17.750001907348633
    7. '	append' → logprob: -18.375001907348633
    8. 'Append' → logprob: -18.875001907348633
    9. ' Append' → logprob: -22.000001907348633
    10. '```' → logprob: -22.875001907348633

Token 554: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. 'left' → logprob: -16.125
    3. 'i' → logprob: -17.375
    4. ')(' → logprob: -18.25
    5. ')i' → logprob: -18.75
    6. '(' → logprob: -18.875
    7. ' (' → logprob: -19.0
    8. ')' → logprob: -19.875
    9. '[i' → logprob: -20.375
    10. '```' → logprob: -20.875

Token 555: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ' )' → logprob: -12.625004768371582
    3. ')
' → logprob: -13.500004768371582
    4. '   ' → logprob: -15.375004768371582
    5. ')

' → logprob: -16.8750057220459
    6. '))' → logprob: -17.5000057220459
    7. ')}' → logprob: -17.8750057220459
    8. ')`' → logprob: -18.3750057220459
    9. '())' → logprob: -18.5000057220459
    10. '`)' → logprob: -18.8750057220459

Token 556: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.21792982518672943
    2. 'result' → logprob: -1.8429298400878906
    3. 'used' → logprob: -3.9679298400878906
    4. 'answer' → logprob: -4.592929840087891
    5. 'pos' → logprob: -5.717929840087891
    6. 'for' → logprob: -6.217929840087891
    7. 'visited' → logprob: -7.342929840087891
    8. 'ans' → logprob: -7.717929840087891
    9. 'i' → logprob: -7.842929840087891
    10. ' res' → logprob: -8.34292984008789

Token 557: ' result' (ID: 1534)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06277520209550858
    2. 'result' (adapté à ' result') → logprob: -3.062775135040283
    3. 'bit' → logprob: -5.437775135040283
    4. 'used' → logprob: -5.812775135040283
    5. 'pos' → logprob: -6.187775135040283
    6. 'for' → logprob: -6.812775135040283
    7. 'answer' → logprob: -6.812775135040283
    8. 'i' → logprob: -7.312775135040283
    9. 'fen' → logprob: -7.312775135040283
    10. 'BIT' → logprob: -7.812775135040283

Token 558: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38749369978904724
    2. ' =' → logprob: -1.1374937295913696
    3. '=[]' → logprob: -7.38749361038208
    4. '=[]
' → logprob: -13.387494087219238
    5. ',' → logprob: -14.387494087219238
    6. '[]' → logprob: -15.262494087219238
    7. ' ' → logprob: -15.637494087219238
    8. ']' → logprob: -15.637494087219238
    9. ')' → logprob: -15.887494087219238
    10. '```' → logprob: -16.012493133544922

Token 559: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.9385402993066236e-05
    2. '['' → logprob: -11.500019073486328
    3. '[]
' → logprob: -12.000019073486328
    4. '[' → logprob: -13.625019073486328
    5. '[]}' → logprob: -13.875019073486328
    6. '[]

' → logprob: -15.250019073486328
    7. '[]>' → logprob: -15.750019073486328
    8. ' []' → logprob: -15.875019073486328
    9. '[],' → logprob: -16.000019073486328
    10. '["' → logprob: -16.125019073486328

Token 560: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.27798861265182495
    2. 'pos' → logprob: -2.1529886722564697
    3. '   ' → logprob: -2.5279886722564697
    4. 'current' → logprob: -3.5279886722564697
    5. 'visited' → logprob: -4.402988433837891
    6. 'import' → logprob: -6.402988433837891
    7. 'curr' → logprob: -7.152988433837891
    8. 'cur' → logprob: -7.152988433837891
    9. 'for' → logprob: -7.402988433837891
    10. 'removed' → logprob: -7.777988433837891

Token 561: ' current' (ID: 2208)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.57097327709198
    2. 'pos' → logprob: -1.57097327709198
    3. 'current' (adapté à ' current') → logprob: -1.82097327709198
    4. 'curr' → logprob: -3.1959733963012695
    5. 'cur' → logprob: -4.4459733963012695
    6. 'i' → logprob: -5.1959733963012695
    7. 'visited' → logprob: -6.0709733963012695
    8. 'import' → logprob: -6.1959733963012695
    9. 'removed' → logprob: -7.0709733963012695
    10. 'idx' → logprob: -7.1959733963012695

Token 562: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.004063797648996115
    2. ' =' → logprob: -6.004063606262207
    3. '_index' → logprob: -7.379063606262207
    4. '_position' → logprob: -7.504063606262207
    5. '=' → logprob: -8.129063606262207
    6. '_idx' → logprob: -9.879063606262207
    7. '_positions' → logprob: -10.254063606262207
    8. '_ptr' → logprob: -11.754063606262207
    9. 'Pos' → logprob: -11.879063606262207
    10. 'pos' → logprob: -11.879063606262207

Token 563: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692853808403015
    2. ' =' → logprob: -2.1269285678863525
    3. ',' → logprob: -15.751928329467773
    4. 's' → logprob: -15.751928329467773
    5. '=int' → logprob: -16.501928329467773
    6. '＝' → logprob: -17.251928329467773
    7. ')' → logprob: -17.626928329467773
    8. ' ' → logprob: -17.876928329467773
    9. '<|end|>' → logprob: -18.001928329467773
    10. '0' → logprob: -18.126928329467773

Token 564: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038300611777231097
    2. '-' → logprob: -7.875382900238037
    3. ' ' → logprob: -12.875383377075195
    4. ' -' → logprob: -15.000383377075195
    5. '[' → logprob: -18.125383377075195
    6. '۰' → logprob: -20.250383377075195
    7. '=' → logprob: -20.875383377075195
    8. '   ' → logprob: -21.062883377075195
    9. '```' → logprob: -21.437883377075195
    10. '[-' → logprob: -21.437883377075195

Token 565: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. '-' → logprob: -12.375004768371582
    3. ' ' → logprob: -16.625003814697266
    4. ' -' → logprob: -20.000003814697266
    5. '[' → logprob: -21.500003814697266
    6. '۰' → logprob: -22.500003814697266
    7. '000' → logprob: -23.000003814697266
    8. '=' → logprob: -23.125003814697266
    9. '00' → logprob: -23.500003814697266
    10. '０' → logprob: -23.750003814697266

Token 566: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3367213010787964
    2. ' while' → logprob: -1.8367213010787964
    3. '   ' → logprob: -2.211721420288086
    4. '<|end|>' → logprob: -4.961721420288086
    5. '	while' → logprob: -5.461721420288086
    6. '    
' → logprob: -5.836721420288086
    7. '
' → logprob: -6.461721420288086
    8. 'for' → logprob: -7.961721420288086
    9. ' 
' → logprob: -8.211721420288086
    10. '```' → logprob: -8.836721420288086

Token 567: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.011493032798171043
    2. ' while' → logprob: -4.51149320602417
    3. 'for' → logprob: -8.386492729187012
    4. '   ' → logprob: -8.761492729187012
    5. '
' → logprob: -10.636492729187012
    6. '	while' → logprob: -11.011492729187012
    7. '    
' → logprob: -11.511492729187012
    8. ' 
' → logprob: -12.636492729187012
    9. ' for' → logprob: -13.261492729187012
    10. 'While' → logprob: -13.386492729187012

Token 568: ' position' (ID: 4010)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.025001738220453262
    2. 'for' → logprob: -4.150001525878906
    3. 'used' → logprob: -5.275001525878906
    4. 'k' → logprob: -5.900001525878906
    5. 'remaining' → logprob: -7.525001525878906
    6. ' while' → logprob: -8.150001525878906
    7. 'available' → logprob: -8.775001525878906
    8. 'rem' → logprob: -10.775001525878906
    9. 'pos' → logprob: -11.150001525878906
    10. 'current' → logprob: -11.150001525878906

Token 569: ' dans' (ID: 2671)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.032280445098877
    2. 'in' → logprob: -2.157280445098877
    3. 'used' → logprob: -2.657280445098877
    4. 'dans' → logprob: -2.657280445098877
    5. 'available' → logprob: -2.782280445098877
    6. 'for' → logprob: -3.157280445098877
    7. 'de' → logprob: -3.282280445098877
    8. 'du' → logprob: -3.407280445098877
    9. 'current' → logprob: -3.532280445098877
    10. '   ' → logprob: -3.532280445098877

Token 570: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008161564357578754
    2. 'la' → logprob: -4.883161544799805
    3. 'le' → logprob: -8.383161544799805
    4. 'range' → logprob: -8.633161544799805
    5. ' s' → logprob: -9.883161544799805
    6. 'l' → logprob: -10.008161544799805
    7. ' la' → logprob: -10.383161544799805
    8. 'result' → logprob: -11.883161544799805
    9. 'the' → logprob: -12.258161544799805
    10. '```' → logprob: -13.258161544799805

Token 571: ' à' (ID: 1221)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6228351593017578
    2. '   ' → logprob: -0.8728351593017578
    3. '
' → logprob: -3.497835159301758
    4. ' while' → logprob: -4.247835159301758
    5. '    
' → logprob: -7.497835159301758
    6. 'for' → logprob: -7.872835159301758
    7. '	while' → logprob: -8.747835159301758
    8. ',' → logprob: -10.122835159301758
    9. '```' → logprob: -10.372835159301758
    10. ' for' → logprob: -11.122835159301758

Token 572: ' partir' (ID: 12100)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.8578876852989197
    2. 'rem' → logprob: -1.2328877449035645
    3. 'trait' → logprob: -1.8578877449035645
    4. 'con' → logprob: -3.2328877449035645
    5. 'prendre' → logprob: -4.2328877449035645
    6. 'mettre' → logprob: -4.4828877449035645
    7. 'tra' → logprob: -4.9828877449035645
    8. 'tr' → logprob: -4.9828877449035645
    9. 'part' → logprob: -5.3578877449035645
    10. 'cho' → logprob: -5.3578877449035645

Token 573: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0012851139763370156
    2. ' de' → logprob: -7.376285076141357
    3. 'la' → logprob: -8.251285552978516
    4. '   ' → logprob: -8.876285552978516
    5. 'du' → logprob: -8.876285552978516
    6. '#' → logprob: -10.001285552978516
    7. '_de' → logprob: -11.126285552978516
    8. ' laquelle' → logprob: -11.251285552978516
    9. 'deque' → logprob: -11.626285552978516
    10. '```' → logprob: -11.876285552978516

Token 574: ' laquelle' (ID: 47998)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.10308100283145905
    2. ' laquelle' → logprob: -2.353080987930298
    3. 'où' → logprob: -6.353081226348877
    4. 'which' → logprob: -7.353081226348877
    5. 'current' → logprob: -8.853080749511719
    6. '```' → logprob: -9.478080749511719
    7. 'le' → logprob: -10.103080749511719
    8. '0' → logprob: -10.603080749511719
    9. 'where' → logprob: -10.603080749511719
    10. 'lais' → logprob: -10.603080749511719

Token 575: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0072369566187262535
    2. 'chercher' → logprob: -6.257236957550049
    3. 'nous' → logprob: -6.382236957550049
    4. ' on' → logprob: -6.507236957550049
    5. 'qu' → logprob: -7.632236957550049
    6. 'we' → logprob: -7.632236957550049
    7. '   ' → logprob: -8.00723648071289
    8. 'while' → logprob: -8.25723648071289
    9. '#' → logprob: -8.75723648071289
    10. 're' → logprob: -9.50723648071289

Token 576: ' chois' (ID: 33475)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.5984281897544861
    2. 'cherche' → logprob: -1.5984282493591309
    3. 'cho' → logprob: -1.7234282493591309
    4. 'p' → logprob: -3.348428249359131
    5. 'pr' → logprob: -4.473428249359131
    6. 'va' → logprob: -5.223428249359131
    7. 'tr' → logprob: -5.348428249359131
    8. 'chercher' → logprob: -6.223428249359131
    9. 'proc' → logprob: -6.473428249359131
    10. 'cher' → logprob: -6.598428249359131

Token 577: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.16876740753650665
    2. 'ir' → logprob: -2.0437674522399902
    3. 't' → logprob: -4.04376745223999
    4. '#' → logprob: -6.29376745223999
    5. 'irt' → logprob: -6.54376745223999
    6. 'r' → logprob: -7.16876745223999
    7. 'i' → logprob: -7.29376745223999
    8. 'on' → logprob: -8.293766975402832
    9. '=' → logprob: -8.418766975402832
    10. 'er' → logprob: -8.418766975402832

Token 578: ' les' (ID: 1341)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08425241708755493
    2. 'for' → logprob: -2.83425235748291
    3. '   ' → logprob: -4.08425235748291
    4. ' while' → logprob: -5.95925235748291
    5. 'available' → logprob: -7.08425235748291
    6. ' for' → logprob: -7.20925235748291
    7. 'de' → logprob: -7.95925235748291
    8. '	while' → logprob: -8.33425235748291
    9. '    
' → logprob: -9.83425235748291
    10. 'possible' → logprob: -10.08425235748291

Token 579: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0747007206082344
    2. ' prochains' → logprob: -2.9497008323669434
    3. ' caractères' → logprob: -4.199700832366943
    4. 'pro' → logprob: -5.699700832366943
    5. 'chars' → logprob: -7.574700832366943
    6. 'characters' → logprob: -8.949700355529785
    7. 'char' → logprob: -9.199700355529785
    8. 'next' → logprob: -9.324700355529785
    9. ' prochaines' → logprob: -9.324700355529785
    10. 'plus' → logprob: -9.449700355529785

Token 580: ' pour' (ID: 1930)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09570877999067307
    2. '   ' → logprob: -2.5957088470458984
    3. ' while' → logprob: -4.345708847045898
    4. 'for' → logprob: -5.845708847045898
    5. '
' → logprob: -7.720708847045898
    6. '	while' → logprob: -8.970708847045898
    7. 'available' → logprob: -9.595708847045898
    8. ' for' → logprob: -9.720708847045898
    9. '    
' → logprob: -9.970708847045898
    10. 'used' → logprob: -10.720708847045898

Token 581: ' final' (ID: 1721)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07075776904821396
    2. 'le' → logprob: -3.0707578659057617
    3. 'la' → logprob: -3.9457578659057617
    4. ' result' → logprob: -6.820757865905762
    5. 'l' → logprob: -7.945757865905762
    6. 'rés' → logprob: -8.195757865905762
    7. 'placer' → logprob: -8.320757865905762
    8. 'res' → logprob: -8.820757865905762
    9. ' le' → logprob: -9.320757865905762
    10. 'final' → logprob: -9.445757865905762

Token 582: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.008393293246626854
    2. '_result' → logprob: -5.258393287658691
    3. 'answer' → logprob: -6.383393287658691
    4. 'res' → logprob: -8.008393287658691
    5. 'output' → logprob: -8.008393287658691
    6. ' result' → logprob: -8.008393287658691
    7. '_answer' → logprob: -8.133393287658691
    8. ' answer' → logprob: -10.008393287658691
    9. '_output' → logprob: -10.508393287658691
    10. 'e' → logprob: -10.633393287658691

Token 583: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.29158705472946167
    2. '   ' → logprob: -1.6665871143341064
    3. ' while' → logprob: -2.7915871143341064
    4. '
' → logprob: -6.666586875915527
    5. 'for' → logprob: -7.041586875915527
    6. '    
' → logprob: -8.291586875915527
    7. '	while' → logprob: -8.541586875915527
    8. ' for' → logprob: -9.916586875915527
    9. '```' → logprob: -10.791586875915527
    10. ' 
' → logprob: -11.541586875915527

Token 584: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5234057307243347
    2. ' while' → logprob: -0.8984057307243347
    3. 'for' → logprob: -8.898406028747559
    4. ' for' → logprob: -9.898406028747559
    5. '   ' → logprob: -10.398406028747559
    6. '	while' → logprob: -10.773406028747559
    7. 'While' → logprob: -11.148406028747559
    8. '<|end|>' → logprob: -11.273406028747559
    9. ' 
' → logprob: -12.523406028747559
    10. ' While' → logprob: -12.648406028747559

Token 585: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0003769303730223328
    2. 'for' → logprob: -8.00037670135498
    3. 'used' → logprob: -10.75037670135498
    4. ' while' → logprob: -11.00037670135498
    5. 'available' → logprob: -12.87537670135498
    6. '	while' → logprob: -15.12537670135498
    7. 'visited' → logprob: -15.37537670135498
    8. '   ' → logprob: -15.87537670135498
    9. 'remaining' → logprob: -16.250377655029297
    10. 'from' → logprob: -17.750377655029297

Token 586: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.4339826703071594
    2. 'current' → logprob: -1.0589826107025146
    3. 'k' → logprob: -5.808982849121094
    4. ' k' → logprob: -7.058982849121094
    5. ' len' → logprob: -7.058982849121094
    6. 'len' → logprob: -7.808982849121094
    7. '	current' → logprob: -9.808982849121094
    8. 'result' → logprob: -10.183982849121094
    9. ' result' → logprob: -11.058982849121094
    10. ' ' → logprob: -11.183982849121094

Token 587: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00011343709047650918
    2. '_' → logprob: -9.375113487243652
    3. '<' → logprob: -11.125113487243652
    4. '<_' → logprob: -11.875113487243652
    5. ' <' → logprob: -12.625113487243652
    6. 'pos' → logprob: -14.250113487243652
    7. '<len' → logprob: -14.625113487243652
    8. ' _' → logprob: -14.875113487243652
    9. 'Pos' → logprob: -15.250113487243652
    10. '_len' → logprob: -15.250113487243652

Token 588: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.13032834231853485
    2. '<' → logprob: -2.130328416824341
    3. '<len' → logprob: -5.880328178405762
    4. '<n' → logprob: -7.505328178405762
    5. '<size' → logprob: -11.505328178405762
    6. '<=' → logprob: -11.630328178405762
    7. '<num' → logprob: -11.630328178405762
    8. ' <=' → logprob: -12.005328178405762
    9. ' ' → logprob: -13.130328178405762
    10. '[' → logprob: -13.255328178405762

Token 589: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. ' n' → logprob: -15.5
    3. 'len' → logprob: -17.875
    4. '
' → logprob: -20.375
    5. '	n' → logprob: -21.625
    6. '   ' → logprob: -21.625
    7. '_n' → logprob: -23.125
    8. '<n' → logprob: -23.125
    9. ')n' → logprob: -24.125
    10. '(n' → logprob: -24.25

Token 590: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005535758566111326
    2. ':
' → logprob: -5.25553560256958
    3. ' and' → logprob: -9.005536079406738
    4. '   ' → logprob: -10.005536079406738
    5. '):' → logprob: -10.005536079406738
    6. ',' → logprob: -10.130536079406738
    7. ' :' → logprob: -10.505536079406738
    8. '):
' → logprob: -12.255536079406738
    9. 'and' → logprob: -12.380536079406738
    10. ')' → logprob: -12.755536079406738

Token 591: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -8.180258191714529e-06
    2. 'len' → logprob: -11.875008583068848
    3. 'current' → logprob: -14.375008583068848
    4. ' k' → logprob: -15.250008583068848
    5. '   ' → logprob: -16.37500762939453
    6. 'result' → logprob: -16.50000762939453
    7. '(k' → logprob: -17.00000762939453
    8. '
' → logprob: -17.50000762939453
    9. '	k' → logprob: -18.50000762939453
    10. ' ' → logprob: -18.75000762939453

Token 592: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.22542297840118408
    2. ' >' → logprob: -1.600422978401184
    3. ':' → logprob: -12.850422859191895
    4. '>=' → logprob: -13.100422859191895
    5. ' and' → logprob: -13.475422859191895
    6. 'and' → logprob: -13.850422859191895
    7. ' ' → logprob: -14.350422859191895
    8. ' >=' → logprob: -14.350422859191895
    9. '&gt' → logprob: -14.475422859191895
    10. ' ' → logprob: -14.850422859191895

Token 593: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005395700572989881
    2. ' ' → logprob: -7.750539779663086
    3. '=' → logprob: -9.125539779663086
    4. ' =' → logprob: -18.250539779663086
    5. '[' → logprob: -18.375539779663086
    6. '   ' → logprob: -18.625539779663086
    7. '
' → logprob: -18.875539779663086
    8. '  ' → logprob: -19.125539779663086
    9. '۰' → logprob: -19.125539779663086
    10. '```' → logprob: -19.250539779663086

Token 594: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '=' → logprob: -21.0000057220459
    4. '۰' → logprob: -21.0000057220459
    5. '   ' → logprob: -21.0000057220459
    6. '
' → logprob: -21.6250057220459
    7. '000' → logprob: -21.7500057220459
    8. 'k' → logprob: -21.8750057220459
    9. '٠' → logprob: -22.0000057220459
    10. '０' → logprob: -22.1250057220459

Token 595: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005982123780995607
    2. ':
' → logprob: -5.130981922149658
    3. '):' → logprob: -11.005982398986816
    4. '   ' → logprob: -11.130982398986816
    5. ',' → logprob: -11.630982398986816
    6. ' :' → logprob: -12.130982398986816
    7. '):
' → logprob: -12.630982398986816
    8. ':

' → logprob: -14.005982398986816
    9. ')' → logprob: -14.380982398986816
    10. ' :
' → logprob: -14.380982398986816

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020126042887568474
    2. ' for' → logprob: -4.020125865936279
    3. '   ' → logprob: -6.520125865936279
    4. 'for' → logprob: -7.645125865936279
    5. '	for' → logprob: -11.895126342773438
    6. ' found' → logprob: -12.145126342773438
    7. '    ' → logprob: -13.145126342773438
    8. '```' → logprob: -13.270126342773438
    9. '	   ' → logprob: -13.645126342773438
    10. '<|end|>' → logprob: -14.395126342773438

Token 597: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6945972442626953
    2. 'found' → logprob: -0.6945972442626953
    3. '   ' → logprob: -7.819597244262695
    4. 'chosen' → logprob: -8.069597244262695
    5. '       ' → logprob: -8.944597244262695
    6. 'selected' → logprob: -8.944597244262695
    7. 'ch' → logprob: -9.069597244262695
    8. ' found' → logprob: -9.194597244262695
    9. 'candidate' → logprob: -9.569597244262695
    10. 'c' → logprob: -10.069597244262695

Token 598: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10088314116001129
    2. 'found' → logprob: -2.3508832454681396
    3. 'chosen' → logprob: -8.225883483886719
    4. 'candidate' → logprob: -8.725883483886719
    5. 'min' → logprob: -9.225883483886719
    6. 'ch' → logprob: -10.475883483886719
    7. 'selected' → logprob: -10.475883483886719
    8. 'c' → logprob: -10.850883483886719
    9. '#' → logprob: -11.100883483886719
    10. '   ' → logprob: -11.475883483886719

Token 599: ' cherche' (ID: 52345)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.14078529179096222
    2. 'for' → logprob: -2.1407852172851562
    3. 'selected' → logprob: -5.890785217285156
    4. 'candidate' → logprob: -6.015785217285156
    5. 'chosen' → logprob: -6.265785217285156
    6. ' found' → logprob: -6.390785217285156
    7. 'min' → logprob: -6.640785217285156
    8. 'best' → logprob: -7.265785217285156
    9. 'c' → logprob: -7.390785217285156
    10. 'possible' → logprob: -7.390785217285156

Token 600: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2682501077651978
    2. 'found' → logprob: -1.2682501077651978
    3. 'min' → logprob: -1.8932501077651978
    4. 'c' → logprob: -2.268249988555908
    5. 'le' → logprob: -2.518249988555908
    6. 'the' → logprob: -2.893249988555908
    7. 'ch' → logprob: -4.393249988555908
    8. 'la' → logprob: -4.893249988555908
    9. ' for' → logprob: -5.143249988555908
    10. 'candidate' → logprob: -5.268249988555908

Token 601: ' plus' (ID: 2932)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3728356957435608
    2. 'found' → logprob: -1.872835636138916
    3. 'best' → logprob: -2.872835636138916
    4. 'min' → logprob: -3.372835636138916
    5. 'char' → logprob: -3.622835636138916
    6. 'candidate' → logprob: -4.372835636138916
    7. 'c' → logprob: -4.747835636138916
    8. 'pos' → logprob: -5.122835636138916
    9. 'chosen' → logprob: -5.622835636138916
    10. 'ch' → logprob: -6.247835636138916

Token 602: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.05310148745775223
    2. ' petit' → logprob: -3.1781015396118164
    3. 'small' → logprob: -5.053101539611816
    4. 'min' → logprob: -5.803101539611816
    5. 'for' → logprob: -8.678101539611816
    6. 'c' → logprob: -9.303101539611816
    7. 'b' → logprob: -9.678101539611816
    8. '```' → logprob: -10.053101539611816
    9. 'Petit' → logprob: -10.428101539611816
    10. 'minimal' → logprob: -10.428101539611816

Token 603: ' caractère' (ID: 80509)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.3615487515926361
    2. 'car' → logprob: -1.3615487813949585
    3. 'ch' → logprob: -3.111548662185669
    4. 'for' → logprob: -6.986548900604248
    5. 'c' → logprob: -7.986548900604248
    6. 'token' → logprob: -8.48654842376709
    7. 'possible' → logprob: -8.48654842376709
    8. 'letter' → logprob: -8.61154842376709
    9. 'idx' → logprob: -8.73654842376709
    10. ' char' → logprob: -9.23654842376709

Token 604: ' qui' (ID: 2780)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36211955547332764
    2. 'for' → logprob: -1.2371195554733276
    3. 'possible' → logprob: -5.237119674682617
    4. ' found' → logprob: -5.987119674682617
    5. 'found' → logprob: -5.987119674682617
    6. ' possible' → logprob: -6.362119674682617
    7. '       ' → logprob: -8.237119674682617
    8. '   ' → logprob: -8.487119674682617
    9. '_possible' → logprob: -8.612119674682617
    10. '_found' → logprob: -9.112119674682617

Token 605: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.41993477940559387
    2. 'a' → logprob: -1.6699347496032715
    3. 'possible' → logprob: -2.9199347496032715
    4. 'for' → logprob: -3.6699347496032715
    5. 'p' → logprob: -3.9199347496032715
    6. 'poss' → logprob: -3.9199347496032715
    7. 'can' → logprob: -4.6699347496032715
    8. ' peut' → logprob: -4.9199347496032715
    9. ' puisse' → logprob: -5.2949347496032715
    10. 'pu' → logprob: -5.5449347496032715

Token 606: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.3038382828235626
    2. ' être' → logprob: -2.3038382530212402
    3. 'dé' → logprob: -3.9288382530212402
    4. 's' → logprob: -4.05383825302124
    5. ' be' → logprob: -4.30383825302124
    6. 'appar' → logprob: -4.42883825302124
    7. 'be' → logprob: -4.55383825302124
    8. ' appara' → logprob: -4.55383825302124
    9. 'appear' → logprob: -4.80383825302124
    10. 'êtres' → logprob: -5.30383825302124

Token 607: ' amen' (ID: 19375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.24191735684871674
    2. 'cho' → logprob: -3.366917371749878
    3. ' déplac' → logprob: -3.491917371749878
    4. 'util' → logprob: -3.616917371749878
    5. 'ram' → logprob: -3.741917371749878
    6. 'plac' → logprob: -3.991917371749878
    7. 'r' → logprob: -4.116917133331299
    8. 'attr' → logprob: -4.366917133331299
    9. 'ex' → logprob: -4.616917133331299
    10. ' placé' → logprob: -4.616917133331299

Token 608: 'é' (ID: 377)
  Prédit: 'né'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'né' → logprob: -0.6046287417411804
    2. 'é' → logprob: -0.8546287417411804
    3. 'ené' → logprob: -3.604628801345825
    4. 'éné' → logprob: -7.729628562927246
    5. 'ener' → logprob: -8.479628562927246
    6. 'ner' → logprob: -8.979628562927246
    7. 'té' → logprob: -9.854628562927246
    8. 'ene' → logprob: -9.979628562927246
    9. 'n' → logprob: -10.354628562927246
    10. 'er' → logprob: -10.479628562927246

Token 609: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4318220317363739
    2. '           ' → logprob: -1.5568220615386963
    3. 'à' → logprob: -2.9318220615386963
    4. ' à' → logprob: -3.4318220615386963
    5. 'jus' → logprob: -4.681821823120117
    6. 'avant' → logprob: -4.681821823120117
    7. ' au' → logprob: -4.806821823120117
    8. ' jusqu' → logprob: -5.306821823120117
    9. 'plus' → logprob: -5.431821823120117
    10. 'au' → logprob: -5.556821823120117

Token 610: ' la' (ID: 557)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0018791354959830642
    2. 'result' → logprob: -7.1268792152404785
    3. ' current' → logprob: -7.2518792152404785
    4. 'position' → logprob: -8.87687873840332
    5. '[current' → logprob: -9.25187873840332
    6. 'positions' → logprob: -9.37687873840332
    7. '(current' → logprob: -11.75187873840332
    8. '=current' → logprob: -11.87687873840332
    9. 'pos' → logprob: -12.25187873840332
    10. '
' → logprob: -12.62687873840332

Token 611: ' position' (ID: 4010)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.010772720910608768
    2. 'position' → logprob: -4.635772705078125
    3. ' current' → logprob: -7.135772705078125
    4. 'cour' → logprob: -9.385772705078125
    5. '[current' → logprob: -9.885772705078125
    6. 'front' → logprob: -10.635772705078125
    7. 'prem' → logprob: -11.635772705078125
    8. 'pos' → logprob: -11.760772705078125
    9. 'indice' → logprob: -11.885772705078125
    10. ' position' → logprob: -12.135772705078125

Token 612: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.010866587050259113
    2. ' current' → logprob: -4.635866641998291
    3. '[current' → logprob: -8.010866165161133
    4. 'cour' → logprob: -8.260866165161133
    5. ' actuelle' → logprob: -9.010866165161133
    6. 'next' → logprob: -9.260866165161133
    7. 'cur' → logprob: -9.885866165161133
    8. 'result' → logprob: -10.135866165161133
    9. 'i' → logprob: -10.760866165161133
    10. 'possible' → logprob: -10.885866165161133

Token 613: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.007721725385636091
    2. '_' → logprob: -5.132721900939941
    3. 'pos' → logprob: -6.507721900939941
    4. '   ' → logprob: -9.757721900939941
    5. '_possible' → logprob: -9.882721900939941
    6. '       ' → logprob: -10.757721900939941
    7. '_current' → logprob: -11.132721900939941
    8. 'Pos' → logprob: -11.132721900939941
    9. '_position' → logprob: -11.257721900939941
    10. '_char' → logprob: -11.382721900939941

Token 614: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7738967537879944
    2. ' for' → logprob: -0.7738967537879944
    3. ':' → logprob: -2.7738966941833496
    4. 'for' → logprob: -5.02389669418335
    5. '   ' → logprob: -6.02389669418335
    6. '<|end|>' → logprob: -7.02389669418335
    7. '    ' → logprob: -7.39889669418335
    8. '        
' → logprob: -7.52389669418335
    9. ' in' → logprob: -7.77389669418335
    10. ' (' → logprob: -7.77389669418335

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01700464077293873
    2. ' for' → logprob: -4.767004489898682
    3. ':' → logprob: -5.142004489898682
    4. '<|end|>' → logprob: -7.267004489898682
    5. '        
' → logprob: -8.01700496673584
    6. '   ' → logprob: -8.14200496673584
    7. '           ' → logprob: -8.64200496673584
    8. '        ' → logprob: -8.89200496673584
    9. ',' → logprob: -9.01700496673584
    10. ' :' → logprob: -9.39200496673584

Token 616: ' found' (ID: 2491)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13017693161964417
    2. 'found' (adapté à ' found') → logprob: -2.1301770210266113
    3. 'candidate' → logprob: -7.255177021026611
    4. ' for' → logprob: -7.505177021026611
    5. 'c' → logprob: -7.505177021026611
    6. '       ' → logprob: -8.130176544189453
    7. 'chosen' → logprob: -8.130176544189453
    8. 'ch' → logprob: -8.380176544189453
    9. ' found' → logprob: -8.630176544189453
    10. 'char' → logprob: -8.630176544189453

Token 617: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33912694454193115
    2. ':' → logprob: -1.3391269445419312
    3. '=' → logprob: -3.8391270637512207
    4. '_char' → logprob: -6.214127063751221
    5. ' :' → logprob: -7.714127063751221
    6. '=False' → logprob: -8.089126586914062
    7. '_' → logprob: -8.339126586914062
    8. ' ' → logprob: -8.589126586914062
    9. '_token' → logprob: -8.589126586914062
    10. ',' → logprob: -9.089126586914062

Token 618: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00016635251813568175
    2. ' False' → logprob: -8.750165939331055
    3. '-' → logprob: -11.750165939331055
    4. 'True' → logprob: -18.000165939331055
    5. 'None' → logprob: -18.875165939331055
    6. ' -' → logprob: -19.750165939331055
    7. '(False' → logprob: -20.375165939331055
    8. '=False' → logprob: -20.875165939331055
    9. '   ' → logprob: -21.125165939331055
    10. '-F' → logprob: -23.125165939331055

Token 619: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23093357682228088
    2. '
' → logprob: -2.605933666229248
    3. ' 
' → logprob: -2.605933666229248
    4. '       ' → logprob: -3.855933666229248
    5. '<|end|>' → logprob: -4.605933666229248
    6. '  
' → logprob: -4.855933666229248
    7. 'for' → logprob: -5.230933666229248
    8. ' ' → logprob: -5.855933666229248
    9. '        
' → logprob: -6.105933666229248
    10. '    
' → logprob: -6.230933666229248

Token 620: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.299668550491333
    2. '       ' → logprob: -2.049668550491333
    3. 'for' → logprob: -3.049668550491333
    4. ' 
' → logprob: -3.549668550491333
    5. '   ' → logprob: -4.299668312072754
    6. '<|end|>' → logprob: -4.799668312072754
    7. '
' → logprob: -5.299668312072754
    8. '	for' → logprob: -5.424668312072754
    9. '        
' → logprob: -5.674668312072754
    10. '    
' → logprob: -5.799668312072754

Token 621: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.386951208114624
    2. ' for' → logprob: -1.136951208114624
    3. '   ' → logprob: -9.636951446533203
    4. '	for' → logprob: -11.261951446533203
    5. '       ' → logprob: -13.261951446533203
    6. ' ' → logprob: -16.136951446533203
    7. ' 
' → logprob: -16.886951446533203
    8. '
' → logprob: -17.136951446533203
    9. ' ' → logprob: -17.511951446533203
    10. '    ' → logprob: -17.636951446533203

Token 622: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03217824175953865
    2. 'ch' → logprob: -3.5321781635284424
    3. 'char' → logprob: -6.0321784019470215
    4. ' c' → logprob: -11.782177925109863
    5. 'i' → logprob: -11.907177925109863
    6. 'letter' → logprob: -12.282177925109863
    7. 'idx' → logprob: -12.282177925109863
    8. 'ci' → logprob: -15.157177925109863
    9. ' ch' → logprob: -15.782177925109863
    10. '   ' → logprob: -15.907177925109863

Token 623: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02334948256611824
    2. 'in' → logprob: -3.7733495235443115
    3. '_idx' → logprob: -10.77334976196289
    4. '_in' → logprob: -11.02334976196289
    5. ' ' → logprob: -11.39834976196289
    6. 'ind' → logprob: -11.77334976196289
    7. 'idx' → logprob: -11.77334976196289
    8. '_ord' → logprob: -11.77334976196289
    9. 'int' → logprob: -12.52334976196289
    10. '_code' → logprob: -12.52334976196289

Token 624: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '(range' → logprob: -17.37520408630371
    4. '	range' → logprob: -17.37520408630371
    5. 'ange' → logprob: -17.87520408630371
    6. '   ' → logprob: -19.62520408630371
    7. 'rang' → logprob: -19.62520408630371
    8. '"' → logprob: -20.25020408630371
    9. ' ' → logprob: -20.25020408630371
    10. 'r' → logprob: -20.50020408630371

Token 625: '(' (ID: 7)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -11.625009536743164
    3. ' ' → logprob: -15.750009536743164
    4. '0' → logprob: -15.875009536743164
    5. '(ord' → logprob: -19.000009536743164
    6. '=' → logprob: -20.125009536743164
    7. ',' → logprob: -20.500009536743164
    8. 'c' → logprob: -20.625009536743164
    9. '25' → logprob: -20.750009536743164
    10. 'current' → logprob: -20.875009536743164

Token 626: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: 0.0
    2. '0' → logprob: -22.0
    3. ' ' → logprob: -22.125
    4. '25' → logprob: -22.125
    5. '27' → logprob: -22.625
    6. '(' → logprob: -23.75
    7. 'c' → logprob: -24.125
    8. '2' → logprob: -24.875
    9. '6' → logprob: -25.125
    10. '026' → logprob: -25.125

Token 627: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20154441893100739
    2. '):' → logprob: -1.7015444040298462
    3. '):
' → logprob: -9.201544761657715
    4. ')' → logprob: -11.076544761657715
    5. ' ):
' → logprob: -11.951544761657715
    6. '       ' → logprob: -13.201544761657715
    7. ' ):' → logprob: -13.201544761657715
    8. '   ' → logprob: -13.326544761657715
    9. ':' → logprob: -13.576544761657715
    10. '):

' → logprob: -13.576544761657715

Token 628: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3309345245361328
    2. '           ' → logprob: -1.7059345245361328
    3. '<|end|>' → logprob: -3.205934524536133
    4. '	       ' → logprob: -4.205934524536133
    5. ':
' → logprob: -4.330934524536133
    6. '<|end|>' → logprob: -4.705934524536133
    7. '       ' → logprob: -4.830934524536133
    8. ' :' → logprob: -5.705934524536133
    9. '   ' → logprob: -6.580934524536133
    10. ',' → logprob: -6.955934524536133

Token 629: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.35920578241348267
    2. 'if' → logprob: -2.109205722808838
    3. ' while' → logprob: -2.234205722808838
    4. ' if' → logprob: -3.109205722808838
    5. '           ' → logprob: -3.984205722808838
    6. '       ' → logprob: -5.359205722808838
    7. '               ' → logprob: -5.609205722808838
    8. '   ' → logprob: -7.359205722808838
    9. ' ' → logprob: -8.109206199645996
    10. '	while' → logprob: -8.734206199645996

Token 630: ' Ret' (ID: 16724)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.014310524798929691
    2. 'if' → logprob: -4.264310359954834
    3. ' while' → logprob: -9.389310836791992
    4. '           ' → logprob: -9.764310836791992
    5. ' if' → logprob: -13.264310836791992
    6. '	while' → logprob: -13.264310836791992
    7. 'While' → logprob: -13.764310836791992
    8. '       ' → logprob: -14.139310836791992
    9. '   ' → logprob: -14.514310836791992
    10. '               ' → logprob: -16.514310836791992

Token 631: 'irer' (ID: 85189)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.3939446806907654
    2. 'er' → logprob: -2.64394474029541
    3. 'while' → logprob: -2.89394474029541
    4. 'ainer' → logprob: -3.76894474029541
    5. 'enir' → logprob: -4.01894474029541
    6. 'inue' → logprob: -4.14394474029541
    7. ' while' → logprob: -4.14394474029541
    8. 'aining' → logprob: -4.39394474029541
    9. 'ained' → logprob: -4.39394474029541
    10. '   ' → logprob: -4.51894474029541

Token 632: ' toutes' (ID: 17502)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14305761456489563
    2. ' while' → logprob: -2.1430575847625732
    3. 'positions' → logprob: -4.518057823181152
    4. ' positions' → logprob: -6.393057823181152
    5. 'if' → logprob: -6.893057823181152
    6. ' if' → logprob: -8.018057823181152
    7. '           ' → logprob: -8.143057823181152
    8. 'from' → logprob: -8.143057823181152
    9. 'pos' → logprob: -8.393057823181152
    10. '	while' → logprob: -8.518057823181152

Token 633: ' les' (ID: 1341)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.07377802580595016
    2. 'pos' → logprob: -3.323777914047241
    3. ' positions' → logprob: -3.573777914047241
    4. 'les' → logprob: -6.32377815246582
    5. ' les' → logprob: -6.94877815246582
    6. ' pos' → logprob: -7.07377815246582
    7. 'while' → logprob: -7.57377815246582
    8. 'indices' → logprob: -7.57377815246582
    9. '(' → logprob: -7.69877815246582
    10. '(pos' → logprob: -7.69877815246582

Token 634: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.011410413309931755
    2. 'pos' → logprob: -4.511410236358643
    3. ' positions' → logprob: -8.3864107131958
    4. 'indices' → logprob: -9.0114107131958
    5. 'p' → logprob: -12.6364107131958
    6. 'while' → logprob: -12.8864107131958
    7. 'indexes' → logprob: -13.2614107131958
    8. 'poses' → logprob: -13.5114107131958
    9. '_positions' → logprob: -14.0114107131958
    10. 'poss' → logprob: -14.3864107131958

Token 635: ' <' (ID: 464)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03490452840924263
    2. ' while' → logprob: -3.4099044799804688
    3. '	while' → logprob: -8.034904479980469
    4. '[pos' → logprob: -8.159904479980469
    5. '           ' → logprob: -9.159904479980469
    6. 'that' → logprob: -9.284904479980469
    7. ' that' → logprob: -9.659904479980469
    8. ',' → logprob: -10.034904479980469
    9. '[' → logprob: -10.159904479980469
    10. '<|end|>' → logprob: -10.409904479980469

Token 636: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.31907084584236145
    2. ' current' → logprob: -1.319070816040039
    3. 'positions' → logprob: -5.444070816040039
    4. ' positions' → logprob: -6.944070816040039
    5. '[current' → logprob: -8.194070816040039
    6. '=current' → logprob: -9.694070816040039
    7. '(current' → logprob: -10.194070816040039
    8. 'result' → logprob: -10.694070816040039
    9. '_current' → logprob: -10.819070816040039
    10. '[' → logprob: -11.694070816040039

Token 637: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.5451681974809617e-05
    2. 'pos' → logprob: -11.750015258789062
    3. '_positions' → logprob: -12.250015258789062
    4. 'Pos' → logprob: -13.375015258789062
    5. '[pos' → logprob: -15.375015258789062
    6. '   ' → logprob: -15.500015258789062
    7. '_position' → logprob: -15.625015258789062
    8. '_' → logprob: -15.750015258789062
    9. '```' → logprob: -16.125015258789062
    10. 'positions' → logprob: -16.375015258789062

Token 638: ' car' (ID: 1669)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3583947420120239
    2. 'while' → logprob: -1.483394742012024
    3. '           ' → logprob: -2.6083946228027344
    4. ',' → logprob: -8.858394622802734
    5. '               ' → logprob: -8.858394622802734
    6. '	while' → logprob: -9.108394622802734
    7. '       ' → logprob: -10.108394622802734
    8. '            
' → logprob: -10.108394622802734
    9. '[' → logprob: -10.358394622802734
    10. ':' → logprob: -10.608394622802734

Token 639: ' déjà' (ID: 21229)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.2078447788953781
    2. ' positions' → logprob: -1.7078447341918945
    3. ' elles' → logprob: -5.3328447341918945
    4. 'pos' → logprob: -7.9578447341918945
    5. '           ' → logprob: -8.457844734191895
    6. '   ' → logprob: -8.707844734191895
    7. ' les' → logprob: -9.082844734191895
    8. ' celles' → logprob: -9.207844734191895
    9. 'les' → logprob: -9.457844734191895
    10. '       ' → logprob: -9.582844734191895

Token 640: ' trait' (ID: 15458)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.7599116563796997
    2. 'trait' → logprob: -1.3849116563796997
    3. 'pass' → logprob: -2.38491153717041
    4. 'tra' → logprob: -3.38491153717041
    5. ' utilisées' → logprob: -3.50991153717041
    6. 'used' → logprob: -3.75991153717041
    7. ' trait' → logprob: -4.25991153717041
    8. 'dé' → logprob: -4.25991153717041
    9. ' dépass' → logprob: -4.38491153717041
    10. 'atte' → logprob: -4.88491153717041

Token 641: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.06101350858807564
    2. 'es' → logprob: -3.0610134601593018
    3. 'és' → logprob: -5.186013698577881
    4. '           ' → logprob: -5.186013698577881
    5. '       ' → logprob: -8.186013221740723
    6. '               ' → logprob: -8.811013221740723
    7. 'nées' → logprob: -9.061013221740723
    8. 'ifiées' → logprob: -9.186013221740723
    9. ':' → logprob: -9.686013221740723
    10. 'é' → logprob: -9.686013221740723

Token 642: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.706990122795105
    2. ' while' → logprob: -0.706990122795105
    3. 'while' → logprob: -4.4569902420043945
    4. '               ' → logprob: -7.8319902420043945
    5. '            
' → logprob: -8.081990242004395
    6. ':' → logprob: -8.206990242004395
    7. '<|end|>' → logprob: -8.456990242004395
    8. ',' → logprob: -8.831990242004395
    9. '	while' → logprob: -9.081990242004395
    10. 'While' → logprob: -9.706990242004395

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003460712905507535
    2. ' while' → logprob: -8.875346183776855
    3. '            
' → logprob: -9.875346183776855
    4. ',' → logprob: -10.125346183776855
    5. '               ' → logprob: -10.125346183776855
    6. 'while' → logprob: -11.625346183776855
    7. '	       ' → logprob: -11.625346183776855
    8. '<|end|>' → logprob: -11.625346183776855
    9. '       ' → logprob: -12.000346183776855
    10. '.' → logprob: -12.375346183776855

Token 644: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.010792303830385208
    2. ' while' → logprob: -5.010792255401611
    3. '           ' → logprob: -5.510792255401611
    4. '       ' → logprob: -10.76079273223877
    5. '	while' → logprob: -12.51079273223877
    6. 'While' → logprob: -14.51079273223877
    7. '   ' → logprob: -15.01079273223877
    8. '               ' → logprob: -17.385791778564453
    9. '	       ' → logprob: -19.135791778564453
    10. '		' → logprob: -19.510791778564453

Token 645: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.000826421775855124
    2. ' positions' → logprob: -7.125826358795166
    3. 'len' → logprob: -10.750826835632324
    4. 'pos' → logprob: -15.375826835632324
    5. ' len' → logprob: -16.125825881958008
    6. 'position' → logprob: -17.375825881958008
    7. '   ' → logprob: -17.500825881958008
    8. '.positions' → logprob: -18.500825881958008
    9. 'locations' → logprob: -18.625825881958008
    10. '(' → logprob: -18.750825881958008

Token 646: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.375001907348633
    3. ' [' → logprob: -16.125001907348633
    4. 'c' → logprob: -16.250001907348633
    5. '```' → logprob: -16.250001907348633
    6. '[
' → logprob: -16.875001907348633
    7. ')[' → logprob: -17.375001907348633
    8. '(c' → logprob: -17.500001907348633
    9. ')c' → logprob: -18.250001907348633
    10. '[ch' → logprob: -18.250001907348633

Token 647: ']' (ID: 60)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16031673550605774
    2. ' and' → logprob: -1.9103167057037354
    3. '[' → logprob: -10.160316467285156
    4. '```' → logprob: -11.160316467285156
    5. ']' → logprob: -11.910316467285156
    6. '   ' → logprob: -12.160316467285156
    7. ')' → logprob: -12.285316467285156
    8. '           ' → logprob: -12.410316467285156
    9. ' и' → logprob: -12.785316467285156
    10. '       ' → logprob: -12.785316467285156

Token 648: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.06996667385101318
    2. ' and' → logprob: -2.6949667930603027
    3. ' и' → logprob: -12.319966316223145
    4. '   ' → logprob: -12.569966316223145
    5. '           ' → logprob: -12.569966316223145
    6. '          ' → logprob: -13.069966316223145
    7. '	and' → logprob: -13.194966316223145
    8. '       ' → logprob: -13.444966316223145
    9. ' và' → logprob: -13.444966316223145
    10. '&&' → logprob: -13.444966316223145

Token 649: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -9.615255839889869e-05
    2. ' positions' → logprob: -9.250096321105957
    3. 'pos' → logprob: -20.50009536743164
    4. 'position' → logprob: -21.37509536743164
    5. '.positions' → logprob: -22.62509536743164
    6. 'posit' → logprob: -23.75009536743164
    7. '_positions' → logprob: -24.25009536743164
    8. '   ' → logprob: -24.75009536743164
    9. 'Positions' → logprob: -24.87509536743164
    10. 'poses' → logprob: -25.25009536743164

Token 650: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.128163257315464e-07
    2. 'c' → logprob: -15.875
    3. '[' → logprob: -16.0
    4. ')c' → logprob: -18.875
    5. '[
' → logprob: -19.375
    6. '(c' → logprob: -19.375
    7. '```' → logprob: -19.75
    8. '<c' → logprob: -20.0
    9. ')' → logprob: -20.5
    10. '[q' → logprob: -21.25

Token 651: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.001337624154984951
    2. '[' → logprob: -6.62633752822876
    3. '][' → logprob: -11.501338005065918
    4. ']' → logprob: -14.001338005065918
    5. 'c' → logprob: -15.501338005065918
    6. '[
' → logprob: -16.0013370513916
    7. '   ' → logprob: -16.0013370513916
    8. ' [' → logprob: -16.1263370513916
    9. '[-' → logprob: -16.2513370513916
    10. '0' → logprob: -17.1263370513916

Token 652: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -13.000005722045898
    3. '[' → logprob: -13.125005722045898
    4. '<' → logprob: -13.875005722045898
    5. '۰' → logprob: -17.5000057220459
    6. ' <' → logprob: -17.5000057220459
    7. 'positions' → logprob: -17.8750057220459
    8. '```' → logprob: -18.0000057220459
    9. '   ' → logprob: -18.2500057220459
    10. '(' → logprob: -18.3750057220459

Token 653: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.027566205710172653
    2. ' <' → logprob: -3.6525661945343018
    3. ']' → logprob: -6.777566432952881
    4. ']<' → logprob: -9.527565956115723
    5. '[' → logprob: -10.527565956115723
    6. '()' → logprob: -11.777565956115723
    7. '()<' → logprob: -11.777565956115723
    8. ' ' → logprob: -13.277565956115723
    9. ')' → logprob: -13.777565956115723
    10. '<c' → logprob: -13.777565956115723

Token 654: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12693609297275543
    2. ' <' → logprob: -2.126936197280884
    3. '[' → logprob: -13.251935958862305
    4. '<c' → logprob: -14.001935958862305
    5. '<size' → logprob: -14.251935958862305
    6. '<context' → logprob: -14.376935958862305
    7. '<
' → logprob: -14.626935958862305
    8. '<len' → logprob: -14.626935958862305
    9. ' ' → logprob: -14.751935958862305
    10. '<const' → logprob: -15.126935958862305

Token 655: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00033558503491804004
    2. ' current' → logprob: -8.000335693359375
    3. '=current' → logprob: -17.125335693359375
    4. '$current' → logprob: -17.875335693359375
    5. '_current' → logprob: -18.625335693359375
    6. '[current' → logprob: -18.875335693359375
    7. 'Current' → logprob: -19.125335693359375
    8. '   ' → logprob: -19.375335693359375
    9. '(current' → logprob: -19.625335693359375
    10. '	current' → logprob: -20.000335693359375

Token 656: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00026205103495158255
    2. 'pos' → logprob: -8.250262260437012
    3. 'Pos' → logprob: -14.625262260437012
    4. '_' → logprob: -16.000261306762695
    5. 'current' → logprob: -16.125261306762695
    6. '_current' → logprob: -17.875261306762695
    7. '_position' → logprob: -18.000261306762695
    8. '```' → logprob: -18.875261306762695
    9. '_POS' → logprob: -19.125261306762695
    10. 'position' → logprob: -19.125261306762695

Token 657: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01721147447824478
    2. ':' → logprob: -4.767211437225342
    3. '               ' → logprob: -5.267211437225342
    4. '):
' → logprob: -5.892211437225342
    5. '():
' → logprob: -8.0172119140625
    6. '           ' → logprob: -8.8922119140625
    7. ' and' → logprob: -9.5172119140625
    8. ' :
' → logprob: -10.3922119140625
    9. ':
' → logprob: -10.7672119140625
    10. '):' → logprob: -11.8922119140625

Token 658: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011941691860556602
    2. 'positions' → logprob: -5.011941909790039
    3. ' positions' → logprob: -5.261941909790039
    4. '           ' → logprob: -12.011941909790039
    5. '.positions' → logprob: -12.386941909790039
    6. '	           ' → logprob: -12.511941909790039
    7. '                   ' → logprob: -12.761941909790039
    8. '_positions' → logprob: -13.386941909790039
    9. '                
' → logprob: -13.511941909790039
    10. '   ' → logprob: -13.886941909790039

Token 659: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' (adapté à ' positions') → logprob: -0.00048119694110937417
    2. ' positions' → logprob: -7.750481128692627
    3. '               ' → logprob: -10.125481605529785
    4. '.positions' → logprob: -12.375481605529785
    5. '                   ' → logprob: -12.875481605529785
    6. '           ' → logprob: -13.250481605529785
    7. '   ' → logprob: -13.875481605529785
    8. '_positions' → logprob: -14.250481605529785
    9. '```' → logprob: -16.25048065185547
    10. 'pos' → logprob: -17.25048065185547

Token 660: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. 'c' → logprob: -16.25
    4. '```' → logprob: -18.5
    5. '[C' → logprob: -18.75
    6. '(c' → logprob: -19.375
    7. '[ch' → logprob: -20.125
    8. '[q' → logprob: -20.25
    9. '[
' → logprob: -20.25
    10. '[col' → logprob: -20.375

Token 661: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.16495811939239502
    2. '[c' → logprob: -2.2899580001831055
    3. '[' → logprob: -3.6649580001831055
    4. '.p' → logprob: -4.5399580001831055
    5. '][' → logprob: -4.9149580001831055
    6. '.pop' → logprob: -5.4149580001831055
    7. '           ' → logprob: -6.9149580001831055
    8. '.c' → logprob: -7.1649580001831055
    9. 'pop' → logprob: -8.414958000183105
    10. '               ' → logprob: -8.664958000183105

Token 662: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.56102097814437e-05
    2. '.p' → logprob: -10.000045776367188
    3. ' p' → logprob: -16.625045776367188
    4. 'pop' → logprob: -17.250045776367188
    5. '```' → logprob: -18.750045776367188
    6. '_p' → logprob: -21.625045776367188
    7. ''p' → logprob: -21.875045776367188
    8. 'opleft' → logprob: -22.000045776367188
    9. '   ' → logprob: -22.375045776367188
    10. '	p' → logprob: -23.125045776367188

Token 663: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -1.771655115589965e-05
    2. 'ople' → logprob: -11.625018119812012
    3. 'op' → logprob: -12.000018119812012
    4. 'opl' → logprob: -12.875018119812012
    5. '```' → logprob: -16.750017166137695
    6. 'oplevel' → logprob: -18.250017166137695
    7. 'left' → logprob: -18.875017166137695
    8. 'p' → logprob: -18.875017166137695
    9. 'opf' → logprob: -19.250017166137695
    10. '   ' → logprob: -19.250017166137695

Token 664: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005672083701938391
    2. '<|end|>' → logprob: -6.255671977996826
    3. ')' → logprob: -6.380671977996826
    4. '            
' → logprob: -7.255671977996826
    5. '<|end|>' → logprob: -7.255671977996826
    6. '
' → logprob: -8.755672454833984
    7. '       ' → logprob: -9.755672454833984
    8. ')
' → logprob: -9.880672454833984
    9. '()' → logprob: -10.130672454833984
    10. '          ' → logprob: -10.380672454833984

Token 665: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012652362929657102
    2. '            
' → logprob: -7.126265048980713
    3. '
' → logprob: -8.126265525817871
    4. '<|end|>' → logprob: -9.626265525817871
    5. ' 
' → logprob: -10.501265525817871
    6. '<|end|>' → logprob: -11.251265525817871
    7. '                
' → logprob: -11.501265525817871
    8. '        
' → logprob: -11.501265525817871
    9. '           
' → logprob: -11.751265525817871
    10. '		' → logprob: -12.001265525817871

Token 666: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002962846076115966
    2. 'if' (adapté à ' if') → logprob: -6.002963066101074
    3. ' if' → logprob: -7.877963066101074
    4. 'token' → logprob: -9.627963066101074
    5. '            
' → logprob: -10.752963066101074
    6. '       ' → logprob: -12.252963066101074
    7. 'tokens' → logprob: -13.002963066101074
    8. '   ' → logprob: -13.502963066101074
    9. ' token' → logprob: -13.627963066101074
    10. 'pos' → logprob: -13.752963066101074

Token 667: ' not' (ID: 625)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.47408005595207214
    2. ' positions' → logprob: -0.9740800857543945
    3. ' not' → logprob: -13.849080085754395
    4. 'len' → logprob: -14.724080085754395
    5. 'not' → logprob: -14.724080085754395
    6. '   ' → logprob: -15.349080085754395
    7. 'pos' → logprob: -15.349080085754395
    8. ' len' → logprob: -15.599080085754395
    9. '           ' → logprob: -15.724080085754395
    10. '_positions' → logprob: -16.099079132080078

Token 668: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.07889121770858765
    2. ' positions' → logprob: -2.5788912773132324
    3. 'not' → logprob: -14.953890800476074
    4. 'pos' → logprob: -15.078890800476074
    5. '.positions' → logprob: -15.328890800476074
    6. ' not' → logprob: -16.20389175415039
    7. 'position' → logprob: -16.82889175415039
    8. '_positions' → logprob: -16.82889175415039
    9. '```' → logprob: -16.82889175415039
    10. ' posiciones' → logprob: -16.95389175415039

Token 669: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: 0.0
    2. '[' → logprob: -17.875
    3. 'c' → logprob: -18.375
    4. '```' → logprob: -18.375
    5. ' [' → logprob: -18.625
    6. '][' → logprob: -18.75
    7. '[
' → logprob: -18.875
    8. '[C' → logprob: -19.125
    9. ')[' → logprob: -19.625
    10. ')c' → logprob: -20.125

Token 670: ']:
' (ID: 22152)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06357279419898987
    2. 'or' → logprob: -3.188572883605957
    3. ']' → logprob: -4.188572883605957
    4. '[' → logprob: -5.563572883605957
    5. '           ' → logprob: -7.188572883605957
    6. ')' → logprob: -8.563572883605957
    7. '	or' → logprob: -9.938572883605957
    8. '<|end|>' → logprob: -10.063572883605957
    9. '<|end|>' → logprob: -10.063572883605957
    10. '       ' → logprob: -10.563572883605957

Token 671: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004326976370066404
    2. ' continue' → logprob: -5.629326820373535
    3. 'continue' → logprob: -8.504326820373535
    4. ':' → logprob: -8.629326820373535
    5. '	continue' → logprob: -9.254326820373535
    6. '	           ' → logprob: -9.504326820373535
    7. ' continues' → logprob: -10.254326820373535
    8. '           ' → logprob: -10.379326820373535
    9. '			' → logprob: -10.879326820373535
    10. '                   ' → logprob: -11.129326820373535

Token 672: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.7709986567497253
    2. '               ' → logprob: -1.1459987163543701
    3. ' continue' → logprob: -1.5209987163543701
    4. '	continue' → logprob: -7.145998477935791
    5. '           ' → logprob: -9.64599895477295
    6. '			' → logprob: -9.89599895477295
    7. ' continues' → logprob: -10.39599895477295
    8. '                   ' → logprob: -10.64599895477295
    9. '	           ' → logprob: -10.89599895477295
    10. '_continue' → logprob: -10.89599895477295

Token 673: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002595276804640889
    2. '            
' → logprob: -6.2525954246521
    3. '<|end|>' → logprob: -9.127594947814941
    4. '               ' → logprob: -9.502594947814941
    5. ' 
' → logprob: -9.627594947814941
    6. ' token' → logprob: -9.877594947814941
    7. '<|end|>' → logprob: -10.252594947814941
    8. '
' → logprob: -10.377594947814941
    9. '  
' → logprob: -10.502594947814941
    10. ' tokens' → logprob: -10.752594947814941

Token 674: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017778765177354217
    2. '            
' → logprob: -7.751777648925781
    3. '<|end|>' → logprob: -8.126777648925781
    4. '	       ' → logprob: -8.501777648925781
    5. '       ' → logprob: -9.251777648925781
    6. 'token' → logprob: -9.251777648925781
    7. '[' → logprob: -9.251777648925781
    8. ' token' → logprob: -9.501777648925781
    9. '<|end|>' → logprob: -9.626777648925781
    10. 'Token' → logprob: -9.751777648925781

Token 675: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.18707773089408875
    2. '           ' → logprob: -2.437077760696411
    3. ' pos' → logprob: -2.562077760696411
    4. 'candidate' → logprob: -5.937077522277832
    5. 'next' → logprob: -6.812077522277832
    6. 'idx' → logprob: -6.937077522277832
    7. ' next' → logprob: -8.312077522277832
    8. 'min' → logprob: -8.437077522277832
    9. ' candidate' → logprob: -8.562077522277832
    10. 'possible' → logprob: -8.812077522277832

Token 676: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10108864307403564
    2. '=' → logprob: -2.351088523864746
    3. '_token' → logprob: -8.351088523864746
    4. '<|end|>' → logprob: -8.601088523864746
    5. '<|end|>' → logprob: -9.351088523864746
    6. '=c' → logprob: -10.101088523864746
    7. ']' → logprob: -10.351088523864746
    8. '_pos' → logprob: -10.601088523864746
    9. '_positions' → logprob: -10.601088523864746
    10. '[token' → logprob: -10.726088523864746

Token 677: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.04858771339058876
    2. ' positions' → logprob: -3.0485877990722656
    3. '.positions' → logprob: -15.423587799072266
    4. '           ' → logprob: -16.548587799072266
    5. '_positions' → logprob: -17.298587799072266
    6. 'pos' → logprob: -17.423587799072266
    7. 'position' → logprob: -18.048587799072266
    8. ' posiciones' → logprob: -18.548587799072266
    9. 'Positions' → logprob: -18.673587799072266
    10. '               ' → logprob: -20.048587799072266

Token 678: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.5048530030981055e-06
    2. 'c' → logprob: -13.875001907348633
    3. '[' → logprob: -15.000001907348633
    4. '           ' → logprob: -16.500001907348633
    5. '```' → logprob: -17.375001907348633
    6. '(c' → logprob: -18.000001907348633
    7. '	c' → logprob: -18.000001907348633
    8. ')c' → logprob: -18.250001907348633
    9. '                   ' → logprob: -18.375001907348633
    10. ' [' → logprob: -18.375001907348633

Token 679: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6329889893531799
    2. '[' → logprob: -0.7579889893531799
    3. ']' → logprob: -8.382988929748535
    4. '].' → logprob: -9.507988929748535
    5. ''][' → logprob: -10.132988929748535
    6. '0' → logprob: -11.007988929748535
    7. '"][' → logprob: -11.757988929748535
    8. '           ' → logprob: -12.507988929748535
    9. '()][' → logprob: -12.882988929748535
    10. ')[' → logprob: -13.007988929748535

Token 680: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.517272024415433e-05
    2. '[' → logprob: -9.500075340270996
    3. ' ' → logprob: -16.12507438659668
    4. '][' → logprob: -16.75007438659668
    5. ']' → logprob: -17.87507438659668
    6. '```' → logprob: -18.75007438659668
    7. '۰' → logprob: -19.12507438659668
    8. '   ' → logprob: -20.12507438659668
    9. ')' → logprob: -20.25007438659668
    10. '00' → logprob: -20.37507438659668

Token 681: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16017486155033112
    2. ')
' → logprob: -2.16017484664917
    3. ']' → logprob: -3.78517484664917
    4. '           ' → logprob: -5.41017484664917
    5. ']
' → logprob: -6.16017484664917
    6. '<|end|>' → logprob: -6.53517484664917
    7. '):
' → logprob: -8.410175323486328
    8. '               ' → logprob: -8.535175323486328
    9. '')' → logprob: -8.535175323486328
    10. ' -' → logprob: -8.785175323486328

Token 682: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005638532340526581
    2. '<|end|>' → logprob: -5.630638599395752
    3. '<|end|>' → logprob: -7.005638599395752
    4. '            
' → logprob: -8.005638122558594
    5. '            ' → logprob: -8.505638122558594
    6. '          ' → logprob: -9.380638122558594
    7. '       ' → logprob: -9.505638122558594
    8. '               ' → logprob: -9.630638122558594
    9. '[' → logprob: -9.880638122558594
    10. ' 
' → logprob: -9.880638122558594

Token 683: ' dist' (ID: 3601)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1811423897743225
    2. '           ' → logprob: -1.9311423301696777
    3. 'if' → logprob: -3.9311423301696777
    4. ' cost' → logprob: -8.306142807006836
    5. 'diff' → logprob: -8.431142807006836
    6. '            
' → logprob: -8.556142807006836
    7. 'cost' → logprob: -9.056142807006836
    8. 'distance' → logprob: -9.306142807006836
    9. ' diff' → logprob: -9.806142807006836
    10. ' distance' → logprob: -10.181142807006836

Token 684: ' =' (ID: 314)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.32541245222091675
    2. ' -' → logprob: -1.9504125118255615
    3. ' =' → logprob: -2.0754125118255615
    4. '=' → logprob: -5.325412273406982
    5. '<=' → logprob: -5.825412273406982
    6. ' ==' → logprob: -7.075412273406982
    7. '-' → logprob: -7.450412273406982
    8. '<|end|>' → logprob: -7.575412273406982
    9. ' ' → logprob: -9.70041275024414
    10. ')<=' → logprob: -10.45041275024414

Token 685: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.07889573276042938
    2. 'pos' → logprob: -2.5788958072662354
    3. ' positions' → logprob: -12.328895568847656
    4. 'positions' → logprob: -14.203895568847656
    5. '(pos' → logprob: -14.828895568847656
    6. '[pos' → logprob: -15.578895568847656
    7. '           ' → logprob: -16.703895568847656
    8. ' s' → logprob: -16.828895568847656
    9. '	pos' → logprob: -17.203895568847656
    10. 's' → logprob: -17.578895568847656

Token 686: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005934131797403097
    2. '-' → logprob: -5.130934238433838
    3. ' ' → logprob: -12.88093376159668
    4. '<|end|>' → logprob: -13.50593376159668
    5. '-current' → logprob: -15.25593376159668
    6. '   ' → logprob: -15.25593376159668
    7. ' ' → logprob: -15.75593376159668
    8. '           ' → logprob: -16.00593376159668
    9. '<|end|>' → logprob: -16.13093376159668
    10. '#' → logprob: -16.25593376159668

Token 687: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.02975129522383213
    2. ' current' → logprob: -3.5297513008117676
    3. '[current' → logprob: -14.27975082397461
    4. '$current' → logprob: -16.27975082397461
    5. '	current' → logprob: -17.27975082397461
    6. '_current' → logprob: -17.52975082397461
    7. '(current' → logprob: -17.65475082397461
    8. 'Current' → logprob: -17.77975082397461
    9. ',current' → logprob: -19.15475082397461
    10. '=current' → logprob: -19.90475082397461

Token 688: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.868328920158092e-05
    2. '_' → logprob: -10.875028610229492
    3. 'pos' → logprob: -11.750028610229492
    4. 'Pos' → logprob: -13.500028610229492
    5. '_token' → logprob: -15.750028610229492
    6. ' _' → logprob: -15.875028610229492
    7. '_POS' → logprob: -17.250028610229492
    8. '```' → logprob: -17.500028610229492
    9. '_position' → logprob: -17.750028610229492
    10. '_val' → logprob: -18.000028610229492

Token 689: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5868266224861145
    2. ' if' → logprob: -1.4618265628814697
    3. '<|end|>' → logprob: -1.9618265628814697
    4. '<|end|>' → logprob: -3.2118265628814697
    5. 'if' → logprob: -4.961826801300049
    6. ')' → logprob: -5.086826801300049
    7. '       ' → logprob: -5.961826801300049
    8. '               ' → logprob: -6.211826801300049
    9. '            
' → logprob: -6.211826801300049
    10. ',' → logprob: -6.586826801300049

Token 690: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007579309749417007
    2. '<|end|>' → logprob: -8.250758171081543
    3. ' if' → logprob: -8.875758171081543
    4. '            
' → logprob: -9.125758171081543
    5. '<|end|>' → logprob: -10.125758171081543
    6. '               ' → logprob: -10.125758171081543
    7. '       ' → logprob: -10.375758171081543
    8. '            ' → logprob: -10.500758171081543
    9. '		' → logprob: -10.625758171081543
    10. '          ' → logprob: -10.875758171081543

Token 691: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07694954425096512
    2. ' if' → logprob: -3.0769495964050293
    3. '           ' → logprob: -3.5769495964050293
    4. '	if' → logprob: -14.201949119567871
    5. '		' → logprob: -14.576949119567871
    6. 'If' → logprob: -14.576949119567871
    7. '       ' → logprob: -15.326949119567871
    8. '            
' → logprob: -15.451949119567871
    9. '```' → logprob: -15.576949119567871
    10. ';if' → logprob: -15.951949119567871

Token 692: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06196925416588783
    2. ' dist' → logprob: -2.81196928024292
    3. '	dist' → logprob: -14.186968803405762
    4. 'k' → logprob: -14.311968803405762
    5. '           ' → logprob: -16.686969757080078
    6. ' k' → logprob: -16.811969757080078
    7. '               ' → logprob: -16.811969757080078
    8. 'distance' → logprob: -17.061969757080078
    9. '(dist' → logprob: -17.061969757080078
    10. 'd' → logprob: -17.811969757080078

Token 693: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.020545389503240585
    2. '<=' → logprob: -3.895545482635498
    3. ')<=' → logprob: -12.89554500579834
    4. ']<=' → logprob: -15.39554500579834
    5. ' ≤' → logprob: -15.52054500579834
    6. ')' → logprob: -16.020545959472656
    7. ' <=",' → logprob: -16.145545959472656
    8. ' ' → logprob: -16.520545959472656
    9. ' ' → logprob: -16.770545959472656
    10. '```' → logprob: -17.145545959472656

Token 694: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005233882926404476
    2. ' k' → logprob: -5.2552337646484375
    3. '	k' → logprob: -16.880233764648438
    4. ',k' → logprob: -19.630233764648438
    5. ' ' → logprob: -19.755233764648438
    6. '{k' → logprob: -19.755233764648438
    7. '   ' → logprob: -19.880233764648438
    8. '[k' → logprob: -20.005233764648438
    9. '_k' → logprob: -20.005233764648438
    10. ' ' → logprob: -20.255233764648438

Token 695: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5239861607551575
    2. ':' → logprob: -0.8989861607551575
    3. '               ' → logprob: -7.648986339569092
    4. ' and' → logprob: -8.773985862731934
    5. '):
' → logprob: -9.148985862731934
    6. '           ' → logprob: -9.648985862731934
    7. ' :
' → logprob: -11.398985862731934
    8. ':
' → logprob: -11.648985862731934
    9. ':

' → logprob: -11.648985862731934
    10. '):' → logprob: -11.773985862731934

Token 696: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002205828350270167
    2. '                
' → logprob: -9.75022029876709
    3. '           ' → logprob: -10.25022029876709
    4. '#' → logprob: -10.87522029876709
    5. ':
' → logprob: -11.25022029876709
    6. ' k' → logprob: -11.37522029876709
    7. 'result' → logprob: -11.62522029876709
    8. '):
' → logprob: -11.75022029876709
    9. '                   ' → logprob: -11.87522029876709
    10. ' result' → logprob: -11.87522029876709

Token 697: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5434016585350037
    2. 'result' → logprob: -1.4184017181396484
    3. '               ' → logprob: -2.1684017181396484
    4. 'positions' → logprob: -3.6684017181396484
    5. 'found' → logprob: -3.6684017181396484
    6. '#' (adapté à ' #') → logprob: -5.793401718139648
    7. 's' → logprob: -6.543401718139648
    8. '           ' → logprob: -6.543401718139648
    9. 'swap' → logprob: -6.793401718139648
    10. 'res' → logprob: -6.918401718139648

Token 698: ' On' (ID: 2160)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.530584454536438
    2. 'k' → logprob: -1.030584454536438
    3. 'result' → logprob: -3.9055843353271484
    4. 'found' → logprob: -4.905584335327148
    5. 'char' → logprob: -5.655584335327148
    6. 'pos' → logprob: -5.655584335327148
    7. 'res' → logprob: -5.655584335327148
    8. 'ch' → logprob: -5.780584335327148
    9. 'swap' → logprob: -5.780584335327148
    10. '#' → logprob: -5.780584335327148

Token 699: ' peut' (ID: 9216)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9273179173469543
    2. '           ' → logprob: -1.4273178577423096
    3. '.append' → logprob: -2.3023178577423096
    4. '#' → logprob: -2.3023178577423096
    5. '               ' → logprob: -3.0523178577423096
    6. '       ' → logprob: -3.3023178577423096
    7. 'positions' → logprob: -4.177318096160889
    8. 'res' → logprob: -4.552318096160889
    9. 'pop' → logprob: -4.802318096160889
    10. ' result' → logprob: -5.177318096160889

Token 700: ' am' (ID: 939)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -1.3247617483139038
    2. ' swap' → logprob: -1.9497617483139038
    3. '               ' → logprob: -2.3247618675231934
    4. 'faire' → logprob: -2.5747618675231934
    5. ' result' → logprob: -2.6997618675231934
    6. '           ' → logprob: -2.8247618675231934
    7. ' déplacer' → logprob: -2.9497618675231934
    8. 'result' → logprob: -3.0747618675231934
    9. '#' → logprob: -3.0747618675231934
    10. ' #' → logprob: -3.3247618675231934

Token 701: 'ener' (ID: 944)
  Prédit: 'ener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ener' → logprob: -0.0006298751104623079
    2. 'b' → logprob: -8.250629425048828
    3. 'm' → logprob: -8.875629425048828
    4. 'éli' → logprob: -9.500629425048828
    5. 'er' → logprob: -10.875629425048828
    6. '#' → logprob: -11.000629425048828
    7. 'é' → logprob: -11.000629425048828
    8. 'puter' → logprob: -11.375629425048828
    9. 'è' → logprob: -11.500629425048828
    10. '   ' → logprob: -11.625629425048828

Token 702: ' ce' (ID: 2357)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6070300936698914
    2. ' ce' → logprob: -1.4820301532745361
    3. 'pos' → logprob: -1.7320301532745361
    4. '               ' → logprob: -4.107029914855957
    5. 'le' → logprob: -4.357029914855957
    6. ' le' → logprob: -5.107029914855957
    7. 'ce' → logprob: -5.482029914855957
    8. ' positions' → logprob: -5.607029914855957
    9. ' pos' → logprob: -6.357029914855957
    10. ' cette' → logprob: -6.732029914855957

Token 703: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.14861366152763367
    2. 'c' → logprob: -2.898613691329956
    3. ' caractère' → logprob: -3.773613691329956
    4. 'pos' → logprob: -3.898613691329956
    5. 'char' → logprob: -4.273613452911377
    6. ' caract' → logprob: -4.898613452911377
    7. ' c' → logprob: -5.273613452911377
    8. '               ' → logprob: -5.898613452911377
    9. ' char' → logprob: -6.023613452911377
    10. ' car' → logprob: -6.398613452911377

Token 704: ' en' (ID: 469)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15757878124713898
    2. ' à' → logprob: -2.157578706741333
    3. '                   ' → logprob: -4.407578945159912
    4. '                
' → logprob: -5.407578945159912
    5. 'à' → logprob: -5.532578945159912
    6. '           ' → logprob: -6.032578945159912
    7. ' at' → logprob: -6.407578945159912
    8. 'result' → logprob: -6.907578945159912
    9. ',' → logprob: -7.532578945159912
    10. ' to' → logprob: -7.657578945159912

Token 705: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.25858157873153687
    2. 'position' → logprob: -1.5085816383361816
    3. 'place' → logprob: -5.383581638336182
    4. 'pos' → logprob: -7.758581638336182
    5. 'avant' → logprob: -7.758581638336182
    6. 'prem' → logprob: -8.383581161499023
    7. 'c' → logprob: -8.633581161499023
    8. 'front' → logprob: -8.883581161499023
    9. 'cour' → logprob: -9.008581161499023
    10. ' current' → logprob: -9.508581161499023

Token 706: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.259079363080673e-05
    2. 'pos' → logprob: -11.375012397766113
    3. '_' → logprob: -14.250012397766113
    4. '_position' → logprob: -16.12501335144043
    5. 'Pos' → logprob: -16.37501335144043
    6. '_positions' → logprob: -16.37501335144043
    7. ' _' → logprob: -16.50001335144043
    8. '_char' → logprob: -17.37501335144043
    9. '_val' → logprob: -17.37501335144043
    10. '_p' → logprob: -17.50001335144043

Token 707: ' en' (ID: 469)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003384341485798359
    2. '                
' → logprob: -6.503384113311768
    3. '
' → logprob: -6.753384113311768
    4. ':
' → logprob: -9.128384590148926
    5. '                   ' → logprob: -9.253384590148926
    6. '           ' → logprob: -9.753384590148926
    7. 'positions' → logprob: -10.003384590148926
    8. ',' → logprob: -10.003384590148926
    9. '#' → logprob: -10.128384590148926
    10. '):
' → logprob: -10.378384590148926

Token 708: ' faisant' (ID: 67003)
  Prédit: 'effect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'effect' → logprob: -0.6750313639640808
    2. 'dé' → logprob: -1.5500314235687256
    3. 'é' → logprob: -2.9250314235687256
    4. 'util' → logprob: -2.9250314235687256
    5. 'k' → logprob: -3.0500314235687256
    6. 'result' → logprob: -3.3000314235687256
    7. 'swap' → logprob: -3.8000314235687256
    8. 'per' → logprob: -4.6750311851501465
    9. 'sw' → logprob: -4.9250311851501465
    10. 'perm' → logprob: -4.9250311851501465

Token 709: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0007404190837405622
    2. ' dist' → logprob: -7.3757405281066895
    3. 'swap' → logprob: -9.750740051269531
    4. '               ' → logprob: -11.125740051269531
    5. ' swaps' → logprob: -11.125740051269531
    6. 'sw' → logprob: -11.500740051269531
    7. '#' → logprob: -12.750740051269531
    8. '           ' → logprob: -12.875740051269531
    9. '   ' → logprob: -13.250740051269531
    10. 'for' → logprob: -13.375740051269531

Token 710: ' swaps' (ID: 150699)
  Prédit: ' swaps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' swaps' → logprob: -0.2155834287405014
    2. 'sw' → logprob: -2.215583324432373
    3. '               ' → logprob: -2.965583324432373
    4. '           ' → logprob: -4.465583324432373
    5. 'swap' → logprob: -4.965583324432373
    6. '       ' → logprob: -5.590583324432373
    7. '   ' → logprob: -5.965583324432373
    8. '                   ' → logprob: -6.465583324432373
    9. 'de' → logprob: -6.715583324432373
    10. '+' → logprob: -7.465583324432373

Token 711: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006588232354260981
    2. '                
' → logprob: -7.625658988952637
    3. '                   ' → logprob: -9.750658988952637
    4. ',' → logprob: -10.750658988952637
    5. ',
' → logprob: -10.875658988952637
    6. '
' → logprob: -10.875658988952637
    7. ':
' → logprob: -11.375658988952637
    8. '.' → logprob: -12.375658988952637
    9. '#' → logprob: -12.625658988952637
    10. '                ' → logprob: -12.875658988952637

Token 712: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002765902318060398
    2. '
' → logprob: -8.875276565551758
    3. '                
' → logprob: -9.000276565551758
    4. '                   ' → logprob: -12.125276565551758
    5. ',
' → logprob: -13.375276565551758
    6. ',' → logprob: -13.750276565551758
    7. '#' → logprob: -13.750276565551758
    8. 'k' → logprob: -14.250276565551758
    9. 'result' → logprob: -14.875276565551758
    10. '              ' → logprob: -15.000276565551758

Token 713: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.5035316944122314
    2. 'positions' → logprob: -1.0035316944122314
    3. 'result' → logprob: -4.628531455993652
    4. '               ' → logprob: -4.878531455993652
    5. 'found' → logprob: -5.003531455993652
    6. 'c' → logprob: -6.753531455993652
    7. '           ' → logprob: -7.003531455993652
    8. 'res' → logprob: -7.253531455993652
    9. 'char' → logprob: -7.753531455993652
    10. 's' → logprob: -8.003531455993652

Token 714: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.31378480792045593
    2. ' -=' → logprob: -1.3137848377227783
    3. '-' → logprob: -7.563784599304199
    4. '   ' → logprob: -13.4387845993042
    5. '           ' → logprob: -14.1887845993042
    6. ' -' → logprob: -14.9387845993042
    7. '               ' → logprob: -15.3137845993042
    8. '    ' → logprob: -15.4387845993042
    9. '	' → logprob: -15.4387845993042
    10. '       ' → logprob: -15.6887845993042

Token 715: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -9.615255839889869e-05
    2. ' dist' → logprob: -9.250096321105957
    3. '	dist' → logprob: -20.37509536743164
    4. '(dist' → logprob: -22.25009536743164
    5. '_dist' → logprob: -23.25009536743164
    6. 'Dist' → logprob: -23.25009536743164
    7. 'dis' → logprob: -24.25009536743164
    8. '   ' → logprob: -24.25009536743164
    9. '.dist' → logprob: -25.50009536743164
    10. 'distance' → logprob: -25.62509536743164

Token 716: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22790969908237457
    2. 'positions' → logprob: -1.6029096841812134
    3. ' positions' → logprob: -6.102909564971924
    4. '                
' → logprob: -9.477910041809082
    5. 'result' → logprob: -9.852910041809082
    6. ',' → logprob: -9.852910041809082
    7. 'pos' → logprob: -10.977910041809082
    8. 's' → logprob: -11.727910041809082
    9. '
' → logprob: -11.852910041809082
    10. ',
' → logprob: -11.977910041809082

Token 717: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023848863318562508
    2. 'positions' → logprob: -3.89884877204895
    3. ' positions' → logprob: -5.898849010467529
    4. 'result' → logprob: -7.773849010467529
    5. '```' → logprob: -9.773848533630371
    6. ' result' → logprob: -10.273848533630371
    7. '                
' → logprob: -11.023848533630371
    8. '           ' → logprob: -11.648848533630371
    9. 's' → logprob: -12.148848533630371
    10. ' s' → logprob: -12.898848533630371

Token 718: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5804200768470764
    2. 'positions' → logprob: -0.8304200768470764
    3. 's' → logprob: -6.080420017242432
    4. 'found' → logprob: -7.080420017242432
    5. 'current' → logprob: -7.955420017242432
    6. 'res' → logprob: -8.08042049407959
    7. 'ch' → logprob: -8.33042049407959
    8. 'char' → logprob: -8.58042049407959
    9. 'pos' → logprob: -9.58042049407959
    10. 'c' → logprob: -9.83042049407959

Token 719: ' En' (ID: 2130)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.45479321479797363
    2. 'result' → logprob: -1.0797932147979736
    3. 's' → logprob: -3.8297932147979736
    4. 'del' → logprob: -6.3297929763793945
    5. 'pos' → logprob: -7.5797929763793945
    6. 'res' → logprob: -7.5797929763793945
    7. 'selected' → logprob: -8.329792976379395
    8. 'for' → logprob: -8.329792976379395
    9. 'char' → logprob: -8.454792976379395
    10. 'chosen' → logprob: -9.079792976379395

Token 720: 'lever' (ID: 43558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03405377268791199
    2. 'positions' → logprob: -3.6590538024902344
    3. 's' → logprob: -5.534053802490234
    4. 'del' → logprob: -6.659053802490234
    5. 'lever' → logprob: -6.659053802490234
    6. 'for' → logprob: -8.159053802490234
    7. 'res' → logprob: -8.534053802490234
    8. 'ret' → logprob: -8.784053802490234
    9. 'pos' → logprob: -9.034053802490234
    10. '   ' → logprob: -9.784053802490234

Token 721: ' ce' (ID: 2357)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0018694984028115869
    2. ' positions' → logprob: -6.5018696784973145
    3. 'pos' → logprob: -8.251869201660156
    4. '               ' → logprob: -9.376869201660156
    5. 's' → logprob: -11.376869201660156
    6. '           ' → logprob: -12.501869201660156
    7. '                   ' → logprob: -12.751869201660156
    8. ' s' → logprob: -13.626869201660156
    9. 'position' → logprob: -13.751869201660156
    10. 'indices' → logprob: -15.376869201660156

Token 722: ' caractère' (ID: 80509)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0011119971750304103
    2. 'token' → logprob: -7.50111198425293
    3. 's' → logprob: -8.00111198425293
    4. 'pos' → logprob: -9.87611198425293
    5. ' positions' → logprob: -10.00111198425293
    6. '[' → logprob: -11.00111198425293
    7. 'tokens' → logprob: -11.25111198425293
    8. 'p' → logprob: -11.37611198425293
    9. 'position' → logprob: -11.37611198425293
    10. '.positions' → logprob: -11.75111198425293

Token 723: ' de' (ID: 334)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.03716708719730377
    2. '               ' → logprob: -3.4121670722961426
    3. ' positions' → logprob: -5.787167072296143
    4. 'from' → logprob: -8.0371675491333
    5. ' from' → logprob: -9.2871675491333
    6. '.positions' → logprob: -11.4121675491333
    7. 'pos' → logprob: -11.5371675491333
    8. '                   ' → logprob: -12.6621675491333
    9. ',' → logprob: -13.2871675491333
    10. '                       ' → logprob: -13.7871675491333

Token 724: ' la' (ID: 557)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -7.684157026233152e-05
    2. ' positions' → logprob: -9.500077247619629
    3. 'la' → logprob: -13.500077247619629
    4. 'deque' → logprob: -15.250077247619629
    5. 'pos' → logprob: -16.250076293945312
    6. '```' → logprob: -16.500076293945312
    7. ' la' → logprob: -17.250076293945312
    8. 'the' → logprob: -17.500076293945312
    9. 'position' → logprob: -17.750076293945312
    10. 'queues' → logprob: -18.250076293945312

Token 725: ' liste' (ID: 31719)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5766569972038269
    2. 'deque' → logprob: -0.8266569972038269
    3. 'queue' → logprob: -7.701656818389893
    4. '```' → logprob: -8.57665729522705
    5. 'dé' → logprob: -10.45165729522705
    6. 'position' → logprob: -10.95165729522705
    7. 'collections' → logprob: -12.07665729522705
    8. 'pile' → logprob: -12.20165729522705
    9. ' deque' → logprob: -12.45165729522705
    10. 'pos' → logprob: -12.82665729522705

Token 726: ' des' (ID: 731)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.006598494481295347
    2. ' positions' → logprob: -5.506598472595215
    3. '               ' → logprob: -6.006598472595215
    4. '.positions' → logprob: -10.756598472595215
    5. '           ' → logprob: -11.131598472595215
    6. '                   ' → logprob: -11.631598472595215
    7. 'pos' → logprob: -12.881598472595215
    8. '```' → logprob: -13.006598472595215
    9. '[' → logprob: -13.881598472595215
    10. 'indices' → logprob: -14.506598472595215

Token 727: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0004441355704329908
    2. ' positions' → logprob: -7.750443935394287
    3. 'indices' → logprob: -12.000444412231445
    4. 'pos' → logprob: -12.125444412231445
    5. 'deque' → logprob: -14.375444412231445
    6. '.positions' → logprob: -15.125444412231445
    7. 'indexes' → logprob: -15.250444412231445
    8. 'queues' → logprob: -15.875444412231445
    9. '_positions' → logprob: -16.000444412231445
    10. '```' → logprob: -16.625444412231445

Token 728: '
' (ID: 198)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.4344087243080139
    2. '               ' → logprob: -1.0594086647033691
    3. ' positions' → logprob: -5.184408664703369
    4. '           ' → logprob: -10.434409141540527
    5. '.positions' → logprob: -10.684409141540527
    6. '```' → logprob: -11.184409141540527
    7. '                   ' → logprob: -12.434409141540527
    8. '_positions' → logprob: -12.434409141540527
    9. ',' → logprob: -12.934409141540527
    10. 'pos' → logprob: -13.184409141540527

Token 729: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07035508006811142
    2. 'positions' → logprob: -2.695355176925659
    3. ' positions' → logprob: -7.82035493850708
    4. '```' → logprob: -11.945355415344238
    5. '           ' → logprob: -12.445355415344238
    6. '.positions' → logprob: -13.445355415344238
    7. '[' → logprob: -14.195355415344238
    8. ',' → logprob: -14.320355415344238
    9. '_positions' → logprob: -14.320355415344238
    10. 'Positions' → logprob: -14.570355415344238

Token 730: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' (adapté à ' positions') → logprob: -0.00011653638648567721
    2. '               ' → logprob: -9.375116348266602
    3. ' positions' → logprob: -10.625116348266602
    4. '           ' → logprob: -12.125116348266602
    5. '   ' → logprob: -13.875116348266602
    6. '       ' → logprob: -14.500116348266602
    7. 'pos' → logprob: -15.250116348266602
    8. '.positions' → logprob: -16.6251163482666
    9. '_positions' → logprob: -16.6251163482666
    10. '                   ' → logprob: -17.3751163482666

Token 731: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. '```' → logprob: -18.375
    4. ' [' → logprob: -18.5
    5. 'c' → logprob: -18.625
    6. '[C' → logprob: -19.375
    7. '=c' → logprob: -19.625
    8. '               ' → logprob: -19.75
    9. '           ' → logprob: -20.0
    10. '(c' → logprob: -20.0

Token 732: '].' (ID: 1651)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.06693288683891296
    2. '].' → logprob: -3.3169329166412354
    3. '[' → logprob: -4.191932678222656
    4. '][' → logprob: -4.316932678222656
    5. '.c' → logprob: -12.441932678222656
    6. '   ' → logprob: -12.441932678222656
    7. '           ' → logprob: -12.816932678222656
    8. 'c' → logprob: -13.191932678222656
    9. ']' → logprob: -13.191932678222656
    10. '       ' → logprob: -13.566932678222656

Token 733: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.512236498361744e-07
    2. '.p' → logprob: -14.500000953674316
    3. ' p' → logprob: -19.125
    4. 'pop' → logprob: -20.0
    5. '```' → logprob: -20.625
    6. '   ' → logprob: -22.625
    7. '	p' → logprob: -22.625
    8. 'opleft' → logprob: -22.875
    9. '_p' → logprob: -23.125
    10. ''p' → logprob: -23.625

Token 734: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -1.0325924449716695e-05
    2. 'op' → logprob: -11.75001049041748
    3. 'ople' → logprob: -13.62501049041748
    4. '[' → logprob: -14.00001049041748
    5. '```' → logprob: -16.000009536743164
    6. 'oplevel' → logprob: -16.875009536743164
    7. 'opt' → logprob: -17.000009536743164
    8. 'opl' → logprob: -17.000009536743164
    9. 'p' → logprob: -17.500009536743164
    10. 'opped' → logprob: -17.750009536743164

Token 735: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05273345485329628
    2. '           ' → logprob: -3.8027334213256836
    3. '       ' → logprob: -4.177733421325684
    4. '
' → logprob: -5.552733421325684
    5. '                
' → logprob: -6.052733421325684
    6. '<|end|>' → logprob: -6.302733421325684
    7. 'result' → logprob: -6.927733421325684
    8. ',' → logprob: -7.052733421325684
    9. ' s' → logprob: -7.302733421325684
    10. ')' → logprob: -7.802733421325684

Token 736: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.547623336315155
    2. '       ' → logprob: -0.922623336315155
    3. '           ' → logprob: -4.297623157501221
    4. '```' → logprob: -4.672623157501221
    5. 'result' → logprob: -7.672623157501221
    6. '``' → logprob: -8.172623634338379
    7. '   ' → logprob: -8.922623634338379
    8. '                   ' → logprob: -9.547623634338379
    9. ' result' → logprob: -9.547623634338379
    10. '<|end|>' → logprob: -9.922623634338379

Token 737: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2758083641529083
    2. '       ' → logprob: -1.525808334350586
    3. ' result' → logprob: -4.400808334350586
    4. '               ' → logprob: -4.775808334350586
    5. '           ' → logprob: -6.150808334350586
    6. '```' → logprob: -7.900808334350586
    7. '   ' → logprob: -8.650808334350586
    8. 's' → logprob: -8.650808334350586
    9. ' s' → logprob: -11.650808334350586
    10. '
' → logprob: -12.150808334350586

Token 738: ' Ajouter' (ID: 165754)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -7.93448489275761e-05
    2. 's' → logprob: -10.000079154968262
    3. '   ' → logprob: -11.625079154968262
    4. '               ' → logprob: -11.875079154968262
    5. ' result' → logprob: -12.375079154968262
    6. 'res' → logprob: -12.625079154968262
    7. '           ' → logprob: -12.875079154968262
    8. 'current' → logprob: -13.250079154968262
    9. 'while' → logprob: -13.250079154968262
    10. '       ' → logprob: -13.875079154968262

Token 739: ' à' (ID: 1221)
  Prédit: '(chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(chr' → logprob: -0.13021406531333923
    2. 'chr' → logprob: -2.380213975906372
    3. '(s' → logprob: -4.755214214324951
    4. '(ch' → logprob: -5.380214214324951
    5. 'result' → logprob: -5.380214214324951
    6. '(' → logprob: -5.505214214324951
    7. '(c' → logprob: -5.755214214324951
    8. 'ch' → logprob: -6.505214214324951
    9. 's' → logprob: -6.880214214324951
    10. 'c' → logprob: -7.255214214324951

Token 740: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00020354038861114532
    2. ' result' → logprob: -8.500203132629395
    3. '	result' → logprob: -18.75020408630371
    4. '[result' → logprob: -20.62520408630371
    5. '_result' → logprob: -20.87520408630371
    6. 'res' → logprob: -21.50020408630371
    7. '```' → logprob: -21.87520408630371
    8. 'answer' → logprob: -21.87520408630371
    9. '(result' → logprob: -22.00020408630371
    10. 'the' → logprob: -22.12520408630371

Token 741: ' réponse' (ID: 50332)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0280383548888494e-06
    2. 'rés' → logprob: -14.625000953674316
    3. ' result' → logprob: -15.500000953674316
    4. '```' → logprob: -15.625000953674316
    5. 'res' → logprob: -16.750001907348633
    6. 'final' → logprob: -18.500001907348633
    7. '	result' → logprob: -18.500001907348633
    8. '
' → logprob: -18.625001907348633
    9. 'output' → logprob: -18.750001907348633
    10. '`' → logprob: -18.875001907348633

Token 742: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2050650417804718
    2. ' result' → logprob: -2.0800650119781494
    3. '               ' → logprob: -3.2050650119781494
    4. '           ' → logprob: -4.8300652503967285
    5. '.append' → logprob: -5.3300652503967285
    6. '       ' → logprob: -5.8300652503967285
    7. '(result' → logprob: -6.3300652503967285
    8. '```' → logprob: -6.4550652503967285
    9. '                   ' → logprob: -8.33006477355957
    10. ',result' → logprob: -8.95506477355957

Token 743: '               ' (ID: 506)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3325625956058502
    2. '.append' → logprob: -1.4575625658035278
    3. ' result' → logprob: -3.2075626850128174
    4. '               ' → logprob: -5.582562446594238
    5. '           ' → logprob: -5.957562446594238
    6. '       ' → logprob: -6.332562446594238
    7. 'append' → logprob: -6.957562446594238
    8. 's' → logprob: -8.332562446594238
    9. '                   ' → logprob: -9.332562446594238
    10. ' s' → logprob: -9.457562446594238

Token 744: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -1.688212614681106e-05
    2. ' result' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.750017166137695
    4. 'res' → logprob: -19.000017166137695
    5. 's' → logprob: -19.125017166137695
    6. '	result' → logprob: -19.625017166137695
    7. 'ch' → logprob: -21.250017166137695
    8. '       ' → logprob: -21.500017166137695
    9. 'answer' → logprob: -21.500017166137695
    10. '
' → logprob: -21.500017166137695

Token 745: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.726595241460018e-05
    2. '.' → logprob: -10.25003719329834
    3. '.app' → logprob: -14.00003719329834
    4. '.extend' → logprob: -14.87503719329834
    5. 'append' → logprob: -15.12503719329834
    6. ' .' → logprob: -15.62503719329834
    7. '+=' → logprob: -15.87503719329834
    8. '.ap' → logprob: -17.500038146972656
    9. '.Append' → logprob: -17.875038146972656
    10. ' +=' → logprob: -17.875038146972656

Token 746: '(chr' (ID: 185847)
  Prédit: '(chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chr' → logprob: -1.3782830137643032e-05
    2. 'chr' → logprob: -11.25001335144043
    3. '(' → logprob: -14.62501335144043
    4. '(ord' → logprob: -16.12501335144043
    5. ' chr' → logprob: -16.25001335144043
    6. '_chr' → logprob: -17.87501335144043
    7. '(ch' → logprob: -17.87501335144043
    8. '(str' → logprob: -19.00001335144043
    9. 'Chr' → logprob: -19.50001335144043
    10. '((' → logprob: -19.62501335144043

Token 747: '(c' (ID: 2410)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.057138629257678986
    2. '(' → logprob: -3.057138681411743
    3. '(c' → logprob: -4.932138442993164
    4. '97' → logprob: -7.057138442993164
    5. '(pos' → logprob: -8.557138442993164
    6. 'ord' → logprob: -8.682138442993164
    7. 'c' → logprob: -10.182138442993164
    8. '65' → logprob: -12.182138442993164
    9. 'pos' → logprob: -12.182138442993164
    10. 'positions' → logprob: -12.307138442993164

Token 748: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16137655079364777
    2. ' +' → logprob: -1.9113765954971313
    3. '(ord' → logprob: -6.786376476287842
    4. 'ord' → logprob: -10.786376953125
    5. ' ord' → logprob: -14.536376953125
    6. ')' → logprob: -14.911376953125
    7. '_ord' → logprob: -15.161376953125
    8. '   ' → logprob: -15.786376953125
    9. '(' → logprob: -15.911376953125
    10. '           ' → logprob: -16.036376953125

Token 749: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.34176549315452576
    2. '97' → logprob: -1.3417655229568481
    3. ' ord' → logprob: -3.5917654037475586
    4. 'a' → logprob: -7.841765403747559
    5. '(ord' → logprob: -9.216765403747559
    6. ' ' → logprob: -10.466765403747559
    7. '96' → logprob: -11.091765403747559
    8. ''a' → logprob: -11.841765403747559
    9. '   ' → logprob: -12.216765403747559
    10. '98' → logprob: -13.716765403747559

Token 750: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.763666947837919e-05
    2. ''a' → logprob: -10.00004768371582
    3. '(' → logprob: -13.37504768371582
    4. '("' → logprob: -15.00004768371582
    5. 'a' → logprob: -15.62504768371582
    6. ' ('' → logprob: -16.87504768371582
    7. '(
' → logprob: -17.62504768371582
    8. ''' → logprob: -19.25004768371582
    9. ''s' → logprob: -19.50004768371582
    10. '(a' → logprob: -19.75004768371582

Token 751: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002613358374219388
    2. ''a' → logprob: -8.250261306762695
    3. ' a' → logprob: -19.750261306762695
    4. ''' → logprob: -20.375261306762695
    5. '’a' → logprob: -20.875261306762695
    6. '```' → logprob: -21.125261306762695
    7. '_a' → logprob: -21.250261306762695
    8. '97' → logprob: -21.625261306762695
    9. 'а' → logprob: -22.125261306762695
    10. '	a' → logprob: -22.375261306762695

Token 752: '')))
' (ID: 114539)
  Prédit: '')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')))' → logprob: -0.0033325375989079475
    2. '')))
' → logprob: -6.253332614898682
    3. ''))' → logprob: -6.753332614898682
    4. ')))' → logprob: -8.378332138061523
    5. '")))' → logprob: -13.128332138061523
    6. '')' → logprob: -13.253332138061523
    7. ''' → logprob: -13.753332138061523
    8. ')' → logprob: -13.878332138061523
    9. ')))
' → logprob: -16.253332138061523
    10. ''))
' → logprob: -16.753332138061523

Token 753: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030633797869086266
    2. '```' → logprob: -4.280633926391602
    3. 'current' → logprob: -4.905633926391602
    4. ' current' → logprob: -5.905633926391602
    5. '               ' → logprob: -6.030633926391602
    6. '   ' → logprob: -6.405633926391602
    7. '           ' → logprob: -7.780633926391602
    8. '``' → logprob: -8.030633926391602
    9. '
' → logprob: -8.155633926391602
    10. '        
' → logprob: -8.280633926391602

Token 754: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0051576197147369385
    2. '   ' → logprob: -5.505157470703125
    3. ' current' → logprob: -6.880157470703125
    4. '       ' → logprob: -10.880157470703125
    5. 'while' → logprob: -11.130157470703125
    6. '	current' → logprob: -11.630157470703125
    7. 'for' → logprob: -12.630157470703125
    8. 'if' → logprob: -13.005157470703125
    9. 's' → logprob: -13.880157470703125
    10. 'k' → logprob: -14.630157470703125

Token 755: ' Mar' (ID: 3145)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0009839815320447087
    2. 'while' → logprob: -7.875984191894531
    3. ' current' → logprob: -8.750984191894531
    4. 's' → logprob: -9.000984191894531
    5. 'for' → logprob: -9.000984191894531
    6. '#' → logprob: -9.125984191894531
    7. '   ' → logprob: -9.625984191894531
    8. 'pos' → logprob: -12.125984191894531
    9. 'del' → logprob: -12.500984191894531
    10. 'positions' → logprob: -13.000984191894531

Token 756: 'quer' (ID: 8054)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.016406990587711334
    2. 'k' → logprob: -4.141407012939453
    3. '   ' → logprob: -9.141407012939453
    4. 'r' → logprob: -9.641407012939453
    5. 'rk' → logprob: -9.641407012939453
    6. ' current' → logprob: -9.766407012939453
    7. 'quer' → logprob: -10.766407012939453
    8. '	current' → logprob: -11.266407012939453
    9. 'kup' → logprob: -11.391407012939453
    10. '       ' → logprob: -11.891407012939453

Token 757: ' cette' (ID: 7696)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0976797491312027
    2. ' current' → logprob: -2.722679853439331
    3. 'pos' → logprob: -3.972679853439331
    4. 'positions' → logprob: -5.972679615020752
    5. ' pos' → logprob: -6.597679615020752
    6. 'visited' → logprob: -6.847679615020752
    7. 's' → logprob: -6.972679615020752
    8. 'found' → logprob: -7.472679615020752
    9. 'used' → logprob: -7.722679615020752
    10. ' s' → logprob: -7.972679615020752

Token 758: ' position' (ID: 4010)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.13019564747810364
    2. 'position' → logprob: -3.2551956176757812
    3. ' current' → logprob: -3.3801956176757812
    4. 'result' → logprob: -3.7551956176757812
    5. 'pos' → logprob: -5.255195617675781
    6. 'found' → logprob: -6.005195617675781
    7. 'positions' → logprob: -6.130195617675781
    8. 'char' → logprob: -6.380195617675781
    9. '   ' → logprob: -6.505195617675781
    10. 'replacement' → logprob: -7.130195617675781

Token 759: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6412492990493774
    2. ' =' → logprob: -0.7662492990493774
    3. 'current' → logprob: -5.766249179840088
    4. '=current' → logprob: -6.141249179840088
    5. '               ' → logprob: -7.391249179840088
    6. '   ' → logprob: -7.641249179840088
    7. '```' → logprob: -7.891249179840088
    8. '           ' → logprob: -8.266249656677246
    9. 'positions' → logprob: -8.266249656677246
    10. 'visited' → logprob: -8.516249656677246

Token 760: ' "' (ID: 392)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.3151945471763611
    2. 'current' → logprob: -1.5651946067810059
    3. 'visited' → logprob: -3.565194606781006
    4. ' used' → logprob: -4.815194606781006
    5. ' current' → logprob: -4.940194606781006
    6. 'None' → logprob: -4.940194606781006
    7. 'selected' → logprob: -6.315194606781006
    8. '-' → logprob: -6.440194606781006
    9. ' None' → logprob: -6.690194606781006
    10. 'occupied' → logprob: -6.940194606781006

Token 761: 'ret' (ID: 3431)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0036943741142749786
    2. 'current' → logprob: -6.253694534301758
    3. ' used' → logprob: -7.878694534301758
    4. 'visited' → logprob: -7.878694534301758
    5. 'None' → logprob: -8.003694534301758
    6. 'taken' → logprob: -8.628694534301758
    7. 'processed' → logprob: -9.253694534301758
    8. 'occupied' → logprob: -9.503694534301758
    9. 'chosen' → logprob: -9.503694534301758
    10. 'selected' → logprob: -9.503694534301758

Token 762: 'ir' (ID: 380)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18875227868556976
    2. 'ir' → logprob: -2.3137521743774414
    3. 'ra' → logprob: -3.5637521743774414
    4. 'ained' → logprob: -4.563752174377441
    5. 'ired' → logprob: -4.688752174377441
    6. 'rait' → logprob: -5.063752174377441
    7. 'ourn' → logprob: -5.563752174377441
    8. 'ru' → logprob: -6.313752174377441
    9. 'rou' → logprob: -6.563752174377441
    10. 'ried' → logprob: -6.688752174377441

Token 763: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.06986439973115921
    2. 'ir' → logprob: -3.319864511489868
    3. 'érée' → logprob: -4.569864273071289
    4. 'i' → logprob: -4.819864273071289
    5. 'é' → logprob: -4.819864273071289
    6. 'rée' → logprob: -6.069864273071289
    7. 'ivée' → logprob: -7.944864273071289
    8. '   ' → logprob: -7.944864273071289
    9. 'urée' → logprob: -8.194864273071289
    10. 'uée' → logprob: -8.694864273071289

Token 764: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3611387014389038
    2. '"
' → logprob: -1.7361387014389038
    3. ')' → logprob: -3.4861388206481934
    4. '")' → logprob: -3.6111388206481934
    5. '               ' → logprob: -3.8611388206481934
    6. ')
' → logprob: -3.9861388206481934
    7. '")
' → logprob: -4.736138820648193
    8. 'from' → logprob: -5.611138820648193
    9. '                   ' → logprob: -5.861138820648193
    10. 's' → logprob: -6.236138820648193

Token 765: ' dans' (ID: 2671)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5614601373672485
    2. ' current' → logprob: -2.436460018157959
    3. '	current' → logprob: -2.936460018157959
    4. ' s' → logprob: -3.186460018157959
    5. '[current' → logprob: -3.186460018157959
    6. '```' → logprob: -3.936460018157959
    7. '               ' → logprob: -4.061460018157959
    8. 's' → logprob: -4.061460018157959
    9. ' 
' → logprob: -4.061460018157959
    10. '	
' → logprob: -4.436460018157959

Token 766: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2200515866279602
    2. 'positions' → logprob: -2.0950515270233154
    3. 'current' → logprob: -2.9700515270233154
    4. ' s' → logprob: -4.0950517654418945
    5. ' current' → logprob: -5.7200517654418945
    6. ' positions' → logprob: -6.7200517654418945
    7. 'pos' → logprob: -7.0950517654418945
    8. 'k' → logprob: -7.8450517654418945
    9. '```' → logprob: -8.470051765441895
    10. '#' → logprob: -8.595051765441895

Token 767: ' :' (ID: 712)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.020890474319458
    2. '[current' → logprob: -2.395890474319458
    3. 's' → logprob: -2.520890474319458
    4. '               ' → logprob: -2.645890474319458
    5. '```' → logprob: -2.645890474319458
    6. '       ' → logprob: -2.645890474319458
    7. ' current' → logprob: -3.270890474319458
    8. '           ' → logprob: -3.395890474319458
    9. ' s' → logprob: -3.395890474319458
    10. '<|end|>' → logprob: -3.895890474319458

Token 768: ' on' (ID: 402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014697770588099957
    2. '   ' → logprob: -4.389697551727295
    3. '```' → logprob: -6.889697551727295
    4. '           ' → logprob: -7.764697551727295
    5. 'current' → logprob: -8.389698028564453
    6. ' s' → logprob: -8.514698028564453
    7. 'while' → logprob: -9.139698028564453
    8. '	s' → logprob: -9.389698028564453
    9. '       ' → logprob: -10.014698028564453
    10. '               ' → logprob: -10.264698028564453

Token 769: ' va' (ID: 3423)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3592124879360199
    2. ' s' → logprob: -2.8592123985290527
    3. '#' → logprob: -2.9842123985290527
    4. '[s' → logprob: -3.3592123985290527
    5. '```' → logprob: -3.4842123985290527
    6. 'current' → logprob: -3.6092123985290527
    7. '   ' → logprob: -3.7342123985290527
    8. '[' → logprob: -4.234212398529053
    9. 'while' → logprob: -4.734212398529053
    10. 'replace' → logprob: -4.984212398529053

Token 770: ' reconstru' (ID: 108053)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.541621744632721
    2. 'rem' → logprob: -1.7916216850280762
    3. 'mar' → logprob: -2.791621685028076
    4. 's' → logprob: -2.916621685028076
    5. ' current' → logprob: -3.166621685028076
    6. ' avancer' → logprob: -4.041621685028076
    7. ' remplacer' → logprob: -4.166621685028076
    8. 'contin' → logprob: -4.666621685028076
    9. ' mar' → logprob: -5.041621685028076
    10. 'in' → logprob: -5.041621685028076

Token 771: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.0024819616228342056
    2. 'cter' → logprob: -6.752481937408447
    3. 'ite' → logprob: -7.877481937408447
    4. 'uire' → logprob: -8.002482414245605
    5. 'iter' → logprob: -8.627482414245605
    6. 'ir' → logprob: -9.252482414245605
    7. '   ' → logprob: -9.752482414245605
    8. 'érer' → logprob: -10.002482414245605
    9. 'er' → logprob: -10.252482414245605
    10. 'ct' → logprob: -10.377482414245605

Token 772: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5338190197944641
    2. ' s' → logprob: -0.9088190197944641
    3. ' current' → logprob: -5.283819198608398
    4. 'current' → logprob: -5.658819198608398
    5. 'the' → logprob: -7.783819198608398
    6. ' the' → logprob: -8.158819198608398
    7. '<|end|>' → logprob: -8.408819198608398
    8. ' la' → logprob: -8.533819198608398
    9. ' 
' → logprob: -8.658819198608398
    10. '```' → logprob: -9.033819198608398

Token 773: ' reste' (ID: 26769)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2610512375831604
    2. ' s' → logprob: -1.8860511779785156
    3. 'current' → logprob: -3.5110511779785156
    4. 'result' → logprob: -4.386051177978516
    5. 'string' → logprob: -4.636051177978516
    6. 'rest' → logprob: -5.386051177978516
    7. ' current' → logprob: -5.386051177978516
    8. '```' → logprob: -5.386051177978516
    9. 'remaining' → logprob: -6.136051177978516
    10. '#' → logprob: -6.636051177978516

Token 774: ' en' (ID: 469)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3770064115524292
    2. 's' → logprob: -1.6270064115524292
    3. '               ' → logprob: -2.6270065307617188
    4. '                   ' → logprob: -3.8770065307617188
    5. '           ' → logprob: -5.752006530761719
    6. '       ' → logprob: -5.877006530761719
    7. ' of' → logprob: -6.002006530761719
    8. '```' → logprob: -6.127006530761719
    9. ' =' → logprob: -6.252006530761719
    10. ' de' → logprob: -6.377006530761719

Token 775: ' en' (ID: 469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2899872660636902
    2. 'result' → logprob: -2.039987325668335
    3. ' s' → logprob: -3.289987325668335
    4. '#' → logprob: -3.789987325668335
    5. 'continu' → logprob: -4.664987087249756
    6. 'rem' → logprob: -5.164987087249756
    7. 'current' → logprob: -5.289987087249756
    8. ' result' → logprob: -5.539987087249756
    9. 'range' → logprob: -5.664987087249756
    10. 'rés' → logprob: -5.789987087249756

Token 776: 'levant' (ID: 37477)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7748900651931763
    2. 'result' → logprob: -1.5248900651931763
    3. ' s' → logprob: -2.6498899459838867
    4. 'ext' → logprob: -2.8998899459838867
    5. 'while' → logprob: -2.8998899459838867
    6. 'pass' → logprob: -3.5248899459838867
    7. 'for' → logprob: -3.7748899459838867
    8. '   ' → logprob: -4.149889945983887
    9. 't' → logprob: -5.024889945983887
    10. 'pos' → logprob: -5.149889945983887

Token 777: ' ce' (ID: 2357)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14057785272598267
    2. ' s' → logprob: -2.390577793121338
    3. '   ' → logprob: -4.390577793121338
    4. 'pos' → logprob: -4.640577793121338
    5. '[' → logprob: -5.765577793121338
    6. '[s' → logprob: -5.765577793121338
    7. '```' → logprob: -5.765577793121338
    8. 'the' → logprob: -6.390577793121338
    9. '[]' → logprob: -6.890577793121338
    10. 'le' → logprob: -7.140577793121338

Token 778: ' caractère' (ID: 80509)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5471300482749939
    2. 's' → logprob: -1.2971301078796387
    3. 'chr' → logprob: -3.0471301078796387
    4. 'pos' → logprob: -3.0471301078796387
    5. 'for' → logprob: -4.297130107879639
    6. '```' → logprob: -4.672130107879639
    7. 'char' → logprob: -4.797130107879639
    8. ' s' → logprob: -5.422130107879639
    9. '[' → logprob: -5.422130107879639
    10. 'character' → logprob: -6.797130107879639

Token 779: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8143523335456848
    2. '               ' → logprob: -1.56435227394104
    3. '```' → logprob: -1.68935227394104
    4. '<|end|>' → logprob: -3.31435227394104
    5. '           ' → logprob: -3.81435227394104
    6. ' s' → logprob: -3.81435227394104
    7. '                   ' → logprob: -4.189352512359619
    8. '       ' → logprob: -4.564352512359619
    9. '<|end|>' → logprob: -4.564352512359619
    10. 'positions' → logprob: -5.064352512359619

Token 780: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9143213629722595
    2. '```' → logprob: -1.9143214225769043
    3. '<|end|>' → logprob: -2.2893214225769043
    4. ' s' → logprob: -3.0393214225769043
    5. ' 
' → logprob: -3.0393214225769043
    6. 's' → logprob: -3.2893214225769043
    7. '        
' → logprob: -3.2893214225769043
    8. '   ' → logprob: -3.5393214225769043
    9. '[current' → logprob: -3.9143214225769043
    10. '               ' → logprob: -4.289321422576904

Token 781: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15834830701351166
    2. 'current' → logprob: -2.908348321914673
    3. 'while' → logprob: -3.158348321914673
    4. '   ' → logprob: -4.283348083496094
    5. 'del' → logprob: -4.533348083496094
    6. ' s' → logprob: -4.658348083496094
    7. 'for' → logprob: -5.033348083496094
    8. ' while' → logprob: -6.408348083496094
    9. ' current' → logprob: -6.533348083496094
    10. 'pos' → logprob: -6.658348083496094

Token 782: ' On' (ID: 2160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4359494745731354
    2. 'current' → logprob: -1.435949444770813
    3. '   ' → logprob: -3.1859495639801025
    4. 'while' → logprob: -3.4359495639801025
    5. 'for' → logprob: -4.310949325561523
    6. 'del' → logprob: -4.685949325561523
    7. '#' → logprob: -5.060949325561523
    8. 'positions' → logprob: -5.560949325561523
    9. 'removed' → logprob: -5.685949325561523
    10. 'pos' → logprob: -6.185949325561523

Token 783: ' va' (ID: 3423)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.257594347000122
    2. '#' → logprob: -1.757594347000122
    3. '   ' → logprob: -1.757594347000122
    4. ' s' → logprob: -2.132594347000122
    5. 'for' → logprob: -2.632594347000122
    6. 'while' → logprob: -2.882594347000122
    7. ' for' → logprob: -3.882594347000122
    8. ' #' → logprob: -3.882594347000122
    9. 'rem' → logprob: -4.132594108581543
    10. ' while' → logprob: -4.382594108581543

Token 784: ' gérer' (ID: 86786)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1459077149629593
    2. 'remove' → logprob: -2.7709076404571533
    3. 'replace' → logprob: -4.020907878875732
    4. 'pos' → logprob: -4.145907878875732
    5. 's' → logprob: -4.770907878875732
    6. '#' → logprob: -4.895907878875732
    7. 'continue' → logprob: -5.020907878875732
    8. 'pass' → logprob: -5.395907878875732
    9. 'j' → logprob: -6.395907878875732
    10. '```' → logprob: -6.395907878875732

Token 785: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.938507080078125
    2. ' s' → logprob: -0.938507080078125
    3. '```' → logprob: -3.188507080078125
    4. '   ' → logprob: -3.563507080078125
    5. 'le' → logprob: -3.563507080078125
    6. ' les' → logprob: -4.063507080078125
    7. 'les' → logprob: -4.313507080078125
    8. 'current' → logprob: -4.438507080078125
    9. 'la' → logprob: -4.688507080078125
    10. 'del' → logprob: -4.938507080078125

Token 786: ' mise' (ID: 25868)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1855340003967285
    2. 'current' → logprob: -1.8105340003967285
    3. 'del' → logprob: -2.1855340003967285
    4. 'shift' → logprob: -2.5605340003967285
    5. '#' → logprob: -3.0605340003967285
    6. 'positions' → logprob: -3.0605340003967285
    7. 'removed' → logprob: -3.3105340003967285
    8. '```' → logprob: -3.6855340003967285
    9. 'rest' → logprob: -3.8105340003967285
    10. 'rem' → logprob: -4.0605340003967285

Token 787: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.30225321650505066
    2. ' à' → logprob: -1.427253246307373
    3. '   ' → logprob: -4.927253246307373
    4. '```' → logprob: -5.177253246307373
    5. 'en' → logprob: -5.677253246307373
    6. 'de' → logprob: -6.927253246307373
    7. '-à' → logprob: -7.052253246307373
    8. 'aj' → logprob: -7.677253246307373
    9. 'À' → logprob: -7.802253246307373
    10. 's' → logprob: -8.302252769470215

Token 788: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.009544167667627335
    2. '```' → logprob: -5.009544372558594
    3. 'jours' → logprob: -7.009544372558594
    4. 'day' → logprob: -7.009544372558594
    5. 'jou' → logprob: -7.509544372558594
    6. ' ' → logprob: -9.009544372558594
    7. 'jourd' → logprob: -9.134544372558594
    8. ' jour' → logprob: -10.009544372558594
    9. '``' → logprob: -11.009544372558594
    10. 'journ' → logprob: -11.009544372558594

Token 789: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30425819754600525
    2. '       ' → logprob: -2.804258108139038
    3. 's' → logprob: -2.929258108139038
    4. '```' → logprob: -3.304258108139038
    5. '           ' → logprob: -3.429258108139038
    6. ' s' → logprob: -3.929258108139038
    7. ' de' → logprob: -4.054258346557617
    8. 'de' → logprob: -4.304258346557617
    9. ' du' → logprob: -5.054258346557617
    10. ' des' → logprob: -5.179258346557617

Token 790: ' pratique' (ID: 42780)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mar' → logprob: -1.1910884380340576
    2. 'rem' → logprob: -1.9410884380340576
    3. 'continu' → logprob: -1.9410884380340576
    4. 's' → logprob: -2.0660884380340576
    5. 'del' → logprob: -2.9410884380340576
    6. 're' → logprob: -3.4410884380340576
    7. 'dé' → logprob: -3.4410884380340576
    8. '```' → logprob: -3.4410884380340576
    9. ' supprim' → logprob: -3.6910884380340576
    10. ' continu' → logprob: -4.441088676452637

Token 791: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14853960275650024
    2. '   ' → logprob: -3.0235395431518555
    3. '           ' → logprob: -3.7735395431518555
    4. 's' → logprob: -4.0235395431518555
    5. '               ' → logprob: -4.1485395431518555
    6. '```' → logprob: -4.6485395431518555
    7. ' s' → logprob: -5.1485395431518555
    8. '        
' → logprob: -5.5235395431518555
    9. '<|end|>' → logprob: -5.8985395431518555
    10. '                   ' → logprob: -6.1485395431518555

Token 792: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6034641861915588
    2. 'rem' → logprob: -1.728464126586914
    3. 'current' → logprob: -2.603464126586914
    4. 'del' → logprob: -2.728464126586914
    5. 'mar' → logprob: -3.103464126586914
    6. 'continu' → logprob: -3.478464126586914
    7. 'pass' → logprob: -4.103464126586914
    8. 'for' → logprob: -5.228464126586914
    9. '```' → logprob: -5.228464126586914
    10. 're' → logprob: -5.478464126586914

Token 793: 'ignor' (ID: 180153)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -1.3959053754806519
    2. 'mar' → logprob: -1.3959053754806519
    3. 'dé' → logprob: -2.2709054946899414
    4. 'del' → logprob: -2.5209054946899414
    5. 's' → logprob: -2.5209054946899414
    6. 'continu' → logprob: -3.0209054946899414
    7. 'current' → logprob: -3.1459054946899414
    8. 'sup' → logprob: -3.6459054946899414
    9. 'ignor' → logprob: -3.7709054946899414
    10. 'ret' → logprob: -4.020905494689941

Token 794: 'ant' (ID: 493)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.018666885793209076
    2. 'er' → logprob: -5.268666744232178
    3. 'orer' → logprob: -5.393666744232178
    4. 'ant' → logprob: -5.518666744232178
    5. 'oring' → logprob: -5.893666744232178
    6. '#' → logprob: -7.018666744232178
    7. 'o' → logprob: -8.393667221069336
    8. 'érant' → logprob: -8.518667221069336
    9. '```' → logprob: -8.643667221069336
    10. 'e' → logprob: -9.518667221069336

Token 795: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.8227055072784424
    2. '"' → logprob: -1.5727055072784424
    3. 's' → logprob: -1.8227055072784424
    4. ' s' → logprob: -2.5727055072784424
    5. ' les' → logprob: -2.8227055072784424
    6. 'les' → logprob: -3.6977055072784424
    7. 'le' → logprob: -5.447705268859863
    8. ' ")' → logprob: -5.572705268859863
    9. '```' → logprob: -6.197705268859863
    10. '_le' → logprob: -6.197705268859863

Token 796: ' celle' (ID: 31790)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8665286898612976
    2. 's' → logprob: -0.9915286898612976
    3. 'positions' → logprob: -2.7415287494659424
    4. 'current' → logprob: -3.3665287494659424
    5. ' les' → logprob: -3.6165287494659424
    6. ' current' → logprob: -3.9915287494659424
    7. 'pos' → logprob: -4.616528511047363
    8. ' la' → logprob: -4.866528511047363
    9. 'for' → logprob: -4.866528511047363
    10. 'les' → logprob: -4.866528511047363

Token 797: ' position' (ID: 4010)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7471596002578735
    2. 's' → logprob: -1.1221596002578735
    3. ' des' → logprob: -2.872159481048584
    4. 'des' → logprob: -4.122159481048584
    5. 'pos' → logprob: -4.247159481048584
    6. ' de' → logprob: -4.372159481048584
    7. 'de' → logprob: -4.997159481048584
    8. '   ' → logprob: -5.122159481048584
    9. ' du' → logprob: -5.122159481048584
    10. ' =' → logprob: -5.247159481048584

Token 798: ' au' (ID: 2791)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.339582622051239
    2. '<|end|>' → logprob: -1.8395826816558838
    3. '        
' → logprob: -3.089582681655884
    4. '
' → logprob: -3.464582681655884
    5. '   ' → logprob: -3.964582681655884
    6. '<|end|>' → logprob: -4.839582443237305
    7. '    
' → logprob: -5.464582443237305
    8. ' s' → logprob: -5.589582443237305
    9. 's' → logprob: -5.714582443237305
    10. '               ' → logprob: -5.964582443237305

Token 799: ' moment' (ID: 4205)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6801155209541321
    2. 's' → logprob: -1.5551154613494873
    3. 'next' → logprob: -3.3051154613494873
    4. 'pass' → logprob: -3.3051154613494873
    5. 'result' → logprob: -3.4301154613494873
    6. 'while' → logprob: -3.5551154613494873
    7. '#' → logprob: -4.055115699768066
    8. 'for' → logprob: -4.805115699768066
    9. 'près' → logprob: -4.805115699768066
    10. ' suivant' → logprob: -5.180115699768066

Token 800: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.08838256448507309
    2. 'd' → logprob: -3.4633824825286865
    3. 'du' → logprob: -3.5883824825286865
    4. ' de' → logprob: -4.588382720947266
    5. '   ' → logprob: -4.713382720947266
    6. '=' → logprob: -6.338382720947266
    7. 's' → logprob: -6.713382720947266
    8. ' du' → logprob: -6.963382720947266
    9. 'des' → logprob: -7.463382720947266
    10. ' suivante' → logprob: -7.713382720947266

Token 801: ' recr' (ID: 33360)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.3621840476989746
    2. 'aj' → logprob: -1.9871840476989746
    3. 'result' → logprob: -2.7371840476989746
    4. 'l' → logprob: -3.7371840476989746
    5. 'la' → logprob: -4.362184047698975
    6. ' reconstru' → logprob: -4.487184047698975
    7. 'concat' → logprob: -4.737184047698975
    8. 'output' → logprob: -4.987184047698975
    9. 'construction' → logprob: -5.112184047698975
    10. 'print' → logprob: -5.112184047698975

Token 802: 'éer' (ID: 83012)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.3988916277885437
    2. 'stru' → logprob: -1.8988916873931885
    3. 'n' → logprob: -2.8988916873931885
    4. 'str' → logprob: -3.2738916873931885
    5. 'struction' → logprob: -3.5238916873931885
    6. 'st' → logprob: -4.023891448974609
    7. 'construction' → logprob: -4.773891448974609
    8. 'struct' → logprob: -5.023891448974609
    9. 'const' → logprob: -5.148891448974609
    10. 'ru' → logprob: -5.273891448974609

Token 803: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3971881866455078
    2. ' s' → logprob: -1.1471881866455078
    3. '   ' → logprob: -6.022188186645508
    4. '```' → logprob: -6.147188186645508
    5. 'le' → logprob: -7.272188186645508
    6. ' de' → logprob: -7.272188186645508
    7. 'de' → logprob: -7.772188186645508
    8. ' ' → logprob: -7.772188186645508
    9. '_s' → logprob: -7.897188186645508
    10. ' du' → logprob: -7.897188186645508

Token 804: ' partie' (ID: 22139)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08516247570514679
    2. 'chaine' → logprob: -2.960162401199341
    3. ' s' → logprob: -3.960162401199341
    4. 'string' → logprob: -4.96016263961792
    5. 'rest' → logprob: -6.33516263961792
    6. 'reste' → logprob: -7.08516263961792
    7. 'remaining' → logprob: -8.585162162780762
    8. 'liste' → logprob: -8.710162162780762
    9. ' chaîne' → logprob: -9.085162162780762
    10. '```' → logprob: -9.210162162780762

Token 805: ' restante' (ID: 130202)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.22256413102149963
    2. '   ' → logprob: -2.222564220428467
    3. '       ' → logprob: -3.597564220428467
    4. 's' → logprob: -3.597564220428467
    5. ' restante' → logprob: -3.847564220428467
    6. 'reste' → logprob: -5.097564220428467
    7. 'de' → logprob: -6.097564220428467
    8. 'remaining' → logprob: -6.347564220428467
    9. '```' → logprob: -6.972564220428467
    10. 'du' → logprob: -7.347564220428467

Token 806: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0247642919421196
    2. '<|end|>' → logprob: -4.774764060974121
    3. '        
' → logprob: -5.024764060974121
    4. '               ' → logprob: -5.899764060974121
    5. ' s' → logprob: -6.149764060974121
    6. 's' → logprob: -6.524764060974121
    7. '```' → logprob: -6.899764060974121
    8. '<|end|>' → logprob: -7.399764060974121
    9. ',' → logprob: -8.524764060974121
    10. '           ' → logprob: -8.649764060974121

Token 807: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25584185123443604
    2. '               ' → logprob: -1.505841851234436
    3. '        
' → logprob: -6.5058417320251465
    4. '```' → logprob: -7.0058417320251465
    5. '
' → logprob: -7.6308417320251465
    6. '<|end|>' → logprob: -8.505842208862305
    7. '           ' → logprob: -8.630842208862305
    8. 's' → logprob: -9.005842208862305
    9. ' s' → logprob: -9.130842208862305
    10. '   ' → logprob: -9.880842208862305

Token 808: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5364105701446533
    2. '   ' → logprob: -1.1614105701446533
    3. 's' → logprob: -3.1614105701446533
    4. 'while' → logprob: -4.036410331726074
    5. 'for' → logprob: -4.661410331726074
    6. '               ' → logprob: -4.786410331726074
    7. ' current' → logprob: -5.161410331726074
    8. '#' (adapté à ' #') → logprob: -5.286410331726074
    9. '           ' → logprob: -6.036410331726074
    10. '       ' → logprob: -6.536410331726074

Token 809: ' mais' (ID: 2899)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6674845218658447
    2. '               ' → logprob: -1.5424845218658447
    3. '   ' → logprob: -1.9174845218658447
    4. 's' → logprob: -2.9174845218658447
    5. '#' → logprob: -4.042484283447266
    6. ' current' → logprob: -4.292484283447266
    7. '           ' → logprob: -4.417484283447266
    8. '       ' → logprob: -4.542484283447266
    9. 'while' → logprob: -4.917484283447266
    10. 'for' → logprob: -5.542484283447266

Token 810: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0409352779388428
    2. '   ' → logprob: -1.2909352779388428
    3. ' s' → logprob: -2.1659352779388428
    4. '#' → logprob: -2.6659352779388428
    5. 'del' → logprob: -3.0409352779388428
    6. 'current' → logprob: -3.1659352779388428
    7. '           ' → logprob: -3.2909352779388428
    8. '       ' → logprob: -3.5409352779388428
    9. 'continue' → logprob: -4.915935516357422
    10. ' del' → logprob: -5.040935516357422

Token 811: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3512648344039917
    2. 'i' → logprob: -1.9762648344039917
    3. ' pos' → logprob: -2.4762649536132812
    4. ' current' → logprob: -2.4762649536132812
    5. ' i' → logprob: -2.4762649536132812
    6. 'pos' → logprob: -2.6012649536132812
    7. 'c' → logprob: -2.7262649536132812
    8. 'current' → logprob: -2.7262649536132812
    9. ' c' → logprob: -3.3512649536132812
    10. ' l' → logprob: -3.3512649536132812

Token 812: ' simplicité' (ID: 189166)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8095378875732422
    2. 'current' → logprob: -2.559537887573242
    3. 'for' → logprob: -2.684537887573242
    4. 'next' → logprob: -2.809537887573242
    5. 'suite' → logprob: -2.809537887573242
    6. 'while' → logprob: -2.934537887573242
    7. 'rest' → logprob: -3.059537887573242
    8. '#' → logprob: -3.434537887573242
    9. 'i' → logprob: -4.059537887573242
    10. 's' → logprob: -4.184537887573242

Token 813: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8068198561668396
    2. ':' → logprob: -1.4318199157714844
    3. ' s' → logprob: -2.1818199157714844
    4. ':
' → logprob: -2.5568199157714844
    5. '   ' → logprob: -2.6818199157714844
    6. 's' → logprob: -3.8068199157714844
    7. '       ' → logprob: -4.431819915771484
    8. ' ,' → logprob: -5.056819915771484
    9. ' continue' → logprob: -6.056819915771484
    10. 'continue' → logprob: -6.431819915771484

Token 814: ' re' (ID: 322)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7189285755157471
    2. 'continue' → logprob: -0.7189285755157471
    3. '       ' → logprob: -4.468928337097168
    4. '   ' → logprob: -5.468928337097168
    5. 'remove' → logprob: -6.218928337097168
    6. 'del' → logprob: -6.968928337097168
    7. 's' → logprob: -6.968928337097168
    8. ' s' → logprob: -7.093928337097168
    9. ' remove' → logprob: -7.218928337097168
    10. '```' → logprob: -7.468928337097168

Token 815: 'const' (ID: 1671)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.589042603969574
    2. 'm' → logprob: -1.5890426635742188
    3. 's' → logprob: -1.8390426635742188
    4. 'st' → logprob: -3.4640426635742188
    5. 'move' → logprob: -4.089042663574219
    6. 'place' → logprob: -4.214042663574219
    7. 'mainder' → logprob: -5.089042663574219
    8. 'ma' → logprob: -5.714042663574219
    9. '       ' → logprob: -5.839042663574219
    10. 'ster' → logprob: -6.714042663574219

Token 816: 'itu' (ID: 7642)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.47489267587661743
    2. 'ruit' → logprob: -0.9748926758766174
    3. 'r' → logprob: -7.849892616271973
    4. 'ruits' → logprob: -8.349892616271973
    5. 'rui' → logprob: -8.849892616271973
    6. 'uire' → logprob: -11.599892616271973
    7. 'ру' → logprob: -12.099892616271973
    8. 'it' → logprob: -12.349892616271973
    9. 're' → logprob: -12.474892616271973
    10. 'rus' → logprob: -12.474892616271973

Token 817: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.027969688177108765
    2. 'er' → logprob: -4.527969837188721
    3. 's' → logprob: -4.902969837188721
    4. 'ct' → logprob: -4.902969837188721
    5. 'ction' → logprob: -7.902969837188721
    6. ' s' → logprob: -7.902969837188721
    7. 'es' → logprob: -8.527969360351562
    8. 'def' → logprob: -8.527969360351562
    9. '
' → logprob: -9.152969360351562
    10. '#' → logprob: -9.527969360351562

Token 818: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1339668333530426
    2. ' s' → logprob: -2.2589669227600098
    3. '           ' → logprob: -5.50896692276001
    4. 'la' → logprob: -5.88396692276001
    5. 'le' → logprob: -6.00896692276001
    6. '```' → logprob: -6.00896692276001
    7. '               ' → logprob: -6.13396692276001
    8. ' la' → logprob: -6.50896692276001
    9. '                   ' → logprob: -6.50896692276001
    10. '   ' → logprob: -7.00896692276001

Token 819: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00546201691031456
    2. ' s' → logprob: -5.880462169647217
    3. 'rest' → logprob: -6.630462169647217
    4. '#' → logprob: -7.880462169647217
    5. 'remaining' → logprob: -8.130461692810059
    6. 'current' → logprob: -9.005461692810059
    7. 'string' → logprob: -9.005461692810059
    8. 'chaine' → logprob: -9.130461692810059
    9. '```' → logprob: -9.505461692810059
    10. 'reste' → logprob: -9.755461692810059

Token 820: ' plus' (ID: 2932)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6466726660728455
    2. ' =' → logprob: -1.5216727256774902
    3. 's' → logprob: -2.0216727256774902
    4. ' s' → logprob: -2.5216727256774902
    5. '   ' → logprob: -5.14667272567749
    6. '=' → logprob: -5.14667272567749
    7. '           ' → logprob: -5.14667272567749
    8. ',' → logprob: -5.52167272567749
    9. '```' → logprob: -5.52167272567749
    10. '[' → logprob: -5.89667272567749

Token 821: ' tard' (ID: 30225)
  Prédit: ' tard'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tard' → logprob: -1.2289483547210693
    2. '#' → logprob: -1.3539483547210693
    3. 's' → logprob: -2.3539483547210693
    4. 'continue' → logprob: -2.8539483547210693
    5. 't' → logprob: -3.6039483547210693
    6. 'pro' → logprob: -3.6039483547210693
    7. ' tôt' → logprob: -3.7289483547210693
    8. ' =' → logprob: -3.8539483547210693
    9. '```' → logprob: -3.8539483547210693
    10. ' s' → logprob: -4.103948593139648

Token 822: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6343702077865601
    2. '       ' → logprob: -1.50937020778656
    3. '<|end|>' → logprob: -1.88437020778656
    4. ' s' → logprob: -3.6343703269958496
    5. '        
' → logprob: -3.6343703269958496
    6. '<|end|>' → logprob: -4.38437032699585
    7. 's' → logprob: -4.75937032699585
    8. '    
' → logprob: -5.75937032699585
    9. ',' → logprob: -6.00937032699585
    10. '   ' → logprob: -6.13437032699585

Token 823: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030100805684924126
    2. '        
' → logprob: -4.6551008224487305
    3. '
' → logprob: -4.7801008224487305
    4. '```' → logprob: -5.4051008224487305
    5. 'current' → logprob: -5.6551008224487305
    6. ' 
' → logprob: -7.4051008224487305
    7. ' current' → logprob: -7.4051008224487305
    8. '               ' → logprob: -7.5301008224487305
    9. '<|end|>' → logprob: -8.03010082244873
    10. 's' → logprob: -8.15510082244873

Token 824: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22304512560367584
    2. 'current' → logprob: -2.0980451107025146
    3. 's' → logprob: -3.2230451107025146
    4. '       ' → logprob: -4.473045349121094
    5. ' current' → logprob: -4.598045349121094
    6. 'while' → logprob: -5.473045349121094
    7. 'for' → logprob: -5.598045349121094
    8. '#' (adapté à ' #') → logprob: -6.223045349121094
    9. ' s' → logprob: -6.473045349121094
    10. 'del' → logprob: -6.973045349121094

Token 825: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20634140074253082
    2. '#' → logprob: -2.956341505050659
    3. 's' → logprob: -2.956341505050659
    4. 'current' → logprob: -3.581341505050659
    5. '       ' → logprob: -3.831341505050659
    6. ' s' → logprob: -5.08134126663208
    7. '           ' → logprob: -5.83134126663208
    8. '               ' → logprob: -5.83134126663208
    9. ' current' → logprob: -5.83134126663208
    10. 'rest' → logprob: -6.08134126663208

Token 826: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.30306005477905273
    2. ' continue' → logprob: -2.0530600547790527
    3. 'current' → logprob: -2.9280600547790527
    4. '   ' → logprob: -3.4280600547790527
    5. 'remove' → logprob: -4.303060054779053
    6. ' current' → logprob: -4.553060054779053
    7. 'contin' → logprob: -5.178060054779053
    8. '       ' → logprob: -6.303060054779053
    9. 'for' → logprob: -6.553060054779053
    10. 's' → logprob: -6.553060054779053

Token 827: ' aussi' (ID: 9894)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.2258200645446777
    2. ' current' → logprob: -2.2258200645446777
    3. 'mettre' → logprob: -2.4758200645446777
    4. '   ' → logprob: -2.8508200645446777
    5. 're' → logprob: -2.9758200645446777
    6. 'increment' → logprob: -3.2258200645446777
    7. 'tr' → logprob: -3.3508200645446777
    8. 'remove' → logprob: -3.4758200645446777
    9. 'ret' → logprob: -3.6008200645446777
    10. '#' → logprob: -3.6008200645446777

Token 828: ' enlever' (ID: 196982)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.9479910135269165
    2. 'increment' → logprob: -1.6979910135269165
    3. 'rem' → logprob: -2.072990894317627
    4. 'in' → logprob: -2.447990894317627
    5. 'mettre' → logprob: -2.572990894317627
    6. 'ret' → logprob: -3.572990894317627
    7. '#' → logprob: -4.072990894317627
    8. '   ' → logprob: -4.197990894317627
    9. 's' → logprob: -4.197990894317627
    10. 'mar' → logprob: -4.697990894317627

Token 829: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40813103318214417
    2. ' s' → logprob: -1.7831310033798218
    3. 'positions' → logprob: -2.6581311225891113
    4. 'the' → logprob: -3.7831311225891113
    5. 'le' → logprob: -4.283131122589111
    6. ' la' → logprob: -4.408131122589111
    7. '```' → logprob: -4.658131122589111
    8. 'from' → logprob: -5.033131122589111
    9. ' the' → logprob: -5.158131122589111
    10. 'pos' → logprob: -5.408131122589111

Token 830: ' lettre' (ID: 68013)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5527997016906738
    2. 'pos' → logprob: -1.9277997016906738
    3. 'position' → logprob: -2.177799701690674
    4. 's' → logprob: -2.302799701690674
    5. 'current' → logprob: -2.427799701690674
    6. 'for' → logprob: -2.427799701690674
    7. 'positions' → logprob: -2.802799701690674
    8. 'while' → logprob: -3.052799701690674
    9. ' for' → logprob: -3.427799701690674
    10. ' s' → logprob: -3.427799701690674

Token 831: ' chois' (ID: 33475)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8398845791816711
    2. ' s' → logprob: -0.9648845791816711
    3. ' at' → logprob: -3.2148845195770264
    4. ' from' → logprob: -3.4648845195770264
    5. ' de' → logprob: -3.9648845195770264
    6. 'from' → logprob: -4.2148847579956055
    7. '<|end|>' → logprob: -4.2148847579956055
    8. '[s' → logprob: -4.7148847579956055
    9. '   ' → logprob: -4.9648847579956055
    10. '<|end|>' → logprob: -5.0898847579956055

Token 832: 'ie' (ID: 396)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.804273247718811
    2. 's' → logprob: -2.0542731285095215
    3. '               ' → logprob: -2.5542731285095215
    4. '           ' → logprob: -2.8042731285095215
    5. '       ' → logprob: -3.3042731285095215
    6. 'er' → logprob: -3.3042731285095215
    7. ' s' → logprob: -3.9292731285095215
    8. 'e' → logprob: -4.0542731285095215
    9. '                   ' → logprob: -4.0542731285095215
    10. 'ée' → logprob: -4.0542731285095215

Token 833: ' de' (ID: 334)
  Prédit: ' del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' del' → logprob: -1.3115355968475342
    2. 'del' → logprob: -1.3115355968475342
    3. 's' → logprob: -1.6865355968475342
    4. '   ' → logprob: -2.936535596847534
    5. ' s' → logprob: -2.936535596847534
    6. ' from' → logprob: -3.811535596847534
    7. ' for' → logprob: -3.936535596847534
    8. 'from' → logprob: -4.186535835266113
    9. '<|end|>' → logprob: -4.186535835266113
    10. ' =' → logprob: -4.686535835266113

Token 834: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006708736065775156
    2. 'positions' → logprob: -5.25670862197876
    3. ' s' → logprob: -6.75670862197876
    4. 'la' → logprob: -8.506709098815918
    5. 'the' → logprob: -10.381709098815918
    6. '```' → logprob: -10.631709098815918
    7. ' la' → logprob: -10.881709098815918
    8. 'l' → logprob: -11.506709098815918
    9. ' positions' → logprob: -11.631709098815918
    10. 'indices' → logprob: -12.381709098815918

Token 835: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6414441466331482
    2. 'chaine' → logprob: -0.8914441466331482
    3. 'position' → logprob: -3.891444206237793
    4. 'liste' → logprob: -4.516444206237793
    5. ' chaîne' → logprob: -4.766444206237793
    6. 'string' → logprob: -4.891444206237793
    7. 'list' → logprob: -5.641444206237793
    8. ' s' → logprob: -5.641444206237793
    9. '#' → logprob: -5.891444206237793
    10. 'original' → logprob: -6.641444206237793

Token 836: '.
' (ID: 558)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1968638896942139
    2. 's' → logprob: -1.5718638896942139
    3. '   ' → logprob: -1.8218638896942139
    4. '       ' → logprob: -2.071863889694214
    5. '<|end|>' → logprob: -2.321863889694214
    6. '<|end|>' → logprob: -4.071864128112793
    7. '```' → logprob: -4.446864128112793
    8. '           ' → logprob: -4.696864128112793
    9. ' del' → logprob: -4.696864128112793
    10. ')' → logprob: -5.196864128112793

Token 837: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7820239067077637
    2. '   ' → logprob: -1.6570239067077637
    3. '```' → logprob: -2.0320239067077637
    4. ' s' → logprob: -2.1570239067077637
    5. 's' → logprob: -2.6570239067077637
    6. '        
' → logprob: -4.532023906707764
    7. '    
' → logprob: -5.532023906707764
    8. '
' → logprob: -5.782023906707764
    9. ' 
' → logprob: -5.782023906707764
    10. 'current' → logprob: -6.032023906707764

Token 838: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3372350037097931
    2. 's' → logprob: -2.3372349739074707
    3. ' s' → logprob: -3.3372349739074707
    4. 'for' → logprob: -3.5872349739074707
    5. 'while' → logprob: -3.7122349739074707
    6. ' del' → logprob: -3.7122349739074707
    7. ' for' → logprob: -3.7122349739074707
    8. 'del' → logprob: -3.8372349739074707
    9. ' while' → logprob: -4.462234973907471
    10. '       ' → logprob: -5.212234973907471

Token 839: ' Pour' (ID: 13931)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5486266613006592
    2. '   ' → logprob: -1.4236266613006592
    3. 'del' → logprob: -2.548626661300659
    4. 'for' → logprob: -3.173626661300659
    5. 'idx' → logprob: -4.173626899719238
    6. '#' → logprob: -4.298626899719238
    7. 'while' → logprob: -4.923626899719238
    8. '       ' → logprob: -5.548626899719238
    9. '           ' → logprob: -5.673626899719238
    10. 'current' → logprob: -5.673626899719238

Token 840: ' gérer' (ID: 86786)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.641686737537384
    2. ' i' → logprob: -1.5166866779327393
    3. ' pos' → logprob: -2.6416866779327393
    4. 'pos' → logprob: -2.7666866779327393
    5. '_' → logprob: -3.2666866779327393
    6. 'c' → logprob: -3.7666866779327393
    7. ' c' → logprob: -3.7666866779327393
    8. ' j' → logprob: -5.016686916351318
    9. ' _' → logprob: -5.141686916351318
    10. 's' → logprob: -5.391686916351318

Token 841: ' le' (ID: 505)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0243937969207764
    2. ' i' → logprob: -1.3993937969207764
    3. 'pos' → logprob: -2.5243937969207764
    4. '_' → logprob: -2.6493937969207764
    5. 'i' → logprob: -2.7743937969207764
    6. ' pos' → logprob: -3.0243937969207764
    7. ' _' → logprob: -3.0243937969207764
    8. 's' → logprob: -3.5243937969207764
    9. ' idx' → logprob: -4.5243940353393555
    10. ' current' → logprob: -4.7743940353393555

Token 842: ' reste' (ID: 26769)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6309184432029724
    2. ' current' → logprob: -1.3809185028076172
    3. ' s' → logprob: -2.630918502807617
    4. 's' → logprob: -3.130918502807617
    5. '```' → logprob: -3.630918502807617
    6. 'rest' → logprob: -4.505918502807617
    7. 'remaining' → logprob: -4.755918502807617
    8. ' rest' → logprob: -5.130918502807617
    9. 'reste' → logprob: -5.130918502807617
    10. 'pos' → logprob: -5.380918502807617

Token 843: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0551906824111938
    2. ' s' → logprob: -1.1801906824111938
    3. 's' → logprob: -1.9301906824111938
    4. ',' → logprob: -2.1801905632019043
    5. ':' → logprob: -3.4301905632019043
    6. '       ' → logprob: -4.805190563201904
    7. '<|end|>' → logprob: -5.180190563201904
    8. '#' → logprob: -5.680190563201904
    9. '<|end|>' → logprob: -5.805190563201904
    10. ' ,' → logprob: -5.805190563201904

Token 844: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.136460080742836
    2. 'while' → logprob: -3.261460065841675
    3. ' while' → logprob: -3.886460065841675
    4. ' s' → logprob: -4.261460304260254
    5. '#' → logprob: -4.386460304260254
    6. 's' → logprob: -4.511460304260254
    7. ' for' → logprob: -4.886460304260254
    8. 'for' → logprob: -5.011460304260254
    9. ' del' → logprob: -5.636460304260254
    10. ' #' → logprob: -6.011460304260254

Token 845: ' va' (ID: 3423)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2612355947494507
    2. ' s' → logprob: -1.5112355947494507
    3. '#' → logprob: -2.0112357139587402
    4. '   ' → logprob: -2.8862357139587402
    5. ' continue' → logprob: -3.1362357139587402
    6. ' #' → logprob: -3.1362357139587402
    7. 'remove' → logprob: -3.1362357139587402
    8. 'continue' → logprob: -3.5112357139587402
    9. 'del' → logprob: -3.5112357139587402
    10. 'rem' → logprob: -4.01123571395874

Token 846: ' ign' (ID: 8769)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.7921067476272583
    2. 's' → logprob: -1.7921067476272583
    3. 'continue' → logprob: -1.7921067476272583
    4. '   ' → logprob: -3.0421066284179688
    5. 'replace' → logprob: -3.9171066284179688
    6. 'current' → logprob: -3.9171066284179688
    7. ' s' → logprob: -4.292106628417969
    8. '#' → logprob: -4.292106628417969
    9. '```' → logprob: -4.292106628417969
    10. ' remove' → logprob: -4.417106628417969

Token 847: 'orer' (ID: 13634)
  Prédit: 'orer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orer' → logprob: -1.2352385965641588e-05
    2. '```' → logprob: -13.000012397766113
    3. 'orrer' → logprob: -13.000012397766113
    4. 'or' → logprob: -13.125012397766113
    5. '   ' → logprob: -13.500012397766113
    6. '#' → logprob: -14.625012397766113
    7. 'rer' → logprob: -14.750012397766113
    8. '``' → logprob: -14.875012397766113
    9. 'ore' → logprob: -15.000012397766113
    10. '{' → logprob: -15.125012397766113

Token 848: ' cette' (ID: 7696)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.43213221430778503
    2. 's' → logprob: -1.4321322441101074
    3. 'positions' → logprob: -3.6821322441101074
    4. ' current' → logprob: -4.057132244110107
    5. ' les' → logprob: -4.182132244110107
    6. ' la' → logprob: -4.307132244110107
    7. '```' → logprob: -5.057132244110107
    8. 'current' → logprob: -5.182132244110107
    9. '   ' → logprob: -5.182132244110107
    10. ' positions' → logprob: -5.307132244110107

Token 849: ' position' (ID: 4010)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.3410723209381104
    2. 'positions' → logprob: -2.0910723209381104
    3. 'pos' → logprob: -2.2160723209381104
    4. 's' → logprob: -2.3410723209381104
    5. 'result' → logprob: -2.5910723209381104
    6. 'position' → logprob: -3.2160723209381104
    7. 'current' → logprob: -3.2160723209381104
    8. ' result' → logprob: -3.4660723209381104
    9. ' current' → logprob: -3.5910723209381104
    10. 'token' → logprob: -3.7160723209381104

Token 850: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3771986961364746
    2. '<|end|>' → logprob: -1.8771986961364746
    3. '<|end|>' → logprob: -2.1271986961364746
    4. '   ' → logprob: -2.7521986961364746
    5. '        
' → logprob: -2.7521986961364746
    6. '    
' → logprob: -3.0021986961364746
    7. ' 
' → logprob: -3.1271986961364746
    8. ' =' → logprob: -3.3771986961364746
    9. ' s' → logprob: -3.5021986961364746
    10. 's' → logprob: -4.127198696136475

Token 851: 'on' (ID: 263)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3291491270065308
    2. 'while' → logprob: -1.7041491270065308
    3. 'current' → logprob: -1.8291491270065308
    4. 'positions' → logprob: -2.3291492462158203
    5. ' s' → logprob: -2.9541492462158203
    6. ')' → logprob: -2.9541492462158203
    7. 'True' → logprob: -3.4541492462158203
    8. ' while' → logprob: -3.7041492462158203
    9. 'del' → logprob: -3.9541492462158203
    10. '   ' → logprob: -4.07914924621582

Token 852: ' va' (ID: 3423)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.933553159236908
    2. ' =' → logprob: -1.3085532188415527
    3. 's' → logprob: -2.6835532188415527
    4. '=' → logprob: -3.1835532188415527
    5. ' continue' → logprob: -3.4335532188415527
    6. '#' → logprob: -3.5585532188415527
    7. '   ' → logprob: -4.308553218841553
    8. '```' → logprob: -4.433553218841553
    9. 'continue' → logprob: -4.433553218841553
    10. '    ' → logprob: -4.558553218841553

Token 853: ' reconstru' (ID: 108053)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7059926390647888
    2. 'remove' → logprob: -1.8309926986694336
    3. 's' → logprob: -2.0809926986694336
    4. 'continue' → logprob: -2.5809926986694336
    5. ' current' → logprob: -3.4559926986694336
    6. '   ' → logprob: -4.080992698669434
    7. 'pos' → logprob: -4.205992698669434
    8. 'replace' → logprob: -4.330992698669434
    9. ' s' → logprob: -4.580992698669434
    10. '```' → logprob: -4.580992698669434

Token 854: 'ire' (ID: 594)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0004160145472269505
    2. 're' → logprob: -8.750415802001953
    3. 'érer' → logprob: -9.125415802001953
    4. 'rer' → logprob: -9.750415802001953
    5. 'e' → logprob: -9.875415802001953
    6. '   ' → logprob: -11.375415802001953
    7. 'ere' → logprob: -12.125415802001953
    8. 'cter' → logprob: -12.375415802001953
    9. 'ire' → logprob: -12.625415802001953
    10. '#' → logprob: -13.125415802001953

Token 855: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3526032865047455
    2. ' s' → logprob: -1.3526033163070679
    3. ' la' → logprob: -4.602603435516357
    4. 'le' → logprob: -4.727603435516357
    5. 'la' → logprob: -4.852603435516357
    6. '```' → logprob: -5.852603435516357
    7. ' le' → logprob: -6.852603435516357
    8. '   ' → logprob: -7.102603435516357
    9. ')' → logprob: -7.102603435516357
    10. '(s' → logprob: -7.352603435516357

Token 856: ' suffix' (ID: 43412)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010513233952224255
    2. ' s' → logprob: -5.1355133056640625
    3. 'string' → logprob: -6.1355133056640625
    4. 'chaine' → logprob: -7.1355133056640625
    5. 'rest' → logprob: -8.010513305664062
    6. '#' → logprob: -8.385513305664062
    7. '```' → logprob: -8.385513305664062
    8. 'while' → logprob: -8.510513305664062
    9. 'remaining' → logprob: -9.010513305664062
    10. 'code' → logprob: -9.135513305664062

Token 857: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05688730627298355
    2. 's' → logprob: -3.93188738822937
    3. 'ion' → logprob: -3.93188738822937
    4. ' de' → logprob: -6.056887149810791
    5. ' s' → logprob: -6.306887149810791
    6. ')' → logprob: -6.681887149810791
    7. '_' → logprob: -6.806887149810791
    8. '_s' → logprob: -6.806887149810791
    9. '```' → logprob: -6.931887149810791
    10. 'de' → logprob: -7.056887149810791

Token 858: ' plus' (ID: 2932)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4251749515533447
    2. ' s' → logprob: -2.6751749515533447
    3. ' de' → logprob: -2.9251749515533447
    4. 'de' → logprob: -2.9251749515533447
    5. '   ' → logprob: -3.0501749515533447
    6. ')' → logprob: -3.1751749515533447
    7. '       ' → logprob: -4.300174713134766
    8. ' =' → logprob: -4.550174713134766
    9. '               ' → logprob: -4.925174713134766
    10. '           ' → logprob: -5.175174713134766

Token 859: ' loin' (ID: 40875)
  Prédit: ' tard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tard' → logprob: -0.3484673500061035
    2. 't' → logprob: -2.2234673500061035
    3. 'bas' → logprob: -2.2234673500061035
    4. '=' → logprob: -3.5984673500061035
    5. 'late' → logprob: -4.0984673500061035
    6. 'loin' → logprob: -4.0984673500061035
    7. ' =' → logprob: -5.2234673500061035
    8. '+=' → logprob: -5.5984673500061035
    9. 'avant' → logprob: -6.5984673500061035
    10. ' bas' → logprob: -7.3484673500061035

Token 860: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44010791182518005
    2. ')' → logprob: -1.4401079416275024
    3. ')
' → logprob: -2.440107822418213
    4. ' s' → logprob: -4.815107822418213
    5. 's' → logprob: -5.065107822418213
    6. '   ' → logprob: -5.440107822418213
    7. '           ' → logprob: -5.815107822418213
    8. '               ' → logprob: -6.065107822418213
    9. ',' → logprob: -6.190107822418213
    10. '):
' → logprob: -6.565107822418213

Token 861: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1139042004942894
    2. '<|end|>' → logprob: -2.9889042377471924
    3. '
' → logprob: -3.4889042377471924
    4. '   ' → logprob: -4.738903999328613
    5. '               ' → logprob: -5.238903999328613
    6. '<|end|>' → logprob: -5.738903999328613
    7. '        
' → logprob: -5.988903999328613
    8. '    
' → logprob: -7.113903999328613
    9. ' ' → logprob: -7.113903999328613
    10. '```' → logprob: -7.113903999328613

Token 862: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6171067357063293
    2. ' current' → logprob: -1.4921066761016846
    3. '       ' → logprob: -2.3671066761016846
    4. ' s' → logprob: -2.9921066761016846
    5. 'current' → logprob: -3.2421066761016846
    6. 's' → logprob: -4.367106914520264
    7. ' for' → logprob: -4.992106914520264
    8. ' while' → logprob: -5.367106914520264
    9. '	current' → logprob: -5.367106914520264
    10. '    
' → logprob: -5.742106914520264

Token 863: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1628899723291397
    2. '   ' → logprob: -2.7878899574279785
    3. '               ' → logprob: -3.1628899574279785
    4. 's' → logprob: -4.0378899574279785
    5. ' s' → logprob: -4.5378899574279785
    6. 'current' → logprob: -5.7878899574279785
    7. ' current' → logprob: -5.7878899574279785
    8. '#' → logprob: -6.4128899574279785
    9. ' for' → logprob: -6.5378899574279785
    10. '           ' → logprob: -6.6628899574279785

Token 864: ' ne' (ID: 453)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.21985949575901031
    2. ' current' → logprob: -1.9698594808578491
    3. '   ' → logprob: -3.7198596000671387
    4. 'continue' → logprob: -4.719859600067139
    5. '       ' → logprob: -5.469859600067139
    6. '    ' → logprob: -5.844859600067139
    7. 's' → logprob: -6.344859600067139
    8. '#' → logprob: -6.344859600067139
    9. 'remove' → logprob: -6.594859600067139
    10. ' s' → logprob: -6.719859600067139

Token 865: ' peut' (ID: 9216)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.1546326875686646
    2. 'continue' → logprob: -1.4046326875686646
    3. 's' → logprob: -2.404632568359375
    4. 'p' → logprob: -2.904632568359375
    5. 'for' → logprob: -3.029632568359375
    6. '       ' → logprob: -3.404632568359375
    7. 'pass' → logprob: -3.529632568359375
    8. 'pour' → logprob: -3.779632568359375
    9. 'continu' → logprob: -3.904632568359375
    10. '#' → logprob: -3.904632568359375

Token 866: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.13255174458026886
    2. ' pas' → logprob: -2.132551670074463
    3. '       ' → logprob: -6.507551670074463
    4. 's' → logprob: -7.132551670074463
    5. '           ' → logprob: -7.132551670074463
    6. 'plus' → logprob: -7.382551670074463
    7. '#' → logprob: -8.257552146911621
    8. '   ' → logprob: -8.632552146911621
    9. '_pas' → logprob: -8.632552146911621
    10. '               ' → logprob: -8.757552146911621

Token 867: ' eff' (ID: 1959)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.7772404551506042
    2. 'pas' → logprob: -1.652240514755249
    3. 'sup' → logprob: -2.652240514755249
    4. ' continuer' → logprob: -3.402240514755249
    5. 'modifier' → logprob: -3.527240514755249
    6. 'ret' → logprob: -3.652240514755249
    7. 'current' → logprob: -4.15224027633667
    8. 'continue' → logprob: -4.27724027633667
    9. 'remove' → logprob: -4.27724027633667
    10. ' supprimer' → logprob: -4.40224027633667

Token 868: 'acer' (ID: 17263)
  Prédit: 'acer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acer' → logprob: -0.0002497767563909292
    2. 'f' → logprob: -9.625249862670898
    3. 'ace' → logprob: -10.375249862670898
    4. 'forcer' → logprob: -10.375249862670898
    5. 'a' → logprob: -10.500249862670898
    6. 'fect' → logprob: -10.625249862670898
    7. 'ac' → logprob: -11.125249862670898
    8. '   ' → logprob: -11.375249862670898
    9. 'acter' → logprob: -11.500249862670898
    10. 'acher' → logprob: -12.125249862670898

Token 869: ' dans' (ID: 2671)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.38524022698402405
    2. 's' → logprob: -1.2602401971817017
    3. ' ' → logprob: -5.260240077972412
    4. ' la' → logprob: -5.385240077972412
    5. ' current' → logprob: -5.885240077972412
    6. 'current' → logprob: -6.010240077972412
    7. 'le' → logprob: -6.260240077972412
    8. ' le' → logprob: -6.635240077972412
    9. ' de' → logprob: -6.635240077972412
    10. '[]' → logprob: -6.760240077972412

Token 870: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22555799782276154
    2. ' s' → logprob: -1.6005580425262451
    3. ' la' → logprob: -10.225558280944824
    4. '_s' → logprob: -10.350558280944824
    5. '	s' → logprob: -10.975558280944824
    6. 'la' → logprob: -11.475558280944824
    7. 'l' → logprob: -11.600558280944824
    8. '```' → logprob: -11.725558280944824
    9. 'the' → logprob: -11.975558280944824
    10. '`s' → logprob: -12.225558280944824

Token 871: ' directement' (ID: 52317)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5517325401306152
    2. '   ' → logprob: -2.1767325401306152
    3. '[current' → logprob: -2.4267325401306152
    4. '[' → logprob: -2.9267325401306152
    5. '    
' → logprob: -3.0517325401306152
    6. ' s' → logprob: -4.426732540130615
    7. ',' → logprob: -4.426732540130615
    8. '<|end|>' → logprob: -4.801732540130615
    9. '```' → logprob: -4.926732540130615
    10. '  
' → logprob: -5.176732540130615

Token 872: ' car' (ID: 1669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 873: ' cela' (ID: 17542)
  Prédit: 'cela'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cela' → logprob: -0.36717528104782104
    2. 'on' → logprob: -2.242175340652466
    3. ' cela' → logprob: -2.742175340652466
    4. 'ce' → logprob: -3.617175340652466
    5. 'current' → logprob: -3.617175340652466
    6. ' on' → logprob: -3.992175340652466
    7. 'result' → logprob: -4.367175102233887
    8. 's' → logprob: -4.367175102233887
    9. 'c' → logprob: -4.867175102233887
    10. 'le' → logprob: -5.242175102233887

Token 874: ' créer' (ID: 40938)
  Prédit: ' serait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' serait' → logprob: -1.0369889736175537
    2. ' est' → logprob: -1.7869889736175537
    3. 'est' → logprob: -1.9119889736175537
    4. ' would' → logprob: -2.2869889736175537
    5. 's' → logprob: -2.5369889736175537
    6. '#' → logprob: -3.7869889736175537
    7. ' pourrait' → logprob: -4.036989212036133
    8. ' is' → logprob: -4.161989212036133
    9. '       ' → logprob: -4.286989212036133
    10. ' n' → logprob: -4.411989212036133

Token 875: 'ait' (ID: 1271)
  Prédit: 'rait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rait' → logprob: -0.5222371220588684
    2. 'ait' → logprob: -1.0222370624542236
    3. ' un' → logprob: -3.8972370624542236
    4. ' une' → logprob: -5.022237300872803
    5. 'un' → logprob: -5.147237300872803
    6. 'a' → logprob: -5.272237300872803
    7. ' des' → logprob: -6.022237300872803
    8. 'er' → logprob: -6.647237300872803
    9. 'une' → logprob: -6.772237300872803
    10. '#' → logprob: -7.147237300872803

Token 876: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.1779947578907013
    2. 'un' → logprob: -2.552994728088379
    3. 'une' → logprob: -2.927994728088379
    4. 'd' → logprob: -4.302994728088379
    5. 'de' → logprob: -4.302994728088379
    6. 'complex' → logprob: -6.802994728088379
    7. 'dé' → logprob: -7.052994728088379
    8. ' des' → logprob: -7.552994728088379
    9. 'pro' → logprob: -7.677994728088379
    10. '   ' → logprob: -7.677994728088379

Token 877: ' problèmes' (ID: 49822)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16619418561458588
    2. 'pro' → logprob: -2.666194200515747
    3. 'dé' → logprob: -2.916194200515747
    4. 'in' → logprob: -4.666193962097168
    5. ' dé' → logprob: -5.291193962097168
    6. 'index' → logprob: -5.416193962097168
    7. 'indices' → logprob: -6.041193962097168
    8. ' problèmes' → logprob: -6.291193962097168
    9. 'complex' → logprob: -6.291193962097168
    10. 'dés' → logprob: -6.541193962097168

Token 878: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.7179605960845947
    2. '       ' → logprob: -1.9679605960845947
    3. ' s' → logprob: -2.2179605960845947
    4. '<|end|>' → logprob: -2.2179605960845947
    5. '#' → logprob: -2.4679605960845947
    6. '...' → logprob: -2.7179605960845947
    7. 's' → logprob: -2.8429605960845947
    8. '.' → logprob: -3.3429605960845947
    9. 'current' → logprob: -3.7179605960845947
    10. ',' → logprob: -3.7179605960845947

Token 879: ''' (ID: 6)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.3367210328578949
    2. 'index' → logprob: -1.3367210626602173
    3. 'indice' → logprob: -4.461720943450928
    4. 'indexes' → logprob: -4.961720943450928
    5. 'in' → logprob: -6.086720943450928
    6. 'positions' → logprob: -7.836720943450928
    7. 'ind' → logprob: -7.961720943450928
    8. 'align' → logprob: -7.961720943450928
    9. 'dé' → logprob: -8.461721420288086
    10. '```' → logprob: -8.461721420288086

Token 880: 'index' (ID: 2257)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.4479140341281891
    2. 'index' → logprob: -1.0729140043258667
    3. 'in' → logprob: -5.072914123535156
    4. 'indice' → logprob: -5.072914123535156
    5. 'indexes' → logprob: -5.447914123535156
    6. 'ind' → logprob: -7.447914123535156
    7. 'invalid' → logprob: -7.947914123535156
    8. ' indices' → logprob: -8.072914123535156
    9. ' index' → logprob: -8.822914123535156
    10. '
' → logprob: -8.822914123535156

Token 881: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.65398770570755
    2. '       ' → logprob: -1.1539876461029053
    3. '        
' → logprob: -2.9039876461029053
    4. '    
' → logprob: -3.7789876461029053
    5. '                
' → logprob: -3.9039876461029053
    6. '           ' → logprob: -4.778987884521484
    7. '
' → logprob: -4.778987884521484
    8. ' 
' → logprob: -5.028987884521484
    9. '<|end|>' → logprob: -5.153987884521484
    10. ' s' → logprob: -5.278987884521484

Token 882: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5303358435630798
    2. '        
' → logprob: -2.4053359031677246
    3. '               ' → logprob: -2.6553359031677246
    4. '
' → logprob: -2.6553359031677246
    5. '<|end|>' → logprob: -2.9053359031677246
    6. '    
' → logprob: -3.4053359031677246
    7. ' 
' → logprob: -4.030335903167725
    8. ')' → logprob: -4.405335903167725
    9. '  
' → logprob: -4.530335903167725
    10. '                
' → logprob: -4.905335903167725

Token 883: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2581050992012024
    2. '       ' → logprob: -2.1331050395965576
    3. 's' → logprob: -4.008105278015137
    4. ' s' → logprob: -4.133105278015137
    5. ' current' → logprob: -4.133105278015137
    6. 'current' → logprob: -4.258105278015137
    7. '                
' → logprob: -4.633105278015137
    8. '   ' → logprob: -4.883105278015137
    9. '
' → logprob: -5.008105278015137
    10. '           ' → logprob: -5.508105278015137

Token 884: ' Donc' (ID: 88837)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.8089861869812012
    2. '   ' → logprob: -1.6839861869812012
    3. 'current' → logprob: -1.6839861869812012
    4. ' s' → logprob: -2.558986186981201
    5. 's' → logprob: -2.933986186981201
    6. '               ' → logprob: -4.683986186981201
    7. ' for' → logprob: -4.808986186981201
    8. '       ' → logprob: -5.433986186981201
    9. '
' → logprob: -5.558986186981201
    10. '           ' → logprob: -5.808986186981201

Token 885: ' on' (ID: 402)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6550588011741638
    2. '   ' → logprob: -1.2800588607788086
    3. ' current' → logprob: -2.0300588607788086
    4. '
' → logprob: -4.655058860778809
    5. '#' → logprob: -4.905058860778809
    6. '               ' → logprob: -4.905058860778809
    7. 'continue' → logprob: -5.030058860778809
    8. ' for' → logprob: -5.155058860778809
    9. '           ' → logprob: -5.405058860778809
    10. 'for' → logprob: -5.530058860778809

Token 886: ' stock' (ID: 6546)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.0173059701919556
    2. ' current' → logprob: -1.5173059701919556
    3. '.append' → logprob: -2.392305850982666
    4. ' continue' → logprob: -3.017305850982666
    5. '[current' → logprob: -3.017305850982666
    6. 'continue' → logprob: -3.142305850982666
    7. '.remove' → logprob: -3.392305850982666
    8. '+=' → logprob: -3.517305850982666
    9. ' +=' → logprob: -3.642305850982666
    10. 'remove' → logprob: -4.392305850982666

Token 887: 'e' (ID: 68)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.005553900729864836
    2. 'ons' → logprob: -5.255553722381592
    3. 'e' → logprob: -8.63055419921875
    4. '               ' → logprob: -9.75555419921875
    5. ' =' → logprob: -10.63055419921875
    6. '   ' → logprob: -10.88055419921875
    7. 'ers' → logprob: -12.25555419921875
    8. '                   ' → logprob: -12.63055419921875
    9. '           ' → logprob: -12.75555419921875
    10. 'é' → logprob: -13.00555419921875

Token 888: ' les' (ID: 1341)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.5372769832611084
    2. 'positions' → logprob: -2.2872769832611084
    3. ' une' → logprob: -2.2872769832611084
    4. 'removed' → logprob: -2.6622769832611084
    5. 'used' → logprob: -2.9122769832611084
    6. 'ignored' → logprob: -3.0372769832611084
    7. 'les' → logprob: -3.1622769832611084
    8. 's' → logprob: -3.1622769832611084
    9. 'un' → logprob: -3.5372769832611084
    10. '   ' → logprob: -3.5372769832611084

Token 889: ' indices' (ID: 30378)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.286335825920105
    2. 'removed' → logprob: -1.411335825920105
    3. 'positions' → logprob: -1.661335825920105
    4. 'ret' → logprob: -2.4113359451293945
    5. 'indices' → logprob: -2.4113359451293945
    6. 'ignored' → logprob: -2.7863359451293945
    7. 'chosen' → logprob: -4.4113359451293945
    8. 'excluded' → logprob: -5.4113359451293945
    9. 'taken' → logprob: -5.5363359451293945
    10. 'cho' → logprob: -5.5363359451293945

Token 890: ' des' (ID: 731)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.2834749221801758
    2. 'util' → logprob: -1.7834749221801758
    3. '_ret' → logprob: -2.033474922180176
    4. '_' → logprob: -2.783474922180176
    5. 'cho' → logprob: -2.908474922180176
    6. ' retir' → logprob: -3.283474922180176
    7. 'reten' → logprob: -3.408474922180176
    8. '_used' → logprob: -3.408474922180176
    9. 'sup' → logprob: -3.533474922180176
    10. '_util' → logprob: -3.658474922180176

Token 891: ' lettres' (ID: 101234)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.18300606310367584
    2. 'pos' → logprob: -3.3080060482025146
    3. 'result' → logprob: -3.5580060482025146
    4. 'ret' → logprob: -3.6830060482025146
    5. 'indices' → logprob: -4.308006286621094
    6. 'élé' → logprob: -4.433006286621094
    7. 's' → logprob: -4.558006286621094
    8. 'used' → logprob: -4.808006286621094
    9. ' positions' → logprob: -5.683006286621094
    10. 'cho' → logprob: -5.683006286621094

Token 892: ' retir' (ID: 35638)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.81380295753479
    2. '_ret' → logprob: -2.31380295753479
    3. ' retir' → logprob: -2.56380295753479
    4. 'reten' → logprob: -2.68880295753479
    5. '_used' → logprob: -2.81380295753479
    6. 'util' → logprob: -3.43880295753479
    7. 'used' → logprob: -3.56380295753479
    8. '_' → logprob: -3.68880295753479
    9. 'cho' → logprob: -4.063802719116211
    10. ' used' → logprob: -4.438802719116211

Token 893: 'ées' (ID: 5161)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.08133789896965027
    2. 'ées' → logprob: -2.8313379287719727
    3. 'é' → logprob: -4.206337928771973
    4. '   ' → logprob: -6.706337928771973
    5. ' ' → logprob: -7.206337928771973
    6. 'ée' → logprob: -7.581337928771973
    7. 'es' → logprob: -7.706337928771973
    8. '  ' → logprob: -8.081337928771973
    9. '[]' → logprob: -8.331337928771973
    10. '    ' → logprob: -8.956337928771973

Token 894: ' pour' (ID: 1930)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.7527128458023071
    2. '               ' → logprob: -2.2527127265930176
    3. 'ret' → logprob: -2.3777127265930176
    4. 'indices' → logprob: -2.5027127265930176
    5. '   ' → logprob: -2.8777127265930176
    6. ' removed' → logprob: -2.8777127265930176
    7. '_removed' → logprob: -3.8777127265930176
    8. ' indices' → logprob: -4.002712726593018
    9. '       ' → logprob: -4.002712726593018
    10. '           ' → logprob: -4.127712726593018

Token 895: ' reconstru' (ID: 108053)
  Prédit: 'ignore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ignore' → logprob: -0.6843360662460327
    2. 'ign' → logprob: -2.3093361854553223
    3. ' ignore' → logprob: -2.3093361854553223
    4. '_ignore' → logprob: -2.4343361854553223
    5. ' ign' → logprob: -3.3093361854553223
    6. ' supprimer' → logprob: -3.4343361854553223
    7. 'ignored' → logprob: -3.8093361854553223
    8. 'sup' → logprob: -3.9343361854553223
    9. 'skip' → logprob: -4.059336185455322
    10. 'ret' → logprob: -4.434336185455322

Token 896: 'ire' (ID: 594)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.09057033807039261
    2. 'ire' → logprob: -2.5905704498291016
    3. 'érer' → logprob: -5.340570449829102
    4. 'iser' → logprob: -5.590570449829102
    5. 'iter' → logprob: -6.465570449829102
    6. '   ' → logprob: -8.340570449829102
    7. 'irer' → logprob: -8.465570449829102
    8. 'uire' → logprob: -8.465570449829102
    9. 'urer' → logprob: -8.840570449829102
    10. '```' → logprob: -8.840570449829102

Token 897: ' le' (ID: 505)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9352235198020935
    2. 'removed' → logprob: -1.5602235794067383
    3. 's' → logprob: -2.3102235794067383
    4. ' une' → logprob: -3.0602235794067383
    5. ' la' → logprob: -3.3102235794067383
    6. ' removed' → logprob: -3.4352235794067383
    7. 'ignored' → logprob: -3.5602235794067383
    8. '_removed' → logprob: -3.6852235794067383
    9. 'excluded' → logprob: -3.9352235794067383
    10. 'la' → logprob: -4.310223579406738

Token 898: ' suffix' (ID: 43412)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8883981704711914
    2. 'suffix' → logprob: -1.6383981704711914
    3. 'reste' → logprob: -2.0133981704711914
    4. 'rest' → logprob: -2.3883981704711914
    5. 'chaine' → logprob: -2.5133981704711914
    6. ' suffix' → logprob: -3.5133981704711914
    7. ' s' → logprob: -3.8883981704711914
    8. 'remaining' → logprob: -4.263398170471191
    9. ' reste' → logprob: -5.013398170471191
    10. 'string' → logprob: -5.513398170471191

Token 899: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9417597651481628
    2. 'ice' → logprob: -1.4417598247528076
    3. 'ex' → logprob: -2.0667598247528076
    4. '#' → logprob: -3.4417598247528076
    5. 'é' → logprob: -3.5667598247528076
    6. 'ic' → logprob: -3.8167598247528076
    7. 's' → logprob: -4.3167595863342285
    8. 'ixe' → logprob: -4.4417595863342285
    9. 'aire' → logprob: -4.5667595863342285
    10. 'ace' → logprob: -4.5667595863342285

Token 900: ' ensuite' (ID: 39713)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0844228267669678
    2. 'removed' → logprob: -1.2094228267669678
    3. '       ' → logprob: -1.7094228267669678
    4. 'indices' → logprob: -2.9594228267669678
    5. ' removed' → logprob: -3.2094228267669678
    6. '_removed' → logprob: -4.084423065185547
    7. '
' → logprob: -4.459423065185547
    8. ' indices' → logprob: -4.834423065185547
    9. 'ret' → logprob: -4.959423065185547
    10. '           ' → logprob: -4.959423065185547

Token 901: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 902: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04621650278568268
    2. '<|end|>' → logprob: -4.4212164878845215
    3. '
' → logprob: -4.7962164878845215
    4. '       ' → logprob: -5.0462164878845215
    5. 'removed' → logprob: -5.0462164878845215
    6. '                
' → logprob: -5.5462164878845215
    7. 'indices' → logprob: -5.9212164878845215
    8. ' removed' → logprob: -6.1712164878845215
    9. '```' → logprob: -7.4212164878845215
    10. '<|end|>' → logprob: -7.6712164878845215

Token 903: ' #' (ID: 1069)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.46894994378089905
    2. '               ' → logprob: -1.9689499139785767
    3. ' removed' → logprob: -2.093950033187866
    4. '           ' → logprob: -4.218949794769287
    5. 'indices' → logprob: -4.468949794769287
    6. 'ignored' → logprob: -4.843949794769287
    7. 's' → logprob: -5.093949794769287
    8. '       ' → logprob: -5.218949794769287
    9. 'break' → logprob: -5.218949794769287
    10. '#' (adapté à ' #') → logprob: -5.218949794769287

Token 904: ' On' (ID: 2160)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.9299074411392212
    2. ' removed' → logprob: -1.4299074411392212
    3. '               ' → logprob: -1.6799074411392212
    4. '#' → logprob: -3.0549073219299316
    5. 'indices' → logprob: -4.054907321929932
    6. 's' → logprob: -4.054907321929932
    7. 'continue' → logprob: -4.429907321929932
    8. ' #' → logprob: -5.054907321929932
    9. ' s' → logprob: -5.054907321929932
    10. ' indices' → logprob: -5.179907321929932

Token 905: ' va' (ID: 3423)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.24393153190612793
    2. 'removed' → logprob: -2.868931531906128
    3. ' continue' → logprob: -3.618931531906128
    4. 'ignore' → logprob: -3.618931531906128
    5. 'ret' → logprob: -3.868931531906128
    6. 'contin' → logprob: -4.368931770324707
    7. 'remove' → logprob: -4.368931770324707
    8. '#' → logprob: -4.868931770324707
    9. '_removed' → logprob: -4.868931770324707
    10. 'ignored' → logprob: -5.368931770324707

Token 906: ' garder' (ID: 63069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3173729181289673
    2. 'pass' → logprob: -2.3173727989196777
    3. ' continue' → logprob: -3.3173727989196777
    4. 'removed' → logprob: -3.5673727989196777
    5. 'contin' → logprob: -4.067372798919678
    6. 'ret' → logprob: -4.192372798919678
    7. 'remove' → logprob: -4.317372798919678
    8. 'ignore' → logprob: -4.442372798919678
    9. 'ignored' → logprob: -5.067372798919678
    10. 's' → logprob: -5.317372798919678

Token 907: ' en' (ID: 469)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.8929575681686401
    2. 'une' → logprob: -0.8929575681686401
    3. ' une' → logprob: -2.2679576873779297
    4. 'a' → logprob: -3.3929576873779297
    5. ' un' → logprob: -4.39295768737793
    6. 's' → logprob: -5.01795768737793
    7. 'track' → logprob: -5.64295768737793
    8. 'indices' → logprob: -6.14295768737793
    9. 'visited' → logprob: -6.14295768737793
    10. '   ' → logprob: -6.26795768737793

Token 908: ' tête' (ID: 36447)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.348054051399231
    2. 'continue' → logprob: -1.848054051399231
    3. 'removed' → logprob: -1.973054051399231
    4. 'mé' → logprob: -2.3480539321899414
    5. 'memo' → logprob: -2.9730539321899414
    6. 'mem' → logprob: -3.4730539321899414
    7. 'une' → logprob: -3.5980539321899414
    8. 'seen' → logprob: -3.8480539321899414
    9. 'skip' → logprob: -3.8480539321899414
    10. 's' → logprob: -4.098053932189941

Token 909: ' que' (ID: 661)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -1.287609577178955
    2. ' les' → logprob: -2.037609577178955
    3. 'les' → logprob: -2.162609577178955
    4. ' une' → logprob: -2.287609577178955
    5. ' removed' → logprob: -2.287609577178955
    6. 'ret' → logprob: -3.037609577178955
    7. '_removed' → logprob: -3.037609577178955
    8. 'indices' → logprob: -3.412609577178955
    9. '   ' → logprob: -3.537609577178955
    10. ' un' → logprob: -4.162609577178955

Token 910: ' cette' (ID: 7696)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9617815613746643
    2. 'result' → logprob: -1.5867815017700195
    3. 'removed' → logprob: -2.2117815017700195
    4. 'current' → logprob: -2.5867815017700195
    5. 'positions' → logprob: -2.5867815017700195
    6. 'indices' → logprob: -3.7117815017700195
    7. ' result' → logprob: -3.9617815017700195
    8. ' pos' → logprob: -4.0867815017700195
    9. ' removed' → logprob: -4.0867815017700195
    10. ' current' → logprob: -4.4617815017700195

Token 911: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.576714277267456
    2. 'car' → logprob: -2.451714277267456
    3. 'pos' → logprob: -2.826714277267456
    4. '#' → logprob: -3.076714277267456
    5. 'token' → logprob: -3.451714277267456
    6. 'char' → logprob: -3.701714277267456
    7. 'ligne' → logprob: -3.826714277267456
    8. 'indice' → logprob: -3.951714277267456
    9. '
' → logprob: -4.201714515686035
    10. 'result' → logprob: -4.326714515686035

Token 912: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.70407235622406
    2. '_removed' → logprob: -1.95407235622406
    3. 'removed' → logprob: -2.2040724754333496
    4. ' =' → logprob: -2.2040724754333496
    5. '<|end|>' → logprob: -2.9540724754333496
    6. '=' → logprob: -3.3290724754333496
    7. ' n' → logprob: -3.4540724754333496
    8. ' +=' → logprob: -3.7040724754333496
    9. 'des' → logprob: -3.8290724754333496
    10. '#' → logprob: -4.07907247543335

Token 913: ' "' (ID: 392)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mar' → logprob: -1.0434930324554443
    2. 'ret' → logprob: -1.1684930324554443
    3. 'sup' → logprob: -3.0434930324554443
    4. 'util' → logprob: -3.0434930324554443
    5. 'reten' → logprob: -3.2934930324554443
    6. ' retir' → logprob: -3.2934930324554443
    7. 'cons' → logprob: -3.2934930324554443
    8. 'ignor' → logprob: -3.6684930324554443
    9. 'cho' → logprob: -3.9184930324554443
    10. ' supprim' → logprob: -4.168493270874023

Token 914: 'occup' (ID: 37913)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.9532397985458374
    2. 'removed' → logprob: -0.9532397985458374
    3. 'ignored' → logprob: -1.9532397985458374
    4. 'used' → logprob: -2.828239917755127
    5. 'taken' → logprob: -4.453239917755127
    6. 'chosen' → logprob: -5.328239917755127
    7. 'selected' → logprob: -6.078239917755127
    8. 'excluded' → logprob: -6.453239917755127
    9. 'None' → logprob: -6.953239917755127
    10. ' retir' → logprob: -7.078239917755127

Token 915: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0004179217794444412
    2. 'é' → logprob: -8.250417709350586
    3. 'ee' → logprob: -8.875417709350586
    4. 'ées' → logprob: -12.000417709350586
    5. '   ' → logprob: -12.625417709350586
    6. 'rée' → logprob: -14.000417709350586
    7. '       ' → logprob: -14.250417709350586
    8. 'e' → logprob: -14.375417709350586
    9. 'ed' → logprob: -14.375417709350586
    10. ' ' → logprob: -14.375417709350586

Token 916: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04403366521000862
    2. ' "' → logprob: -3.6690337657928467
    3. '")' → logprob: -4.794033527374268
    4. 's' → logprob: -6.419033527374268
    5. 'e' → logprob: -6.919033527374268
    6. 'par' → logprob: -7.044033527374268
    7. ' ")' → logprob: -7.169033527374268
    8. 'es' → logprob: -7.544033527374268
    9. ' par' → logprob: -7.794033527374268
    10. '   ' → logprob: -8.169034004211426

Token 917: ' donc' (ID: 14206)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5989025235176086
    2. '       ' → logprob: -1.9739024639129639
    3. 'removed' → logprob: -1.9739024639129639
    4. '_removed' → logprob: -3.223902463912964
    5. '           ' → logprob: -3.598902463912964
    6. ' removed' → logprob: -4.223902702331543
    7. '<|end|>' → logprob: -4.723902702331543
    8. ' =' → logprob: -4.723902702331543
    9. 'indices' → logprob: -4.848902702331543
    10. '                
' → logprob: -4.848902702331543

Token 918: ' on' (ID: 402)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.23925960063934326
    2. ' current' → logprob: -2.614259719848633
    3. 'positions' → logprob: -2.989259719848633
    4. '   ' → logprob: -3.864259719848633
    5. 'removed' → logprob: -3.989259719848633
    6. 's' → logprob: -4.239259719848633
    7. '               ' → logprob: -5.239259719848633
    8. 'indices' → logprob: -5.364259719848633
    9. ' s' → logprob: -5.614259719848633
    10. '           ' → logprob: -5.864259719848633

Token 919: ' la' (ID: 557)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.07003580033779144
    2. ' continue' → logprob: -3.695035696029663
    3. 'ignore' → logprob: -4.945035934448242
    4. 'contin' → logprob: -4.945035934448242
    5. 'mar' → logprob: -5.445035934448242
    6. 'do' → logprob: -5.820035934448242
    7. '       ' → logprob: -6.195035934448242
    8. 'pass' → logprob: -6.445035934448242
    9. 'current' → logprob: -6.570035934448242
    10. 'ne' → logprob: -6.570035934448242

Token 920: ' sup' (ID: 1982)
  Prédit: 'ignore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ignore' → logprob: -0.562946617603302
    2. 'ret' → logprob: -2.0629465579986572
    3. 'mar' → logprob: -2.3129465579986572
    4. 'sup' → logprob: -2.9379465579986572
    5. 'skip' → logprob: -3.5629465579986572
    6. 'continue' → logprob: -3.8129465579986572
    7. 'current' → logprob: -4.062946796417236
    8. 'ign' → logprob: -4.562946796417236
    9. 'aj' → logprob: -4.562946796417236
    10. 'ignored' → logprob: -4.562946796417236

Token 921: 'prime' (ID: 46441)
  Prédit: 'prim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prim' → logprob: -0.015452446416020393
    2. 'pr' → logprob: -5.2654523849487305
    3. 'prime' → logprob: -5.5154523849487305
    4. 'pressed' → logprob: -6.0154523849487305
    5. 'press' → logprob: -6.0154523849487305
    6. 'p' → logprob: -7.3904523849487305
    7. 'pl' → logprob: -9.39045238494873
    8. '>' → logprob: -9.76545238494873
    9. '```' → logprob: -9.76545238494873
    10. 'pos' → logprob: -9.89045238494873

Token 922: ' virt' (ID: 5824)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13297221064567566
    2. 'from' → logprob: -3.382972240447998
    3. ' from' → logprob: -3.507972240447998
    4. 's' → logprob: -4.132972240447998
    5. '<|end|>' → logprob: -4.507972240447998
    6. '                   ' → logprob: -5.132972240447998
    7. ' =' → logprob: -5.382972240447998
    8. '           ' → logprob: -5.757972240447998
    9. '<|end|>' → logprob: -6.007972240447998
    10. '       ' → logprob: -6.257972240447998

Token 923: 'uellement' (ID: 36026)
  Prédit: 'érieure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.8207752108573914
    2. 'prim' → logprob: -1.4457752704620361
    3. 'pos' → logprob: -1.6957752704620361
    4. 'pl' → logprob: -3.070775270462036
    5. 'é' → logprob: -4.070775032043457
    6. 'None' → logprob: -4.445775032043457
    7. 'ér' → logprob: -4.570775032043457
    8. 'ée' → logprob: -4.570775032043457
    9. 'p' → logprob: -4.820775032043457
    10. 'rée' → logprob: -5.320775032043457

Token 924: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15275076031684875
    2. '<|end|>' → logprob: -3.5277507305145264
    3. ')' → logprob: -3.9027507305145264
    4. '.' → logprob: -4.4027509689331055
    5. ' s' → logprob: -4.9027509689331055
    6. '<|end|>' → logprob: -4.9027509689331055
    7. '                
' → logprob: -4.9027509689331055
    8. ',' → logprob: -4.9027509689331055
    9. '           ' → logprob: -5.0277509689331055
    10. '                   ' → logprob: -5.2777509689331055

Token 925: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7498539090156555
    2. '       ' → logprob: -1.8748538494110107
    3. ' current' → logprob: -3.1248538494110107
    4. ' positions' → logprob: -3.1248538494110107
    5. ' s' → logprob: -3.3748538494110107
    6. 'positions' → logprob: -3.6248538494110107
    7. '<|end|>' → logprob: -3.8748538494110107
    8. 'current' → logprob: -3.8748538494110107
    9. '                
' → logprob: -3.9998538494110107
    10. '           ' → logprob: -3.9998538494110107

Token 926: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9457725286483765
    2. 'removed' → logprob: -1.1957725286483765
    3. ' removed' → logprob: -2.820772647857666
    4. 's' → logprob: -3.070772647857666
    5. 'positions' → logprob: -3.195772647857666
    6. 'current' → logprob: -3.570772647857666
    7. '           ' → logprob: -3.695772647857666
    8. '       ' → logprob: -4.195772647857666
    9. ' s' → logprob: -4.195772647857666
    10. '#' (adapté à ' #') → logprob: -4.820772647857666

Token 927: ' On' (ID: 2160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0104529857635498
    2. 'removed' → logprob: -1.2604529857635498
    3. ' removed' → logprob: -2.88545298576355
    4. 'used' → logprob: -3.26045298576355
    5. 's' → logprob: -3.26045298576355
    6. '       ' → logprob: -3.63545298576355
    7. '   ' → logprob: -3.76045298576355
    8. 'positions' → logprob: -4.010453224182129
    9. '#' → logprob: -4.135453224182129
    10. ' s' → logprob: -4.260453224182129

Token 928: ' avance' (ID: 81376)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4635387063026428
    2. '       ' → logprob: -1.838538646697998
    3. ' continue' → logprob: -1.838538646697998
    4. '   ' → logprob: -4.088538646697998
    5. '           ' → logprob: -4.838538646697998
    6. 'remove' → logprob: -5.088538646697998
    7. '#' → logprob: -5.338538646697998
    8. 'current' → logprob: -6.338538646697998
    9. 'contin' → logprob: -6.463538646697998
    10. ' remove' → logprob: -6.838538646697998

Token 929: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.050820451229810715
    2. ' current' → logprob: -3.1758203506469727
    3. '   ' → logprob: -5.550820350646973
    4. '
' → logprob: -5.675820350646973
    5. '	current' → logprob: -8.925820350646973
    6. '(current' → logprob: -9.425820350646973
    7. '    
' → logprob: -10.050820350646973
    8. '_current' → logprob: -10.050820350646973
    9. '[current' → logprob: -10.050820350646973
    10. '=current' → logprob: -10.175820350646973

Token 930: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00019173922191839665
    2. 'pos' → logprob: -8.625191688537598
    3. '_position' → logprob: -11.875191688537598
    4. '_' → logprob: -13.125191688537598
    5. 'Pos' → logprob: -13.250191688537598
    6. 'current' → logprob: -14.625191688537598
    7. '   ' → logprob: -15.125191688537598
    8. '_current' → logprob: -15.500191688537598
    9. 'position' → logprob: -15.750191688537598
    10. ' _' → logprob: -16.500192642211914

Token 931: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.21412822604179382
    2. '+=' → logprob: -1.7141282558441162
    3. '=' → logprob: -5.214128017425537
    4. ' =' → logprob: -5.589128017425537
    5. '       ' → logprob: -6.714128017425537
    6. '           ' → logprob: -7.464128017425537
    7. '   ' → logprob: -7.714128017425537
    8. '
' → logprob: -8.214128494262695
    9. '               ' → logprob: -8.214128494262695
    10. '                   ' → logprob: -8.589128494262695

Token 932: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001613459608051926
    2. ' ' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.125161170959473
    4. '+' → logprob: -14.500161170959473
    5. '    ' → logprob: -16.87516212463379
    6. '```' → logprob: -17.37516212463379
    7. '       ' → logprob: -17.50016212463379
    8. '  ' → logprob: -17.50016212463379
    9. '     ' → logprob: -17.87516212463379
    10. ' +' → logprob: -18.00016212463379

Token 933: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.875003814697266
    3. '+' → logprob: -14.250003814697266
    4. '0' → logprob: -15.125003814697266
    5. 'len' → logprob: -16.250003814697266
    6. '   ' → logprob: -16.500003814697266
    7. '+=' → logprob: -17.625003814697266
    8. 's' → logprob: -18.125003814697266
    9. '```' → logprob: -18.187503814697266
    10. '=' → logprob: -18.250003814697266

Token 934: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5138391256332397
    2. '
' → logprob: -1.1388391256332397
    3. '               ' → logprob: -3.3888392448425293
    4. '<|end|>' → logprob: -4.013839244842529
    5. '        
' → logprob: -4.888839244842529
    6. '           ' → logprob: -5.138839244842529
    7. '<|end|>' → logprob: -5.388839244842529
    8. '  
' → logprob: -6.138839244842529
    9. '    
' → logprob: -6.138839244842529
    10. ' 
' → logprob: -6.638839244842529

Token 935: ' on' (ID: 402)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.9852598905563354
    2. 'current' → logprob: -0.9852598905563354
    3. 'result' → logprob: -2.610260009765625
    4. 'len' → logprob: -2.860260009765625
    5. ' len' → logprob: -2.985260009765625
    6. ' result' → logprob: -2.985260009765625
    7. ' on' → logprob: -5.610260009765625
    8. 'le' → logprob: -5.735260009765625
    9. ' la' → logprob: -5.985260009765625
    10. ' le' → logprob: -6.485260009765625

Token 936: ' a' (ID: 261)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6001476049423218
    2. ' +=' → logprob: -2.1001477241516113
    3. 'continue' → logprob: -2.7251477241516113
    4. 'append' → logprob: -2.8501477241516113
    5. '   ' → logprob: -3.1001477241516113
    6. ' current' → logprob: -3.4751477241516113
    7. 'current' → logprob: -3.4751477241516113
    8. ' avance' → logprob: -3.6001477241516113
    9. 'avance' → logprob: -4.100147724151611
    10. ' continue' → logprob: -4.100147724151611

Token 937: ' placé' (ID: 147030)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.3395527601242065
    2. 'current' → logprob: -2.214552879333496
    3. 'append' → logprob: -2.339552879333496
    4. ' ajouté' → logprob: -2.339552879333496
    5. ' choisi' → logprob: -2.464552879333496
    6. 'cho' → logprob: -2.839552879333496
    7. ' append' → logprob: -3.089552879333496
    8. ' avanc' → logprob: -3.214552879333496
    9. 'len' → logprob: -3.589552879333496
    10. ' current' → logprob: -3.714552879333496

Token 938: ' un' (ID: 537)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.08313091844320297
    2. ' current' → logprob: -3.2081308364868164
    3. '1' → logprob: -3.4581308364868164
    4. 'result' → logprob: -5.458130836486816
    5. ' ' → logprob: -6.833130836486816
    6. '```' → logprob: -8.583130836486816
    7. 'next' → logprob: -8.583130836486816
    8. 'le' → logprob: -8.708130836486816
    9. 'une' → logprob: -8.833130836486816
    10. 'the' → logprob: -8.833130836486816

Token 939: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.10673248022794724
    2. ' caractère' → logprob: -2.8567323684692383
    3. ' caract' → logprob: -4.231732368469238
    4. 'token' → logprob: -4.481732368469238
    5. 'élé' → logprob: -4.856732368469238
    6. 'character' → logprob: -5.856732368469238
    7. ' nouveau' → logprob: -5.856732368469238
    8. 'nou' → logprob: -6.356732368469238
    9. 'char' → logprob: -7.106732368469238
    10. 'new' → logprob: -7.856732368469238

Token 940: ' dans' (ID: 2671)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5879541635513306
    2. '+' → logprob: -2.462954044342041
    3. '<|end|>' → logprob: -2.962954044342041
    4. ' +=' → logprob: -3.587954044342041
    5. '[current' → logprob: -3.587954044342041
    6. '   ' → logprob: -3.587954044342041
    7. '               ' → logprob: -3.712954044342041
    8. '       ' → logprob: -3.837954044342041
    9. ')' → logprob: -3.962954044342041
    10. '<|end|>' → logprob: -4.212954044342041

Token 941: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20174826681613922
    2. ' result' → logprob: -1.701748251914978
    3. ' la' → logprob: -8.95174789428711
    4. 'current' → logprob: -9.70174789428711
    5. 'le' → logprob: -10.07674789428711
    6. ' le' → logprob: -10.45174789428711
    7. 'la' → logprob: -10.57674789428711
    8. ' current' → logprob: -10.70174789428711
    9. 'l' → logprob: -12.07674789428711
    10. 'the' → logprob: -12.32674789428711

Token 942: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2462603896856308
    2. 'current' → logprob: -2.496260404586792
    3. '       ' → logprob: -2.746260404586792
    4. '\n' → logprob: -3.996260404586792
    5. ' 
' → logprob: -4.246260166168213
    6. '    
' → logprob: -4.621260166168213
    7. '   ' → logprob: -4.996260166168213
    8. '        
' → logprob: -4.996260166168213
    9. '  
' → logprob: -5.871260166168213
    10. ' current' → logprob: -5.871260166168213

Token 943: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5452550053596497
    2. '
' → logprob: -0.9202550053596497
    3. '   ' → logprob: -4.670255184173584
    4. '        
' → logprob: -5.170255184173584
    5. '    
' → logprob: -6.170255184173584
    6. '  
' → logprob: -7.045255184173584
    7. 'current' → logprob: -7.045255184173584
    8. '\n' → logprob: -7.420255184173584
    9. '<|end|>' → logprob: -7.670255184173584
    10. '
' → logprob: -8.295254707336426

Token 944: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.37540820240974426
    2. ' current' → logprob: -1.5004081726074219
    3. '   ' → logprob: -2.625408172607422
    4. '       ' → logprob: -4.125408172607422
    5. '	current' → logprob: -7.375408172607422
    6. '               ' → logprob: -7.750408172607422
    7. '           ' → logprob: -8.750408172607422
    8. 'result' → logprob: -9.750408172607422
    9. '
' → logprob: -10.375408172607422
    10. ' ' → logprob: -10.875408172607422

Token 945: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.704273118884885e-07
    2. 'pos' → logprob: -14.500000953674316
    3. '_' → logprob: -16.0
    4. 'Pos' → logprob: -17.625
    5. '_position' → logprob: -17.75
    6. '   ' → logprob: -19.5
    7. '	pos' → logprob: -19.625
    8. '_POS' → logprob: -20.125
    9. '_val' → logprob: -20.125
    10. '_token' → logprob: -20.375

Token 946: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.333640992641449
    2. ' +=' → logprob: -1.3336410522460938
    3. '=' → logprob: -3.9586410522460938
    4. ' =' → logprob: -6.833641052246094
    5. '<|end|>' → logprob: -13.208641052246094
    6. ']+=' → logprob: -13.458641052246094
    7. '+' → logprob: -13.833641052246094
    8. '   ' → logprob: -13.958641052246094
    9. '++' → logprob: -14.833641052246094
    10. '    ' → logprob: -15.583641052246094

Token 947: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -19.750001907348633
    5. '۱' → logprob: -22.625001907348633
    6. '0' → logprob: -23.500001907348633
    7. '  ' → logprob: -23.500001907348633
    8. '１' → logprob: -23.625001907348633
    9. '<|end|>' → logprob: -24.000001907348633
    10. '#' → logprob: -24.250001907348633

Token 948: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -19.9375
    5. '0' → logprob: -20.1875
    6. '۱' → logprob: -20.4375
    7. '१' → logprob: -20.625
    8. '１' → logprob: -20.75
    9. 'result' → logprob: -21.0625
    10. '১' → logprob: -21.3125

Token 949: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003575484035536647
    2. '<|end|>' → logprob: -6.753575325012207
    3. '
' → logprob: -7.003575325012207
    4. '           ' → logprob: -7.753575325012207
    5. '                
' → logprob: -8.003575325012207
    6. '       ' → logprob: -8.128575325012207
    7. '<|end|>' → logprob: -9.503575325012207
    8. '  
' → logprob: -9.753575325012207
    9. '                   ' → logprob: -9.878575325012207
    10. ' 
' → logprob: -10.503575325012207

Token 950: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0639086663722992
    2. '       ' → logprob: -3.563908576965332
    3. '           ' → logprob: -3.563908576965332
    4. 'else' → logprob: -6.313908576965332
    5. 'continue' → logprob: -6.938908576965332
    6. ' else' → logprob: -7.563908576965332
    7. '<|end|>' → logprob: -7.563908576965332
    8. '   ' → logprob: -7.813908576965332
    9. ' continue' → logprob: -8.063908576965332
    10. '	continue' → logprob: -9.063908576965332

Token 951: ' found' (ID: 2491)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18420790135860443
    2. 'break' → logprob: -1.8092079162597656
    3. ' break' → logprob: -5.684207916259766
    4. '       ' → logprob: -7.059207916259766
    5. '           ' → logprob: -9.434207916259766
    6. 'else' → logprob: -9.934207916259766
    7. '	break' → logprob: -10.559207916259766
    8. '   ' → logprob: -11.559207916259766
    9. 'continue' → logprob: -11.934207916259766
    10. '                
' → logprob: -12.559207916259766

Token 952: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33469119668006897
    2. '=' → logprob: -1.4596911668777466
    3. '=True' → logprob: -3.084691286087036
    4. '               ' → logprob: -6.209691047668457
    5. '=False' → logprob: -6.459691047668457
    6. '                   ' → logprob: -7.209691047668457
    7. '           ' → logprob: -7.584691047668457
    8. '<|end|>' → logprob: -7.834691047668457
    9. '       ' → logprob: -8.334691047668457
    10. ':' → logprob: -8.709691047668457

Token 953: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.941850526549388e-06
    2. ' True' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.37500762939453
    4. 'true' → logprob: -18.50000762939453
    5. '(True' → logprob: -20.25000762939453
    6. '=True' → logprob: -21.00000762939453
    7. '       ' → logprob: -21.87500762939453
    8. '           ' → logprob: -22.37500762939453
    9. '               ' → logprob: -22.50000762939453
    10. '                   ' → logprob: -23.50000762939453

Token 954: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006246338016353548
    2. '           ' → logprob: -7.750624656677246
    3. '                   ' → logprob: -9.500624656677246
    4. '                
' → logprob: -10.250624656677246
    5. '       ' → logprob: -10.500624656677246
    6. '<|end|>' → logprob: -11.125624656677246
    7. '                       ' → logprob: -11.625624656677246
    8. '                ' → logprob: -11.750624656677246
    9. '              ' → logprob: -12.625624656677246
    10. '	           ' → logprob: -12.750624656677246

Token 955: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00023286080977413803
    2. '       ' → logprob: -9.250232696533203
    3. '           ' → logprob: -9.250232696533203
    4. '		       ' → logprob: -11.500232696533203
    5. '                   ' → logprob: -12.000232696533203
    6. '	           ' → logprob: -12.125232696533203
    7. '	       ' → logprob: -13.000232696533203
    8. '                ' → logprob: -13.125232696533203
    9. '			' → logprob: -13.250232696533203
    10. '              ' → logprob: -13.250232696533203

Token 956: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.019237768370658e-05
    2. 'break' (adapté à ' break') → logprob: -9.500090599060059
    3. '			' → logprob: -12.875090599060059
    4. '       ' → logprob: -12.875090599060059
    5. '           ' → logprob: -13.000090599060059
    6. '                   ' → logprob: -13.500090599060059
    7. 'if' → logprob: -13.625090599060059
    8. ' break' → logprob: -13.625090599060059
    9. '	break' → logprob: -13.875090599060059
    10. '		       ' → logprob: -14.000090599060059

Token 957: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037452138494700193
    2. '        
' → logprob: -6.128745079040527
    3. '   ' → logprob: -7.628745079040527
    4. 'if' → logprob: -7.878745079040527
    5. '           ' → logprob: -8.253745079040527
    6. '
' → logprob: -9.253745079040527
    7. '        ' → logprob: -9.753745079040527
    8. ' if' → logprob: -10.128745079040527
    9. '    
' → logprob: -10.128745079040527
    10. '<|end|>' → logprob: -10.253745079040527

Token 958: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033200893085449934
    2. '   ' → logprob: -8.25033187866211
    3. 'if' → logprob: -10.37533187866211
    4. '
' → logprob: -10.62533187866211
    5. ' if' → logprob: -12.25033187866211
    6. '```' → logprob: -12.87533187866211
    7. '        
' → logprob: -13.00033187866211
    8. 'If' → logprob: -13.37533187866211
    9. '           ' → logprob: -13.62533187866211
    10. '<|end|>' → logprob: -14.12533187866211

Token 959: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27876728773117065
    2. '   ' → logprob: -1.5287673473358154
    3. 'if' (adapté à ' if') → logprob: -3.6537673473358154
    4. '
' → logprob: -8.153767585754395
    5. ' if' → logprob: -9.028767585754395
    6. '        
' → logprob: -9.278767585754395
    7. '    
' → logprob: -9.528767585754395
    8. 'else' → logprob: -12.653767585754395
    9. 'If' → logprob: -12.903767585754395
    10. '	if' → logprob: -12.903767585754395

Token 960: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3872152268886566
    2. ' not' → logprob: -1.137215256690979
    3. '   ' → logprob: -9.012215614318848
    4. '       ' → logprob: -9.012215614318848
    5. 'found' → logprob: -9.387215614318848
    6. '	not' → logprob: -12.012215614318848
    7. ' found' → logprob: -12.637215614318848
    8. '           ' → logprob: -12.887215614318848
    9. '(not' → logprob: -13.512215614318848
    10. '
' → logprob: -14.012215614318848

Token 961: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.00033546582562848926
    2. ' found' → logprob: -8.000335693359375
    3. '	found' → logprob: -17.625335693359375
    4. '(found' → logprob: -17.875335693359375
    5. 'Found' → logprob: -18.625335693359375
    6. '_found' → logprob: -19.625335693359375
    7. 'find' → logprob: -21.375335693359375
    8. '
' → logprob: -21.875335693359375
    9. '-found' → logprob: -22.125335693359375
    10. 'f' → logprob: -22.750335693359375

Token 962: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.316095769405365
    2. ':
' → logprob: -1.3160958290100098
    3. '       ' → logprob: -6.06609582901001
    4. '=' → logprob: -8.566095352172852
    5. '   ' → logprob: -8.941095352172852
    6. '           ' → logprob: -9.066095352172852
    7. '==' → logprob: -10.941095352172852
    8. ':

' → logprob: -11.816095352172852
    9. '():
' → logprob: -11.816095352172852
    10. '):
' → logprob: -12.066095352172852

Token 963: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002750903833657503
    2. '   ' → logprob: -6.502750873565674
    3. '           ' → logprob: -7.002750873565674
    4. '#' → logprob: -9.377751350402832
    5. '
' → logprob: -9.377751350402832
    6. 'result' → logprob: -9.752751350402832
    7. '```' → logprob: -10.127751350402832
    8. 'break' → logprob: -10.627751350402832
    9. ' break' → logprob: -11.752751350402832
    10. ' result' → logprob: -11.752751350402832

Token 964: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6853094100952148
    2. '       ' → logprob: -0.8103094100952148
    3. '           ' → logprob: -3.685309410095215
    4. 'break' → logprob: -3.810309410095215
    5. ' result' → logprob: -6.060309410095215
    6. '   ' → logprob: -6.935309410095215
    7. '```' → logprob: -8.060309410095215
    8. ' break' → logprob: -8.435309410095215
    9. '#' (adapté à ' #') → logprob: -8.685309410095215
    10. '               ' → logprob: -10.810309410095215

Token 965: ' A' (ID: 355)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.8866516947746277
    2. '           ' → logprob: -1.2616517543792725
    3. '#' → logprob: -1.7616517543792725
    4. 'result' → logprob: -2.1366517543792725
    5. ' break' → logprob: -5.261651515960693
    6. '       ' → logprob: -5.386651515960693
    7. '   ' → logprob: -5.511651515960693
    8. ' #' → logprob: -7.636651515960693
    9. ' result' → logprob: -7.886651515960693
    10. '               ' → logprob: -9.136651992797852

Token 966: 'ucune' (ID: 165629)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03225060924887657
    2. 'result' → logprob: -3.9072506427764893
    3. 'break' → logprob: -6.15725040435791
    4. 'l' → logprob: -6.28225040435791
    5. 'else' → logprob: -6.40725040435791
    6. 'j' → logprob: -6.65725040435791
    7. 'current' → logprob: -7.03225040435791
    8. 'll' → logprob: -7.28225040435791
    9. 'ucune' → logprob: -7.65725040435791
    10. ' #' → logprob: -7.65725040435791

Token 967: ' lettre' (ID: 68013)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4206455945968628
    2. '   ' → logprob: -1.6706455945968628
    3. 'car' → logprob: -1.7956455945968628
    4. ' lettre' → logprob: -2.6706457138061523
    5. '#' → logprob: -2.7956457138061523
    6. ' caract' → logprob: -3.0456457138061523
    7. '           ' → logprob: -3.0456457138061523
    8. 'char' → logprob: -3.1706457138061523
    9. ' #' → logprob: -4.170645713806152
    10. ' ' → logprob: -4.920645713806152

Token 968: ' peut' (ID: 9216)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.293100118637085
    2. '       ' → logprob: -2.168100118637085
    3. ' n' → logprob: -2.293100118637085
    4. 'n' → logprob: -2.543100118637085
    5. '   ' → logprob: -2.543100118637085
    6. 'possible' → logprob: -2.918100118637085
    7. ' à' → logprob: -3.043100118637085
    8. 'else' → logprob: -3.543100118637085
    9. ' else' → logprob: -3.543100118637085
    10. ' possible' → logprob: -3.668100118637085

Token 969: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.05305548012256622
    2. ' être' → logprob: -3.17805552482605
    3. 'êt' → logprob: -6.178055286407471
    4. 'pas' → logprob: -6.303055286407471
    5. 'êtres' → logprob: -6.428055286407471
    6. 'Ê' → logprob: -6.678055286407471
    7. ' ' → logprob: -7.303055286407471
    8. 'ê' → logprob: -7.553055286407471
    9. 'etre' → logprob: -7.553055286407471
    10. ''être' → logprob: -8.053055763244629

Token 970: ' déplac' (ID: 195321)
  Prédit: 'amen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amen' → logprob: -1.0374383926391602
    2. 'dé' → logprob: -1.7874383926391602
    3. ' déplac' → logprob: -2.28743839263916
    4. 'plac' → logprob: -2.41243839263916
    5. 'am' → logprob: -2.66243839263916
    6. 'cho' → logprob: -3.16243839263916
    7. 'import' → logprob: -3.66243839263916
    8. 'swap' → logprob: -3.66243839263916
    9. 'sw' → logprob: -4.03743839263916
    10. ' ' → logprob: -4.03743839263916

Token 971: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.018006766214966774
    2. 'é' → logprob: -4.268006801605225
    3. 'er' → logprob: -6.268006801605225
    4. 'à' → logprob: -8.143006324768066
    5. ' à' → logprob: -8.143006324768066
    6. ' vers' → logprob: -8.393006324768066
    7. 'e' → logprob: -8.393006324768066
    8. 'able' → logprob: -8.518006324768066
    9. 'ement' → logprob: -8.643006324768066
    10. ' ' → logprob: -9.393006324768066

Token 972: ' vers' (ID: 3640)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pour' → logprob: -1.2315257787704468
    2. 'dans' → logprob: -1.7315257787704468
    3. 'à' → logprob: -1.8565257787704468
    4. 'sans' → logprob: -2.4815258979797363
    5. 'plus' → logprob: -2.7315258979797363
    6. 'avec' → logprob: -3.1065258979797363
    7. 'for' → logprob: -3.7315258979797363
    8. 'au' → logprob: -3.7315258979797363
    9. '   ' → logprob: -4.356525897979736
    10. ' sans' → logprob: -4.356525897979736

Token 973: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.031412750482559204
    2. ' current' → logprob: -3.5314128398895264
    3. 'la' → logprob: -6.656412601470947
    4. ' la' → logprob: -8.781413078308105
    5. 'position' → logprob: -9.406413078308105
    6. 'l' → logprob: -9.531413078308105
    7. 'le' → logprob: -11.156413078308105
    8. 'left' → logprob: -11.281413078308105
    9. ' ' → logprob: -11.781413078308105
    10. 'right' → logprob: -11.906413078308105

Token 974: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00015109812375158072
    2. 'pos' → logprob: -9.250150680541992
    3. '_' → logprob: -10.000150680541992
    4. '_position' → logprob: -12.125150680541992
    5. ' _' → logprob: -13.375150680541992
    6. 'Pos' → logprob: -14.375150680541992
    7. '```' → logprob: -14.500150680541992
    8. '_positions' → logprob: -15.000150680541992
    9. '_current' → logprob: -15.375150680541992
    10. '_p' → logprob: -15.500150680541992

Token 975: ' car' (ID: 1669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10736066848039627
    2. ':
' → logprob: -2.982360601425171
    3. '       ' → logprob: -3.232360601425171
    4. ':' → logprob: -5.35736083984375
    5. '   ' → logprob: -5.60736083984375
    6. '
' → logprob: -6.60736083984375
    7. '               ' → logprob: -7.98236083984375
    8. ' :
' → logprob: -8.35736083984375
    9. ',' → logprob: -8.60736083984375
    10. '#' → logprob: -8.60736083984375

Token 976: ' cost' (ID: 3097)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05066294968128204
    2. 'dist' → logprob: -3.9256629943847656
    3. 'la' → logprob: -4.175662994384766
    4. 'le' → logprob: -4.925662994384766
    5. ' k' → logprob: -6.300662994384766
    6. 'on' → logprob: -6.925662994384766
    7. 'distance' → logprob: -7.550662994384766
    8. 'il' → logprob: -7.550662994384766
    9. 'l' → logprob: -7.675662994384766
    10. 'pos' → logprob: -7.675662994384766

Token 977: ' trop' (ID: 14765)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9720969796180725
    2. ' trop' → logprob: -1.0970969200134277
    3. '>' → logprob: -1.5970969200134277
    4. '   ' → logprob: -3.7220969200134277
    5. ' too' → logprob: -4.222096920013428
    6. 'ex' → logprob: -4.347096920013428
    7. 'e' → logprob: -4.722096920013428
    8. ' est' → logprob: -5.347096920013428
    9. '=' → logprob: -5.597096920013428
    10. ' exceeds' → logprob: -5.972096920013428

Token 978: ' élevé' (ID: 95488)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.007715936284512281
    2. ' élevé' → logprob: -6.257715702056885
    3. 'grand' → logprob: -6.382715702056885
    4. 'import' → logprob: -6.382715702056885
    5. 'important' → logprob: -7.132715702056885
    6. 'e' → logprob: -7.382715702056885
    7. 'ele' → logprob: -7.507715702056885
    8. 'élé' → logprob: -8.757716178894043
    9. '   ' → logprob: -9.257716178894043
    10. ' ' → logprob: -10.007716178894043

Token 979: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2537539601325989
    2. '       ' → logprob: -1.628753900527954
    3. ':
' → logprob: -4.003754138946533
    4. '   ' → logprob: -5.753754138946533
    5. '
' → logprob: -6.003754138946533
    6. ':' → logprob: -6.128754138946533
    7. ' or' → logprob: -7.878754138946533
    8. ',' → logprob: -7.878754138946533
    9. '               ' → logprob: -7.878754138946533
    10. 'break' → logprob: -8.503753662109375

Token 980: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2836509346961975
    2. '       ' → logprob: -1.4086508750915527
    3. '   ' → logprob: -6.158650875091553
    4. 'result' → logprob: -8.783651351928711
    5. 'break' → logprob: -10.283651351928711
    6. '               ' → logprob: -10.408651351928711
    7. ' result' → logprob: -10.533651351928711
    8. '	   ' → logprob: -10.783651351928711
    9. '		' → logprob: -10.908651351928711
    10. '	       ' → logprob: -11.033651351928711

Token 981: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0503062009811401
    2. '       ' → logprob: -1.3003062009811401
    3. 'result' → logprob: -1.5503062009811401
    4. 'break' (adapté à ' break') → logprob: -1.9253062009811401
    5. '   ' → logprob: -4.17530632019043
    6. ' break' → logprob: -6.67530632019043
    7. '#' → logprob: -6.67530632019043
    8. ' result' → logprob: -7.30030632019043
    9. '               ' → logprob: -7.67530632019043
    10. 'current' → logprob: -8.92530632019043

Token 982: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010336630046367645
    2. '
' → logprob: -4.760336399078369
    3. '    
' → logprob: -6.510336399078369
    4. '```' → logprob: -9.135336875915527
    5. 'while' → logprob: -9.635336875915527
    6. '       ' → logprob: -11.010336875915527
    7. '        
' → logprob: -11.385336875915527
    8. '  
' → logprob: -12.260336875915527
    9. '
' → logprob: -12.385336875915527
    10. 'if' → logprob: -12.635336875915527

Token 983: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015844968147575855
    2. 'while' → logprob: -7.251584529876709
    3. '#' → logprob: -7.626584529876709
    4. '
' → logprob: -8.12658405303955
    5. 'rest' → logprob: -10.62658405303955
    6. '    
' → logprob: -10.87658405303955
    7. '```' → logprob: -11.00158405303955
    8. 'for' → logprob: -11.25158405303955
    9. 'remaining' → logprob: -11.62658405303955
    10. 'if' → logprob: -12.37658405303955

Token 984: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.36282384395599365
    2. '#' (adapté à ' #') → logprob: -1.9878238439559937
    3. 'rest' → logprob: -2.487823963165283
    4. 'remaining' → logprob: -3.112823963165283
    5. '   ' → logprob: -3.987823963165283
    6. 'if' → logprob: -4.362823963165283
    7. 'res' → logprob: -5.862823963165283
    8. 'for' → logprob: -6.237823963165283
    9. 'rem' → logprob: -6.737823963165283
    10. 're' → logprob: -6.737823963165283

Token 985: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9066548943519592
    2. '   ' → logprob: -1.4066548347473145
    3. 'rest' → logprob: -1.6566548347473145
    4. 'remaining' → logprob: -2.4066548347473145
    5. '#' → logprob: -3.0316548347473145
    6. 'rem' → logprob: -5.1566548347473145
    7. 'res' → logprob: -5.4066548347473145
    8. 'for' → logprob: -5.5316548347473145
    9. 're' → logprob: -5.6566548347473145
    10. 'suffix' → logprob: -6.5316548347473145

Token 986: ' ajoute' (ID: 91611)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2838151454925537
    2. '#' → logprob: -1.4088151454925537
    3. '   ' → logprob: -2.1588151454925537
    4. '+=' → logprob: -2.4088151454925537
    5. '.extend' → logprob: -2.4088151454925537
    6. '.append' → logprob: -2.6588151454925537
    7. ' +=' → logprob: -3.7838151454925537
    8. 'for' → logprob: -4.158815383911133
    9. 'print' → logprob: -4.283815383911133
    10. 'append' → logprob: -4.658815383911133

Token 987: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1485687643289566
    2. 'rest' → logprob: -3.148568868637085
    3. '   ' → logprob: -3.648568868637085
    4. 'le' → logprob: -3.773568868637085
    5. 'result' → logprob: -4.398568630218506
    6. '''.' → logprob: -4.398568630218506
    7. 'remaining' → logprob: -4.898568630218506
    8. '(s' → logprob: -5.898568630218506
    9. '('' → logprob: -6.023568630218506
    10. '       ' → logprob: -6.148568630218506

Token 988: ' reste' (ID: 26769)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.5104253888130188
    2. 'result' → logprob: -1.510425329208374
    3. 'reste' → logprob: -1.885425329208374
    4. 'remaining' → logprob: -4.010425567626953
    5. 're' → logprob: -5.635425567626953
    6. ' reste' → logprob: -6.135425567626953
    7. 'remain' → logprob: -7.260425567626953
    8. 'r' → logprob: -7.385425567626953
    9. '#' → logprob: -7.635425567626953
    10. ' restant' → logprob: -7.760425567626953

Token 989: ' des' (ID: 731)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4373432993888855
    2. '   ' → logprob: -1.0623433589935303
    3. ' result' → logprob: -5.812343120574951
    4. '(result' → logprob: -6.312343120574951
    5. 's' → logprob: -6.437343120574951
    6. '       ' → logprob: -7.312343120574951
    7. 'res' → logprob: -7.937343120574951
    8. 'de' → logprob: -8.06234359741211
    9. ' ' → logprob: -8.81234359741211
    10. ' de' → logprob: -9.06234359741211

Token 990: ' caractères' (ID: 183106)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008310898207128048
    2. 'result' → logprob: -5.008310794830322
    3. ' s' → logprob: -6.633310794830322
    4. '#' → logprob: -9.25831127166748
    5. '   ' → logprob: -9.88331127166748
    6. 'for' → logprob: -11.00831127166748
    7. ' result' → logprob: -11.13331127166748
    8. 'res' → logprob: -11.25831127166748
    9. '[s' → logprob: -11.50831127166748
    10. '[' → logprob: -11.63331127166748

Token 991: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6090692281723022
    2. 'result' → logprob: -0.8590692281723022
    3. '.append' → logprob: -4.234069347381592
    4. ' result' → logprob: -4.359069347381592
    5. ' +=' → logprob: -6.609069347381592
    6. '(result' → logprob: -7.109069347381592
    7. '.extend' → logprob: -7.609069347381592
    8. '=result' → logprob: -7.609069347381592
    9. ' =' → logprob: -7.734069347381592
    10. '[result' → logprob: -7.859069347381592

Token 992: 'non' (ID: 11741)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5110015273094177
    2. 'current' → logprob: -1.2610015869140625
    3. '   ' → logprob: -2.2610015869140625
    4. 'result' → logprob: -5.3860015869140625
    5. ' s' → logprob: -6.1360015869140625
    6. ' current' → logprob: -6.2610015869140625
    7. '[current' → logprob: -6.3860015869140625
    8. 'rest' → logprob: -7.3860015869140625
    9. '       ' → logprob: -7.8860015869140625
    10. ' ' → logprob: -8.261001586914062

Token 993: ' cho' (ID: 2552)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.0097308158874512
    2. 'trait' → logprob: -1.3847308158874512
    3. 'util' → logprob: -2.009730815887451
    4. 'dé' → logprob: -2.759730815887451
    5. 'tri' → logprob: -3.009730815887451
    6. 'sup' → logprob: -3.259730815887451
    7. 'cons' → logprob: -4.134730815887451
    8. 'tr' → logprob: -4.259730815887451
    9. 'cho' → logprob: -4.259730815887451
    10. '   ' → logprob: -4.759730815887451

Token 994: 'isis' (ID: 11352)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5223401784896851
    2. 'isis' → logprob: -2.0223402976989746
    3. 'is' → logprob: -2.5223402976989746
    4. 'nts' → logprob: -3.1473402976989746
    5. 'ints' → logprob: -3.6473402976989746
    6. 'isés' → logprob: -4.147340297698975
    7. 'nt' → logprob: -4.397340297698975
    8. 'u' → logprob: -4.397340297698975
    9. 'sis' → logprob: -4.397340297698975
    10. 'sup' → logprob: -5.022340297698975

Token 995: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21259544789791107
    2. '   ' → logprob: -2.4625954627990723
    3. ',' → logprob: -2.9625954627990723
    4. 's' → logprob: -4.212595462799072
    5. '[current' → logprob: -4.337595462799072
    6. 'current' → logprob: -4.962595462799072
    7. ' current' → logprob: -6.212595462799072
    8. ' )' → logprob: -6.462595462799072
    9. ' pour' → logprob: -6.462595462799072
    10. '    ' → logprob: -6.712595462799072

Token 996: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04468366131186485
    2. 'result' → logprob: -3.1696836948394775
    3. ' result' → logprob: -6.669683456420898
    4. 'for' → logprob: -8.919683456420898
    5. ' +=' → logprob: -9.669683456420898
    6. '.append' → logprob: -10.169683456420898
    7. ' =' → logprob: -10.169683456420898
    8. ' for' → logprob: -10.169683456420898
    9. '	result' → logprob: -11.169683456420898
    10. '       ' → logprob: -11.419683456420898

Token 997: ' leur' (ID: 9853)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04342491924762726
    2. 's' → logprob: -3.1684248447418213
    3. ' result' → logprob: -8.918424606323242
    4. 'le' → logprob: -9.418424606323242
    5. 'la' → logprob: -9.668424606323242
    6. '#' → logprob: -9.918424606323242
    7. 'l' → logprob: -10.543424606323242
    8. '```' → logprob: -10.668424606323242
    9. 'res' → logprob: -10.918424606323242
    10. ' s' → logprob: -11.043424606323242

Token 998: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.019498789682984352
    2. 'original' → logprob: -5.019498825073242
    3. 'order' → logprob: -5.644498825073242
    4. 'position' → logprob: -5.644498825073242
    5. 'current' → logprob: -6.019498825073242
    6. 'forme' → logprob: -6.644498825073242
    7. 's' → logprob: -7.394498825073242
    8. 'ord' → logprob: -7.644498825073242
    9. '```' → logprob: -8.894498825073242
    10. 'reste' → logprob: -9.144498825073242

Token 999: ' originale' (ID: 90997)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.5572192668914795
    2. 'for' → logprob: -1.4322192668914795
    3. '   ' → logprob: -2.5572192668914795
    4. 'original' → logprob: -3.0572192668914795
    5. 's' → logprob: -4.307219505310059
    6. 'initial' → logprob: -4.557219505310059
    7. '#' → logprob: -5.057219505310059
    8. 'dans' → logprob: -5.057219505310059
    9. '```' → logprob: -5.182219505310059
    10. 'pour' → logprob: -5.182219505310059

Token 1000: ' sauf' (ID: 87919)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14333167672157288
    2. '   ' → logprob: -2.14333176612854
    3. 'for' → logprob: -4.893331527709961
    4. ' result' → logprob: -5.268331527709961
    5. '```' → logprob: -6.268331527709961
    6. 's' → logprob: -8.018331527709961
    7. ' for' → logprob: -8.143331527709961
    8. '(result' → logprob: -8.518331527709961
    9. 'while' → logprob: -9.018331527709961
    10. '``' → logprob: -9.268331527709961

Token 1001: ' ceux' (ID: 26863)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.2690855860710144
    2. 'les' → logprob: -2.394085645675659
    3. 'pour' → logprob: -2.769085645675659
    4. 'qu' → logprob: -3.394085645675659
    5. 'cel' → logprob: -4.39408540725708
    6. '#' → logprob: -4.64408540725708
    7. 'que' → logprob: -4.64408540725708
    8. 'celle' → logprob: -4.76908540725708
    9. ' ceux' → logprob: -5.51908540725708
    10. 'ces' → logprob: -7.01908540725708

Token 1002: ' déjà' (ID: 21229)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.18941111862659454
    2. 'qui' → logprob: -2.189411163330078
    3. '#' → logprob: -3.439411163330078
    4. 'ret' → logprob: -5.314411163330078
    5. '   ' → logprob: -5.439411163330078
    6. 'util' → logprob: -5.939411163330078
    7. 'already' → logprob: -6.064411163330078
    8. 'mar' → logprob: -6.064411163330078
    9. 'sup' → logprob: -6.189411163330078
    10. 'ayant' → logprob: -6.564411163330078

Token 1003: ' déplac' (ID: 195321)
  Prédit: 'pris'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pris' → logprob: -0.49031054973602295
    2. 'util' → logprob: -2.1153106689453125
    3. 'ret' → logprob: -2.1153106689453125
    4. 'cho' → logprob: -2.4903106689453125
    5. 'plac' → logprob: -3.9903106689453125
    6. 'sup' → logprob: -4.1153106689453125
    7. 'cons' → logprob: -4.9903106689453125
    8. 'reten' → logprob: -5.2403106689453125
    9. 'prises' → logprob: -5.4903106689453125
    10. 'sé' → logprob: -5.4903106689453125

Token 1004: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.005452174227684736
    2. 'ées' → logprob: -5.3804521560668945
    3. '   ' → logprob: -7.6304521560668945
    4. 'nés' → logprob: -9.255452156066895
    5. 'es' → logprob: -10.130452156066895
    6. 's' → logprob: -10.130452156066895
    7. '#' → logprob: -10.380452156066895
    8. 'rés' → logprob: -10.505452156066895
    9. 'é' → logprob: -10.755452156066895
    10. 'érés' → logprob: -10.755452156066895

Token 1005: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06429686397314072
    2. 'result' → logprob: -2.8142969608306885
    3. 'for' → logprob: -6.939296722412109
    4. ' result' → logprob: -7.564296722412109
    5. 'rest' → logprob: -8.31429672241211
    6. 's' → logprob: -8.31429672241211
    7. ' for' → logprob: -9.43929672241211
    8. '
' → logprob: -9.56429672241211
    9. 'res' → logprob: -10.18929672241211
    10. 'remaining' → logprob: -10.18929672241211

Token 1006: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12148737162351608
    2. 'result' → logprob: -2.3714873790740967
    3. 'for' → logprob: -4.496487140655518
    4. 'rest' → logprob: -5.621487140655518
    5. 'remaining' → logprob: -5.871487140655518
    6. ' result' → logprob: -6.996487140655518
    7. ' for' → logprob: -7.371487140655518
    8. 's' → logprob: -7.496487140655518
    9. 'res' → logprob: -7.996487140655518
    10. 'while' → logprob: -8.121487617492676

Token 1007: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5532374382019043
    2. 'rest' → logprob: -1.3032374382019043
    3. 'remaining' → logprob: -2.6782374382019043
    4. 'result' → logprob: -4.178237438201904
    5. 'for' → logprob: -4.178237438201904
    6. ' rest' → logprob: -4.428237438201904
    7. 'rem' → logprob: -4.678237438201904
    8. 'used' → logprob: -5.178237438201904
    9. 'unused' → logprob: -5.303237438201904
    10. ' remaining' → logprob: -5.678237438201904

Token 1008: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1232874393463135
    2. 'rest' → logprob: -1.1232874393463135
    3. 'used' → logprob: -1.4982874393463135
    4. 'remaining' → logprob: -3.2482874393463135
    5. 'rem' → logprob: -4.248287200927734
    6. 'indices' → logprob: -4.248287200927734
    7. 'reste' → logprob: -4.373287200927734
    8. 'removed' → logprob: -4.373287200927734
    9. 'visited' → logprob: -5.248287200927734
    10. 'unused' → logprob: -5.373287200927734

Token 1009: ' cela' (ID: 17542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6048572063446045
    2. 'pos' → logprob: -0.8548572063446045
    3. 'c' → logprob: -4.354857444763184
    4. 'ch' → logprob: -4.854857444763184
    5. '_' → logprob: -6.104857444763184
    6. 'idx' → logprob: -6.604857444763184
    7. '_pos' → logprob: -6.604857444763184
    8. '_i' → logprob: -6.729857444763184
    9. 'p' → logprob: -8.479857444763184
    10. ' pos' → logprob: -8.604857444763184

Token 1010: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05550927296280861
    2. 'indices' → logprob: -4.055509090423584
    3. 'used' → logprob: -4.555509090423584
    4. 'rest' → logprob: -5.305509090423584
    5. ',' → logprob: -5.430509090423584
    6. 'visited' → logprob: -5.930509090423584
    7. '#' → logprob: -5.930509090423584
    8. 'pos' → logprob: -6.180509090423584
    9. 'positions' → logprob: -6.680509090423584
    10. ':' → logprob: -6.930509090423584

Token 1011: ' on' (ID: 402)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.19290851056575775
    2. 'visited' → logprob: -2.317908525466919
    3. 'removed' → logprob: -3.692908525466919
    4. 'indices' → logprob: -4.31790828704834
    5. 'taken' → logprob: -4.81790828704834
    6. '   ' → logprob: -4.94290828704834
    7. 'chosen' → logprob: -5.19290828704834
    8. 'pos' → logprob: -5.94290828704834
    9. 'seen' → logprob: -6.19290828704834
    10. 'idx' → logprob: -6.31790828704834

Token 1012: ' récup' (ID: 62856)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.5518394112586975
    2. 'visited' → logprob: -2.0518393516540527
    3. 'for' → logprob: -2.5518393516540527
    4. 'reste' → logprob: -2.6768393516540527
    5. 'pos' → logprob: -3.4268393516540527
    6. 'seen' → logprob: -4.301839351654053
    7. 'indices' → logprob: -4.301839351654053
    8. 'rest' → logprob: -4.426839351654053
    9. 'rem' → logprob: -4.551839351654053
    10. 'remaining' → logprob: -4.551839351654053

Token 1013: 'ère' (ID: 4346)
  Prédit: 'érons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érons' → logprob: -0.18567676842212677
    2. 'érer' → logprob: -1.8106768131256104
    3. 'ère' → logprob: -5.935676574707031
    4. '   ' → logprob: -6.935676574707031
    5. 'er' → logprob: -7.435676574707031
    6. '#' → logprob: -8.435676574707031
    7. '       ' → logprob: -8.560676574707031
    8. 'ér' → logprob: -8.685676574707031
    9. 'érez' → logprob: -8.685676574707031
    10. 'èr' → logprob: -9.060676574707031

Token 1014: ' tous' (ID: 10688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8277795314788818
    2. '   ' → logprob: -2.077779531478882
    3. 'les' → logprob: -2.577779531478882
    4. '[i' → logprob: -2.952779531478882
    5. 'remaining' → logprob: -2.952779531478882
    6. 'rest' → logprob: -3.077779531478882
    7. 'pos' → logprob: -3.202779531478882
    8. 'c' → logprob: -3.702779531478882
    9. 'for' → logprob: -3.827779531478882
    10. 'current' → logprob: -4.077779769897461

Token 1015: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3630312979221344
    2. 'i' → logprob: -1.988031268119812
    3. 'indices' → logprob: -2.9880313873291016
    4. 'c' → logprob: -3.4880313873291016
    5. 'car' → logprob: -3.8630313873291016
    6. ' les' → logprob: -4.238031387329102
    7. 'pos' → logprob: -4.863031387329102
    8. '_' → logprob: -5.238031387329102
    9. 'positions' → logprob: -5.613031387329102
    10. 'remaining' → logprob: -5.613031387329102

Token 1016: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.04243961721658707
    2. 'i' → logprob: -4.0424394607543945
    3. 'positions' → logprob: -4.6674394607543945
    4. 'car' → logprob: -5.1674394607543945
    5. 'idx' → logprob: -5.9174394607543945
    6. 'chars' → logprob: -6.0424394607543945
    7. 'pos' → logprob: -6.7924394607543945
    8. 'rest' → logprob: -7.1674394607543945
    9. 'indexes' → logprob: -7.6674394607543945
    10. 'indice' → logprob: -7.9174394607543945

Token 1017: ' >=' (ID: 5064)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.162718266248703
    2. '_rest' → logprob: -2.9127182960510254
    3. 'util' → logprob: -3.0377182960510254
    4. 'non' → logprob: -3.7877182960510254
    5. '   ' → logprob: -5.162718296051025
    6. 'used' → logprob: -5.412718296051025
    7. 'ret' → logprob: -6.162718296051025
    8. '_non' → logprob: -6.287718296051025
    9. ' =' → logprob: -6.537718296051025
    10. 'cho' → logprob: -6.912718296051025

Token 1018: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00020354038861114532
    2. ' current' → logprob: -8.500203132629395
    3. '[current' → logprob: -17.75020408630371
    4. '   ' → logprob: -18.37520408630371
    5. '```' → logprob: -18.62520408630371
    6. '$current' → logprob: -19.00020408630371
    7. '(current' → logprob: -19.12520408630371
    8. 'cur' → logprob: -19.37520408630371
    9. '_current' → logprob: -19.75020408630371
    10. '`' → logprob: -19.87520408630371

Token 1019: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.6312321753939614e-05
    2. 'pos' → logprob: -10.250036239624023
    3. 'Pos' → logprob: -15.000036239624023
    4. '_' → logprob: -15.125036239624023
    5. '```' → logprob: -16.125036239624023
    6. '_positions' → logprob: -16.500036239624023
    7. '_position' → logprob: -16.750036239624023
    8. 'current' → logprob: -18.125036239624023
    9. '_current' → logprob: -18.250036239624023
    10. '_p' → logprob: -18.625036239624023

Token 1020: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19945085048675537
    2. 'rest' → logprob: -2.324450969696045
    3. 'remaining' → logprob: -3.699450969696045
    4. ' =' → logprob: -4.324450969696045
    5. '
' → logprob: -4.699450969696045
    6. 'while' → logprob: -5.449450969696045
    7. ' rest' → logprob: -5.449450969696045
    8. 's' → logprob: -5.574450969696045
    9. 'for' → logprob: -5.824450969696045
    10. '=' → logprob: -5.949450969696045

Token 1021: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013406320475041866
    2. '#' → logprob: -4.888406276702881
    3. 'ont' → logprob: -5.888406276702881
    4. ' n' → logprob: -6.513406276702881
    5. 's' → logprob: -7.888406276702881
    6. '```' → logprob: -7.888406276702881
    7. 'éta' → logprob: -8.138406753540039
    8. 'rest' → logprob: -9.513406753540039
    9. 'ne' → logprob: -9.638406753540039
    10. 'avaient' → logprob: -9.763406753540039

Token 1022: ''ont' (ID: 64195)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6117140650749207
    2. 'ont' → logprob: -0.9867140650749207
    3. 'n' → logprob: -3.3617141246795654
    4. 's' → logprob: -3.3617141246795654
    5. '#' → logprob: -5.111713886260986
    6. ''ont' → logprob: -5.486713886260986
    7. 'éta' → logprob: -6.111713886260986
    8. ' pas' → logprob: -7.486713886260986
    9. 'a' → logprob: -7.986713886260986
    10. '=' → logprob: -8.111714363098145

Token 1023: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.00037895687273703516
    2. 'not' → logprob: -9.125378608703613
    3. '#' → logprob: -9.250378608703613
    4. ' pas' → logprob: -9.500378608703613
    5. '
' → logprob: -10.000378608703613
    6. 'été' → logprob: -10.625378608703613
    7. '```' → logprob: -11.500378608703613
    8. 'pass' → logprob: -12.000378608703613
    9. '

' → logprob: -13.375378608703613
    10. '_pas' → logprob: -13.625378608703613

Token 1024: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.014585234224796295
    2. 'dé' → logprob: -4.639585018157959
    3. '#' → logprob: -5.764585018157959
    4. 'ét' → logprob: -7.139585018157959
    5. '```' → logprob: -7.889585018157959
    6. ' été' → logprob: -9.264585494995117
    7. 'éta' → logprob: -9.514585494995117
    8. 'dans' → logprob: -9.639585494995117
    9. 'être' → logprob: -9.889585494995117
    10. 'êt' → logprob: -10.389585494995117

Token 1025: ' retir' (ID: 35638)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.0243051052093506
    2. 'cho' → logprob: -1.3993051052093506
    3. 'util' → logprob: -1.5243051052093506
    4. 'sup' → logprob: -2.7743051052093506
    5. 'pris' → logprob: -3.6493051052093506
    6. 'plac' → logprob: -4.27430534362793
    7. '#' → logprob: -4.27430534362793
    8. 'en' → logprob: -4.39930534362793
    9. 'sé' → logprob: -4.52430534362793
    10. 'reten' → logprob: -4.77430534362793

Token 1026: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.2072637677192688
    2. '   ' → logprob: -2.457263708114624
    3. 's' → logprob: -3.707263708114624
    4. 'nés' → logprob: -4.082263946533203
    5. 'ées' → logprob: -4.707263946533203
    6. 'é' → logprob: -5.332263946533203
    7. '__' → logprob: -5.582263946533203
    8. 'du' → logprob: -5.832263946533203
    9. '_s' → logprob: -5.832263946533203
    10. 'from' → logprob: -5.832263946533203

Token 1027: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0769515335559845
    2. 'rest' → logprob: -3.576951503753662
    3. 'remaining' → logprob: -3.826951503753662
    4. 'used' → logprob: -4.576951503753662
    5. 'removed' → logprob: -5.576951503753662
    6. 'indices' → logprob: -5.951951503753662
    7. ',' → logprob: -6.201951503753662
    8. 'rem' → logprob: -7.451951503753662
    9. 'reste' → logprob: -7.451951503753662
    10. ' rest' → logprob: -7.451951503753662

Token 1028: 'ils' (ID: 5879)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.7162392735481262
    2. 'visited' → logprob: -2.3412392139434814
    3. ' used' → logprob: -2.9662392139434814
    4. 'removed' → logprob: -2.9662392139434814
    5. 'ret' → logprob: -3.3412392139434814
    6. '#' → logprob: -3.7162392139434814
    7. 'selected' → logprob: -3.8412392139434814
    8. 'set' → logprob: -3.8412392139434814
    9. ')' → logprob: -3.9662392139434814
    10. 's' → logprob: -4.4662394523620605

Token 1029: ' sont' (ID: 5242)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'already' → logprob: -0.8670504093170166
    2. 'used' → logprob: -2.2420504093170166
    3. 'in' → logprob: -2.3670504093170166
    4. 'ont' → logprob: -2.6170504093170166
    5. ' are' → logprob: -2.7420504093170166
    6. 'are' → logprob: -3.3670504093170166
    7. ' sont' → logprob: -3.6170504093170166
    8. 's' → logprob: -4.1170501708984375
    9. 'n' → logprob: -4.1170501708984375
    10. ' in' → logprob: -4.2420501708984375

Token 1030: ' toujours' (ID: 16867)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.3061312437057495
    2. 'dans' → logprob: -1.8061312437057495
    3. 'not' → logprob: -1.9311312437057495
    4. 'pas' → logprob: -2.181131362915039
    5. 'None' → logprob: -2.806131362915039
    6. 'used' → logprob: -2.806131362915039
    7. 'util' → logprob: -3.556131362915039
    8. 'already' → logprob: -4.056131362915039
    9. '#' → logprob: -4.181131362915039
    10. 'dé' → logprob: -4.556131362915039

Token 1031: ' en' (ID: 469)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.06018887460231781
    2. 'util' → logprob: -3.5601887702941895
    3. 'prés' → logprob: -3.9351887702941895
    4. 'en' → logprob: -6.0601887702941895
    5. ' dans' → logprob: -6.6851887702941895
    6. 'in' → logprob: -6.8101887702941895
    7. 'aj' → logprob: -7.0601887702941895
    8. 'cho' → logprob: -7.0601887702941895
    9. '```' → logprob: -7.4351887702941895
    10. 'mar' → logprob: -7.5601887702941895

Token 1032: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.22367262840270996
    2. 's' → logprob: -2.09867262840271
    3. 'result' → logprob: -2.84867262840271
    4. 'range' → logprob: -5.223672866821289
    5. 'pos' → logprob: -5.473672866821289
    6. 'current' → logprob: -5.973672866821289
    7. ' s' → logprob: -6.473672866821289
    8. '[]' → logprob: -7.098672866821289
    9. ' positions' → logprob: -7.348672866821289
    10. 'set' → logprob: -7.473672866821289

Token 1033: ')
' (ID: 446)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.616913080215454
    2. 'rest' → logprob: -1.741913080215454
    3. '   ' → logprob: -1.991913080215454
    4. 'val' → logprob: -2.116913080215454
    5. '[current' → logprob: -2.741913080215454
    6. '>=' → logprob: -2.741913080215454
    7. 'dans' → logprob: -3.241913080215454
    8. 'non' → logprob: -3.741913080215454
    9. 'current' → logprob: -4.241912841796875
    10. '=' → logprob: -4.366912841796875

Token 1034: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6346480250358582
    2. 'rest' → logprob: -1.634648084640503
    3. '   ' → logprob: -2.384648084640503
    4. 'remaining' → logprob: -2.509648084640503
    5. 'removed' → logprob: -3.384648084640503
    6. 'visited' → logprob: -4.134647846221924
    7. 'ret' → logprob: -4.759647846221924
    8. 'indices' → logprob: -4.884647846221924
    9. 'taken' → logprob: -4.884647846221924
    10. 'rem' → logprob: -5.134647846221924

Token 1035: ' #' (ID: 1069)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.36408933997154236
    2. 'remaining' → logprob: -2.114089250564575
    3. 'used' → logprob: -2.614089250564575
    4. '   ' → logprob: -3.739089250564575
    5. ' rest' → logprob: -3.739089250564575
    6. 'rem' → logprob: -4.364089488983154
    7. 'reste' → logprob: -4.489089488983154
    8. 'unused' → logprob: -4.489089488983154
    9. ' remaining' → logprob: -5.114089488983154
    10. ' used' → logprob: -5.239089488983154

Token 1036: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05820752680301666
    2. 'used' → logprob: -3.8082075119018555
    3. 'rest' → logprob: -3.9332075119018555
    4. 'remaining' → logprob: -4.6832075119018555
    5. 'rem' → logprob: -6.6832075119018555
    6. 'visited' → logprob: -7.0582075119018555
    7. 'indices' → logprob: -7.0582075119018555
    8. 'reste' → logprob: -7.1832075119018555
    9. 'removed' → logprob: -7.5582075119018555
    10. 'unused' → logprob: -8.058207511901855

Token 1037: ' va' (ID: 3423)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.8258163332939148
    2. 'for' → logprob: -1.0758163928985596
    3. 'rest' → logprob: -2.2008163928985596
    4. 'continue' → logprob: -2.8258163928985596
    5. 'aj' → logprob: -4.0758161544799805
    6. 'remaining' → logprob: -4.8258161544799805
    7. '#' → logprob: -5.0758161544799805
    8. 'rem' → logprob: -5.4508161544799805
    9. 'r' → logprob: -5.5758161544799805
    10. 'contin' → logprob: -5.8258161544799805

Token 1038: ' utiliser' (ID: 43227)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.543940544128418
    2. 'pos' → logprob: -1.793940544128418
    3. 'used' → logprob: -2.793940544128418
    4. 'i' → logprob: -3.543940544128418
    5. 'rest' → logprob: -3.543940544128418
    6. 'rem' → logprob: -3.918940544128418
    7. 'while' → logprob: -4.168940544128418
    8. 'result' → logprob: -4.168940544128418
    9. 'remaining' → logprob: -4.668940544128418
    10. 'idx' → logprob: -4.918940544128418

Token 1039: ' un' (ID: 537)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0547833442687988
    2. 'positions' → logprob: -2.304783344268799
    3. 'i' → logprob: -2.429783344268799
    4. 'remaining' → logprob: -2.679783344268799
    5. 'idx' → logprob: -2.804783344268799
    6. 's' → logprob: -2.804783344268799
    7. 'set' → logprob: -3.554783344268799
    8. '[i' → logprob: -3.554783344268799
    9. 'visited' → logprob: -3.554783344268799
    10. '[pos' → logprob: -3.804783344268799

Token 1040: ' set' (ID: 920)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8035399913787842
    2. 'set' → logprob: -1.5535399913787842
    3. 'used' → logprob: -2.178539991378784
    4. 'rest' → logprob: -3.053539991378784
    5. 'remaining' → logprob: -3.178539991378784
    6. 'seen' → logprob: -3.303539991378784
    7. 'vis' → logprob: -3.678539991378784
    8. 'pos' → logprob: -3.803539991378784
    9. 'reste' → logprob: -3.928539991378784
    10. 'idx' → logprob: -5.303540229797363

Token 1041: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6108615398406982
    2. 'ret' → logprob: -1.9858615398406982
    3. 'removed' → logprob: -2.4858615398406982
    4. '_removed' → logprob: -3.1108615398406982
    5. '()
' → logprob: -3.2358615398406982
    6. 'used' → logprob: -3.3608615398406982
    7. 'des' → logprob: -3.4858615398406982
    8. 'de' → logprob: -3.9858615398406982
    9. '_ret' → logprob: -4.110861778259277
    10. ' =' → logprob: -4.360861778259277

Token 1042: ' indices' (ID: 30378)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.1383652687072754
    2. 'removed' → logprob: -1.1383652687072754
    3. 'positions' → logprob: -1.3883652687072754
    4. 'indices' → logprob: -3.1383652687072754
    5. 'used' → logprob: -4.013365268707275
    6. 'result' → logprob: -4.638365268707275
    7. 'pos' → logprob: -4.638365268707275
    8. 'set' → logprob: -5.013365268707275
    9. 'excluded' → logprob: -5.013365268707275
    10. 're' → logprob: -5.638365268707275

Token 1043: ' retir' (ID: 35638)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.7741570472717285
    2. 'ret' → logprob: -1.1491570472717285
    3. 'removed' → logprob: -2.1491570472717285
    4. 'rest' → logprob: -3.5241570472717285
    5. '```' → logprob: -4.3991570472717285
    6. 'visited' → logprob: -4.5241570472717285
    7. 'rem' → logprob: -5.2741570472717285
    8. 'des' → logprob: -5.3991570472717285
    9. ' =' → logprob: -5.5241570472717285
    10. 'indices' → logprob: -5.5241570472717285

Token 1044: 'és' (ID: 1756)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.6396581530570984
    2. 's' → logprob: -2.014658212661743
    3. '_removed' → logprob: -2.264658212661743
    4. 'removed' → logprob: -2.889658212661743
    5. '__' → logprob: -3.264658212661743
    6. 'ved' → logprob: -3.264658212661743
    7. 'used' → logprob: -4.389657974243164
    8. 'e' → logprob: -4.389657974243164
    9. 'ected' → logprob: -4.389657974243164
    10. ' ' → logprob: -5.264657974243164

Token 1045: ' pour' (ID: 1930)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.44738712906837463
    2. 'ret' → logprob: -1.4473870992660522
    3. 'used' → logprob: -2.197387218475342
    4. 'indices' → logprob: -5.322387218475342
    5. 'selected' → logprob: -6.822387218475342
    6. 'rem' → logprob: -6.947387218475342
    7. 'positions' → logprob: -6.947387218475342
    8. ' used' → logprob: -7.072387218475342
    9. '```' → logprob: -7.572387218475342
    10. 's' → logprob: -7.697387218475342

Token 1046: ' éviter' (ID: 64013)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.5451791286468506
    2. 'ign' → logprob: -2.0451791286468506
    3. 'ret' → logprob: -2.1701791286468506
    4. 'com' → logprob: -2.2951791286468506
    5. 'mar' → logprob: -2.5451791286468506
    6. 'g' → logprob: -3.0451791286468506
    7. 's' → logprob: -3.0451791286468506
    8. '```' → logprob: -3.2951791286468506
    9. 'su' → logprob: -3.4201791286468506
    10. 'compl' → logprob: -3.6701791286468506

Token 1047: ' duplication' (ID: 142358)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8821990489959717
    2. 'aj' → logprob: -1.2571990489959717
    3. 'd' → logprob: -2.5071990489959717
    4. '```' → logprob: -2.6321990489959717
    5. 'de' → logprob: -3.0071990489959717
    6. ' les' → logprob: -3.8821990489959717
    7. '#' → logprob: -4.132199287414551
    8. ' d' → logprob: -4.257199287414551
    9. 'l' → logprob: -4.382199287414551
    10. ' de' → logprob: -5.632199287414551

Token 1048: '
' (ID: 198)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.2921859920024872
    2. 'ret' → logprob: -1.5421860218048096
    3. 'used' → logprob: -3.4171860218048096
    4. 'rem' → logprob: -5.9171857833862305
    5. '   ' → logprob: -7.0421857833862305
    6. 'indices' → logprob: -7.5421857833862305
    7. '```' → logprob: -7.9171857833862305
    8. 'excluded' → logprob: -7.9171857833862305
    9. ' removed' → logprob: -8.04218578338623
    10. ' retir' → logprob: -8.54218578338623

Token 1049: '   ' (ID: 271)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' → logprob: -0.8956485986709595
    2. 'used' → logprob: -1.5206485986709595
    3. 'ret' → logprob: -2.02064847946167
    4. '   ' → logprob: -2.27064847946167
    5. 'remaining' → logprob: -2.39564847946167
    6. 'rest' → logprob: -3.89564847946167
    7. 'indices' → logprob: -4.89564847946167
    8. 'taken' → logprob: -5.14564847946167
    9. 'rem' → logprob: -5.89564847946167
    10. 'unused' → logprob: -6.14564847946167

Token 1050: ' removed' (ID: 11906)
  Prédit: 'removed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'removed' (adapté à ' removed') → logprob: -0.5623189210891724
    2. 'used' → logprob: -1.6873189210891724
    3. 'ret' → logprob: -1.8123189210891724
    4. '   ' → logprob: -3.562318801879883
    5. 'remaining' → logprob: -3.562318801879883
    6. 'rest' → logprob: -4.562318801879883
    7. 'taken' → logprob: -5.437318801879883
    8. 'rem' → logprob: -5.687318801879883
    9. 'indices' → logprob: -6.312318801879883
    10. 'unused' → logprob: -7.062318801879883

Token 1051: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07490059733390808
    2. ' =' → logprob: -2.6999006271362305
    3. '=set' → logprob: -5.9499006271362305
    4. '_positions' → logprob: -6.3249006271362305
    5. '_indices' → logprob: -7.6999006271362305
    6. 's' → logprob: -10.19990062713623
    7. '_' → logprob: -11.07490062713623
    8. '_pos' → logprob: -11.19990062713623
    9. '_set' → logprob: -11.69990062713623
    10. '   ' → logprob: -12.07490062713623

Token 1052: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.004208632744848728
    2. '{' → logprob: -5.504208564758301
    3. ' set' → logprob: -9.0042085647583
    4. '{}' → logprob: -12.3792085647583
    5. '(set' → logprob: -13.8792085647583
    6. '=set' → logprob: -14.7542085647583
    7. '[]' → logprob: -15.1292085647583
    8. ' {' → logprob: -15.2542085647583
    9. '#set' → logprob: -15.5042085647583
    10. '	set' → logprob: -15.5042085647583

Token 1053: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5358927845954895
    2. '()
' → logprob: -1.2858927249908447
    3. '(' → logprob: -2.4108927249908447
    4. '([' → logprob: -3.2858927249908447
    5. 'positions' → logprob: -6.035892963409424
    6. '(i' → logprob: -6.285892963409424
    7. '(range' → logprob: -6.285892963409424
    8. '(pos' → logprob: -6.410892963409424
    9. '({' → logprob: -7.410892963409424
    10. '(
' → logprob: -7.410892963409424

Token 1054: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07977105677127838
    2. 'removed' → logprob: -3.329771041870117
    3. 'result' → logprob: -4.704771041870117
    4. 'while' → logprob: -4.704771041870117
    5. 'positions' → logprob: -4.829771041870117
    6. '   ' → logprob: -4.829771041870117
    7. ' for' → logprob: -5.954771041870117
    8. '#' → logprob: -6.329771041870117
    9. 'current' → logprob: -7.204771041870117
    10. '```' → logprob: -7.579771041870117

Token 1055: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020038064569234848
    2. '#' (adapté à ' #') → logprob: -4.64503812789917
    3. 'while' → logprob: -5.89503812789917
    4. 'removed' → logprob: -6.02003812789917
    5. 'positions' → logprob: -6.27003812789917
    6. '   ' → logprob: -6.77003812789917
    7. 'result' → logprob: -7.27003812789917
    8. ' for' → logprob: -7.39503812789917
    9. 'indices' → logprob: -8.770037651062012
    10. 'current' → logprob: -8.895037651062012

Token 1056: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003164056921377778
    2. 'while' → logprob: -6.628164291381836
    3. '#' → logprob: -7.378164291381836
    4. 'removed' → logprob: -7.378164291381836
    5. '   ' → logprob: -8.253164291381836
    6. 'indices' → logprob: -9.503164291381836
    7. 'used' → logprob: -9.503164291381836
    8. ' for' → logprob: -9.753164291381836
    9. 'positions' → logprob: -10.003164291381836
    10. '```' → logprob: -10.753164291381836

Token 1057: ' avait' (ID: 18892)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013028570683673024
    2. ' for' → logprob: -7.001302719116211
    3. '#' → logprob: -8.626302719116211
    4. '=' → logprob: -9.376302719116211
    5. 'continue' → logprob: -10.376302719116211
    6. '+=' → logprob: -10.376302719116211
    7. '   ' → logprob: -10.626302719116211
    8. '...' → logprob: -11.751302719116211
    9. '```' → logprob: -12.251302719116211
    10. 'while' → logprob: -12.626302719116211

Token 1058: ' retir' (ID: 35638)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.298904538154602
    2. 'current' → logprob: -1.298904538154602
    3. 'for' → logprob: -1.673904538154602
    4. 'continu' → logprob: -2.7989044189453125
    5. '#' → logprob: -3.4239044189453125
    6. 'not' → logprob: -3.5489044189453125
    7. ' ajouté' → logprob: -4.0489044189453125
    8. 'result' → logprob: -4.1739044189453125
    9. 'rem' → logprob: -4.5489044189453125
    10. 'pas' → logprob: -4.6739044189453125

Token 1059: 'é' (ID: 377)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.3281261920928955
    2. '   ' → logprob: -1.8281261920928955
    3. 's' → logprob: -2.3281261920928955
    4. 'removed' → logprob: -2.4531261920928955
    5. 'current' → logprob: -2.5781261920928955
    6. ' =' → logprob: -3.0781261920928955
    7. '=' → logprob: -3.5781261920928955
    8. '()' → logprob: -3.7031261920928955
    9. ' ' → logprob: -3.9531261920928955
    10. 'des' → logprob: -4.203125953674316

Token 1060: ' les' (ID: 1341)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.192924976348877
    2. 'current' → logprob: -1.567924976348877
    3. 'result' → logprob: -2.567924976348877
    4. 'for' → logprob: -2.692924976348877
    5. 'pos' → logprob: -2.817924976348877
    6. ')' → logprob: -2.942924976348877
    7. 'removed' → logprob: -2.942924976348877
    8. '#' → logprob: -3.442924976348877
    9. '```' → logprob: -3.442924976348877
    10. 'c' → logprob: -3.817924976348877

Token 1061: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.618298351764679
    2. 'result' → logprob: -1.1182982921600342
    3. 'indices' → logprob: -2.743298292160034
    4. 'for' → logprob: -4.243298530578613
    5. 'pos' → logprob: -4.368298530578613
    6. 'current' → logprob: -4.493298530578613
    7. 'removed' → logprob: -4.868298530578613
    8. '#' → logprob: -5.118298530578613
    9. '[result' → logprob: -6.243298530578613
    10. 'i' → logprob: -6.368298530578613

Token 1062: ' où' (ID: 15113)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39282503724098206
    2. 'for' → logprob: -2.392825126647949
    3. '=' → logprob: -3.142825126647949
    4. 'removed' → logprob: -3.392825126647949
    5. '#' → logprob: -3.892825126647949
    6. '=[]' → logprob: -4.517825126647949
    7. '```' → logprob: -4.767825126647949
    8. 'positions' → logprob: -4.892825126647949
    9. 's' → logprob: -5.017825126647949
    10. '_removed' → logprob: -5.142825126647949

Token 1063: ' on' (ID: 402)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14093120396137238
    2. '#' → logprob: -3.5159311294555664
    3. 'positions' → logprob: -4.140931129455566
    4. 'True' → logprob: -4.140931129455566
    5. 'c' → logprob: -4.265931129455566
    6. 's' → logprob: -4.765931129455566
    7. 'res' → logprob: -4.890931129455566
    8. 'for' → logprob: -5.640931129455566
    9. 'les' → logprob: -5.640931129455566
    10. 'pos' → logprob: -5.890931129455566

Token 1064: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9097944498062134
    2. 'avait' → logprob: -1.0347944498062134
    3. 'cho' → logprob: -2.159794330596924
    4. '#' → logprob: -3.909794330596924
    5. 'avez' → logprob: -4.159794330596924
    6. 'av' → logprob: -4.409794330596924
    7. 'aj' → logprob: -4.534794330596924
    8. 'n' → logprob: -4.659794330596924
    9. 'plac' → logprob: -4.659794330596924
    10. 'chosen' → logprob: -4.659794330596924

Token 1065: ' pris' (ID: 17549)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plac' → logprob: -0.6245556473731995
    2. 'cho' → logprob: -1.1245555877685547
    3. 'aj' → logprob: -3.6245555877685547
    4. 'p' → logprob: -3.6245555877685547
    5. 'placed' → logprob: -3.9995555877685547
    6. 'ret' → logprob: -4.499555587768555
    7. 'append' → logprob: -4.749555587768555
    8. ' placé' → logprob: -4.999555587768555
    9. 'dé' → logprob: -5.124555587768555
    10. 'en' → logprob: -5.624555587768555

Token 1066: ' les' (ID: 1341)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7540554404258728
    2. 'car' → logprob: -1.7540555000305176
    3. 's' → logprob: -2.1290555000305176
    4. '```' → logprob: -3.6290555000305176
    5. 'pos' → logprob: -3.7540555000305176
    6. 'res' → logprob: -3.7540555000305176
    7. 'les' → logprob: -4.254055500030518
    8. '#' → logprob: -4.254055500030518
    9. 'le' → logprob: -4.504055500030518
    10. '1' → logprob: -4.754055500030518

Token 1067: ' lettres' (ID: 101234)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1716378778219223
    2. 'result' → logprob: -2.046637773513794
    3. 'characters' → logprob: -4.296638011932373
    4. 'chars' → logprob: -5.796638011932373
    5. 'tokens' → logprob: -5.796638011932373
    6. '#' → logprob: -6.546638011932373
    7. '```' → logprob: -6.796638011932373
    8. 'c' → logprob: -7.171638011932373
    9. 'lett' → logprob: -7.296638011932373
    10. 'res' → logprob: -7.296638011932373

Token 1068: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38986629247665405
    2. '#' → logprob: -2.639866352081299
    3. ' for' → logprob: -2.639866352081299
    4. 'removed' → logprob: -3.139866352081299
    5. 'positions' → logprob: -3.139866352081299
    6. '   ' → logprob: -4.014866352081299
    7. 'result' → logprob: -4.139866352081299
    8. '_' → logprob: -5.014866352081299
    9. '```' → logprob: -5.264866352081299
    10. 'indices' → logprob: -5.264866352081299

Token 1069: 'mais' (ID: 29170)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7141768336296082
    2. 'pos' → logprob: -2.339176893234253
    3. 'current' → logprob: -2.464176893234253
    4. 'i' → logprob: -2.589176893234253
    5. '#' → logprob: -2.839176893234253
    6. 'for' → logprob: -3.214176893234253
    7. 'removed' → logprob: -3.339176893234253
    8. 'idx' → logprob: -4.089176654815674
    9. 's' → logprob: -4.589176654815674
    10. '0' → logprob: -4.589176654815674

Token 1070: ' on' (ID: 402)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.9513460397720337
    2. '#' → logprob: -1.8263460397720337
    3. ')' → logprob: -2.326345920562744
    4. 'not' → logprob: -3.451345920562744
    5. 'pas' → logprob: -3.451345920562744
    6. ' pas' → logprob: -3.576345920562744
    7. 'len' → logprob: -4.076345920562744
    8. '
' → logprob: -4.201345920562744
    9. 'for' → logprob: -4.201345920562744
    10. ' current' → logprob: -4.201345920562744

Token 1071: ' ne' (ID: 453)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08626134693622589
    2. '#' → logprob: -3.21126127243042
    3. 'ne' → logprob: -4.08626127243042
    4. 'a' → logprob: -4.21126127243042
    5. 'avait' → logprob: -5.58626127243042
    6. ' n' → logprob: -6.46126127243042
    7. 'continue' → logprob: -6.96126127243042
    8. 'les' → logprob: -7.08626127243042
    9. '```' → logprob: -7.21126127243042
    10. 'man' → logprob: -7.33626127243042

Token 1072: ' stock' (ID: 6546)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.4953251779079437
    2. 'g' → logprob: -1.9953252077102661
    3. 'l' → logprob: -2.3703250885009766
    4. '#' → logprob: -3.3703250885009766
    5. 'pas' → logprob: -3.8703250885009766
    6. 'stock' → logprob: -3.9953250885009766
    7. 'a' → logprob: -4.245325088500977
    8. 'n' → logprob: -4.870325088500977
    9. 'con' → logprob: -4.870325088500977
    10. 'pe' → logprob: -4.870325088500977

Token 1073: 'e' (ID: 68)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.41035959124565125
    2. 'pas' → logprob: -1.2853596210479736
    3. ' =' → logprob: -3.2853596210479736
    4. '=' → logprob: -4.9103593826293945
    5. 'ed' → logprob: -5.2853593826293945
    6. 'ait' → logprob: -6.7853593826293945
    7. '   ' → logprob: -7.0353593826293945
    8. '_pas' → logprob: -7.0353593826293945
    9. '       ' → logprob: -7.1603593826293945
    10. ')' → logprob: -7.2853593826293945

Token 1074: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.7583367824554443
    2. 'explicit' → logprob: -0.8833367824554443
    3. ' pas' → logprob: -2.3833367824554443
    4. ' explicit' → logprob: -4.508337020874023
    5. 'plus' → logprob: -5.133337020874023
    6. 'les' → logprob: -5.633337020874023
    7. '```' → logprob: -6.883337020874023
    8. 'que' → logprob: -6.883337020874023
    9. 'pos' → logprob: -8.258337020874023
    10. 'rem' → logprob: -8.508337020874023

Token 1075: ' explicit' (ID: 23141)
  Prédit: 'explicit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'explicit' → logprob: -0.08997205644845963
    2. 'les' → logprob: -2.9649720191955566
    3. 'indices' → logprob: -4.964972019195557
    4. ' explicit' → logprob: -5.214972019195557
    5. '#' → logprob: -5.589972019195557
    6. '```' → logprob: -5.714972019195557
    7. 'positions' → logprob: -5.964972019195557
    8. 'leurs' → logprob: -6.339972019195557
    9. 'removed' → logprob: -6.339972019195557
    10. 'la' → logprob: -6.714972019195557

Token 1076: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.16986249387264252
    2. 'ly' → logprob: -1.9198625087738037
    3. 'ely' → logprob: -4.919862270355225
    4. '```' → logprob: -7.294862270355225
    5. 'ment' → logprob: -7.544862270355225
    6. 'ément' → logprob: -8.044862747192383
    7. 'e' → logprob: -8.169862747192383
    8. 'lement' → logprob: -8.669862747192383
    9. 'positions' → logprob: -9.544862747192383
    10. 'ements' → logprob: -9.794862747192383

Token 1077: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3464385271072388
    2. ')' → logprob: -2.096438407897949
    3. 'les' → logprob: -2.096438407897949
    4. 'positions' → logprob: -2.721438407897949
    5. 'indices' → logprob: -2.721438407897949
    6. '```' → logprob: -2.721438407897949
    7. 'removed' → logprob: -2.721438407897949
    8. '_' → logprob: -2.971438407897949
    9. 'for' → logprob: -3.346438407897949
    10. 'car' → logprob: -3.721438407897949

Token 1078: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.6560614705085754
    2. 'positions' → logprob: -1.2810614109039307
    3. 'removed' → logprob: -1.7810614109039307
    4. ' indices' → logprob: -3.9060614109039307
    5. ' removed' → logprob: -5.40606164932251
    6. 'pos' → logprob: -5.90606164932251
    7. '```' → logprob: -6.28106164932251
    8. ' positions' → logprob: -6.28106164932251
    9. 'indexes' → logprob: -7.28106164932251
    10. 'tokens' → logprob: -7.40606164932251

Token 1079: ' retir' (ID: 35638)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3227437436580658
    2. 'ret' → logprob: -3.4477436542510986
    3. 'car' → logprob: -3.5727436542510986
    4. 'removed' → logprob: -3.8227436542510986
    5. 'used' → logprob: -3.8227436542510986
    6. '#' → logprob: -3.9477436542510986
    7. 'for' → logprob: -4.072743892669678
    8. 'taken' → logprob: -4.072743892669678
    9. 'chosen' → logprob: -4.072743892669678
    10. 's' → logprob: -4.697743892669678

Token 1080: 'és' (ID: 1756)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5737133026123047
    2. '=[]' → logprob: -1.6987133026123047
    3. '[]' → logprob: -2.1987133026123047
    4. ')' → logprob: -2.1987133026123047
    5. '```' → logprob: -2.6987133026123047
    6. ']' → logprob: -3.1987133026123047
    7. 's' → logprob: -3.3237133026123047
    8. '_removed' → logprob: -3.4487133026123047
    9. ' =' → logprob: -3.6987133026123047
    10. 'removed' → logprob: -3.6987133026123047

Token 1081: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2586711347103119
    2. ')
' → logprob: -1.7586711645126343
    3. ',' → logprob: -4.258671283721924
    4. 'for' → logprob: -4.258671283721924
    5. '#' → logprob: -4.883671283721924
    6. 'car' → logprob: -5.508671283721924
    7. 'pour' → logprob: -6.133671283721924
    8. '),' → logprob: -6.258671283721924
    9. ')#' → logprob: -6.383671283721924
    10. ' for' → logprob: -6.508671283721924

Token 1082: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4633246064186096
    2. 'for' → logprob: -2.713324546813965
    3. 'current' → logprob: -2.838324546813965
    4. '```' → logprob: -2.963324546813965
    5. '   ' → logprob: -3.088324546813965
    6. 'indices' → logprob: -3.213324546813965
    7. 'removed' → logprob: -3.213324546813965
    8. 'result' → logprob: -3.338324546813965
    9. 'positions' → logprob: -4.213324546813965
    10. ' for' → logprob: -5.713324546813965

Token 1083: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8842893838882446
    2. 'used' → logprob: -1.3842893838882446
    3. 'for' → logprob: -2.009289264678955
    4. 'taken' → logprob: -2.384289264678955
    5. 'indices' → logprob: -3.134289264678955
    6. 'positions' → logprob: -4.009289264678955
    7. 'removed' → logprob: -4.634289264678955
    8. 'chosen' → logprob: -4.884289264678955
    9. 'current' → logprob: -5.134289264678955
    10. 'pos' → logprob: -5.509289264678955

Token 1084: ' En' (ID: 2130)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.5221717357635498
    2. 'taken' → logprob: -1.3971717357635498
    3. '#' → logprob: -3.27217173576355
    4. 'indices' → logprob: -3.39717173576355
    5. 'removed' → logprob: -3.64717173576355
    6. 'remaining' → logprob: -4.272171974182129
    7. 'chosen' → logprob: -4.522171974182129
    8. 'for' → logprob: -4.772171974182129
    9. 'selected' → logprob: -5.272171974182129
    10. 'positions' → logprob: -5.397171974182129

Token 1085: ' fait' (ID: 7473)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.7122129797935486
    2. '#' → logprob: -0.8372129797935486
    3. 'continu' → logprob: -3.8372130393981934
    4. 'faite' → logprob: -4.087213039398193
    5. 'for' → logprob: -4.462213039398193
    6. 'f' → logprob: -4.962213039398193
    7. '```' → logprob: -5.837213039398193
    8. 's' → logprob: -5.962213039398193
    9. 'faits' → logprob: -5.962213039398193
    10. ' fait' → logprob: -6.087213039398193

Token 1086: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03195692598819733
    2. 'removed' → logprob: -4.656957149505615
    3. 'indices' → logprob: -4.656957149505615
    4. 'current' → logprob: -5.406957149505615
    5. 'for' → logprob: -5.406957149505615
    6. 'continue' → logprob: -7.156957149505615
    7. 'positions' → logprob: -7.281957149505615
    8. 'pass' → logprob: -7.781957149505615
    9. '   ' → logprob: -7.906957149505615
    10. ' #' → logprob: -8.281956672668457

Token 1087: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.025165893137454987
    2. 'pass' → logprob: -4.275166034698486
    3. 'for' → logprob: -5.400166034698486
    4. 'removed' → logprob: -6.025166034698486
    5. 'indices' → logprob: -6.275166034698486
    6. 'rest' → logprob: -7.400166034698486
    7. 'pos' → logprob: -8.025165557861328
    8. 'current' → logprob: -8.400165557861328
    9. 'positions' → logprob: -8.775165557861328
    10. 'reste' → logprob: -8.775165557861328

Token 1088: ' a' (ID: 261)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.20456014573574066
    2. '#' → logprob: -2.2045600414276123
    3. 'do' → logprob: -3.4545600414276123
    4. 'n' → logprob: -4.329560279846191
    5. 's' → logprob: -5.079560279846191
    6. 'for' → logprob: -5.329560279846191
    7. 'contin' → logprob: -5.704560279846191
    8. ' continue' → logprob: -5.954560279846191
    9. 'vais' → logprob: -6.454560279846191
    10. 'know' → logprob: -7.079560279846191

Token 1089: ' juste' (ID: 31553)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.5030238628387451
    2. 'continu' → logprob: -2.003023862838745
    3. 'cho' → logprob: -2.503023862838745
    4. 'aj' → logprob: -2.628023862838745
    5. 'mar' → logprob: -2.628023862838745
    6. 'just' → logprob: -3.378023862838745
    7. 'util' → logprob: -3.378023862838745
    8. '#' → logprob: -3.503023862838745
    9. 'dé' → logprob: -3.628023862838745
    10. 'g' → logprob: -3.628023862838745

Token 1090: ' "' (ID: 392)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.090433955192566
    2. 'continu' → logprob: -1.465433955192566
    3. 'contin' → logprob: -2.4654340744018555
    4. 'aj' → logprob: -3.3404340744018555
    5. 'continue' → logprob: -3.4654340744018555
    6. 'ignor' → logprob: -3.7154340744018555
    7. '#' → logprob: -3.8404340744018555
    8. 'à' → logprob: -3.9654340744018555
    9. 'ignored' → logprob: -3.9654340744018555
    10. 'util' → logprob: -4.2154340744018555

Token 1091: 's' (ID: 82)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.2598868608474731
    2. 'continu' → logprob: -2.1348867416381836
    3. 'aj' → logprob: -2.6348867416381836
    4. 'mar' → logprob: -2.8848867416381836
    5. '```' → logprob: -3.1348867416381836
    6. 'contin' → logprob: -3.3848867416381836
    7. 'selected' → logprob: -3.5098867416381836
    8. 'continue' → logprob: -3.5098867416381836
    9. 'pas' → logprob: -3.6348867416381836
    10. 'cho' → logprob: -3.6348867416381836

Token 1092: 'auté' (ID: 50633)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21533212065696716
    2. '=' → logprob: -1.7153321504592896
    3. ')' → logprob: -6.09033203125
    4. '   ' → logprob: -6.34033203125
    5. '[' → logprob: -6.71533203125
    6. '.remove' → logprob: -6.84033203125
    7. 's' → logprob: -6.84033203125
    8. '#' → logprob: -7.46533203125
    9. 'pas' → logprob: -7.71533203125
    10. '.pop' → logprob: -7.84033203125

Token 1093: '"' (ID: 1)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9683609008789062
    2. 'current' → logprob: -1.0933609008789062
    3. 'le' → logprob: -3.0933609008789062
    4. 'des' → logprob: -3.2183609008789062
    5. 'positions' → logprob: -3.4683609008789062
    6. 'l' → logprob: -3.9683609008789062
    7. 'la' → logprob: -4.218360900878906
    8. '=' → logprob: -4.218360900878906
    9. 'une' → logprob: -4.468360900878906
    10. '```' → logprob: -4.718360900878906

Token 1094: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3438572883605957
    2. 'current' → logprob: -2.2188572883605957
    3. 'le' → logprob: -3.2188572883605957
    4. 'all' → logprob: -3.9688572883605957
    5. '```' → logprob: -4.093857288360596
    6. 'positions' → logprob: -4.218857288360596
    7. 'des' → logprob: -4.593857288360596
    8. 'dans' → logprob: -4.593857288360596
    9. 'over' → logprob: -4.968857288360596
    10. 'indices' → logprob: -4.968857288360596

Token 1095: ' indices' (ID: 30378)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.0456881523132324
    2. 'indices' → logprob: -1.1706881523132324
    3. 'current' → logprob: -1.6706881523132324
    4. 'result' → logprob: -3.0456881523132324
    5. ' indices' → logprob: -3.6706881523132324
    6. ' current' → logprob: -3.6706881523132324
    7. ' positions' → logprob: -4.295688152313232
    8. 'pos' → logprob: -5.045688152313232
    9. 'tokens' → logprob: -5.295688152313232
    10. 'removed' → logprob: -5.670688152313232

Token 1096: ' déjà' (ID: 21229)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.5633394718170166
    2. 'rest' → logprob: -1.5633394718170166
    3. ' restant' → logprob: -3.9383394718170166
    4. ' =' → logprob: -4.4383392333984375
    5. 'dans' → logprob: -4.5633392333984375
    6. 'non' → logprob: -4.5633392333984375
    7. '_rest' → logprob: -4.8133392333984375
    8. ' non' → logprob: -4.9383392333984375
    9. '[current' → logprob: -4.9383392333984375
    10. 's' → logprob: -5.0633392333984375

Token 1097: ' trait' (ID: 15458)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.9074321985244751
    2. 'pris' → logprob: -1.032432198524475
    3. 'util' → logprob: -2.2824320793151855
    4. 'ret' → logprob: -3.1574320793151855
    5. 'trait' → logprob: -3.6574320793151855
    6. 'plac' → logprob: -4.1574320793151855
    7. 'prises' → logprob: -4.5324320793151855
    8. 'reten' → logprob: -4.5324320793151855
    9. 'prise' → logprob: -5.0324320793151855
    10. 'pr' → logprob: -5.1574320793151855

Token 1098: 'és' (ID: 1756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2234492301940918
    2. '_' → logprob: -1.5984492301940918
    3. '```' → logprob: -2.223449230194092
    4. 'current' → logprob: -2.848449230194092
    5. '   ' → logprob: -3.348449230194092
    6. ',' → logprob: -3.473449230194092
    7. 'es' → logprob: -3.598449230194092
    8. '_current' → logprob: -3.723449230194092
    9. '[current' → logprob: -3.848449230194092
    10. 'e' → logprob: -3.848449230194092

Token 1099: ' car' (ID: 1669)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.4349749088287354
    2. '   ' → logprob: -2.1849749088287354
    3. '```' → logprob: -2.1849749088287354
    4. 'for' → logprob: -2.3099749088287354
    5. 'while' → logprob: -2.4349749088287354
    6. '[current' → logprob: -2.4349749088287354
    7. 's' → logprob: -3.3099749088287354
    8. ' for' → logprob: -3.8099749088287354
    9. '[' → logprob: -3.9349749088287354
    10. '#' → logprob: -3.9349749088287354

Token 1100: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.12088681012392044
    2. ' current' → logprob: -2.49588680267334
    3. 'on' → logprob: -5.37088680267334
    4. 'result' → logprob: -5.49588680267334
    5. ' on' → logprob: -5.62088680267334
    6. '```' → logprob: -6.12088680267334
    7. 'les' → logprob: -6.24588680267334
    8. 'for' → logprob: -6.49588680267334
    9. 'le' → logprob: -6.49588680267334
    10. 's' → logprob: -6.62088680267334

Token 1101: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.455048449221067e-05
    2. 'pos' → logprob: -10.125054359436035
    3. '_' → logprob: -12.250054359436035
    4. 'Pos' → logprob: -12.375054359436035
    5. '```' → logprob: -13.500054359436035
    6. '_idx' → logprob: -13.750054359436035
    7. '_positions' → logprob: -14.625054359436035
    8. '_position' → logprob: -15.000054359436035
    9. '   ' → logprob: -15.375054359436035
    10. '+' → logprob: -15.375054359436035

Token 1102: ' avance' (ID: 81376)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7556918859481812
    2. ' ==' → logprob: -1.6306918859481812
    3. '<' → logprob: -2.5056920051574707
    4. '==' → logprob: -2.7556920051574707
    5. '<len' → logprob: -3.0056920051574707
    6. ' >=' → logprob: -3.3806920051574707
    7. '>=' → logprob: -3.5056920051574707
    8. ' <=' → logprob: -4.005692005157471
    9. '<=' → logprob: -4.505692005157471
    10. '<n' → logprob: -4.880692005157471

Token 1103: ' toujours' (ID: 16867)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.7480742931365967
    2. 'result' → logprob: -1.7480742931365967
    3. '   ' → logprob: -1.8730742931365967
    4. 's' → logprob: -2.6230742931365967
    5. 'for' → logprob: -2.6230742931365967
    6. '
' → logprob: -2.7480742931365967
    7. ' +=' → logprob: -2.8730742931365967
    8. '+' → logprob: -2.9980742931365967
    9. 'while' → logprob: -3.1230742931365967
    10. '```' → logprob: -3.4980742931365967

Token 1104: '.
' (ID: 558)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7520798444747925
    2. 'for' → logprob: -1.8770798444747925
    3. 'rest' → logprob: -2.877079963684082
    4. '```' → logprob: -3.002079963684082
    5. ' for' → logprob: -3.377079963684082
    6. 's' → logprob: -3.377079963684082
    7. '#' → logprob: -3.377079963684082
    8. '
' → logprob: -3.502079963684082
    9. ' while' → logprob: -3.627079963684082
    10. '   ' → logprob: -3.752079963684082

Token 1105: '   ' (ID: 271)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.7395440340042114
    2. '   ' → logprob: -1.1145440340042114
    3. '```' → logprob: -2.989543914794922
    4. 'for' → logprob: -3.114543914794922
    5. 'remaining' → logprob: -3.864543914794922
    6. ' for' → logprob: -3.864543914794922
    7. '#' → logprob: -4.239543914794922
    8. 'indices' → logprob: -4.364543914794922
    9. 'reste' → logprob: -4.614543914794922
    10. ' rest' → logprob: -5.489543914794922

Token 1106: ' #' (ID: 1069)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.2880879342556
    2. '   ' → logprob: -2.038087844848633
    3. 'for' → logprob: -3.413087844848633
    4. 'remaining' → logprob: -3.913087844848633
    5. '#' (adapté à ' #') → logprob: -4.038087844848633
    6. 'while' → logprob: -4.413087844848633
    7. 'indices' → logprob: -4.538087844848633
    8. 'reste' → logprob: -4.663087844848633
    9. '```' → logprob: -4.913087844848633
    10. 'result' → logprob: -6.413087844848633

Token 1107: ' Donc' (ID: 88837)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.18004168570041656
    2. 'remaining' → logprob: -2.680041790008545
    3. '#' → logprob: -3.680041790008545
    4. '   ' → logprob: -3.805041790008545
    5. 'for' → logprob: -3.805041790008545
    6. 'reste' → logprob: -4.555041790008545
    7. 'suffix' → logprob: -5.430041790008545
    8. 'while' → logprob: -6.305041790008545
    9. 'rem' → logprob: -6.305041790008545
    10. 'used' → logprob: -6.430041790008545

Token 1108: ' les' (ID: 1341)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.35778072476387024
    2. 'for' → logprob: -2.107780694961548
    3. 'reste' → logprob: -2.857780694961548
    4. 'while' → logprob: -2.982780694961548
    5. '#' → logprob: -3.357780694961548
    6. 'remaining' → logprob: -4.607780933380127
    7. 'result' → logprob: -5.107780933380127
    8. 're' → logprob: -5.107780933380127
    9. 'indices' → logprob: -5.232780933380127
    10. '   ' → logprob: -5.857780933380127

Token 1109: ' indices' (ID: 30378)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.2846564054489136
    2. 'indices' → logprob: -1.9096564054489136
    3. 'positions' → logprob: -3.909656524658203
    4. 'reste' → logprob: -4.034656524658203
    5. 'for' → logprob: -4.409656524658203
    6. '#' → logprob: -4.534656524658203
    7. 'remaining' → logprob: -4.784656524658203
    8. 'removed' → logprob: -4.909656524658203
    9. ' rest' → logprob: -5.034656524658203
    10. 'result' → logprob: -5.159656524658203

Token 1110: ' utilisés' (ID: 94258)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.5555495619773865
    2. '>=' → logprob: -1.4305496215820312
    3. ' rest' → logprob: -2.1805496215820312
    4. 'sup' → logprob: -4.180549621582031
    5. ' >=' → logprob: -4.180549621582031
    6. '_rest' → logprob: -4.930549621582031
    7. '>' → logprob: -5.180549621582031
    8. 'ret' → logprob: -5.555549621582031
    9. 'reste' → logprob: -5.555549621582031
    10. '```' → logprob: -5.555549621582031

Token 1111: ' =' (ID: 314)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.9864342212677002
    2. '>=' → logprob: -1.4864342212677002
    3. ' >=' → logprob: -2.1114342212677
    4. 'rest' → logprob: -2.4864342212677
    5. '_rest' → logprob: -2.4864342212677
    6. '...' → logprob: -4.736433982849121
    7. '<=' → logprob: -4.861433982849121
    8. '```' → logprob: -5.111433982849121
    9. ' <=' → logprob: -5.236433982849121
    10. ' =' → logprob: -5.236433982849121

Token 1112: ' ceux' (ID: 26863)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2070721983909607
    2. 'set' → logprob: -2.4570722579956055
    3. 'range' → logprob: -2.8320722579956055
    4. ' current' → logprob: -3.7070722579956055
    5. '0' → logprob: -4.8320722579956055
    6. ' set' → logprob: -5.8320722579956055
    7. ' range' → logprob: -6.2070722579956055
    8. 'result' → logprob: -6.5820722579956055
    9. '```' → logprob: -6.8320722579956055
    10. '{' → logprob: -6.9570722579956055

Token 1113: ' <' (ID: 464)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8404646515846252
    2. 'dans' → logprob: -1.8404645919799805
    3. ' utilisés' → logprob: -3.2154645919799805
    4. 'ret' → logprob: -3.2154645919799805
    5. '   ' → logprob: -3.3404645919799805
    6. 'dé' → logprob: -3.5904645919799805
    7. 'used' → logprob: -3.7154645919799805
    8. 'already' → logprob: -3.9654645919799805
    9. 'qui' → logprob: -4.2154645919799805
    10. ' qui' → logprob: -4.3404645919799805

Token 1114: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.003604224883019924
    2. ' current' → logprob: -5.628604412078857
    3. '```' → logprob: -13.2536039352417
    4. '`' → logprob: -14.0036039352417
    5. '$current' → logprob: -14.7536039352417
    6. '[current' → logprob: -15.5036039352417
    7. '	current' → logprob: -15.6286039352417
    8. ' ' → logprob: -16.003604888916016
    9. '=current' → logprob: -16.003604888916016
    10. '_current' → logprob: -16.128604888916016

Token 1115: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00015455135144293308
    2. 'pos' → logprob: -9.000154495239258
    3. '_' → logprob: -11.250154495239258
    4. '_current' → logprob: -11.750154495239258
    5. 'current' → logprob: -12.000154495239258
    6. 'Pos' → logprob: -12.625154495239258
    7. '```' → logprob: -15.625154495239258
    8. '_positions' → logprob: -15.750154495239258
    9. '_position' → logprob: -16.000154495239258
    10. ' _' → logprob: -17.000154495239258

Token 1116: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14446453750133514
    2. 'rest' → logprob: -2.6444644927978516
    3. 'for' → logprob: -4.144464492797852
    4. 'res' → logprob: -4.769464492797852
    5. 'result' → logprob: -4.769464492797852
    6. 'remaining' → logprob: -4.894464492797852
    7. 'unused' → logprob: -5.519464492797852
    8. 'used' → logprob: -5.894464492797852
    9. 's' → logprob: -6.144464492797852
    10. '#' → logprob: -6.519464492797852

Token 1117: ' ceux' (ID: 26863)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6466156244277954
    2. '0' → logprob: -1.1466156244277954
    3. '(len' → logprob: -2.771615505218506
    4. 'k' → logprob: -3.521615505218506
    5. ' len' → logprob: -4.521615505218506
    6. 'sum' → logprob: -4.771615505218506
    7. '[len' → logprob: -5.021615505218506
    8. '[' → logprob: -5.146615505218506
    9. ' (' → logprob: -5.146615505218506
    10. ' ' → logprob: -5.521615505218506

Token 1118: ' déplac' (ID: 195321)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -2.2061691284179688
    2. ' rest' → logprob: -2.5811691284179688
    3. '#' → logprob: -2.9561691284179688
    4. '[current' → logprob: -3.0811691284179688
    5. 'import' → logprob: -3.3311691284179688
    6. '+' → logprob: -3.3311691284179688
    7. 'rest' → logprob: -3.4561691284179688
    8. '>=' → logprob: -3.5811691284179688
    9. 'already' → logprob: -3.5811691284179688
    10. 'removed' → logprob: -3.7061691284179688

Token 1119: 'és' (ID: 1756)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -2.027614116668701
    2. ' =' → logprob: -2.027614116668701
    3. '+' → logprob: -2.277614116668701
    4. 's' → logprob: -2.402614116668701
    5. '```' → logprob: -2.652614116668701
    6. '   ' → logprob: -2.902614116668701
    7. ',' → logprob: -3.277614116668701
    8. 'current' → logprob: -3.402614116668701
    9. ' +' → logprob: -3.402614116668701
    10. ')' → logprob: -3.652614116668701

Token 1120: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5663135051727295
    2. ' =' → logprob: -1.5663135051727295
    3. 'result' → logprob: -2.8163135051727295
    4. 'rest' → logprob: -2.9413135051727295
    5. '#' → logprob: -3.0663135051727295
    6. ' rest' → logprob: -3.1913135051727295
    7. ' +=' → logprob: -3.3163135051727295
    8. 'for' → logprob: -3.4413135051727295
    9. 's' → logprob: -3.4413135051727295
    10. ' s' → logprob: -3.6913135051727295

Token 1121: 'on' (ID: 263)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0843040943145752
    2. ')' → logprob: -1.7093040943145752
    3. 'current' → logprob: -2.084304094314575
    4. '0' → logprob: -2.334304094314575
    5. '#' → logprob: -2.459304094314575
    6. '```' → logprob: -2.959304094314575
    7. 'n' → logprob: -4.084303855895996
    8. '``' → logprob: -4.584303855895996
    9. 's' → logprob: -4.709303855895996
    10. '   ' → logprob: -4.834303855895996

Token 1122: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7050817608833313
    2. 'n' → logprob: -1.2050817012786865
    3. 'pe' → logprob: -2.7050817012786865
    4. 'ne' → logprob: -3.7050817012786865
    5. 'a' → logprob: -3.8300817012786865
    6. 'ignore' → logprob: -4.455081939697266
    7. 'do' → logprob: -4.455081939697266
    8. 'continue' → logprob: -4.705081939697266
    9. 'pour' → logprob: -4.830081939697266
    10. 'man' → logprob: -4.830081939697266

Token 1123: ' aura' (ID: 33008)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6171348094940186
    2. 'n' → logprob: -1.9921348094940186
    3. 'a' → logprob: -2.1171348094940186
    4. 'avait' → logprob: -2.9921348094940186
    5. '```' → logprob: -3.3671348094940186
    6. 'ignore' → logprob: -3.6171348094940186
    7. 'aj' → logprob: -3.7421348094940186
    8. 'already' → logprob: -4.492135047912598
    9. 'avez' → logprob: -4.992135047912598
    10. 'have' → logprob: -5.242135047912598

Token 1124: ' compt' (ID: 39238)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.9027985334396362
    2. 'aj' → logprob: -2.402798652648926
    3. 'oub' → logprob: -2.652798652648926
    4. 'dé' → logprob: -2.777798652648926
    5. 'trait' → logprob: -2.902798652648926
    6. ')' → logprob: -3.027798652648926
    7. 'sup' → logprob: -3.527798652648926
    8. 's' → logprob: -4.027798652648926
    9. '```' → logprob: -4.027798652648926
    10. 'continu' → logprob: -4.152798652648926

Token 1125: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.023919394239783287
    2. 'é' → logprob: -4.148919582366943
    3. 'u' → logprob: -5.398919582366943
    4. 'in' → logprob: -6.648919582366943
    5. 'ur' → logprob: -8.023919105529785
    6. 'i' → logprob: -8.148919105529785
    7. 'es' → logprob: -8.523919105529785
    8. 'érés' → logprob: -8.648919105529785
    9. 'rés' → logprob: -8.773919105529785
    10. 'e' → logprob: -9.273919105529785

Token 1126: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6948329210281372
    2. ' pas' → logprob: -2.0698328018188477
    3. 'pas' → logprob: -2.5698328018188477
    4. ' =' → logprob: -3.0698328018188477
    5. '=' → logprob: -3.4448328018188477
    6. 'dans' → logprob: -3.4448328018188477
    7. ')
' → logprob: -3.8198328018188477
    8. ' déjà' → logprob: -4.069832801818848
    9. 'plus' → logprob: -4.569832801818848
    10. ').' → logprob: -4.569832801818848

Token 1127: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07674886286258698
    2. 'positions' → logprob: -3.576748847961426
    3. 'current' → logprob: -4.201748847961426
    4. 'k' → logprob: -4.701748847961426
    5. 'len' → logprob: -4.951748847961426
    6. '```' → logprob: -5.451748847961426
    7. 's' → logprob: -5.951748847961426
    8. 'range' → logprob: -6.326748847961426
    9. ' result' → logprob: -6.701748847961426
    10. 'removed' → logprob: -6.951748847961426

Token 1128: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2778013348579407
    2. ')
' → logprob: -1.652801275253296
    3. '+' → logprob: -4.527801513671875
    4. '   ' → logprob: -4.777801513671875
    5. ']' → logprob: -5.402801513671875
    6. '#' → logprob: -5.527801513671875
    7. ' +' → logprob: -5.527801513671875
    8. '])' → logprob: -6.152801513671875
    9. ',' → logprob: -6.277801513671875
    10. ' )' → logprob: -6.527801513671875

Token 1129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04278814047574997
    2. 'rest' → logprob: -3.667788028717041
    3. '```' → logprob: -4.917788028717041
    4. '#' → logprob: -5.917788028717041
    5. 'remaining' → logprob: -6.042788028717041
    6. 'for' → logprob: -7.167788028717041
    7. 'reste' → logprob: -7.292788028717041
    8. '
' → logprob: -7.667788028717041
    9. ' for' → logprob: -8.0427885055542
    10. 'indices' → logprob: -8.1677885055542

Token 1130: ' #' (ID: 1069)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.9320278763771057
    2. '   ' → logprob: -1.807027816772461
    3. 'used' → logprob: -1.932027816772461
    4. 'remaining' → logprob: -2.307027816772461
    5. 'for' → logprob: -2.682027816772461
    6. '#' (adapté à ' #') → logprob: -3.057027816772461
    7. 'indices' → logprob: -3.182027816772461
    8. ' used' → logprob: -4.682027816772461
    9. ' for' → logprob: -5.182027816772461
    10. 'reste' → logprob: -5.307027816772461

Token 1131: ' Plus' (ID: 11899)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.5941796898841858
    2. 'rest' → logprob: -1.469179630279541
    3. '   ' → logprob: -2.719179630279541
    4. 'remaining' → logprob: -2.719179630279541
    5. 'indices' → logprob: -3.719179630279541
    6. 'for' → logprob: -3.844179630279541
    7. '#' → logprob: -4.594179630279541
    8. 'unused' → logprob: -4.719179630279541
    9. ' used' → logprob: -5.094179630279541
    10. 'reste' → logprob: -5.969179630279541

Token 1132: ' simple' (ID: 4705)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.5925742983818054
    2. 'prec' → logprob: -1.0925743579864502
    3. 'simple' → logprob: -3.34257435798645
    4. 'explicit' → logprob: -3.96757435798645
    5. 'exact' → logprob: -4.217574119567871
    6. 'import' → logprob: -4.342574119567871
    7. '#' → logprob: -4.717574119567871
    8. 'plus' → logprob: -5.842574119567871
    9. 'de' → logprob: -5.842574119567871
    10. 'pro' → logprob: -6.092574119567871

Token 1133: ' :' (ID: 712)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.36642661690711975
    2. 's' → logprob: -2.616426706314087
    3. '#' → logprob: -2.741426706314087
    4. 'result' → logprob: -3.366426706314087
    5. 'indices' → logprob: -3.491426706314087
    6. '   ' → logprob: -3.866426706314087
    7. 'remaining' → logprob: -4.241426467895508
    8. 'reste' → logprob: -4.241426467895508
    9. 'for' → logprob: -4.741426467895508
    10. 'used' → logprob: -4.991426467895508

Token 1134: ' reconstru' (ID: 108053)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9784167408943176
    2. 'rest' → logprob: -1.6034166812896729
    3. 'used' → logprob: -1.6034166812896729
    4. 'remaining' → logprob: -2.478416681289673
    5. 'indices' → logprob: -2.853416681289673
    6. '#' → logprob: -3.603416681289673
    7. 'result' → logprob: -4.353416919708252
    8. 'unused' → logprob: -4.853416919708252
    9. 'reste' → logprob: -5.103416919708252
    10. 'while' → logprob: -5.353416919708252

Token 1135: 'isons' (ID: 47841)
  Prédit: 'ire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.283940851688385
    2. 'ct' → logprob: -2.1589407920837402
    3. 'ction' → logprob: -2.4089407920837402
    4. 'er' → logprob: -4.65894079208374
    5. 'uire' → logprob: -4.90894079208374
    6. '   ' → logprob: -5.03394079208374
    7. 's' → logprob: -5.65894079208374
    8. 'e' → logprob: -6.15894079208374
    9. 'cter' → logprob: -6.15894079208374
    10. 'ite' → logprob: -6.40894079208374

Token 1136: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9599025845527649
    2. 'rest' → logprob: -1.8349025249481201
    3. ' s' → logprob: -2.20990252494812
    4. 's' → logprob: -2.33490252494812
    5. ' le' → logprob: -2.45990252494812
    6. ' rest' → logprob: -2.95990252494812
    7. 'la' → logprob: -3.08490252494812
    8. ' =' → logprob: -3.70990252494812
    9. ' la' → logprob: -3.70990252494812
    10. '```' → logprob: -5.959902763366699

Token 1137: ' partie' (ID: 22139)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45639562606811523
    2. 'rest' → logprob: -1.5813956260681152
    3. 'reste' → logprob: -2.8313956260681152
    4. 'chaine' → logprob: -3.2063956260681152
    5. ' s' → logprob: -3.5813956260681152
    6. 'suffix' → logprob: -4.581395626068115
    7. 'remaining' → logprob: -5.456395626068115
    8. '```' → logprob: -5.456395626068115
    9. 're' → logprob: -5.706395626068115
    10. 'suite' → logprob: -5.956395626068115

Token 1138: ' restante' (ID: 130202)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.43555504083633423
    2. 's' → logprob: -1.3105549812316895
    3. '_rest' → logprob: -3.4355549812316895
    4. ' =' → logprob: -4.3105549812316895
    5. ' rest' → logprob: -4.4355549812316895
    6. '```' → logprob: -4.8105549812316895
    7. ' s' → logprob: -5.0605549812316895
    8. ' restante' → logprob: -5.8105549812316895
    9. '_s' → logprob: -6.4355549812316895
    10. 'reste' → logprob: -6.5605549812316895

Token 1139: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.565546452999115
    2. 'rest' → logprob: -1.3155465126037598
    3. 's' → logprob: -2.1905465126037598
    4. 'remaining' → logprob: -4.56554651260376
    5. 'suffix' → logprob: -4.94054651260376
    6. 're' → logprob: -4.94054651260376
    7. 'res' → logprob: -5.19054651260376
    8. '```' → logprob: -5.69054651260376
    9. ' rest' → logprob: -5.81554651260376
    10. 'tail' → logprob: -5.94054651260376

Token 1140: ' partir' (ID: 12100)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.030770905315876007
    2. '```' → logprob: -4.405770778656006
    3. ' current' → logprob: -4.655770778656006
    4. 's' → logprob: -6.030770778656006
    5. ' partir' → logprob: -6.155770778656006
    6. 'part' → logprob: -7.030770778656006
    7. '+' → logprob: -7.280770778656006
    8. ' s' → logprob: -8.155771255493164
    9. '+=' → logprob: -8.280771255493164
    10. ' +=' → logprob: -8.530771255493164

Token 1141: ' des' (ID: 731)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.004450412467122078
    2. ' current' → logprob: -5.75445032119751
    3. '   ' → logprob: -6.87945032119751
    4. '```' → logprob: -9.504450798034668
    5. 's' → logprob: -9.629450798034668
    6. 'de' → logprob: -10.379450798034668
    7. '[current' → logprob: -10.879450798034668
    8. '(current' → logprob: -11.129450798034668
    9. '`' → logprob: -12.129450798034668
    10. ' de' → logprob: -12.754450798034668

Token 1142: ' indices' (ID: 30378)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.003685474395751953
    2. '[current' → logprob: -6.003685474395752
    3. ' current' → logprob: -7.378685474395752
    4. 's' → logprob: -8.878684997558594
    5. 'positions' → logprob: -9.128684997558594
    6. 'indices' → logprob: -9.378684997558594
    7. '```' → logprob: -9.503684997558594
    8. '[' → logprob: -10.753684997558594
    9. '(current' → logprob: -10.878684997558594
    10. '
' → logprob: -11.003684997558594

Token 1143: ' >=' (ID: 5064)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9662875533103943
    2. 'rest' → logprob: -1.466287612915039
    3. '   ' → logprob: -1.966287612915039
    4. '=' → logprob: -2.466287612915039
    5. '```' → logprob: -3.841287612915039
    6. ' rest' → logprob: -4.091287612915039
    7. '_rest' → logprob: -4.091287612915039
    8. 's' → logprob: -4.091287612915039
    9. 'current' → logprob: -4.216287612915039
    10. 'remaining' → logprob: -4.341287612915039

Token 1144: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0008240377064794302
    2. ' current' → logprob: -7.125823974609375
    3. '```' → logprob: -11.000823974609375
    4. '`' → logprob: -13.500823974609375
    5. '   ' → logprob: -14.875823974609375
    6. '$current' → logprob: -15.375823974609375
    7. '(current' → logprob: -15.500823974609375
    8. '[current' → logprob: -15.625823974609375
    9. '	current' → logprob: -15.750823974609375
    10. '
' → logprob: -15.750823974609375

Token 1145: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00010950337309623137
    2. 'pos' → logprob: -9.625109672546387
    3. 'current' → logprob: -10.625109672546387
    4. '_current' → logprob: -11.125109672546387
    5. '_' → logprob: -13.000109672546387
    6. '```' → logprob: -14.000109672546387
    7. 'Pos' → logprob: -14.375109672546387
    8. '+' → logprob: -16.00010871887207
    9. '_positions' → logprob: -16.12510871887207
    10. '   ' → logprob: -16.25010871887207

Token 1146: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3394780457019806
    2. 'rest' → logprob: -1.7144780158996582
    3. 's' → logprob: -3.089478015899658
    4. '```' → logprob: -3.714478015899658
    5. 'suffix' → logprob: -4.214478015899658
    6. 're' → logprob: -5.464478015899658
    7. 'for' → logprob: -5.589478015899658
    8. 'rem' → logprob: -5.839478015899658
    9. 'tail' → logprob: -5.964478015899658
    10. 'res' → logprob: -5.964478015899658

Token 1147: ' les' (ID: 1341)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1641284078359604
    2. '```' → logprob: -3.289128303527832
    3. 'current' → logprob: -3.664128303527832
    4. '[]' → logprob: -3.914128303527832
    5. '1' → logprob: -4.039128303527832
    6. '[' → logprob: -4.664128303527832
    7. '
' → logprob: -4.664128303527832
    8. ' ' → logprob: -5.289128303527832
    9. '#' → logprob: -5.414128303527832
    10. 'removed' → logprob: -5.914128303527832

Token 1148: ' indices' (ID: 30378)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8015498518943787
    2. 'result' → logprob: -1.6765499114990234
    3. 'positions' → logprob: -2.5515499114990234
    4. '[]' → logprob: -2.8015499114990234
    5. ' current' → logprob: -3.3015499114990234
    6. '[current' → logprob: -3.4265499114990234
    7. '[' → logprob: -3.8015499114990234
    8. '```' → logprob: -4.176549911499023
    9. 'indices' → logprob: -4.551549911499023
    10. '0' → logprob: -4.551549911499023

Token 1149: ' non' (ID: 2893)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.44838955998420715
    2. ' rest' → logprob: -1.6983895301818848
    3. '_rest' → logprob: -2.4483895301818848
    4. 'util' → logprob: -3.1983895301818848
    5. '_used' → logprob: -5.198389530181885
    6. '_' → logprob: -5.323389530181885
    7. 'ret' → logprob: -5.323389530181885
    8. '```' → logprob: -5.323389530181885
    9. '_util' → logprob: -5.448389530181885
    10. 'used' → logprob: -5.448389530181885

Token 1150: ' visit' (ID: 4030)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.5487136840820312
    2. 'ret' → logprob: -1.6737136840820312
    3. 'trait' → logprob: -2.9237136840820312
    4. 'tri' → logprob: -3.1737136840820312
    5. 'used' → logprob: -3.6737136840820312
    6. 'tr' → logprob: -3.6737136840820312
    7. 'sup' → logprob: -4.173713684082031
    8. ' retir' → logprob: -4.673713684082031
    9. 'cho' → logprob: -4.798713684082031
    10. 'rem' → logprob: -4.923713684082031

Token 1151: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.4478311836719513
    2. 's' → logprob: -2.072831153869629
    3. '   ' → logprob: -3.197831153869629
    4. 'ion' → logprob: -3.197831153869629
    5. 'es' → logprob: -3.447831153869629
    6. ']' → logprob: -4.072831153869629
    7. 'nées' → logprob: -4.072831153869629
    8. 'ées' → logprob: -4.447831153869629
    9. 'nés' → logprob: -4.572831153869629
    10. '```' → logprob: -4.697831153869629

Token 1152: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45962366461753845
    2. ' =' → logprob: -2.2096235752105713
    3. '=' → logprob: -2.7096235752105713
    4. 'rest' → logprob: -3.2096235752105713
    5. '```' → logprob: -3.7096235752105713
    6. 's' → logprob: -3.8346235752105713
    7. 'for' → logprob: -3.9596235752105713
    8. 'from' → logprob: -4.58462381362915
    9. ' rest' → logprob: -4.83462381362915
    10. '
' → logprob: -5.20962381362915

Token 1153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5677931308746338
    2. 'rest' → logprob: -0.9427931308746338
    3. 'remaining' → logprob: -4.192792892456055
    4. ' rest' → logprob: -4.192792892456055
    5. 'suffix' → logprob: -5.442792892456055
    6. 'reste' → logprob: -6.442792892456055
    7. ' remainder' → logprob: -6.692792892456055
    8. 'rem' → logprob: -7.192792892456055
    9. 'tail' → logprob: -7.192792892456055
    10. ' remaining' → logprob: -7.192792892456055

Token 1154: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5590413212776184
    2. 'rest' → logprob: -0.9340413212776184
    3. 'remaining' → logprob: -4.184041500091553
    4. 'suffix' → logprob: -5.309041500091553
    5. ' rest' → logprob: -5.434041500091553
    6. 'reste' → logprob: -6.059041500091553
    7. 'rem' → logprob: -6.559041500091553
    8. 'tail' → logprob: -6.684041500091553
    9. 's' → logprob: -7.184041500091553
    10. ' remainder' → logprob: -7.434041500091553

Token 1155: ' On' (ID: 2160)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.32753846049308777
    2. 'used' → logprob: -2.20253849029541
    3. 'remaining' → logprob: -2.82753849029541
    4. '   ' → logprob: -3.20253849029541
    5. 'suffix' → logprob: -4.20253849029541
    6. 'visited' → logprob: -4.32753849029541
    7. ' rest' → logprob: -5.07753849029541
    8. 'indices' → logprob: -5.32753849029541
    9. 'reste' → logprob: -5.45253849029541
    10. 's' → logprob: -5.57753849029541

Token 1156: ' doit' (ID: 21822)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8249208927154541
    2. 'continue' → logprob: -1.699920892715454
    3. 'reste' → logprob: -1.824920892715454
    4. 'rest' → logprob: -2.324920892715454
    5. 'aj' → logprob: -3.324920892715454
    6. '#' → logprob: -3.324920892715454
    7. 'continu' → logprob: -4.324920654296875
    8. 'contin' → logprob: -5.699920654296875
    9. 'pour' → logprob: -5.699920654296875
    10. 're' → logprob: -5.949920654296875

Token 1157: ' reconstru' (ID: 108053)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.1380367279052734
    2. 'contin' → logprob: -1.3880367279052734
    3. '#' → logprob: -2.1380367279052734
    4. 'for' → logprob: -2.8880367279052734
    5. 'continue' → logprob: -3.0130367279052734
    6. 'rem' → logprob: -3.2630367279052734
    7. 'g' → logprob: -3.3880367279052734
    8. '   ' → logprob: -3.6380367279052734
    9. '```' → logprob: -4.388036727905273
    10. 're' → logprob: -4.888036727905273

Token 1158: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -1.3208009004592896
    2. 'er' → logprob: -1.6958009004592896
    3. '   ' → logprob: -1.6958009004592896
    4. 'érer' → logprob: -2.07080078125
    5. 's' → logprob: -2.69580078125
    6. '       ' → logprob: -3.44580078125
    7. 'cter' → logprob: -4.19580078125
    8. 'ction' → logprob: -4.19580078125
    9. 're' → logprob: -4.32080078125
    10. 'tion' → logprob: -4.82080078125

Token 1159: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8685133457183838
    2. 's' → logprob: -1.7435133457183838
    3. 'rest' → logprob: -1.9935133457183838
    4. 'la' → logprob: -2.118513345718384
    5. ' le' → logprob: -2.993513345718384
    6. ' s' → logprob: -3.118513345718384
    7. ' la' → logprob: -4.118513107299805
    8. ' rest' → logprob: -4.243513107299805
    9. '```' → logprob: -4.868513107299805
    10. 'remaining' → logprob: -5.868513107299805

Token 1160: ' suffix' (ID: 43412)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.42378976941108704
    2. 'reste' → logprob: -1.4237897396087646
    3. 's' → logprob: -2.7987897396087646
    4. 'result' → logprob: -4.048789978027344
    5. 'suffix' → logprob: -4.298789978027344
    6. '```' → logprob: -5.923789978027344
    7. 'remaining' → logprob: -6.298789978027344
    8. ' reste' → logprob: -6.548789978027344
    9. ' rest' → logprob: -6.673789978027344
    10. 're' → logprob: -7.048789978027344

Token 1161: 'e' (ID: 68)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5098565816879272
    2. 'e' → logprob: -1.1348565816879272
    3. ' _' → logprob: -4.134856700897217
    4. '_' → logprob: -4.134856700897217
    5. '_rest' → logprob: -5.384856700897217
    6. '   ' → logprob: -5.509856700897217
    7. 'es' → logprob: -5.634856700897217
    8. '_suffix' → logprob: -5.634856700897217
    9. 'ixe' → logprob: -6.009856700897217
    10. '=' → logprob: -6.134856700897217

Token 1162: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6351026296615601
    2. 'rest' → logprob: -1.01010262966156
    3. ' =' → logprob: -2.8851027488708496
    4. 'suffix' → logprob: -3.8851027488708496
    5. 's' → logprob: -5.38510274887085
    6. '=' → logprob: -5.51010274887085
    7. ' +=' → logprob: -5.63510274887085
    8. ' rest' → logprob: -5.76010274887085
    9. '```' → logprob: -5.76010274887085
    10. '+=' → logprob: -6.01010274887085

Token 1163: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9425902962684631
    2. '[s' → logprob: -1.3175902366638184
    3. '[i' → logprob: -1.3175902366638184
    4. 'i' → logprob: -3.9425902366638184
    5. ' s' → logprob: -4.192590236663818
    6. '   ' → logprob: -4.567590236663818
    7. '```' → logprob: -4.567590236663818
    8. '[' → logprob: -5.692590236663818
    9. ' i' → logprob: -6.192590236663818
    10. '[pos' → logprob: -6.442590236663818

Token 1164: ' lettres' (ID: 101234)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.3247534036636353
    2. 'i' → logprob: -2.1997532844543457
    3. 'positions' → logprob: -2.1997532844543457
    4. ' for' → logprob: -2.4497532844543457
    5. 'pos' → logprob: -2.9497532844543457
    6. 'car' → logprob: -3.0747532844543457
    7. 'for' → logprob: -3.0747532844543457
    8. ' indices' → logprob: -3.1997532844543457
    9. 'c' → logprob: -3.5747532844543457
    10. 'rest' → logprob: -3.9497532844543457

Token 1165: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5454900860786438
    2. '=' → logprob: -1.795490026473999
    3. 'rest' → logprob: -2.545490026473999
    4. '_rest' → logprob: -3.045490026473999
    5. '   ' → logprob: -3.920490026473999
    6. ' rest' → logprob: -4.045490264892578
    7. '[' → logprob: -4.045490264892578
    8. '[current' → logprob: -4.295490264892578
    9. '```' → logprob: -4.295490264892578
    10. '=[' → logprob: -5.045490264892578

Token 1166: ' ne' (ID: 453)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7245586514472961
    2. ' n' → logprob: -0.9745586514472961
    3. 'ont' → logprob: -3.2245585918426514
    4. 'su' → logprob: -3.7245585918426514
    5. 'n't' → logprob: -4.5995588302612305
    6. '```' → logprob: -4.8495588302612305
    7. '#' → logprob: -5.0995588302612305
    8. 's' → logprob: -5.2245588302612305
    9. ' restent' → logprob: -5.2245588302612305
    10. 'éta' → logprob: -5.2245588302612305

Token 1167: ' sont' (ID: 5242)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.6933676600456238
    2. 's' → logprob: -0.8183676600456238
    3. 'pas' → logprob: -3.4433677196502686
    4. 'avaient' → logprob: -4.6933674812316895
    5. 'app' → logprob: -4.9433674812316895
    6. 'éta' → logprob: -5.6933674812316895
    7. '```' → logprob: -6.0683674812316895
    8. 'in' → logprob: -6.8183674812316895
    9. 'for' → logprob: -7.0683674812316895
    10. '#' → logprob: -7.3183674812316895

Token 1168: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.029668452218174934
    2. ' pas' → logprob: -3.9046685695648193
    3. 'plus' → logprob: -4.90466833114624
    4. '```' → logprob: -7.15466833114624
    5. ' plus' → logprob: -7.90466833114624
    6. 'dans' → logprob: -8.904668807983398
    7. 'current' → logprob: -9.404668807983398
    8. '#' → logprob: -9.654668807983398
    9. 'for' → logprob: -10.529668807983398
    10. 'already' → logprob: -11.029668807983398

Token 1169: ' dans' (ID: 2671)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.9739847183227539
    2. 'dans' → logprob: -1.348984718322754
    3. 'util' → logprob: -2.223984718322754
    4. '```' → logprob: -2.848984718322754
    5. 'used' → logprob: -3.348984718322754
    6. 'ret' → logprob: -3.473984718322754
    7. 'prés' → logprob: -4.348984718322754
    8. 'cho' → logprob: -4.348984718322754
    9. 'current' → logprob: -4.473984718322754
    10. 'already' → logprob: -4.848984718322754

Token 1170: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04354589805006981
    2. 'positions' → logprob: -3.793545961380005
    3. 's' → logprob: -4.418545722961426
    4. ' result' → logprob: -6.168545722961426
    5. '```' → logprob: -6.418545722961426
    6. 'current' → logprob: -6.418545722961426
    7. 'removed' → logprob: -6.668545722961426
    8. 'la' → logprob: -7.668545722961426
    9. ' s' → logprob: -8.793545722961426
    10. 'le' → logprob: -9.043545722961426

Token 1171: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1475169658660889
    2. ' =' → logprob: -1.2725169658660889
    3. 'rest' → logprob: -2.147516965866089
    4. ' rest' → logprob: -2.647516965866089
    5. 's' → logprob: -3.272516965866089
    6. '
' → logprob: -3.897516965866089
    7. 'remaining' → logprob: -4.022517204284668
    8. ' s' → logprob: -4.272517204284668
    9. 'suffix' → logprob: -4.272517204284668
    10. 'result' → logprob: -4.272517204284668

Token 1172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07789648324251175
    2. 'rest' → logprob: -2.8278965950012207
    3. ' rest' → logprob: -5.327896595001221
    4. 'suffix' → logprob: -5.577896595001221
    5. 'remaining' → logprob: -5.952896595001221
    6. 'reste' → logprob: -7.077896595001221
    7. ' suffix' → logprob: -7.327896595001221
    8. ' remaining' → logprob: -7.702896595001221
    9. '```' → logprob: -8.077896118164062
    10. ' remainder' → logprob: -8.327896118164062

Token 1173: ' #' (ID: 1069)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.24952609837055206
    2. '   ' → logprob: -2.624526023864746
    3. 'remaining' → logprob: -2.999526023864746
    4. 'used' → logprob: -3.374526023864746
    5. 'suffix' → logprob: -3.874526023864746
    6. ' rest' → logprob: -3.999526023864746
    7. ' used' → logprob: -5.249526023864746
    8. 'reste' → logprob: -5.499526023864746
    9. ' suffix' → logprob: -5.999526023864746
    10. 'for' → logprob: -6.374526023864746

Token 1174: ' Cependant' (ID: 74480)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.0391284227371216
    2. 'used' → logprob: -1.2891284227371216
    3. '   ' → logprob: -2.039128303527832
    4. 'suffix' → logprob: -2.164128303527832
    5. 'remaining' → logprob: -2.789128303527832
    6. 'visited' → logprob: -3.664128303527832
    7. 'for' → logprob: -5.039128303527832
    8. 'unused' → logprob: -5.039128303527832
    9. 'indices' → logprob: -5.164128303527832
    10. 'reste' → logprob: -6.289128303527832

Token 1175: ',' (ID: 11)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1529091596603394
    2. ' #' → logprob: -1.5279091596603394
    3. '#' → logprob: -1.7779091596603394
    4. ' rest' → logprob: -2.277909278869629
    5. '   ' → logprob: -2.902909278869629
    6. ' on' → logprob: -3.777909278869629
    7. ' la' → logprob: -3.777909278869629
    8. ' for' → logprob: -4.652909278869629
    9. ' current' → logprob: -5.027909278869629
    10. ' reste' → logprob: -5.027909278869629

Token 1176: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5277753472328186
    2. 'for' → logprob: -1.9027752876281738
    3. 'rest' → logprob: -2.527775287628174
    4. 'indices' → logprob: -3.277775287628174
    5. ' for' → logprob: -3.402775287628174
    6. 'current' → logprob: -3.402775287628174
    7. '   ' → logprob: -4.402775287628174
    8. ' #' → logprob: -4.527775287628174
    9. ' rest' → logprob: -4.777775287628174
    10. 'while' → logprob: -4.777775287628174

Token 1177: ' y' (ID: 342)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47150349617004395
    2. 'reste' → logprob: -1.971503496170044
    3. ' reste' → logprob: -2.596503496170044
    4. ' =' → logprob: -2.846503496170044
    5. 'rest' → logprob: -3.221503496170044
    6. 'n' → logprob: -3.846503496170044
    7. 'remaining' → logprob: -4.846503257751465
    8. ' rest' → logprob: -4.971503257751465
    9. '+=' → logprob: -5.346503257751465
    10. 's' → logprob: -5.346503257751465

Token 1178: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39263075590133667
    2. 'man' → logprob: -2.1426308155059814
    3. ' manque' → logprob: -2.5176308155059814
    4. 'n' → logprob: -3.0176308155059814
    5. 'reste' → logprob: -3.5176308155059814
    6. ' a' → logprob: -3.7676308155059814
    7. 'n't' → logprob: -5.142630577087402
    8. ' n' → logprob: -5.142630577087402
    9. ' reste' → logprob: -5.392630577087402
    10. 'rest' → logprob: -6.017630577087402

Token 1179: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.19696106016635895
    2. 'un' → logprob: -1.9469610452651978
    3. 'plus' → logprob: -3.9469611644744873
    4. 'pas' → logprob: -5.196960926055908
    5. 's' → logprob: -6.321960926055908
    6. 'auc' → logprob: -6.446960926055908
    7. '```' → logprob: -6.446960926055908
    8. 'poss' → logprob: -6.696960926055908
    9. 'des' → logprob: -6.821960926055908
    10. 'dans' → logprob: -7.696960926055908

Token 1180: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.5640137195587158
    2. 'pet' → logprob: -1.1890137195587158
    3. 'pb' → logprob: -2.564013719558716
    4. 'problem' → logprob: -4.064013481140137
    5. 'proble' → logprob: -4.314013481140137
    6. 'bug' → logprob: -4.689013481140137
    7. ' problème' → logprob: -6.564013481140137
    8. 'print' → logprob: -7.189013481140137
    9. ' petit' → logprob: -7.189013481140137
    10. ' subtle' → logprob: -7.439013481140137

Token 1181: ' :' (ID: 712)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9321816563606262
    2. ' rest' → logprob: -1.5571815967559814
    3. ' s' → logprob: -2.4321815967559814
    4. '   ' → logprob: -2.4321815967559814
    5. 'rest' → logprob: -2.6821815967559814
    6. ' #' → logprob: -3.4321815967559814
    7. ' =' → logprob: -3.9321815967559814
    8. 's' → logprob: -4.0571818351745605
    9. ':' → logprob: -4.3071818351745605
    10. '```' → logprob: -5.0571818351745605

Token 1182: ' certaines' (ID: 46662)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0447925329208374
    2. 'rest' → logprob: -1.7947925329208374
    3. ' rest' → logprob: -1.9197925329208374
    4. 'indices' → logprob: -2.794792652130127
    5. ' used' → logprob: -3.044792652130127
    6. ' #' → logprob: -3.294792652130127
    7. 'remaining' → logprob: -3.419792652130127
    8. 'for' → logprob: -3.544792652130127
    9. ' for' → logprob: -3.919792652130127
    10. ' indices' → logprob: -4.169792652130127

Token 1183: ' lettres' (ID: 101234)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.8218329548835754
    2. 'positions' → logprob: -1.3218328952789307
    3. ' indices' → logprob: -2.8218328952789307
    4. ' lettres' → logprob: -2.9468328952789307
    5. '#' → logprob: -3.0718328952789307
    6. ' positions' → logprob: -3.4468328952789307
    7. ' caractères' → logprob: -3.6968328952789307
    8. 'car' → logprob: -4.19683313369751
    9. 'lett' → logprob: -4.69683313369751
    10. ' rest' → logprob: -4.94683313369751

Token 1184: ' ont' (ID: 4930)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.3825870752334595
    2. '#' → logprob: -1.7575870752334595
    3. ' rest' → logprob: -2.63258695602417
    4. '```' → logprob: -2.63258695602417
    5. 's' → logprob: -3.00758695602417
    6. 'n' → logprob: -3.00758695602417
    7. 'ont' → logprob: -3.13258695602417
    8. ' restantes' → logprob: -3.63258695602417
    9. '_rest' → logprob: -4.00758695602417
    10. '[' → logprob: -4.25758695602417

Token 1185: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.20391111075878143
    2. 'dé' → logprob: -1.7039110660552979
    3. ' été' → logprob: -6.453911304473877
    4. 'd' → logprob: -8.578910827636719
    5. 'ét' → logprob: -8.578910827636719
    6. ' déjà' → logprob: -8.828910827636719
    7. '```' → logprob: -9.203910827636719
    8. '#' → logprob: -9.578910827636719
    9. 'égal' → logprob: -10.078910827636719
    10. 'pu' → logprob: -10.578910827636719

Token 1186: ' déplac' (ID: 195321)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.45799705386161804
    2. 'cho' → logprob: -1.8329970836639404
    3. 'ret' → logprob: -2.3329970836639404
    4. 'sup' → logprob: -3.7079970836639404
    5. 'plac' → logprob: -4.082996845245361
    6. 'util' → logprob: -4.082996845245361
    7. 'd' → logprob: -4.832996845245361
    8. 'sé' → logprob: -4.832996845245361
    9. '```' → logprob: -4.832996845245361
    10. 'en' → logprob: -4.832996845245361

Token 1187: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.18105089664459229
    2. 'érées' → logprob: -2.0560507774353027
    3. 'nées' → logprob: -4.181050777435303
    4. 'onnées' → logprob: -5.181050777435303
    5. 'és' → logprob: -5.431050777435303
    6. 'é' → logprob: -5.931050777435303
    7. 'isées' → logprob: -6.181050777435303
    8. 's' → logprob: -6.556050777435303
    9. '   ' → logprob: -6.806050777435303
    10. 'es' → logprob: -7.181050777435303

Token 1188: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1535216569900513
    2. ' rest' → logprob: -2.2785215377807617
    3. ',' → logprob: -2.6535215377807617
    4. '```' → logprob: -2.6535215377807617
    5. 'rest' → logprob: -2.7785215377807617
    6. '_rest' → logprob: -3.0285215377807617
    7. '#' → logprob: -3.0285215377807617
    8. ' =' → logprob: -3.1535215377807617
    9. '[' → logprob: -3.7785215377807617
    10. 's' → logprob: -3.9035215377807617

Token 1189: ' pas' (ID: 2173)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -1.2582710981369019
    2. 'pas' → logprob: -1.6332710981369019
    3. '#' → logprob: -1.7582710981369019
    4. ' pas' → logprob: -3.3832712173461914
    5. 'rest' → logprob: -3.3832712173461914
    6. ' rest' → logprob: -3.5082712173461914
    7. 's' → logprob: -3.7582712173461914
    8. 'leurs' → logprob: -3.8832712173461914
    9. 'leur' → logprob: -4.008271217346191
    10. 'non' → logprob: -4.133271217346191

Token 1190: ' supprim' (ID: 142986)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prés' → logprob: -1.184220790863037
    2. 'sup' → logprob: -1.809220790863037
    3. 'mod' → logprob: -2.184220790863037
    4. 'ret' → logprob: -2.684220790863037
    5. 'dans' → logprob: -2.809220790863037
    6. 'util' → logprob: -3.309220790863037
    7. 'enc' → logprob: -3.309220790863037
    8. 'en' → logprob: -3.434220790863037
    9. 'explicit' → logprob: -3.434220790863037
    10. 'eff' → logprob: -4.184220790863037

Token 1191: 'ées' (ID: 5161)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1946070194244385
    2. 'ées' → logprob: -1.8196070194244385
    3. 'from' → logprob: -2.5696070194244385
    4. 'és' → logprob: -2.8196070194244385
    5. 'é' → logprob: -3.3196070194244385
    6. 'e' → logprob: -3.3196070194244385
    7. 'def' → logprob: -3.4446070194244385
    8. ' s' → logprob: -3.5696070194244385
    9. '   ' → logprob: -3.5696070194244385
    10. 'de' → logprob: -3.6946070194244385

Token 1192: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3521170616149902
    2. '#' → logprob: -1.9771170616149902
    3. ' =' → logprob: -1.9771170616149902
    4. '```' → logprob: -2.1021170616149902
    5. ',' → logprob: -3.1021170616149902
    6. '.' → logprob: -3.2271170616149902
    7. ' rest' → logprob: -3.4771170616149902
    8. ' s' → logprob: -3.7271170616149902
    9. 's' → logprob: -3.7271170616149902
    10. 'from' → logprob: -3.9771170616149902

Token 1193: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17685727775096893
    2. ' s' → logprob: -1.9268572330474854
    3. ' la' → logprob: -4.5518574714660645
    4. 'la' → logprob: -5.3018574714660645
    5. '```' → logprob: -7.3018574714660645
    6. 'l' → logprob: -9.051856994628906
    7. ' ' → logprob: -10.176856994628906
    8. '`' → logprob: -10.301856994628906
    9. '`s' → logprob: -10.301856994628906
    10. ' ' → logprob: -10.676856994628906

Token 1194: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.368988275527954
    2. '```' → logprob: -1.993988275527954
    3. ',' → logprob: -2.243988275527954
    4. '   ' → logprob: -2.618988275527954
    5. '.' → logprob: -2.743988275527954
    6. '
' → logprob: -2.993988275527954
    7. '[' → logprob: -3.368988275527954
    8. 'rest' → logprob: -3.493988275527954
    9. '_rest' → logprob: -3.493988275527954
    10. '[current' → logprob: -3.618988275527954

Token 1195: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28593993186950684
    2. '   ' → logprob: -1.5359399318695068
    3. ' #' → logprob: -4.535940170288086
    4. '```' → logprob: -4.660940170288086
    5. 's' → logprob: -5.660940170288086
    6. ',' → logprob: -6.160940170288086
    7. 'rest' → logprob: -6.535940170288086
    8. ' s' → logprob: -7.285940170288086
    9. ' ' → logprob: -7.285940170288086
    10. '.' → logprob: -7.535940170288086

Token 1196: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5876285433769226
    2. '   ' → logprob: -0.9626285433769226
    3. ' #' → logprob: -3.9626286029815674
    4. 'rest' → logprob: -4.587628364562988
    5. ' rest' → logprob: -4.587628364562988
    6. ',' → logprob: -5.712628364562988
    7. '```' → logprob: -6.087628364562988
    8. 's' → logprob: -6.462628364562988
    9. 'for' → logprob: -6.587628364562988
    10. ' ' → logprob: -6.587628364562988

Token 1197: ' Or' (ID: 2604)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21095328032970428
    2. '   ' → logprob: -2.2109532356262207
    3. 'rest' → logprob: -2.8359532356262207
    4. '```' → logprob: -5.335953235626221
    5. ' rest' → logprob: -5.585953235626221
    6. ' #' → logprob: -5.960953235626221
    7. 'reste' → logprob: -6.085953235626221
    8. 'suffix' → logprob: -6.585953235626221
    9. 'for' → logprob: -6.835953235626221
    10. 'remaining' → logprob: -6.960953235626221

Token 1198: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0000815391540527
    2. ' on' → logprob: -1.8750815391540527
    3. 'on' → logprob: -2.0000815391540527
    4. ' #' → logprob: -3.0000815391540527
    5. 'current' → logprob: -3.5000815391540527
    6. ' s' → logprob: -3.5000815391540527
    7. ' il' → logprob: -3.8750815391540527
    8. 'la' → logprob: -3.8750815391540527
    9. ' la' → logprob: -4.000081539154053
    10. 'il' → logprob: -4.125081539154053

Token 1199: ' a' (ID: 261)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1097054481506348
    2. '#' → logprob: -1.6097054481506348
    3. 'n' → logprob: -2.3597054481506348
    4. ' =' → logprob: -2.6097054481506348
    5. 'do' → logprob: -2.8597054481506348
    6. '=' → logprob: -3.3597054481506348
    7. ' n' → logprob: -3.3597054481506348
    8. ' continue' → logprob: -3.4847054481506348
    9. 'dev' → logprob: -4.359705448150635
    10. 'ne' → logprob: -4.359705448150635

Token 1200: ' fait' (ID: 7473)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -1.2175946235656738
    2. 'just' → logprob: -2.217594623565674
    3. 'mar' → logprob: -2.217594623565674
    4. 'sup' → logprob: -2.842594623565674
    5. 'maint' → logprob: -2.842594623565674
    6. 'con' → logprob: -3.092594623565674
    7. 'pas' → logprob: -3.592594623565674
    8. 'continu' → logprob: -3.717594623565674
    9. 'already' → logprob: -3.842594623565674
    10. 'ret' → logprob: -3.967594623565674

Token 1201: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.4180073142051697
    2. '```' → logprob: -2.1680073738098145
    3. 'le' → logprob: -3.2930073738098145
    4. 'un' → logprob: -3.4180073738098145
    5. 'cela' → logprob: -3.7930073738098145
    6. 'l' → logprob: -3.7930073738098145
    7. 's' → logprob: -3.9180073738098145
    8. 'la' → logprob: -4.0430073738098145
    9. 'current' → logprob: -4.5430073738098145
    10. '#' → logprob: -4.5430073738098145

Token 1202: ' suppression' (ID: 78014)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.5537376403808594
    2. 'rem' → logprob: -2.3037376403808594
    3. 're' → logprob: -2.5537376403808594
    4. 'supp' → logprob: -2.6787376403808594
    5. 'man' → logprob: -3.0537376403808594
    6. '#' → logprob: -3.0537376403808594
    7. 'liste' → logprob: -3.4287376403808594
    8. 'mise' → logprob: -3.4287376403808594
    9. 'selection' → logprob: -3.5537376403808594
    10. 'partition' → logprob: -3.6787376403808594

Token 1203: ' virtuelle' (ID: 148533)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8914614915847778
    2. ' rest' → logprob: -1.6414614915847778
    3. 'rest' → logprob: -2.5164613723754883
    4. 's' → logprob: -2.6414613723754883
    5. ' restante' → logprob: -2.8914613723754883
    6. ' s' → logprob: -3.1414613723754883
    7. ' +=' → logprob: -3.5164613723754883
    8. '   ' → logprob: -3.7664613723754883
    9. '#' → logprob: -4.266461372375488
    10. '_rest' → logprob: -4.766461372375488

Token 1204: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.82794189453125
    2. ' rest' → logprob: -2.20294189453125
    3. ' =' → logprob: -2.32794189453125
    4. 's' → logprob: -3.07794189453125
    5. 'rest' → logprob: -3.20294189453125
    6. ' +=' → logprob: -3.45294189453125
    7. 'for' → logprob: -3.45294189453125
    8. ' s' → logprob: -3.57794189453125
    9. ' #' → logprob: -3.82794189453125
    10. ' for' → logprob: -3.95294189453125

Token 1205: ' avanç' (ID: 70203)
  Prédit: 'ignor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ignor' → logprob: -0.6179161667823792
    2. 'continu' → logprob: -2.1179161071777344
    3. 's' → logprob: -2.8679161071777344
    4. 'cré' → logprob: -2.8679161071777344
    5. 'mar' → logprob: -3.3679161071777344
    6. 'g' → logprob: -3.7429161071777344
    7. 'util' → logprob: -4.117916107177734
    8. '```' → logprob: -4.242916107177734
    9. 'les' → logprob: -4.617916107177734
    10. 'rem' → logprob: -4.742916107177734

Token 1206: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.2544543445110321
    2. 'çant' → logprob: -1.5044543743133545
    3. '   ' → logprob: -6.754454135894775
    4. 'c' → logprob: -8.004454612731934
    5. 'ç' → logprob: -8.254454612731934
    6. 'e' → logprob: -9.379454612731934
    7. '=' → logprob: -9.629454612731934
    8. 'current' → logprob: -9.629454612731934
    9. 'anç' → logprob: -9.754454612731934
    10. 'er' → logprob: -10.004454612731934

Token 1207: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.13721361756324768
    2. ' current' → logprob: -2.512213706970215
    3. '```' → logprob: -4.637213706970215
    4. '`' → logprob: -5.387213706970215
    5. '   ' → logprob: -5.387213706970215
    6. 'le' → logprob: -5.637213706970215
    7. 'l' → logprob: -5.887213706970215
    8. ',' → logprob: -6.012213706970215
    9. 'la' → logprob: -6.012213706970215
    10. 'de' → logprob: -6.137213706970215

Token 1208: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.3663626305060461e-05
    2. 'pos' → logprob: -11.62501335144043
    3. '_' → logprob: -12.87501335144043
    4. 'Pos' → logprob: -13.75001335144043
    5. '```' → logprob: -15.62501335144043
    6. ' _' → logprob: -16.00001335144043
    7. ')' → logprob: -16.25001335144043
    8. '_position' → logprob: -16.25001335144043
    9. '_val' → logprob: -16.75001335144043
    10. '   ' → logprob: -16.75001335144043

Token 1209: ' pour' (ID: 1930)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.6668634414672852
    2. 'for' → logprob: -1.9168634414672852
    3. ' s' → logprob: -2.291863441467285
    4. ' rest' → logprob: -2.291863441467285
    5. '   ' → logprob: -2.416863441467285
    6. 's' → logprob: -2.416863441467285
    7. ' for' → logprob: -2.666863441467285
    8. 'rest' → logprob: -3.041863441467285
    9. ' result' → logprob: -3.416863441467285
    10. ' +' → logprob: -3.416863441467285

Token 1210: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.3132747411727905
    2. 's' → logprob: -2.43827486038208
    3. 'les' → logprob: -2.43827486038208
    4. 'prendre' → logprob: -2.43827486038208
    5. 'current' → logprob: -2.56327486038208
    6. 'skip' → logprob: -3.56327486038208
    7. '```' → logprob: -3.68827486038208
    8. 'l' → logprob: -3.68827486038208
    9. '#' → logprob: -3.93827486038208
    10. 'le' → logprob: -4.18827486038208

Token 1211: ' logique' (ID: 115350)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.3995060622692108
    2. ' suite' → logprob: -2.024506092071533
    3. 'part' → logprob: -3.399506092071533
    4. 're' → logprob: -3.524506092071533
    5. 'quel' → logprob: -4.524506092071533
    6. 'lett' → logprob: -4.774506092071533
    7. 'contin' → logprob: -4.899506092071533
    8. 'while' → logprob: -5.024506092071533
    9. 'quelle' → logprob: -5.274506092071533
    10. 'gestion' → logprob: -5.274506092071533

Token 1212: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3710912764072418
    2. 'rest' → logprob: -2.371091365814209
    3. ' rest' → logprob: -2.996091365814209
    4. 's' → logprob: -3.121091365814209
    5. ' s' → logprob: -3.871091365814209
    6. 'for' → logprob: -3.871091365814209
    7. ' for' → logprob: -4.121091365814209
    8. '#' → logprob: -4.121091365814209
    9. '```' → logprob: -4.871091365814209
    10. 'result' → logprob: -5.246091365814209

Token 1213: ' ce' (ID: 2357)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5182320475578308
    2. ' s' → logprob: -2.2682321071624756
    3. ' #' → logprob: -2.3932321071624756
    4. ' rest' → logprob: -2.7682321071624756
    5. 'rest' → logprob: -3.5182321071624756
    6. '   ' → logprob: -3.6432321071624756
    7. ' mais' → logprob: -3.8932321071624756
    8. ' while' → logprob: -4.5182318687438965
    9. '       ' → logprob: -4.7682318687438965
    10. 'while' → logprob: -4.8932318687438965

Token 1214: ' qui' (ID: 2780)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0907695293426514
    2. ' n' → logprob: -1.4657695293426514
    3. 'n' → logprob: -2.2157695293426514
    4. '```' → logprob: -2.2157695293426514
    5. ''' → logprob: -3.2157695293426514
    6. '`' → logprob: -3.4657695293426514
    7. 's' → logprob: -3.5907695293426514
    8. '.' → logprob: -3.9657695293426514
    9. ' =' → logprob: -4.2157697677612305
    10. '=' → logprob: -4.3407697677612305

Token 1215: ' correspond' (ID: 11095)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8996480107307434
    2. '#' → logprob: -1.5246479511260986
    3. 'reste' → logprob: -2.3996479511260986
    4. '```' → logprob: -2.6496479511260986
    5. ' signifie' → logprob: -2.7746479511260986
    6. ' continue' → logprob: -3.3996479511260986
    7. 'impl' → logprob: -3.6496479511260986
    8. ' #' → logprob: -3.8996479511260986
    9. 'sign' → logprob: -4.274648189544678
    10. 've' → logprob: -4.524648189544678

Token 1216: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.31167685985565186
    2. ' à' → logprob: -1.5616768598556519
    3. '```' → logprob: -3.1866769790649414
    4. ''à' → logprob: -5.686676979064941
    5. '   ' → logprob: -5.936676979064941
    6. 'au' → logprob: -6.186676979064941
    7. 's' → logprob: -6.311676979064941
    8. ' to' → logprob: -6.936676979064941
    9. 'to' → logprob: -6.936676979064941
    10. '#' → logprob: -7.186676979064941

Token 1217: ' supprimer' (ID: 119553)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.1551305055618286
    2. 'les' → logprob: -1.2801305055618286
    3. '```' → logprob: -2.530130386352539
    4. 'l' → logprob: -2.780130386352539
    5. 'le' → logprob: -3.030130386352539
    6. 'une' → logprob: -3.030130386352539
    7. 's' → logprob: -3.030130386352539
    8. 'ce' → logprob: -3.780130386352539
    9. '#' → logprob: -3.780130386352539
    10. 'ign' → logprob: -4.280130386352539

Token 1218: ' un' (ID: 537)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.23872528970241547
    2. 't' → logprob: -2.488725185394287
    3. '```' → logprob: -2.988725185394287
    4. ' les' → logprob: -4.113725185394287
    5. 'la' → logprob: -4.238725185394287
    6. 'tout' → logprob: -4.363725185394287
    7. 'ces' → logprob: -5.238725185394287
    8. 'le' → logprob: -5.863725185394287
    9. '#' → logprob: -5.988725185394287
    10. 'leurs' → logprob: -6.113725185394287

Token 1219: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.7046179175376892
    2. 'car' → logprob: -1.579617977142334
    3. 'élé' → logprob: -2.079617977142334
    4. '```' → logprob: -3.079617977142334
    5. 'e' → logprob: -3.454617977142334
    6. ' caract' → logprob: -4.079617977142334
    7. ' espace' → logprob: -4.454617977142334
    8. 's' → logprob: -5.079617977142334
    9. ' morceau' → logprob: -5.079617977142334
    10. ' s' → logprob: -5.329617977142334

Token 1220: ' dans' (ID: 2671)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -1.5654680728912354
    2. '   ' → logprob: -1.8154680728912354
    3. '[' → logprob: -2.3154680728912354
    4. '_rest' → logprob: -2.6904680728912354
    5. 's' → logprob: -2.8154680728912354
    6. 'from' → logprob: -2.8154680728912354
    7. ' restant' → logprob: -2.8154680728912354
    8. '```' → logprob: -3.1904680728912354
    9. 'rest' → logprob: -3.3154680728912354
    10. ' restante' → logprob: -3.4404680728912354

Token 1221: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.70006263256073
    2. ' s' → logprob: -1.57506263256073
    3. 'la' → logprob: -1.57506263256073
    4. ' la' → logprob: -2.8250627517700195
    5. 'le' → logprob: -4.7000627517700195
    6. 'l' → logprob: -4.7000627517700195
    7. '```' → logprob: -5.2000627517700195
    8. ' ' → logprob: -6.4500627517700195
    9. ' le' → logprob: -6.5750627517700195
    10. ' l' → logprob: -7.3250627517700195

Token 1222: ' sur' (ID: 1512)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.4758310616016388
    2. 's' → logprob: -1.4758310317993164
    3. 'liste' → logprob: -2.9758310317993164
    4. '```' → logprob: -3.7258310317993164
    5. 'suite' → logprob: -4.600831031799316
    6. ' chaîne' → logprob: -4.725831031799316
    7. '#' → logprob: -4.975831031799316
    8. ' s' → logprob: -5.100831031799316
    9. 'string' → logprob: -5.100831031799316
    10. 'cha' → logprob: -5.350831031799316

Token 1223: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.960204005241394
    2. 'face' → logprob: -0.960204005241394
    3. '   ' → logprob: -2.8352041244506836
    4. 'plus' → logprob: -3.2102041244506836
    5. ' s' → logprob: -3.7102041244506836
    6. 'r' → logprob: -3.7102041244506836
    7. 'br' → logprob: -4.335204124450684
    8. ' ' → logprob: -4.460204124450684
    9. 'place' → logprob: -4.585204124450684
    10. 'b' → logprob: -5.460204124450684

Token 1224: ' mentale' (ID: 116336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3691615164279938
    2. 's' → logprob: -2.744161605834961
    3. 'rest' → logprob: -3.119161605834961
    4. ' =' → logprob: -3.619161605834961
    5. '[s' → logprob: -3.744161605834961
    6. ' rest' → logprob: -3.744161605834961
    7. '```' → logprob: -3.744161605834961
    8. '#' → logprob: -3.994161605834961
    9. ' s' → logprob: -4.119161605834961
    10. ' restante' → logprob: -4.494161605834961

Token 1225: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.146452859044075
    2. 's' → logprob: -2.7714529037475586
    3. 'rest' → logprob: -4.271452903747559
    4. '#' → logprob: -4.396452903747559
    5. ' rest' → logprob: -4.646452903747559
    6. ' s' → logprob: -4.896452903747559
    7. '```' → logprob: -5.021452903747559
    8. ',' → logprob: -5.896452903747559
    9. 'from' → logprob: -6.021452903747559
    10. ' =' → logprob: -6.021452903747559

Token 1226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035784464329481125
    2. 'rest' → logprob: -3.7857844829559326
    3. 'suffix' → logprob: -4.7857842445373535
    4. '#' → logprob: -6.7857842445373535
    5. 'remaining' → logprob: -6.9107842445373535
    6. 's' → logprob: -7.1607842445373535
    7. '```' → logprob: -8.410784721374512
    8. 'reste' → logprob: -8.785784721374512
    9. ' rest' → logprob: -8.910784721374512
    10. ' suffix' → logprob: -9.035784721374512

Token 1227: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04165437072515488
    2. 'rest' → logprob: -3.541654348373413
    3. 'suffix' → logprob: -5.291654586791992
    4. '#' (adapté à ' #') → logprob: -5.666654586791992
    5. 'remaining' → logprob: -6.666654586791992
    6. 'reste' → logprob: -7.416654586791992
    7. 's' → logprob: -7.791654586791992
    8. '```' → logprob: -8.666654586791992
    9. 'for' → logprob: -8.791654586791992
    10. 'tail' → logprob: -8.791654586791992

Token 1228: ' Donc' (ID: 88837)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6272525191307068
    2. 'suffix' → logprob: -1.8772525787353516
    3. '   ' → logprob: -2.2522525787353516
    4. '#' → logprob: -2.2522525787353516
    5. 'remaining' → logprob: -2.7522525787353516
    6. 'reste' → logprob: -4.877252578735352
    7. ' rest' → logprob: -5.252252578735352
    8. 'used' → logprob: -5.377252578735352
    9. ' suffix' → logprob: -5.627252578735352
    10. 'indices' → logprob: -5.877252578735352

Token 1229: ' en' (ID: 469)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2314010858535767
    2. 'rest' → logprob: -1.2314010858535767
    3. '   ' → logprob: -2.231400966644287
    4. 'reste' → logprob: -2.481400966644287
    5. ' rest' → logprob: -2.606400966644287
    6. ' s' → logprob: -3.606400966644287
    7. 's' → logprob: -3.606400966644287
    8. ' #' → logprob: -3.981400966644287
    9. 'la' → logprob: -4.356400966644287
    10. ' la' → logprob: -4.356400966644287

Token 1230: ' réalité' (ID: 63047)
  Prédit: 'continu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continu' → logprob: -1.0041162967681885
    2. 'fait' → logprob: -2.0041162967681885
    3. '#' → logprob: -2.3791162967681885
    4. 'f' → logprob: -2.3791162967681885
    5. 's' → logprob: -2.3791162967681885
    6. 'for' → logprob: -3.1291162967681885
    7. 'util' → logprob: -4.004116058349609
    8. 'faite' → logprob: -4.254116058349609
    9. 'g' → logprob: -4.379116058349609
    10. 'aj' → logprob: -4.379116058349609

Token 1231: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42207786440849304
    2. ' on' → logprob: -2.1720778942108154
    3. '   ' → logprob: -2.6720778942108154
    4. ' #' → logprob: -3.2970778942108154
    5. ' s' → logprob: -3.5470778942108154
    6. ',' → logprob: -3.6720778942108154
    7. ' rest' → logprob: -3.7970778942108154
    8. ' la' → logprob: -4.672077655792236
    9. 'rest' → logprob: -4.922077655792236
    10. 'on' → logprob: -5.797077655792236

Token 1232: ' les' (ID: 1341)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -1.53288996219635
    2. 'rest' → logprob: -1.53288996219635
    3. ' s' → logprob: -1.65788996219635
    4. '#' → logprob: -1.78288996219635
    5. ' #' → logprob: -3.2828898429870605
    6. ' la' → logprob: -3.4078898429870605
    7. '   ' → logprob: -3.9078898429870605
    8. 's' → logprob: -4.0328898429870605
    9. ' on' → logprob: -4.1578898429870605
    10. 'reste' → logprob: -4.1578898429870605

Token 1233: ' premiers' (ID: 59140)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.8215960264205933
    2. 'indices' → logprob: -1.0715960264205933
    3. 'positions' → logprob: -2.446596145629883
    4. ' rest' → logprob: -3.321596145629883
    5. 's' → logprob: -3.571596145629883
    6. '#' → logprob: -4.071596145629883
    7. 'reste' → logprob: -4.196596145629883
    8. 'car' → logprob: -5.196596145629883
    9. ' indices' → logprob: -5.696596145629883
    10. 'remaining' → logprob: -5.821596145629883

Token 1234: ' current' (ID: 2208)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.2705830335617065
    2. '_' → logprob: -2.145583152770996
    3. 'current' → logprob: -2.395583152770996
    4. ' indices' → logprob: -2.520583152770996
    5. ' current' → logprob: -2.645583152770996
    6. ' rest' → logprob: -3.145583152770996
    7. 'positions' → logprob: -3.270583152770996
    8. 'rest' → logprob: -3.520583152770996
    9. ' _' → logprob: -3.895583152770996
    10. ' ' → logprob: -4.020583152770996

Token 1235: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.4418171455617994e-05
    2. '_' → logprob: -11.375044822692871
    3. ' _' → logprob: -11.625044822692871
    4. '_position' → logprob: -12.125044822692871
    5. '_positions' → logprob: -12.500044822692871
    6. '```' → logprob: -12.875044822692871
    7. 'Pos' → logprob: -13.250044822692871
    8. 'pos' → logprob: -13.375044822692871
    9. '_idx' → logprob: -13.750044822692871
    10. ''_' → logprob: -14.000044822692871

Token 1236: '-le' (ID: 20676)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49843668937683105
    2. ' <' → logprob: -2.998436689376831
    3. '<len' → logprob: -3.123436689376831
    4. 'indices' → logprob: -3.373436689376831
    5. ':' → logprob: -3.498436689376831
    6. 'positions' → logprob: -3.748436689376831
    7. '+' → logprob: -3.998436689376831
    8. '#' → logprob: -4.12343692779541
    9. '```' → logprob: -4.24843692779541
    10. '   ' → logprob: -4.49843692779541

Token 1237: 'tt' (ID: 1037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3327690064907074
    2. 'ng' → logprob: -1.8327690362930298
    3. 't' → logprob: -2.8327689170837402
    4. 'tt' → logprob: -3.7077689170837402
    5. 'ft' → logprob: -4.58276891708374
    6. '=' → logprob: -4.70776891708374
    7. 's' → logprob: -4.83276891708374
    8. 'tter' → logprob: -5.20776891708374
    9. 'vel' → logprob: -6.58276891708374
    10. 'ns' → logprob: -7.20776891708374

Token 1238: 'res' (ID: 430)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08900686353445053
    2. 'tt' → logprob: -3.2140069007873535
    3. 'ttes' → logprob: -4.2140069007873535
    4. 'ters' → logprob: -4.3390069007873535
    5. 's' → logprob: -4.4640069007873535
    6. 'tter' → logprob: -6.3390069007873535
    7. '```' → logprob: -7.0890069007873535
    8. 'trs' → logprob: -7.2140069007873535
    9. 'rs' → logprob: -7.8390069007873535
    10. 'tras' → logprob: -8.339006423950195

Token 1239: ' sont' (ID: 5242)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.1740868091583252
    2. ' rest' → logprob: -1.5490868091583252
    3. 's' → logprob: -2.924086809158325
    4. ' chois' → logprob: -2.924086809158325
    5. '_rest' → logprob: -3.174086809158325
    6. ' retir' → logprob: -3.799086809158325
    7. 'util' → logprob: -3.924086809158325
    8. '#' → logprob: -3.924086809158325
    9. ']' → logprob: -4.049086570739746
    10. '+' → logprob: -4.299086570739746

Token 1240: ' déjà' (ID: 21229)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cons' → logprob: -0.48225781321525574
    2. 'dé' → logprob: -1.1072578430175781
    3. 'virt' → logprob: -5.107257843017578
    4. 't' → logprob: -5.482257843017578
    5. 'effect' → logprob: -5.482257843017578
    6. 'ret' → logprob: -5.482257843017578
    7. 'dés' → logprob: -5.732257843017578
    8. 'sup' → logprob: -5.857257843017578
    9. 'maint' → logprob: -5.982257843017578
    10. 'à' → logprob: -5.982257843017578

Token 1241: ' dans' (ID: 2671)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cons' → logprob: -0.786320686340332
    2. 'trait' → logprob: -1.036320686340332
    3. 'ret' → logprob: -2.661320686340332
    4. '"' → logprob: -4.536320686340332
    5. 'g' → logprob: -4.536320686340332
    6. 'cho' → logprob: -4.661320686340332
    7. 'tri' → logprob: -4.786320686340332
    8. 'sup' → logprob: -4.786320686340332
    9. 'pris' → logprob: -4.786320686340332
    10. 'virt' → logprob: -5.036320686340332

Token 1242: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01453414000570774
    2. ' result' → logprob: -4.264533996582031
    3. 's' → logprob: -8.889533996582031
    4. '```' → logprob: -9.264533996582031
    5. ' s' → logprob: -10.014533996582031
    6. '`' → logprob: -10.514533996582031
    7. 'res' → logprob: -11.514533996582031
    8. 'l' → logprob: -11.639533996582031
    9. ' la' → logprob: -11.764533996582031
    10. 'position' → logprob: -11.764533996582031

Token 1243: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.039292573928833
    2. 'rest' → logprob: -1.539292573928833
    3. 'result' → logprob: -1.789292573928833
    4. 'for' → logprob: -2.414292573928833
    5. ' rest' → logprob: -3.414292573928833
    6. 's' → logprob: -3.414292573928833
    7. '+' → logprob: -3.914292573928833
    8. 'res' → logprob: -3.914292573928833
    9. ' +' → logprob: -4.164292335510254
    10. ' for' → logprob: -4.164292335510254

Token 1244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02034718357026577
    2. 'rest' → logprob: -4.3953471183776855
    3. '```' → logprob: -6.0203471183776855
    4. '#' → logprob: -6.5203471183776855
    5. 's' → logprob: -6.6453471183776855
    6. 'remaining' → logprob: -7.1453471183776855
    7. 'for' → logprob: -8.145347595214844
    8. 'reste' → logprob: -8.395347595214844
    9. ',' → logprob: -8.645347595214844
    10. ' rest' → logprob: -9.145347595214844

Token 1245: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5632150173187256
    2. 'rest' → logprob: -0.9382150173187256
    3. 'reste' → logprob: -4.438215255737305
    4. 'suffix' → logprob: -4.563215255737305
    5. 'remaining' → logprob: -5.688215255737305
    6. 's' → logprob: -5.813215255737305
    7. ' rest' → logprob: -6.188215255737305
    8. '#' (adapté à ' #') → logprob: -6.563215255737305
    9. '```' → logprob: -6.563215255737305
    10. 'for' → logprob: -6.688215255737305

Token 1246: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009654802270233631
    2. 'rest' → logprob: -5.634654998779297
    3. '#' → logprob: -6.009654998779297
    4. 'for' → logprob: -6.509654998779297
    5. 's' → logprob: -7.384654998779297
    6. '```' → logprob: -7.509654998779297
    7. 'remaining' → logprob: -8.634654998779297
    8. 'while' → logprob: -9.134654998779297
    9. ' for' → logprob: -9.134654998779297
    10. 'Rest' → logprob: -9.259654998779297

Token 1247: ' suffix' (ID: 43412)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.19363369047641754
    2. 'rest' → logprob: -2.068633794784546
    3. '#' → logprob: -4.068633556365967
    4. ' reste' → logprob: -4.443633556365967
    5. ' rest' → logprob: -5.193633556365967
    6. 'suffix' → logprob: -5.318633556365967
    7. 're' → logprob: -5.943633556365967
    8. ' suffix' → logprob: -6.568633556365967
    9. ' #' → logprob: -6.943633556365967
    10. 's' → logprob: -6.943633556365967

Token 1248: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06019168347120285
    2. '_suffix' → logprob: -4.060191631317139
    3. 'suffix' → logprob: -5.060191631317139
    4. 'ixe' → logprob: -5.185191631317139
    5. 'rest' → logprob: -5.310191631317139
    6. 'ex' → logprob: -5.685191631317139
    7. 'eux' → logprob: -5.810191631317139
    8. '#' → logprob: -6.185191631317139
    9. '_rest' → logprob: -6.435191631317139
    10. 's' → logprob: -6.560191631317139

Token 1249: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4894345700740814
    2. '=' → logprob: -0.9894345998764038
    3. 's' → logprob: -5.364434719085693
    4. 'rest' → logprob: -5.739434719085693
    5. ' s' → logprob: -6.489434719085693
    6. '```' → logprob: -6.989434719085693
    7. 'est' → logprob: -7.239434719085693
    8. '+' → logprob: -7.239434719085693
    9. '+=' → logprob: -7.489434719085693
    10. ' +=' → logprob: -7.739434719085693

Token 1250: ' donc' (ID: 14206)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1388189196586609
    2. ' s' → logprob: -2.1388189792633057
    3. '   ' → logprob: -4.638818740844727
    4. '    ' → logprob: -7.888818740844727
    5. '       ' → logprob: -8.138818740844727
    6. '```' → logprob: -8.138818740844727
    7. ' ' → logprob: -8.513818740844727
    8. ' simplement' → logprob: -9.013818740844727
    9. ' =' → logprob: -9.138818740844727
    10. 'rest' → logprob: -9.263818740844727

Token 1251: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05444570258259773
    2. ' s' → logprob: -3.304445743560791
    3. '   ' → logprob: -4.179445743560791
    4. '```' → logprob: -7.679445743560791
    5. '       ' → logprob: -9.054445266723633
    6. ' ' → logprob: -9.304445266723633
    7. '    ' → logprob: -9.554445266723633
    8. '     ' → logprob: -10.179445266723633
    9. '  ' → logprob: -10.304445266723633
    10. '`s' → logprob: -10.429445266723633

Token 1252: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -2.8325677703833207e-05
    2. '   ' → logprob: -11.875028610229492
    3. '=current' → logprob: -11.875028610229492
    4. 'current' → logprob: -12.000028610229492
    5. '[' → logprob: -12.500028610229492
    6. ' =' → logprob: -13.375028610229492
    7. ' [' → logprob: -13.500028610229492
    8. '```' → logprob: -13.750028610229492
    9. '(current' → logprob: -15.500028610229492
    10. '	current' → logprob: -16.625028610229492

Token 1253: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.7432603272027336e-06
    2. 'pos' → logprob: -13.500001907348633
    3. 'Pos' → logprob: -15.250001907348633
    4. '_' → logprob: -17.250001907348633
    5. ':' → logprob: -17.500001907348633
    6. '+' → logprob: -17.625001907348633
    7. 'current' → logprob: -18.375001907348633
    8. '```' → logprob: -18.500001907348633
    9. ':]' → logprob: -19.375001907348633
    10. ']' → logprob: -19.500001907348633

Token 1254: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0035206025931984186
    2. ':' → logprob: -5.878520488739014
    3. ':]
' → logprob: -7.878520488739014
    4. ':].' → logprob: -8.753520965576172
    5. ' :]' → logprob: -8.878520965576172
    6. ':],' → logprob: -10.503520965576172
    7. 'current' → logprob: -12.753520965576172
    8. ' :' → logprob: -13.003520965576172
    9. ':]

' → logprob: -13.003520965576172
    10. '[current' → logprob: -13.503520965576172

Token 1255: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6629048585891724
    2. 'result' → logprob: -0.7879048585891724
    3. ' result' → logprob: -3.662904739379883
    4. '```' → logprob: -6.787904739379883
    5. ' +' → logprob: -7.162904739379883
    6. 'for' → logprob: -7.537904739379883
    7. '+' → logprob: -7.537904739379883
    8. '
' → logprob: -8.037904739379883
    9. 'print' → logprob: -8.287904739379883
    10. ' for' → logprob: -9.162904739379883

Token 1256: 'ce' (ID: 400)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017951732501387596
    2. ')
' → logprob: -5.767951965332031
    3. '])' → logprob: -5.767951965332031
    4. ').' → logprob: -6.017951965332031
    5. '),' → logprob: -6.267951965332031
    6. '+' → logprob: -6.392951965332031
    7. '   ' → logprob: -7.267951965332031
    8. 's' → logprob: -7.267951965332031
    9. ']' → logprob: -7.642951965332031
    10. 'sans' → logprob: -8.267951965332031

Token 1257: 'ux' (ID: 1778)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9170929193496704
    2. '[current' → logprob: -1.5420929193496704
    3. '+' → logprob: -2.542092800140381
    4. ':]' → logprob: -2.667092800140381
    5. 'current' → logprob: -2.917092800140381
    6. ')' → logprob: -3.167092800140381
    7. '[' → logprob: -3.292092800140381
    8. ':' → logprob: -3.542092800140381
    9. '])' → logprob: -4.042092800140381
    10. '   ' → logprob: -4.667092800140381

Token 1258: ' restant' (ID: 172358)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.04385810345411301
    2. ']' → logprob: -4.543858051300049
    3. ' rest' → logprob: -4.543858051300049
    4. ')' → logprob: -5.293858051300049
    5. '[' → logprob: -5.543858051300049
    6. 'rest' → logprob: -6.043858051300049
    7. '   ' → logprob: -6.543858051300049
    8. ' restant' → logprob: -6.543858051300049
    9. 'current' → logprob: -6.918858051300049
    10. 'remaining' → logprob: -7.418858051300049

Token 1259: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48233258724212646
    2. '])' → logprob: -1.1073325872421265
    3. ']' → logprob: -3.482332706451416
    4. '+' → logprob: -4.982332706451416
    5. '```' → logprob: -5.982332706451416
    6. ' )' → logprob: -6.107332706451416
    7. '   ' → logprob: -6.232332706451416
    8. ' +' → logprob: -6.232332706451416
    9. '[' → logprob: -6.607332706451416
    10. '`)' → logprob: -6.982332706451416

Token 1260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13844385743141174
    2. 'result' → logprob: -2.263443946838379
    3. '+' → logprob: -4.388443946838379
    4. '```' → logprob: -5.138443946838379
    5. ' +' → logprob: -5.638443946838379
    6. 's' → logprob: -6.763443946838379
    7. 'rest' → logprob: -6.763443946838379
    8. ' result' → logprob: -8.138443946838379
    9. 'for' → logprob: -8.263443946838379
    10. '+
' → logprob: -9.013443946838379

Token 1261: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37948259711265564
    2. 'result' → logprob: -1.254482626914978
    3. 'rest' → logprob: -4.379482746124268
    4. 'for' → logprob: -5.004482746124268
    5. ' result' → logprob: -5.879482746124268
    6. 's' → logprob: -6.254482746124268
    7. 'suffix' → logprob: -6.379482746124268
    8. '```' → logprob: -6.504482746124268
    9. ' for' → logprob: -7.379482746124268
    10. 'remaining' → logprob: -7.629482746124268

Token 1262: ' Par' (ID: 3371)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5418825149536133
    2. '   ' → logprob: -1.0418825149536133
    3. ' result' → logprob: -3.2918825149536133
    4. 'print' → logprob: -4.541882514953613
    5. ' +' → logprob: -5.166882514953613
    6. '+' → logprob: -5.666882514953613
    7. 'for' → logprob: -5.666882514953613
    8. 's' → logprob: -6.541882514953613
    9. ' s' → logprob: -7.166882514953613
    10. ' for' → logprob: -7.291882514953613

Token 1263: ' contre' (ID: 17771)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cons' → logprob: -1.0503774881362915
    2. 'ailleurs' → logprob: -2.300377368927002
    3. 'contre' → logprob: -2.300377368927002
    4. 's' → logprob: -2.550377368927002
    5. 'for' → logprob: -3.050377368927002
    6. '#' → logprob: -3.175377368927002
    7. 'con' → logprob: -3.425377368927002
    8. 'fait' → logprob: -3.425377368927002
    9. 'aj' → logprob: -3.550377368927002
    10. 'continue' → logprob: -3.800377368927002

Token 1264: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1566845178604126
    2. ' s' → logprob: -1.5316845178604126
    3. ' on' → logprob: -2.781684398651123
    4. ',' → logprob: -2.906684398651123
    5. 's' → logprob: -3.031684398651123
    6. '   ' → logprob: -3.156684398651123
    7. ' la' → logprob: -3.156684398651123
    8. 'on' → logprob: -3.656684398651123
    9. ':' → logprob: -3.781684398651123
    10. ' #' → logprob: -3.906684398651123

Token 1265: ' les' (ID: 1341)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5381747484207153
    2. '#' → logprob: -1.2881747484207153
    3. ' result' → logprob: -2.913174629211426
    4. 'len' → logprob: -4.288174629211426
    5. 'for' → logprob: -4.413174629211426
    6. ' #' → logprob: -4.663174629211426
    7. 'rest' → logprob: -4.913174629211426
    8. 'le' → logprob: -5.288174629211426
    9. ' for' → logprob: -5.413174629211426
    10. ' s' → logprob: -5.538174629211426

Token 1266: ' caractères' (ID: 183106)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.9278791546821594
    2. ' rest' → logprob: -1.4278790950775146
    3. 'positions' → logprob: -1.9278790950775146
    4. 'indices' → logprob: -2.6778790950775146
    5. 's' → logprob: -3.1778790950775146
    6. 'for' → logprob: -3.9278790950775146
    7. 'suffix' → logprob: -4.177879333496094
    8. 'result' → logprob: -4.552879333496094
    9. 'reste' → logprob: -4.802879333496094
    10. ' s' → logprob: -5.052879333496094

Token 1267: ' déjà' (ID: 21229)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6408688426017761
    2. 'util' → logprob: -2.765868902206421
    3. 'dans' → logprob: -2.890868902206421
    4. 'avant' → logprob: -3.015868902206421
    5. 'à' → logprob: -3.140868902206421
    6. 'dé' → logprob: -3.390868902206421
    7. ' rest' → logprob: -3.640868902206421
    8. 'pr' → logprob: -3.765868902206421
    9. 'qui' → logprob: -3.890868902206421
    10. 'de' → logprob: -3.890868902206421

Token 1268: ' utilisés' (ID: 94258)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.6300099492073059
    2. 'plac' → logprob: -2.005009889602661
    3. 'util' → logprob: -2.505009889602661
    4. 'trait' → logprob: -2.630009889602661
    5. 'dé' → logprob: -2.880009889602661
    6. 'sé' → logprob: -3.380009889602661
    7. 'ret' → logprob: -3.755009889602661
    8. 'pris' → logprob: -4.00501012802124
    9. 'prés' → logprob: -5.00501012802124
    10. 'éch' → logprob: -5.38001012802124

Token 1269: ' ne' (ID: 453)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.7064566016197205
    2. '#' → logprob: -2.4564566612243652
    3. 'rest' → logprob: -2.7064566612243652
    4. ' rest' → logprob: -2.9564566612243652
    5. 's' → logprob: -3.2064566612243652
    6. ' dans' → logprob: -3.3314566612243652
    7. ' ne' → logprob: -3.7064566612243652
    8. '[current' → logprob: -3.8314566612243652
    9. '```' → logprob: -3.8314566612243652
    10. 'ont' → logprob: -3.9564566612243652

Token 1270: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06548310071229935
    2. 'ont' → logprob: -2.9404830932617188
    3. 'pas' → logprob: -5.315483093261719
    4. '#' → logprob: -6.565483093261719
    5. 'do' → logprob: -6.565483093261719
    6. 'ser' → logprob: -7.690483093261719
    7. 'éta' → logprob: -7.815483093261719
    8. '=' → logprob: -8.315483093261719
    9. 'for' → logprob: -8.440483093261719
    10. '```' → logprob: -8.440483093261719

Token 1271: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.21867837011814117
    2. 'pas' → logprob: -1.71867835521698
    3. ' plus' → logprob: -4.0936784744262695
    4. ' pas' → logprob: -8.09367847442627
    5. '```' → logprob: -9.84367847442627
    6. '+' → logprob: -10.96867847442627
    7. 's' → logprob: -11.21867847442627
    8. '
' → logprob: -11.71867847442627
    9. 'prés' → logprob: -12.09367847442627
    10. '#' → logprob: -12.09367847442627

Token 1272: ' à' (ID: 1221)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.28878775238990784
    2. 'dans' → logprob: -1.5387877225875854
    3. 's' → logprob: -4.663787841796875
    4. 'valid' → logprob: -5.288787841796875
    5. 'present' → logprob: -5.413787841796875
    6. 'pas' → logprob: -5.538787841796875
    7. '```' → logprob: -5.663787841796875
    8. 'val' → logprob: -6.163787841796875
    9. ' présents' → logprob: -6.788787841796875
    10. 'correct' → logprob: -7.163787841796875

Token 1273: ' leurs' (ID: 16348)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7884700894355774
    2. 'aj' → logprob: -2.1634700298309326
    3. 'la' → logprob: -2.6634700298309326
    4. 's' → logprob: -2.6634700298309326
    5. 'consider' → logprob: -2.9134700298309326
    6. 'prendre' → logprob: -2.9134700298309326
    7. 'l' → logprob: -3.0384700298309326
    8. '```' → logprob: -3.5384700298309326
    9. 'sup' → logprob: -4.163470268249512
    10. 'position' → logprob: -4.538470268249512

Token 1274: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.15218637883663177
    2. 'current' → logprob: -2.652186393737793
    3. 'indices' → logprob: -4.277186393737793
    4. 'place' → logprob: -4.402186393737793
    5. 'places' → logprob: -4.777186393737793
    6. 'correct' → logprob: -4.902186393737793
    7. '#' → logprob: -5.027186393737793
    8. 'position' → logprob: -5.152186393737793
    9. 'dro' → logprob: -5.152186393737793
    10. '```' → logprob: -5.777186393737793

Token 1275: ' initial' (ID: 4871)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8760923147201538
    2. '   ' → logprob: -1.2510923147201538
    3. ' s' → logprob: -2.3760924339294434
    4. 's' → logprob: -2.3760924339294434
    5. '+' → logprob: -3.0010924339294434
    6. ' rest' → logprob: -4.126092433929443
    7. '```' → logprob: -4.751092433929443
    8. ' =' → logprob: -4.876092433929443
    9. 'rest' → logprob: -4.876092433929443
    10. ' +=' → logprob: -5.001092433929443

Token 1276: 'es' (ID: 268)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5632850527763367
    2. ':]' → logprob: -1.0632851123809814
    3. ']' → logprob: -3.4382851123809814
    4. 's' → logprob: -3.6882851123809814
    5. '+' → logprob: -4.563284873962402
    6. '```' → logprob: -5.313284873962402
    7. 'current' → logprob: -6.063284873962402
    8. ' :' → logprob: -6.313284873962402
    9. 'n' → logprob: -7.313284873962402
    10. ':`' → logprob: -7.438284873962402

Token 1277: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031283702701330185
    2. 'result' → logprob: -3.9062836170196533
    3. ' +' → logprob: -5.906283855438232
    4. '+' → logprob: -6.406283855438232
    5. 's' → logprob: -6.656283855438232
    6. '```' → logprob: -6.906283855438232
    7. ' result' → logprob: -7.156283855438232
    8. 'rest' → logprob: -7.281283855438232
    9. 'res' → logprob: -7.531283855438232
    10. 'suffix' → logprob: -7.906283855438232

Token 1278: ' Il' (ID: 5329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03611474484205246
    2. 'suffix' → logprob: -4.161114692687988
    3. 'rest' → logprob: -4.411114692687988
    4. 'result' → logprob: -6.411114692687988
    5. '#' → logprob: -6.536114692687988
    6. 's' → logprob: -7.036114692687988
    7. ' rest' → logprob: -7.161114692687988
    8. '```' → logprob: -7.536114692687988
    9. 'for' → logprob: -7.661114692687988
    10. '
' → logprob: -7.661114692687988

Token 1279: ' faut' (ID: 17821)
  Prédit: ' reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.5450541973114014
    2. 'reste' → logprob: -1.6700541973114014
    3. ' rest' → logprob: -3.0450541973114014
    4. 'rest' → logprob: -3.1700541973114014
    5. ' =' → logprob: -3.2950541973114014
    6. 'remaining' → logprob: -3.7950541973114014
    7. ' rester' → logprob: -3.9200541973114014
    8. '=' → logprob: -4.1700544357299805
    9. ' remaining' → logprob: -4.2950544357299805
    10. ' n' → logprob: -5.0450544357299805

Token 1280: ' reconstru' (ID: 108053)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.6113440990447998
    2. 'les' → logprob: -2.1113440990448
    3. 'g' → logprob: -2.4863440990448
    4. '#' → logprob: -2.6113440990448
    5. 'sup' → logprob: -2.6113440990448
    6. 'aj' → logprob: -2.6113440990448
    7. 're' → logprob: -3.1113440990448
    8. 'prendre' → logprob: -3.2363440990448
    9. 's' → logprob: -3.4863440990448
    10. 'ret' → logprob: -3.7363440990448

Token 1281: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.7402437925338745
    2. 'érer' → logprob: -1.4902437925338745
    3. 'er' → logprob: -1.7402437925338745
    4. 'uire' → logprob: -3.615243911743164
    5. 'cter' → logprob: -3.865243911743164
    6. 's' → logprob: -4.115243911743164
    7. '   ' → logprob: -4.865243911743164
    8. 'ct' → logprob: -5.240243911743164
    9. 'ction' → logprob: -5.365243911743164
    10. 're' → logprob: -5.490243911743164

Token 1282: '.
' (ID: 558)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8395164012908936
    2. 'rest' → logprob: -1.7145164012908936
    3. '   ' → logprob: -2.0895164012908936
    4. 's' → logprob: -2.2145164012908936
    5. 'la' → logprob: -2.9645164012908936
    6. '#' → logprob: -3.3395164012908936
    7. ' rest' → logprob: -4.339516639709473
    8. ' s' → logprob: -4.714516639709473
    9. ' la' → logprob: -4.964516639709473
    10. 'le' → logprob: -4.964516639709473

Token 1283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007054814603179693
    2. 'rest' → logprob: -5.507054805755615
    3. 'suffix' → logprob: -6.382054805755615
    4. '```' → logprob: -7.507054805755615
    5. 's' → logprob: -8.382055282592773
    6. 'result' → logprob: -8.757055282592773
    7. 'remaining' → logprob: -8.882055282592773
    8. '
' → logprob: -9.632055282592773
    9. 'for' → logprob: -10.007055282592773
    10. 'res' → logprob: -11.132055282592773

Token 1284: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25770455598831177
    2. 'rest' → logprob: -2.132704496383667
    3. ' rest' → logprob: -3.132704496383667
    4. 'suffix' → logprob: -3.757704496383667
    5. ' suffix' → logprob: -4.257704734802246
    6. ' remainder' → logprob: -5.007704734802246
    7. ' s' → logprob: -5.257704734802246
    8. 'remaining' → logprob: -5.382704734802246
    9. 's' → logprob: -6.007704734802246
    10. '```' → logprob: -6.507704734802246

Token 1285: ' Puis' (ID: 87717)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.626795768737793
    2. 'rest' → logprob: -1.001795768737793
    3. 'suffix' → logprob: -2.751795768737793
    4. '#' → logprob: -4.751795768737793
    5. 's' → logprob: -5.126795768737793
    6. 'result' → logprob: -5.251795768737793
    7. 'remaining' → logprob: -5.251795768737793
    8. 'res' → logprob: -5.876795768737793
    9. 'reste' → logprob: -6.501795768737793
    10. 're' → logprob: -6.751795768737793

Token 1286: 'qu' (ID: 351)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.205244779586792
    2. ' s' → logprob: -1.955244779586792
    3. ' rest' → logprob: -2.080244779586792
    4. '#' → logprob: -2.455244779586792
    5. 'result' → logprob: -3.080244779586792
    6. ' for' → logprob: -3.080244779586792
    7. 'for' → logprob: -3.205244779586792
    8. '    ' → logprob: -3.330244779586792
    9. 'rest' → logprob: -3.330244779586792
    10. ' result' → logprob: -3.580244779586792

Token 1287: ''on' (ID: 25812)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7026694416999817
    2. 's' → logprob: -1.952669382095337
    3. ' current' → logprob: -1.952669382095337
    4. 'current' → logprob: -2.827669382095337
    5. ' la' → logprob: -3.202669382095337
    6. ' on' → logprob: -3.452669382095337
    7. 'on' → logprob: -4.077669620513916
    8. 'la' → logprob: -4.577669620513916
    9. 'le' → logprob: -4.952669620513916
    10. ' not' → logprob: -5.077669620513916

Token 1288: ' ne' (ID: 453)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6313729286193848
    2. 'n' → logprob: -1.6313729286193848
    3. 'con' → logprob: -3.0063729286193848
    4. 'ignore' → logprob: -3.3813729286193848
    5. 'avait' → logprob: -3.3813729286193848
    6. 'continue' → logprob: -3.5063729286193848
    7. 's' → logprob: -3.7563729286193848
    8. '#' → logprob: -4.131372928619385
    9. 'pe' → logprob: -4.256372928619385
    10. 'ne' → logprob: -4.506372928619385

Token 1289: ' bou' (ID: 17573)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6603442430496216
    2. 'pe' → logprob: -1.2853442430496216
    3. 'g' → logprob: -3.035344123840332
    4. 's' → logprob: -3.660344123840332
    5. 'con' → logprob: -3.910344123840332
    6. '#' → logprob: -4.035344123840332
    7. 'sav' → logprob: -4.160344123840332
    8. 'pas' → logprob: -4.410344123840332
    9. 'pour' → logprob: -4.410344123840332
    10. 'les' → logprob: -4.785344123840332

Token 1290: 'ge' (ID: 684)
  Prédit: 'ge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.7385170459747314
    2. 'g' → logprob: -1.9885170459747314
    3. 'ff' → logprob: -2.3635170459747314
    4. 'ffe' → logprob: -2.6135170459747314
    5. 'ger' → logprob: -2.7385170459747314
    6. 'ffer' → logprob: -3.1135170459747314
    7. 'f' → logprob: -3.4885170459747314
    8. 'gent' → logprob: -3.6135170459747314
    9. 'gera' → logprob: -4.613516807556152
    10. 'cle' → logprob: -4.988516807556152

Token 1291: ' les' (ID: 1341)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5636968612670898
    2. 'ait' → logprob: -1.9386968612670898
    3. ' pas' → logprob: -2.43869686126709
    4. 's' → logprob: -2.43869686126709
    5. 'a' → logprob: -3.18869686126709
    6. 'ons' → logprob: -4.06369686126709
    7. 'ra' → logprob: -4.06369686126709
    8. 'nt' → logprob: -4.68869686126709
    9. 'r' → logprob: -4.81369686126709
    10. 'rait' → logprob: -5.31369686126709

Token 1292: ' caractères' (ID: 183106)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -1.16818106174469
    2. ' s' → logprob: -1.79318106174469
    3. 's' → logprob: -1.91818106174469
    4. ' caractères' → logprob: -2.5431809425354004
    5. 'car' → logprob: -2.9181809425354004
    6. '_' → logprob: -2.9181809425354004
    7. ' current' → logprob: -4.1681809425354
    8. 'current' → logprob: -4.2931809425354
    9. '_rest' → logprob: -4.4181809425354
    10. '_s' → logprob: -4.5431809425354

Token 1293: ' qu' (ID: 474)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.9224607348442078
    2. '[current' → logprob: -1.2974607944488525
    3. ' restantes' → logprob: -2.0474607944488525
    4. ' pas' → logprob: -2.7974607944488525
    5. 'rest' → logprob: -3.4224607944488525
    6. ' restante' → logprob: -4.172460556030273
    7. 'pas' → logprob: -4.297460556030273
    8. 's' → logprob: -4.672460556030273
    9. '_rest' → logprob: -4.797460556030273
    10. ' restant' → logprob: -5.172460556030273

Token 1294: ''' (ID: 6)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.023572595790028572
    2. 'plus' → logprob: -5.3985724449157715
    3. ' pas' → logprob: -5.8985724449157715
    4. 's' → logprob: -6.0235724449157715
    5. ''à' → logprob: -6.1485724449157715
    6. 'a' → logprob: -6.2735724449157715
    7. 'n' → logprob: -6.6485724449157715
    8. '=' → logprob: -6.8985724449157715
    9. 'ont' → logprob: -7.0235724449157715
    10. 'as' → logprob: -7.0235724449157715

Token 1295: 'avec' (ID: 64065)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.016331002116203308
    2. 'plus' → logprob: -4.266331195831299
    3. 'que' → logprob: -7.266331195831299
    4. 'à' → logprob: -7.766331195831299
    5. 's' → logprob: -8.51633071899414
    6. 'dans' → logprob: -8.89133071899414
    7. ' pas' → logprob: -9.39133071899414
    8. '```' → logprob: -9.76633071899414
    9. 'de' → logprob: -9.89133071899414
    10. 'jus' → logprob: -9.89133071899414

Token 1296: ' k' (ID: 372)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.5283504724502563
    2. 'swap' → logprob: -1.7783504724502563
    3. 'adj' → logprob: -2.028350353240967
    4. 'des' → logprob: -2.278350353240967
    5. 'l' → logprob: -2.778350353240967
    6. 'k' → logprob: -3.153350353240967
    7. 'la' → logprob: -3.278350353240967
    8. 'une' → logprob: -3.778350353240967
    9. 'un' → logprob: -3.778350353240967
    10. 'leur' → logprob: -4.028350353240967

Token 1297: ' swaps' (ID: 150699)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.09463313966989517
    2. ':' → logprob: -3.844633102416992
    3. 'current' → logprob: -4.094633102416992
    4. ' current' → logprob: -4.719633102416992
    5. '=' → logprob: -5.094633102416992
    6. '(current' → logprob: -5.344633102416992
    7. '```' → logprob: -5.594633102416992
    8. '#' → logprob: -5.844633102416992
    9. '[' → logprob: -6.344633102416992
    10. ',' → logprob: -6.344633102416992

Token 1298: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25696927309036255
    2. ',' → logprob: -2.6319692134857178
    3. ' +' → logprob: -3.0069692134857178
    4. ' s' → logprob: -3.7569692134857178
    5. '+' → logprob: -3.8819692134857178
    6. ' rest' → logprob: -4.631969451904297
    7. '```' → logprob: -4.756969451904297
    8. ' et' → logprob: -4.881969451904297
    9. ' +=' → logprob: -5.131969451904297
    10. 's' → logprob: -5.256969451904297

Token 1299: 'c' (ID: 66)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3061426877975464
    2. '),' → logprob: -1.5561426877975464
    3. 'adj' → logprob: -2.431142807006836
    4. ')' → logprob: -2.681142807006836
    5. 'la' → logprob: -3.306142807006836
    6. 'pas' → logprob: -3.306142807006836
    7. 'rest' → logprob: -3.431142807006836
    8. 'le' → logprob: -3.681142807006836
    9. ' rest' → logprob: -3.931142807006836
    10. ' #' → logprob: -4.181142807006836

Token 1300: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9190604090690613
    2. ''est' → logprob: -1.169060468673706
    3. 'est' → logprob: -2.294060468673706
    4. 'n' → logprob: -3.419060468673706
    5. '```' → logprob: -3.794060468673706
    6. 'e' → logprob: -3.919060468673706
    7. ''était' → logprob: -4.294060230255127
    8. 'ont' → logprob: -4.544060230255127
    9. 'a' → logprob: -4.669060230255127
    10. ''' → logprob: -4.669060230255127

Token 1301: '-à' (ID: 56297)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.44822025299072266
    2. 'une' → logprob: -3.0732202529907227
    3. ' possible' → logprob: -3.4482202529907227
    4. 'le' → logprob: -3.5732202529907227
    5. 'tout' → logprob: -3.5732202529907227
    6. 'à' → logprob: -3.8232202529907227
    7. 'la' → logprob: -3.8232202529907227
    8. '-à' → logprob: -3.9482202529907227
    9. 's' → logprob: -4.073220252990723
    10. 'pas' → logprob: -4.198220252990723

Token 1302: '-dire' (ID: 76064)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.12305252254009247
    2. 'pas' → logprob: -3.6230525970458984
    3. 'pe' → logprob: -3.8730525970458984
    4. ' possible' → logprob: -3.8730525970458984
    5. 'plus' → logprob: -4.748052597045898
    6. 'bon' → logprob: -5.623052597045898
    7. 's' → logprob: -5.623052597045898
    8. 'la' → logprob: -5.873052597045898
    9. 'fin' → logprob: -5.873052597045898
    10. 'part' → logprob: -6.248052597045898

Token 1303: ',' (ID: 11)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.16335032880306244
    2. ' possible' → logprob: -3.4133503437042236
    3. 'dé' → logprob: -3.7883503437042236
    4. 'pas' → logprob: -4.4133501052856445
    5. '#' → logprob: -4.6633501052856445
    6. 'qu' → logprob: -4.7883501052856445
    7. 'strict' → logprob: -4.9133501052856445
    8. 'une' → logprob: -5.2883501052856445
    9. 'les' → logprob: -5.4133501052856445
    10. 'le' → logprob: -5.5383501052856445

Token 1304: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.348849892616272
    2. 'on' → logprob: -2.0988497734069824
    3. 'les' → logprob: -2.5988497734069824
    4. 'pas' → logprob: -2.5988497734069824
    5. 'qu' → logprob: -2.9738497734069824
    6. 'possible' → logprob: -3.2238497734069824
    7. 'la' → logprob: -3.3488497734069824
    8. ' on' → logprob: -3.4738497734069824
    9. ' #' → logprob: -3.4738497734069824
    10. 'le' → logprob: -3.5988497734069824

Token 1305: ' a' (ID: 261)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.5167899131774902
    2. 'continue' → logprob: -1.5167899131774902
    3. '#' → logprob: -1.8917899131774902
    4. ' ne' → logprob: -2.1417899131774902
    5. 'ne' → logprob: -2.8917899131774902
    6. 'n' → logprob: -3.2667899131774902
    7. 'continu' → logprob: -4.14178991317749
    8. ' n' → logprob: -4.14178991317749
    9. ' reconstru' → logprob: -4.26678991317749
    10. 'aj' → logprob: -4.39178991317749

Token 1306: ' déplac' (ID: 195321)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.7805204391479492
    2. 'just' → logprob: -1.5305204391479492
    3. 'd' → logprob: -2.655520439147949
    4. 'rem' → logprob: -3.405520439147949
    5. 'continu' → logprob: -3.780520439147949
    6. 're' → logprob: -3.905520439147949
    7. 'fait' → logprob: -4.155520439147949
    8. 'ré' → logprob: -4.280520439147949
    9. 'ret' → logprob: -4.405520439147949
    10. 'effect' → logprob: -4.530520439147949

Token 1307: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.032635707408189774
    2. 's' → logprob: -4.157635688781738
    3. 'és' → logprob: -4.657635688781738
    4. 'u' → logprob: -6.032635688781738
    5. 'e' → logprob: -6.407635688781738
    6. ' s' → logprob: -6.532635688781738
    7. '   ' → logprob: -9.032635688781738
    8. 'ait' → logprob: -9.407635688781738
    9. '[]' → logprob: -9.532635688781738
    10. ' les' → logprob: -9.532635688781738

Token 1308: ' dans' (ID: 2671)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.6333928108215332
    2. ' la' → logprob: -1.7583928108215332
    3. ' les' → logprob: -1.8833928108215332
    4. 'les' → logprob: -1.8833928108215332
    5. 'le' → logprob: -2.508392810821533
    6. ' seulement' → logprob: -2.508392810821533
    7. ' le' → logprob: -3.758392810821533
    8. ' s' → logprob: -3.758392810821533
    9. ' juste' → logprob: -3.883392810821533
    10. ' uniquement' → logprob: -4.133392810821533

Token 1309: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0294491052627563
    2. 'result' → logprob: -1.0294491052627563
    3. 'la' → logprob: -1.7794491052627563
    4. '#' → logprob: -3.279448986053467
    5. 'l' → logprob: -3.904448986053467
    6. 'le' → logprob: -3.904448986053467
    7. ' s' → logprob: -4.529448986053467
    8. ' la' → logprob: -5.029448986053467
    9. ' result' → logprob: -5.654448986053467
    10. 'res' → logprob: -5.904448986053467

Token 1310: ' résultat' (ID: 62556)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.4496102333068848
    2. 'reste' → logprob: -1.6996102333068848
    3. 'result' → logprob: -1.8246102333068848
    4. 's' → logprob: -2.3246102333068848
    5. 'rés' → logprob: -2.6996102333068848
    6. 'suffix' → logprob: -2.8246102333068848
    7. '```' → logprob: -2.9496102333068848
    8. 'code' → logprob: -3.1996102333068848
    9. 'chaine' → logprob: -3.9496102333068848
    10. 'res' → logprob: -4.074610233306885

Token 1311: ' les' (ID: 1341)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.6848106384277344
    2. ' rest' → logprob: -1.9348106384277344
    3. 'la' → logprob: -2.0598106384277344
    4. ' la' → logprob: -2.3098106384277344
    5. 'le' → logprob: -2.4348106384277344
    6. ')' → logprob: -2.4348106384277344
    7. 's' → logprob: -3.0598106384277344
    8. 'les' → logprob: -3.0598106384277344
    9. ' le' → logprob: -3.6848106384277344
    10. ' les' → logprob: -3.6848106384277344

Token 1312: ' caractères' (ID: 183106)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.44440487027168274
    2. 'rest' → logprob: -1.5694048404693604
    3. 'car' → logprob: -2.6944048404693604
    4. 's' → logprob: -3.6944048404693604
    5. ' s' → logprob: -4.1944050788879395
    6. 'reste' → logprob: -4.3194050788879395
    7. ' caractères' → logprob: -4.3194050788879395
    8. ' caracteres' → logprob: -6.3194050788879395
    9. ')' → logprob: -6.6944050788879395
    10. ' caract' → logprob: -6.8194050788879395

Token 1313: ' désir' (ID: 92342)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6960092186927795
    2. ' rest' → logprob: -1.4460091590881348
    3. 'qui' → logprob: -3.0710091590881348
    4. 'non' → logprob: -3.1960091590881348
    5. '```' → logprob: -3.3210091590881348
    6. '#' → logprob: -3.3210091590881348
    7. '   ' → logprob: -3.9460091590881348
    8. ',' → logprob: -4.321009159088135
    9. ' non' → logprob: -5.196009159088135
    10. '[' → logprob: -5.196009159088135

Token 1314: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.5384365916252136
    2. 's' → logprob: -2.0384366512298584
    3. '   ' → logprob: -2.1634366512298584
    4. ')' → logprob: -2.9134366512298584
    5. ']' → logprob: -3.7884366512298584
    6. '```' → logprob: -3.9134366512298584
    7. ' s' → logprob: -4.038436412811279
    8. 'é' → logprob: -5.038436412811279
    9. '       ' → logprob: -5.038436412811279
    10. ' ' → logprob: -5.413436412811279

Token 1315: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2031357288360596
    2. ')' → logprob: -1.7031357288360596
    3. '),' → logprob: -1.7031357288360596
    4. '   ' → logprob: -2.3281357288360596
    5. ' rest' → logprob: -2.7031357288360596
    6. 'rest' → logprob: -3.3281357288360596
    7. '```' → logprob: -3.5781357288360596
    8. '#' → logprob: -3.7031357288360596
    9. '+' → logprob: -4.3281354904174805
    10. 's' → logprob: -4.8281354904174805

Token 1316: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6129167675971985
    2. '#' → logprob: -1.7379167079925537
    3. 'rest' → logprob: -2.2379167079925537
    4. ' s' → logprob: -2.6129167079925537
    5. 's' → logprob: -2.8629167079925537
    6. ' rest' → logprob: -3.9879167079925537
    7. ' #' → logprob: -4.862916946411133
    8. 'reste' → logprob: -5.237916946411133
    9. 'result' → logprob: -5.612916946411133
    10. 'suffix' → logprob: -5.987916946411133

Token 1317: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21764631569385529
    2. '   ' → logprob: -1.7176463603973389
    3. 'rest' → logprob: -4.96764612197876
    4. ' #' → logprob: -5.96764612197876
    5. ' s' → logprob: -6.21764612197876
    6. ' rest' → logprob: -6.59264612197876
    7. 's' → logprob: -6.96764612197876
    8. '       ' → logprob: -7.21764612197876
    9. 'reste' → logprob: -7.96764612197876
    10. '```' → logprob: -7.96764612197876

Token 1318: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.03864792734384537
    2. '   ' → logprob: -3.2886478900909424
    3. ' #' → logprob: -8.288647651672363
    4. 'rest' → logprob: -8.788647651672363
    5. 'reste' → logprob: -9.288647651672363
    6. 's' → logprob: -10.038647651672363
    7. '```' → logprob: -11.163647651672363
    8. 'le' → logprob: -11.538647651672363
    9. 'remaining' → logprob: -11.538647651672363
    10. ' rest' → logprob: -12.538647651672363

Token 1319: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7381064891815186
    2. '#' → logprob: -0.9881064891815186
    3. 'rest' → logprob: -2.3631064891815186
    4. ' rest' → logprob: -3.7381064891815186
    5. ' #' → logprob: -4.988106727600098
    6. ' s' → logprob: -5.363106727600098
    7. 'result' → logprob: -5.488106727600098
    8. 'reste' → logprob: -5.488106727600098
    9. 's' → logprob: -5.613106727600098
    10. 'for' → logprob: -6.363106727600098

Token 1320: ' chaîne' (ID: 89288)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.0666333436965942
    2. 'suffix' → logprob: -1.5666333436965942
    3. '#' → logprob: -1.9416333436965942
    4. 'reste' → logprob: -2.1916332244873047
    5. 's' → logprob: -2.6916332244873047
    6. ' rest' → logprob: -3.0666332244873047
    7. ' suffix' → logprob: -3.6916332244873047
    8. ' s' → logprob: -4.316633224487305
    9. ' #' → logprob: -4.691633224487305
    10. 'chaine' → logprob: -5.316633224487305

Token 1321: ' restant' (ID: 172358)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.2153509557247162
    2. 'reste' → logprob: -2.465350866317749
    3. ' rest' → logprob: -2.840350866317749
    4. '#' → logprob: -4.215351104736328
    5. ' complète' → logprob: -4.590351104736328
    6. ' restante' → logprob: -4.715351104736328
    7. 's' → logprob: -5.590351104736328
    8. '_rest' → logprob: -6.215351104736328
    9. ' s' → logprob: -6.340351104736328
    10. ' #' → logprob: -6.465351104736328

Token 1322: ' est' (ID: 893)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.36654847860336304
    2. '_rest' → logprob: -2.616548538208008
    3. 's' → logprob: -2.991548538208008
    4. ' =' → logprob: -3.116548538208008
    5. '_' → logprob: -3.491548538208008
    6. 'rest' → logprob: -3.741548538208008
    7. '_remaining' → logprob: -4.241548538208008
    8. ' s' → logprob: -4.616548538208008
    9. '```' → logprob: -4.866548538208008
    10. 'current' → logprob: -5.116548538208008

Token 1323: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20449136197566986
    2. 's' → logprob: -1.704491376876831
    3. ' rest' → logprob: -6.954491138458252
    4. '   ' → logprob: -7.704491138458252
    5. ' =' → logprob: -8.07949161529541
    6. ' ' → logprob: -8.32949161529541
    7. ' current' → logprob: -8.82949161529541
    8. '```' → logprob: -8.82949161529541
    9. '"' → logprob: -9.07949161529541
    10. 'rest' → logprob: -9.70449161529541

Token 1324: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.00026300468016415834
    2. 'current' → logprob: -8.750263214111328
    3. '[' → logprob: -9.500263214111328
    4. '```' → logprob: -11.625263214111328
    5. '=current' → logprob: -12.000263214111328
    6. ' current' → logprob: -12.250263214111328
    7. '   ' → logprob: -12.500263214111328
    8. 'remaining' → logprob: -13.625263214111328
    9. ' [' → logprob: -14.000263214111328
    10. '(current' → logprob: -14.125263214111328

Token 1325: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.001024831784889102
    2. 'current' → logprob: -7.2510247230529785
    3. 'pos' → logprob: -8.876025199890137
    4. 'Pos' → logprob: -9.376025199890137
    5. '_current' → logprob: -9.751025199890137
    6. ':' → logprob: -11.126025199890137
    7. ':]' → logprob: -11.626025199890137
    8. ' current' → logprob: -12.876025199890137
    9. '+' → logprob: -13.501025199890137
    10. 'urrent' → logprob: -13.626025199890137

Token 1326: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.02315196394920349
    2. '[current' → logprob: -3.8981518745422363
    3. ':]
' → logprob: -6.773151874542236
    4. ':' → logprob: -7.148151874542236
    5. ':].' → logprob: -8.523152351379395
    6. ' :]' → logprob: -8.898152351379395
    7. '[' → logprob: -8.898152351379395
    8. '+' → logprob: -9.773152351379395
    9. 'current' → logprob: -9.898152351379395
    10. ':],' → logprob: -10.523152351379395

Token 1327: ' toutes' (ID: 17502)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.40608593821525574
    2. '+' → logprob: -1.7810859680175781
    3. '   ' → logprob: -2.156085968017578
    4. 'result' → logprob: -3.656085968017578
    5. '```' → logprob: -4.406085968017578
    6. '
' → logprob: -6.156085968017578
    7. ' +=' → logprob: -6.406085968017578
    8. '.extend' → logprob: -6.406085968017578
    9. '       ' → logprob: -6.781085968017578
    10. '[result' → logprob: -7.281085968017578

Token 1328: ' lettres' (ID: 101234)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2639614343643188
    2. '+' → logprob: -1.5139614343643188
    3. '```' → logprob: -1.5139614343643188
    4. ')' → logprob: -2.5139613151550293
    5. '[:]' → logprob: -2.5139613151550293
    6. '()' → logprob: -4.138961315155029
    7. ' +' → logprob: -4.263961315155029
    8. ']+' → logprob: -4.513961315155029
    9. '.' → logprob: -4.763961315155029
    10. '[::-' → logprob: -5.138961315155029

Token 1329: ' qui' (ID: 2780)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6728634238243103
    2. ' +' → logprob: -0.7978634238243103
    3. '   ' → logprob: -4.797863483428955
    4. '```' → logprob: -4.922863483428955
    5. 'result' → logprob: -5.047863483428955
    6. '[result' → logprob: -5.297863483428955
    7. '+=' → logprob: -5.922863483428955
    8. '.extend' → logprob: -6.172863483428955
    9. ' +=' → logprob: -6.422863483428955
    10. 's' → logprob: -7.172863483428955

Token 1330: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2442023754119873
    2. ' n' → logprob: -1.7442023754119873
    3. '#' → logprob: -3.7442023754119873
    4. 'n't' → logprob: -4.869202613830566
    5. '```' → logprob: -5.619202613830566
    6. 's' → logprob: -6.619202613830566
    7. 'ont' → logprob: -6.869202613830566
    8. '   ' → logprob: -7.244202613830566
    9. ' #' → logprob: -7.244202613830566
    10. ' ne' → logprob: -7.619202613830566

Token 1331: ''ont' (ID: 64195)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.7020114660263062
    2. ''ont' → logprob: -1.4520114660263062
    3. 'pas' → logprob: -2.4520115852355957
    4. 's' → logprob: -2.5770115852355957
    5. 'n' → logprob: -2.8270115852355957
    6. '#' → logprob: -4.702011585235596
    7. '’ont' → logprob: -5.327011585235596
    8. 'n't' → logprob: -5.452011585235596
    9. 'ne' → logprob: -5.577011585235596
    10. ']' → logprob: -5.577011585235596

Token 1332: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.008261838927865028
    2. ' pas' → logprob: -5.758261680603027
    3. '#' → logprob: -6.508261680603027
    4. 'ont' → logprob: -6.633261680603027
    5. '```' → logprob: -7.133261680603027
    6. 'été' → logprob: -7.258261680603027
    7. 'plus' → logprob: -7.383261680603027
    8. 's' → logprob: -10.008261680603027
    9. 'not' → logprob: -11.383261680603027
    10. 'éta' → logprob: -11.758261680603027

Token 1333: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.15696293115615845
    2. 'pas' → logprob: -2.1569628715515137
    3. '```' → logprob: -4.281962871551514
    4. '#' → logprob: -5.156962871551514
    5. ' été' → logprob: -5.281962871551514
    6. 'ét' → logprob: -7.031962871551514
    7. 'dé' → logprob: -7.031962871551514
    8. 'pu' → logprob: -7.531962871551514
    9. ' ' → logprob: -7.906962871551514
    10. 'been' → logprob: -8.031963348388672

Token 1334: ' déplac' (ID: 195321)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.070080280303955
    2. 'dé' → logprob: -1.320080280303955
    3. 'cho' → logprob: -1.695080280303955
    4. 'plac' → logprob: -2.320080280303955
    5. 'ret' → logprob: -3.320080280303955
    6. 'aj' → logprob: -3.945080280303955
    7. '```' → logprob: -4.945080280303955
    8. '#' → logprob: -5.070080280303955
    9. ' déplac' → logprob: -5.320080280303955
    10. 'pris' → logprob: -5.570080280303955

Token 1335: 'ées' (ID: 5161)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.7921373248100281
    2. ']' → logprob: -1.4171373844146729
    3. '[' → logprob: -1.6671373844146729
    4. '+' → logprob: -3.667137384414673
    5. '   ' → logprob: -4.167137145996094
    6. '_' → logprob: -4.292137145996094
    7. '```' → logprob: -4.417137145996094
    8. '[:]' → logprob: -4.542137145996094
    9. ' +' → logprob: -4.792137145996094
    10. '[
' → logprob: -5.417137145996094

Token 1336: '.
' (ID: 558)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4460325837135315
    2. '+' → logprob: -2.1960325241088867
    3. '   ' → logprob: -2.3210325241088867
    4. 'result' → logprob: -2.8210325241088867
    5. ' +=' → logprob: -3.4460325241088867
    6. '```' → logprob: -4.071032524108887
    7. 's' → logprob: -4.446032524108887
    8. ' =' → logprob: -5.071032524108887
    9. '+=' → logprob: -5.571032524108887
    10. '
' → logprob: -6.196032524108887

Token 1337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01021438930183649
    2. 'result' → logprob: -5.510214328765869
    3. 'rest' → logprob: -6.260214328765869
    4. 's' → logprob: -6.260214328765869
    5. '```' → logprob: -6.635214328765869
    6. '+' → logprob: -8.010214805603027
    7. ' +' → logprob: -9.010214805603027
    8. 'for' → logprob: -9.135214805603027
    9. 'suffix' → logprob: -9.135214805603027
    10. 'res' → logprob: -10.010214805603027

Token 1338: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23432289063930511
    2. 'result' → logprob: -1.6093229055404663
    3. 's' → logprob: -5.484323024749756
    4. 'rest' → logprob: -6.109323024749756
    5. ' result' → logprob: -7.359323024749756
    6. '```' → logprob: -7.359323024749756
    7. 'res' → logprob: -7.859323024749756
    8. 'suffix' → logprob: -7.984323024749756
    9. '+' → logprob: -9.359322547912598
    10. 'remaining' → logprob: -9.359322547912598

Token 1339: ' Or' (ID: 2604)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6548156142234802
    2. '   ' → logprob: -0.7798156142234802
    3. 'rest' → logprob: -5.154815673828125
    4. ' result' → logprob: -5.279815673828125
    5. 's' → logprob: -5.654815673828125
    6. 'suffix' → logprob: -5.904815673828125
    7. 'for' → logprob: -6.154815673828125
    8. 'res' → logprob: -6.904815673828125
    9. '#' → logprob: -8.154815673828125
    10. 'remaining' → logprob: -8.404815673828125

Token 1340: ' la' (ID: 557)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.3077902793884277
    2. ' current' → logprob: -1.5577902793884277
    3. ' s' → logprob: -1.8077902793884277
    4. '#' → logprob: -1.9327902793884277
    5. 's' → logprob: -2.6827902793884277
    6. 'len' → logprob: -3.3077902793884277
    7. ' #' → logprob: -3.6827902793884277
    8. ' len' → logprob: -4.182790279388428
    9. ' la' → logprob: -4.557790279388428
    10. ' on' → logprob: -4.557790279388428

Token 1341: ' chaîne' (ID: 89288)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.49108871817588806
    2. ' current' → logprob: -2.241088628768921
    3. ' rest' → logprob: -2.991088628768921
    4. 'rest' → logprob: -3.116088628768921
    5. 's' → logprob: -3.241088628768921
    6. ' s' → logprob: -3.366088628768921
    7. '#' → logprob: -3.491088628768921
    8. 'remaining' → logprob: -3.866088628768921
    9. 'reste' → logprob: -4.1160888671875
    10. ' #' → logprob: -5.6160888671875

Token 1342: ' finale' (ID: 37759)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.27645161747932434
    2. 'reste' → logprob: -2.776451587677002
    3. ' rest' → logprob: -3.401451587677002
    4. ' restante' → logprob: -3.401451587677002
    5. ' =' → logprob: -3.776451587677002
    6. '=' → logprob: -3.776451587677002
    7. '[current' → logprob: -4.151451587677002
    8. 'remaining' → logprob: -4.901451587677002
    9. '#' → logprob: -5.026451587677002
    10. ' restant' → logprob: -5.151451587677002

Token 1343: ' =' (ID: 314)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.1404392570257187
    2. '[result' → logprob: -3.14043927192688
    3. 'rest' → logprob: -4.140439033508301
    4. '+' → logprob: -4.265439033508301
    5. ' est' → logprob: -4.765439033508301
    6. ' =' → logprob: -5.140439033508301
    7. '[' → logprob: -5.390439033508301
    8. 's' → logprob: -5.390439033508301
    9. 'result' → logprob: -5.390439033508301
    10. ' +=' → logprob: -5.640439033508301

Token 1344: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.17511385679244995
    2. ' result' → logprob: -2.5501139163970947
    3. '''.' → logprob: -2.9251139163970947
    4. '"' → logprob: -4.550113677978516
    5. 's' → logprob: -5.175113677978516
    6. ' ''.' → logprob: -5.425113677978516
    7. ' s' → logprob: -5.925113677978516
    8. ' "".' → logprob: -5.925113677978516
    9. '   ' → logprob: -6.675113677978516
    10. '''' → logprob: -8.050113677978516

Token 1345: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11478757858276367
    2. '+' → logprob: -2.2397875785827637
    3. '```' → logprob: -7.739787578582764
    4. ' +
' → logprob: -7.989787578582764
    5. '+s' → logprob: -8.239788055419922
    6. 's' → logprob: -8.739788055419922
    7. '+
' → logprob: -8.864788055419922
    8. '[s' → logprob: -9.239788055419922
    9. '   ' → logprob: -9.364788055419922
    10. '[' → logprob: -9.614788055419922

Token 1346: ' restantes' (ID: 159241)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07791423797607422
    2. ' s' → logprob: -2.702914237976074
    3. '''.' → logprob: -4.952914237976074
    4. ' ''.' → logprob: -7.702914237976074
    5. ' "".' → logprob: -8.327914237976074
    6. '"' → logprob: -9.077914237976074
    7. '"s' → logprob: -10.577914237976074
    8. '   ' → logprob: -11.327914237976074
    9. ' ' → logprob: -11.327914237976074
    10. '```' → logprob: -11.702914237976074

Token 1347: ' lettres' (ID: 101234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8613014221191406
    2. 's' → logprob: -1.1113014221191406
    3. '+' → logprob: -2.4863014221191406
    4. 'result' → logprob: -2.6113014221191406
    5. ' +' → logprob: -2.7363014221191406
    6. '```' → logprob: -4.611301422119141
    7. ' s' → logprob: -4.861301422119141
    8. '       ' → logprob: -5.486301422119141
    9. '+s' → logprob: -7.111301422119141
    10. ' result' → logprob: -7.111301422119141

Token 1348: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6765928864479065
    2. ' +' → logprob: -1.9265928268432617
    3. '+' → logprob: -2.0515928268432617
    4. 's' → logprob: -2.1765928268432617
    5. 'result' → logprob: -2.5515928268432617
    6. ' s' → logprob: -4.676592826843262
    7. '```' → logprob: -4.676592826843262
    8. ' result' → logprob: -6.176592826843262
    9. '+s' → logprob: -6.676592826843262
    10. 'print' → logprob: -7.801592826843262

Token 1349: ' l' (ID: 305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00868004746735096
    2. ' s' → logprob: -4.8836798667907715
    3. '```' → logprob: -7.6336798667907715
    4. '   ' → logprob: -8.63368034362793
    5. 'l' → logprob: -8.75868034362793
    6. 'la' → logprob: -9.25868034362793
    7. 'current' → logprob: -10.00868034362793
    8. '       ' → logprob: -11.38368034362793
    9. '`s' → logprob: -11.63368034362793
    10. '`' → logprob: -11.63368034362793

Token 1350: ''ordre' (ID: 124753)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03236614540219307
    2. ' s' → logprob: -3.5323660373687744
    3. ''s' → logprob: -7.4073662757873535
    4. 'current' → logprob: -7.6573662757873535
    5. 'e' → logprob: -8.407365798950195
    6. 'rest' → logprob: -8.657365798950195
    7. 'original' → logprob: -8.657365798950195
    8. ' original' → logprob: -9.282365798950195
    9. ' current' → logprob: -9.782365798950195
    10. '_s' → logprob: -9.782365798950195

Token 1351: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13660961389541626
    2. 'result' → logprob: -2.1366095542907715
    3. 's' → logprob: -5.8866095542907715
    4. '+' → logprob: -6.0116095542907715
    5. 'print' → logprob: -6.7616095542907715
    6. '```' → logprob: -6.7616095542907715
    7. 'for' → logprob: -6.8866095542907715
    8. ' +' → logprob: -7.6366095542907715
    9. ' result' → logprob: -9.13661003112793
    10. '       ' → logprob: -9.26161003112793

Token 1352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2004883885383606
    2. 'result' → logprob: -1.8254883289337158
    3. 's' → logprob: -4.200488567352295
    4. '```' → logprob: -5.575488567352295
    5. ' result' → logprob: -7.575488567352295
    6. 'print' → logprob: -8.075488090515137
    7. 'for' → logprob: -8.075488090515137
    8. ' s' → logprob: -8.825488090515137
    9. '+' → logprob: -8.825488090515137
    10. '``' → logprob: -9.325488090515137

Token 1353: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1463046818971634
    2. '   ' → logprob: -2.3963046073913574
    3. 'print' → logprob: -3.2713046073913574
    4. ' result' → logprob: -6.146304607391357
    5. '```' → logprob: -6.271304607391357
    6. 'for' → logprob: -6.646304607391357
    7. 's' → logprob: -6.646304607391357
    8. '+' → logprob: -9.146305084228516
    9. 'final' → logprob: -10.021305084228516
    10. ' print' → logprob: -10.021305084228516

Token 1354: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5316911935806274
    2. '   ' → logprob: -0.9066911935806274
    3. 'for' → logprob: -5.906691074371338
    4. 's' → logprob: -5.906691074371338
    5. 'print' → logprob: -6.156691074371338
    6. '```' → logprob: -7.781691074371338
    7. ' result' → logprob: -8.656691551208496
    8. 'res' → logprob: -9.281691551208496
    9. 'rest' → logprob: -9.531691551208496
    10. '+' → logprob: -9.906691551208496

Token 1355: ' récup' (ID: 62856)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.44726675748825073
    2. 'extend' → logprob: -1.6972668170928955
    3. 'final' → logprob: -3.0722668170928955
    4. 'reste' → logprob: -3.5722668170928955
    5. 'extends' → logprob: -3.6972668170928955
    6. 'rest' → logprob: -3.8222668170928955
    7. '+=' → logprob: -3.9472668170928955
    8. 'for' → logprob: -4.197266578674316
    9. ' +=' → logprob: -4.822266578674316
    10. 'result' → logprob: -5.697266578674316

Token 1356: 'ère' (ID: 4346)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6508114337921143
    2. 'ère' → logprob: -1.6508114337921143
    3. 's' → logprob: -2.1508114337921143
    4. '=' → logprob: -3.2758114337921143
    5. 'érer' → logprob: -3.2758114337921143
    6. 'érons' → logprob: -3.7758114337921143
    7. 'ér' → logprob: -4.025811195373535
    8. '=s' → logprob: -4.775811195373535
    9. 'éré' → logprob: -5.025811195373535
    10. 'er' → logprob: -5.150811195373535

Token 1357: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14365915954113007
    2. 'for' → logprob: -2.7686591148376465
    3. 'result' → logprob: -3.0186591148376465
    4. '   ' → logprob: -4.2686591148376465
    5. 'rest' → logprob: -5.6436591148376465
    6. 'remaining' → logprob: -7.0186591148376465
    7. 'res' → logprob: -7.0186591148376465
    8. ' s' → logprob: -7.1436591148376465
    9. '[s' → logprob: -7.1436591148376465
    10. '```' → logprob: -7.7686591148376465

Token 1358: ' partie' (ID: 22139)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7063302993774414
    2. 's' → logprob: -1.0813302993774414
    3. 'rest' → logprob: -2.0813302993774414
    4. 'for' → logprob: -4.206330299377441
    5. 'reste' → logprob: -4.456330299377441
    6. 'remaining' → logprob: -5.706330299377441
    7. ' s' → logprob: -6.081330299377441
    8. 'r' → logprob: -6.456330299377441
    9. '```' → logprob: -6.456330299377441
    10. 're' → logprob: -6.581330299377441

Token 1359: ' restante' (ID: 130202)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.13614000380039215
    2. 's' → logprob: -2.8861401081085205
    3. 'remaining' → logprob: -3.3861401081085205
    4. ' =' → logprob: -4.261139869689941
    5. '+=' → logprob: -4.761139869689941
    6. ' +=' → logprob: -6.136139869689941
    7. '_rest' → logprob: -6.261139869689941
    8. '=' → logprob: -6.261139869689941
    9. '```' → logprob: -6.261139869689941
    10. '   ' → logprob: -6.386139869689941

Token 1360: ' non' (ID: 2893)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.39395397901535034
    2. '   ' → logprob: -1.8939540386199951
    3. 'rest' → logprob: -2.393954038619995
    4. 'for' → logprob: -3.643954038619995
    5. '+=' → logprob: -3.768954038619995
    6. 'remaining' → logprob: -4.768953800201416
    7. ' +=' → logprob: -5.018953800201416
    8. '```' → logprob: -5.143953800201416
    9. 'res' → logprob: -5.268953800201416
    10. '
' → logprob: -5.893953800201416

Token 1361: ' trait' (ID: 15458)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.5470318794250488
    2. 'ret' → logprob: -1.4220318794250488
    3. 'used' → logprob: -2.422031879425049
    4. 'cho' → logprob: -2.547031879425049
    5. 'chosen' → logprob: -5.547031879425049
    6. 'prise' → logprob: -6.047031879425049
    7. 'result' → logprob: -6.922031879425049
    8. 'trait' → logprob: -7.047031879425049
    9. 'selected' → logprob: -7.297031879425049
    10. 'tr' → logprob: -7.547031879425049

Token 1362: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.026764774695038795
    2. '   ' → logprob: -4.151764869689941
    3. 's' → logprob: -4.901764869689941
    4. 'ante' → logprob: -6.526764869689941
    5. 'é' → logprob: -8.276764869689941
    6. 'rée' → logprob: -8.276764869689941
    7. 'ées' → logprob: -8.526764869689941
    8. 'e' → logprob: -8.651764869689941
    9. '=s' → logprob: -9.026764869689941
    10. ' s' → logprob: -9.401764869689941

Token 1363: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7096384763717651
    2. 'rest' → logprob: -1.4596384763717651
    3. '   ' → logprob: -1.5846384763717651
    4. 'for' → logprob: -3.0846385955810547
    5. 'res' → logprob: -5.209638595581055
    6. '+=' → logprob: -5.459638595581055
    7. 'remaining' → logprob: -5.709638595581055
    8. ' +=' → logprob: -5.834638595581055
    9. '```' → logprob: -6.084638595581055
    10. 'print' → logprob: -7.209638595581055

Token 1364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0936102867126465
    2. 'result' → logprob: -1.2186102867126465
    3. 'rest' → logprob: -1.4686102867126465
    4. 'for' → logprob: -2.7186102867126465
    5. '```' → logprob: -3.7186102867126465
    6. 'remaining' → logprob: -4.5936102867126465
    7. ' for' → logprob: -4.8436102867126465
    8. 's' → logprob: -4.8436102867126465
    9. 'res' → logprob: -5.2186102867126465
    10. 'print' → logprob: -5.5936102867126465

Token 1365: ' suffix' (ID: 43412)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14864583313465118
    2. 'for' → logprob: -3.2736458778381348
    3. 'rest' → logprob: -3.2736458778381348
    4. '   ' → logprob: -3.6486458778381348
    5. 'print' → logprob: -4.023645877838135
    6. 'remaining' → logprob: -4.648645877838135
    7. 'res' → logprob: -5.773645877838135
    8. 's' → logprob: -6.523645877838135
    9. 'suffix' (adapté à ' suffix') → logprob: -6.773645877838135
    10. 're' → logprob: -7.273645877838135

Token 1366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12717095017433167
    2. ' =' → logprob: -2.127171039581299
    3. '=s' → logprob: -8.50217056274414
    4. '   ' → logprob: -10.25217056274414
    5. 's' → logprob: -12.87717056274414
    6. '```' → logprob: -14.00217056274414
    7. '＝' → logprob: -15.00217056274414
    8. ' ' → logprob: -15.37717056274414
    9. '=
' → logprob: -15.50217056274414
    10. '_s' → logprob: -16.25217056274414

Token 1367: ' []
' (ID: 8911)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018180379644036293
    2. ' s' → logprob: -4.0181803703308105
    3. '   ' → logprob: -11.268180847167969
    4. '''.' → logprob: -12.393180847167969
    5. 'list' → logprob: -13.018180847167969
    6. '[s' → logprob: -13.018180847167969
    7. '	s' → logprob: -13.268180847167969
    8. '```' → logprob: -13.643180847167969
    9. ' ' → logprob: -13.768180847167969
    10. '"s' → logprob: -14.018180847167969

Token 1368: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12933240830898285
    2. '   ' → logprob: -2.1293323040008545
    3. ' for' → logprob: -6.754332542419434
    4. 'suffix' → logprob: -7.129332542419434
    5. '```' → logprob: -8.254332542419434
    6. 'while' → logprob: -9.254332542419434
    7. '
' → logprob: -10.129332542419434
    8. '	for' → logprob: -10.754332542419434
    9. 's' → logprob: -12.254332542419434
    10. '``' → logprob: -12.254332542419434

Token 1369: ' taken' (ID: 6697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009676877409219742
    2. '   ' → logprob: -4.759676933288574
    3. 'while' → logprob: -7.134676933288574
    4. 'suffix' → logprob: -8.509676933288574
    5. ' for' → logprob: -9.884676933288574
    6. '	for' → logprob: -11.884676933288574
    7. 'i' → logprob: -13.134676933288574
    8. '
' → logprob: -13.634676933288574
    9. '```' → logprob: -13.759676933288574
    10. 's' → logprob: -15.384676933288574

Token 1370: '_positions' (ID: 93193)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3043174743652344
    2. ' =' → logprob: -1.5543174743652344
    3. '_positions' → logprob: -3.4293174743652344
    4. '_indices' → logprob: -4.554317474365234
    5. '=set' → logprob: -5.429317474365234
    6. '_pos' → logprob: -6.179317474365234
    7. '   ' → logprob: -7.554317474365234
    8. 'positions' → logprob: -8.054317474365234
    9. 'indices' → logprob: -8.304317474365234
    10. '_set' → logprob: -8.679317474365234

Token 1371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2533130645751953
    2. ' =' → logprob: -1.5033130645751953
    3. '=set' → logprob: -6.628313064575195
    4. '=[]' → logprob: -10.753313064575195
    5. '   ' → logprob: -11.003313064575195
    6. '_set' → logprob: -12.503313064575195
    7. 's' → logprob: -13.378313064575195
    8. 'set' → logprob: -13.378313064575195
    9. '=[]
' → logprob: -13.503313064575195
    10. '```' → logprob: -13.503313064575195

Token 1372: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.026827452704310417
    2. '{' → logprob: -3.651827335357666
    3. ' set' → logprob: -8.401827812194824
    4. 'current' → logprob: -8.776827812194824
    5. '{}' → logprob: -9.026827812194824
    6. '0' → logprob: -12.026827812194824
    7. ' {' → logprob: -12.151827812194824
    8. '[]' → logprob: -12.151827812194824
    9. '[current' → logprob: -12.651827812194824
    10. '(set' → logprob: -13.776827812194824

Token 1373: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2684732973575592
    2. '(range' → logprob: -2.0184733867645264
    3. '()
' → logprob: -2.3934733867645264
    4. '(s' → logprob: -5.268473148345947
    5. 'range' → logprob: -5.518473148345947
    6. '([' → logprob: -7.893473148345947
    7. ' =' → logprob: -8.143473625183105
    8. '(current' → logprob: -8.268473625183105
    9. '(result' → logprob: -8.393473625183105
    10. '=' → logprob: -8.393473625183105

Token 1374: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10064850002527237
    2. '   ' → logprob: -2.8506484031677246
    3. 'while' → logprob: -3.4756484031677246
    4. 'used' → logprob: -5.725648403167725
    5. ' for' → logprob: -6.725648403167725
    6. 'positions' → logprob: -7.475648403167725
    7. 'taken' → logprob: -7.475648403167725
    8. 'current' → logprob: -7.975648403167725
    9. 'pos' → logprob: -8.100648880004883
    10. '	for' → logprob: -8.725648880004883

Token 1375: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03352870047092438
    2. 'while' → logprob: -4.533528804779053
    3. 'used' → logprob: -4.783528804779053
    4. 'pos' → logprob: -5.158528804779053
    5. '   ' → logprob: -6.033528804779053
    6. 'taken' → logprob: -6.283528804779053
    7. 'positions' → logprob: -6.408528804779053
    8. 'indices' → logprob: -7.408528804779053
    9. 'idx' → logprob: -8.283528327941895
    10. 'i' → logprob: -8.283528327941895

Token 1376: ' positions' (ID: 15897)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2660176455974579
    2. 'used' → logprob: -2.2660176753997803
    3. '   ' → logprob: -2.3910176753997803
    4. 'while' → logprob: -4.391017436981201
    5. 'visited' → logprob: -5.016017436981201
    6. 'pos' → logprob: -5.266017436981201
    7. 'taken' → logprob: -5.266017436981201
    8. 'current' → logprob: -6.266017436981201
    9. 'indices' → logprob: -6.766017436981201
    10. 'seen' → logprob: -6.891017436981201

Token 1377: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6300174593925476
    2. ' =' → logprob: -1.2550175189971924
    3. 'for' → logprob: -2.7550175189971924
    4. 'current' → logprob: -3.2550175189971924
    5. 'used' → logprob: -4.005017280578613
    6. 'from' → logprob: -5.255017280578613
    7. '   ' → logprob: -5.380017280578613
    8. 'import' → logprob: -5.380017280578613
    9. '=[]' → logprob: -5.630017280578613
    10. 's' → logprob: -5.880017280578613

Token 1378: ' lettres' (ID: 101234)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3832342326641083
    2. 's' → logprob: -2.0082342624664307
    3. 'lett' → logprob: -3.1332342624664307
    4. 'c' → logprob: -3.7582342624664307
    5. 'car' → logprob: -3.8832342624664307
    6. 'i' → logprob: -4.133234024047852
    7. 'positions' → logprob: -4.258234024047852
    8. 'res' → logprob: -4.633234024047852
    9. 'used' → logprob: -4.758234024047852
    10. 'pos' → logprob: -5.258234024047852

Token 1379: ' utilisées' (ID: 130009)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4647631645202637
    2. 'used' → logprob: -1.4647631645202637
    3. 'for' → logprob: -1.5897631645202637
    4. '   ' → logprob: -1.8397631645202637
    5. '=' → logprob: -3.2147631645202637
    6. 'rest' → logprob: -3.3397631645202637
    7. 'util' → logprob: -4.089763164520264
    8. '_used' → logprob: -4.589763164520264
    9. 'import' → logprob: -5.089763164520264
    10. 'dans' → logprob: -5.089763164520264

Token 1380: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15112073719501495
    2. '=' → logprob: -2.401120662689209
    3. 'for' → logprob: -4.401120662689209
    4. 'used' → logprob: -5.151120662689209
    5. '   ' → logprob: -5.276120662689209
    6. '=set' → logprob: -5.401120662689209
    7. 'taken' → logprob: -5.526120662689209
    8. '<|end|>' → logprob: -6.401120662689209
    9. '=[]' → logprob: -6.526120662689209
    10. 's' → logprob: -6.526120662689209

Token 1381: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.007622364908456802
    2. 'rés' → logprob: -5.632622241973877
    3. 'res' → logprob: -7.007622241973877
    4. 'current' → logprob: -7.382622241973877
    5. ' result' → logprob: -7.632622241973877
    6. '#' → logprob: -8.007622718811035
    7. 'main' → logprob: -8.132622718811035
    8. 's' → logprob: -8.382622718811035
    9. '```' → logprob: -9.007622718811035
    10. 'dé' → logprob: -9.132622718811035

Token 1382: ' ont' (ID: 4930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7697470188140869
    2. 'used' → logprob: -1.519747018814087
    3. '   ' → logprob: -1.894747018814087
    4. ' for' → logprob: -2.769747018814087
    5. '
' → logprob: -3.519747018814087
    6. ' =' → logprob: -3.769747018814087
    7. ' used' → logprob: -4.269746780395508
    8. '```' → logprob: -4.894746780395508
    9. 'taken' → logprob: -5.269746780395508
    10. '#' → logprob: -5.269746780395508

Token 1383: ' été' (ID: 9799)
  Prédit: 'been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'been' → logprob: -1.0990318059921265
    2. 'été' → logprob: -1.3490318059921265
    3. '=' → logprob: -1.8490318059921265
    4. 'not' → logprob: -2.599031925201416
    5. 'already' → logprob: -2.849031925201416
    6. 'dé' → logprob: -3.724031925201416
    7. '#' → logprob: -4.099031925201416
    8. '{}' → logprob: -4.224031925201416
    9. 'pas' → logprob: -4.724031925201416
    10. 'pass' → logprob: -4.974031925201416

Token 1384: ' retir' (ID: 35638)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.1398292779922485
    2. 'util' → logprob: -2.014829158782959
    3. 'dé' → logprob: -2.014829158782959
    4. 'pr' → logprob: -3.014829158782959
    5. 'trait' → logprob: -3.014829158782959
    6. 'cho' → logprob: -3.014829158782959
    7. 'ret' → logprob: -3.139829158782959
    8. 'prises' → logprob: -3.389829158782959
    9. 'pris' → logprob: -3.389829158782959
    10. 'prise' → logprob: -3.514829158782959

Token 1385: 'ées' (ID: 5161)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2941406965255737
    2. '()' → logprob: -2.0441408157348633
    3. '   ' → logprob: -2.1691408157348633
    4. '=' → logprob: -2.4191408157348633
    5. 'from' → logprob: -2.5441408157348633
    6. 'for' → logprob: -2.9191408157348633
    7. 'de' → logprob: -3.2941408157348633
    8. '#' → logprob: -3.5441408157348633
    9. 'des' → logprob: -3.6691408157348633
    10. '       ' → logprob: -3.6691408157348633

Token 1386: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5285130143165588
    2. '   ' → logprob: -1.403512954711914
    3. ' for' → logprob: -2.653512954711914
    4. 'used' → logprob: -3.403512954711914
    5. '
' → logprob: -3.528512954711914
    6. ' =' → logprob: -4.028512954711914
    7. '=' → logprob: -6.153512954711914
    8. '#' → logprob: -6.278512954711914
    9. 'while' → logprob: -6.403512954711914
    10. '```' → logprob: -6.528512954711914

Token 1387: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.002644025720655918
    2. 's' → logprob: -6.002644062042236
    3. ' positions' → logprob: -9.877643585205078
    4. 'la' → logprob: -10.252643585205078
    5. '```' → logprob: -10.502643585205078
    6. 'pos' → logprob: -11.127643585205078
    7. ' s' → logprob: -11.502643585205078
    8. 'the' → logprob: -12.377643585205078
    9. 'deque' → logprob: -12.627643585205078
    10. 'indices' → logprob: -12.877643585205078

Token 1388: '[],' (ID: 25409)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6321750283241272
    2. 'for' → logprob: -1.1321749687194824
    3. '   ' → logprob: -3.1321749687194824
    4. 'rest' → logprob: -3.8821749687194824
    5. 'indices' → logprob: -4.257174968719482
    6. '#' → logprob: -4.382174968719482
    7. ' for' → logprob: -4.757174968719482
    8. 'taken' → logprob: -4.757174968719482
    9. 'remaining' → logprob: -5.132174968719482
    10. 'while' → logprob: -5.382174968719482

Token 1389: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16025368869304657
    2. 'mais' → logprob: -2.6602537631988525
    3. '   ' → logprob: -3.2852537631988525
    4. 'for' → logprob: -5.035253524780273
    5. 'continue' → logprob: -5.285253524780273
    6. 'but' → logprob: -5.410253524780273
    7. ' mais' → logprob: -5.535253524780273
    8. ' #' → logprob: -5.785253524780273
    9. 'don' → logprob: -5.910253524780273
    10. ' donc' → logprob: -6.160253524780273

Token 1390: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.09205107390880585
    2. '#' → logprob: -2.9670510292053223
    3. 'continu' → logprob: -4.342051029205322
    4. ' continue' → logprob: -4.967051029205322
    5. 'for' → logprob: -4.967051029205322
    6. 'n' → logprob: -5.717051029205322
    7. 'contin' → logprob: -6.092051029205322
    8. 'ne' → logprob: -6.842051029205322
    9. 'vais' → logprob: -7.342051029205322
    10. 'do' → logprob: -7.842051029205322

Token 1391: ' les' (ID: 1341)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4654338359832764
    2. 'pe' → logprob: -1.7154338359832764
    3. 'les' → logprob: -1.8404338359832764
    4. '#' → logprob: -2.3404338359832764
    5. 'pas' → logprob: -2.3404338359832764
    6. 'pour' → logprob: -3.2154338359832764
    7. 'g' → logprob: -3.3404338359832764
    8. 'do' → logprob: -3.3404338359832764
    9. 's' → logprob: -3.8404338359832764
    10. 'f' → logprob: -4.0904340744018555

Token 1392: ' print' (ID: 2123)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9541252255439758
    2. 'pas' → logprob: -1.829125165939331
    3. 'for' → logprob: -2.329125165939331
    4. 'aj' → logprob: -2.454125165939331
    5. 'g' → logprob: -2.704125165939331
    6. 'pr' → logprob: -3.204125165939331
    7. 'p' → logprob: -3.829125165939331
    8. 's' → logprob: -3.829125165939331
    9. 'pour' → logprob: -4.32912540435791
    10. 'prise' → logprob: -4.45412540435791

Token 1393: ' plus' (ID: 2932)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9601911306381226
    2. 'for' → logprob: -0.9601911306381226
    3. '=' → logprob: -2.460191249847412
    4. ' for' → logprob: -3.210191249847412
    5. '```' → logprob: -3.835191249847412
    6. 's' → logprob: -3.960191249847412
    7. '   ' → logprob: -4.085191249847412
    8. 'while' → logprob: -4.710191249847412
    9. '
' → logprob: -4.835191249847412
    10. 'suffix' → logprob: -5.335191249847412

Token 1394: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30383601784706116
    2. '   ' → logprob: -1.5538359880447388
    3. 'suffix' → logprob: -3.6788361072540283
    4. ' for' → logprob: -3.9288361072540283
    5. '
' → logprob: -6.428835868835449
    6. 'while' → logprob: -6.928835868835449
    7. '```' → logprob: -7.053835868835449
    8. 'remaining' → logprob: -7.053835868835449
    9. 'rest' → logprob: -7.428835868835449
    10. '    
' → logprob: -8.80383586883545

Token 1395: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5984376668930054
    2. '   ' → logprob: -1.0984376668930054
    3. ' for' → logprob: -2.598437786102295
    4. '```' → logprob: -3.348437786102295
    5. '
' → logprob: -6.473437786102295
    6. 'current' → logprob: -6.723437786102295
    7. '``' → logprob: -6.723437786102295
    8. 'pos' → logprob: -7.348437786102295
    9. 'suffix' → logprob: -7.348437786102295
    10. 'remaining' → logprob: -7.848437786102295

Token 1396: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2488594353199005
    2. 'used' → logprob: -1.7488594055175781
    3. '   ' → logprob: -3.998859405517578
    4. ' for' → logprob: -5.248859405517578
    5. 'pos' → logprob: -5.748859405517578
    6. 'rest' → logprob: -5.748859405517578
    7. 'indices' → logprob: -5.873859405517578
    8. 'remaining' → logprob: -5.998859405517578
    9. 'i' → logprob: -6.248859405517578
    10. '#' (adapté à ' #') → logprob: -6.373859405517578

Token 1397: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6179853677749634
    2. 'used' → logprob: -0.8679853677749634
    3. 'visited' → logprob: -4.367985248565674
    4. 'pos' → logprob: -4.867985248565674
    5. 'indices' → logprob: -5.117985248565674
    6. 'taken' → logprob: -5.617985248565674
    7. 'rest' → logprob: -5.992985248565674
    8. '   ' → logprob: -6.242985248565674
    9. 'seen' → logprob: -6.742985248565674
    10. 'positions' → logprob: -6.742985248565674

Token 1398: ' suffix' (ID: 43412)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31750065088272095
    2. 'suffix' → logprob: -2.317500591278076
    3. '#' → logprob: -3.067500591278076
    4. 'rest' → logprob: -3.317500591278076
    5. 'while' → logprob: -3.942500591278076
    6. 'taken' → logprob: -4.192500591278076
    7. 'remaining' → logprob: -4.442500591278076
    8. 'reste' → logprob: -4.442500591278076
    9. 'pos' → logprob: -4.692500591278076
    10. 'indices' → logprob: -5.442500591278076

Token 1399: 'e' (ID: 68)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22648485004901886
    2. '=' → logprob: -1.6014848947525024
    3. 's' → logprob: -8.476485252380371
    4. ' +=' → logprob: -8.726485252380371
    5. '=s' → logprob: -9.226485252380371
    6. 'suffix' → logprob: -9.226485252380371
    7. '+=' → logprob: -9.726485252380371
    8. '=[]' → logprob: -9.726485252380371
    9. '```' → logprob: -9.851485252380371
    10. 'uffix' → logprob: -9.851485252380371

Token 1400: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4348500072956085
    2. '.extend' → logprob: -1.8098499774932861
    3. ' =' → logprob: -2.309849977493286
    4. '+=' → logprob: -2.684849977493286
    5. ' +=' → logprob: -3.934849977493286
    6. '=s' → logprob: -6.809850215911865
    7. '.append' → logprob: -8.309849739074707
    8. 'extend' → logprob: -8.434849739074707
    9. 'extends' → logprob: -9.184849739074707
    10. 's' → logprob: -9.309849739074707

Token 1401: ' donc' (ID: 14206)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05350847542285919
    2. '[s' → logprob: -3.3035085201263428
    3. '   ' → logprob: -4.553508281707764
    4. ' s' → logprob: -5.928508281707764
    5. '```' → logprob: -7.178508281707764
    6. '[' → logprob: -7.803508281707764
    7. 'current' → logprob: -8.678508758544922
    8. '       ' → logprob: -8.803508758544922
    9. 'sorted' → logprob: -9.428508758544922
    10. '[current' → logprob: -9.553508758544922

Token 1402: ' tout' (ID: 5501)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2652115523815155
    2. '[s' → logprob: -1.515211582183838
    3. '   ' → logprob: -5.140211582183838
    4. '[current' → logprob: -6.140211582183838
    5. 'current' → logprob: -6.265211582183838
    6. ' s' → logprob: -6.640211582183838
    7. '[' → logprob: -7.765211582183838
    8. ' [' → logprob: -8.01521110534668
    9. 'list' → logprob: -8.14021110534668
    10. 'sorted' → logprob: -8.64021110534668

Token 1403: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.342451274394989
    2. 'range' → logprob: -2.467451333999634
    3. 'current' → logprob: -3.092451333999634
    4. '   ' → logprob: -3.467451333999634
    5. 'for' → logprob: -3.842451333999634
    6. 'rest' → logprob: -3.967451333999634
    7. 'remaining' → logprob: -3.967451333999634
    8. ' s' → logprob: -4.092451095581055
    9. '=' → logprob: -5.092451095581055
    10. '.append' → logprob: -5.217451095581055

Token 1404: ' reste' (ID: 26769)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4418889284133911
    2. 'current' → logprob: -1.6918889284133911
    3. 'i' → logprob: -2.9418888092041016
    4. 'range' → logprob: -3.0668888092041016
    5. ' current' → logprob: -4.441888809204102
    6. 'for' → logprob: -4.566888809204102
    7. ' s' → logprob: -4.566888809204102
    8. 'remaining' → logprob: -5.066888809204102
    9. 'pos' → logprob: -5.191888809204102
    10. 'n' → logprob: -5.191888809204102

Token 1405: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1416429877281189
    2. 'for' → logprob: -2.3916430473327637
    3. 'suffix' → logprob: -3.6416430473327637
    4. ' =' → logprob: -5.766643047332764
    5. '```' → logprob: -5.891643047332764
    6. 's' → logprob: -6.391643047332764
    7. '
' → logprob: -6.641643047332764
    8. '+=' → logprob: -6.891643047332764
    9. ' +=' → logprob: -6.891643047332764
    10. '=' → logprob: -7.016643047332764

Token 1406: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010727076791226864
    2. ' s' → logprob: -4.7607269287109375
    3. 'range' → logprob: -6.5107269287109375
    4. 'la' → logprob: -8.010726928710938
    5. ' range' → logprob: -9.260726928710938
    6. '```' → logprob: -9.510726928710938
    7. ' la' → logprob: -9.885726928710938
    8. 'l' → logprob: -10.510726928710938
    9. '(s' → logprob: -11.635726928710938
    10. 'the' → logprob: -11.760726928710938

Token 1407: ' à' (ID: 1221)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.019256995990872383
    2. 'current' → logprob: -4.894257068634033
    3. '[' → logprob: -5.394257068634033
    4. '   ' → logprob: -5.394257068634033
    5. 'for' → logprob: -7.394257068634033
    6. 'from' → logprob: -7.769257068634033
    7. '
' → logprob: -8.019256591796875
    8. '```' → logprob: -8.144256591796875
    9. ' current' → logprob: -8.644256591796875
    10. '(current' → logprob: -9.019256591796875

Token 1408: ' partir' (ID: 12100)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.11642042547464371
    2. ' partir' → logprob: -2.4914205074310303
    3. 'part' → logprob: -3.7414205074310303
    4. 'from' → logprob: -6.866420269012451
    5. '[current' → logprob: -7.366420269012451
    6. 'index' → logprob: -7.366420269012451
    7. ' current' → logprob: -7.991420269012451
    8. '```' → logprob: -8.24142074584961
    9. 'starting' → logprob: -8.86642074584961
    10. 'indice' → logprob: -9.74142074584961

Token 1409: ' de' (ID: 334)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0161330234259367
    2. 'de' → logprob: -5.391132831573486
    3. '=current' → logprob: -5.641132831573486
    4. ' current' → logprob: -6.016132831573486
    5. '(current' → logprob: -6.516132831573486
    6. '[current' → logprob: -6.641132831573486
    7. '=' → logprob: -6.641132831573486
    8. '   ' → logprob: -7.141132831573486
    9. ' de' → logprob: -8.641133308410645
    10. 'of' → logprob: -9.516133308410645

Token 1410: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -3.35706390615087e-05
    2. ' current' → logprob: -10.375033378601074
    3. '```' → logprob: -13.750033378601074
    4. '
' → logprob: -14.875033378601074
    5. '   ' → logprob: -15.000033378601074
    6. '(current' → logprob: -15.875033378601074
    7. '`' → logprob: -16.12503433227539
    8. '[current' → logprob: -16.25003433227539
    9. '$current' → logprob: -16.25003433227539
    10. '	current' → logprob: -16.75003433227539

Token 1411: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00011212585377506912
    2. 'pos' → logprob: -9.125112533569336
    3. '_' → logprob: -13.750112533569336
    4. 'Pos' → logprob: -14.125112533569336
    5. '_positions' → logprob: -15.125112533569336
    6. '_idx' → logprob: -15.250112533569336
    7. '```' → logprob: -15.375112533569336
    8. '_position' → logprob: -15.625112533569336
    9. '+' → logprob: -16.625112533569336
    10. 'current' → logprob: -16.750112533569336

Token 1412: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05454650893807411
    2. 'for' → logprob: -3.304546594619751
    3. 'suffix' → logprob: -4.679546356201172
    4. 'while' → logprob: -6.429546356201172
    5. '
' → logprob: -6.554546356201172
    6. ' for' → logprob: -6.679546356201172
    7. '```' → logprob: -6.804546356201172
    8. ' =' → logprob: -7.429546356201172
    9. '=' → logprob: -8.304546356201172
    10. 's' → logprob: -8.554546356201172

Token 1413: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7659720778465271
    2. 'suffix' → logprob: -0.8909720778465271
    3. 's' → logprob: -3.015972137451172
    4. ' suffix' → logprob: -3.140972137451172
    5. ' s' → logprob: -4.140972137451172
    6. '```' → logprob: -5.265972137451172
    7. 'for' → logprob: -5.765972137451172
    8. 'current' → logprob: -6.140972137451172
    9. '       ' → logprob: -7.265972137451172
    10. 'while' → logprob: -7.390972137451172

Token 1414: ' attention' (ID: 8684)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8216224908828735
    2. ' current' → logprob: -1.1966224908828735
    3. '```' → logprob: -2.446622371673584
    4. ' pas' → logprob: -4.071622371673584
    5. ' il' → logprob: -4.571622371673584
    6. 'pas' → logprob: -4.696622371673584
    7. 'for' → logprob: -4.696622371673584
    8. 'il' → logprob: -4.821622371673584
    9. '#' → logprob: -5.071622371673584
    10. '
' → logprob: -5.196622371673584

Token 1415: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12050792574882507
    2. 'for' → logprob: -3.6205079555511475
    3. 'while' → logprob: -3.7455079555511475
    4. ' =' → logprob: -3.8705079555511475
    5. '=' → logprob: -4.870507717132568
    6. 's' → logprob: -4.995507717132568
    7. 'current' → logprob: -5.245507717132568
    8. ' for' → logprob: -5.370507717132568
    9. '#' → logprob: -5.745507717132568
    10. 'suffix' → logprob: -5.745507717132568

Token 1416: ' caractères' (ID: 183106)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.6033982634544373
    2. ' indices' → logprob: -1.728398323059082
    3. 'positions' → logprob: -2.103398323059082
    4. 'for' → logprob: -3.353398323059082
    5. ' positions' → logprob: -3.853398323059082
    6. ' for' → logprob: -3.978398323059082
    7. 'pos' → logprob: -4.228398323059082
    8. 'i' → logprob: -4.478398323059082
    9. '#' → logprob: -4.728398323059082
    10. 'rest' → logprob: -4.978398323059082

Token 1417: ' à' (ID: 1221)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -1.1358217000961304
    2. 'rest' → logprob: -1.1358217000961304
    3. '#' → logprob: -3.13582181930542
    4. '```' → logprob: -3.38582181930542
    5. 'dans' → logprob: -3.38582181930542
    6. '   ' → logprob: -3.51082181930542
    7. ' qui' → logprob: -4.01082181930542
    8. 'pr' → logprob: -4.51082181930542
    9. 'n' → logprob: -4.51082181930542
    10. ' n' → logprob: -4.51082181930542

Token 1418: ' positions' (ID: 15897)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.3961712419986725
    2. 'ign' → logprob: -2.6461713314056396
    3. 'print' → logprob: -3.2711713314056396
    4. 'sup' → logprob: -3.2711713314056396
    5. 'prendre' → logprob: -3.3961713314056396
    6. 'aff' → logprob: -3.5211713314056396
    7. 'index' → logprob: -3.8961713314056396
    8. 'ignore' → logprob: -4.2711710929870605
    9. 'ret' → logprob: -4.5211710929870605
    10. 'g' → logprob: -4.6461710929870605

Token 1419: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.09484263509511948
    2. ' >=' → logprob: -2.9698426723480225
    3. '>' → logprob: -4.094842433929443
    4. 'sup' → logprob: -4.344842433929443
    5. 'current' → logprob: -6.469842433929443
    6. '[current' → logprob: -6.844842433929443
    7. '[i' → logprob: -7.219842433929443
    8. '```' → logprob: -7.219842433929443
    9. ')' → logprob: -7.344842433929443
    10. '   ' → logprob: -7.469842433929443

Token 1420: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0022037860471755266
    2. ' current' → logprob: -6.252203941345215
    3. 'n' → logprob: -8.502203941345215
    4. 'len' → logprob: -10.377203941345215
    5. '```' → logprob: -10.627203941345215
    6. 's' → logprob: -12.002203941345215
    7. ' n' → logprob: -13.002203941345215
    8. '=current' → logprob: -13.127203941345215
    9. '
' → logprob: -13.127203941345215
    10. '`' → logprob: -14.002203941345215

Token 1421: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0003389190824236721
    2. 'pos' → logprob: -8.125338554382324
    3. 'current' → logprob: -10.375338554382324
    4. '_' → logprob: -12.000338554382324
    5. '_current' → logprob: -12.625338554382324
    6. 'Pos' → logprob: -13.875338554382324
    7. '```' → logprob: -14.750338554382324
    8. '+' → logprob: -15.125338554382324
    9. ' current' → logprob: -15.500338554382324
    10. '   ' → logprob: -15.875338554382324

Token 1422: ' 
' (ID: 793)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.28000491857528687
    2. ' +' → logprob: -2.5300049781799316
    3. '+' → logprob: -3.0300049781799316
    4. 'current' → logprob: -3.2800049781799316
    5. ' current' → logprob: -3.7800049781799316
    6. '   ' → logprob: -3.7800049781799316
    7. '```' → logprob: -4.530004978179932
    8. '[' → logprob: -5.905004978179932
    9. '=' → logprob: -6.155004978179932
    10. '(current' → logprob: -6.405004978179932

Token 1423: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.6841121912002563
    2. ' ne' → logprob: -2.059112071990967
    3. ' n' → logprob: -2.184112071990967
    4. ' rest' → logprob: -2.684112071990967
    5. 's' → logprob: -2.809112071990967
    6. ' doivent' → logprob: -2.934112071990967
    7. 'n' → logprob: -3.184112071990967
    8. ' sont' → logprob: -3.184112071990967
    9. '   ' → logprob: -3.184112071990967
    10. ' restent' → logprob: -3.434112071990967

Token 1424: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.7534810304641724
    2. '```' → logprob: -2.128480911254883
    3. '   ' → logprob: -2.878480911254883
    4. 'n' → logprob: -2.878480911254883
    5. ' n' → logprob: -3.128480911254883
    6. 's' → logprob: -3.128480911254883
    7. ' current' → logprob: -3.253480911254883
    8. '>=' → logprob: -3.253480911254883
    9. '[current' → logprob: -3.253480911254883
    10. ' sont' → logprob: -3.378480911254883

Token 1425: ' ont' (ID: 4930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2164959907531738
    2. 'do' → logprob: -1.8414959907531738
    3. 'n' → logprob: -1.9664959907531738
    4. 'ne' → logprob: -2.341495990753174
    5. 'rest' → logprob: -2.591495990753174
    6. 'ont' → logprob: -2.966495990753174
    7. ' ne' → logprob: -3.591495990753174
    8. 'dans' → logprob: -3.716495990753174
    9. '```' → logprob: -3.841495990753174
    10. '#' → logprob: -3.841495990753174

Token 1426: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.011863824911415577
    2. 'dé' → logprob: -4.761863708496094
    3. ' été' → logprob: -6.636863708496094
    4. '#' → logprob: -7.636863708496094
    5. '```' → logprob: -7.636863708496094
    6. 'already' → logprob: -8.761863708496094
    7. 'ét' → logprob: -8.761863708496094
    8. 'être' → logprob: -8.761863708496094
    9. 'éta' → logprob: -9.136863708496094
    10. ' déjà' → logprob: -9.386863708496094

Token 1427: ' supprim' (ID: 142986)
  Prédit: 'ignor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ignor' → logprob: -1.3315386772155762
    2. 'trait' → logprob: -2.081538677215576
    3. 'dé' → logprob: -2.081538677215576
    4. 'sup' → logprob: -2.206538677215576
    5. '```' → logprob: -2.331538677215576
    6. 'ret' → logprob: -2.706538677215576
    7. 'util' → logprob: -2.956538677215576
    8. 'ignored' → logprob: -2.956538677215576
    9. '#' → logprob: -3.831538677215576
    10. 'aj' → logprob: -3.956538677215576

Token 1428: 'és' (ID: 1756)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -2.14662766456604
    2. ':' → logprob: -2.27162766456604
    3. ' current' → logprob: -2.27162766456604
    4. '=' → logprob: -2.52162766456604
    5. 'current' → logprob: -2.52162766456604
    6. '   ' → logprob: -2.77162766456604
    7. '[current' → logprob: -2.89662766456604
    8. ' =' → logprob: -2.89662766456604
    9. ']' → logprob: -3.02162766456604
    10. 's' → logprob: -3.39662766456604

Token 1429: '
' (ID: 198)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.7955480217933655
    2. '   ' → logprob: -1.6705479621887207
    3. 'current' → logprob: -2.4205479621887207
    4. '```' → logprob: -2.7955479621887207
    5. ' +' → logprob: -3.0455479621887207
    6. 's' → logprob: -3.1705479621887207
    7. '+' → logprob: -3.5455479621887207
    8. 'from' → logprob: -4.295547962188721
    9. '[' → logprob: -4.295547962188721
    10. ' current' → logprob: -4.795547962188721

Token 1430: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08474846184253693
    2. 'for' → logprob: -3.0847485065460205
    3. 'suffix' → logprob: -3.7097485065460205
    4. 'while' → logprob: -5.334748268127441
    5. ' for' → logprob: -5.959748268127441
    6. '```' → logprob: -6.209748268127441
    7. '
' → logprob: -7.584748268127441
    8. 'rest' → logprob: -8.334748268127441
    9. 's' → logprob: -8.459748268127441
    10. ' while' → logprob: -8.584748268127441

Token 1431: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.036787521094083786
    2. '   ' → logprob: -3.411787509918213
    3. ' for' → logprob: -6.661787509918213
    4. 'suffix' → logprob: -7.036787509918213
    5. '```' → logprob: -7.161787509918213
    6. 'while' → logprob: -9.661787986755371
    7. '``' → logprob: -9.911787986755371
    8. '
' → logprob: -10.411787986755371
    9. 'pos' → logprob: -10.911787986755371
    10. 'remaining' → logprob: -11.411787986755371

Token 1432: ' En' (ID: 2130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5919941663742065
    2. 'suffix' → logprob: -1.0919941663742065
    3. '   ' → logprob: -2.341994285583496
    4. ' for' → logprob: -4.966994285583496
    5. 's' → logprob: -5.841994285583496
    6. 'while' → logprob: -6.091994285583496
    7. '```' → logprob: -7.091994285583496
    8. ' suffix' → logprob: -7.091994285583496
    9. 'rest' → logprob: -8.341994285583496
    10. 'remaining' → logprob: -8.341994285583496

Token 1433: ' fait' (ID: 7473)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.24462594091892242
    2. 'for' → logprob: -2.869626045227051
    3. 'f' → logprob: -3.369626045227051
    4. 'continu' → logprob: -3.744626045227051
    5. 'continue' → logprob: -3.744626045227051
    6. 'faite' → logprob: -4.244626045227051
    7. '#' → logprob: -4.244626045227051
    8. 'eff' → logprob: -4.369626045227051
    9. 'raison' → logprob: -5.244626045227051
    10. 'suite' → logprob: -5.369626045227051

Token 1434: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30841025710105896
    2. ':' → logprob: -2.933410167694092
    3. '#' → logprob: -3.058410167694092
    4. ' =' → logprob: -3.433410167694092
    5. '```' → logprob: -3.683410167694092
    6. ',' → logprob: -4.183410167694092
    7. 'current' → logprob: -4.308410167694092
    8. 'suffix' → logprob: -4.308410167694092
    9. ' s' → logprob: -4.933410167694092
    10. ' current' → logprob: -5.058410167694092

Token 1435: ' on' (ID: 402)
  Prédit: 'suffix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suffix' → logprob: -0.2952064275741577
    2. ' suffix' → logprob: -1.5452064275741577
    3. 'for' → logprob: -4.170206546783447
    4. '#' → logprob: -4.170206546783447
    5. ' for' → logprob: -5.045206546783447
    6. '```' → logprob: -6.545206546783447
    7. 'while' → logprob: -7.170206546783447
    8. '   ' → logprob: -7.295206546783447
    9. ' #' → logprob: -7.670206546783447
    10. 'rest' → logprob: -8.295206069946289

Token 1436: ' n' (ID: 297)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21634986996650696
    2. 'for' → logprob: -3.2163498401641846
    3. '+=' → logprob: -3.2163498401641846
    4. '=' → logprob: -3.5913498401641846
    5. 'contin' → logprob: -3.9663498401641846
    6. '#' → logprob: -4.091350078582764
    7. ' =' → logprob: -5.091350078582764
    8. 'n' → logprob: -5.091350078582764
    9. ' continue' → logprob: -5.091350078582764
    10. '```' → logprob: -5.466350078582764

Token 1437: ''a' (ID: 10443)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3624562919139862
    2. ' +=' → logprob: -2.2374563217163086
    3. '.extend' → logprob: -2.6124563217163086
    4. '.append' → logprob: -3.2374563217163086
    5. '=' → logprob: -3.3624563217163086
    6. '   ' → logprob: -4.487456321716309
    7. 's' → logprob: -4.612456321716309
    8. ' =' → logprob: -4.987456321716309
    9. 'for' → logprob: -5.612456321716309
    10. '#' → logprob: -5.862456321716309

Token 1438: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.29835209250450134
    2. ' pas' → logprob: -2.173352003097534
    3. 'continu' → logprob: -3.548352003097534
    4. 's' → logprob: -4.173352241516113
    5. 'plus' → logprob: -4.548352241516113
    6. '```' → logprob: -4.798352241516113
    7. 'pu' → logprob: -4.923352241516113
    8. 'repr' → logprob: -5.298352241516113
    9. ' continu' → logprob: -5.298352241516113
    10. 'fait' → logprob: -5.298352241516113

Token 1439: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.7920745611190796
    2. 'plus' → logprob: -1.9170745611190796
    3. 'bes' → logprob: -2.042074680328369
    4. 'à' → logprob: -2.417074680328369
    5. 'aj' → logprob: -2.417074680328369
    6. 'sup' → logprob: -2.542074680328369
    7. 'util' → logprob: -3.167074680328369
    8. 'fait' → logprob: -3.417074680328369
    9. 'explicit' → logprob: -3.917074680328369
    10. 'g' → logprob: -4.042074680328369

Token 1440: 'ifié' (ID: 49927)
  Prédit: 'ifié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifié' → logprob: -0.012530489824712276
    2. 'if' → logprob: -5.387530326843262
    3. 'ifiés' → logprob: -5.387530326843262
    4. 'ifiée' → logprob: -6.137530326843262
    5. 'ifi' → logprob: -7.637530326843262
    6. 'ifiées' → logprob: -7.887530326843262
    7. 's' → logprob: -9.637530326843262
    8. 'fi' → logprob: -10.262530326843262
    9. '#' → logprob: -10.387530326843262
    10. 'ifiant' → logprob: -10.637530326843262

Token 1441: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025946548208594322
    2. ' s' → logprob: -4.650946617126465
    3. 'la' → logprob: -5.150946617126465
    4. '```' → logprob: -5.400946617126465
    5. '   ' → logprob: -5.775946617126465
    6. 'le' → logprob: -6.525946617126465
    7. ' la' → logprob: -8.025946617126465
    8. 'pas' → logprob: -8.275946617126465
    9. 'plus' → logprob: -8.650946617126465
    10. ' ' → logprob: -9.900946617126465

Token 1442: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04433100298047066
    2. 'for' → logprob: -3.6693310737609863
    3. 'suffix' → logprob: -4.544331073760986
    4. ' for' → logprob: -6.044331073760986
    5. '
' → logprob: -6.669331073760986
    6. 'result' → logprob: -7.044331073760986
    7. '```' → logprob: -7.419331073760986
    8. 'rest' → logprob: -7.419331073760986
    9. 'while' → logprob: -7.794331073760986
    10. 's' → logprob: -7.794331073760986

Token 1443: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44073501229286194
    2. '   ' → logprob: -1.8157349824905396
    3. 's' → logprob: -3.190735101699829
    4. ' #' → logprob: -3.440735101699829
    5. '```' → logprob: -3.940735101699829
    6. ' s' → logprob: -4.06573486328125
    7. 'current' → logprob: -4.44073486328125
    8. 'suffix' → logprob: -4.69073486328125
    9. ' mais' → logprob: -4.81573486328125
    10. 'continue' → logprob: -4.94073486328125

Token 1444: ' on' (ID: 402)
  Prédit: 'suffix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suffix' → logprob: -0.2176307886838913
    2. ' suffix' → logprob: -2.3426308631896973
    3. 'for' → logprob: -3.2176308631896973
    4. ' for' → logprob: -3.4676308631896973
    5. '   ' → logprob: -4.842630863189697
    6. 's' → logprob: -4.967630863189697
    7. '#' → logprob: -5.592630863189697
    8. '```' → logprob: -5.717630863189697
    9. ' on' → logprob: -6.717630863189697
    10. 'while' → logprob: -6.842630863189697

Token 1445: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5383975505828857
    2. ' continue' → logprob: -2.1633975505828857
    3. 'for' → logprob: -3.0383975505828857
    4. 'contin' → logprob: -3.4133975505828857
    5. '+=' → logprob: -3.5383975505828857
    6. '=' → logprob: -3.6633975505828857
    7. 'suffix' → logprob: -3.6633975505828857
    8. 'append' → logprob: -3.7883975505828857
    9. '.extend' → logprob: -3.9133975505828857
    10. '#' → logprob: -3.9133975505828857

Token 1446: ' supprimer' (ID: 119553)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.235164999961853
    2. 'prendre' → logprob: -1.610164999961853
    3. 'contin' → logprob: -2.1101651191711426
    4. 'for' → logprob: -2.3601651191711426
    5. 'suffix' → logprob: -2.6101651191711426
    6. 'append' → logprob: -2.9851651191711426
    7. 'print' → logprob: -3.4851651191711426
    8. 'filter' → logprob: -3.7351651191711426
    9. 'continue' → logprob: -4.235165119171143
    10. 'fil' → logprob: -4.235165119171143

Token 1447: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6077952980995178
    2. ' ceux' → logprob: -1.982795238494873
    3. ' les' → logprob: -2.482795238494873
    4. '```' → logprob: -2.607795238494873
    5. '[]' → logprob: -2.982795238494873
    6. 'from' → logprob: -3.607795238494873
    7. ' celles' → logprob: -4.732795238494873
    8. '   ' → logprob: -4.857795238494873
    9. '[s' → logprob: -4.982795238494873
    10. 'dans' → logprob: -5.232795238494873

Token 1448: ' caractères' (ID: 183106)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8051847219467163
    2. 'indices' → logprob: -1.0551847219467163
    3. 'result' → logprob: -2.180184841156006
    4. 'car' → logprob: -3.305184841156006
    5. 'rés' → logprob: -5.180184841156006
    6. '[result' → logprob: -5.180184841156006
    7. 'lett' → logprob: -5.430184841156006
    8. ' indices' → logprob: -5.430184841156006
    9. ' positions' → logprob: -5.430184841156006
    10. 's' → logprob: -5.680184841156006

Token 1449: ' qui' (ID: 2780)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1442701816558838
    2. 'rest' → logprob: -1.8942701816558838
    3. '[current' → logprob: -2.269270181655884
    4. '[' → logprob: -2.644270181655884
    5. '[s' → logprob: -3.269270181655884
    6. '```' → logprob: -3.394270181655884
    7. 'from' → logprob: -3.519270181655884
    8. ' rest' → logprob: -3.644270181655884
    9. 'dans' → logprob: -3.644270181655884
    10. ' =' → logprob: -3.769270181655884

Token 1450: ' ont' (ID: 4930)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.5938129425048828
    2. 'avaient' → logprob: -2.343812942504883
    3. 'i' → logprob: -2.718812942504883
    4. 'n' → logprob: -2.843812942504883
    5. '#' → logprob: -3.468812942504883
    6. 'current' → logprob: -3.718812942504883
    7. 'éta' → logprob: -3.843812942504883
    8. ''ont' → logprob: -4.218812942504883
    9. 'for' → logprob: -4.468812942504883
    10. '```' → logprob: -4.468812942504883

Token 1451: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.54015052318573
    2. 'dé' → logprob: -0.91515052318573
    3. ' été' → logprob: -5.0401506423950195
    4. '```' → logprob: -5.0401506423950195
    5. 'already' → logprob: -6.9151506423950195
    6. 'ét' → logprob: -7.0401506423950195
    7. ' déjà' → logprob: -7.2901506423950195
    8. '#' → logprob: -7.5401506423950195
    9. 'd' → logprob: -8.79015064239502
    10. 'been' → logprob: -9.29015064239502

Token 1452: ' "' (ID: 392)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8147267699241638
    2. 'cho' → logprob: -1.8147268295288086
    3. 'ret' → logprob: -2.0647268295288086
    4. 'dé' → logprob: -2.4397268295288086
    5. '```' → logprob: -2.8147268295288086
    6. 'pris' → logprob: -3.6897268295288086
    7. 'plac' → logprob: -3.6897268295288086
    8. '#' → logprob: -4.564726829528809
    9. 'sup' → logprob: -4.689726829528809
    10. 'reten' → logprob: -4.939726829528809

Token 1453: 'sort' (ID: 13373)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cho' → logprob: -1.140860915184021
    2. 'util' → logprob: -1.515860915184021
    3. 'ret' → logprob: -1.765860915184021
    4. 'dé' → logprob: -2.1408610343933105
    5. 'sup' → logprob: -2.7658610343933105
    6. '```' → logprob: -3.6408610343933105
    7. 'trait' → logprob: -3.8908610343933105
    8. 'pris' → logprob: -4.7658610343933105
    9. 'plac' → logprob: -5.0158610343933105
    10. '#' → logprob: -5.3908610343933105

Token 1454: 'is' (ID: 276)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.26588550209999084
    2. 'é' → logprob: -2.640885591506958
    3. 's' → logprob: -3.765885591506958
    4. 'ies' → logprob: -4.015885353088379
    5. 'i' → logprob: -4.140885353088379
    6. 'ed' → logprob: -4.640885353088379
    7. 'ées' → logprob: -5.015885353088379
    8. '```' → logprob: -5.015885353088379
    9. ''' → logprob: -5.140885353088379
    10. 'u' → logprob: -5.140885353088379

Token 1455: '".
' (ID: 26880)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5312272906303406
    2. ' de' → logprob: -1.1562273502349854
    3. 'from' → logprob: -3.2812273502349854
    4. '```' → logprob: -4.031227111816406
    5. 'du' → logprob: -4.781227111816406
    6. ' du' → logprob: -5.156227111816406
    7. '[]' → logprob: -5.906227111816406
    8. '[' → logprob: -6.031227111816406
    9. '[current' → logprob: -6.031227111816406
    10. ' from' → logprob: -6.156227111816406

Token 1456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12083841860294342
    2. '```' → logprob: -2.9958384037017822
    3. 'suffix' → logprob: -4.120838642120361
    4. 'rest' → logprob: -4.495838642120361
    5. 'for' → logprob: -4.620838642120361
    6. '#' → logprob: -5.120838642120361
    7. 'remaining' → logprob: -5.370838642120361
    8. 's' → logprob: -5.620838642120361
    9. 'indices' → logprob: -5.745838642120361
    10. '``' → logprob: -6.370838642120361

Token 1457: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.5801806449890137
    2. '   ' → logprob: -1.2051806449890137
    3. ' used' → logprob: -2.4551806449890137
    4. 'rest' → logprob: -4.080180644989014
    5. 'indices' → logprob: -4.705180644989014
    6. 'remaining' → logprob: -4.955180644989014
    7. '#' (adapté à ' #') → logprob: -5.330180644989014
    8. '```' → logprob: -5.955180644989014
    9. 'suffix' → logprob: -6.705180644989014
    10. 'positions' → logprob: -6.705180644989014

Token 1458: ' On' (ID: 2160)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.1536680907011032
    2. 'rest' → logprob: -3.278668165206909
    3. 'visited' → logprob: -3.653668165206909
    4. '#' → logprob: -4.15366792678833
    5. 'remaining' → logprob: -4.15366792678833
    6. 'indices' → logprob: -4.40366792678833
    7. 'suffix' → logprob: -4.40366792678833
    8. '   ' → logprob: -5.02866792678833
    9. 'taken' → logprob: -5.65366792678833
    10. ' used' → logprob: -6.40366792678833

Token 1459: ' a' (ID: 261)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.159462809562683
    2. '#' → logprob: -1.284462809562683
    3. 'do' → logprob: -1.909462809562683
    4. 'reste' → logprob: -2.9094629287719727
    5. 'for' → logprob: -3.1594629287719727
    6. 'rest' → logprob: -3.5344629287719727
    7. 'contin' → logprob: -3.6594629287719727
    8. 'man' → logprob: -3.7844629287719727
    9. 'continu' → logprob: -3.7844629287719727
    10. 'n' → logprob: -4.659462928771973

Token 1460: ' avanc' (ID: 87985)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -1.7114657163619995
    2. '#' → logprob: -2.586465835571289
    3. 'maint' → logprob: -2.586465835571289
    4. 'mar' → logprob: -2.711465835571289
    5. 'pas' → logprob: -2.961465835571289
    6. 'just' → logprob: -2.961465835571289
    7. 'current' → logprob: -3.086465835571289
    8. 'util' → logprob: -3.336465835571289
    9. 'stock' → logprob: -3.336465835571289
    10. 'à' → logprob: -3.461465835571289

Token 1461: 'é' (ID: 377)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.042147647589445114
    2. '=' → logprob: -4.542147636413574
    3. ' current' → logprob: -4.667147636413574
    4. 'u' → logprob: -5.042147636413574
    5. 'é' → logprob: -6.417147636413574
    6. 'e' → logprob: -6.542147636413574
    7. '   ' → logprob: -6.917147636413574
    8. '=current' → logprob: -7.042147636413574
    9. '_current' → logprob: -7.292147636413574
    10. '(current' → logprob: -7.417147636413574

Token 1462: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.04878005012869835
    2. ' current' → logprob: -3.0487799644470215
    3. '_current' → logprob: -9.79878044128418
    4. '`' → logprob: -10.42378044128418
    5. 'le' → logprob: -10.42378044128418
    6. '```' → logprob: -10.67378044128418
    7. ' ' → logprob: -11.79878044128418
    8. '(current' → logprob: -12.17378044128418
    9. 'l' → logprob: -12.67378044128418
    10. '   ' → logprob: -12.92378044128418

Token 1463: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00030924470047466457
    2. 'pos' → logprob: -8.125308990478516
    3. '_' → logprob: -12.375308990478516
    4. 'Pos' → logprob: -12.500308990478516
    5. '```' → logprob: -13.500308990478516
    6. '_positions' → logprob: -14.125308990478516
    7. '   ' → logprob: -14.250308990478516
    8. 'current' → logprob: -14.875308990478516
    9. '_current' → logprob: -15.000308990478516
    10. '_position' → logprob: -15.125308990478516

Token 1464: ' pour' (ID: 1930)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.3781967163085938
    2. '+=' → logprob: -1.6281967163085938
    3. 'for' → logprob: -2.3781967163085938
    4. '<' → logprob: -2.7531967163085938
    5. ' +=' → logprob: -2.7531967163085938
    6. ' jusqu' → logprob: -2.7531967163085938
    7. '=' → logprob: -2.8781967163085938
    8. '+' → logprob: -3.5031967163085938
    9. '```' → logprob: -3.5031967163085938
    10. '<=' → logprob: -3.6281967163085938

Token 1465: ' correspond' (ID: 11095)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -2.049694061279297
    2. 'current' → logprob: -2.174694061279297
    3. 'mar' → logprob: -2.424694061279297
    4. 'la' → logprob: -2.424694061279297
    5. 'les' → logprob: -2.674694061279297
    6. '#' → logprob: -3.049694061279297
    7. '```' → logprob: -3.424694061279297
    8. 'ind' → logprob: -3.424694061279297
    9. 're' → logprob: -3.549694061279297
    10. 'skip' → logprob: -3.799694061279297

Token 1466: 're' (ID: 264)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.0657075643539429
    2. '   ' → logprob: -1.1907075643539429
    3. '=' → logprob: -1.8157075643539429
    4. ' à' → logprob: -2.8157076835632324
    5. 'er' → logprob: -3.0657076835632324
    6. 'ant' → logprob: -3.9407076835632324
    7. 're' → logprob: -4.565707683563232
    8. '       ' → logprob: -4.565707683563232
    9. '```' → logprob: -5.065707683563232
    10. ' =' → logprob: -5.565707683563232

Token 1467: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6800413131713867
    2. ' à' → logprob: -1.1800413131713867
    3. 'au' → logprob: -2.8050413131713867
    4. 'aux' → logprob: -3.4300413131713867
    5. '```' → logprob: -3.6800413131713867
    6. ' aux' → logprob: -3.8050413131713867
    7. ' au' → logprob: -3.9300413131713867
    8. ' uniquement' → logprob: -5.180041313171387
    9. ' seulement' → logprob: -5.680041313171387
    10. '#' → logprob: -6.055041313171387

Token 1468: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.35635384917259216
    2. 'l' → logprob: -2.606353759765625
    3. 'current' → logprob: -3.106353759765625
    4. ' la' → logprob: -3.481353759765625
    5. 'les' → logprob: -3.606353759765625
    6. '#' → logprob: -3.606353759765625
    7. ' chaque' → logprob: -4.106353759765625
    8. 'len' → logprob: -4.106353759765625
    9. '```' → logprob: -4.356353759765625
    10. 'positions' → logprob: -4.731353759765625

Token 1469: ' taille' (ID: 41644)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.11287491023540497
    2. 'current' → logprob: -3.362874984741211
    3. 'part' → logprob: -4.362874984741211
    4. 'prem' → logprob: -4.737874984741211
    5. 'pos' → logprob: -4.862874984741211
    6. 'positions' → logprob: -5.237874984741211
    7. '#' → logprob: -5.362874984741211
    8. '```' → logprob: -5.737874984741211
    9. 'place' → logprob: -5.987874984741211
    10. 'indice' → logprob: -6.112874984741211

Token 1470: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5578187108039856
    2. 'rest' → logprob: -1.8078186511993408
    3. 'du' → logprob: -1.8078186511993408
    4. ' de' → logprob: -2.807818651199341
    5. ' du' → logprob: -4.18281888961792
    6. 'result' → logprob: -5.18281888961792
    7. ' rest' → logprob: -5.93281888961792
    8. '```' → logprob: -6.05781888961792
    9. '#' → logprob: -6.30781888961792
    10. 's' → logprob: -6.43281888961792

Token 1471: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.001392973237670958
    2. 'rés' → logprob: -6.626392841339111
    3. 'res' → logprob: -10.00139331817627
    4. '```' → logprob: -11.62639331817627
    5. ' result' → logprob: -11.75139331817627
    6. 'code' → logprob: -13.25139331817627
    7. 'ré' → logprob: -14.37639331817627
    8. ' résultat' → logprob: -14.50139331817627
    9. '``' → logprob: -14.62639331817627
    10. 'r' → logprob: -14.75139331817627

Token 1472: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2330845445394516
    2. 'suffix' → logprob: -2.8580844402313232
    3. 'rest' → logprob: -3.2330844402313232
    4. '```' → logprob: -3.4830844402313232
    5. 's' → logprob: -3.9830844402313232
    6. 'while' → logprob: -4.108084678649902
    7. '
' → logprob: -4.858084678649902
    8. '#' → logprob: -4.983084678649902
    9. '+' → logprob: -5.233084678649902
    10. ' rest' → logprob: -5.483084678649902

Token 1473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6821702122688293
    2. 'for' → logprob: -1.5571701526641846
    3. 'rest' → logprob: -2.0571701526641846
    4. 'suffix' → logprob: -2.4321701526641846
    5. 'used' → logprob: -3.4321701526641846
    6. 'remaining' → logprob: -4.057170391082764
    7. '#' → logprob: -5.432170391082764
    8. '```' → logprob: -5.432170391082764
    9. 'while' → logprob: -6.057170391082764
    10. 'indices' → logprob: -6.057170391082764

Token 1474: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.817409098148346
    2. '   ' → logprob: -1.4424090385437012
    3. 'for' → logprob: -2.067409038543701
    4. 'rest' → logprob: -2.192409038543701
    5. 'suffix' → logprob: -3.442409038543701
    6. 'remaining' → logprob: -3.692409038543701
    7. 'indices' → logprob: -4.692409038543701
    8. 'unused' → logprob: -5.692409038543701
    9. '#' (adapté à ' #') → logprob: -5.942409038543701
    10. 'visited' → logprob: -5.942409038543701

Token 1475: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4760209023952484
    2. 'for' → logprob: -1.6010209321975708
    3. 'suffix' → logprob: -2.2260208129882812
    4. 'rest' → logprob: -3.2260208129882812
    5. 'while' → logprob: -4.851020812988281
    6. '#' → logprob: -5.226020812988281
    7. 'remaining' → logprob: -5.226020812988281
    8. 'used' → logprob: -5.226020812988281
    9. '```' → logprob: -6.476020812988281
    10. ' for' → logprob: -7.226020812988281

Token 1476: ' caractère' (ID: 80509)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indice' → logprob: -1.7226405143737793
    2. 'car' → logprob: -1.8476405143737793
    3. 'position' → logprob: -2.0976405143737793
    4. 'i' → logprob: -2.3476405143737793
    5. 'pos' → logprob: -2.8476405143737793
    6. '#' → logprob: -2.9726405143737793
    7. 'index' → logprob: -3.0976405143737793
    8. 'result' → logprob: -3.2226405143737793
    9. 'for' → logprob: -3.5976405143737793
    10. 'while' → logprob: -3.8476405143737793

Token 1477: ' choisi' (ID: 77245)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.1729801893234253
    2. 'rest' → logprob: -1.9229801893234253
    3. ' rest' → logprob: -2.547980308532715
    4. ' utilisé' → logprob: -3.172980308532715
    5. '#' → logprob: -3.422980308532715
    6. 'dé' → logprob: -3.422980308532715
    7. ' restant' → logprob: -3.672980308532715
    8. 'used' → logprob: -3.797980308532715
    9. 'dans' → logprob: -4.047980308532715
    10. 'à' → logprob: -4.047980308532715

Token 1478: ' correspond' (ID: 11095)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4503304958343506
    2. 'a' → logprob: -2.0753304958343506
    3. ' est' → logprob: -2.9503304958343506
    4. 'dans' → logprob: -2.9503304958343506
    5. 'est' → logprob: -3.4503304958343506
    6. ' dans' → logprob: -4.32533073425293
    7. ' n' → logprob: -4.57533073425293
    8. ',' → logprob: -4.70033073425293
    9. 'avait' → logprob: -4.70033073425293
    10. 'aj' → logprob: -4.95033073425293

Token 1479: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6224522590637207
    2. ' à' → logprob: -0.8724522590637207
    3. '   ' → logprob: -4.372452259063721
    4. '```' → logprob: -5.247452259063721
    5. ''à' → logprob: -5.622452259063721
    6. ' =' → logprob: -5.622452259063721
    7. 'au' → logprob: -5.872452259063721
    8. 'aux' → logprob: -5.872452259063721
    9. ' aux' → logprob: -6.122452259063721
    10. '#' → logprob: -6.372452259063721

Token 1480: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.28126561641693115
    2. 'un' → logprob: -2.1562657356262207
    3. 'current' → logprob: -3.1562657356262207
    4. 'positions' → logprob: -4.031265735626221
    5. 'l' → logprob: -4.156265735626221
    6. ' une' → logprob: -4.406265735626221
    7. ' current' → logprob: -4.906265735626221
    8. 'indices' → logprob: -5.156265735626221
    9. ' un' → logprob: -5.281265735626221
    10. 'la' → logprob: -5.406265735626221

Token 1481: ' caractère' (ID: 80509)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -1.0777802467346191
    2. 'car' → logprob: -1.5777802467346191
    3. ' caractère' → logprob: -2.327780246734619
    4. 'index' → logprob: -2.827780246734619
    5. 'position' → logprob: -3.077780246734619
    6. ' indice' → logprob: -3.202780246734619
    7. ' position' → logprob: -3.702780246734619
    8. ' caract' → logprob: -3.827780246734619
    9. ' index' → logprob: -3.827780246734619
    10. 'current' → logprob: -4.077780246734619

Token 1482: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.7569941282272339
    2. '```' → logprob: -2.0069942474365234
    3. 'de' → logprob: -2.1319942474365234
    4. 'à' → logprob: -2.5069942474365234
    5. 'sup' → logprob: -2.6319942474365234
    6. ' de' → logprob: -3.0069942474365234
    7. 'util' → logprob: -3.2569942474365234
    8. 'ret' → logprob: -3.2569942474365234
    9. 'dé' → logprob: -3.5069942474365234
    10. 'du' → logprob: -4.006994247436523

Token 1483: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6579393148422241
    2. 'result' → logprob: -0.7829393148422241
    3. ' s' → logprob: -4.532939434051514
    4. '```' → logprob: -5.157939434051514
    5. ' result' → logprob: -5.407939434051514
    6. 'la' → logprob: -6.282939434051514
    7. 'positions' → logprob: -7.282939434051514
    8. ' la' → logprob: -7.782939434051514
    9. 'l' → logprob: -8.282938957214355
    10. '`' → logprob: -8.657938957214355

Token 1484: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2415926158428192
    2. '```' → logprob: -2.8665926456451416
    3. '#' → logprob: -3.2415926456451416
    4. ',' → logprob: -3.9915926456451416
    5. '
' → logprob: -4.7415924072265625
    6. 's' → logprob: -4.7415924072265625
    7. ' à' → logprob: -4.8665924072265625
    8. ' qui' → logprob: -5.1165924072265625
    9. ' de' → logprob: -5.1165924072265625
    10. '[' → logprob: -5.3665924072265625

Token 1485: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05470104143023491
    2. '#' → logprob: -3.929701089859009
    3. 'avait' → logprob: -4.05470085144043
    4. ' a' → logprob: -4.67970085144043
    5. 'n' → logprob: -6.17970085144043
    6. 'éta' → logprob: -6.42970085144043
    7. '```' → logprob: -6.55470085144043
    8. 'est' → logprob: -7.55470085144043
    9. '#a' → logprob: -8.30470085144043
    10. 'avaient' → logprob: -8.55470085144043

Token 1486: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.05190655216574669
    2. 'dé' → logprob: -3.0519065856933594
    3. '```' → logprob: -6.551906585693359
    4. ' été' → logprob: -7.176906585693359
    5. 'ét' → logprob: -8.30190658569336
    6. 'just' → logprob: -8.30190658569336
    7. 'éta' → logprob: -8.92690658569336
    8. 'd' → logprob: -9.67690658569336
    9. '#' → logprob: -9.92690658569336
    10. 'avait' → logprob: -10.17690658569336

Token 1487: ' "' (ID: 392)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.4056740999221802
    2. 'ret' → logprob: -1.6556740999221802
    3. 'cho' → logprob: -3.7806739807128906
    4. 'util' → logprob: -3.7806739807128906
    5. 'sup' → logprob: -3.9056739807128906
    6. '"' → logprob: -4.030673980712891
    7. 'en' → logprob: -4.405673980712891
    8. 'pris' → logprob: -4.905673980712891
    9. 'virt' → logprob: -5.280673980712891
    10. 'plac' → logprob: -5.280673980712891

Token 1488: 'dé' (ID: 98340)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.9621365666389465
    2. 'dé' → logprob: -1.5871365070343018
    3. 'mar' → logprob: -2.2121365070343018
    4. 'sup' → logprob: -2.5871365070343018
    5. 'util' → logprob: -3.3371365070343018
    6. '```' → logprob: -3.4621365070343018
    7. 'virt' → logprob: -3.5871365070343018
    8. 'cho' → logprob: -3.9621365070343018
    9. 'en' → logprob: -4.462136745452881
    10. 'vir' → logprob: -4.587136745452881

Token 1489: 'plac' (ID: 6081)
  Prédit: 'plac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plac' → logprob: -0.05494581535458565
    2. 'jà' → logprob: -3.054945707321167
    3. 'cal' → logprob: -6.054945945739746
    4. 'f' → logprob: -6.429945945739746
    5. 'ja' → logprob: -7.804945945739746
    6. 'pla' → logprob: -8.054945945739746
    7. 'tect' → logprob: -8.554945945739746
    8. 'j' → logprob: -8.679945945739746
    9. '```' → logprob: -8.929945945739746
    10. 'sup' → logprob: -9.554945945739746

Token 1490: 'é' (ID: 377)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plac' → logprob: -0.029258938506245613
    2. ' plac' → logprob: -4.904258728027344
    3. ' placé' → logprob: -5.029258728027344
    4. 'ic' → logprob: -6.029258728027344
    5. 'posé' → logprob: -6.154258728027344
    6. 'it' → logprob: -6.404258728027344
    7. 'é' → logprob: -6.529258728027344
    8. 'pl' → logprob: -6.529258728027344
    9. 'iqué' → logprob: -6.779258728027344
    10. 'duit' → logprob: -7.279258728027344

Token 1491: '"' (ID: 1)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6788619756698608
    2. ' vers' → logprob: -1.9288619756698608
    3. '```' → logprob: -1.9288619756698608
    4. '`' → logprob: -2.4288620948791504
    5. 'dans' → logprob: -2.6788620948791504
    6. 'à' → logprob: -2.9288620948791504
    7. '.' → logprob: -3.3038620948791504
    8. ' à' → logprob: -3.4288620948791504
    9. '   ' → logprob: -3.5538620948791504
    10. 'de' → logprob: -3.8038620948791504

Token 1492: ' vers' (ID: 3640)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.931630551815033
    2. '#' → logprob: -1.8066306114196777
    3. ',' → logprob: -1.9316306114196777
    4. '```' → logprob: -2.3066306114196777
    5. '.' → logprob: -3.6816306114196777
    6. ' et' → logprob: -4.056630611419678
    7. '
' → logprob: -4.056630611419678
    8. ' #' → logprob: -4.306630611419678
    9. 'dans' → logprob: -4.556630611419678
    10. '`' → logprob: -4.556630611419678

Token 1493: ' le' (ID: 505)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.012388739734888077
    2. 'la' → logprob: -4.512388706207275
    3. 'l' → logprob: -7.512388706207275
    4. ' result' → logprob: -8.387389183044434
    5. 'le' → logprob: -9.012389183044434
    6. '```' → logprob: -9.012389183044434
    7. 'current' → logprob: -9.137389183044434
    8. '`' → logprob: -9.262389183044434
    9. 'position' → logprob: -9.762389183044434
    10. ' la' → logprob: -10.637389183044434

Token 1494: ' début' (ID: 29589)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20405179262161255
    2. 'rés' → logprob: -1.9540517330169678
    3. 'dé' → logprob: -3.3290517330169678
    4. 'current' → logprob: -6.079051971435547
    5. 'res' → logprob: -6.954051971435547
    6. ' début' → logprob: -7.204051971435547
    7. ' résultat' → logprob: -7.204051971435547
    8. '```' → logprob: -7.204051971435547
    9. ' result' → logprob: -7.829051971435547
    10. 'begin' → logprob: -7.829051971435547

Token 1495: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20716407895088196
    2. ',' → logprob: -2.8321640491485596
    3. '```' → logprob: -3.3321640491485596
    4. '.' → logprob: -3.4571640491485596
    5. '#' → logprob: -3.5821640491485596
    6. '
' → logprob: -3.9571640491485596
    7. '.
' → logprob: -6.832164287567139
    8. '       ' → logprob: -7.082164287567139
    9. 'rest' → logprob: -7.207164287567139
    10. 'dans' → logprob: -7.207164287567139

Token 1496: 'sim' (ID: 19455)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6045444011688232
    2. ')' → logprob: -1.1045444011688232
    3. ' current' → logprob: -3.2295444011688232
    4. '),' → logprob: -4.354544639587402
    5. ').' → logprob: -4.604544639587402
    6. '#' → logprob: -4.604544639587402
    7. '`' → logprob: -5.104544639587402
    8. '```' → logprob: -5.229544639587402
    9. 'result' → logprob: -5.479544639587402
    10. ')
' → logprob: -5.479544639587402

Token 1497: 'ulé' (ID: 147268)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.2759501039981842
    2. 'p' → logprob: -2.6509501934051514
    3. 'ulé' → logprob: -2.6509501934051514
    4. 'ple' → logprob: -3.6509501934051514
    5. 'ul' → logprob: -4.025949954986572
    6. 'plic' → logprob: -4.150949954986572
    7. 'ultan' → logprob: -4.775949954986572
    8. 'ult' → logprob: -5.650949954986572
    9. 'plement' → logprob: -5.650949954986572
    10. 'plet' → logprob: -5.775949954986572

Token 1498: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36517971754074097
    2. 'de' → logprob: -1.7401797771453857
    3. ').' → logprob: -3.7401797771453857
    4. '),' → logprob: -3.9901797771453857
    5. 'en' → logprob: -4.115179538726807
    6. ' de' → logprob: -4.115179538726807
    7. 'dans' → logprob: -4.240179538726807
    8. 'par' → logprob: -5.240179538726807
    9. 'du' → logprob: -5.240179538726807
    10. ',' → logprob: -5.240179538726807

Token 1499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013436906039714813
    2. '```' → logprob: -4.763436794281006
    3. '#' → logprob: -6.888436794281006
    4. 'while' → logprob: -7.138436794281006
    5. 'for' → logprob: -7.388436794281006
    6. ',' → logprob: -7.513436794281006
    7. '
' → logprob: -7.763436794281006
    8. '``' → logprob: -8.888437271118164
    9. 'rest' → logprob: -9.013437271118164
    10. 'suffix' → logprob: -9.013437271118164

Token 1500: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13328683376312256
    2. '```' → logprob: -3.633286952972412
    3. '#' (adapté à ' #') → logprob: -3.883286952972412
    4. 'for' → logprob: -4.008286952972412
    5. '
' → logprob: -4.383286952972412
    6. ' for' → logprob: -4.383286952972412
    7. 'rest' → logprob: -4.883286952972412
    8. 'while' → logprob: -5.008286952972412
    9. ' while' → logprob: -5.883286952972412
    10. ',' → logprob: -6.258286952972412

Token 1501: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06593754887580872
    2. '#' → logprob: -4.065937519073486
    3. 'for' → logprob: -4.440937519073486
    4. '```' → logprob: -4.440937519073486
    5. 'suffix' → logprob: -4.565937519073486
    6. 'rest' → logprob: -5.190937519073486
    7. 'while' → logprob: -5.940937519073486
    8. ' for' → logprob: -6.940937519073486
    9. '
' → logprob: -7.315937519073486
    10. 'remaining' → logprob: -7.315937519073486

Token 1502: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0032281875610352
    2. 'current' → logprob: -1.8782281875610352
    3. ' current' → logprob: -2.378228187561035
    4. ' #' → logprob: -2.878228187561035
    5. ' la' → logprob: -3.128228187561035
    6. 'le' → logprob: -3.253228187561035
    7. 'len' → logprob: -3.503228187561035
    8. ' on' → logprob: -3.503228187561035
    9. 'la' → logprob: -3.753228187561035
    10. ' les' → logprob: -3.753228187561035

Token 1503: ' chaîne' (ID: 89288)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.605280876159668
    2. '#' → logprob: -1.355280876159668
    3. 'rest' → logprob: -3.730280876159668
    4. 'reste' → logprob: -3.980280876159668
    5. 'remaining' → logprob: -4.105280876159668
    6. 'final' → logprob: -4.105280876159668
    7. 'positions' → logprob: -4.230280876159668
    8. 'position' → logprob: -4.230280876159668
    9. 'len' → logprob: -4.230280876159668
    10. 'result' → logprob: -4.605280876159668

Token 1504: ' finale' (ID: 37759)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.489162802696228
    2. 'final' → logprob: -1.739162802696228
    3. 'reste' → logprob: -2.4891629219055176
    4. '#' → logprob: -3.1141629219055176
    5. ' complète' → logprob: -4.489162921905518
    6. ' finale' → logprob: -4.614162921905518
    7. 's' → logprob: -4.739162921905518
    8. 'n' → logprob: -4.864162921905518
    9. ' rest' → logprob: -4.864162921905518
    10. ' =' → logprob: -5.489162921905518

Token 1505: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5768782496452332
    2. '=' → logprob: -1.576878309249878
    3. ' +=' → logprob: -2.701878309249878
    4. '+=' → logprob: -3.451878309249878
    5. ' s' → logprob: -3.576878309249878
    6. 'result' → logprob: -4.076878070831299
    7. 'final' → logprob: -4.076878070831299
    8. ' est' → logprob: -4.701878070831299
    9. ' complète' → logprob: -4.826878070831299
    10. ' n' → logprob: -4.951878070831299

Token 1506: ' bien' (ID: 5340)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.2431691884994507
    2. ' result' → logprob: -1.2431691884994507
    3. 'result' → logprob: -1.4931691884994507
    4. ' current' → logprob: -2.3681693077087402
    5. 's' → logprob: -2.9931693077087402
    6. 'current' → logprob: -3.3681693077087402
    7. '   ' → logprob: -5.24316930770874
    8. '```' → logprob: -5.36816930770874
    9. ' ' → logprob: -6.61816930770874
    10. '#' → logprob: -6.74316930770874

Token 1507: ' "' (ID: 392)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09425231069326401
    2. ' result' → logprob: -2.844252347946167
    3. '   ' → logprob: -4.594252109527588
    4. 's' → logprob: -4.719252109527588
    5. ' s' → logprob: -5.594252109527588
    6. '```' → logprob: -5.969252109527588
    7. ' ' → logprob: -6.594252109527588
    8. 'current' → logprob: -7.094252109527588
    9. '"' → logprob: -7.094252109527588
    10. '""' → logprob: -7.344252109527588

Token 1508: 'result' (ID: 2521)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7144600749015808
    2. 's' → logprob: -1.4644601345062256
    3. '''.' → logprob: -2.2144601345062256
    4. ' s' → logprob: -2.4644601345062256
    5. 'result' → logprob: -3.3394601345062256
    6. '''' → logprob: -4.3394598960876465
    7. '```' → logprob: -5.0894598960876465
    8. ' result' → logprob: -5.2144598960876465
    9. '""' → logprob: -5.4644598960876465
    10. ''' → logprob: -5.4644598960876465

Token 1509: '"' (ID: 1)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04298355057835579
    2. '+' → logprob: -3.4179835319519043
    3. '"' → logprob: -4.917983531951904
    4. '```' → logprob: -6.542983531951904
    5. '   ' → logprob: -8.917984008789062
    6. ' +
' → logprob: -9.292984008789062
    7. ')' → logprob: -10.042984008789062
    8. '``' → logprob: -10.417984008789062
    9. '+"' → logprob: -10.417984008789062
    10. '[result' → logprob: -10.792984008789062

Token 1510: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14352749288082123
    2. '+' → logprob: -2.0185275077819824
    3. '```' → logprob: -7.268527507781982
    4. ' +
' → logprob: -10.268527030944824
    5. '   ' → logprob: -10.393527030944824
    6. ' plus' → logprob: -10.893527030944824
    7. '+
' → logprob: -11.393527030944824
    8. '+s' → logprob: -11.518527030944824
    9. ')' → logprob: -11.643527030944824
    10. '``' → logprob: -12.143527030944824

Token 1511: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18184688687324524
    2. ' s' → logprob: -1.8068468570709229
    3. '''.' → logprob: -6.556847095489502
    4. ' ''.' → logprob: -8.181846618652344
    5. '```' → logprob: -8.806846618652344
    6. '   ' → logprob: -9.556846618652344
    7. ' ' → logprob: -9.556846618652344
    8. ' "".' → logprob: -10.056846618652344
    9. '"' → logprob: -11.056846618652344
    10. '"s' → logprob: -11.931846618652344

Token 1512: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2326953411102295
    2. '''.' → logprob: -1.6076953411102295
    3. '"' → logprob: -5.607695579528809
    4. ' s' → logprob: -6.232695579528809
    5. ' ''.' → logprob: -6.982695579528809
    6. '```' → logprob: -8.607695579528809
    7. ' "".' → logprob: -9.232695579528809
    8. '''' → logprob: -9.232695579528809
    9. '   ' → logprob: -9.607695579528809
    10. '"s' → logprob: -9.732695579528809

Token 1513: ' sous' (ID: 14487)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -3.833878508885391e-05
    2. 'current' → logprob: -10.875038146972656
    3. '[' → logprob: -11.875038146972656
    4. '```' → logprob: -12.000038146972656
    5. ' [' → logprob: -12.875038146972656
    6. '[cur' → logprob: -13.750038146972656
    7. '[
' → logprob: -14.750038146972656
    8. '[k' → logprob: -14.875038146972656
    9. 'remaining' → logprob: -15.125038146972656
    10. '[curr' → logprob: -15.125038146972656

Token 1514: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.057837724685669
    2. 'la' → logprob: -1.307837724685669
    3. 'current' → logprob: -1.807837724685669
    4. 'list' → logprob: -2.057837724685669
    5. 'liste' → logprob: -3.932837724685669
    6. '[]' → logprob: -4.18283748626709
    7. '[' → logprob: -4.43283748626709
    8. 'chaine' → logprob: -4.68283748626709
    9. 'l' → logprob: -5.05783748626709
    10. '`' → logprob: -5.68283748626709

Token 1515: ' avec' (ID: 3937)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.008614222519099712
    2. '[' → logprob: -5.3836140632629395
    3. 'current' → logprob: -6.1336140632629395
    4. '```' → logprob: -6.7586140632629395
    5. '`' → logprob: -8.883614540100098
    6. '[
' → logprob: -9.383614540100098
    7. '   ' → logprob: -9.508614540100098
    8. '[cur' → logprob: -9.758614540100098
    9. '[curr' → logprob: -9.758614540100098
    10. '``' → logprob: -9.883614540100098

Token 1516: ' caractères' (ID: 183106)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.18060587346553802
    2. 'indices' → logprob: -2.805605888366699
    3. '```' → logprob: -3.305605888366699
    4. 'les' → logprob: -4.055605888366699
    5. ' current' → logprob: -4.055605888366699
    6. '``' → logprob: -5.180605888366699
    7. 'indice' → logprob: -5.555605888366699
    8. '`' → logprob: -5.930605888366699
    9. '   ' → logprob: -5.930605888366699
    10. '[current' → logprob: -5.930605888366699

Token 1517: ' non' (ID: 2893)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0723409578204155
    2. '[' → logprob: -3.697340965270996
    3. 'rest' → logprob: -4.572340965270996
    4. '```' → logprob: -4.572340965270996
    5. 'current' → logprob: -4.697340965270996
    6. 'non' → logprob: -4.947340965270996
    7. '   ' → logprob: -6.572340965270996
    8. '``' → logprob: -7.072340965270996
    9. '`' → logprob: -7.072340965270996
    10. ' rest' → logprob: -7.197340965270996

Token 1518: ' déplac' (ID: 195321)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.5469362735748291
    2. 'cho' → logprob: -1.796936273574829
    3. 'current' → logprob: -2.921936273574829
    4. 'chosen' → logprob: -3.421936273574829
    5. 'sup' → logprob: -3.671936273574829
    6. 'ret' → logprob: -3.796936273574829
    7. ' chois' → logprob: -4.04693603515625
    8. 's' → logprob: -4.29693603515625
    9. '```' → logprob: -4.29693603515625
    10. 'trait' → logprob: -4.54693603515625

Token 1519: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.43033909797668457
    2. 's' → logprob: -1.5553390979766846
    3. 'éd' → logprob: -4.0553388595581055
    4. ']' → logprob: -4.3053388595581055
    5. '[]' → logprob: -4.4303388595581055
    6. 'érés' → logprob: -4.5553388595581055
    7. ']
' → logprob: -4.8053388595581055
    8. '[]
' → logprob: -4.8053388595581055
    9. 'nés' → logprob: -5.0553388595581055
    10. '"]' → logprob: -5.1803388595581055

Token 1520: ' dans' (ID: 2671)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.009171441197395325
    2. 'current' → logprob: -5.259171485900879
    3. '```' → logprob: -6.134171485900879
    4. '[' → logprob: -6.759171485900879
    5. ' current' → logprob: -8.884171485900879
    6. '   ' → logprob: -9.134171485900879
    7. '"' → logprob: -9.509171485900879
    8. '`' → logprob: -9.884171485900879
    9. '``' → logprob: -10.009171485900879
    10. '(current' → logprob: -10.259171485900879

Token 1521: ' l' (ID: 305)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4657776355743408
    2. 's' → logprob: -1.9657776355743408
    3. ' current' → logprob: -2.465777635574341
    4. ' s' → logprob: -3.215777635574341
    5. 'la' → logprob: -3.465777635574341
    6. '[current' → logprob: -4.340777397155762
    7. '```' → logprob: -4.590777397155762
    8. '`' → logprob: -4.590777397155762
    9. 'range' → logprob: -4.840777397155762
    10. '[s' → logprob: -4.965777397155762

Token 1522: ''ordre' (ID: 124753)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.103756070137024
    2. ''ensemble' → logprob: -2.2287559509277344
    3. 'e' → logprob: -2.3537559509277344
    4. 's' → logprob: -2.3537559509277344
    5. 'current' → logprob: -2.7287559509277344
    6. '`' → logprob: -3.3537559509277344
    7. 'reste' → logprob: -3.4787559509277344
    8. ''ordre' → logprob: -3.8537559509277344
    9. 'rest' → logprob: -3.9787559509277344
    10. ''' → logprob: -4.228755950927734

Token 1523: '".
' (ID: 26880)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.027129827067255974
    2. '   ' → logprob: -4.527129650115967
    3. '```' → logprob: -5.277129650115967
    4. '[' → logprob: -5.652129650115967
    5. 'current' → logprob: -5.777129650115967
    6. '"' → logprob: -7.527129650115967
    7. ' current' → logprob: -7.527129650115967
    8. '[s' → logprob: -8.027130126953125
    9. ',' → logprob: -8.152130126953125
    10. 's' → logprob: -8.402130126953125

Token 1524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04649612680077553
    2. 's' → logprob: -3.7964961528778076
    3. 'suffix' → logprob: -4.2964959144592285
    4. '```' → logprob: -5.4214959144592285
    5. 'rest' → logprob: -6.5464959144592285
    6. 'for' → logprob: -6.9214959144592285
    7. ' s' → logprob: -7.4214959144592285
    8. ' for' → logprob: -7.5464959144592285
    9. 'remaining' → logprob: -8.171496391296387
    10. ' suffix' → logprob: -8.671496391296387

Token 1525: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025894509628415108
    2. 'suffix' → logprob: -4.275894641876221
    3. 'rest' → logprob: -5.150894641876221
    4. '```' → logprob: -6.025894641876221
    5. 's' → logprob: -6.525894641876221
    6. 'for' → logprob: -7.150894641876221
    7. 'remaining' → logprob: -7.275894641876221
    8. '``' → logprob: -9.275894165039062
    9. '
' → logprob: -9.400894165039062
    10. 'res' → logprob: -9.525894165039062

Token 1526: ' D' (ID: 415)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1578090935945511
    2. 'suffix' → logprob: -2.532809019088745
    3. 'for' → logprob: -3.282809019088745
    4. 's' → logprob: -3.657809019088745
    5. '```' → logprob: -6.657809257507324
    6. ' for' → logprob: -7.532809257507324
    7. 'while' → logprob: -8.032809257507324
    8. 'rest' → logprob: -8.532809257507324
    9. ' suffix' → logprob: -8.532809257507324
    10. 'remaining' → logprob: -8.907809257507324

Token 1527: ''où' (ID: 186468)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9852990508079529
    2. 'for' → logprob: -1.1102991104125977
    3. 'e' → logprob: -2.4852991104125977
    4. ' =' → logprob: -2.9852991104125977
    5. 'result' → logprob: -3.3602991104125977
    6. '#' → logprob: -3.4852991104125977
    7. 'remaining' → logprob: -3.8602991104125977
    8. 'suffix' → logprob: -4.485299110412598
    9. 's' → logprob: -4.860299110412598
    10. 'rest' → logprob: -5.235299110412598

Token 1528: ' suffix' (ID: 43412)
  Prédit: 'suffix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suffix' → logprob: -0.6808788776397705
    2. '   ' → logprob: -1.5558788776397705
    3. 'for' → logprob: -1.6808788776397705
    4. ' suffix' → logprob: -3.8058788776397705
    5. 's' → logprob: -4.180878639221191
    6. ' for' → logprob: -4.305878639221191
    7. 'positions' → logprob: -4.555878639221191
    8. 'remaining' → logprob: -4.680878639221191
    9. '```' → logprob: -5.055878639221191
    10. 'len' → logprob: -6.180878639221191

Token 1529: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6906290650367737
    2. '=' → logprob: -0.8156290650367737
    3. '.extend' → logprob: -2.940629005432129
    4. ' +=' → logprob: -6.940629005432129
    5. '+=' → logprob: -7.065629005432129
    6. '```' → logprob: -7.440629005432129
    7. '=s' → logprob: -7.940629005432129
    8. 's' → logprob: -8.190629005432129
    9. '.append' → logprob: -8.565629005432129
    10. '   ' → logprob: -8.940629005432129

Token 1530: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009874134324491024
    2. ' s' → logprob: -4.63487434387207
    3. '   ' → logprob: -9.88487434387207
    4. '[s' → logprob: -9.88487434387207
    5. 'list' → logprob: -12.13487434387207
    6. ' ' → logprob: -13.13487434387207
    7. '```' → logprob: -13.13487434387207
    8. '[' → logprob: -13.88487434387207
    9. ' list' → logprob: -13.88487434387207
    10. ' [' → logprob: -14.00987434387207

Token 1531: ' avec' (ID: 3937)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.00016229959146585315
    2. 'current' → logprob: -8.875162124633789
    3. '```' → logprob: -11.375162124633789
    4. '   ' → logprob: -12.250162124633789
    5. ' [' → logprob: -13.500162124633789
    6. '[' → logprob: -13.750162124633789
    7. '=current' → logprob: -14.000162124633789
    8. '[s' → logprob: -14.000162124633789
    9. '(current' → logprob: -14.500162124633789
    10. '`' → logprob: -14.750162124633789

Token 1532: ' les' (ID: 1341)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7568798065185547
    2. 'i' → logprob: -1.8818798065185547
    3. 'indices' → logprob: -2.2568798065185547
    4. 'indice' → logprob: -2.6318798065185547
    5. 'current' → logprob: -3.0068798065185547
    6. 'pos' → logprob: -3.0068798065185547
    7. '[current' → logprob: -4.131879806518555
    8. 'range' → logprob: -4.131879806518555
    9. '```' → logprob: -4.381879806518555
    10. '[pos' → logprob: -4.631879806518555

Token 1533: ' caractères' (ID: 183106)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.3380264937877655
    2. 'i' → logprob: -2.588026523590088
    3. 'current' → logprob: -2.838026523590088
    4. 'positions' → logprob: -3.463026523590088
    5. '[i' → logprob: -3.588026523590088
    6. 'indice' → logprob: -3.713026523590088
    7. 'pos' → logprob: -4.463026523590088
    8. ' indices' → logprob: -4.463026523590088
    9. 'car' → logprob: -4.588026523590088
    10. '[current' → logprob: -4.588026523590088

Token 1534: ' de' (ID: 334)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.4186634421348572
    2. '[i' → logprob: -1.793663501739502
    3. 'current' → logprob: -2.168663501739502
    4. 'i' → logprob: -4.168663501739502
    5. 'not' → logprob: -4.543663501739502
    6. '   ' → logprob: -4.918663501739502
    7. '```' → logprob: -5.293663501739502
    8. '[' → logprob: -5.793663501739502
    9. 'from' → logprob: -6.043663501739502
    10. '[pos' → logprob: -6.293663501739502

Token 1535: ' s' (ID: 265)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.3857206702232361
    2. 'current' → logprob: -1.6357207298278809
    3. 'index' → logprob: -2.760720729827881
    4. 'positions' → logprob: -3.760720729827881
    5. 'indice' → logprob: -3.885720729827881
    6. 'indexes' → logprob: -4.885720729827881
    7. 'l' → logprob: -5.510720729827881
    8. ' indices' → logprob: -6.135720729827881
    9. '```' → logprob: -6.635720729827881
    10. ' current' → logprob: -7.385720729827881

Token 1536: ' qui' (ID: 2780)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.035630788654088974
    2. 'current' → logprob: -3.660630702972412
    3. '=current' → logprob: -6.035630702972412
    4. '```' → logprob: -6.160630702972412
    5. 'from' → logprob: -6.910630702972412
    6. ' =' → logprob: -7.285630702972412
    7. ' current' → logprob: -7.535630702972412
    8. '
' → logprob: -7.660630702972412
    9. '[' → logprob: -7.785630702972412
    10. '(current' → logprob: -7.910630702972412

Token 1537: ' ne' (ID: 453)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7525912523269653
    2. '[current' → logprob: -1.3775912523269653
    3. 'n' → logprob: -2.252591133117676
    4. ' current' → logprob: -2.377591133117676
    5. 'ont' → logprob: -4.127591133117676
    6. ' n' → logprob: -4.752591133117676
    7. '```' → logprob: -4.752591133117676
    8. 'index' → logprob: -4.752591133117676
    9. 'n't' → logprob: -5.252591133117676
    10. 'i' → logprob: -5.502591133117676

Token 1538: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6050280332565308
    2. 'ont' → logprob: -0.8550280332565308
    3. 'pas' → logprob: -3.7300281524658203
    4. 'éta' → logprob: -6.35502815246582
    5. 'avaient' → logprob: -6.98002815246582
    6. ''ont' → logprob: -7.85502815246582
    7. ' sont' → logprob: -7.98002815246582
    8. '```' → logprob: -7.98002815246582
    9. 'current' → logprob: -8.10502815246582
    10. '#' → logprob: -8.85502815246582

Token 1539: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.33201825618743896
    2. ' pas' → logprob: -1.832018256187439
    3. 'current' → logprob: -3.2070183753967285
    4. '```' → logprob: -4.3320183753967285
    5. 'in' → logprob: -4.5820183753967285
    6. ' current' → logprob: -4.7070183753967285
    7. 'result' → logprob: -4.8320183753967285
    8. ' in' → logprob: -4.9570183753967285
    9. '#' → logprob: -5.0820183753967285
    10. 'not' → logprob: -5.5820183753967285

Token 1540: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.7822015285491943
    2. 'util' → logprob: -2.0322015285491943
    3. '```' → logprob: -2.0322015285491943
    4. 'in' → logprob: -2.7822015285491943
    5. 'dé' → logprob: -2.9072015285491943
    6. 'used' → logprob: -3.4072015285491943
    7. 'removed' → logprob: -3.4072015285491943
    8. 'ret' → logprob: -4.407201766967773
    9. 'current' → logprob: -4.407201766967773
    10. '#' → logprob: -4.657201766967773

Token 1541: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4192817509174347
    2. 'positions' → logprob: -1.2942817211151123
    3. 'removed' → logprob: -3.5442817211151123
    4. 'set' → logprob: -4.044281959533691
    5. '```' → logprob: -5.419281959533691
    6. 's' → logprob: -5.544281959533691
    7. 'used' → logprob: -5.919281959533691
    8. 'current' → logprob: -6.044281959533691
    9. '[result' → logprob: -6.544281959533691
    10. ' result' → logprob: -6.794281959533691

Token 1542: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11362513899803162
    2. ' =' → logprob: -2.6136250495910645
    3. '
' → logprob: -5.2386250495910645
    4. '=' → logprob: -5.4886250495910645
    5. '```' → logprob: -5.4886250495910645
    6. '[]
' → logprob: -5.6136250495910645
    7. 's' → logprob: -5.8636250495910645
    8. '[]' → logprob: -6.3636250495910645
    9. 'remaining' → logprob: -6.6136250495910645
    10. 'set' → logprob: -6.7386250495910645

Token 1543: ' en' (ID: 469)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8157643675804138
    2. '   ' → logprob: -1.5657644271850586
    3. ' current' → logprob: -2.3157644271850586
    4. 'current' → logprob: -2.5657644271850586
    5. 's' → logprob: -2.6907644271850586
    6. ' pos' → logprob: -4.315764427185059
    7. ' i' → logprob: -4.440764427185059
    8. 'i' → logprob: -4.940764427185059
    9. 'pos' → logprob: -5.065764427185059
    10. '```' → logprob: -5.065764427185059

Token 1544: ' maintenant' (ID: 35735)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9190850257873535
    2. 's' → logprob: -1.1690850257873535
    3. 'current' → logprob: -2.0440850257873535
    4. 'positions' → logprob: -3.0440850257873535
    5. ' current' → logprob: -3.7940850257873535
    6. 'suffix' → logprob: -4.4190850257873535
    7. '[s' → logprob: -4.5440850257873535
    8. '```' → logprob: -4.9190850257873535
    9. 'position' → logprob: -5.1690850257873535
    10. '[' → logprob: -5.4190850257873535

Token 1545: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8464772701263428
    2. 'la' → logprob: -1.8464772701263428
    3. 'leur' → logprob: -2.5964772701263428
    4. ' l' → logprob: -2.9714772701263428
    5. 'current' → logprob: -3.2214772701263428
    6. '```' → logprob: -3.3464772701263428
    7. 'le' → logprob: -3.4714772701263428
    8. ' leur' → logprob: -3.4714772701263428
    9. ' la' → logprob: -3.5964772701263428
    10. 'les' → logprob: -3.7214772701263428

Token 1546: ''ordre' (ID: 124753)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -1.688973307609558
    2. ' s' → logprob: -1.813973307609558
    3. 's' → logprob: -1.938973307609558
    4. '```' → logprob: -2.9389734268188477
    5. ' current' → logprob: -3.0639734268188477
    6. 'current' → logprob: -3.1889734268188477
    7. 'place' → logprob: -3.1889734268188477
    8. 'semble' → logprob: -3.5639734268188477
    9. ''ordre' → logprob: -3.8139734268188477
    10. 'suffix' → logprob: -4.063973426818848

Token 1547: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11683658510446548
    2. 'used' → logprob: -2.3668365478515625
    3. ' =' → logprob: -5.3668365478515625
    4. 'indices' → logprob: -5.7418365478515625
    5. '
' → logprob: -6.7418365478515625
    6. 'taken' → logprob: -6.9918365478515625
    7. 'remaining' → logprob: -7.1168365478515625
    8. 'pos' → logprob: -7.2418365478515625
    9. 'visited' → logprob: -7.3668365478515625
    10. 'seen' → logprob: -7.9918365478515625

Token 1548: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.05536242946982384
    2. '   ' → logprob: -3.9303624629974365
    3. ' used' → logprob: -4.680362224578857
    4. 'taken' → logprob: -5.055362224578857
    5. 'indices' → logprob: -5.305362224578857
    6. 'visited' → logprob: -5.930362224578857
    7. 'seen' → logprob: -6.305362224578857
    8. 'positions' → logprob: -6.430362224578857
    9. 'pos' → logprob: -6.680362224578857
    10. 'removed' → logprob: -6.805362224578857

Token 1549: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.03392840921878815
    2. '   ' → logprob: -4.783928394317627
    3. 'taken' → logprob: -5.033928394317627
    4. 'counts' → logprob: -5.658928394317627
    5. ' used' → logprob: -5.908928394317627
    6. 'counter' → logprob: -6.283928394317627
    7. 'indices' → logprob: -6.283928394317627
    8. 'count' → logprob: -6.283928394317627
    9. 'pos' → logprob: -6.783928394317627
    10. 'seen' → logprob: -6.908928394317627

Token 1550: ' Pour' (ID: 13931)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.05941220000386238
    2. '   ' → logprob: -3.6844122409820557
    3. 'counter' → logprob: -5.059412002563477
    4. 'taken' → logprob: -5.434412002563477
    5. 'counts' → logprob: -5.684412002563477
    6. 'pos' → logprob: -5.809412002563477
    7. 'count' → logprob: -5.934412002563477
    8. 'positions' → logprob: -6.434412002563477
    9. 'remaining' → logprob: -6.434412002563477
    10. 'indices' → logprob: -6.434412002563477

Token 1551: ' y' (ID: 342)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3485219180583954
    2. 'i' → logprob: -2.4735219478607178
    3. 'ch' → logprob: -2.9735219478607178
    4. 'comp' → logprob: -3.3485219478607178
    5. 'cela' → logprob: -3.5985219478607178
    6. '#' → logprob: -4.098521709442139
    7. 'idx' → logprob: -4.598521709442139
    8. ' c' → logprob: -4.723521709442139
    9. '```' → logprob: -4.723521709442139
    10. 'la' → logprob: -5.098521709442139

Token 1552: ' arriver' (ID: 78302)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.344934344291687
    2. 'i' → logprob: -1.719934344291687
    3. 'c' → logprob: -1.969934344291687
    4. '#' → logprob: -2.7199344635009766
    5. 'faire' → logprob: -3.0949344635009766
    6. '```' → logprob: -3.2199344635009766
    7. 'part' → logprob: -3.4699344635009766
    8. 'cela' → logprob: -3.5949344635009766
    9. 'trait' → logprob: -3.9699344635009766
    10. 's' → logprob: -4.094934463500977

Token 1553: ',' (ID: 11)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.1329805552959442
    2. '#' → logprob: -3.1329805850982666
    3. '   ' → logprob: -4.3829803466796875
    4. 'counts' → logprob: -4.5079803466796875
    5. 'counter' → logprob: -4.7579803466796875
    6. 'count' → logprob: -4.8829803466796875
    7. ' used' → logprob: -4.8829803466796875
    8. 'taken' → logprob: -5.1329803466796875
    9. 'comp' → logprob: -5.5079803466796875
    10. 'seen' → logprob: -5.6329803466796875

Token 1554: ' on' (ID: 402)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.32594552636146545
    2. 'indices' → logprob: -2.8259456157684326
    3. ' used' → logprob: -3.0759456157684326
    4. 'pos' → logprob: -3.5759456157684326
    5. 'index' → logprob: -4.0759453773498535
    6. 'freq' → logprob: -4.2009453773498535
    7. 'idx' → logprob: -4.2009453773498535
    8. 'visited' → logprob: -4.5759453773498535
    9. 'remaining' → logprob: -4.5759453773498535
    10. '#' → logprob: -4.7009453773498535

Token 1555: ' peut' (ID: 9216)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.15986870229244232
    2. '#' → logprob: -2.6598687171936035
    3. 'visited' → logprob: -3.7848687171936035
    4. 'taken' → logprob: -4.2848687171936035
    5. 'util' → logprob: -4.6598687171936035
    6. '   ' → logprob: -4.9098687171936035
    7. 'chosen' → logprob: -5.0348687171936035
    8. 'reste' → logprob: -5.5348687171936035
    9. 'cho' → logprob: -5.9098687171936035
    10. '```' → logprob: -6.7848687171936035

Token 1556: ' parcour' (ID: 130642)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8677540421485901
    2. 'comp' → logprob: -0.9927540421485901
    3. 'mar' → logprob: -2.9927539825439453
    4. 'contin' → logprob: -3.4927539825439453
    5. '#' → logprob: -3.9927539825439453
    6. 'prendre' → logprob: -3.9927539825439453
    7. 'com' → logprob: -4.242753982543945
    8. 'used' → logprob: -4.492753982543945
    9. 'from' → logprob: -4.492753982543945
    10. 'count' → logprob: -5.117753982543945

Token 1557: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.15056630969047546
    2. 'ner' → logprob: -2.150566339492798
    3. 'rer' → logprob: -4.025566101074219
    4. 're' → logprob: -5.275566101074219
    5. '   ' → logprob: -8.650566101074219
    6. 'iner' → logprob: -9.025566101074219
    7. 'r' → logprob: -10.150566101074219
    8. 'uer' → logprob: -11.400566101074219
    9. 'nner' → logprob: -11.775566101074219
    10. 'érer' → logprob: -12.275566101074219

Token 1558: ' s' (ID: 265)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8760613203048706
    2. 's' → logprob: -1.1260613203048706
    3. 'current' → logprob: -1.5010613203048706
    4. '```' → logprob: -4.62606143951416
    5. ' range' → logprob: -4.75106143951416
    6. ' current' → logprob: -5.25106143951416
    7. ' s' → logprob: -5.75106143951416
    8. 'result' → logprob: -5.87606143951416
    9. '   ' → logprob: -6.12606143951416
    10. 'la' → logprob: -7.12606143951416

Token 1559: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1765487790107727
    2. 'for' → logprob: -2.676548719406128
    3. ' for' → logprob: -2.801548719406128
    4. 'pos' → logprob: -5.426548957824707
    5. '```' → logprob: -5.551548957824707
    6. '
' → logprob: -6.051548957824707
    7. 'i' → logprob: -6.051548957824707
    8. 'used' → logprob: -6.301548957824707
    9. 'idx' → logprob: -6.301548957824707
    10. '[i' → logprob: -6.426548957824707

Token 1560: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00018697108316700906
    2. ' current' → logprob: -8.875186920166016
    3. '0' → logprob: -10.375186920166016
    4. '```' → logprob: -12.250186920166016
    5. '`' → logprob: -12.625186920166016
    6. '
' → logprob: -12.625186920166016
    7. '(current' → logprob: -13.625186920166016
    8. '   ' → logprob: -14.875186920166016
    9. 'len' → logprob: -14.875186920166016
    10. '[current' → logprob: -15.000186920166016

Token 1561: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00983672495931387
    2. 'current' → logprob: -4.759836673736572
    3. 'pos' → logprob: -7.384836673736572
    4. '_current' → logprob: -7.509836673736572
    5. ' current' → logprob: -10.63483715057373
    6. 'Pos' → logprob: -11.63483715057373
    7. '   ' → logprob: -12.88483715057373
    8. '```' → logprob: -12.88483715057373
    9. '_position' → logprob: -13.00983715057373
    10. 'position' → logprob: -13.38483715057373

Token 1562: ',' (ID: 11)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.6276307106018066
    2. '   ' → logprob: -1.3776307106018066
    3. 'current' → logprob: -2.2526307106018066
    4. '
' → logprob: -3.8776307106018066
    5. '```' → logprob: -3.8776307106018066
    6. '(current' → logprob: -4.252630710601807
    7. 'for' → logprob: -4.252630710601807
    8. 'while' → logprob: -4.377630710601807
    9. ' for' → logprob: -5.502630710601807
    10. ' current' → logprob: -5.627630710601807

Token 1563: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.134023666381836
    2. '   ' → logprob: -1.384023666381836
    3. 'i' → logprob: -2.009023666381836
    4. 'pos' → logprob: -2.634023666381836
    5. 'while' → logprob: -2.759023666381836
    6. '       ' → logprob: -3.384023666381836
    7. ' for' → logprob: -3.384023666381836
    8. ' i' → logprob: -3.759023666381836
    9. 'len' → logprob: -4.884023666381836
    10. ' pos' → logprob: -4.884023666381836

Token 1564: ' ignorant' (ID: 89043)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5918867588043213
    2. 'aj' → logprob: -1.8418867588043213
    3. 'f' → logprob: -2.5918867588043213
    4. 'continu' → logprob: -3.7168867588043213
    5. 'ignor' → logprob: -3.7168867588043213
    6. 's' → logprob: -4.091886520385742
    7. 'v' → logprob: -4.216886520385742
    8. 'while' → logprob: -4.466886520385742
    9. 'skip' → logprob: -4.841886520385742
    10. 'suffix' → logprob: -4.841886520385742

Token 1565: ' les' (ID: 1341)
  Prédit: ' ceux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceux' → logprob: -0.960096001625061
    2. 'les' → logprob: -1.460096001625061
    3. ' les' → logprob: -1.710096001625061
    4. ' celles' → logprob: -2.0850958824157715
    5. 'result' → logprob: -4.3350958824157715
    6. ' result' → logprob: -5.0850958824157715
    7. 'those' → logprob: -5.0850958824157715
    8. 's' → logprob: -5.2100958824157715
    9. 'indices' → logprob: -5.3350958824157715
    10. '```' → logprob: -5.3350958824157715

Token 1566: ' indices' (ID: 30378)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0739860534667969
    2. 'positions' → logprob: -1.0739860534667969
    3. 'indices' → logprob: -1.4489860534667969
    4. 'i' → logprob: -4.323986053466797
    5. 'car' → logprob: -4.323986053466797
    6. 'rés' → logprob: -4.573986053466797
    7. '[result' → logprob: -4.948986053466797
    8. 'used' → logprob: -5.073986053466797
    9. 'lett' → logprob: -5.323986053466797
    10. 'pos' → logprob: -5.698986053466797

Token 1567: ' qui' (ID: 2780)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.6205576658248901
    2. ' =' → logprob: -1.9955576658248901
    3. '=' → logprob: -2.1205577850341797
    4. '   ' → logprob: -2.2455577850341797
    5. 'for' → logprob: -2.9955577850341797
    6. ' for' → logprob: -3.1205577850341797
    7. '0' → logprob: -3.3705577850341797
    8. 'visited' → logprob: -3.6205577850341797
    9. 'used' → logprob: -3.7455577850341797
    10. 's' → logprob: -3.8705577850341797

Token 1568: ' appara' (ID: 52982)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.10992760956287384
    2. 'éta' → logprob: -3.2349276542663574
    3. 'avaient' → logprob: -3.2349276542663574
    4. 's' → logprob: -4.234927654266357
    5. '```' → logprob: -6.234927654266357
    6. 'n' → logprob: -6.609927654266357
    7. '#' → logprob: -6.859927654266357
    8. 'already' → logprob: -7.359927654266357
    9. 'app' → logprob: -7.609927654266357
    10. 'have' → logprob: -7.734927654266357

Token 1569: 'issent' (ID: 31556)
  Prédit: 'issent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issent' → logprob: -0.40813836455345154
    2. 'pas' → logprob: -2.2831382751464844
    3. 'dans' → logprob: -3.1581382751464844
    4. 'issant' → logprob: -3.2831382751464844
    5. 'nt' → logprob: -3.4081382751464844
    6. 's' → logprob: -3.4081382751464844
    7. 'ss' → logprob: -3.7831382751464844
    8. 'in' → logprob: -4.908138275146484
    9. '   ' → logprob: -5.408138275146484
    10. 'par' → logprob: -5.533138275146484

Token 1570: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.8416535258293152
    2. ' in' → logprob: -2.46665358543396
    3. ' dans' → logprob: -2.46665358543396
    4. ' pas' → logprob: -2.71665358543396
    5. 'pas' → logprob: -2.71665358543396
    6. 'in' → logprob: -2.96665358543396
    7. 's' → logprob: -3.46665358543396
    8. ' =' → logprob: -3.84165358543396
    9. '```' → logprob: -4.091653347015381
    10. ' not' → logprob: -4.341653347015381

Token 1571: ' result' (ID: 1534)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8198506236076355
    2. 'result' → logprob: -1.1948506832122803
    3. 'set' → logprob: -1.5698506832122803
    4. 'removed' → logprob: -3.3198506832122803
    5. '{' → logprob: -4.819850444793701
    6. 'range' → logprob: -6.819850444793701
    7. '[result' → logprob: -7.194850444793701
    8. '```' → logprob: -7.694850444793701
    9. '[' → logprob: -8.06985092163086
    10. '
' → logprob: -8.06985092163086

Token 1572: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38370582461357117
    2. '[current' → logprob: -2.5087058544158936
    3. 'current' → logprob: -2.8837058544158936
    4. ' =' → logprob: -3.3837058544158936
    5. '```' → logprob: -3.7587058544158936
    6. '
' → logprob: -3.7587058544158936
    7. '[]' → logprob: -4.3837056159973145
    8. '[]
' → logprob: -4.5087056159973145
    9. ' current' → logprob: -4.6337056159973145
    10. ',' → logprob: -5.2587056159973145

Token 1573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4477231800556183
    2. 'used' → logprob: -1.072723150253296
    3. 'visited' → logprob: -5.447723388671875
    4. ' used' → logprob: -6.197723388671875
    5. 'indices' → logprob: -6.197723388671875
    6. 'seen' → logprob: -6.322723388671875
    7. 'pos' → logprob: -6.322723388671875
    8. '```' → logprob: -6.322723388671875
    9. 'taken' → logprob: -6.697723388671875
    10. 'positions' → logprob: -6.822723388671875

Token 1574: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0260445736348629
    2. 'visited' → logprob: -4.7760443687438965
    3. 'pos' → logprob: -5.6510443687438965
    4. 'indices' → logprob: -5.7760443687438965
    5. '   ' → logprob: -5.9010443687438965
    6. 'taken' → logprob: -6.0260443687438965
    7. ' used' → logprob: -6.7760443687438965
    8. 'index' → logprob: -7.0260443687438965
    9. 'positions' → logprob: -7.5260443687438965
    10. 'idx' → logprob: -7.5260443687438965

Token 1575: ' Le' (ID: 2018)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.3698021173477173
    2. '   ' → logprob: -1.4948021173477173
    3. 'indices' → logprob: -3.8698019981384277
    4. 'visited' → logprob: -3.9948019981384277
    5. 'for' → logprob: -4.369801998138428
    6. 'pos' → logprob: -4.494801998138428
    7. 'idx' → logprob: -5.244801998138428
    8. 'taken' → logprob: -5.869801998138428
    9. 'index' → logprob: -5.994801998138428
    10. 'remaining' → logprob: -6.119801998138428

Token 1576: ' problème' (ID: 35630)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.4276165962219238
    2. 'indices' → logprob: -1.4276165962219238
    3. 'rest' → logprob: -1.4276165962219238
    4. 'for' → logprob: -2.427616596221924
    5. 'remaining' → logprob: -2.677616596221924
    6. 'pos' → logprob: -3.802616596221924
    7. 'reste' → logprob: -4.052616596221924
    8. 'visited' → logprob: -4.302616596221924
    9. 'positions' → logprob: -4.302616596221924
    10. '#' → logprob: -4.427616596221924

Token 1577: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.967940628528595
    2. '#' → logprob: -1.7179405689239502
    3. '_' → logprob: -1.9679405689239502
    4. 'indices' → logprob: -2.59294056892395
    5. 'rest' → logprob: -2.84294056892395
    6. 's' → logprob: -3.84294056892395
    7. '=' → logprob: -3.96794056892395
    8. 'for' → logprob: -4.342940807342529
    9. '_indices' → logprob: -4.342940807342529
    10. ' rest' → logprob: -4.842940807342529

Token 1578: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.11932632327079773
    2. '#' → logprob: -3.24432635307312
    3. 'que' → logprob: -3.74432635307312
    4. 's' → logprob: -4.494326114654541
    5. '_' → logprob: -5.869326114654541
    6. ' #' → logprob: -5.869326114654541
    7. 'rest' → logprob: -5.994326114654541
    8. ' rest' → logprob: -6.119326114654541
    9. 'qu' → logprob: -6.369326114654541
    10. '```' → logprob: -6.369326114654541

Token 1579: ''on' (ID: 25812)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9048335552215576
    2. ' =' → logprob: -1.9048335552215576
    3. ' s' → logprob: -2.1548335552215576
    4. ''' → logprob: -2.4048335552215576
    5. 'len' → logprob: -2.4048335552215576
    6. '#' → logprob: -3.0298335552215576
    7. '```' → logprob: -3.4048335552215576
    8. '=' → logprob: -3.5298335552215576
    9. ':' → logprob: -3.9048335552215576
    10. ' current' → logprob: -4.029833793640137

Token 1580: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5013942718505859
    2. 'a' → logprob: -1.376394271850586
    3. 'avait' → logprob: -2.751394271850586
    4. 'do' → logprob: -3.376394271850586
    5. 'ne' → logprob: -4.251394271850586
    6. '#' → logprob: -4.501394271850586
    7. 'continue' → logprob: -5.626394271850586
    8. ' n' → logprob: -5.751394271850586
    9. 've' → logprob: -6.251394271850586
    10. 'est' → logprob: -6.876394271850586

Token 1581: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48025068640708923
    2. 'avait' → logprob: -1.1052507162094116
    3. 'n' → logprob: -3.855250597000122
    4. ''a' → logprob: -4.855250835418701
    5. '#' → logprob: -5.230250835418701
    6. '```' → logprob: -5.730250835418701
    7. 'do' → logprob: -6.355250835418701
    8. 'av' → logprob: -6.730250835418701
    9. 'ignore' → logprob: -6.730250835418701
    10. 'avez' → logprob: -7.230250835418701

Token 1582: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.02016693539917469
    2. 'pu' → logprob: -4.270166873931885
    3. 'plus' → logprob: -5.770166873931885
    4. ' pas' → logprob: -6.145166873931885
    5. '#' → logprob: -9.020167350769043
    6. 's' → logprob: -9.145167350769043
    7. 'g' → logprob: -9.645167350769043
    8. 'p' → logprob: -9.770167350769043
    9. 'explicit' → logprob: -10.395167350769043
    10. 'd' → logprob: -10.770167350769043

Token 1583: ' trace' (ID: 21523)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stock' → logprob: -0.9870045781135559
    2. 'explicit' → logprob: -1.1120045185089111
    3. 'g' → logprob: -2.112004518508911
    4. 'mar' → logprob: -2.737004518508911
    5. 'pas' → logprob: -3.737004518508911
    6. 'not' → logprob: -3.862004518508911
    7. 'gard' → logprob: -3.987004518508911
    8. 'su' → logprob: -4.73700475692749
    9. 'en' → logprob: -5.11200475692749
    10. 'st' → logprob: -5.11200475692749

Token 1584: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6818094253540039
    2. 'd' → logprob: -1.931809425354004
    3. 'des' → logprob: -1.931809425354004
    4. '#' → logprob: -2.431809425354004
    5. ' des' → logprob: -3.181809425354004
    6. '_' → logprob: -4.056809425354004
    7. '[]' → logprob: -4.806809425354004
    8. 'de' → logprob: -5.181809425354004
    9. 'used' → logprob: -5.306809425354004
    10. ' ' → logprob: -5.306809425354004

Token 1585: ' positions' (ID: 15897)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.605564296245575
    2. 'positions' → logprob: -1.2305643558502197
    3. 'car' → logprob: -2.1055643558502197
    4. 'lett' → logprob: -3.9805643558502197
    5. ' indices' → logprob: -5.355564117431641
    6. '```' → logprob: -5.355564117431641
    7. 'index' → logprob: -6.605564117431641
    8. ' positions' → logprob: -6.730564117431641
    9. 'used' → logprob: -7.105564117431641
    10. 'cho' → logprob: -7.105564117431641

Token 1586: ' exact' (ID: 6354)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.9091773629188538
    2. '   ' → logprob: -2.534177303314209
    3. 'rest' → logprob: -2.659177303314209
    4. ' =' → logprob: -2.784177303314209
    5. ' used' → logprob: -2.909177303314209
    6. 'indices' → logprob: -3.034177303314209
    7. '#' → logprob: -3.034177303314209
    8. '_used' → logprob: -3.284177303314209
    9. 'non' → logprob: -3.284177303314209
    10. '```' → logprob: -3.409177303314209

Token 1587: 'es' (ID: 268)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6190037131309509
    2. 'util' → logprob: -1.8690037727355957
    3. ' utilisées' → logprob: -2.2440037727355957
    4. '```' → logprob: -3.3690037727355957
    5. 'des' → logprob: -3.4940037727355957
    6. 'used' → logprob: -3.4940037727355957
    7. ' restantes' → logprob: -4.244003772735596
    8. ' used' → logprob: -4.369003772735596
    9. 's' → logprob: -4.744003772735596
    10. 'rest' → logprob: -4.869003772735596

Token 1588: ' déplac' (ID: 195321)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9596248865127563
    2. ' used' → logprob: -2.209624767303467
    3. 'used' → logprob: -2.459624767303467
    4. ' for' → logprob: -2.584624767303467
    5. '   ' → logprob: -2.709624767303467
    6. '#' → logprob: -2.834624767303467
    7. 'rest' → logprob: -3.209624767303467
    8. 'remaining' → logprob: -3.334624767303467
    9. ' #' → logprob: -3.459624767303467
    10. ' rest' → logprob: -3.584624767303467

Token 1589: 'ées' (ID: 5161)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3529582023620605
    2. 'ées' → logprob: -1.4779582023620605
    3. 'és' → logprob: -1.7279582023620605
    4. ' utilisées' → logprob: -2.9779582023620605
    5. '   ' → logprob: -3.1029582023620605
    6. 'used' → logprob: -3.2279582023620605
    7. 'es' → logprob: -3.3529582023620605
    8. 'ites' → logprob: -3.7279582023620605
    9. '```' → logprob: -3.8529582023620605
    10. 'nées' → logprob: -4.4779582023620605

Token 1590: ' (' (ID: 350)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.2583911120891571
    2. 'indices' → logprob: -2.7583911418914795
    3. '#' → logprob: -3.0083911418914795
    4. ' used' → logprob: -4.2583909034729
    5. '```' → logprob: -4.2583909034729
    6. 'positions' → logprob: -4.3833909034729
    7. '   ' → logprob: -4.3833909034729
    8. 'rest' → logprob: -4.5083909034729
    9. 'taken' → logprob: -5.0083909034729
    10. 'remaining' → logprob: -5.5083909034729

Token 1591: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15693522989749908
    2. '#' → logprob: -3.406935214996338
    3. 's' → logprob: -4.781935214996338
    4. '```' → logprob: -4.781935214996338
    5. 'pos' → logprob: -4.906935214996338
    6. ':' → logprob: -5.031935214996338
    7. ' )' → logprob: -5.156935214996338
    8. '...' → logprob: -5.281935214996338
    9. 'indices' → logprob: -5.281935214996338
    10. '),' → logprob: -5.406935214996338

Token 1592: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6743276119232178
    2. ' on' → logprob: -1.5493276119232178
    3. '#' → logprob: -2.5493276119232178
    4. '```' → logprob: -3.1743276119232178
    5. 'nous' → logprob: -3.7993276119232178
    6. 'les' → logprob: -3.7993276119232178
    7. 's' → logprob: -4.049327850341797
    8. 'we' → logprob: -4.174327850341797
    9. ' we' → logprob: -4.799327850341797
    10. 'ils' → logprob: -5.174327850341797

Token 1593: ' ne' (ID: 453)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31808000802993774
    2. 'avait' → logprob: -2.068079948425293
    3. 'n' → logprob: -2.693079948425293
    4. '#' → logprob: -3.193079948425293
    5. 'ne' → logprob: -3.818079948425293
    6. '```' → logprob: -5.443079948425293
    7. 'ignore' → logprob: -6.318079948425293
    8. 'les' → logprob: -6.318079948425293
    9. 's' → logprob: -6.943079948425293
    10. 'avez' → logprob: -7.193079948425293

Token 1594: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3211567401885986
    2. 'p' → logprob: -1.9461567401885986
    3. 'pas' → logprob: -2.3211567401885986
    4. 'a' → logprob: -2.4461567401885986
    5. 'avait' → logprob: -2.4461567401885986
    6. 'n' → logprob: -2.6961567401885986
    7. 's' → logprob: -3.0711567401885986
    8. '```' → logprob: -3.3211567401885986
    9. 'les' → logprob: -3.5711567401885986
    10. 'sup' → logprob: -3.5711567401885986

Token 1595: ' stock' (ID: 6546)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9159703850746155
    2. 'a' → logprob: -1.0409703254699707
    3. 'avait' → logprob: -2.6659703254699707
    4. 'pas' → logprob: -3.0409703254699707
    5. 'sup' → logprob: -3.2909703254699707
    6. 'p' → logprob: -4.290970325469971
    7. 's' → logprob: -4.540970325469971
    8. 'stock' → logprob: -4.665970325469971
    9. 'n' → logprob: -5.290970325469971
    10. '```' → logprob: -5.290970325469971

Token 1596: 'e' (ID: 68)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.00649260776117444
    2. 'és' → logprob: -5.131492614746094
    3. 'é' → logprob: -7.881492614746094
    4. 'ée' → logprob: -9.006492614746094
    5. 'e' → logprob: -10.881492614746094
    6. 'è' → logprob: -12.131492614746094
    7. 'nées' → logprob: -12.131492614746094
    8. 'u' → logprob: -12.631492614746094
    9. 'ons' → logprob: -12.756492614746094
    10. 'es' → logprob: -12.756492614746094

Token 1597: ' pas' (ID: 2173)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5744843482971191
    2. 'pas' → logprob: -1.9494843482971191
    3. ' pas' → logprob: -2.199484348297119
    4. ' plus' → logprob: -2.949484348297119
    5. ' =' → logprob: -3.449484348297119
    6. 's' → logprob: -4.199484348297119
    7. 'plus' → logprob: -4.199484348297119
    8. '=' → logprob: -4.574484348297119
    9. 'explicit' → logprob: -5.324484348297119
    10. ']' → logprob: -5.324484348297119

Token 1598: ' individ' (ID: 3928)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09845194220542908
    2. '#' → logprob: -4.223452091217041
    3. '.' → logprob: -4.723452091217041
    4. '...' → logprob: -4.723452091217041
    5. ',' → logprob: -4.848452091217041
    6. '```' → logprob: -4.848452091217041
    7. '),' → logprob: -5.098452091217041
    8. ').' → logprob: -5.598452091217041
    9. ']' → logprob: -5.723452091217041
    10. 's' → logprob: -5.848452091217041

Token 1599: 'uellement' (ID: 36026)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7544230222702026
    2. 'ues' → logprob: -1.5044230222702026
    3. 'ices' → logprob: -2.254423141479492
    4. 'ex' → logprob: -2.754423141479492
    5. 'uels' → logprob: -3.129423141479492
    6. 'ual' → logprob: -3.754423141479492
    7. '```' → logprob: -4.129423141479492
    8. 'uel' → logprob: -4.379423141479492
    9. 'is' → logprob: -4.879423141479492
    10. 'i' → logprob: -5.379423141479492

Token 1600: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5707055330276489
    2. '#' → logprob: -2.1957054138183594
    3. ':' → logprob: -2.9457054138183594
    4. ',' → logprob: -3.3207054138183594
    5. ']' → logprob: -3.4457054138183594
    6. '_' → logprob: -3.8207054138183594
    7. '```' → logprob: -3.8207054138183594
    8. 'for' → logprob: -4.070705413818359
    9. '   ' → logprob: -4.195705413818359
    10. '.' → logprob: -4.195705413818359

Token 1601: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.23358750343322754
    2. '   ' → logprob: -2.7335875034332275
    3. 'indices' → logprob: -2.8585875034332275
    4. '#' → logprob: -3.3585875034332275
    5. 'positions' → logprob: -4.233587265014648
    6. 'rest' → logprob: -4.858587265014648
    7. 'remaining' → logprob: -5.233587265014648
    8. 'i' → logprob: -5.733587265014648
    9. 'visited' → logprob: -5.733587265014648
    10. 'indexes' → logprob: -5.858587265014648

Token 1602: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.07929258048534393
    2. 'indices' → logprob: -3.7042925357818604
    3. 'positions' → logprob: -4.5792927742004395
    4. 'taken' → logprob: -4.7042927742004395
    5. '   ' → logprob: -4.8292927742004395
    6. '#' (adapté à ' #') → logprob: -4.9542927742004395
    7. 'pos' → logprob: -6.2042927742004395
    8. 'visited' → logprob: -6.2042927742004395
    9. 'remaining' → logprob: -6.4542927742004395
    10. 'index' → logprob: -6.4542927742004395

Token 1603: ' On' (ID: 2160)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.10408003628253937
    2. '   ' → logprob: -2.8540799617767334
    3. 'taken' → logprob: -4.3540802001953125
    4. '#' → logprob: -4.4790802001953125
    5. 'indices' → logprob: -5.2290802001953125
    6. 'positions' → logprob: -5.4790802001953125
    7. '       ' → logprob: -6.8540802001953125
    8. 'rest' → logprob: -6.9790802001953125
    9. 'chosen' → logprob: -7.1040802001953125
    10. 'seen' → logprob: -7.4790802001953125

Token 1604: ' va' (ID: 3423)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6349422335624695
    2. 'continue' → logprob: -0.8849422335624695
    3. 'contin' → logprob: -4.134942054748535
    4. 'reste' → logprob: -4.134942054748535
    5. 'n' → logprob: -5.259942054748535
    6. 'continu' → logprob: -5.759942054748535
    7. 'for' → logprob: -5.884942054748535
    8. '```' → logprob: -6.384942054748535
    9. ' #' → logprob: -6.509942054748535
    10. ' continue' → logprob: -6.509942054748535

Token 1605: ' procéder' (ID: 150870)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.07407860457897186
    2. '#' → logprob: -3.6990785598754883
    3. 'continue' → logprob: -3.9490785598754883
    4. ' continuer' → logprob: -5.199078559875488
    5. 'continu' → logprob: -5.449078559875488
    6. 'util' → logprob: -5.949078559875488
    7. 'prendre' → logprob: -6.449078559875488
    8. 're' → logprob: -6.449078559875488
    9. 'maint' → logprob: -6.574078559875488
    10. 'for' → logprob: -6.824078559875488

Token 1606: ' ainsi' (ID: 16371)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2205281257629395
    2. 'à' → logprob: -1.4705281257629395
    3. '   ' → logprob: -1.9705281257629395
    4. ' à' → logprob: -2.5955281257629395
    5. '#' → logprob: -2.7205281257629395
    6. ' to' → logprob: -3.4705281257629395
    7. 'for' → logprob: -3.7205281257629395
    8. 'to' → logprob: -3.7205281257629395
    9. 'def' → logprob: -4.0955281257629395
    10. 'par' → logprob: -4.4705281257629395

Token 1607: ' :' (ID: 712)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6213196516036987
    2. '   ' → logprob: -0.8713196516036987
    3. 'visited' → logprob: -4.246319770812988
    4. 'indices' → logprob: -4.871319770812988
    5. 'remaining' → logprob: -5.746319770812988
    6. '#' → logprob: -5.871319770812988
    7. 'seen' → logprob: -5.996319770812988
    8. ' used' → logprob: -6.121319770812988
    9. 'pos' → logprob: -6.371319770812988
    10. 'rest' → logprob: -6.496319770812988

Token 1608: ' On' (ID: 2160)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.05787377431988716
    2. 'visited' → logprob: -4.182873725891113
    3. '   ' → logprob: -4.432873725891113
    4. 'indices' → logprob: -4.807873725891113
    5. 'remaining' → logprob: -5.557873725891113
    6. 'taken' → logprob: -5.932873725891113
    7. 'rest' → logprob: -6.182873725891113
    8. ' used' → logprob: -6.307873725891113
    9. 'positions' → logprob: -6.432873725891113
    10. '#' → logprob: -6.432873725891113

Token 1609: ' sait' (ID: 52101)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.638084888458252
    2. 'continue' → logprob: -1.763084888458252
    3. 'used' → logprob: -1.888084888458252
    4. 'for' → logprob: -2.013084888458252
    5. 'vais' → logprob: -2.138084888458252
    6. 'visited' → logprob: -3.013084888458252
    7. 'util' → logprob: -3.763084888458252
    8. 'reste' → logprob: -4.013084888458252
    9. 'all' → logprob: -4.388084888458252
    10. 'comp' → logprob: -4.763084888458252

Token 1610: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5879103541374207
    2. 'que' → logprob: -2.2129104137420654
    3. 'à' → logprob: -2.3379104137420654
    4. 'aux' → logprob: -3.4629104137420654
    5. '#' → logprob: -3.7129104137420654
    6. 'les' → logprob: -3.8379104137420654
    7. 'indices' → logprob: -3.9629104137420654
    8. '```' → logprob: -4.087910175323486
    9. 'import' → logprob: -4.212910175323486
    10. '       ' → logprob: -4.462910175323486

Token 1611: ' "' (ID: 392)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.9224668145179749
    2. '#' → logprob: -1.92246675491333
    3. 'len' → logprob: -1.92246675491333
    4. 'les' → logprob: -2.17246675491333
    5. 'result' → logprob: -2.67246675491333
    6. 'la' → logprob: -3.17246675491333
    7. 'le' → logprob: -3.67246675491333
    8. '   ' → logprob: -4.79746675491333
    9. 'the' → logprob: -4.79746675491333
    10. '```' → logprob: -5.04746675491333

Token 1612: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.18393579125404358
    2. 'used' → logprob: -2.6839358806610107
    3. 'result' → logprob: -4.308935642242432
    4. 'i' → logprob: -4.683935642242432
    5. 'positions' → logprob: -4.683935642242432
    6. 'taken' → logprob: -4.683935642242432
    7. 'removed' → logprob: -4.683935642242432
    8. 'indices' → logprob: -4.808935642242432
    9. 'len' → logprob: -4.933935642242432
    10. 'pos' → logprob: -5.058935642242432

Token 1613: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0003246183041483164
    2. '_position' → logprob: -9.375324249267578
    3. '_' → logprob: -9.500324249267578
    4. '_positions' → logprob: -9.750324249267578
    5. '```' → logprob: -9.875324249267578
    6. ' _' → logprob: -10.875324249267578
    7. '_idx' → logprob: -12.000324249267578
    8. ''_' → logprob: -12.125324249267578
    9. 'Pos' → logprob: -12.500324249267578
    10. '`' → logprob: -12.875324249267578

Token 1614: '"' (ID: 1)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0141855478286743
    2. ' <=' → logprob: -1.7641855478286743
    3. ' <' → logprob: -2.0141854286193848
    4. ' >=' → logprob: -2.2641854286193848
    5. '"' → logprob: -2.3891854286193848
    6. '==' → logprob: -2.8891854286193848
    7. '<=' → logprob: -3.2641854286193848
    8. '>=' → logprob: -3.6391854286193848
    9. ' >' → logprob: -5.139185428619385
    10. '<' → logprob: -5.764185428619385

Token 1615: ' marque' (ID: 38644)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7926766872406006
    2. '==' → logprob: -1.4176766872406006
    3. '>=' → logprob: -2.4176766872406006
    4. ' <' → logprob: -2.6676766872406006
    5. ' >=' → logprob: -2.7926766872406006
    6. '<=' → logprob: -3.7926766872406006
    7. '<' → logprob: -3.7926766872406006
    8. ' <=' → logprob: -3.9176766872406006
    9. '>' → logprob: -5.54267692565918
    10. '<len' → logprob: -5.79267692565918

Token 1616: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7289839386940002
    2. ' la' → logprob: -1.2289838790893555
    3. 'le' → logprob: -2.2289838790893555
    4. 'l' → logprob: -3.1039838790893555
    5. 'the' → logprob: -3.8539838790893555
    6. 'les' → logprob: -4.4789838790893555
    7. 'len' → logprob: -4.7289838790893555
    8. '```' → logprob: -5.1039838790893555
    9. ' le' → logprob: -5.7289838790893555
    10. ' l' → logprob: -5.8539838790893555

Token 1617: ' nombre' (ID: 9733)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.05932368338108063
    2. 'point' → logprob: -3.434323787689209
    3. 'prem' → logprob: -5.059323787689209
    4. 'pro' → logprob: -5.434323787689209
    5. 'index' → logprob: -5.434323787689209
    6. 'indice' → logprob: -5.434323787689209
    7. 'start' → logprob: -6.684323787689209
    8. 'nombre' → logprob: -6.809323787689209
    9. 'dern' → logprob: -7.309323787689209
    10. 'next' → logprob: -7.434323787689209

Token 1618: ' de' (ID: 334)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.163460373878479
    2. ' des' → logprob: -1.663460373878479
    3. 'd' → logprob: -2.2884602546691895
    4. ' de' → logprob: -2.5384602546691895
    5. ' d' → logprob: -2.5384602546691895
    6. 'util' → logprob: -3.4134602546691895
    7. 'used' → logprob: -3.6634602546691895
    8. 'de' → logprob: -3.6634602546691895
    9. ' of' → logprob: -3.7884602546691895
    10. '-' → logprob: -3.9134602546691895

Token 1619: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0852995365858078
    2. 'lett' → logprob: -2.710299491882324
    3. ' caractères' → logprob: -5.210299491882324
    4. 'élé' → logprob: -5.585299491882324
    5. 'tokens' → logprob: -6.710299491882324
    6. 'chars' → logprob: -6.835299491882324
    7. 'characters' → logprob: -7.085299491882324
    8. '```' → logprob: -7.335299491882324
    9. ' lettres' → logprob: -7.835299491882324
    10. 'letters' → logprob: -7.960299491882324

Token 1620: ' déjà' (ID: 21229)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.377162218093872
    2. 'util' → logprob: -1.877162218093872
    3. 'cho' → logprob: -2.002162218093872
    4. 'dé' → logprob: -2.127162218093872
    5. 'aj' → logprob: -2.877162218093872
    6. 'à' → logprob: -3.627162218093872
    7. 'sé' → logprob: -3.877162218093872
    8. ' rest' → logprob: -3.877162218093872
    9. 'trait' → logprob: -4.002161979675293
    10. 'plac' → logprob: -4.127161979675293

Token 1621: ' fix' (ID: 9295)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plac' → logprob: -0.5367110967636108
    2. 'cho' → logprob: -1.7867110967636108
    3. 'trait' → logprob: -1.9117110967636108
    4. 'pris' → logprob: -3.1617112159729004
    5. 'util' → logprob: -3.4117112159729004
    6. 'aj' → logprob: -5.2867112159729
    7. 'cons' → logprob: -5.9117112159729
    8. 'ret' → logprob: -6.0367112159729
    9. 'sé' → logprob: -6.2867112159729
    10. 'tr' → logprob: -6.5367112159729

Token 1622: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.70448899269104
    2. 'és' → logprob: -1.07948899269104
    3. '   ' → logprob: -2.45448899269104
    4. '=' → logprob: -4.329488754272461
    5. ' =' → logprob: -4.329488754272461
    6. ' ' → logprob: -5.329488754272461
    7. 'e' → logprob: -5.454488754272461
    8. 'current' → logprob: -5.704488754272461
    9. '  ' → logprob: -5.954488754272461
    10. 'ré' → logprob: -5.954488754272461

Token 1623: ' en' (ID: 469)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.751836895942688
    2. '+' → logprob: -2.0018367767333984
    3. '   ' → logprob: -2.1268367767333984
    4. ':' → logprob: -2.1268367767333984
    5. 'current' → logprob: -2.8768367767333984
    6. '.' → logprob: -3.0018367767333984
    7. ',' → logprob: -3.0018367767333984
    8. ' +' → logprob: -3.1268367767333984
    9. 'while' → logprob: -3.3768367767333984
    10. '#' → logprob: -3.3768367767333984

Token 1624: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.023671092465519905
    2. 'rés' → logprob: -3.7736711502075195
    3. 'place' → logprob: -8.89867115020752
    4. '```' → logprob: -9.14867115020752
    5. 'res' → logprob: -9.27367115020752
    6. 'plus' → logprob: -10.39867115020752
    7. 'position' → logprob: -10.89867115020752
    8. '`' → logprob: -12.02367115020752
    9. 'ré' → logprob: -12.27367115020752
    10. 'final' → logprob: -12.39867115020752

Token 1625: ',
' (ID: 412)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.2578548192977905
    2. '```' → logprob: -1.2578548192977905
    3. '+' → logprob: -2.00785493850708
    4. '   ' → logprob: -2.38285493850708
    5. '[current' → logprob: -3.25785493850708
    6. 'current' → logprob: -3.38285493850708
    7. '#' → logprob: -3.75785493850708
    8. '
' → logprob: -4.38285493850708
    9. ':' → logprob: -4.50785493850708
    10. ',' → logprob: -4.50785493850708

Token 1626: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.651136040687561
    2. '   ' → logprob: -1.651136040687561
    3. ' s' → logprob: -2.9011359214782715
    4. '```' → logprob: -3.4011359214782715
    5. ' mais' → logprob: -3.5261359214782715
    6. ''' → logprob: -3.5261359214782715
    7. ' #' → logprob: -3.7761359214782715
    8. 's' → logprob: -3.7761359214782715
    9. ')' → logprob: -4.5261359214782715
    10. ' et' → logprob: -4.5261359214782715

Token 1627: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1255694329738617
    2. '   ' → logprob: -2.3755693435668945
    3. ' #' → logprob: -5.0005693435668945
    4. 'et' → logprob: -5.6255693435668945
    5. 'mais' → logprob: -5.6255693435668945
    6. ' et' → logprob: -5.7505693435668945
    7. ' mais' → logprob: -6.1255693435668945
    8. '```' → logprob: -6.6255693435668945
    9. 's' → logprob: -6.8755693435668945
    10. '       ' → logprob: -7.5005693435668945

Token 1628: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.57392418384552
    2. 'rest' → logprob: -1.94892418384552
    3. ' rest' → logprob: -2.0739240646362305
    4. 'while' → logprob: -3.3239240646362305
    5. ' #' → logprob: -3.4489240646362305
    6. '   ' → logprob: -3.5739240646362305
    7. 'for' → logprob: -4.6989240646362305
    8. ' s' → logprob: -4.8239240646362305
    9. ' while' → logprob: -5.0739240646362305
    10. 'mais' → logprob: -5.3239240646362305

Token 1629: ' ceux' (ID: 26863)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9030511975288391
    2. 'les' → logprob: -1.2780511379241943
    3. 'que' → logprob: -2.7780511379241943
    4. 'len' → logprob: -3.1530511379241943
    5. 'la' → logprob: -3.4030511379241943
    6. 'le' → logprob: -3.4030511379241943
    7. 'leurs' → logprob: -3.6530511379241943
    8. 'on' → logprob: -4.153051376342773
    9. ' #' → logprob: -4.153051376342773
    10. 'indices' → logprob: -4.403051376342773

Token 1630: ' ont' (ID: 4930)
  Prédit: 'qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qui' → logprob: -1.3860483169555664
    2. 'rest' → logprob: -1.7610483169555664
    3. 'n' → logprob: -2.2610483169555664
    4. '#' → logprob: -2.3860483169555664
    5. 'que' → logprob: -2.8860483169555664
    6. 'current' → logprob: -3.0110483169555664
    7. '   ' → logprob: -3.1360483169555664
    8. 's' → logprob: -3.2610483169555664
    9. '```' → logprob: -3.6360483169555664
    10. 'ont' → logprob: -4.136048316955566

Token 1631: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.05999019369482994
    2. 'dé' → logprob: -3.059990167617798
    3. '#' → logprob: -5.809990406036377
    4. 'ét' → logprob: -6.059990406036377
    5. '```' → logprob: -6.059990406036377
    6. ' été' → logprob: -7.309990406036377
    7. 'already' → logprob: -7.684990406036377
    8. 'éta' → logprob: -7.809990406036377
    9. 'égal' → logprob: -8.309989929199219
    10. 'pas' → logprob: -8.434989929199219

Token 1632: ' retir' (ID: 35638)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.3925186097621918
    2. 'dé' → logprob: -2.1425185203552246
    3. 'ret' → logprob: -2.5175185203552246
    4. 'util' → logprob: -3.6425185203552246
    5. 'trait' → logprob: -3.6425185203552246
    6. 'plac' → logprob: -4.142518520355225
    7. 'sé' → logprob: -4.392518520355225
    8. 'pris' → logprob: -4.517518520355225
    9. 'sup' → logprob: -5.017518520355225
    10. 'effect' → logprob: -5.142518520355225

Token 1633: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.4760548174381256
    2. 'de' → logprob: -2.2260549068450928
    3. ' de' → logprob: -2.7260549068450928
    4. 's' → logprob: -3.2260549068450928
    5. ']' → logprob: -3.3510549068450928
    6. 'é' → logprob: -3.4760549068450928
    7. '()' → logprob: -4.101054668426514
    8. '   ' → logprob: -4.226054668426514
    9. '```' → logprob: -4.976054668426514
    10. 'des' → logprob: -4.976054668426514

Token 1634: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6116666793823242
    2. 'from' → logprob: -1.6116666793823242
    3. '```' → logprob: -2.486666679382324
    4. 'de' → logprob: -2.611666679382324
    5. '.' → logprob: -2.861666679382324
    6. '+' → logprob: -3.361666679382324
    7. 'for' → logprob: -3.361666679382324
    8. ',' → logprob: -3.611666679382324
    9. ' de' → logprob: -3.736666679382324
    10. '#' → logprob: -3.861666679382324

Token 1635: ' la' (ID: 557)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.16560271382331848
    2. 's' → logprob: -1.915602684020996
    3. 'la' → logprob: -6.165602684020996
    4. '```' → logprob: -6.540602684020996
    5. ' s' → logprob: -6.915602684020996
    6. ' positions' → logprob: -8.040602684020996
    7. 'l' → logprob: -9.165602684020996
    8. ' la' → logprob: -9.290602684020996
    9. '`' → logprob: -9.790602684020996
    10. 'indices' → logprob: -9.915602684020996

Token 1636: ' chaîne' (ID: 89288)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.1796065717935562
    2. 's' → logprob: -2.6796066761016846
    3. 'chaine' → logprob: -2.9296066761016846
    4. 'string' → logprob: -4.3046064376831055
    5. 'liste' → logprob: -4.6796064376831055
    6. '#' → logprob: -5.9296064376831055
    7. '```' → logprob: -6.0546064376831055
    8. 'fen' → logprob: -6.1796064376831055
    9. 'list' → logprob: -6.1796064376831055
    10. 'chain' → logprob: -6.6796064376831055

Token 1637: ' centrale' (ID: 60600)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.18863056600093842
    2. '   ' → logprob: -2.4386305809020996
    3. '```' → logprob: -3.6886305809020996
    4. '[' → logprob: -4.1886305809021
    5. 'current' → logprob: -4.1886305809021
    6. ' =' → logprob: -5.8136305809021
    7. 'rest' → logprob: -5.8136305809021
    8. '[s' → logprob: -5.9386305809021
    9. ',' → logprob: -6.0636305809021
    10. '#' → logprob: -6.1886305809021

Token 1638: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4146779775619507
    2. '```' → logprob: -2.0396780967712402
    3. '[current' → logprob: -2.6646780967712402
    4. '
' → logprob: -3.6646780967712402
    5. ',' → logprob: -4.16467809677124
    6. '#' → logprob: -4.28967809677124
    7. 'current' → logprob: -4.41467809677124
    8. '.' → logprob: -4.78967809677124
    9. '[' → logprob: -4.78967809677124
    10. 's' → logprob: -5.16467809677124

Token 1639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007279930170625448
    2. '```' → logprob: -5.507279872894287
    3. '#' → logprob: -7.257279872894287
    4. 's' → logprob: -7.382279872894287
    5. 'rest' → logprob: -7.757279872894287
    6. 'for' → logprob: -8.257280349731445
    7. 'suffix' → logprob: -8.382280349731445
    8. ',' → logprob: -8.507280349731445
    9. '
' → logprob: -8.757280349731445
    10. ' s' → logprob: -9.132280349731445

Token 1640: ' #' (ID: 1069)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6790972352027893
    2. '   ' → logprob: -1.0540971755981445
    3. 'used' → logprob: -3.0540971755981445
    4. 'remaining' → logprob: -3.1790971755981445
    5. 'suffix' → logprob: -3.9290971755981445
    6. '#' (adapté à ' #') → logprob: -3.9290971755981445
    7. 'for' → logprob: -5.1790971755981445
    8. 'rem' → logprob: -6.1790971755981445
    9. 'indices' → logprob: -6.5540971755981445
    10. 's' → logprob: -6.8040971755981445

Token 1641: ' Or' (ID: 2604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3151375651359558
    2. 'rest' → logprob: -1.6901376247406006
    3. 'suffix' → logprob: -3.3151376247406006
    4. 'for' → logprob: -4.3151373863220215
    5. 'while' → logprob: -4.6901373863220215
    6. '#' → logprob: -4.6901373863220215
    7. 'remaining' → logprob: -4.8151373863220215
    8. 'used' → logprob: -5.8151373863220215
    9. '```' → logprob: -6.0651373863220215
    10. 's' → logprob: -6.4401373863220215

Token 1642: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27809756994247437
    2. 'current' → logprob: -2.903097629547119
    3. 'len' → logprob: -3.028097629547119
    4. 'on' → logprob: -3.653097629547119
    5. '   ' → logprob: -3.778097629547119
    6. 'la' → logprob: -3.903097629547119
    7. ' #' → logprob: -4.278097629547119
    8. ' on' → logprob: -4.903097629547119
    9. 'le' → logprob: -4.903097629547119
    10. 'les' → logprob: -5.278097629547119

Token 1643: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7455641627311707
    2. 'n' → logprob: -1.6205642223358154
    3. 'continue' → logprob: -2.6205642223358154
    4. 'a' → logprob: -3.2455642223358154
    5. 'pe' → logprob: -3.2455642223358154
    6. 'do' → logprob: -3.3705642223358154
    7. ' n' → logprob: -3.6205642223358154
    8. 'avait' → logprob: -4.370563983917236
    9. 'for' → logprob: -4.495563983917236
    10. 'ne' → logprob: -4.495563983917236

Token 1644: ' déplac' (ID: 195321)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.1316486597061157
    2. 'dé' → logprob: -1.8816486597061157
    3. 'just' → logprob: -2.006648540496826
    4. 'auc' → logprob: -3.756648540496826
    5. 'sup' → logprob: -3.756648540496826
    6. 'maint' → logprob: -3.881648540496826
    7. 's' → logprob: -4.006648540496826
    8. 'r' → logprob: -4.006648540496826
    9. 'ret' → logprob: -4.006648540496826
    10. 'con' → logprob: -4.006648540496826

Token 1645: 'é' (ID: 377)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.3015432059764862
    2. 'é' → logprob: -1.9265432357788086
    3. 's' → logprob: -2.6765432357788086
    4. ' s' → logprob: -4.301543235778809
    5. '   ' → logprob: -4.676543235778809
    6. 'ées' → logprob: -5.426543235778809
    7. 'es' → logprob: -6.426543235778809
    8. 'e' → logprob: -6.426543235778809
    9. ' les' → logprob: -6.426543235778809
    10. 'pos' → logprob: -6.801543235778809

Token 1646: ' ces' (ID: 10532)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7330122590065002
    2. 'current' → logprob: -2.6080121994018555
    3. ' les' → logprob: -2.8580121994018555
    4. 'le' → logprob: -2.9830121994018555
    5. 'la' → logprob: -3.1080121994018555
    6. '   ' → logprob: -3.2330121994018555
    7. '#' → logprob: -3.3580121994018555
    8. 's' → logprob: -3.6080121994018555
    9. 'pas' → logprob: -4.2330121994018555
    10. 'leurs' → logprob: -4.2330121994018555

Token 1647: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.8629257678985596
    2. ' caractères' → logprob: -0.8629257678985596
    3. 'indices' → logprob: -3.6129257678985596
    4. 'positions' → logprob: -3.6129257678985596
    5. ' lettres' → logprob: -3.8629257678985596
    6. ' indices' → logprob: -4.4879255294799805
    7. 'lett' → logprob: -4.6129255294799805
    8. ' positions' → logprob: -4.7379255294799805
    9. ' rest' → logprob: -4.8629255294799805
    10. '#' → logprob: -4.9879255294799805

Token 1648: ' vers' (ID: 3640)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.11610513180494308
    2. '[' → logprob: -3.241105079650879
    3. '```' → logprob: -3.866105079650879
    4. 'current' → logprob: -4.241105079650879
    5. '   ' → logprob: -4.741105079650879
    6. 'rest' → logprob: -5.491105079650879
    7. ' =' → logprob: -6.116105079650879
    8. '[pos' → logprob: -6.491105079650879
    9. '[
' → logprob: -6.616105079650879
    10. '[:' → logprob: -6.741105079650879

Token 1649: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7322112917900085
    2. 'le' → logprob: -1.4822113513946533
    3. 'result' → logprob: -1.7322113513946533
    4. 'l' → logprob: -2.3572113513946533
    5. 'g' → logprob: -4.232211112976074
    6. 'current' → logprob: -6.482211112976074
    7. 'start' → logprob: -7.607211112976074
    8. '```' → logprob: -7.607211112976074
    9. 'left' → logprob: -7.732211112976074
    10. '`' → logprob: -7.857211112976074

Token 1650: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.08526637405157089
    2. 'begin' → logprob: -3.835266351699829
    3. '```' → logprob: -3.960266351699829
    4. 'front' → logprob: -4.460266590118408
    5. 'result' → logprob: -4.710266590118408
    6. 'start' → logprob: -5.460266590118408
    7. 'rés' → logprob: -6.085266590118408
    8. 'current' → logprob: -6.210266590118408
    9. ' début' → logprob: -6.335266590118408
    10. 'de' → logprob: -6.335266590118408

Token 1651: ' (' (ID: 350)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8683392405509949
    2. ',' → logprob: -1.7433393001556396
    3. '.' → logprob: -2.3683393001556396
    4. '   ' → logprob: -2.4933393001556396
    5. ':' → logprob: -3.1183393001556396
    6. ' +' → logprob: -3.3683393001556396
    7. '+' → logprob: -3.7433393001556396
    8. '
' → logprob: -4.1183390617370605
    9. 's' → logprob: -4.1183390617370605
    10. '#' → logprob: -4.6183390617370605

Token 1652: 'cf' (ID: 17449)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7814162969589233
    2. '),' → logprob: -1.9064162969589233
    3. 'current' → logprob: -2.031416416168213
    4. 's' → logprob: -3.031416416168213
    5. ',' → logprob: -3.531416416168213
    6. ').' → logprob: -3.906416416168213
    7. ' s' → logprob: -4.031416416168213
    8. '   ' → logprob: -4.031416416168213
    9. '...' → logprob: -4.281416416168213
    10. '#' → logprob: -4.656416416168213

Token 1653: ' swaps' (ID: 150699)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6349143385887146
    2. ' s' → logprob: -2.1349143981933594
    3. 'la' → logprob: -2.2599143981933594
    4. '```' → logprob: -3.1349143981933594
    5. ' le' → logprob: -3.6349143981933594
    6. 's' → logprob: -3.6349143981933594
    7. ' current' → logprob: -3.7599143981933594
    8. 'current' → logprob: -3.8849143981933594
    9. '   ' → logprob: -4.009914398193359
    10. '#' → logprob: -4.259914398193359

Token 1654: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4237152338027954
    2. '])' → logprob: -2.673715114593506
    3. '```' → logprob: -3.298715114593506
    4. '   ' → logprob: -3.548715114593506
    5. ']' → logprob: -3.673715114593506
    6. '_rest' → logprob: -3.923715114593506
    7. '...' → logprob: -4.423715114593506
    8. '),' → logprob: -4.423715114593506
    9. ' rest' → logprob: -4.673715114593506
    10. 'rest' → logprob: -4.798715114593506

Token 1655: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1463490724563599
    2. '   ' → logprob: -1.2713490724563599
    3. ' s' → logprob: -1.5213490724563599
    4. 's' → logprob: -3.6463489532470703
    5. ' rest' → logprob: -3.6463489532470703
    6. ' #' → logprob: -3.7713489532470703
    7. 'rest' → logprob: -4.02134895324707
    8. '```' → logprob: -4.39634895324707
    9. '       ' → logprob: -4.52134895324707
    10. ' for' → logprob: -5.02134895324707

Token 1656: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.303412675857544
    2. ' on' → logprob: -2.053412675857544
    3. 'le' → logprob: -2.053412675857544
    4. ' la' → logprob: -2.803412675857544
    5. ' le' → logprob: -2.928412675857544
    6. ' s' → logprob: -2.928412675857544
    7. 'la' → logprob: -2.928412675857544
    8. 'on' → logprob: -3.053412675857544
    9. ' #' → logprob: -3.178412675857544
    10. ' ils' → logprob: -3.553412675857544

Token 1657: ' caractères' (ID: 183106)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.25474342703819275
    2. 'rest' → logprob: -1.7547434568405151
    3. 'indices' → logprob: -3.7547433376312256
    4. ' indices' → logprob: -4.504743576049805
    5. 'car' → logprob: -5.379743576049805
    6. 'reste' → logprob: -5.879743576049805
    7. 'suffix' → logprob: -6.379743576049805
    8. ' caractères' → logprob: -6.504743576049805
    9. 'positions' → logprob: -6.629743576049805
    10. '#' → logprob: -7.129743576049805

Token 1658: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.7195374965667725
    2. 'dé' → logprob: -2.2195374965667725
    3. 'non' → logprob: -2.4695374965667725
    4. '#' → logprob: -2.8445374965667725
    5. 'n' → logprob: -3.0945374965667725
    6. 'util' → logprob: -3.2195374965667725
    7. ' rest' → logprob: -3.2195374965667725
    8. '   ' → logprob: -4.344537734985352
    9. 'qui' → logprob: -4.469537734985352
    10. 'cho' → logprob: -4.719537734985352

Token 1659: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.22826527059078217
    2. 'ant' → logprob: -1.9782652854919434
    3. 'nants' → logprob: -3.6032652854919434
    4. '   ' → logprob: -5.103265285491943
    5. 'rest' → logprob: -5.478265285491943
    6. ' rest' → logprob: -5.478265285491943
    7. 'de' → logprob: -5.728265285491943
    8. ']' → logprob: -5.978265285491943
    9. 'remaining' → logprob: -6.353265285491943
    10. '[' → logprob: -6.603265285491943

Token 1660: ' sont' (ID: 5242)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.9138761758804321
    2. 'rest' → logprob: -0.9138761758804321
    3. '```' → logprob: -3.2888760566711426
    4. 's' → logprob: -3.6638760566711426
    5. '#' → logprob: -4.038876056671143
    6. ' =' → logprob: -4.163876056671143
    7. ' restent' → logprob: -4.163876056671143
    8. 'do' → logprob: -4.538876056671143
    9. '=' → logprob: -4.913876056671143
    10. '[current' → logprob: -4.913876056671143

Token 1661: ' tous' (ID: 10688)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.260097473859787
    2. ' s' → logprob: -1.5100975036621094
    3. '   ' → logprob: -5.635097503662109
    4. '```' → logprob: -6.385097503662109
    5. ' ' → logprob: -7.635097503662109
    6. 'current' → logprob: -7.885097503662109
    7. ' current' → logprob: -8.01009750366211
    8. 'rest' → logprob: -8.26009750366211
    9. ' rest' → logprob: -8.26009750366211
    10. ' ceux' → logprob: -8.76009750366211

Token 1662: ' ceux' (ID: 26863)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0410094261169434
    2. ' s' → logprob: -1.5410094261169434
    3. ' rest' → logprob: -2.1660094261169434
    4. 'dans' → logprob: -2.5410094261169434
    5. ' current' → logprob: -2.7910094261169434
    6. '[current' → logprob: -3.4160094261169434
    7. 'current' → logprob: -3.5410094261169434
    8. ' dans' → logprob: -3.7910094261169434
    9. ' non' → logprob: -3.9160094261169434
    10. '```' → logprob: -4.166009426116943

Token 1663: ' situ' (ID: 4581)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.286065936088562
    2. ' rest' → logprob: -2.2860660552978516
    3. 'rest' → logprob: -2.5360660552978516
    4. '>=' → logprob: -2.9110660552978516
    5. 'dans' → logprob: -3.0360660552978516
    6. '   ' → logprob: -3.1610660552978516
    7. 'de' → logprob: -3.1610660552978516
    8. '```' → logprob: -3.2860660552978516
    9. 'au' → logprob: -3.5360660552978516
    10. ' de' → logprob: -3.5360660552978516

Token 1664: 'és' (ID: 1756)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.7538893222808838
    2. 'au' → logprob: -1.5038893222808838
    3. 's' → logprob: -3.128889322280884
    4. 'à' → logprob: -3.253889322280884
    5. 'ap' → logprob: -3.253889322280884
    6. '=' → logprob: -3.503889322280884
    7. 'sur' → logprob: -3.878889322280884
    8. 'e' → logprob: -4.503889083862305
    9. ' à' → logprob: -4.878889083862305
    10. ' =' → logprob: -5.003889083862305

Token 1665: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.0311322212219238
    2. 'dans' → logprob: -1.1561322212219238
    3. 'au' → logprob: -1.9061322212219238
    4. 'ap' → logprob: -2.281132221221924
    5. '>=' → logprob: -3.406132221221924
    6. '```' → logprob: -4.031132221221924
    7. 'entre' → logprob: -4.906132221221924
    8. 'plus' → logprob: -5.406132221221924
    9. '>' → logprob: -6.031132221221924
    10. 'act' → logprob: -6.406132221221924

Token 1666: ' droite' (ID: 61428)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10486607253551483
    2. 'positions' → logprob: -3.2298660278320312
    3. 'indices' → logprob: -3.3548660278320312
    4. 'l' → logprob: -5.229866027832031
    5. '```' → logprob: -5.479866027832031
    6. 'indexes' → logprob: -5.479866027832031
    7. 'index' → logprob: -6.229866027832031
    8. '>=' → logprob: -6.729866027832031
    9. 'la' → logprob: -6.854866027832031
    10. '+' → logprob: -6.979866027832031

Token 1667: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0989354848861694
    2. ' de' → logprob: -1.4739354848861694
    3. 'dans' → logprob: -2.848935604095459
    4. ',' → logprob: -2.973935604095459
    5. '```' → logprob: -3.098935604095459
    6. '+' → logprob: -3.223935604095459
    7. ':' → logprob: -3.348935604095459
    8. '[current' → logprob: -3.598935604095459
    9. 'current' → logprob: -3.848935604095459
    10. ' of' → logprob: -3.973935604095459

Token 1668: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.01872117817401886
    2. ' current' → logprob: -4.018721103668213
    3. '```' → logprob: -8.643721580505371
    4. '`' → logprob: -8.893721580505371
    5. 'l' → logprob: -8.893721580505371
    6. '(current' → logprob: -11.268721580505371
    7. ' ' → logprob: -11.393721580505371
    8. 'la' → logprob: -11.393721580505371
    9. '   ' → logprob: -11.893721580505371
    10. '``' → logprob: -11.893721580505371

Token 1669: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0009243228123523295
    2. 'pos' → logprob: -7.000924110412598
    3. '_position' → logprob: -12.625924110412598
    4. 'current' → logprob: -12.750924110412598
    5. '_' → logprob: -12.875924110412598
    6. '```' → logprob: -13.625924110412598
    7. '_current' → logprob: -14.250924110412598
    8. 'Pos' → logprob: -14.625924110412598
    9. '_positions' → logprob: -14.750924110412598
    10. 'position' → logprob: -14.875924110412598

Token 1670: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2534193694591522
    2. ' +' → logprob: -3.2534193992614746
    3. '+' → logprob: -3.3784193992614746
    4. ' +=' → logprob: -3.5034193992614746
    5. '+=' → logprob: -3.7534193992614746
    6. 'result' → logprob: -3.7534193992614746
    7. 'suffix' → logprob: -3.8784193992614746
    8. 's' → logprob: -4.253419399261475
    9. ' =' → logprob: -5.128419399261475
    10. '```' → logprob: -5.253419399261475

Token 1671: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07605630159378052
    2. ' +' → logprob: -3.9510562419891357
    3. '+' → logprob: -4.201056480407715
    4. '```' → logprob: -4.201056480407715
    5. ',' → logprob: -4.826056480407715
    6. 's' → logprob: -5.451056480407715
    7. ' =' → logprob: -6.576056480407715
    8. ' s' → logprob: -6.701056480407715
    9. '
' → logprob: -6.826056480407715
    10. ' +=' → logprob: -7.201056480407715

Token 1672: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1598517894744873
    2. ' +' → logprob: -1.4098517894744873
    3. '+' → logprob: -2.2848517894744873
    4. 's' → logprob: -2.6598517894744873
    5. '```' → logprob: -2.6598517894744873
    6. ',' → logprob: -3.4098517894744873
    7. ' +=' → logprob: -3.6598517894744873
    8. 'rest' → logprob: -4.034852027893066
    9. '.' → logprob: -4.159852027893066
    10. ' s' → logprob: -4.284852027893066

Token 1673: ' et' (ID: 859)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7179611921310425
    2. '   ' → logprob: -1.4679611921310425
    3. '+' → logprob: -2.092961311340332
    4. ' +=' → logprob: -3.092961311340332
    5. ' =' → logprob: -3.842961311340332
    6. 's' → logprob: -3.967961311340332
    7. '```' → logprob: -3.967961311340332
    8. '+=' → logprob: -4.592961311340332
    9. 'rest' → logprob: -5.467961311340332
    10. ',' → logprob: -5.467961311340332

Token 1674: ' n' (ID: 297)
  Prédit: 'leurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leurs' → logprob: -1.3927209377288818
    2. 'leur' → logprob: -1.7677209377288818
    3. 'les' → logprob: -2.017720937728882
    4. 'pas' → logprob: -2.892720937728882
    5. 'qui' → logprob: -3.517720937728882
    6. ' leurs' → logprob: -3.642720937728882
    7. 'à' → logprob: -3.767720937728882
    8. '#' → logprob: -3.892720937728882
    9. 'non' → logprob: -3.892720937728882
    10. 'le' → logprob: -4.017721176147461

Token 1675: ''' (ID: 6)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.334516316652298
    2. ''ont' → logprob: -1.7095162868499756
    3. 's' → logprob: -2.9595162868499756
    4. 'pas' → logprob: -3.8345162868499756
    5. 'a' → logprob: -4.459516525268555
    6. 'on' → logprob: -5.334516525268555
    7. 'é' → logprob: -5.959516525268555
    8. '#' → logprob: -6.084516525268555
    9. ''a' → logprob: -6.209516525268555
    10. ''est' → logprob: -6.959516525268555

Token 1676: 'ayant' (ID: 130896)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8462271690368652
    2. 'pas' → logprob: -1.0962271690368652
    3. 'ont' → logprob: -1.9712271690368652
    4. ''a' → logprob: -3.5962271690368652
    5. '#' → logprob: -3.9712271690368652
    6. 'avait' → logprob: -4.346227169036865
    7. ''ont' → logprob: -4.971227169036865
    8. 'est' → logprob: -5.096227169036865
    9. 'éta' → logprob: -6.346227169036865
    10. ''' → logprob: -6.346227169036865

Token 1677: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0032793101854622364
    2. 'été' → logprob: -6.128279209136963
    3. 'plus' → logprob: -7.128279209136963
    4. ' pas' → logprob: -9.628279685974121
    5. 'jam' → logprob: -9.878279685974121
    6. '#' → logprob: -10.128279685974121
    7. '
' → logprob: -10.378279685974121
    8. '```' → logprob: -10.503279685974121
    9. 'pu' → logprob: -11.378279685974121
    10. 'dé' → logprob: -11.878279685974121

Token 1678: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.025463560596108437
    2. 'pas' → logprob: -4.275463581085205
    3. 'dé' → logprob: -5.150463581085205
    4. '#' → logprob: -6.650463581085205
    5. 'ét' → logprob: -6.650463581085205
    6. '```' → logprob: -6.900463581085205
    7. 'fait' → logprob: -7.525463581085205
    8. ' été' → logprob: -8.150463104248047
    9. 'éta' → logprob: -8.900463104248047
    10. '
' → logprob: -8.900463104248047

Token 1679: ' déplac' (ID: 195321)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.22828254103660583
    2. 'util' → logprob: -2.3532824516296387
    3. 'cho' → logprob: -2.8532824516296387
    4. 'éch' → logprob: -3.9782824516296387
    5. 'ret' → logprob: -4.353282451629639
    6. ' déplac' → logprob: -5.728282451629639
    7. '```' → logprob: -6.103282451629639
    8. 'swap' → logprob: -6.478282451629639
    9. 'pris' → logprob: -6.603282451629639
    10. 'de' → logprob: -6.978282451629639

Token 1680: 'és' (ID: 1756)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9321871399879456
    2. ':]' → logprob: -1.9321870803833008
    3. 's' → logprob: -2.557187080383301
    4. '   ' → logprob: -2.682187080383301
    5. 'és' → logprob: -2.682187080383301
    6. ']' → logprob: -2.932187080383301
    7. ':]
' → logprob: -3.932187080383301
    8. '+' → logprob: -4.307187080383301
    9. '```' → logprob: -4.307187080383301
    10. 'pos' → logprob: -4.682187080383301

Token 1681: '.
' (ID: 558)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9543288946151733
    2. '   ' → logprob: -1.3293288946151733
    3. '+' → logprob: -2.204329013824463
    4. ' =' → logprob: -2.829329013824463
    5. ' +=' → logprob: -3.579329013824463
    6. '```' → logprob: -3.579329013824463
    7. 's' → logprob: -4.079329013824463
    8. '[' → logprob: -4.454329013824463
    9. ' s' → logprob: -4.579329013824463
    10. '=' → logprob: -4.704329013824463

Token 1682: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5763397812843323
    2. 'suffix' → logprob: -1.7013397216796875
    3. 'rest' → logprob: -2.0763397216796875
    4. 's' → logprob: -2.9513397216796875
    5. 'for' → logprob: -3.5763397216796875
    6. 'result' → logprob: -4.0763397216796875
    7. '```' → logprob: -4.9513397216796875
    8. 'res' → logprob: -5.4513397216796875
    9. '#' → logprob: -5.8263397216796875
    10. 'remaining' → logprob: -5.8263397216796875

Token 1683: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11245621740818024
    2. 'suffix' → logprob: -2.7374563217163086
    3. 'rest' → logprob: -3.8624563217163086
    4. 'for' → logprob: -4.362456321716309
    5. 's' → logprob: -5.987456321716309
    6. 'res' → logprob: -6.737456321716309
    7. 'result' → logprob: -6.987456321716309
    8. 'remaining' → logprob: -7.237456321716309
    9. '```' → logprob: -7.362456321716309
    10. '#' (adapté à ' #') → logprob: -7.862456321716309

Token 1684: ' En' (ID: 2130)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.7438724637031555
    2. 'suffix' → logprob: -1.1188724040985107
    3. '   ' → logprob: -2.4938724040985107
    4. '#' → logprob: -3.9938724040985107
    5. 's' → logprob: -3.9938724040985107
    6. 'for' → logprob: -3.9938724040985107
    7. 'remaining' → logprob: -3.9938724040985107
    8. 'result' → logprob: -4.36887264251709
    9. 'res' → logprob: -4.49387264251709
    10. ' rest' → logprob: -5.36887264251709

Token 1685: ' fait' (ID: 7473)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.14239594340324402
    2. 'faite' → logprob: -2.3923959732055664
    3. 'f' → logprob: -4.142395973205566
    4. 'faits' → logprob: -5.017395973205566
    5. '#' → logprob: -5.142395973205566
    6. 'eff' → logprob: -6.142395973205566
    7. ' fait' → logprob: -6.642395973205566
    8. 's' → logprob: -6.767395973205566
    9. 'for' → logprob: -6.767395973205566
    10. 'ré' → logprob: -6.892395973205566

Token 1686: ',' (ID: 11)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.6667654514312744
    2. ' =' → logprob: -1.7917654514312744
    3. ' s' → logprob: -2.1667654514312744
    4. ':' → logprob: -2.1667654514312744
    5. '#' → logprob: -2.5417654514312744
    6. 's' → logprob: -2.7917654514312744
    7. '   ' → logprob: -2.9167654514312744
    8. ',' → logprob: -3.0417654514312744
    9. '[' → logprob: -3.9167654514312744
    10. '```' → logprob: -4.166765213012695

Token 1687: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3262792825698853
    2. 'rest' → logprob: -2.2012791633605957
    3. ' rest' → logprob: -2.4512791633605957
    4. ' s' → logprob: -2.5762791633605957
    5. 'for' → logprob: -2.5762791633605957
    6. 's' → logprob: -2.8262791633605957
    7. 'suffix' → logprob: -2.8262791633605957
    8. ' for' → logprob: -3.0762791633605957
    9. '   ' → logprob: -3.2012791633605957
    10. ' on' → logprob: -3.4512791633605957

Token 1688: ' description' (ID: 6496)
  Prédit: 'suffix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suffix' → logprob: -1.4314796924591064
    2. 'while' → logprob: -1.9314796924591064
    3. 'rest' → logprob: -2.0564796924591064
    4. 's' → logprob: -2.1814796924591064
    5. 'for' → logprob: -2.8064796924591064
    6. '#' → logprob: -3.0564796924591064
    7. 'reste' → logprob: -3.0564796924591064
    8. 'suite' → logprob: -3.1814796924591064
    9. ' suffix' → logprob: -3.5564796924591064
    10. ' rest' → logprob: -3.9314796924591064

Token 1689: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8169340491294861
    2. '=' → logprob: -1.9419341087341309
    3. 'rest' → logprob: -2.566934108734131
    4. '#' → logprob: -2.816934108734131
    5. 's' → logprob: -3.066934108734131
    6. ' complète' → logprob: -3.191934108734131
    7. 'reste' → logprob: -3.441934108734131
    8. ' restante' → logprob: -4.066934108734131
    9. '```' → logprob: -4.066934108734131
    10. ' rest' → logprob: -4.566934108734131

Token 1690: ' l' (ID: 305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6921058297157288
    2. 'la' → logprob: -1.817105770111084
    3. '#' → logprob: -1.942105770111084
    4. 'le' → logprob: -2.442105770111084
    5. 'code' → logprob: -3.317105770111084
    6. '```' → logprob: -3.817105770111084
    7. 'l' → logprob: -5.067105770111084
    8. 'comment' → logprob: -5.192105770111084
    9. 'cours' → logprob: -6.067105770111084
    10. 'rest' → logprob: -6.067105770111084

Token 1691: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.500371515750885
    2. '#' → logprob: -1.8753714561462402
    3. 'suite' → logprob: -3.1253714561462402
    4. ' s' → logprob: -3.3753714561462402
    5. 'rest' → logprob: -4.00037145614624
    6. 'continue' → logprob: -4.00037145614624
    7. 'code' → logprob: -4.25037145614624
    8. '
' → logprob: -5.00037145614624
    9. 'chaine' → logprob: -5.12537145614624
    10. '   ' → logprob: -5.25037145614624

Token 1692: 'én' (ID: 3289)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7951062917709351
    2. '#' → logprob: -2.2951064109802246
    3. 'rest' → logprob: -2.5451064109802246
    4. ' s' → logprob: -2.7951064109802246
    5. ' rest' → logprob: -3.1701064109802246
    6. 'while' → logprob: -3.2951064109802246
    7. 'final' → logprob: -3.5451064109802246
    8. 'current' → logprob: -3.7951064109802246
    9. 'for' → logprob: -3.9201064109802246
    10. 'suffix' → logprob: -4.170106410980225

Token 1693: 'oncé' (ID: 59071)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4635568857192993
    2. 't' → logprob: -1.5885568857192993
    3. '[' → logprob: -2.8385567665100098
    4. '[:' → logprob: -2.8385567665100098
    5. '[s' → logprob: -3.3385567665100098
    6. 'code' → logprob: -3.7135567665100098
    7. 'e' → logprob: -3.7135567665100098
    8. '#' → logprob: -3.8385567665100098
    9. 'ière' → logprob: -3.8385567665100098
    10. '
' → logprob: -3.9635567665100098

Token 1694: ' implique' (ID: 168269)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.2101876139640808
    2. '+' → logprob: -3.2101876735687256
    3. ' +=' → logprob: -3.5851876735687256
    4. '=' → logprob: -3.8351876735687256
    5. '[' → logprob: -3.8351876735687256
    6. '```' → logprob: -3.9601876735687256
    7. ' =' → logprob: -4.0851874351501465
    8. '[s' → logprob: -4.5851874351501465
    9. '+=' → logprob: -5.0851874351501465
    10. ' +' → logprob: -5.3351874351501465

Token 1695: ' que' (ID: 661)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5574519634246826
    2. '[current' → logprob: -1.8074519634246826
    3. ':' → logprob: -2.1824519634246826
    4. ' s' → logprob: -2.3074519634246826
    5. ' =' → logprob: -2.5574519634246826
    6. 's' → logprob: -2.6824519634246826
    7. '   ' → logprob: -3.1824519634246826
    8. ' current' → logprob: -3.4324519634246826
    9. ' que' → logprob: -3.5574519634246826
    10. '=' → logprob: -3.8074519634246826

Token 1696: ' l' (ID: 305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6691561341285706
    2. ' s' → logprob: -0.9191561341285706
    3. 'result' → logprob: -3.294156074523926
    4. 'suffix' → logprob: -4.294156074523926
    5. ' result' → logprob: -4.794156074523926
    6. '   ' → logprob: -4.794156074523926
    7. '```' → logprob: -4.794156074523926
    8. ' suffix' → logprob: -5.544156074523926
    9. ' rest' → logprob: -6.169156074523926
    10. 'rest' → logprob: -6.419156074523926

Token 1697: ''ordre' (ID: 124753)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7681698203086853
    2. ' =' → logprob: -2.01816987991333
    3. ' rest' → logprob: -2.26816987991333
    4. 'suffix' → logprob: -2.76816987991333
    5. ' s' → logprob: -3.01816987991333
    6. ' suffix' → logprob: -3.14316987991333
    7. 'rest' → logprob: -3.51816987991333
    8. '=' → logprob: -3.64316987991333
    9. 'final' → logprob: -4.64316987991333
    10. '#' → logprob: -4.64316987991333

Token 1698: ' relatif' (ID: 154784)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.8045361042022705
    2. 'rest' → logprob: -1.3045361042022705
    3. ' =' → logprob: -2.4295361042022705
    4. ' restante' → logprob: -3.1795361042022705
    5. 's' → logprob: -3.8045361042022705
    6. 'reste' → logprob: -3.9295361042022705
    7. '=' → logprob: -4.179535865783691
    8. '_rest' → logprob: -4.304535865783691
    9. ' s' → logprob: -4.429535865783691
    10. ' restant' → logprob: -4.679535865783691

Token 1699: ' des' (ID: 731)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.003772497177124
    2. ' des' → logprob: -2.128772497177124
    3. '#' → logprob: -2.378772497177124
    4. 'des' → logprob: -2.378772497177124
    5. ' rest' → logprob: -2.628772497177124
    6. 'de' → logprob: -3.003772497177124
    7. '   ' → logprob: -3.378772497177124
    8. 'reste' → logprob: -3.503772497177124
    9. ' est' → logprob: -4.003772735595703
    10. 's' → logprob: -4.003772735595703

Token 1700: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.10908929258584976
    2. 'rest' → logprob: -2.7340893745422363
    3. 'lett' → logprob: -4.484089374542236
    4. 's' → logprob: -4.984089374542236
    5. ' caractères' → logprob: -5.109089374542236
    6. 'indices' → logprob: -5.484089374542236
    7. 'non' → logprob: -5.984089374542236
    8. ' rest' → logprob: -6.234089374542236
    9. '#' → logprob: -6.234089374542236
    10. 'characters' → logprob: -6.734089374542236

Token 1701: ' non' (ID: 2893)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.2825751304626465
    2. 'rest' → logprob: -1.7825751304626465
    3. '[current' → logprob: -3.2825751304626465
    4. '```' → logprob: -4.9075751304626465
    5. ' restant' → logprob: -5.1575751304626465
    6. '[' → logprob: -5.2825751304626465
    7. ' restante' → logprob: -5.6575751304626465
    8. '_rest' → logprob: -6.2825751304626465
    9. 'remaining' → logprob: -6.5325751304626465
    10. ' restantes' → logprob: -6.6575751304626465

Token 1702: ' déplac' (ID: 195321)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.7947207689285278
    2. 'cho' → logprob: -1.0447207689285278
    3. 'trait' → logprob: -2.2947206497192383
    4. 'util' → logprob: -3.1697206497192383
    5. 'éch' → logprob: -4.169720649719238
    6. 'sé' → logprob: -4.544720649719238
    7. '   ' → logprob: -5.044720649719238
    8. 'é' → logprob: -5.669720649719238
    9. 'tri' → logprob: -5.794720649719238
    10. 'mod' → logprob: -5.794720649719238

Token 1703: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.03307625278830528
    2. 'u' → logprob: -4.033076286315918
    3. 'isés' → logprob: -4.783076286315918
    4. '#' → logprob: -6.908076286315918
    5. 'ées' → logprob: -7.158076286315918
    6. 'érés' → logprob: -7.158076286315918
    7. 'ités' → logprob: -7.533076286315918
    8. 'ée' → logprob: -7.658076286315918
    9. 'us' → logprob: -7.783076286315918
    10. 'é' → logprob: -7.908076286315918

Token 1704: ' ne' (ID: 453)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.6902647614479065
    2. 'rest' → logprob: -0.9402647614479065
    3. '```' → logprob: -2.9402647018432617
    4. ' est' → logprob: -4.815264701843262
    5. '_rest' → logprob: -4.815264701843262
    6. 's' → logprob: -5.440264701843262
    7. 'reste' → logprob: -5.565264701843262
    8. ' n' → logprob: -5.690264701843262
    9. ' restant' → logprob: -5.690264701843262
    10. ']' → logprob: -6.065264701843262

Token 1705: ' change' (ID: 3343)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5400300025939941
    2. 'pas' → logprob: -1.6650300025939941
    3. 'est' → logprob: -2.540030002593994
    4. '#' → logprob: -2.665030002593994
    5. 'change' → logprob: -2.665030002593994
    6. 'ser' → logprob: -6.290030002593994
    7. '```' → logprob: -6.290030002593994
    8. 'respect' → logprob: -6.540030002593994
    9. 'sera' → logprob: -7.040030002593994
    10. 'do' → logprob: -7.415030002593994

Token 1706: ' pas' (ID: 2173)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4177111387252808
    2. ':' → logprob: -1.6677111387252808
    3. 's' → logprob: -1.7927111387252808
    4. ' =' → logprob: -1.9177111387252808
    5. ':
' → logprob: -3.1677112579345703
    6. '.' → logprob: -3.5427112579345703
    7. '[
' → logprob: -3.5427112579345703
    8. '[s' → logprob: -4.04271125793457
    9. '[' → logprob: -4.16771125793457
    10. '=' → logprob: -4.29271125793457

Token 1707: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8617047667503357
    2. ' +' → logprob: -0.8617047667503357
    3. '+' → logprob: -2.2367048263549805
    4. '```' → logprob: -4.3617048263549805
    5. 's' → logprob: -4.8617048263549805
    6. ' +=' → logprob: -4.9867048263549805
    7. ' =' → logprob: -5.8617048263549805
    8. '[s' → logprob: -5.9867048263549805
    9. '(s' → logprob: -6.2367048263549805
    10. '+
' → logprob: -6.3617048263549805

Token 1708: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09096431732177734
    2. 'suffix' → logprob: -3.0909643173217773
    3. 's' → logprob: -3.7159643173217773
    4. '```' → logprob: -5.090964317321777
    5. 'result' → logprob: -5.215964317321777
    6. 'rest' → logprob: -5.840964317321777
    7. 'for' → logprob: -7.465964317321777
    8. ' +' → logprob: -8.215964317321777
    9. 'remaining' → logprob: -8.215964317321777
    10. '+' → logprob: -8.465964317321777

Token 1709: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07212570309638977
    2. 'suffix' → logprob: -3.1971256732940674
    3. 's' → logprob: -3.8221256732940674
    4. 'result' → logprob: -6.3221259117126465
    5. '```' → logprob: -6.4471259117126465
    6. 'rest' → logprob: -6.6971259117126465
    7. 'for' → logprob: -7.4471259117126465
    8. ' suffix' → logprob: -7.9471259117126465
    9. ' s' → logprob: -8.447125434875488
    10. ' +' → logprob: -9.072125434875488

Token 1710: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32235389947891235
    2. 'suffix' → logprob: -1.9473538398742676
    3. 'result' → logprob: -3.1973538398742676
    4. 's' → logprob: -3.1973538398742676
    5. '```' → logprob: -4.447353839874268
    6. 'rest' → logprob: -4.822353839874268
    7. ' suffix' → logprob: -4.947353839874268
    8. ' s' → logprob: -5.447353839874268
    9. '#' → logprob: -5.447353839874268
    10. 'for' → logprob: -5.697353839874268

Token 1711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024623559787869453
    2. 'rest' → logprob: -4.649623394012451
    3. 'suffix' → logprob: -4.774623394012451
    4. 's' → logprob: -6.024623394012451
    5. 'result' → logprob: -6.899623394012451
    6. '```' → logprob: -7.524623394012451
    7. 'remaining' → logprob: -7.524623394012451
    8. ' rest' → logprob: -7.649623394012451
    9. 'for' → logprob: -8.02462387084961
    10. ' suffix' → logprob: -8.77462387084961

Token 1712: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03506084159016609
    2. 's' → logprob: -4.160060882568359
    3. 'suffix' → logprob: -4.910060882568359
    4. '```' → logprob: -5.535060882568359
    5. 'rest' → logprob: -6.160060882568359
    6. '#' (adapté à ' #') → logprob: -6.410060882568359
    7. 'result' → logprob: -6.410060882568359
    8. ' s' → logprob: -7.660060882568359
    9. 'for' → logprob: -8.28506088256836
    10. '``' → logprob: -8.53506088256836

Token 1713: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3977905809879303
    2. 's' → logprob: -1.772790551185608
    3. 'suffix' → logprob: -2.1477906703948975
    4. 'result' → logprob: -4.147790431976318
    5. 'for' → logprob: -4.897790431976318
    6. '```' → logprob: -4.897790431976318
    7. 'rest' → logprob: -6.022790431976318
    8. ' s' → logprob: -6.147790431976318
    9. '#' → logprob: -6.272790431976318
    10. ' suffix' → logprob: -6.772790431976318

Token 1714: ' va' (ID: 3423)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.extend' → logprob: -1.0021443367004395
    2. '+=' → logprob: -1.1271443367004395
    3. 'extend' → logprob: -2.1271443367004395
    4. ' +=' → logprob: -2.2521443367004395
    5. 'continue' → logprob: -3.6271443367004395
    6. '#' → logprob: -4.2521443367004395
    7. '.append' → logprob: -5.0021443367004395
    8. 'rest' → logprob: -5.1271443367004395
    9. 'extends' → logprob: -5.2521443367004395
    10. '=' → logprob: -5.2521443367004395

Token 1715: ' donc' (ID: 14206)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7808130383491516
    2. 'append' → logprob: -1.2808129787445068
    3. 'aj' → logprob: -2.155812978744507
    4. '   ' → logprob: -3.155812978744507
    5. 's' → logprob: -3.405812978744507
    6. '.append' → logprob: -4.280813217163086
    7. 'for' → logprob: -4.530813217163086
    8. '#' → logprob: -4.780813217163086
    9. 'extend' → logprob: -5.530813217163086
    10. 'suffix' → logprob: -5.530813217163086

Token 1716: ' prendre' (ID: 24257)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1683449000120163
    2. 'append' → logprob: -2.5433449745178223
    3. '   ' → logprob: -3.2933449745178223
    4. 'suffix' → logprob: -4.418344974517822
    5. 'aj' → logprob: -4.793344974517822
    6. 'for' → logprob: -4.918344974517822
    7. 'extend' → logprob: -6.543344974517822
    8. 'rés' → logprob: -6.793344974517822
    9. '#' → logprob: -6.918344974517822
    10. '.append' → logprob: -7.043344974517822

Token 1717: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007743150927126408
    2. ' s' → logprob: -5.2577433586120605
    3. '   ' → logprob: -6.7577433586120605
    4. 'le' → logprob: -7.6327433586120605
    5. 'la' → logprob: -7.6327433586120605
    6. '```' → logprob: -8.257742881774902
    7. '       ' → logprob: -10.507742881774902
    8. 'rest' → logprob: -10.757742881774902
    9. ' la' → logprob: -11.007742881774902
    10. ' le' → logprob: -11.757742881774902

Token 1718: ' reste' (ID: 26769)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.78963702917099
    2. 'suffix' → logprob: -1.4146370887756348
    3. 'rest' → logprob: -2.1646370887756348
    4. 'result' → logprob: -2.2896370887756348
    5. 'reste' → logprob: -3.1646370887756348
    6. ' s' → logprob: -4.664637088775635
    7. ' reste' → logprob: -4.914637088775635
    8. ' suffix' → logprob: -5.039637088775635
    9. ' rest' → logprob: -5.164637088775635
    10. '   ' → logprob: -5.414637088775635

Token 1719: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8041128516197205
    2. '=' → logprob: -1.3041129112243652
    3. '   ' → logprob: -2.3041129112243652
    4. 's' → logprob: -2.6791129112243652
    5. ' +=' → logprob: -3.6791129112243652
    6. '+=' → logprob: -3.8041129112243652
    7. '+' → logprob: -4.054112911224365
    8. '.extend' → logprob: -4.304112911224365
    9. ' s' → logprob: -4.429112911224365
    10. '```' → logprob: -5.054112911224365

Token 1720: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016876302659511566
    2. ' s' → logprob: -4.266876220703125
    3. 'la' → logprob: -6.891876220703125
    4. 'l' → logprob: -7.391876220703125
    5. ' la' → logprob: -7.516876220703125
    6. '   ' → logprob: -8.141876220703125
    7. '```' → logprob: -9.016876220703125
    8. '(s' → logprob: -10.141876220703125
    9. ' ' → logprob: -10.641876220703125
    10. ' l' → logprob: -11.266876220703125

Token 1721: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43833687901496887
    2. 'chaine' → logprob: -1.0633368492126465
    3. ' chaîne' → logprob: -5.3133368492126465
    4. 'cha' → logprob: -5.8133368492126465
    5. 'string' → logprob: -7.0633368492126465
    6. 'chain' → logprob: -8.438337326049805
    7. ' s' → logprob: -8.813337326049805
    8. '```' → logprob: -9.188337326049805
    9. '   ' → logprob: -9.313337326049805
    10. 'liste' → logprob: -9.438337326049805

Token 1722: ' s' (ID: 265)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.5109003186225891
    2. 'current' → logprob: -2.0109002590179443
    3. ' =' → logprob: -2.1359002590179443
    4. '=' → logprob: -2.7609002590179443
    5. '   ' → logprob: -3.5109002590179443
    6. '=current' → logprob: -4.010900497436523
    7. '```' → logprob: -4.135900497436523
    8. 's' → logprob: -5.010900497436523
    9. ' +=' → logprob: -5.510900497436523
    10. '+=' → logprob: -5.510900497436523

Token 1723: ' à' (ID: 1221)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0029611808713525534
    2. '   ' → logprob: -6.502961158752441
    3. 'current' → logprob: -7.377961158752441
    4. ' =' → logprob: -7.752961158752441
    5. '=current' → logprob: -8.252961158752441
    6. '[' → logprob: -10.502961158752441
    7. '=' → logprob: -10.627961158752441
    8. 'from' → logprob: -10.752961158752441
    9. '```' → logprob: -11.002961158752441
    10. ' +=' → logprob: -11.377961158752441

Token 1724: ' partir' (ID: 12100)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06549516320228577
    2. ' partir' → logprob: -3.565495252609253
    3. '[current' → logprob: -3.690495252609253
    4. 'part' → logprob: -4.940495014190674
    5. 'index' → logprob: -6.815495014190674
    6. 'from' → logprob: -6.940495014190674
    7. 'position' → logprob: -8.315495491027832
    8. ' current' → logprob: -8.315495491027832
    9. 'indice' → logprob: -9.315495491027832
    10. '```' → logprob: -9.940495491027832

Token 1725: ' de' (ID: 334)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.009207822382450104
    2. ' current' → logprob: -5.259207725524902
    3. '=current' → logprob: -6.259207725524902
    4. '   ' → logprob: -7.259207725524902
    5. '[current' → logprob: -7.259207725524902
    6. '=' → logprob: -8.384207725524902
    7. '(current' → logprob: -8.759207725524902
    8. 'de' → logprob: -9.134207725524902
    9. '	current' → logprob: -10.384207725524902
    10. ',current' → logprob: -10.634207725524902

Token 1726: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00018232580623589456
    2. ' current' → logprob: -8.750182151794434
    3. '```' → logprob: -11.000182151794434
    4. '
' → logprob: -12.500182151794434
    5. '`' → logprob: -14.250182151794434
    6. '(current' → logprob: -14.500182151794434
    7. '[current' → logprob: -14.750182151794434
    8. '$current' → logprob: -14.875182151794434
    9. '   ' → logprob: -15.000182151794434
    10. '	current' → logprob: -15.125182151794434

Token 1727: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -7.874882430769503e-05
    2. 'pos' → logprob: -10.125079154968262
    3. 'current' → logprob: -10.500079154968262
    4. '_current' → logprob: -11.875079154968262
    5. '   ' → logprob: -13.500079154968262
    6. '_' → logprob: -14.000079154968262
    7. ' current' → logprob: -14.625079154968262
    8. '```' → logprob: -14.750079154968262
    9. 'Pos' → logprob: -15.125079154968262
    10. '[current' → logprob: -15.375079154968262

Token 1728: ' :' (ID: 712)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1570154428482056
    2. '   ' → logprob: -1.5320154428482056
    3. '+' → logprob: -1.6570154428482056
    4. ' +=' → logprob: -2.407015323638916
    5. ' =' → logprob: -3.032015323638916
    6. '+=' → logprob: -3.407015323638916
    7. '=' → logprob: -3.532015323638916
    8. '```' → logprob: -3.782015323638916
    9. '[current' → logprob: -3.782015323638916
    10. '[' → logprob: -5.032015323638916

Token 1729: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27795183658599854
    2. '   ' → logprob: -2.277951717376709
    3. '```' → logprob: -2.277951717376709
    4. ' s' → logprob: -3.777951717376709
    5. 'current' → logprob: -4.777951717376709
    6. '``' → logprob: -5.777951717376709
    7. ' current' → logprob: -7.527951717376709
    8. '       ' → logprob: -7.902951717376709
    9. '`s' → logprob: -7.902951717376709
    10. ' =' → logprob: -7.902951717376709

Token 1730: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.000672043883241713
    2. ' =' → logprob: -8.625672340393066
    3. 'current' → logprob: -8.625672340393066
    4. '=current' → logprob: -8.750672340393066
    5. '```' → logprob: -9.500672340393066
    6. '   ' → logprob: -9.875672340393066
    7. '[' → logprob: -11.375672340393066
    8. '=' → logprob: -12.125672340393066
    9. '(current' → logprob: -13.250672340393066
    10. '
' → logprob: -13.500672340393066

Token 1731: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0016597089124843478
    2. 'current' → logprob: -6.751659870147705
    3. 'pos' → logprob: -8.376659393310547
    4. ':' → logprob: -8.876659393310547
    5. '_current' → logprob: -9.626659393310547
    6. ':]' → logprob: -10.376659393310547
    7. 'Pos' → logprob: -11.376659393310547
    8. '```' → logprob: -12.626659393310547
    9. '[current' → logprob: -13.251659393310547
    10. ' current' → logprob: -13.626659393310547

Token 1732: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.005350686144083738
    2. ':]
' → logprob: -5.630350589752197
    3. ' :]' → logprob: -7.130350589752197
    4. ':' → logprob: -7.505350589752197
    5. ':].' → logprob: -8.505351066589355
    6. ':],' → logprob: -9.130351066589355
    7. 'current' → logprob: -10.755351066589355
    8. '[current' → logprob: -11.255351066589355
    9. ':]

' → logprob: -11.505351066589355
    10. ':])
' → logprob: -11.505351066589355

Token 1733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11494497954845428
    2. ' +' → logprob: -2.9899449348449707
    3. '+' → logprob: -3.8649449348449707
    4. ' +=' → logprob: -4.614944934844971
    5. '```' → logprob: -5.239944934844971
    6. 'suffix' → logprob: -5.489944934844971
    7. 'result' → logprob: -5.614944934844971
    8. ' =' → logprob: -5.864944934844971
    9. '       ' → logprob: -5.864944934844971
    10. '
' → logprob: -5.989944934844971

Token 1734: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08027726411819458
    2. 'result' → logprob: -3.33027720451355
    3. 'suffix' → logprob: -3.83027720451355
    4. ' +' → logprob: -5.080277442932129
    5. '+' → logprob: -5.205277442932129
    6. 's' → logprob: -5.955277442932129
    7. '```' → logprob: -6.955277442932129
    8. '+=' → logprob: -7.330277442932129
    9. '+
' → logprob: -7.580277442932129
    10. ' +=' → logprob: -7.580277442932129

Token 1735: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07300285249948502
    2. 'result' → logprob: -3.948002815246582
    3. 'suffix' → logprob: -4.073002815246582
    4. '+' → logprob: -4.323002815246582
    5. ' +' → logprob: -4.573002815246582
    6. ' +=' → logprob: -5.698002815246582
    7. '+=' → logprob: -5.823002815246582
    8. '```' → logprob: -6.323002815246582
    9. 's' → logprob: -7.573002815246582
    10. '+s' → logprob: -8.448002815246582

Token 1736: ' on' (ID: 402)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.009897982701659203
    2. ' result' → logprob: -5.0098981857299805
    3. 'suffix' → logprob: -6.6348981857299805
    4. '   ' → logprob: -7.0098981857299805
    5. 'print' → logprob: -7.8848981857299805
    6. 's' → logprob: -9.38489818572998
    7. 'append' → logprob: -9.38489818572998
    8. 'for' → logprob: -9.50989818572998
    9. '       ' → logprob: -9.50989818572998
    10. '#' → logprob: -9.75989818572998

Token 1737: ' concat' (ID: 73950)
  Prédit: 'extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extend' → logprob: -0.15881066024303436
    2. '.extend' → logprob: -2.033810615539551
    3. '+=' → logprob: -4.908810615539551
    4. 'extends' → logprob: -5.658810615539551
    5. 'append' → logprob: -5.783810615539551
    6. 'continue' → logprob: -6.658810615539551
    7. ' +=' → logprob: -8.28381061553955
    8. '.append' → logprob: -8.40881061553955
    9. ' extends' → logprob: -8.78381061553955
    10. 'result' → logprob: -10.78381061553955

Token 1738: 'ène' (ID: 22902)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.427655428647995
    2. 'én' → logprob: -2.5526554584503174
    3. 'ène' → logprob: -3.3026554584503174
    4. '=s' → logprob: -3.3026554584503174
    5. 'en' → logprob: -3.4276554584503174
    6. 'é' → logprob: -3.4276554584503174
    7. ' =' → logprob: -3.8026554584503174
    8. '   ' → logprob: -4.052655220031738
    9. '=
' → logprob: -4.052655220031738
    10. 'ener' → logprob: -4.427655220031738

Token 1739: ' result' (ID: 1534)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1275562345981598
    2. '   ' → logprob: -3.002556324005127
    3. ' s' → logprob: -3.127556324005127
    4. '"' → logprob: -5.252556324005127
    5. 'result' → logprob: -5.502556324005127
    6. '''.' → logprob: -5.752556324005127
    7. '```' → logprob: -5.877556324005127
    8. '(s' → logprob: -5.877556324005127
    9. '       ' → logprob: -6.252556324005127
    10. 'suffix' → logprob: -6.502556324005127

Token 1740: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.520699679851532
    2. 'print' → logprob: -1.1456997394561768
    3. ' +' → logprob: -2.8956997394561768
    4. '+' → logprob: -4.270699501037598
    5. ' +=' → logprob: -5.395699501037598
    6. '```' → logprob: -5.645699501037598
    7. 'result' → logprob: -6.270699501037598
    8. '.append' → logprob: -6.520699501037598
    9. '.extend' → logprob: -6.520699501037598
    10. 'suffix' → logprob: -7.145699501037598

Token 1741: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.046334072947502136
    2. ' s' → logprob: -3.1713340282440186
    3. '''.' → logprob: -5.796334266662598
    4. ' ''.' → logprob: -9.046334266662598
    5. '"' → logprob: -9.546334266662598
    6. ' "".' → logprob: -10.421334266662598
    7. '```' → logprob: -11.046334266662598
    8. '   ' → logprob: -11.046334266662598
    9. ' ' → logprob: -11.796334266662598
    10. '['' → logprob: -12.296334266662598

Token 1742: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.31052127480506897
    2. ' +' → logprob: -1.9355212450027466
    3. '+' → logprob: -2.935521364212036
    4. 'current' → logprob: -3.435521364212036
    5. '   ' → logprob: -3.810521364212036
    6. '```' → logprob: -4.685521125793457
    7. '`' → logprob: -7.060521125793457
    8. '+
' → logprob: -7.310521125793457
    9. '[s' → logprob: -7.435521125793457
    10. '``' → logprob: -7.560521125793457

Token 1743: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.12894204258918762
    2. '[current' → logprob: -2.3789420127868652
    3. '_current' → logprob: -3.7539420127868652
    4. 'current' → logprob: -5.503942012786865
    5. '   ' → logprob: -7.753942012786865
    6. ' current' → logprob: -9.378942489624023
    7. 'pos' → logprob: -9.503942489624023
    8. '_[' → logprob: -9.503942489624023
    9. '(current' → logprob: -10.128942489624023
    10. '_position' → logprob: -10.753942489624023

Token 1744: ':]

' (ID: 170549)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.06146593019366264
    2. ':]' → logprob: -2.9364659786224365
    3. ']' → logprob: -5.936465740203857
    4. 'current' → logprob: -5.936465740203857
    5. '[' → logprob: -8.061466217041016
    6. '   ' → logprob: -8.186466217041016
    7. ' :]' → logprob: -8.436466217041016
    8. ':' → logprob: -9.311466217041016
    9. '[:]' → logprob: -9.811466217041016
    10. '_current' → logprob: -9.936466217041016

Token 1745: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19370657205581665
    2. '   ' → logprob: -2.068706512451172
    3. '```' → logprob: -3.193706512451172
    4. 'result' → logprob: -5.818706512451172
    5. ' print' → logprob: -6.443706512451172
    6. '
' → logprob: -6.693706512451172
    7. 'return' → logprob: -6.818706512451172
    8. '``' → logprob: -7.443706512451172
    9. '+' → logprob: -7.943706512451172
    10. ' +' → logprob: -8.193706512451172

Token 1746: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9200621247291565
    2. '   ' → logprob: -1.0450620651245117
    3. 'result' → logprob: -1.5450620651245117
    4. ' +' → logprob: -4.045062065124512
    5. '+' → logprob: -4.920062065124512
    6. 'suffix' → logprob: -5.420062065124512
    7. '```' → logprob: -6.045062065124512
    8. ' result' → logprob: -6.420062065124512
    9. ' print' → logprob: -6.545062065124512
    10. 's' → logprob: -7.295062065124512

Token 1747: ' Rem' (ID: 6890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18793991208076477
    2. 'result' → logprob: -1.9379398822784424
    3. 'print' → logprob: -3.8129398822784424
    4. '+' → logprob: -6.3129401206970215
    5. '```' → logprob: -6.9379401206970215
    6. ' +' → logprob: -7.1879401206970215
    7. ' result' → logprob: -7.5629401206970215
    8. 'suffix' → logprob: -7.6879401206970215
    9. 's' → logprob: -7.9379401206970215
    10. '       ' → logprob: -9.562939643859863

Token 1748: 'arque' (ID: 167524)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28528866171836853
    2. '   ' → logprob: -3.0352885723114014
    3. 'ante' → logprob: -3.2852885723114014
    4. 'nant' → logprob: -3.4102885723114014
    5. 'ain' → logprob: -3.5352885723114014
    6. 's' → logprob: -3.6602885723114014
    7. ' =' → logprob: -4.5352888107299805
    8. '
' → logprob: -4.6602888107299805
    9. 'st' → logprob: -4.9102888107299805
    10. 'pl' → logprob: -5.4102888107299805

Token 1749: ' :' (ID: 712)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.0728360414505005
    2. '+=' → logprob: -1.1978360414505005
    3. '=' → logprob: -1.9478360414505005
    4. ' =' → logprob: -1.9478360414505005
    5. '+' → logprob: -3.822835922241211
    6. 'result' → logprob: -3.947835922241211
    7. 's' → logprob: -4.322835922241211
    8. '   ' → logprob: -5.072835922241211
    9. ' +' → logprob: -5.447835922241211
    10. '```' → logprob: -6.822835922241211

Token 1750: ' dans' (ID: 2671)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5868644714355469
    2. 'print' → logprob: -0.9618644714355469
    3. ' result' → logprob: -3.461864471435547
    4. ' print' → logprob: -3.836864471435547
    5. 'final' → logprob: -5.336864471435547
    6. '   ' → logprob: -6.961864471435547
    7. 's' → logprob: -7.586864471435547
    8. ' final' → logprob: -7.836864471435547
    9. ' s' → logprob: -7.961864471435547
    10. 'for' → logprob: -8.211864471435547

Token 1751: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9388701915740967
    2. ' s' → logprob: -1.0638701915740967
    3. 'result' → logprob: -1.5638701915740967
    4. ' result' → logprob: -3.4388701915740967
    5. '"' → logprob: -5.438870429992676
    6. '#' → logprob: -5.813870429992676
    7. ' la' → logprob: -5.938870429992676
    8. ' =' → logprob: -6.188870429992676
    9. 'final' → logprob: -6.438870429992676
    10. '   ' → logprob: -6.938870429992676

Token 1752: ' swaps' (ID: 150699)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2721291780471802
    2. ' s' → logprob: -1.6471291780471802
    3. '#' → logprob: -1.7721291780471802
    4. 'comment' → logprob: -2.1471290588378906
    5. ' commentaires' → logprob: -3.0221290588378906
    6. 'range' → logprob: -3.5221290588378906
    7. 'result' → logprob: -3.6471290588378906
    8. 'code' → logprob: -4.272129058837891
    9. 'comments' → logprob: -4.272129058837891
    10. ' rest' → logprob: -4.647129058837891

Token 1753: ' le' (ID: 505)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.043487805873155594
    2. ' +' → logprob: -3.543487787246704
    3. '+' → logprob: -4.918488025665283
    4. '[' → logprob: -6.168488025665283
    5. 'current' → logprob: -6.918488025665283
    6. ' =' → logprob: -7.293488025665283
    7. '[result' → logprob: -8.043487548828125
    8. '```' → logprob: -8.418487548828125
    9. 's' → logprob: -8.543487548828125
    10. '(current' → logprob: -8.543487548828125

Token 1754: ' morceau' (ID: 160026)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.87080317735672
    2. ' =' → logprob: -1.8708031177520752
    3. ' remaining' → logprob: -2.495803117752075
    4. ' s' → logprob: -2.745803117752075
    5. 's' → logprob: -2.870803117752075
    6. ' remainder' → logprob: -3.370803117752075
    7. 'remaining' → logprob: -3.620803117752075
    8. '=' → logprob: -3.745803117752075
    9. '[current' → logprob: -3.995803117752075
    10. 'result' → logprob: -4.245803356170654

Token 1755: ' restant' (ID: 172358)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.27880701422691345
    2. 'rest' → logprob: -2.9038069248199463
    3. ' rest' → logprob: -3.2788069248199463
    4. ' restant' → logprob: -3.4038069248199463
    5. '_rest' → logprob: -4.028807163238525
    6. ' restante' → logprob: -4.153807163238525
    7. 's' → logprob: -4.278807163238525
    8. ' =' → logprob: -4.278807163238525
    9. 'remaining' → logprob: -5.028807163238525
    10. '[' → logprob: -5.153807163238525

Token 1756: ' est' (ID: 893)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.5350476503372192
    2. 's' → logprob: -2.2850475311279297
    3. '+' → logprob: -2.5350475311279297
    4. ' =' → logprob: -2.7850475311279297
    5. ' s' → logprob: -3.1600475311279297
    6. ' +' → logprob: -3.2850475311279297
    7. ' rest' → logprob: -4.16004753112793
    8. 'rest' → logprob: -4.66004753112793
    9. '   ' → logprob: -4.66004753112793
    10. 'current' → logprob: -4.78504753112793

Token 1757: ' celui' (ID: 27857)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10799702256917953
    2. ' s' → logprob: -3.607996940612793
    3. 'bien' → logprob: -4.482996940612793
    4. '   ' → logprob: -5.107996940612793
    5. 'tou' → logprob: -5.357996940612793
    6. 'simple' → logprob: -5.482996940612793
    7. 'result' → logprob: -5.482996940612793
    8. 'just' → logprob: -5.857996940612793
    9. 'non' → logprob: -5.982996940612793
    10. 'final' → logprob: -5.982996940612793

Token 1758: ' après' (ID: 16460)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.1216769218444824
    2. '+' → logprob: -1.9966769218444824
    3. '=' → logprob: -2.3716769218444824
    4. ' =' → logprob: -2.6216769218444824
    5. ' rest' → logprob: -2.7466769218444824
    6. ' restant' → logprob: -2.7466769218444824
    7. '   ' → logprob: -3.2466769218444824
    8. 's' → logprob: -3.4966769218444824
    9. ' s' → logprob: -3.8716769218444824
    10. 'rest' → logprob: -3.9966769218444824

Token 1759: ' la' (ID: 557)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.02092406339943409
    2. ' current' → logprob: -3.8959240913391113
    3. '=current' → logprob: -9.520923614501953
    4. '```' → logprob: -9.520923614501953
    5. '`' → logprob: -9.895923614501953
    6. '[current' → logprob: -10.145923614501953
    7. ' =' → logprob: -10.520923614501953
    8. '_current' → logprob: -10.520923614501953
    9. 's' → logprob: -11.145923614501953
    10. '   ' → logprob: -11.270923614501953

Token 1760: ' position' (ID: 4010)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.11450547724962234
    2. 'position' → logprob: -2.8645055294036865
    3. 'der' → logprob: -3.9895055294036865
    4. 'dern' → logprob: -4.489505290985107
    5. 'last' → logprob: -4.489505290985107
    6. ' current' → logprob: -5.114505290985107
    7. ' dernière' → logprob: -7.114505290985107
    8. 'result' → logprob: -7.489505290985107
    9. 'pos' → logprob: -7.989505290985107
    10. 'plus' → logprob: -8.364505767822266

Token 1761: ' où' (ID: 15113)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.2541494369506836
    2. ' =' → logprob: -1.5041494369506836
    3. ' +' → logprob: -2.3791494369506836
    4. ' +=' → logprob: -2.6291494369506836
    5. '   ' → logprob: -2.6291494369506836
    6. 'current' → logprob: -2.6291494369506836
    7. '+' → logprob: -3.0041494369506836
    8. ']' → logprob: -3.3791494369506836
    9. '=' → logprob: -3.5041494369506836
    10. '+=' → logprob: -4.254149436950684

Token 1762: ' l' (ID: 305)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5570960640907288
    2. ' current' → logprob: -0.9320960640907288
    3. 'on' → logprob: -4.557096004486084
    4. ' on' → logprob: -4.557096004486084
    5. 's' → logprob: -6.557096004486084
    6. 'l' → logprob: -6.682096004486084
    7. 'result' → logprob: -7.182096004486084
    8. ' s' → logprob: -7.182096004486084
    9. 'le' → logprob: -7.307096004486084
    10. '`' → logprob: -7.432096004486084

Token 1763: ''on' (ID: 25812)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.25430193543434143
    2. ' current' → logprob: -1.754301905632019
    3. 'result' → logprob: -3.6293020248413086
    4. '#' → logprob: -5.754302024841309
    5. 'e' → logprob: -5.879302024841309
    6. '   ' → logprob: -5.879302024841309
    7. ' result' → logprob: -6.004302024841309
    8. '_current' → logprob: -6.379302024841309
    9. 's' → logprob: -6.504302024841309
    10. '`' → logprob: -6.629302024841309

Token 1764: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3825349509716034
    2. 'arr' → logprob: -1.7575349807739258
    3. ' s' → logprob: -3.007534980773926
    4. 'current' → logprob: -3.382534980773926
    5. 'left' → logprob: -4.007534980773926
    6. 'est' → logprob: -4.132534980773926
    7. 'a' → logprob: -4.257534980773926
    8. 'reste' → logprob: -6.007534980773926
    9. '#' → logprob: -6.632534980773926
    10. 'avait' → logprob: -6.757534980773926

Token 1765: ' ins' (ID: 2215)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.9984666109085083
    2. '#' → logprob: -1.9984666109085083
    3. 'cho' → logprob: -2.3734664916992188
    4. 'plac' → logprob: -2.9984664916992188
    5. 'dé' → logprob: -2.9984664916992188
    6. 'arr' → logprob: -3.4984664916992188
    7. 'posé' → logprob: -3.4984664916992188
    8. 'comm' → logprob: -3.9984664916992188
    9. 'continu' → logprob: -3.9984664916992188
    10. 's' → logprob: -3.9984664916992188

Token 1766: 'éré' (ID: 33338)
  Prédit: 'éré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.39286738634109497
    2. 'ert' → logprob: -1.5178673267364502
    3. 'érés' → logprob: -3.01786732673645
    4. 'érée' → logprob: -4.392867565155029
    5. '   ' → logprob: -4.767867565155029
    6. 'érées' → logprob: -5.142867565155029
    7. 'érer' → logprob: -5.517867565155029
    8. '
' → logprob: -5.892867565155029
    9. '```' → logprob: -6.017867565155029
    10. 's' → logprob: -6.017867565155029

Token 1767: ' le' (ID: 505)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3895028829574585
    2. '+' → logprob: -1.2645028829574585
    3. '   ' → logprob: -4.514503002166748
    4. 's' → logprob: -4.639503002166748
    5. ' +=' → logprob: -5.264503002166748
    6. '+s' → logprob: -5.389503002166748
    7. '```' → logprob: -5.639503002166748
    8. '.extend' → logprob: -6.514503002166748
    9. '+=' → logprob: -6.764503002166748
    10. '[s' → logprob: -7.264503002166748

Token 1768: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.47844958305358887
    2. 'curse' → logprob: -1.9784495830535889
    3. 'current' → logprob: -2.353449583053589
    4. 'cursor' → logprob: -3.353449583053589
    5. 'dern' → logprob: -4.103449821472168
    6. 'token' → logprob: -4.603449821472168
    7. '```' → logprob: -4.728449821472168
    8. ' current' → logprob: -4.978449821472168
    9. 'pivot' → logprob: -5.103449821472168
    10. ' caractère' → logprob: -5.228449821472168

Token 1769: ' sélection' (ID: 43472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17484985291957855
    2. 'print' → logprob: -2.17484974861145
    3. 'result' → logprob: -3.79984974861145
    4. ' +' → logprob: -4.299849987030029
    5. '+' → logprob: -5.049849987030029
    6. 's' → logprob: -6.799849987030029
    7. '```' → logprob: -6.799849987030029
    8. ' +=' → logprob: -8.049849510192871
    9. '"' → logprob: -8.174849510192871
    10. ' print' → logprob: -8.299849510192871

Token 1770: 'né' (ID: 10149)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2986458539962769
    2. '[current' → logprob: -1.2986458539962769
    3. ':]' → logprob: -2.0486459732055664
    4. 'current' → logprob: -2.1736459732055664
    5. 's' → logprob: -3.0486459732055664
    6. ':' → logprob: -3.0486459732055664
    7. ' =' → logprob: -3.6736459732055664
    8. '+' → logprob: -4.423645973205566
    9. '(current' → logprob: -4.548645973205566
    10. ' current' → logprob: -4.673645973205566

Token 1771: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1465154886245728
    2. ' +' → logprob: -1.1465154886245728
    3. '+' → logprob: -1.5215154886245728
    4. 'result' → logprob: -2.396515369415283
    5. '```' → logprob: -4.021515369415283
    6. 's' → logprob: -4.271515369415283
    7. 'print' → logprob: -4.271515369415283
    8. ' result' → logprob: -6.271515369415283
    9. '+=' → logprob: -6.896515369415283
    10. ' +=' → logprob: -6.896515369415283

Token 1772: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.7604930400848389
    2. 'current' → logprob: -1.8854930400848389
    3. 'les' → logprob: -2.010493040084839
    4. 'une' → logprob: -2.385493040084839
    5. '```' → logprob: -2.510493040084839
    6. 'k' → logprob: -2.510493040084839
    7. 'l' → logprob: -2.885493040084839
    8. 's' → logprob: -3.010493040084839
    9. 'len' → logprob: -3.135493040084839
    10. 'le' → logprob: -3.635493040084839

Token 1773: ' réduction' (ID: 89072)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.7212726473808289
    2. 'current' → logprob: -2.5962727069854736
    3. '#' → logprob: -2.8462727069854736
    4. 's' → logprob: -2.9712727069854736
    5. '```' → logprob: -2.9712727069854736
    6. 'plus' → logprob: -3.3462727069854736
    7. 'rest' → logprob: -3.3462727069854736
    8. 'm' → logprob: -3.4712727069854736
    9. 'same' → logprob: -3.7212727069854736
    10. 'pos' → logprob: -4.0962724685668945

Token 1774: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7737544178962708
    2. ' +' → logprob: -1.023754358291626
    3. '+' → logprob: -2.398754358291626
    4. ' +=' → logprob: -3.148754358291626
    5. '=' → logprob: -4.148754596710205
    6. '   ' → logprob: -5.023754596710205
    7. '```' → logprob: -5.398754596710205
    8. '+=' → logprob: -5.648754596710205
    9. 's' → logprob: -5.773754596710205
    10. ']' → logprob: -6.023754596710205

Token 1775: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012774971313774586
    2. 'l' → logprob: -5.76277494430542
    3. 'len' → logprob: -5.88777494430542
    4. 'la' → logprob: -6.38777494430542
    5. ' k' → logprob: -6.76277494430542
    6. 's' → logprob: -6.88777494430542
    7. 'tail' → logprob: -7.01277494430542
    8. '```' → logprob: -7.63777494430542
    9. 'distance' → logprob: -8.762775421142578
    10. 'pos' → logprob: -8.887775421142578

Token 1776: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6119886040687561
    2. '   ' → logprob: -1.4869885444641113
    3. 'print' → logprob: -1.4869885444641113
    4. '+' → logprob: -6.111988544464111
    5. ' +' → logprob: -6.986988544464111
    6. ' result' → logprob: -7.361988544464111
    7. '```' → logprob: -7.736988544464111
    8. '
' → logprob: -8.48698902130127
    9. 's' → logprob: -8.86198902130127
    10. 'res' → logprob: -8.98698902130127

Token 1777: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3627350330352783
    2. '   ' → logprob: -1.8627350330352783
    3. 'result' → logprob: -1.9877350330352783
    4. '+' → logprob: -5.237734794616699
    5. ' +' → logprob: -5.612734794616699
    6. '```' → logprob: -6.112734794616699
    7. ' print' → logprob: -8.7377347946167
    8. ' result' → logprob: -8.7377347946167
    9. 'suffix' → logprob: -9.6127347946167
    10. 's' → logprob: -9.6127347946167

Token 1778: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7355588674545288
    2. '   ' → logprob: -1.2355588674545288
    3. 'print' → logprob: -2.1105589866638184
    4. ' +' → logprob: -3.3605589866638184
    5. '+' → logprob: -3.7355589866638184
    6. 's' → logprob: -3.9855589866638184
    7. ' result' → logprob: -4.860558986663818
    8. 'suffix' → logprob: -4.860558986663818
    9. '```' → logprob: -5.235558986663818
    10. 'rest' → logprob: -6.110558986663818

Token 1779: ' Comme' (ID: 53252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9433777928352356
    2. 'result' → logprob: -0.9433777928352356
    3. 'print' → logprob: -1.6933777332305908
    4. '+' → logprob: -4.31837797164917
    5. '```' → logprob: -4.44337797164917
    6. ' +' → logprob: -4.56837797164917
    7. ' result' → logprob: -7.94337797164917
    8. '       ' → logprob: -8.193377494812012
    9. 's' → logprob: -8.318377494812012
    10. '``' → logprob: -8.443377494812012

Token 1780: ' on' (ID: 402)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.563083827495575
    2. 'result' → logprob: -1.4380838871002197
    3. ' current' → logprob: -2.5630838871002197
    4. ' result' → logprob: -3.8130838871002197
    5. '"' → logprob: -3.9380838871002197
    6. 's' → logprob: -4.188083648681641
    7. 'len' → logprob: -4.563083648681641
    8. ' s' → logprob: -4.813083648681641
    9. 'not' → logprob: -4.813083648681641
    10. 'k' → logprob: -5.063083648681641

Token 1781: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9220468997955322
    2. '#' → logprob: -1.0470468997955322
    3. 'a' → logprob: -2.5470468997955322
    4. 'avait' → logprob: -3.1720468997955322
    5. ' n' → logprob: -3.4220468997955322
    6. 'continue' → logprob: -3.6720468997955322
    7. 'current' → logprob: -3.7970468997955322
    8. 's' → logprob: -4.922046661376953
    9. 'reste' → logprob: -4.922046661376953
    10. 'est' → logprob: -5.672046661376953

Token 1782: ' toujours' (ID: 16867)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4888266921043396
    2. 'pas' → logprob: -2.2388267517089844
    3. ' current' → logprob: -2.6138267517089844
    4. 's' → logprob: -3.1138267517089844
    5. '#' → logprob: -3.2388267517089844
    6. 'continu' → logprob: -3.6138267517089844
    7. 'result' → logprob: -4.363826751708984
    8. 'aj' → logprob: -4.488826751708984
    9. 'pu' → logprob: -4.738826751708984
    10. 'fait' → logprob: -5.363826751708984

Token 1783: ' avanc' (ID: 87985)
  Prédit: 'av'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'av' → logprob: -0.5503699779510498
    2. 'dé' → logprob: -2.42536997795105
    3. 'increment' → logprob: -3.05036997795105
    4. 'bou' → logprob: -3.55036997795105
    5. 'trait' → logprob: -3.55036997795105
    6. 'current' → logprob: -3.55036997795105
    7. 'augment' → logprob: -3.80036997795105
    8. 'pas' → logprob: -3.92536997795105
    9. 'fait' → logprob: -4.550370216369629
    10. 's' → logprob: -4.675370216369629

Token 1784: 'é' (ID: 377)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.28750166296958923
    2. '   ' → logprob: -2.662501573562622
    3. ' current' → logprob: -2.787501573562622
    4. '=' → logprob: -3.787501573562622
    5. ')' → logprob: -4.037501811981201
    6. 'le' → logprob: -4.162501811981201
    7. '_current' → logprob: -4.287501811981201
    8. 'd' → logprob: -5.287501811981201
    9. ',' → logprob: -5.412501811981201
    10. 's' → logprob: -5.537501811981201

Token 1785: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5841667652130127
    2. 'current' → logprob: -0.8341667652130127
    3. '`' → logprob: -6.084166526794434
    4. ' s' → logprob: -6.209166526794434
    5. '```' → logprob: -6.584166526794434
    6. '(current' → logprob: -7.709166526794434
    7. 's' → logprob: -7.834166526794434
    8. '   ' → logprob: -8.959166526794434
    9. ' `' → logprob: -8.959166526794434
    10. ' =' → logprob: -8.959166526794434

Token 1786: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.0033853515051305e-05
    2. '_' → logprob: -10.375060081481934
    3. 'pos' → logprob: -10.500060081481934
    4. 'Pos' → logprob: -15.125060081481934
    5. ' _' → logprob: -15.375060081481934
    6. '```' → logprob: -15.625060081481934
    7. '+' → logprob: -15.875060081481934
    8. ')' → logprob: -16.500059127807617
    9. '_position' → logprob: -17.000059127807617
    10. '_)' → logprob: -17.125059127807617

Token 1787: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6618749499320984
    2. 'result' → logprob: -1.6618750095367432
    3. '+' → logprob: -2.286875009536743
    4. '+=' → logprob: -2.411875009536743
    5. ' +=' → logprob: -2.911875009536743
    6. ' +' → logprob: -3.911875009536743
    7. '.extend' → logprob: -5.036874771118164
    8. 'print' → logprob: -5.161874771118164
    9. '       ' → logprob: -5.911874771118164
    10. '.append' → logprob: -6.036874771118164

Token 1788: ''un' (ID: 9788)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03518480435013771
    2. '+' → logprob: -4.160184860229492
    3. ' ' → logprob: -5.285184860229492
    4. ' =' → logprob: -5.660184860229492
    5. '=' → logprob: -5.785184860229492
    6. ' +=' → logprob: -6.285184860229492
    7. ' s' → logprob: -6.410184860229492
    8. 's' → logprob: -6.910184860229492
    9. ' +' → logprob: -7.285184860229492
    10. '+=' → logprob: -7.660184860229492

Token 1789: ' en' (ID: 469)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.236086130142212
    2. 'pas' → logprob: -1.486086130142212
    3. '```' → logprob: -1.736086130142212
    4. '
' → logprob: -2.361086130142212
    5. 'while' → logprob: -2.861086130142212
    6. '#' → logprob: -3.486086130142212
    7. 'token' → logprob: -3.736086130142212
    8. 'se' → logprob: -4.236085891723633
    9. ' caractère' → logprob: -4.361085891723633
    10. 'indice' → logprob: -4.861085891723633

Token 1790: ' pla' (ID: 27140)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3987809121608734
    2. 'plus' → logprob: -3.1487808227539062
    3. ' plus' → logprob: -3.1487808227539062
    4. '++' → logprob: -3.2737808227539062
    5. '1' → logprob: -3.5237808227539062
    6. 'result' → logprob: -3.7737808227539062
    7. ' ' → logprob: -3.7737808227539062
    8. ' +' → logprob: -3.7737808227539062
    9. '```' → logprob: -4.398780822753906
    10. 's' → logprob: -4.773780822753906

Token 1791: 'çant' (ID: 78714)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.4548828899860382
    2. 'cement' → logprob: -1.3298828601837158
    3. 'c' → logprob: -3.454882860183716
    4. 's' → logprob: -3.579882860183716
    5. 'ces' → logprob: -4.329883098602295
    6. 'çant' → logprob: -4.704883098602295
    7. 'us' → logprob: -5.329883098602295
    8. 'ced' → logprob: -5.454883098602295
    9. 'cée' → logprob: -6.704883098602295
    10. 'y' → logprob: -6.829883098602295

Token 1792: ' un' (ID: 537)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.5637953281402588
    2. ' s' → logprob: -1.6887953281402588
    3. 'current' → logprob: -1.8137953281402588
    4. 'result' → logprob: -2.813795328140259
    5. ' result' → logprob: -2.938795328140259
    6. ' un' → logprob: -3.063795328140259
    7. 's' → logprob: -3.188795328140259
    8. ' =' → logprob: -3.313795328140259
    9. '```' → logprob: -3.438795328140259
    10. '1' → logprob: -3.688795328140259

Token 1793: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.23770849406719208
    2. ' caractère' → logprob: -2.112708568572998
    3. ' caract' → logprob: -4.112708568572998
    4. '_' → logprob: -4.862708568572998
    5. 'token' → logprob: -4.862708568572998
    6. 'es' → logprob: -4.987708568572998
    7. ' ' → logprob: -5.112708568572998
    8. '=' → logprob: -5.487708568572998
    9. ' =' → logprob: -5.487708568572998
    10. ' ' → logprob: -5.487708568572998

Token 1794: ',' (ID: 11)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9032948017120361
    2. '   ' → logprob: -1.0282948017120361
    3. ' +=' → logprob: -2.278294801712036
    4. '+' → logprob: -3.153294801712036
    5. 'result' → logprob: -3.403294801712036
    6. 'print' → logprob: -3.653294801712036
    7. '.extend' → logprob: -4.278294563293457
    8. ' +' → logprob: -4.903294563293457
    9. '.append' → logprob: -5.028294563293457
    10. '```' → logprob: -6.528294563293457

Token 1795: ' cela' (ID: 17542)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2773231267929077
    2. ' result' → logprob: -2.6523232460021973
    3. '   ' → logprob: -2.7773232460021973
    4. 's' → logprob: -3.2773232460021973
    5. ' s' → logprob: -3.2773232460021973
    6. 'suffix' → logprob: -3.7773232460021973
    7. 'print' → logprob: -5.152323246002197
    8. ' suffix' → logprob: -6.277323246002197
    9. 'rest' → logprob: -7.277323246002197
    10. '       ' → logprob: -7.902323246002197

Token 1796: ' correspond' (ID: 11095)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6471166610717773
    2. ' +=' → logprob: -0.7721166610717773
    3. '+' → logprob: -5.022116661071777
    4. ' continue' → logprob: -6.397116661071777
    5. ' +' → logprob: -6.522116661071777
    6. 'continue' → logprob: -6.522116661071777
    7. '=' → logprob: -7.022116661071777
    8. ' continues' → logprob: -7.772116661071777
    9. '```' → logprob: -8.147116661071777
    10. ' =' → logprob: -8.772116661071777

Token 1797: ' bien' (ID: 5340)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1012111902236938
    2. ' +' → logprob: -1.2262111902236938
    3. '   ' → logprob: -1.4762111902236938
    4. 's' → logprob: -3.3512110710144043
    5. ' +=' → logprob: -3.3512110710144043
    6. 'result' → logprob: -3.6012110710144043
    7. '+=' → logprob: -4.226211071014404
    8. ' s' → logprob: -5.101211071014404
    9. '```' → logprob: -5.226211071014404
    10. '.append' → logprob: -5.476211071014404

Token 1798: ' au' (ID: 2791)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.34831687808036804
    2. ' +' → logprob: -1.9733169078826904
    3. '+' → logprob: -2.0983169078826904
    4. '   ' → logprob: -4.098316669464111
    5. '```' → logprob: -4.973316669464111
    6. ' result' → logprob: -5.723316669464111
    7. 's' → logprob: -5.973316669464111
    8. ' +=' → logprob: -6.848316669464111
    9. '+=' → logprob: -7.723316669464111
    10. '(result' → logprob: -8.09831714630127

Token 1799: ' suffix' (ID: 43412)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.061585646122694016
    2. ' s' → logprob: -3.1865856647491455
    3. '```' → logprob: -5.186585426330566
    4. 'current' → logprob: -5.811585426330566
    5. '''.' → logprob: -6.311585426330566
    6. 'rest' → logprob: -6.311585426330566
    7. '"' → logprob: -6.436585426330566
    8. ' rest' → logprob: -6.811585426330566
    9. ' current' → logprob: -7.311585426330566
    10. 'suffix' → logprob: -8.061585426330566

Token 1800: 'e' (ID: 68)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8702098727226257
    2. ' +' → logprob: -1.3702099323272705
    3. '+' → logprob: -1.8702099323272705
    4. '   ' → logprob: -1.9952099323272705
    5. 'print' → logprob: -3.8702099323272705
    6. '```' → logprob: -4.995209693908691
    7. ' result' → logprob: -5.495209693908691
    8. ' +=' → logprob: -7.370209693908691
    9. '+=' → logprob: -7.495209693908691
    10. 's' → logprob: -7.495209693908691

Token 1801: '.

' (ID: 364)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9254287481307983
    2. '   ' → logprob: -1.3004287481307983
    3. '+' → logprob: -1.8004287481307983
    4. ' +' → logprob: -2.050428867340088
    5. '```' → logprob: -3.800428867340088
    6. 'print' → logprob: -4.925428867340088
    7. ' result' → logprob: -6.300428867340088
    8. '+=' → logprob: -6.800428867340088
    9. ' +=' → logprob: -6.800428867340088
    10. '``' → logprob: -7.425428867340088

Token 1802: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8079208135604858
    2. 'print' → logprob: -0.8079208135604858
    3. 'result' → logprob: -2.3079209327697754
    4. '```' → logprob: -4.807920932769775
    5. '+' → logprob: -7.932920932769775
    6. ' print' → logprob: -9.432920455932617
    7. '``' → logprob: -9.807920455932617
    8. ' +' → logprob: -9.932920455932617
    9. ' result' → logprob: -10.182920455932617
    10. 'answer' → logprob: -10.432920455932617

Token 1803: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.4419097900390625
    2. '   ' → logprob: -1.8169097900390625
    3. 'print' → logprob: -1.8169097900390625
    4. ' +' → logprob: -4.6919097900390625
    5. '+' → logprob: -4.8169097900390625
    6. '```' → logprob: -4.9419097900390625
    7. ' result' → logprob: -5.1919097900390625
    8. 's' → logprob: -7.0669097900390625
    9. ' print' → logprob: -7.6919097900390625
    10. 'suffix' → logprob: -9.191909790039062

Token 1804: '.extend' (ID: 34151)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2054358422756195
    2. ' +' → logprob: -2.3304357528686523
    3. '.extend' → logprob: -3.3304357528686523
    4. ' +=' → logprob: -3.5804357528686523
    5. '+=' → logprob: -3.7054357528686523
    6. '.append' → logprob: -9.330435752868652
    7. '```' → logprob: -9.830435752868652
    8. '=' → logprob: -10.330435752868652
    9. '+='' → logprob: -11.580435752868652
    10. '[:]' → logprob: -12.080435752868652

Token 1805: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.318681188422488e-05
    2. 's' → logprob: -11.25001335144043
    3. '(' → logprob: -16.50001335144043
    4. '   ' → logprob: -19.25001335144043
    5. '	s' → logprob: -20.62501335144043
    6. '(
' → logprob: -21.37501335144043
    7. '(list' → logprob: -22.00001335144043
    8. ' s' → logprob: -22.37501335144043
    9. '```' → logprob: -22.37501335144043
    10. '_s' → logprob: -22.75001335144043

Token 1806: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -2.6776029699249193e-05
    2. 'current' → logprob: -10.62502670288086
    3. '   ' → logprob: -13.25002670288086
    4. ' [' → logprob: -15.37502670288086
    5. '[cur' → logprob: -15.50002670288086
    6. ' current' → logprob: -16.50002670288086
    7. ',current' → logprob: -16.50002670288086
    8. '(current' → logprob: -16.87502670288086
    9. '[' → logprob: -17.87502670288086
    10. '[curr' → logprob: -18.00002670288086

Token 1807: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0013244071742519736
    2. 'current' → logprob: -7.37632417678833
    3. '[current' → logprob: -7.62632417678833
    4. '_current' → logprob: -9.126324653625488
    5. 'pos' → logprob: -9.251324653625488
    6. 'Pos' → logprob: -13.376324653625488
    7. ' current' → logprob: -13.626324653625488
    8. '[pos' → logprob: -14.251324653625488
    9. '[' → logprob: -14.626324653625488
    10. '(current' → logprob: -14.876324653625488

Token 1808: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007306627230718732
    2. ':])
' → logprob: -7.250730514526367
    3. '])' → logprob: -10.875730514526367
    4. ':]' → logprob: -14.375730514526367
    5. ':)' → logprob: -15.125730514526367
    6. '::' → logprob: -15.125730514526367
    7. '...' → logprob: -15.375730514526367
    8. ' :' → logprob: -16.375730514526367
    9. '[' → logprob: -16.750730514526367
    10. ''])' → logprob: -16.875730514526367

Token 1809: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0035307020880281925
    2. '   ' → logprob: -6.128530502319336
    3. '```' → logprob: -6.878530502319336
    4. ' print' → logprob: -8.378530502319336
    5. '
' → logprob: -9.753530502319336
    6. 'return' → logprob: -11.628530502319336
    7. '``' → logprob: -11.878530502319336
    8. '	print' → logprob: -12.128530502319336
    9. '    
' → logprob: -13.503530502319336
    10. '#print' → logprob: -13.753530502319336

Token 1810: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001885326812043786
    2. '   ' → logprob: -6.626885414123535
    3. '```' → logprob: -8.251885414123535
    4. ' print' → logprob: -8.626885414123535
    5. '
' → logprob: -9.751885414123535
    6. 'return' → logprob: -9.876885414123535
    7. '``' → logprob: -12.126885414123535
    8. '#' → logprob: -13.626885414123535
    9. '`' → logprob: -14.251885414123535
    10. '#print' → logprob: -14.376885414123535

Token 1811: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.4740957021713257
    2. '('' → logprob: -0.9740957021713257
    3. '(' → logprob: -11.724095344543457
    4. '"' → logprob: -12.474095344543457
    5. '(""' → logprob: -12.724095344543457
    6. ' ("' → logprob: -13.724095344543457
    7. '''.' → logprob: -13.849095344543457
    8. '```' → logprob: -14.724095344543457
    9. '("")' → logprob: -15.099095344543457
    10. '("").' → logprob: -15.224095344543457

Token 1812: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09366054832935333
    2. '''.' → logprob: -2.468660593032837
    3. '""' → logprob: -6.468660354614258
    4. '("' → logprob: -6.718660354614258
    5. '".' → logprob: -7.093660354614258
    6. '('' → logprob: -8.468660354614258
    7. ' "".' → logprob: -8.468660354614258
    8. '").' → logprob: -8.718660354614258
    9. '```' → logprob: -8.718660354614258
    10. '")' → logprob: -8.968660354614258

Token 1813: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.2664456789934775e-06
    2. ' join' → logprob: -14.500000953674316
    3. 'result' → logprob: -15.625000953674316
    4. 'print' → logprob: -16.250001907348633
    5. '''.' → logprob: -16.375001907348633
    6. 'jo' → logprob: -16.500001907348633
    7. 'j' → logprob: -16.750001907348633
    8. '.join' → logprob: -17.125001907348633
    9. '".' → logprob: -17.250001907348633
    10. '```' → logprob: -17.375001907348633

Token 1814: '(result' (ID: 8111)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2519298195838928
    2. '(result' → logprob: -1.501929759979248
    3. '[result' → logprob: -15.001930236816406
    4. ' result' → logprob: -15.376930236816406
    5. '	result' → logprob: -16.501930236816406
    6. ')' → logprob: -16.501930236816406
    7. '=result' → logprob: -17.126930236816406
    8. ',result' → logprob: -18.001930236816406
    9. '$result' → logprob: -18.876930236816406
    10. '```' → logprob: -19.626930236816406

Token 1815: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4740811586380005
    2. '))' → logprob: -0.9740811586380005
    3. ')))' → logprob: -13.474081039428711
    4. '())' → logprob: -14.224081039428711
    5. ')")' → logprob: -14.724081039428711
    6. '])' → logprob: -14.849081039428711
    7. '   ' → logprob: -15.099081039428711
    8. '))
' → logprob: -15.099081039428711
    9. '()))' → logprob: -15.474081039428711
    10. ')
' → logprob: -15.849081039428711

Token 1816: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1817: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10021249949932098
    2. '__' → logprob: -2.350212574005127
    3. '```' → logprob: -12.600212097167969
    4. '_name' → logprob: -14.225212097167969
    5. 'name' → logprob: -14.225212097167969
    6. 'True' → logprob: -15.350212097167969
    7. 'Name' → logprob: -15.600212097167969
    8. '(__' → logprob: -15.725212097167969
    9. '___' → logprob: -15.725212097167969
    10. ' name' → logprob: -16.47521209716797

Token 1818: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009971867315471172
    2. 'name' → logprob: -5.509972095489502
    3. '==' → logprob: -6.759972095489502
    4. '_name' → logprob: -7.009972095489502
    5. ' ==' → logprob: -7.384972095489502
    6. ' __' → logprob: -7.384972095489502
    7. '__":
' → logprob: -7.384972095489502
    8. '_NAME' → logprob: -7.759972095489502
    9. '```' → logprob: -8.134971618652344
    10. 'Name' → logprob: -8.384971618652344

Token 1819: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002550219651311636
    2. '==' → logprob: -6.37755012512207
    3. '=="' → logprob: -7.75255012512207
    4. '__":
' → logprob: -9.25255012512207
    5. ' ==' → logprob: -9.37755012512207
    6. '__.__' → logprob: -9.62755012512207
    7. '__("' → logprob: -9.75255012512207
    8. '("__' → logprob: -10.87755012512207
    9. '```' → logprob: -11.12755012512207
    10. '()=="' → logprob: -11.37755012512207

Token 1820: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2674601972103119
    2. '__' → logprob: -2.0174601078033447
    3. ' ==' → logprob: -2.8924601078033447
    4. '=="' → logprob: -3.2674601078033447
    5. '()==' → logprob: -5.392460346221924
    6. '()' → logprob: -6.392460346221924
    7. '=='' → logprob: -6.892460346221924
    8. '__":
' → logprob: -8.142459869384766
    9. '()=="' → logprob: -8.267459869384766
    10. '_' → logprob: -10.142459869384766

Token 1821: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02975662797689438
    2. ''' → logprob: -3.529756546020508
    3. '__' → logprob: -12.029756546020508
    4. ' "__' → logprob: -16.029756546020508
    5. '   ' → logprob: -18.029756546020508
    6. ' '__' → logprob: -18.029756546020508
    7. '"name' → logprob: -18.904756546020508
    8. ''m' → logprob: -19.029756546020508
    9. ''post' → logprob: -19.654756546020508
    10. ''name' → logprob: -19.654756546020508

Token 1822: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.4034345187828876e-05
    2. 'name' → logprob: -10.75002384185791
    3. ' main' → logprob: -14.12502384185791
    4. '"' → logprob: -14.37502384185791
    5. ''' → logprob: -14.62502384185791
    6. 'built' → logprob: -14.75002384185791
    7. '_main' → logprob: -16.250024795532227
    8. '	main' → logprob: -16.375024795532227
    9. '(main' → logprob: -16.750024795532227
    10. ''name' → logprob: -16.875024795532227

Token 1823: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.049890704452991486
    2. '__' → logprob: -3.1748907566070557
    3. '__':
' → logprob: -5.174890518188477
    4. '():
' → logprob: -7.049890518188477
    5. '__()
' → logprob: -9.299890518188477
    6. '__["' → logprob: -9.799890518188477
    7. '==' → logprob: -10.424890518188477
    8. '__("' → logprob: -10.799890518188477
    9. '("__' → logprob: -11.049890518188477
    10. '_' → logprob: -11.049890518188477

Token 1824: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.8312570318812504e-05
    2. '	main' → logprob: -11.250018119812012
    3. '   ' → logprob: -12.750018119812012
    4. ' main' → logprob: -13.500018119812012
    5. '_main' → logprob: -14.875018119812012
    6. '```' → logprob: -15.125018119812012
    7. '(main' → logprob: -15.375018119812012
    8. '__' → logprob: -17.125019073486328
    9. '.main' → logprob: -18.000019073486328
    10. '#' → logprob: -18.750019073486328

Token 1825: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.75
    3. '	main' → logprob: -21.25
    4. '   ' → logprob: -24.625
    5. '(main' → logprob: -25.625
    6. '_main' → logprob: -25.875
    7. 'Main' → logprob: -26.375
    8. '.main' → logprob: -27.5
    9. 'import' → logprob: -28.625
    10. '```' → logprob: -28.75

Token 1826: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1824
Tokens correctement prédits (1ère position, stricte): 326
Tokens correctement prédits (1ère position, avec adaptation): 348
Tokens correctement prédits (top 10): 900
Précision stricte (1ère position): 17.87%
Précision adaptée (1ère position): 19.08%
Précision (top 10): 49.34%
================================================================================
