================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def clamp(value):
    if value < 0:
        return 0
    if value > 255:
        return 255
    return value

for line in sys.stdin:
    line=line.strip()
    if line=="0 0":
        break
    if line=="":
        continue
    N,M = map(int,line.split())
    codebook = []
    for _ in range(M):
        c = int(sys.stdin.readline())
        codebook.append(c)
    x = []
    for _ in range(N):
        xi = int(sys.stdin.readline())
        x.append(xi)

    # dp[i][y] = minimal sum of squared errors up to i-th sample with output y at position i
    # since y is between 0 and 255, for each position i we store a cost array of size 256
    # we also need previous values to reconstruct, but only minimal cost is required here
    # initial condition: y0=128, no cost for i=0 because no error at i=0 in problem?
    # careful, y0 corresponds to i=0, but input x has length N samples x[0..N-1]
    # from problem: y0=128 (initial)
    # and for i from 1 to N, y_i = y_{i-1} + C[k_i]
    # So, the sequence y has length N+1: y0..yN
    # x has length N: x0..xN-1
    # We want to minimize sum over i=0 to N-1 of (x_i - y_{i+1})^2
    # So dp over i in [0..N], dp[i][y] minimal cost up to i (amount of squared errors for the first i samples)
    # and y is the value of y_i
    # At i=0, y0=128 and cost=0

    INF = 10**15
    dp_prev = [INF]*256
    dp_prev[128] = 0

    for i in range(N):
        dp_curr = [INF]*256
        xi = x[i]
        for yprev in range(256):
            prev_cost = dp_prev[yprev]
            if prev_cost == INF:
                continue
            for c in codebook:
                ycur = clamp(yprev + c)
                diff = xi - ycur
                cost = prev_cost + diff*diff
                if cost < dp_curr[ycur]:
                    dp_curr[ycur] = cost
        dp_prev = dp_curr

    print(min(dp_prev))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' clamp' (ID: 76503)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01726255752146244
    2. ' ' → logprob: -5.8922624588012695
    3. ' space' → logprob: -6.1422624588012695
    4. '<|end|>' → logprob: -6.2672624588012695
    5. ' a' → logprob: -6.8922624588012695
    6. '  ' → logprob: -7.0172624588012695
    7. '_' → logprob: -7.2672624588012695
    8. ' def' → logprob: -7.3922624588012695
    9. ' process' → logprob: -7.5172624588012695
    10. ' main' → logprob: -7.5172624588012695

Token 5: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003676917403936386
    2. '(value' → logprob: -5.753676891326904
    3. ' (' → logprob: -8.753677368164062
    4. '_' → logprob: -9.003677368164062
    5. '(x' → logprob: -9.753677368164062
    6. '```' → logprob: -10.253677368164062
    7. '(user' → logprob: -11.128677368164062
    8. '<|end|>' → logprob: -11.503677368164062
    9. '(data' → logprob: -11.878677368164062
    10. '_cl' → logprob: -12.003677368164062

Token 6: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ',value' → logprob: -12.625005722045898
    3. ' ,' → logprob: -13.125005722045898
    4. ',int' → logprob: -15.875005722045898
    5. ',float' → logprob: -16.3750057220459
    6. '<|end|>' → logprob: -16.3750057220459
    7. '‌,' → logprob: -16.6250057220459
    8. ' ' → logprob: -17.0000057220459
    9. ',uint' → logprob: -17.7500057220459
    10. ',val' → logprob: -17.7500057220459

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04356997460126877
    2. '(value' → logprob: -3.293570041656494
    3. '   ' → logprob: -6.293570041656494
    4. ':' → logprob: -6.668570041656494
    5. '(
' → logprob: -7.168570041656494
    6. '```' → logprob: -7.793570041656494
    7. ' (' → logprob: -8.043569564819336
    8. ' ' → logprob: -8.918569564819336
    9. '):' → logprob: -9.043569564819336
    10. ',' → logprob: -9.043569564819336

Token 8: ' if' (ID: 538)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.9992637038230896
    2. '(value' → logprob: -1.3742637634277344
    3. ' value' → logprob: -1.4992637634277344
    4. '   ' → logprob: -2.7492637634277344
    5. ' ' → logprob: -3.9992637634277344
    6. ' (' → logprob: -4.249263763427734
    7. ' return' → logprob: -4.624263763427734
    8. '(' → logprob: -4.874263763427734
    9. '    ' → logprob: -4.999263763427734
    10. 'return' → logprob: -5.249263763427734

Token 9: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.0028677580412477255
    2. ' ' → logprob: -6.127867698669434
    3. 'value' → logprob: -7.377867698669434
    4. ' not' → logprob: -10.127867698669434
    5. '(value' → logprob: -11.752867698669434
    6. ' ' → logprob: -12.502867698669434
    7. '  ' → logprob: -13.252867698669434
    8. '	value' → logprob: -13.252867698669434
    9. ' isinstance' → logprob: -14.002867698669434
    10. ' abs' → logprob: -14.377867698669434

Token 10: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03295087441802025
    2. ' <=' → logprob: -3.5329508781433105
    3. '<' → logprob: -6.7829508781433105
    4. ' ' → logprob: -7.0329508781433105
    5. ' >' → logprob: -7.4079508781433105
    6. '<|end|>' → logprob: -8.657950401306152
    7. '   ' → logprob: -8.907950401306152
    8. ' >=' → logprob: -8.907950401306152
    9. '  ' → logprob: -9.907950401306152
    10. '<|end|>' → logprob: -10.657950401306152

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0336470827460289
    2. '0' → logprob: -3.408647060394287
    3. '1' → logprob: -14.658647537231445
    4. '10' → logprob: -15.158647537231445
    5. '  ' → logprob: -15.783647537231445
    6. ' ' → logprob: -16.283647537231445
    7. '20' → logprob: -16.596147537231445
    8. '```' → logprob: -16.658647537231445
    9. '=' → logprob: -16.721147537231445
    10. '   ' → logprob: -17.221147537231445

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0160506758838892
    2. ' ' → logprob: -4.141050815582275
    3. '1' → logprob: -11.516050338745117
    4. '-' → logprob: -12.266050338745117
    5. '```' → logprob: -14.641050338745117
    6. '10' → logprob: -14.766050338745117
    7. ' -' → logprob: -15.141050338745117
    8. 'min' → logprob: -16.266050338745117
    9. '2' → logprob: -16.391050338745117
    10. '100' → logprob: -16.766050338745117

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024963486939668655
    2. ' :' → logprob: -6.252496242523193
    3. ':return' → logprob: -8.127496719360352
    4. ':
' → logprob: -9.002496719360352
    5. '   ' → logprob: -9.752496719360352
    6. '):' → logprob: -10.002496719360352
    7. '0' → logprob: -10.752496719360352
    8. ',' → logprob: -12.377496719360352
    9. '```' → logprob: -12.502496719360352
    10. '       ' → logprob: -12.877496719360352

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6480734944343567
    2. '0' → logprob: -1.523073434829712
    3. '    ' → logprob: -1.773073434829712
    4. ' return' → logprob: -3.523073434829712
    5. '   ' → logprob: -4.148073673248291
    6. ' :' → logprob: -4.273073673248291
    7. 'return' → logprob: -4.398073673248291
    8. ':' → logprob: -5.398073673248291
    9. ' ' → logprob: -5.398073673248291
    10. '```' → logprob: -5.648073673248291

Token 15: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1414773315191269
    2. 'return' (adapté à ' return') → logprob: -2.516477346420288
    3. ' return' → logprob: -3.516477346420288
    4. ' ' → logprob: -4.266477108001709
    5. '   ' → logprob: -5.141477108001709
    6. '       ' → logprob: -6.641477108001709
    7. '    ' → logprob: -8.766477584838867
    8. 'value' → logprob: -9.891477584838867
    9. '```' → logprob: -11.016477584838867
    10. ':return' → logprob: -11.016477584838867

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4287053644657135
    2. ' ' → logprob: -1.0537053346633911
    3. ' ' → logprob: -12.803705215454102
    4. '```' → logprob: -13.803705215454102
    5. '   ' → logprob: -14.803705215454102
    6. '`' → logprob: -15.428705215454102
    7. '  ' → logprob: -15.803705215454102
    8. '1' → logprob: -16.6787052154541
    9. '``' → logprob: -17.4287052154541
    10. '​' → logprob: -17.6787052154541

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -16.750019073486328
    4. '`' → logprob: -16.875019073486328
    5. '00' → logprob: -19.500019073486328
    6. '000' → logprob: -19.500019073486328
    7. ' ' → logprob: -19.750019073486328
    8. '   ' → logprob: -19.750019073486328
    9. '  ' → logprob: -20.062519073486328
    10. '1' → logprob: -20.375019073486328

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3220154941082001
    2. '<|end|>' → logprob: -1.4470155239105225
    3. '    
' → logprob: -4.322015285491943
    4. '```' → logprob: -4.947015285491943
    5. '
' → logprob: -5.322015285491943
    6. ')' → logprob: -5.447015285491943
    7. '\n' → logprob: -5.947015285491943
    8. '   
' → logprob: -6.572015285491943
    9. '<|end|>' → logprob: -6.697015285491943
    10. '  ' → logprob: -6.697015285491943

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026064090430736542
    2. '```' → logprob: -4.151063919067383
    3. '    
' → logprob: -5.526063919067383
    4. '
' → logprob: -5.776063919067383
    5. '\n' → logprob: -7.526063919067383
    6. '   
' → logprob: -7.651063919067383
    7. '<|end|>' → logprob: -8.026063919067383
    8. '  ' → logprob: -8.276063919067383
    9. 'elif' → logprob: -8.276063919067383
    10. ')' → logprob: -8.526063919067383

Token 20: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048982229083776474
    2. 'elif' → logprob: -3.5489821434020996
    3. '```' → logprob: -4.4239821434021
    4. '    
' → logprob: -6.0489821434021
    5. ' elif' → logprob: -6.7989821434021
    6. '
' → logprob: -7.5489821434021
    7. 'return' → logprob: -7.6739821434021
    8. ':' → logprob: -7.9239821434021
    9. '  ' → logprob: -8.173982620239258
    10. ')' → logprob: -8.423982620239258

Token 21: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.007608040235936642
    2. 'value' → logprob: -4.882607936859131
    3. ' ' → logprob: -14.382608413696289
    4. '	value' → logprob: -14.882608413696289
    5. '(value' → logprob: -14.882608413696289
    6. '"value' → logprob: -15.632608413696289
    7. ')value' → logprob: -16.13260841369629
    8. ''value' → logprob: -16.88260841369629
    9. '>' → logprob: -17.00760841369629
    10. '<|end|>' → logprob: -18.00760841369629

Token 22: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.020550761371850967
    2. '>' → logprob: -3.8955507278442383
    3. ' ' → logprob: -12.020550727844238
    4. ' >=' → logprob: -14.145550727844238
    5. '<|end|>' → logprob: -14.770550727844238
    6. ' <=' → logprob: -14.895550727844238
    7. ' ' → logprob: -14.895550727844238
    8. '   ' → logprob: -15.395550727844238
    9. '  ' → logprob: -15.770550727844238
    10. ' <' → logprob: -15.895550727844238

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13767971098423004
    2. '255' → logprob: -2.1376798152923584
    3. '100' → logprob: -5.012679576873779
    4. '1' → logprob: -5.512679576873779
    5. '   ' → logprob: -13.262680053710938
    6. '256' → logprob: -13.512680053710938
    7. '  ' → logprob: -14.137680053710938
    8. '```' → logprob: -14.137680053710938
    9. '10' → logprob: -14.512680053710938
    10. '655' → logprob: -15.387680053710938

Token 24: '255' (ID: 6143)
  Prédit: '255'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '255' → logprob: -0.07455645501613617
    2. '1' → logprob: -2.824556350708008
    3. '100' → logprob: -5.074556350708008
    4. ' ' → logprob: -5.074556350708008
    5. '10' → logprob: -13.824556350708008
    6. '   ' → logprob: -15.199556350708008
    7. '655' → logprob: -15.199556350708008
    8. '```' → logprob: -15.324556350708008
    9. '  ' → logprob: -15.699556350708008
    10. '0' → logprob: -16.074556350708008

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006604056339710951
    2. ' :' → logprob: -5.256604194641113
    3. '       ' → logprob: -7.256604194641113
    4. ':return' → logprob: -7.881604194641113
    5. '   ' → logprob: -8.756604194641113
    6. '):' → logprob: -9.756604194641113
    7. ':
' → logprob: -9.881604194641113
    8. ' :
' → logprob: -12.506604194641113
    9. '<|end|>' → logprob: -12.506604194641113
    10. '    ' → logprob: -12.631604194641113

Token 26: '       ' (ID: 309)
  Prédit: '255'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '255' → logprob: -1.2181503772735596
    2. '       ' → logprob: -1.3431503772735596
    3. ' ' → logprob: -1.5931503772735596
    4. ' return' → logprob: -2.2181503772735596
    5. '   ' → logprob: -2.4681503772735596
    6. 'return' → logprob: -3.4681503772735596
    7. '    ' → logprob: -4.4681501388549805
    8. '```' → logprob: -6.0931501388549805
    9. ':return' → logprob: -8.46815013885498
    10. '256' → logprob: -8.46815013885498

Token 27: ' return' (ID: 622)
  Prédit: '255'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '255' → logprob: -0.028137531131505966
    2. ' ' → logprob: -3.778137445449829
    3. ' return' → logprob: -6.278137683868408
    4. '       ' → logprob: -6.653137683868408
    5. '   ' → logprob: -7.153137683868408
    6. 'return' (adapté à ' return') → logprob: -7.153137683868408
    7. '256' → logprob: -9.02813720703125
    8. '    ' → logprob: -10.90313720703125
    9. '  ' → logprob: -12.65313720703125
    10. '           ' → logprob: -13.27813720703125

Token 28: ' ' (ID: 220)
  Prédit: '255'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '255' → logprob: -0.05503292381763458
    2. ' ' → logprob: -2.930032968521118
    3. '256' → logprob: -8.805032730102539
    4. '```' → logprob: -15.930032730102539
    5. '254' → logprob: -16.43003273010254
    6. ' ' → logprob: -16.43003273010254
    7. '   ' → logprob: -16.55503273010254
    8. '265' → logprob: -16.68003273010254
    9. '`' → logprob: -17.11753273010254
    10. '258' → logprob: -17.55503273010254

Token 29: '255' (ID: 6143)
  Prédit: '255'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '255' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '256' → logprob: -16.000003814697266
    4. '   ' → logprob: -19.375003814697266
    5. '2' → logprob: -19.625003814697266
    6. '25' → logprob: -19.875003814697266
    7. '265' → logprob: -20.000003814697266
    8. '225' → logprob: -20.250003814697266
    9. '235' → logprob: -20.375003814697266
    10. '254' → logprob: -20.375003814697266

Token 30: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005723405163735151
    2. '
' → logprob: -6.005723476409912
    3. ' return' → logprob: -6.880723476409912
    4. '    
' → logprob: -7.130723476409912
    5. 'return' → logprob: -7.755723476409912
    6. '```' → logprob: -8.255722999572754
    7. '<|end|>' → logprob: -8.505722999572754
    8. '	return' → logprob: -8.755722999572754
    9. '  ' → logprob: -9.255722999572754
    10. '   
' → logprob: -9.380722999572754

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032021927181631327
    2. 'return' → logprob: -7.003201961517334
    3. '```' → logprob: -7.003201961517334
    4. ' return' → logprob: -7.378201961517334
    5. '
' → logprob: -7.628201961517334
    6. '    
' → logprob: -8.878202438354492
    7. '  ' → logprob: -10.503202438354492
    8. '	return' → logprob: -10.628202438354492
    9. ' ' → logprob: -11.503202438354492
    10. '  
' → logprob: -11.628202438354492

Token 32: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6556038856506348
    2. 'return' (adapté à ' return') → logprob: -0.7806038856506348
    3. ' return' → logprob: -3.9056038856506348
    4. '    
' → logprob: -7.280603885650635
    5. ':return' → logprob: -7.905603885650635
    6. '	return' → logprob: -8.155603408813477
    7. '  ' → logprob: -8.280603408813477
    8. '
' → logprob: -8.280603408813477
    9. '```' → logprob: -8.655603408813477
    10. 'else' → logprob: -8.780603408813477

Token 33: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.20141372084617615
    2. 'value' → logprob: -1.7014137506484985
    3. ' ' → logprob: -15.826414108276367
    4. ' ' → logprob: -16.451414108276367
    5. '"value' → logprob: -16.701414108276367
    6. '(value' → logprob: -17.076414108276367
    7. '	value' → logprob: -17.201414108276367
    8. '$value' → logprob: -17.701414108276367
    9. ''value' → logprob: -17.826414108276367
    10. 'Value' → logprob: -18.076414108276367

Token 34: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: 'for' (ID: 1938)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.852681040763855
    2. ')' → logprob: -1.102681040763855
    3. '*' → logprob: -2.8526811599731445
    4. ':' → logprob: -3.1026811599731445
    5. '```' → logprob: -3.3526811599731445
    6. '<|end|>' → logprob: -3.6026811599731445
    7. '.' → logprob: -3.7276811599731445
    8. 'def' → logprob: -4.8526811599731445
    9. '\' → logprob: -4.9776811599731445
    10. ',' → logprob: -4.9776811599731445

Token 36: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0030701644718647003
    2. ' i' → logprob: -6.00307035446167
    3. ' value' → logprob: -7.87807035446167
    4. '  ' → logprob: -8.878069877624512
    5. ' space' → logprob: -10.628069877624512
    6. ' item' → logprob: -10.878069877624512
    7. ' x' → logprob: -12.128069877624512
    8. ' color' → logprob: -12.128069877624512
    9. ' var' → logprob: -12.753069877624512
    10. ' line' → logprob: -13.003069877624512

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0232679583132267
    2. 'in' → logprob: -4.27326774597168
    3. ' ' → logprob: -4.89826774597168
    4. ' =' → logprob: -7.52326774597168
    5. 's' → logprob: -8.77326774597168
    6. '<|end|>' → logprob: -8.77326774597168
    7. '(' → logprob: -9.27326774597168
    8. '  ' → logprob: -9.52326774597168
    9. ' :' → logprob: -9.64826774597168
    10. ':' → logprob: -9.64826774597168

Token 38: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12694691121578217
    2. 'sys' → logprob: -2.1269469261169434
    3. '	sys' → logprob: -11.501946449279785
    4. '=sys' → logprob: -12.126946449279785
    5. '(sys' → logprob: -13.001946449279785
    6. ' ' → logprob: -15.126946449279785
    7. ' iter' → logprob: -15.626946449279785
    8. 's' → logprob: -16.0019474029541
    9. 'stdin' → logprob: -16.0019474029541
    10. ' ' → logprob: -16.2519474029541

Token 39: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.1746731996536255
    2. '.' → logprob: -2.549673080444336
    3. ' .' → logprob: -2.549673080444336
    4. '.argv' → logprob: -5.799673080444336
    5. '.input' → logprob: -7.924673080444336
    6. '.stdout' → logprob: -8.174673080444336
    7. '.readline' → logprob: -8.174673080444336
    8. '.std' → logprob: -9.799673080444336
    9. '.stderr' → logprob: -11.924673080444336
    10. ' stdin' → logprob: -12.049673080444336

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01548014860600233
    2. '.readline' → logprob: -4.390480041503906
    3. ' :' → logprob: -6.140480041503906
    4. '.' → logprob: -8.265480041503906
    5. '.strip' → logprob: -8.765480041503906
    6. '.readlines' → logprob: -9.015480041503906
    7. ':
' → logprob: -9.390480041503906
    8. '.rstrip' → logprob: -10.390480041503906
    9. ' in' → logprob: -10.890480041503906
    10. ':**' → logprob: -11.140480041503906

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002240654779598117
    2. '    
' → logprob: -6.2522406578063965
    3. '    ' → logprob: -8.752240180969238
    4. ' ' → logprob: -10.502240180969238
    5. ' readline' → logprob: -10.752240180969238
    6. '```' → logprob: -10.877240180969238
    7. ':' → logprob: -11.502240180969238
    8. '<|end|>' → logprob: -12.002240180969238
    9. ',' → logprob: -12.127240180969238
    10. '   
' → logprob: -12.502240180969238

Token 42: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0788518190383911
    2. 'line' (adapté à ' line') → logprob: -1.5788518190383911
    3. ' line' → logprob: -2.0788516998291016
    4. ' values' → logprob: -2.4538516998291016
    5. ' parts' → logprob: -2.5788516998291016
    6. 'values' → logprob: -3.3288516998291016
    7. ' r' → logprob: -3.5788516998291016
    8. 'r' → logprob: -3.8288516998291016
    9. 'value' → logprob: -4.078851699829102
    10. ' value' → logprob: -4.453851699829102

Token 43: '=line' (ID: 192488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12891721725463867
    2. '=' → logprob: -2.1289172172546387
    3. '.strip' → logprob: -6.253917217254639
    4. '.rstrip' → logprob: -10.753917694091797
    5. '.' → logprob: -11.128917694091797
    6. '_strip' → logprob: -11.878917694091797
    7. 's' → logprob: -12.128917694091797
    8. 'strip' → logprob: -13.003917694091797
    9. '.split' → logprob: -13.253917694091797
    10. '=line' → logprob: -13.253917694091797

Token 44: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.23304951190948486
    2. '.' → logprob: -1.6080495119094849
    3. '.rstrip' → logprob: -5.108049392700195
    4. '.split' → logprob: -6.983049392700195
    5. ' .' → logprob: -8.108049392700195
    6. '.lower' → logprob: -8.358049392700195
    7. '.replace' → logprob: -9.483049392700195
    8. '.trim' → logprob: -11.733049392700195
    9. '.upper' → logprob: -12.358049392700195
    10. 'strip' → logprob: -13.483049392700195

Token 45: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009817950427532196
    2. '(' → logprob: -4.634818077087402
    3. '().' → logprob: -11.009818077087402
    4. ' ()' → logprob: -11.759818077087402
    5. '('' → logprob: -11.884818077087402
    6. '()
' → logprob: -12.134818077087402
    7. '()

' → logprob: -12.634818077087402
    8. ' parentheses' → logprob: -13.134818077087402
    9. '("("' → logprob: -13.384818077087402
    10. '()`' → logprob: -13.384818077087402

Token 46: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40958914160728455
    2. '   ' → logprob: -1.159589171409607
    3. 'if' → logprob: -4.6595892906188965
    4. '    
' → logprob: -5.5345892906188965
    5. ' =' → logprob: -5.9095892906188965
    6. ',' → logprob: -6.7845892906188965
    7. ' parts' → logprob: -6.7845892906188965
    8. 'tokens' → logprob: -7.0345892906188965
    9. '.split' → logprob: -8.034588813781738
    10. '=' → logprob: -8.159588813781738

Token 47: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12885193526744843
    2. ' if' → logprob: -2.878851890563965
    3. 'parts' → logprob: -3.378851890563965
    4. 'values' → logprob: -4.253851890563965
    5. ' parts' → logprob: -5.253851890563965
    6. 'tokens' → logprob: -5.628851890563965
    7. '   ' → logprob: -5.878851890563965
    8. 'r' → logprob: -6.503851890563965
    9. 'pixels' → logprob: -7.003851890563965
    10. ' values' → logprob: -7.003851890563965

Token 48: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11346977204084396
    2. ' line' → logprob: -2.2384698390960693
    3. 'not' → logprob: -8.363470077514648
    4. ' ' → logprob: -8.613470077514648
    5. 'line' → logprob: -8.988470077514648
    6. ' len' → logprob: -9.238470077514648
    7. ' ' → logprob: -12.863470077514648
    8. '	line' → logprob: -13.738470077514648
    9. '(line' → logprob: -14.113470077514648
    10. ' lin' → logprob: -14.238470077514648

Token 49: '=="' (ID: 24027)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.007933685556054115
    2. '==' → logprob: -5.382933616638184
    3. '.startswith' → logprob: -5.757933616638184
    4. ' ' → logprob: -9.257933616638184
    5. ' .' → logprob: -11.132933616638184
    6. '.endswith' → logprob: -11.507933616638184
    7. ' =='' → logprob: -12.132933616638184
    8. ' =="' → logprob: -12.257933616638184
    9. '.' → logprob: -12.632933616638184
    10. ' =' → logprob: -12.757933616638184

Token 50: '0' (ID: 15)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.02591041661798954
    2. '"' → logprob: -4.525910377502441
    3. '"":' → logprob: -4.900910377502441
    4. '""' → logprob: -6.150910377502441
    5. 'quit' → logprob: -6.525910377502441
    6. 'exit' → logprob: -7.025910377502441
    7. 'END' → logprob: -7.150910377502441
    8. 'end' → logprob: -7.525910377502441
    9. '```' → logprob: -7.650910377502441
    10. 'EOF' → logprob: -8.025910377502441

Token 51: ' ' (ID: 220)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.022207651287317276
    2. ' ":' → logprob: -4.522207736968994
    3. '0' → logprob: -5.772207736968994
    4. ':' → logprob: -5.772207736968994
    5. '"' → logprob: -6.147207736968994
    6. ' ' → logprob: -6.522207736968994
    7. 'x' → logprob: -8.022207260131836
    8. '"):' → logprob: -8.397207260131836
    9. ' :' → logprob: -8.772207260131836
    10. ' "' → logprob: -8.897207260131836

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014173267409205437
    2. ' ' → logprob: -4.2641730308532715
    3. '":' → logprob: -13.63917350769043
    4. '">' → logprob: -13.88917350769043
    5. '"' → logprob: -13.95167350769043
    6. '"):' → logprob: -13.95167350769043
    7. '```' → logprob: -14.20167350769043
    8. '3' → logprob: -14.51417350769043
    9. '")' → logprob: -14.70167350769043
    10. 'end' → logprob: -14.88917350769043

Token 53: '":
' (ID: 9213)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0010716310935094953
    2. '0' → logprob: -7.001071453094482
    3. '":' → logprob: -9.12607192993164
    4. '"):' → logprob: -10.87607192993164
    5. ' END' → logprob: -12.00107192993164
    6. '"' → logprob: -12.00107192993164
    7. '```' → logprob: -12.37607192993164
    8. ' "' → logprob: -13.25107192993164
    9. ' end' → logprob: -13.50107192993164
    10. ' EOF' → logprob: -13.62607192993164

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01277956087142229
    2. '   ' → logprob: -4.637779712677002
    3. ':' → logprob: -6.762779712677002
    4. '    ' → logprob: -7.137779712677002
    5. ' ' → logprob: -8.012779235839844
    6. '<|end|>' → logprob: -8.137779235839844
    7. ' break' → logprob: -9.387779235839844
    8. '  ' → logprob: -9.762779235839844
    9. '	break' → logprob: -9.887779235839844
    10. '     ' → logprob: -10.137779235839844

Token 55: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32369551062583923
    2. ' break' → logprob: -1.5736955404281616
    3. 'break' (adapté à ' break') → logprob: -2.698695421218872
    4. '	break' → logprob: -6.698695659637451
    5. '   ' → logprob: -7.323695659637451
    6. '           ' → logprob: -10.198695182800293
    7. '        
' → logprob: -11.948695182800293
    8. '```' → logprob: -12.073695182800293
    9. '_break' → logprob: -12.448695182800293
    10. '
' → logprob: -12.948695182800293

Token 56: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4797516465187073
    2. '    
' → logprob: -1.4797515869140625
    3. '<|end|>' → logprob: -3.1047515869140625
    4. ' ' → logprob: -3.6047515869140625
    5. '  
' → logprob: -3.9797515869140625
    6. '  ' → logprob: -4.2297515869140625
    7. '   
' → logprob: -4.3547515869140625
    8. ' 
' → logprob: -4.3547515869140625
    9. '
' → logprob: -4.4797515869140625
    10. '    ' → logprob: -6.3547515869140625

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10218789428472519
    2. '    
' → logprob: -2.3521878719329834
    3. '  
' → logprob: -7.9771881103515625
    4. '   
' → logprob: -8.102188110351562
    5. ' ' → logprob: -8.352188110351562
    6. '    
    
' → logprob: -8.477188110351562
    7. ' 
' → logprob: -8.727188110351562
    8. '<|end|>' → logprob: -8.727188110351562
    9. '
' → logprob: -9.227188110351562
    10. '     
' → logprob: -9.477188110351562

Token 58: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8239805698394775
    2. 'r' → logprob: -1.6989805698394775
    3. ' r' → logprob: -1.8239805698394775
    4. ' parts' → logprob: -2.5739805698394775
    5. 'width' → logprob: -2.8239805698394775
    6. ' width' → logprob: -3.5739805698394775
    7. '    
' → logprob: -4.823980331420898
    8. 'w' → logprob: -5.198980331420898
    9. 'parts' → logprob: -5.323980331420898
    10. 'a' → logprob: -5.448980331420898

Token 59: ' line' (ID: 2543)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.12778085470199585
    2. 'len' → logprob: -3.1277809143066406
    3. ' ' → logprob: -3.3777809143066406
    4. ' '' → logprob: -3.7527809143066406
    5. ' line' → logprob: -4.627780914306641
    6. ''' → logprob: -5.877780914306641
    7. ' "' → logprob: -6.377780914306641
    8. ' True' → logprob: -6.502780914306641
    9. ' not' → logprob: -6.877780914306641
    10. '"' → logprob: -7.252780914306641

Token 60: '==' (ID: 560)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.25568437576293945
    2. '.' → logprob: -1.8806843757629395
    3. ' .' → logprob: -2.7556843757629395
    4. ' ==' → logprob: -5.0056843757629395
    5. '.split' → logprob: -7.1306843757629395
    6. '==' → logprob: -7.1306843757629395
    7. '.endswith' → logprob: -7.3806843757629395
    8. ' !=' → logprob: -8.380683898925781
    9. 'startswith' → logprob: -9.130683898925781
    10. '[' → logprob: -9.255683898925781

Token 61: '""' (ID: 6371)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.56108158826828
    2. '""' → logprob: -0.93608158826828
    3. '''' → logprob: -4.061081409454346
    4. ''' → logprob: -4.561081409454346
    5. '"":' → logprob: -4.936081409454346
    6. '"#' → logprob: -7.061081409454346
    7. ' ""' → logprob: -8.436081886291504
    8. ' "' → logprob: -8.561081886291504
    9. '"\' → logprob: -9.186081886291504
    10. '"-' → logprob: -9.686081886291504

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006973002105951309
    2. ':
' → logprob: -5.256972789764404
    3. '   ' → logprob: -7.131972789764404
    4. '       ' → logprob: -7.506972789764404
    5. ' continue' → logprob: -8.506973266601562
    6. ' continues' → logprob: -9.631973266601562
    7. '	continue' → logprob: -9.756973266601562
    8. 'continue' → logprob: -10.381973266601562
    9. ':return' → logprob: -12.256973266601562
    10. ' or' → logprob: -12.381973266601562

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01842394843697548
    2. '   ' → logprob: -4.518424034118652
    3. ' continue' → logprob: -5.018424034118652
    4. 'continue' → logprob: -7.768424034118652
    5. '	continue' → logprob: -8.643424034118652
    6. '	   ' → logprob: -10.268424034118652
    7. '<|end|>' → logprob: -10.393424034118652
    8. '	' → logprob: -11.393424034118652
    9. '```' → logprob: -11.768424034118652
    10. '    
' → logprob: -11.893424034118652

Token 64: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.48301243782043457
    2. 'continue' (adapté à ' continue') → logprob: -0.9830124378204346
    3. '   ' → logprob: -4.7330121994018555
    4. '	continue' → logprob: -9.483012199401855
    5. '       ' → logprob: -11.483012199401855
    6. ' continu' → logprob: -13.108012199401855
    7. ' ' → logprob: -13.233012199401855
    8. '_continue' → logprob: -13.233012199401855
    9. '```' → logprob: -13.608012199401855
    10. 'contin' → logprob: -13.608012199401855

Token 65: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044103365391492844
    2. '    
' → logprob: -3.9191033840179443
    3. '<|end|>' → logprob: -4.044103145599365
    4. ' ' → logprob: -5.544103145599365
    5. '
' → logprob: -7.669103145599365
    6. ' 
' → logprob: -7.794103145599365
    7. '<|end|>' → logprob: -8.419103622436523
    8. '    ' → logprob: -8.419103622436523
    9. '  
' → logprob: -9.169103622436523
    10. '  ' → logprob: -9.419103622436523

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05419685319066048
    2. '    
' → logprob: -3.304196834564209
    3. '
' → logprob: -4.679196834564209
    4. '<|end|>' → logprob: -5.429196834564209
    5. ' ' → logprob: -7.304196834564209
    6. '  
' → logprob: -7.804196834564209
    7. ' 
' → logprob: -8.179197311401367
    8. '<|end|>' → logprob: -8.429197311401367
    9. '   
' → logprob: -9.179197311401367
    10. '  ' → logprob: -9.179197311401367

Token 67: ' N' (ID: 478)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9548566341400146
    2. ' parts' → logprob: -0.9548566341400146
    3. ' r' → logprob: -2.3298566341400146
    4. 'parts' → logprob: -2.7048566341400146
    5. '   ' → logprob: -3.3298566341400146
    6. 'width' → logprob: -4.829856872558594
    7. 'tokens' → logprob: -5.079856872558594
    8. 'values' → logprob: -5.704856872558594
    9. ' width' → logprob: -6.579856872558594
    10. ' values' → logprob: -6.579856872558594

Token 68: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18961550295352936
    2. ',' → logprob: -1.9396154880523682
    3. '=' → logprob: -3.689615488052368
    4. ' ,' → logprob: -5.564615726470947
    5. ' ' → logprob: -9.189615249633789
    6. ')' → logprob: -11.939615249633789
    7. '=int' → logprob: -12.064615249633789
    8. ',N' → logprob: -12.564615249633789
    9. ' =)' → logprob: -12.689615249633789
    10. ',int' → logprob: -12.939615249633789

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327947974205017
    2. ' =' → logprob: -1.3132795095443726
    3. '=line' → logprob: -11.188279151916504
    4. '=int' → logprob: -13.438279151916504
    5. ',' → logprob: -13.688279151916504
    6. '=input' → logprob: -15.438279151916504
    7. ' ' → logprob: -15.563279151916504
    8. '   ' → logprob: -16.06328010559082
    9. '=

' → logprob: -16.06328010559082
    10. ')' → logprob: -16.06328010559082

Token 70: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05229480564594269
    2. ' line' → logprob: -3.0522947311401367
    3. 'map' → logprob: -5.677294731140137
    4. 'line' → logprob: -8.302294731140137
    5. ' [' → logprob: -11.177294731140137
    6. '[line' → logprob: -11.677294731140137
    7. '[' → logprob: -12.552294731140137
    8. '	map' → logprob: -13.802294731140137
    9. '=line' → logprob: -14.427294731140137
    10. ' ' → logprob: -14.427294731140137

Token 71: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.588512659072876
    2. '(' → logprob: -0.838512659072876
    3. '(str' → logprob: -4.588512420654297
    4. '(lambda' → logprob: -6.088512420654297
    5. '(
' → logprob: -11.713512420654297
    6. '(list' → logprob: -11.838512420654297
    7. '(tuple' → logprob: -11.963512420654297
    8. '<|end|>' → logprob: -12.338512420654297
    9. '(eval' → logprob: -12.463512420654297
    10. '<int' → logprob: -12.463512420654297

Token 72: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.012197980657219887
    2. ',line' → logprob: -4.512197971343994
    3. ',' → logprob: -7.512197971343994
    4. ' line' → logprob: -8.512198448181152
    5. ')' → logprob: -8.637198448181152
    6. '(' → logprob: -9.637198448181152
    7. '#line' → logprob: -9.637198448181152
    8. '[line' → logprob: -10.012198448181152
    9. '=line' → logprob: -10.387198448181152
    10. 'line' → logprob: -11.637198448181152

Token 73: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.1218937486410141
    2. ')' → logprob: -2.4968936443328857
    3. '.' → logprob: -3.6218936443328857
    4. '.strip' → logprob: -5.246893882751465
    5. '().' → logprob: -8.496893882751465
    6. '.readline' → logprob: -8.996893882751465
    7. ' .' → logprob: -10.371893882751465
    8. '.rstrip' → logprob: -10.746893882751465
    9. 'split' → logprob: -11.871893882751465
    10. '.Split' → logprob: -11.996893882751465

Token 74: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4798535108566284
    2. '())' → logprob: -0.9798535108566284
    3. '()' → logprob: -5.354853630065918
    4. '("' → logprob: -7.229853630065918
    5. '(','' → logprob: -8.854853630065918
    6. '(' → logprob: -9.354853630065918
    7. ')' → logprob: -10.354853630065918
    8. '("("' → logprob: -10.979853630065918
    9. '()))' → logprob: -11.229853630065918
    10. '())
' → logprob: -11.729853630065918

Token 75: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' code' (ID: 3490)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5730136632919312
    2. ' data' → logprob: -2.1980137825012207
    3. 'colors' → logprob: -2.4480137825012207
    4. ' colors' → logprob: -3.4480137825012207
    5. 'r' → logprob: -3.5730137825012207
    6. 'pixels' → logprob: -3.6980137825012207
    7. ' pixels' → logprob: -3.8230137825012207
    8. 'values' → logprob: -3.8230137825012207
    9. ' 
' → logprob: -3.8230137825012207
    10. ' values' → logprob: -4.323013782501221

Token 77: 'book' (ID: 3092)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4342056214809418
    2. '=' → logprob: -1.0592056512832642
    3. '_' → logprob: -6.059205532073975
    4. 's' → logprob: -6.934205532073975
    5. '_list' → logprob: -7.934205532073975
    6. '_values' → logprob: -8.184206008911133
    7. ',' → logprob: -8.184206008911133
    8. '=[]' → logprob: -8.434206008911133
    9. ':' → logprob: -9.059206008911133
    10. '[' → logprob: -9.434206008911133

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01625160314142704
    2. '=' → logprob: -4.141251564025879
    3. ' ' → logprob: -9.766251564025879
    4. '[' → logprob: -10.016251564025879
    5. ' =[' → logprob: -10.391251564025879
    6. 's' → logprob: -10.891251564025879
    7. '=[]' → logprob: -10.891251564025879
    8. '_' → logprob: -11.266251564025879
    9. '_values' → logprob: -11.766251564025879
    10. '={}' → logprob: -12.516251564025879

Token 79: ' []
' (ID: 8911)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.7995635271072388
    2. ' {}' → logprob: -1.5495635271072388
    3. ' []' → logprob: -1.6745635271072388
    4. '[]' → logprob: -1.9245635271072388
    5. '[' → logprob: -5.924563407897949
    6. ' [' → logprob: -6.424563407897949
    7. 'dict' → logprob: -8.67456340789795
    8. ' ' → logprob: -9.42456340789795
    9. ' dict' → logprob: -9.79956340789795
    10. '{' → logprob: -10.42456340789795

Token 80: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29895925521850586
    2. ' for' → logprob: -1.4239592552185059
    3. '   ' → logprob: -4.173959255218506
    4. '<|end|>' → logprob: -6.548959255218506
    5. '	for' → logprob: -7.548959255218506
    6. '
' → logprob: -8.798959732055664
    7. '<|end|>' → logprob: -10.173959732055664
    8. ' ' → logprob: -10.173959732055664
    9. '    
' → logprob: -10.798959732055664
    10. '[' → logprob: -11.298959732055664

Token 81: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023246875032782555
    2. ' for' → logprob: -3.7732467651367188
    3. '	for' → logprob: -13.648246765136719
    4. '   ' → logprob: -15.648246765136719
    5. '<|end|>' → logprob: -16.77324676513672
    6. '[' → logprob: -17.64824676513672
    7. ' ' → logprob: -18.64824676513672
    8. 'while' → logprob: -18.89824676513672
    9. '
' → logprob: -18.89824676513672
    10. '```' → logprob: -19.52324676513672

Token 82: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.001210591522976756
    2. '_' → logprob: -7.376210689544678
    3. ' i' → logprob: -7.876210689544678
    4. ' ' → logprob: -8.50121021270752
    5. 'i' → logprob: -14.87621021270752
    6. ' ' → logprob: -15.12621021270752
    7. ' range' → logprob: -15.62621021270752
    8. ' ‌' → logprob: -16.126211166381836
    9. ' ▁' → logprob: -17.126211166381836
    10. ' in' → logprob: -17.376211166381836

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019357812125235796
    2. 'in' → logprob: -6.251935958862305
    3. ' ' → logprob: -13.001935958862305
    4. 'n' → logprob: -13.501935958862305
    5. '	in' → logprob: -14.001935958862305
    6. ' _' → logprob: -14.126935958862305
    7. ' i' → logprob: -14.876935958862305
    8. 'i' → logprob: -14.876935958862305
    9. '_' → logprob: -15.126935958862305
    10. 'range' → logprob: -15.501935958862305

Token 84: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005264356732368469
    2. ' range' → logprob: -5.2552642822265625
    3. 'ange' → logprob: -11.130264282226562
    4. 'code' → logprob: -11.380264282226562
    5. '(range' → logprob: -13.505264282226562
    6. 'rang' → logprob: -14.005264282226562
    7. '	range' → logprob: -14.380264282226562
    8. 'ran' → logprob: -15.005264282226562
    9. ' xrange' → logprob: -15.380264282226562
    10. 'M' → logprob: -15.505264282226562

Token 85: '(M' (ID: 6103)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.011473237536847591
    2. '(M' → logprob: -5.261473178863525
    3. 'N' → logprob: -5.386473178863525
    4. ' N' → logprob: -7.011473178863525
    5. '(' → logprob: -7.761473178863525
    6. ' (' → logprob: -8.636473655700684
    7. 'M' → logprob: -9.136473655700684
    8. ' M' → logprob: -11.011473655700684
    9. ' ' → logprob: -11.886473655700684
    10. '   ' → logprob: -13.136473655700684

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015643771039322019
    2. ')' → logprob: -7.2515645027160645
    3. ' ):' → logprob: -7.3765645027160645
    4. ':' → logprob: -8.751564025878906
    5. '):
' → logprob: -10.251564025878906
    6. ',' → logprob: -11.501564025878906
    7. '   ' → logprob: -11.876564025878906
    8. ' )' → logprob: -12.001564025878906
    9. '():' → logprob: -12.751564025878906
    10. ']:' → logprob: -12.751564025878906

Token 87: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15878869593143463
    2. '       ' → logprob: -2.1587886810302734
    3. ' code' → logprob: -4.408788681030273
    4. '<|end|>' → logprob: -5.158788681030273
    5. '    ' → logprob: -5.283788681030273
    6. 'code' → logprob: -5.408788681030273
    7. '    
' → logprob: -6.533788681030273
    8. '	   ' → logprob: -6.908788681030273
    9. '	code' → logprob: -8.033788681030273
    10. '```' → logprob: -8.783788681030273

Token 88: ' c' (ID: 274)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.9539199471473694
    2. ' code' → logprob: -0.9539199471473694
    3. '   ' → logprob: -2.5789198875427246
    4. ' parts' → logprob: -3.2039198875427246
    5. ' line' → logprob: -3.4539198875427246
    6. ' color' → logprob: -4.578919887542725
    7. 'color' → logprob: -4.578919887542725
    8. 'data' → logprob: -4.578919887542725
    9. 'line' → logprob: -4.953919887542725
    10. ' data' → logprob: -5.078919887542725

Token 89: ' =' (ID: 314)
  Prédit: 'ode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.010538602247834206
    2. 'code' → logprob: -5.635538578033447
    3. '_code' → logprob: -6.510538578033447
    4. ' =' → logprob: -6.635538578033447
    5. '_line' → logprob: -7.010538578033447
    6. '=' → logprob: -7.635538578033447
    7. 'har' → logprob: -7.760538578033447
    8. 'olor' → logprob: -7.760538578033447
    9. 'ol' → logprob: -8.260539054870605
    10. 'h' → logprob: -8.510539054870605

Token 90: ' int' (ID: 677)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.1202579736709595
    2. 'int' → logprob: -1.2452579736709595
    3. ' int' → logprob: -1.6202579736709595
    4. 'sys' → logprob: -2.62025785446167
    5. ' input' → logprob: -3.37025785446167
    6. ' list' → logprob: -3.49525785446167
    7. 'list' → logprob: -3.99525785446167
    8. 'input' → logprob: -4.24525785446167
    9. ' tuple' → logprob: -4.37025785446167
    10. 'tuple' → logprob: -5.62025785446167

Token 91: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4782782793045044
    2. '(sys' → logprob: -0.9782782793045044
    3. '(' → logprob: -5.603278160095215
    4. 'input' → logprob: -7.728278160095215
    5. 'sys' → logprob: -9.853278160095215
    6. ' input' → logprob: -12.228278160095215
    7. ' sys' → logprob: -12.978278160095215
    8. ' (' → logprob: -13.103278160095215
    9. '(
' → logprob: -13.228278160095215
    10. '(stdin' → logprob: -13.728278160095215

Token 92: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0004251931968610734
    2. 'stdin' → logprob: -7.875425338745117
    3. '.' → logprob: -10.375425338745117
    4. '.readline' → logprob: -11.250425338745117
    5. '(stdin' → logprob: -14.750425338745117
    6. '.argv' → logprob: -15.250425338745117
    7. ' stdin' → logprob: -15.875425338745117
    8. '.stdout' → logprob: -16.000425338745117
    9. 'input' → logprob: -18.000425338745117
    10. '.std' → logprob: -18.125425338745117

Token 93: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00029840084607712924
    2. '.' → logprob: -8.125298500061035
    3. '().' → logprob: -13.625298500061035
    4. '.stdin' → logprob: -14.375298500061035
    5. ' readline' → logprob: -14.750298500061035
    6. '.)' → logprob: -17.87529754638672
    7. ')' → logprob: -18.12529754638672
    8. '())' → logprob: -18.75029754638672
    9. ' .' → logprob: -19.00029754638672
    10. '()' → logprob: -19.00029754638672

Token 94: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3266139328479767
    2. '().' → logprob: -1.3266139030456543
    3. '()' → logprob: -4.326613903045654
    4. ' ())' → logprob: -10.576614379882812
    5. ')' → logprob: -11.326614379882812
    6. '())
' → logprob: -12.326614379882812
    7. '()
' → logprob: -12.451614379882812
    8. '();)' → logprob: -13.576614379882812
    9. '(' → logprob: -13.701614379882812
    10. '())

' → logprob: -13.826614379882812

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4897488057613373
    2. '   ' → logprob: -1.3647488355636597
    3. 'code' → logprob: -2.73974871635437
    4. ' code' → logprob: -3.36474871635437
    5. ')' → logprob: -4.489748954772949
    6. '<|end|>' → logprob: -4.614748954772949
    7. '	code' → logprob: -6.364748954772949
    8. ',' → logprob: -6.364748954772949
    9. '    ' → logprob: -6.739748954772949
    10. ' ' → logprob: -6.989748954772949

Token 96: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.6300742626190186
    2. 'code' (adapté à ' code') → logprob: -1.2550742626190186
    3. '   ' → logprob: -1.7550742626190186
    4. 'c' → logprob: -5.755074501037598
    5. ' c' → logprob: -6.630074501037598
    6. '	code' → logprob: -7.005074501037598
    7. '       ' → logprob: -7.130074501037598
    8. '
' → logprob: -7.380074501037598
    9. '_code' → logprob: -7.880074501037598
    10. 'color' → logprob: -8.567574501037598

Token 97: 'book' (ID: 3092)
  Prédit: 'book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -6.704273118884885e-07
    2. 'books' → logprob: -15.500000953674316
    3. 'b' → logprob: -16.25
    4. 'board' → logprob: -16.875
    5. 'ook' → logprob: -17.0
    6. 'bo' → logprob: -17.375
    7. 's' → logprob: -17.625
    8. 'boek' → logprob: -17.75
    9. '   ' → logprob: -18.0
    10. '_book' → logprob: -18.25

Token 98: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008627340197563171
    2. '.' → logprob: -4.758627414703369
    3. '.ap' → logprob: -12.258626937866211
    4. '.extend' → logprob: -12.383626937866211
    5. '.app' → logprob: -13.133626937866211
    6. '.add' → logprob: -13.883626937866211
    7. ' .' → logprob: -14.508626937866211
    8. '.setdefault' → logprob: -15.508626937866211
    9. '.insert' → logprob: -16.13362693786621
    10. '.push' → logprob: -17.25862693786621

Token 99: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.006161397323012352
    2. '(cl' → logprob: -5.256161212921143
    3. '(' → logprob: -7.006161212921143
    4. '(code' → logprob: -11.2561616897583
    5. 'c' → logprob: -12.6311616897583
    6. '((' → logprob: -13.5061616897583
    7. '(int' → logprob: -13.6311616897583
    8. 'cl' → logprob: -14.1311616897583
    9. '(max' → logprob: -15.2561616897583
    10. '(
' → logprob: -15.3811616897583

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007087402627803385
    2. ')
' → logprob: -7.50070858001709
    3. '   ' → logprob: -9.87570858001709
    4. ' )' → logprob: -10.00070858001709
    5. '
' → logprob: -10.75070858001709
    6. '<|end|>' → logprob: -10.87570858001709
    7. ')
' → logprob: -13.25070858001709
    8. ')c' → logprob: -13.25070858001709
    9. '))' → logprob: -13.37570858001709
    10. ')return' → logprob: -13.50070858001709

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24720746278762817
    2. '<|end|>' → logprob: -2.3722074031829834
    3. '
' → logprob: -2.4972074031829834
    4. ' for' → logprob: -4.4972076416015625
    5. '    
' → logprob: -4.6222076416015625
    6. 'for' → logprob: -4.7472076416015625
    7. ' ' → logprob: -5.6222076416015625
    8. '  
' → logprob: -6.3722076416015625
    9. '[' → logprob: -6.4972076416015625
    10. '  ' → logprob: -7.1222076416015625

Token 102: ' x' (ID: 1215)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1077858209609985
    2. 'output' → logprob: -1.6077858209609985
    3. 'decoded' → logprob: -2.482785701751709
    4. 'pixels' → logprob: -2.857785701751709
    5. 'data' → logprob: -2.982785701751709
    6. 'colors' → logprob: -3.357785701751709
    7. 'for' → logprob: -3.607785701751709
    8. ' output' → logprob: -3.857785701751709
    9. ' result' → logprob: -3.857785701751709
    10. 'values' → logprob: -3.982785701751709

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6483851671218872
    2. 's' → logprob: -1.5233851671218872
    3. '=' → logprob: -1.8983851671218872
    4. 'or' → logprob: -3.1483850479125977
    5. '_values' → logprob: -3.6483850479125977
    6. '=[]' → logprob: -4.773385047912598
    7. ',' → logprob: -5.023385047912598
    8. '_sum' → logprob: -5.648385047912598
    9. 'sum' → logprob: -5.648385047912598
    10. '=int' → logprob: -6.148385047912598

Token 104: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7171618938446045
    2. ' ' → logprob: -1.7171618938446045
    3. ' int' → logprob: -1.8421618938446045
    4. ' [' → logprob: -1.8421618938446045
    5. ' []' → logprob: -2.3421618938446045
    6. '[]' → logprob: -2.4671618938446045
    7. ' list' → logprob: -2.8421618938446045
    8. 'int' → logprob: -3.4671618938446045
    9. ' N' → logprob: -4.467162132263184
    10. '[int' → logprob: -4.592162132263184

Token 105: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7734041213989258
    2. ' for' → logprob: -1.1484041213989258
    3. '   ' → logprob: -1.5234041213989258
    4. '<|end|>' → logprob: -7.148404121398926
    5. '	for' → logprob: -7.273404121398926
    6. '[' → logprob: -7.398404121398926
    7. '
' → logprob: -7.773404121398926
    8. '    
' → logprob: -8.898404121398926
    9. ' ' → logprob: -9.148404121398926
    10. '  ' → logprob: -9.898404121398926

Token 106: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.022937247529625893
    2. ' for' → logprob: -4.397937297821045
    3. 'while' → logprob: -4.772937297821045
    4. 'line' → logprob: -7.147937297821045
    5. ' while' → logprob: -8.772936820983887
    6. 'values' → logprob: -8.897936820983887
    7. 'count' → logprob: -9.022936820983887
    8. '   ' → logprob: -9.397936820983887
    9. 'current' → logprob: -9.522936820983887
    10. 'x' → logprob: -10.147936820983887

Token 107: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.13111963868141174
    2. '_' → logprob: -2.131119728088379
    3. ' i' → logprob: -5.881119728088379
    4. ' ' → logprob: -6.631119728088379
    5. 'i' → logprob: -10.006119728088379
    6. ' in' → logprob: -11.756119728088379
    7. ' range' → logprob: -12.006119728088379
    8. '_i' → logprob: -12.006119728088379
    9. 'range' → logprob: -13.381119728088379
    10. '  ' → logprob: -14.006119728088379

Token 108: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38935932517051697
    2. ' in' → logprob: -1.1393593549728394
    3. 'range' → logprob: -6.264359474182129
    4. ' ' → logprob: -7.514359474182129
    5. ' range' → logprob: -11.139359474182129
    6. '  ' → logprob: -11.764359474182129
    7. ' _' → logprob: -12.764359474182129
    8. '    ' → logprob: -13.139359474182129
    9. '```' → logprob: -13.139359474182129
    10. 'line' → logprob: -14.264359474182129

Token 109: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28223341703414917
    2. ' range' → logprob: -1.407233476638794
    3. 'code' → logprob: -7.657233238220215
    4. 'sys' → logprob: -8.657233238220215
    5. ' sys' → logprob: -9.282233238220215
    6. ' code' → logprob: -9.407233238220215
    7. 'ange' → logprob: -9.657233238220215
    8. 'x' → logprob: -9.907233238220215
    9. ' xrange' → logprob: -10.532233238220215
    10. ' ' → logprob: -10.782233238220215

Token 110: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.017697500064969063
    2. 'N' → logprob: -4.642697334289551
    3. ' (' → logprob: -5.642697334289551
    4. ' N' → logprob: -5.642697334289551
    5. '(' → logprob: -7.142697334289551
    6. '(M' → logprob: -11.01769733428955
    7. ' ' → logprob: -11.76769733428955
    8. '(n' → logprob: -12.64269733428955
    9. '	N' → logprob: -13.51769733428955
    10. '(int' → logprob: -13.76769733428955

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08911657333374023
    2. ')' → logprob: -2.9641165733337402
    3. '):
' → logprob: -3.4641165733337402
    4. '   ' → logprob: -7.08911657333374
    5. ' ):' → logprob: -7.46411657333374
    6. ' )' → logprob: -8.214117050170898
    7. '       ' → logprob: -8.339117050170898
    8. '):
' → logprob: -9.214117050170898
    9. ':' → logprob: -9.589117050170898
    10. '*' → logprob: -9.714117050170898

Token 112: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5633971691131592
    2. ' x' → logprob: -1.0633971691131592
    3. 'x' → logprob: -2.938397169113159
    4. '       ' → logprob: -3.688397169113159
    5. 'int' → logprob: -5.438397407531738
    6. ' int' → logprob: -6.813397407531738
    7. '    ' → logprob: -8.438397407531738
    8. '  ' → logprob: -8.438397407531738
    9. '<|end|>' → logprob: -8.438397407531738
    10. ' ' → logprob: -8.688397407531738

Token 113: ' xi' (ID: 26869)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8500128388404846
    2. 'v' → logprob: -1.2250127792358398
    3. ' x' → logprob: -2.85001277923584
    4. ' v' → logprob: -3.22501277923584
    5. ' row' → logprob: -3.72501277923584
    6. 'row' → logprob: -3.85001277923584
    7. 'a' → logprob: -3.97501277923584
    8. 'val' → logprob: -4.10001277923584
    9. ' val' → logprob: -4.10001277923584
    10. ' parts' → logprob: -4.60001277923584

Token 114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932374238967896
    2. ' =' → logprob: -0.6932374238967896
    3. '.append' → logprob: -10.0682373046875
    4. '=int' → logprob: -10.3182373046875
    5. ' ' → logprob: -12.5682373046875
    6. 'nt' → logprob: -13.0682373046875
    7. '_' → logprob: -13.3182373046875
    8. 'n' → logprob: -13.8182373046875
    9. '_=' → logprob: -13.9432373046875
    10. '=line' → logprob: -14.0682373046875

Token 115: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1800370067358017
    2. ' int' → logprob: -1.805037021636963
    3. 'cl' → logprob: -9.430036544799805
    4. 'float' → logprob: -9.805036544799805
    5. ' cl' → logprob: -10.055036544799805
    6. ' float' → logprob: -10.805036544799805
    7. '   ' → logprob: -10.805036544799805
    8. ' clamp' → logprob: -10.805036544799805
    9. ' ' → logprob: -10.930036544799805
    10. '[int' → logprob: -11.430036544799805

Token 116: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -3.690834273584187e-05
    2. '(' → logprob: -10.25003719329834
    3. '(system' → logprob: -14.75003719329834
    4. 'sys' → logprob: -14.75003719329834
    5. ' (' → logprob: -15.75003719329834
    6. '=sys' → logprob: -15.75003719329834
    7. '(s' → logprob: -16.375036239624023
    8. '(System' → logprob: -16.375036239624023
    9. '	sys' → logprob: -17.125036239624023
    10. '(
' → logprob: -17.125036239624023

Token 117: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0629371851682663
    2. '.readline' → logprob: -2.8129372596740723
    3. 'stdin' → logprob: -7.062937259674072
    4. '.' → logprob: -9.312936782836914
    5. 'in' → logprob: -11.187936782836914
    6. '.stdout' → logprob: -12.937936782836914
    7. '(stdin' → logprob: -13.187936782836914
    8. '.argv' → logprob: -14.062936782836914
    9. ').' → logprob: -14.187936782836914
    10. '.std' → logprob: -14.437936782836914

Token 118: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.704273118884885e-07
    2. 'stdin' → logprob: -15.500000953674316
    3. '.stdin' → logprob: -15.750000953674316
    4. '.' → logprob: -16.375
    5. ' readline' → logprob: -16.5
    6. 'line' → logprob: -17.125
    7. 'read' → logprob: -17.125
    8. '.readlines' → logprob: -18.125
    9. 'sys' → logprob: -19.125
    10. '```' → logprob: -19.75

Token 119: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023096267133951187
    2. '()' → logprob: -3.8980963230133057
    3. ')' → logprob: -6.648096084594727
    4. '())
' → logprob: -6.773096084594727
    5. '()
' → logprob: -9.773096084594727
    6. ' ())' → logprob: -10.648096084594727
    7. '())
' → logprob: -12.023096084594727
    8. '().' → logprob: -12.148096084594727
    9. '();)' → logprob: -12.148096084594727
    10. '())

' → logprob: -12.398096084594727

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2555643618106842
    2. '   ' → logprob: -1.5055643320083618
    3. 'x' → logprob: -6.005564212799072
    4. '<|end|>' → logprob: -7.755564212799072
    5. ' x' → logprob: -8.50556468963623
    6. ')' → logprob: -8.75556468963623
    7. ',' → logprob: -9.13056468963623
    8. '
' → logprob: -9.63056468963623
    9. ' ' → logprob: -10.63056468963623
    10. '           ' → logprob: -10.75556468963623

Token 121: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3360086679458618
    2. '   ' → logprob: -1.8360086679458618
    3. ' x' → logprob: -2.0860085487365723
    4. '       ' → logprob: -6.711008548736572
    5. 's' → logprob: -8.58600902557373
    6. ' ' → logprob: -8.83600902557373
    7. '  ' → logprob: -9.58600902557373
    8. '    ' → logprob: -10.46100902557373
    9. ')' → logprob: -11.58600902557373
    10. ' s' → logprob: -11.83600902557373

Token 122: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011757015017792583
    2. '.' → logprob: -6.751175880432129
    3. 'append' → logprob: -13.001175880432129
    4. '.app' → logprob: -13.501175880432129
    5. '.extend' → logprob: -13.751175880432129
    6. '.ap' → logprob: -14.501175880432129
    7. ' .' → logprob: -15.501175880432129
    8. 'appen' → logprob: -16.751174926757812
    9. '.add' → logprob: -17.751174926757812
    10. '_append' → logprob: -18.251174926757812

Token 123: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10021670162677765
    2. '(' → logprob: -2.3502166271209717
    3. '(i' → logprob: -11.97521686553955
    4. '(
' → logprob: -13.10021686553955
    5. '(ai' → logprob: -14.85021686553955
    6. 'xi' → logprob: -15.22521686553955
    7. '(int' → logprob: -15.72521686553955
    8. ' (' → logprob: -15.72521686553955
    9. '(ix' → logprob: -15.72521686553955
    10. '(

' → logprob: -15.97521686553955

Token 124: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011063974350690842
    2. '[i' → logprob: -4.886064052581787
    3. ')' → logprob: -5.886064052581787
    4. '_i' → logprob: -7.886064052581787
    5. '[' → logprob: -8.261063575744629
    6. 'I' → logprob: -11.636063575744629
    7. '[int' → logprob: -12.011063575744629
    8. ')i' → logprob: -12.386063575744629
    9. '_' → logprob: -12.761063575744629
    10. 'xi' → logprob: -13.011063575744629

Token 125: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.277553620748222e-05
    2. ' )' → logprob: -10.500062942504883
    3. ')
' → logprob: -10.875062942504883
    4. '   ' → logprob: -11.625062942504883
    5. '<|end|>' → logprob: -12.875062942504883
    6. ' ' → logprob: -14.250062942504883
    7. '))' → logprob: -14.500062942504883
    8. '
' → logprob: -15.000062942504883
    9. ')return' → logprob: -15.000062942504883
    10. ')

' → logprob: -15.125062942504883

Token 126: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3919469714164734
    2. 'for' → logprob: -2.016947031021118
    3. 'result' → logprob: -2.516947031021118
    4. 'r' → logprob: -3.891947031021118
    5. 'output' → logprob: -3.891947031021118
    6. 'res' → logprob: -4.016946792602539
    7. 'filtered' → logprob: -5.266946792602539
    8. 'd' → logprob: -5.266946792602539
    9. 'n' → logprob: -5.516946792602539
    10. 'new' → logprob: -6.016946792602539

Token 127: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.35553017258644104
    2. 'result' → logprob: -2.105530261993408
    3. 'output' → logprob: -2.855530261993408
    4. 'for' → logprob: -3.730530261993408
    5. 'filtered' → logprob: -3.980530261993408
    6. 'res' → logprob: -4.230530261993408
    7. 'r' → logprob: -4.980530261993408
    8. 'out' → logprob: -5.105530261993408
    9. 's' → logprob: -5.355530261993408
    10. 'd' → logprob: -5.355530261993408

Token 128: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2591527700424194
    2. ' for' → logprob: -1.3841527700424194
    3. 'result' → logprob: -2.259152889251709
    4. ' result' → logprob: -2.634152889251709
    5. ' prev' → logprob: -3.759152889251709
    6. 'prev' → logprob: -3.884152889251709
    7. 'res' → logprob: -4.134152889251709
    8. '#' → logprob: -4.134152889251709
    9. 'decoded' → logprob: -4.134152889251709
    10. 'diff' → logprob: -4.259152889251709

Token 129: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07919953018426895
    2. '=' → logprob: -2.5791995525360107
    3. '_' → logprob: -8.82919979095459
    4. '[' → logprob: -10.20419979095459
    5. 'dp' → logprob: -10.32919979095459
    6. '_dp' → logprob: -10.45419979095459
    7. '_size' → logprob: -10.82919979095459
    8. ' ' → logprob: -11.70419979095459
    9. '=[]' → logprob: -11.95419979095459
    10. 'size' → logprob: -12.07919979095459

Token 130: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20875628292560577
    2. '][' → logprob: -1.7087563276290894
    3. ' ]' → logprob: -5.958756446838379
    4. ']=' → logprob: -6.583756446838379
    5. ' ][' → logprob: -6.583756446838379
    6. ' =' → logprob: -7.208756446838379
    7. '][]' → logprob: -7.458756446838379
    8. ']={' → logprob: -9.083756446838379
    9. '=' → logprob: -9.333756446838379
    10. '+' → logprob: -9.458756446838379

Token 131: 'y' (ID: 88)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03749736770987511
    2. 'w' → logprob: -4.537497520446777
    3. 'v' → logprob: -5.037497520446777
    4. 'm' → logprob: -5.162497520446777
    5. 'sum' → logprob: -5.662497520446777
    6. 'k' → logprob: -6.037497520446777
    7. 's' → logprob: -6.662497520446777
    8. 'value' → logprob: -6.787497520446777
    9. '0' → logprob: -7.162497520446777
    10. 'pos' → logprob: -7.537497520446777

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017238459549844265
    2. ' ]' → logprob: -7.001723766326904
    3. ']=' → logprob: -7.501723766326904
    4. '][' → logprob: -8.626724243164062
    5. '=' → logprob: -10.751724243164062
    6. ' =' → logprob: -11.876724243164062
    7. '[' → logprob: -11.876724243164062
    8. 'x' → logprob: -12.251724243164062
    9. '][]' → logprob: -12.251724243164062
    10. ')' → logprob: -12.501724243164062

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08706840127706528
    2. '=' → logprob: -2.5870683193206787
    3. ' ' → logprob: -4.962068557739258
    4. '[' → logprob: -7.462068557739258
    5. '=[]' → logprob: -8.337068557739258
    6. '<|end|>' → logprob: -9.087068557739258
    7. '   ' → logprob: -10.337068557739258
    8. ']' → logprob: -10.462068557739258
    9. ',' → logprob: -10.587068557739258
    10. ':' → logprob: -10.712068557739258

Token 134: ' minimal' (ID: 19957)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -1.0935548543930054
    2. ' minimal' → logprob: -1.9685548543930054
    3. 'minimum' → logprob: -2.343554973602295
    4. ' min' → logprob: -2.593554973602295
    5. 'min' → logprob: -2.593554973602295
    6. ' float' → logprob: -2.968554973602295
    7. ' None' → logprob: -3.343554973602295
    8. 'float' → logprob: -3.343554973602295
    9. ' (' → logprob: -3.468554973602295
    10. 'None' → logprob: -3.843554973602295

Token 135: ' sum' (ID: 4215)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.6790999174118042
    2. ' ' → logprob: -0.9290999174118042
    3. 'cost' → logprob: -4.304100036621094
    4. ' error' → logprob: -4.429100036621094
    5. '<|end|>' → logprob: -4.679100036621094
    6. ' cumulative' → logprob: -4.804100036621094
    7. ' value' → logprob: -4.929100036621094
    8. ' difference' → logprob: -5.054100036621094
    9. '_' → logprob: -5.304100036621094
    10. ' penalty' → logprob: -5.429100036621094

Token 136: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05219502002000809
    2. '[' → logprob: -4.427195072174072
    3. ' _' → logprob: -4.427195072174072
    4. '   ' → logprob: -4.927195072174072
    5. '(' → logprob: -5.927195072174072
    6. ' ' → logprob: -6.177195072174072
    7. '    ' → logprob: -6.427195072174072
    8. '<|end|>' → logprob: -6.427195072174072
    9. ' of' → logprob: -6.677195072174072
    10. ',' → logprob: -6.677195072174072

Token 137: ' squared' (ID: 117867)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45212969183921814
    2. ' squared' → logprob: -2.202129602432251
    3. ' absolute' → logprob: -2.702129602432251
    4. 'cl' → logprob: -3.327129602432251
    5. 'absolute' → logprob: -3.452129602432251
    6. 'abs' → logprob: -3.577129602432251
    7. 'dif' → logprob: -3.702129602432251
    8. ' errors' → logprob: -4.32712984085083
    9. ' squares' → logprob: -4.32712984085083
    10. 'errors' → logprob: -4.45212984085083

Token 138: ' errors' (ID: 10664)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.717458188533783
    2. 'errors' → logprob: -1.0924582481384277
    3. ' errors' → logprob: -2.2174582481384277
    4. ' differences' → logprob: -3.4674582481384277
    5. 'error' → logprob: -4.217458248138428
    6. ' error' → logprob: -4.467458248138428
    7. 'difference' → logprob: -5.717458248138428
    8. 'diff' → logprob: -5.842458248138428
    9. 'cl' → logprob: -6.717458248138428
    10. 'd' → logprob: -7.467458248138428

Token 139: ' up' (ID: 869)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48121342062950134
    2. '<|end|>' → logprob: -2.106213331222534
    3. ' ' → logprob: -2.606213331222534
    4. ' for' → logprob: -2.731213331222534
    5. ' =' → logprob: -3.606213331222534
    6. '   ' → logprob: -3.856213331222534
    7. 'for' → logprob: -4.231213569641113
    8. ',' → logprob: -4.356213569641113
    9. '  ' → logprob: -4.481213569641113
    10. '[]' → logprob: -5.356213569641113

Token 140: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0363709032535553
    2. ' to' → logprob: -4.036370754241943
    3. '   ' → logprob: -4.661370754241943
    4. 'o' → logprob: -6.161370754241943
    5. 'ntil' → logprob: -6.161370754241943
    6. 'i' → logprob: -6.536370754241943
    7. ' ' → logprob: -6.911370754241943
    8. '<|end|>' → logprob: -7.661370754241943
    9. '_to' → logprob: -7.911370754241943
    10. '  ' → logprob: -8.036371231079102

Token 141: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5965338349342346
    2. ' i' → logprob: -0.8465338349342346
    3. 'index' → logprob: -4.72153377532959
    4. ' index' → logprob: -4.84653377532959
    5. ' the' → logprob: -6.59653377532959
    6. 'the' → logprob: -7.47153377532959
    7. ' ith' → logprob: -7.72153377532959
    8. 'position' → logprob: -8.34653377532959
    9. ' position' → logprob: -8.47153377532959
    10. 'ith' → logprob: -8.84653377532959

Token 142: '-th' (ID: 14928)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25426337122917175
    2. '[i' → logprob: -1.8792634010314941
    3. ',' → logprob: -3.879263401031494
    4. '   ' → logprob: -4.129263401031494
    5. '<|end|>' → logprob: -5.004263401031494
    6. ' for' → logprob: -5.629263401031494
    7. 'for' → logprob: -5.629263401031494
    8. '[
' → logprob: -5.754263401031494
    9. '][' → logprob: -6.129263401031494
    10. ')' → logprob: -6.254263401031494

Token 143: ' sample' (ID: 10176)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' element' → logprob: -1.6607398986816406
    2. 'index' → logprob: -1.9107398986816406
    3. 'point' → logprob: -2.4107398986816406
    4. 'element' → logprob: -2.5357398986816406
    5. 'token' → logprob: -2.7857398986816406
    6. ' index' → logprob: -2.7857398986816406
    7. '<|end|>' → logprob: -2.7857398986816406
    8. ')' → logprob: -3.4107398986816406
    9. ' token' → logprob: -3.5357398986816406
    10. ' point' → logprob: -3.6607398986816406

Token 144: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23480592668056488
    2. ',' → logprob: -2.2348058223724365
    3. ' for' → logprob: -3.1098058223724365
    4. 'dp' → logprob: -3.4848058223724365
    5. ' dp' → logprob: -5.234806060791016
    6. '[' → logprob: -5.234806060791016
    7. ' with' → logprob: -5.484806060791016
    8. 'for' → logprob: -5.734806060791016
    9. '[i' → logprob: -6.484806060791016
    10. ' (' → logprob: -6.859806060791016

Token 145: ' output' (ID: 4733)
  Prédit: 'quant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.7544167041778564
    2. 'code' → logprob: -2.2544167041778564
    3. ' quant' → logprob: -2.6294167041778564
    4. 'y' → logprob: -2.7544167041778564
    5. ' code' → logprob: -2.8794167041778564
    6. 'value' → logprob: -3.2544167041778564
    7. ' y' → logprob: -3.2544167041778564
    8. 'the' → logprob: -3.6294167041778564
    9. 'cluster' → logprob: -4.004416465759277
    10. ' the' → logprob: -4.004416465759277

Token 146: ' y' (ID: 342)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.44679000973701477
    2. 'value' → logprob: -1.4467899799346924
    3. ' level' → logprob: -3.4467899799346924
    4. 'level' → logprob: -4.1967902183532715
    5. ' color' → logprob: -4.5717902183532715
    6. ' index' → logprob: -4.6967902183532715
    7. ' at' → logprob: -4.8217902183532715
    8. ' code' → logprob: -5.1967902183532715
    9. 'index' → logprob: -5.5717902183532715
    10. 'levels' → logprob: -5.5717902183532715

Token 147: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3419591188430786
    2. '[' → logprob: -1.4669591188430786
    3. '   ' → logprob: -1.5919591188430786
    4. '
' → logprob: -2.216958999633789
    5. 'dp' → logprob: -2.966958999633789
    6. ' ' → logprob: -3.591958999633789
    7. ',' → logprob: -3.966958999633789
    8. '=' → logprob: -4.091958999633789
    9. 's' → logprob: -4.466958999633789
    10. ']' → logprob: -4.841958999633789

Token 148: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.038309097290039
    2. ' i' → logprob: -1.038309097290039
    3. 'index' → logprob: -2.663309097290039
    4. ' index' → logprob: -3.163309097290039
    5. ' sample' → logprob: -3.288309097290039
    6. ' position' → logprob: -3.413309097290039
    7. 'the' → logprob: -3.413309097290039
    8. ' the' → logprob: -3.538309097290039
    9. 'position' → logprob: -3.788309097290039
    10. 'sample' → logprob: -4.663309097290039

Token 149: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23179972171783447
    2. ' i' → logprob: -1.6067997217178345
    3. '[i' → logprob: -5.231799602508545
    4. '[' → logprob: -7.731799602508545
    5. ' ' → logprob: -8.231800079345703
    6. '   ' → logprob: -9.231800079345703
    7. '_i' → logprob: -9.606800079345703
    8. ' [' → logprob: -9.856800079345703
    9. '0' → logprob: -10.731800079345703
    10. '<|end|>' → logprob: -10.981800079345703

Token 150: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6971091628074646
    2. '
' → logprob: -1.0721092224121094
    3. 'dp' → logprob: -2.8221092224121094
    4. ' ' → logprob: -3.0721092224121094
    5. '[' → logprob: -4.197109222412109
    6. ' dp' → logprob: -4.572109222412109
    7. '    
' → logprob: -5.072109222412109
    8. ' =' → logprob: -6.072109222412109
    9. '_dp' → logprob: -6.072109222412109
    10. '    ' → logprob: -6.197109222412109

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12899644672870636
    2. 'dp' → logprob: -2.1289963722229004
    3. ' dp' → logprob: -7.0039963722229
    4. 'import' → logprob: -7.5039963722229
    5. '
' → logprob: -9.378996849060059
    6. '(dp' → logprob: -9.503996849060059
    7. ',' → logprob: -9.628996849060059
    8. ' ' → logprob: -9.753996849060059
    9. 'from' → logprob: -9.878996849060059
    10. '	dp' → logprob: -9.878996849060059

Token 152: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24640527367591858
    2. ' dp' → logprob: -1.6214052438735962
    3. '   ' → logprob: -4.246405124664307
    4. 'import' → logprob: -5.746405124664307
    5. 'from' → logprob: -6.371405124664307
    6. ' ' → logprob: -7.121405124664307
    7. '
' → logprob: -8.621405601501465
    8. 'd' → logprob: -8.746405601501465
    9. ' from' → logprob: -8.996405601501465
    10. '_dp' → logprob: -9.746405601501465

Token 153: ' since' (ID: 3630)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06829161942005157
    2. ' dp' → logprob: -2.818291664123535
    3. 'import' → logprob: -5.318291664123535
    4. 'from' → logprob: -6.818291664123535
    5. ' import' → logprob: -8.943291664123535
    6. '   ' → logprob: -9.443291664123535
    7. ' from' → logprob: -9.568291664123535
    8. 'for' → logprob: -12.693291664123535
    9. ' ' → logprob: -12.818291664123535
    10. '
' → logprob: -13.068291664123535

Token 154: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.4323575496673584
    2. 'dp' → logprob: -1.9323575496673584
    3. 'M' → logprob: -2.1823575496673584
    4. ' M' → logprob: -2.5573575496673584
    5. 'len' → logprob: -2.8073575496673584
    6. 'N' → logprob: -2.8073575496673584
    7. ' y' → logprob: -3.1823575496673584
    8. ' we' → logprob: -3.1823575496673584
    9. 'we' → logprob: -3.4323575496673584
    10. 'i' → logprob: -3.4323575496673584

Token 155: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9104700684547424
    2. ' can' → logprob: -1.6604700088500977
    3. ' in' → logprob: -2.0354700088500977
    4. ' ranges' → logprob: -2.9104700088500977
    5. '_' → logprob: -3.5354700088500977
    6. ' only' → logprob: -4.035470008850098
    7. '   ' → logprob: -4.035470008850098
    8. ' range' → logprob: -4.035470008850098
    9. ' ' → logprob: -4.160470008850098
    10. ' represents' → logprob: -4.285470008850098

Token 156: ' between' (ID: 2870)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9103416204452515
    2. 'in' → logprob: -1.6603416204452515
    3. 'cl' → logprob: -2.035341739654541
    4. '256' → logprob: -2.535341739654541
    5. ' in' → logprob: -3.535341739654541
    6. '255' → logprob: -3.535341739654541
    7. ' ' → logprob: -3.910341739654541
    8. 'only' → logprob: -4.285341739654541
    9. '[' → logprob: -4.410341739654541
    10. 'limited' → logprob: -4.410341739654541

Token 157: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067800311371684074
    2. ' ' → logprob: -5.00678014755249
    3. '   ' → logprob: -9.881779670715332
    4. '1' → logprob: -12.131779670715332
    5. '256' → logprob: -13.256779670715332
    6. '  ' → logprob: -13.756779670715332
    7. '16' → logprob: -13.756779670715332
    8. '```' → logprob: -14.006779670715332
    9. 'cl' → logprob: -14.131779670715332
    10. '-' → logprob: -14.381779670715332

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003478593716863543
    2. ' ' → logprob: -8.375348091125488
    3. '256' → logprob: -9.125348091125488
    4. '-' → logprob: -12.625348091125488
    5. '   ' → logprob: -12.750348091125488
    6. '1' → logprob: -14.750348091125488
    7. '  ' → logprob: -15.000348091125488
    8. '255' → logprob: -15.250348091125488
    9. 'cl' → logprob: -15.375348091125488
    10. '```' → logprob: -15.875348091125488

Token 159: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.20187295973300934
    2. ' and' → logprob: -1.7018729448318481
    3. '   ' → logprob: -7.826872825622559
    4. 'to' → logprob: -10.576872825622559
    5. ' to' → logprob: -11.451872825622559
    6. '	and' → logprob: -11.701872825622559
    7. ' ' → logprob: -12.076872825622559
    8. '```' → logprob: -12.451872825622559
    9. ',' → logprob: -13.326872825622559
    10. '255' → logprob: -13.326872825622559

Token 160: ' ' (ID: 220)
  Prédit: '255'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '255' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -9.750059127807617
    3. '256' → logprob: -15.000059127807617
    4. '   ' → logprob: -15.250059127807617
    5. 'M' → logprob: -16.125059127807617
    6. '  ' → logprob: -16.875059127807617
    7. '```' → logprob: -16.875059127807617
    8. '2' → logprob: -17.000059127807617
    9. '25' → logprob: -17.375059127807617
    10. '	' → logprob: -18.000059127807617

Token 161: '255' (ID: 6143)
  Prédit: '255'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '255' → logprob: -0.00016098834748845547
    2. ' ' → logprob: -8.750161170959473
    3. '256' → logprob: -13.500161170959473
    4. '2' → logprob: -14.500161170959473
    5. '25' → logprob: -15.250161170959473
    6. '   ' → logprob: -16.375160217285156
    7. '  ' → logprob: -16.500160217285156
    8. '```' → logprob: -16.500160217285156
    9. '257' → logprob: -17.812660217285156
    10. '254' → logprob: -17.875160217285156

Token 162: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8258407711982727
    2. '   ' → logprob: -0.8258407711982727
    3. ',' → logprob: -2.325840711593628
    4. '    
' → logprob: -5.450840950012207
    5. 'dp' → logprob: -5.700840950012207
    6. ']' → logprob: -5.700840950012207
    7. '<|end|>' → logprob: -5.700840950012207
    8. '[' → logprob: -5.825840950012207
    9. ',
' → logprob: -6.075840950012207
    10. ' dp' → logprob: -6.450840950012207

Token 163: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1172240674495697
    2. ' dp' → logprob: -2.2422239780426025
    3. 'import' → logprob: -5.992224216461182
    4. '   ' → logprob: -6.492224216461182
    5. '
' → logprob: -8.742223739624023
    6. ' we' → logprob: -9.492223739624023
    7. ' import' → logprob: -10.242223739624023
    8. 'from' → logprob: -11.117223739624023
    9. '	dp' → logprob: -11.242223739624023
    10. '#' → logprob: -11.242223739624023

Token 164: ' each' (ID: 2454)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.2274731397628784
    2. 'i' → logprob: -1.3524731397628784
    3. ' y' → logprob: -1.3524731397628784
    4. ' i' → logprob: -1.9774731397628784
    5. ' memory' → logprob: -4.227473258972168
    6. 'memory' → logprob: -5.352473258972168
    7. '_' → logprob: -5.602473258972168
    8. ' j' → logprob: -5.727473258972168
    9. ' _' → logprob: -5.727473258972168
    10. 'j' → logprob: -5.727473258972168

Token 165: ' position' (ID: 4010)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8400744795799255
    2. ' y' → logprob: -0.8400744795799255
    3. 'i' → logprob: -2.2150745391845703
    4. ' i' → logprob: -3.9650745391845703
    5. ' line' → logprob: -6.34007453918457
    6. '   ' → logprob: -6.59007453918457
    7. ' ' → logprob: -6.84007453918457
    8. ' position' → logprob: -7.46507453918457
    9. 'position' → logprob: -7.71507453918457
    10. ')' → logprob: -7.96507453918457

Token 166: ' i' (ID: 575)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05856947973370552
    2. 'i' → logprob: -4.308569431304932
    3. 'y' → logprob: -5.183569431304932
    4. ' we' → logprob: -5.183569431304932
    5. ' in' → logprob: -5.183569431304932
    6. '   ' → logprob: -5.558569431304932
    7. '<|end|>' → logprob: -5.558569431304932
    8. 'in' → logprob: -5.808569431304932
    9. ' ,' → logprob: -5.808569431304932
    10. ')' → logprob: -5.933569431304932

Token 167: ' we' (ID: 581)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03532129153609276
    2. ' ,' → logprob: -4.785321235656738
    3. '   ' → logprob: -4.910321235656738
    4. ']' → logprob: -5.660321235656738
    5. ' =' → logprob: -6.160321235656738
    6. 'import' → logprob: -6.160321235656738
    7. ' dp' → logprob: -6.410321235656738
    8. ' we' → logprob: -6.410321235656738
    9. '=' → logprob: -6.785321235656738
    10. '[' → logprob: -6.910321235656738

Token 168: ' store' (ID: 4897)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.5379642248153687
    2. ' will' → logprob: -1.6629642248153687
    3. '<|end|>' → logprob: -2.412964344024658
    4. ' have' → logprob: -2.537964344024658
    5. 'will' → logprob: -2.662964344024658
    6. 'can' → logprob: -2.912964344024658
    7. 'have' → logprob: -3.037964344024658
    8. ' only' → logprob: -3.162964344024658
    9. '   ' → logprob: -3.412964344024658
    10. ' need' → logprob: -3.662964344024658

Token 169: ' a' (ID: 261)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.150614932179451
    2. 'dp' → logprob: -2.0256149768829346
    3. 'a' → logprob: -5.2756147384643555
    4. ' [' → logprob: -7.0256147384643555
    5. ' dp' → logprob: -7.5256147384643555
    6. '256' → logprob: -8.150614738464355
    7. '   ' → logprob: -8.650614738464355
    8. ' a' → logprob: -8.775614738464355
    9. 'prev' → logprob: -8.900614738464355
    10. 'the' → logprob: -9.025614738464355

Token 170: ' cost' (ID: 3097)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07885287702083588
    2. ' list' → logprob: -3.453852891921997
    3. '[' → logprob: -3.578852891921997
    4. 'array' → logprob: -4.828852653503418
    5. 'dict' → logprob: -5.953852653503418
    6. '256' → logprob: -6.203852653503418
    7. ' [' → logprob: -7.203852653503418
    8. ' array' → logprob: -7.328852653503418
    9. 'dictionary' → logprob: -7.328852653503418
    10. 'line' → logprob: -8.203852653503418

Token 171: ' array' (ID: 2644)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8178691864013672
    2. '   ' → logprob: -1.3178691864013672
    3. 'dp' → logprob: -2.317869186401367
    4. 'import' → logprob: -3.192869186401367
    5. '[]' → logprob: -3.692869186401367
    6. 's' → logprob: -3.692869186401367
    7. '[' → logprob: -4.067869186401367
    8. ' dp' → logprob: -4.067869186401367
    9. '[][]' → logprob: -4.692869186401367
    10. '<|end|>' → logprob: -4.692869186401367

Token 172: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22542469203472137
    2. 'dp' → logprob: -2.2254247665405273
    3. '
' → logprob: -2.8504247665405273
    4. ' dp' → logprob: -4.225424766540527
    5. '[' → logprob: -5.100424766540527
    6. ' =' → logprob: -5.600424766540527
    7. ',' → logprob: -6.350424766540527
    8. ' ' → logprob: -6.600424766540527
    9. '_dp' → logprob: -6.850424766540527
    10. '(dp' → logprob: -7.100424766540527

Token 173: ' size' (ID: 2349)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -0.0201709121465683
    2. 'size' → logprob: -4.02017068862915
    3. 'length' → logprob: -6.52017068862915
    4. ' size' → logprob: -8.270171165466309
    5. '[' → logprob: -9.020171165466309
    6. ' ' → logprob: -9.145171165466309
    7. 'len' → logprob: -10.895171165466309
    8. ' length' → logprob: -11.020171165466309
    9. '   ' → logprob: -12.645171165466309
    10. ']' → logprob: -12.895171165466309

Token 174: ' ' (ID: 220)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -0.0019671740010380745
    2. ' ' → logprob: -6.251966953277588
    3. '```' → logprob: -10.876967430114746
    4. '   ' → logprob: -11.876967430114746
    5. '`' → logprob: -12.376967430114746
    6. '257' → logprob: -12.626967430114746
    7. '255' → logprob: -13.251967430114746
    8. '(' → logprob: -14.001967430114746
    9. '``' → logprob: -15.189467430114746
    10. '258' → logprob: -15.376967430114746

Token 175: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '(' → logprob: -15.875008583068848
    4. '```' → logprob: -16.12500762939453
    5. '255' → logprob: -16.62500762939453
    6. '257' → logprob: -17.25000762939453
    7. '   ' → logprob: -17.50000762939453
    8. '2' → logprob: -18.25000762939453
    9. '`' → logprob: -18.62500762939453
    10. '[' → logprob: -18.87500762939453

Token 176: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10544843226671219
    2. '   ' → logprob: -2.7304484844207764
    3. '
' → logprob: -3.8554484844207764
    4. ' dp' → logprob: -4.355448246002197
    5. '    
' → logprob: -7.980448246002197
    6. 'import' → logprob: -8.355448722839355
    7. '	dp' → logprob: -9.480448722839355
    8. '_dp' → logprob: -9.855448722839355
    9. '(dp' → logprob: -9.980448722839355
    10. ' ' → logprob: -10.480448722839355

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4966074824333191
    2. 'dp' → logprob: -0.9966074824333191
    3. ' dp' → logprob: -3.996607542037964
    4. '
' → logprob: -5.871607303619385
    5. 'import' → logprob: -8.121607780456543
    6. '    
' → logprob: -8.246607780456543
    7. '	dp' → logprob: -8.996607780456543
    8. '_dp' → logprob: -9.496607780456543
    9. '(dp' → logprob: -9.746607780456543
    10. 'cost' → logprob: -10.121607780456543

Token 178: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06645692884922028
    2. '   ' → logprob: -2.9414570331573486
    3. ' dp' → logprob: -4.8164567947387695
    4. 'import' → logprob: -6.1914567947387695
    5. '
' → logprob: -7.4414567947387695
    6. 'from' → logprob: -8.44145679473877
    7. '    
' → logprob: -9.19145679473877
    8. '	dp' → logprob: -9.19145679473877
    9. ' ' → logprob: -9.44145679473877
    10. '(dp' → logprob: -10.06645679473877

Token 179: ' we' (ID: 581)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.026921791955828667
    2. 'import' → logprob: -4.40192174911499
    3. ' dp' → logprob: -4.90192174911499
    4. '   ' → logprob: -5.15192174911499
    5. 'if' → logprob: -7.65192174911499
    6. 'from' → logprob: -7.77692174911499
    7. ' if' → logprob: -9.401922225952148
    8. ' import' → logprob: -10.151922225952148
    9. 'prev' → logprob: -11.026922225952148
    10. ' from' → logprob: -11.276922225952148

Token 180: ' also' (ID: 1217)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9403910040855408
    2. '=' → logprob: -1.0653910636901855
    3. 'import' → logprob: -1.5653910636901855
    4. 'continue' → logprob: -3.9403910636901855
    5. ' continue' → logprob: -4.6903910636901855
    6. 'for' → logprob: -5.0653910636901855
    7. '   ' → logprob: -5.8153910636901855
    8. ' need' → logprob: -5.8153910636901855
    9. ' have' → logprob: -6.4403910636901855
    10. ' for' → logprob: -6.4403910636901855

Token 181: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.46259915828704834
    2. 'store' → logprob: -1.5875991582870483
    3. 'keep' → logprob: -2.087599277496338
    4. 'maint' → logprob: -4.212599277496338
    5. 'initialize' → logprob: -4.587599277496338
    6. ' need' → logprob: -4.837599277496338
    7. ' store' → logprob: -5.837599277496338
    8. 'use' → logprob: -6.087599277496338
    9. 'prev' → logprob: -6.462599277496338
    10. ' keep' → logprob: -7.212599277496338

Token 182: ' previous' (ID: 5880)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10446690768003464
    2. 'to' → logprob: -2.4794669151306152
    3. ' a' → logprob: -4.479466915130615
    4. 'prev' → logprob: -6.854466915130615
    5. ' the' → logprob: -7.354466915130615
    6. ' previous' → logprob: -7.854466915130615
    7. ' ' → logprob: -7.854466915130615
    8. 'a' → logprob: -7.854466915130615
    9. 'previous' → logprob: -7.854466915130615
    10. ' back' → logprob: -8.104466438293457

Token 183: ' values' (ID: 4824)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.2264001369476318
    2. ' =' → logprob: -1.4764001369476318
    3. '_indices' → logprob: -2.351400136947632
    4. '_y' → logprob: -2.851400136947632
    5. '_states' → logprob: -3.351400136947632
    6. 'cost' → logprob: -3.601400136947632
    7. '<|end|>' → logprob: -3.726400136947632
    8. '_state' → logprob: -3.976400136947632
    9. 'indices' → logprob: -3.976400136947632
    10. ']' → logprob: -3.976400136947632

Token 184: ' to' (ID: 316)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10816801339387894
    2. '
' → logprob: -3.233168125152588
    3. ' dp' → logprob: -3.358168125152588
    4. 'prev' → logprob: -4.733168125152588
    5. '   ' → logprob: -5.233168125152588
    6. 'import' → logprob: -5.983168125152588
    7. 'cost' → logprob: -6.108168125152588
    8. '_dp' → logprob: -6.483168125152588
    9. ' prev' → logprob: -6.733168125152588
    10. '_prev' → logprob: -6.858168125152588

Token 185: ' reconstruct' (ID: 78298)
  Prédit: ' reconstruct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reconstruct' → logprob: -0.04104587808251381
    2. 're' → logprob: -3.791045904159546
    3. ' compute' → logprob: -5.416045665740967
    4. 'compute' → logprob: -5.791045665740967
    5. ' traceback' → logprob: -5.916045665740967
    6. ' back' → logprob: -5.916045665740967
    7. 'recover' → logprob: -6.541045665740967
    8. ' perform' → logprob: -7.041045665740967
    9. 'trace' → logprob: -7.916045665740967
    10. ' trace' → logprob: -8.041046142578125

Token 186: ',' (ID: 11)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.985927939414978
    2. 'paths' → logprob: -1.360927939414978
    3. ' paths' → logprob: -1.985927939414978
    4. ' the' → logprob: -2.3609280586242676
    5. ' path' → logprob: -2.3609280586242676
    6. ' ' → logprob: -4.360928058624268
    7. 'the' → logprob: -4.485928058624268
    8. 'dp' → logprob: -5.235928058624268
    9. '_path' → logprob: -5.735928058624268
    10. '   ' → logprob: -5.985928058624268

Token 187: ' but' (ID: 889)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.4441567361354828
    2. 'prev' → logprob: -1.6941567659378052
    3. 'so' → logprob: -2.4441566467285156
    4. '   ' → logprob: -3.3191566467285156
    5. ' and' → logprob: -4.319156646728516
    6. ' prev' → logprob: -4.444156646728516
    7. 'and' → logprob: -5.069156646728516
    8. ' but' → logprob: -5.319156646728516
    9. ' ' → logprob: -6.319156646728516
    10. 'for' → logprob: -6.569156646728516

Token 188: ' only' (ID: 1606)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.378085970878601
    2. 'the' → logprob: -1.753085970878601
    3. ' for' → logprob: -2.0030860900878906
    4. 'for' → logprob: -2.2530860900878906
    5. ' since' → logprob: -3.1280860900878906
    6. 'we' → logprob: -3.2530860900878906
    7. ' we' → logprob: -3.2530860900878906
    8. 'since' → logprob: -3.2530860900878906
    9. ' let's' → logprob: -3.3780860900878906
    10. ' in' → logprob: -4.128086090087891

Token 189: ' minimal' (ID: 19957)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.4222693145275116
    2. 'keep' → logprob: -1.922269344329834
    3. 'the' → logprob: -2.797269344329834
    4. 'one' → logprob: -3.547269344329834
    5. 'need' → logprob: -3.672269344329834
    6. 'for' → logprob: -3.797269344329834
    7. 'keeping' → logprob: -3.797269344329834
    8. 'st' → logprob: -4.047269344329834
    9. 'previous' → logprob: -4.922269344329834
    10. ' store' → logprob: -5.547269344329834

Token 190: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.14711955189704895
    2. '_cost' → logprob: -2.8971195220947266
    3. 'import' → logprob: -3.6471195220947266
    4. 's' → logprob: -3.8971195220947266
    5. ' cost' → logprob: -4.522119522094727
    6. 'dp' → logprob: -5.022119522094727
    7. '_prev' → logprob: -5.397119522094727
    8. ' costs' → logprob: -5.647119522094727
    9. 'prev' → logprob: -5.897119522094727
    10. '   ' → logprob: -7.022119522094727

Token 191: ' is' (ID: 382)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12648217380046844
    2. ' dp' → logprob: -3.3764822483062744
    3. '
' → logprob: -3.6264822483062744
    4. '   ' → logprob: -3.6264822483062744
    5. 'cost' → logprob: -4.001482009887695
    6. '_dp' → logprob: -5.626482009887695
    7. 'import' → logprob: -5.751482009887695
    8. 'prev' → logprob: -6.751482009887695
    9. '```' → logprob: -7.126482009887695
    10. ' =' → logprob: -7.251482009887695

Token 192: ' required' (ID: 3759)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.1596057415008545
    2. 'stored' → logprob: -2.7846057415008545
    3. 'required' → logprob: -2.9096057415008545
    4. ' needed' → logprob: -4.034605979919434
    5. 'necessary' → logprob: -5.159605979919434
    6. 'ke' → logprob: -5.784605979919434
    7. ' stored' → logprob: -6.159605979919434
    8. ' required' → logprob: -7.284605979919434
    9. 'import' → logprob: -7.534605979919434
    10. 'tracked' → logprob: -8.159605979919434

Token 193: ' here' (ID: 2105)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04305366054177284
    2. 'dp' → logprob: -3.29305362701416
    3. '
' → logprob: -6.16805362701416
    4. '    
' → logprob: -6.79305362701416
    5. 'cost' → logprob: -7.66805362701416
    6. 'import' → logprob: -7.66805362701416
    7. ' dp' → logprob: -7.91805362701416
    8. '<|end|>' → logprob: -9.54305362701416
    9. '```' → logprob: -9.79305362701416
    10. '_dp' → logprob: -9.91805362701416

Token 194: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3980252146720886
    2. 'dp' → logprob: -1.1480252742767334
    3. '
' → logprob: -5.398025035858154
    4. ' dp' → logprob: -5.648025035858154
    5. '    
' → logprob: -6.648025035858154
    6. 'import' → logprob: -7.023025035858154
    7. 'cost' → logprob: -9.148025512695312
    8. '	dp' → logprob: -9.148025512695312
    9. '_dp' → logprob: -9.273025512695312
    10. '(dp' → logprob: -9.648025512695312

Token 195: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4997137784957886
    2. '   ' → logprob: -1.1247137784957886
    3. '
' → logprob: -2.999713897705078
    4. ' dp' → logprob: -4.749713897705078
    5. '    
' → logprob: -6.124713897705078
    6. '	dp' → logprob: -6.374713897705078
    7. '_dp' → logprob: -6.624713897705078
    8. 'import' → logprob: -7.249713897705078
    9. '<|end|>' → logprob: -7.499713897705078
    10. '(dp' → logprob: -7.499713897705078

Token 196: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05127209424972534
    2. '   ' → logprob: -3.55127215385437
    3. ' dp' → logprob: -3.92627215385437
    4. 'import' → logprob: -6.676271915435791
    5. 'from' → logprob: -9.55127239227295
    6. 'cost' → logprob: -9.67627239227295
    7. ' ' → logprob: -10.30127239227295
    8. '	dp' → logprob: -10.92627239227295
    9. '
' → logprob: -11.17627239227295
    10. '(dp' → logprob: -11.17627239227295

Token 197: ' initial' (ID: 4871)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014039509929716587
    2. '   ' → logprob: -4.639039516448975
    3. 'import' → logprob: -6.014039516448975
    4. ' dp' → logprob: -6.639039516448975
    5. 'from' → logprob: -8.639039039611816
    6. 'prev' → logprob: -8.639039039611816
    7. 'INF' → logprob: -9.514039039611816
    8. 'if' → logprob: -10.139039039611816
    9. '
' → logprob: -11.389039039611816
    10. 'cost' → logprob: -11.514039039611816

Token 198: ' condition' (ID: 7060)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.7991798520088196
    2. '_dp' → logprob: -0.7991798520088196
    3. '_' → logprob: -3.299179792404175
    4. 'ization' → logprob: -3.299179792404175
    5. ' =' → logprob: -5.424180030822754
    6. 'dp' → logprob: -5.674180030822754
    7. 'cost' → logprob: -6.174180030822754
    8. '=' → logprob: -6.424180030822754
    9. 'izing' → logprob: -6.424180030822754
    10. '_prev' → logprob: -6.549180030822754

Token 199: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8529754281044006
    2. ' dp' → logprob: -1.2279753684997559
    3. '   ' → logprob: -1.4779753684997559
    4. '
' → logprob: -3.102975368499756
    5. ':' → logprob: -5.727975368499756
    6. 'cost' → logprob: -6.977975368499756
    7. '    
' → logprob: -7.352975368499756
    8. ' =' → logprob: -7.352975368499756
    9. ' cost' → logprob: -8.102975845336914
    10. '(dp' → logprob: -8.102975845336914

Token 200: ' y' (ID: 342)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1506076455116272
    2. ' dp' → logprob: -2.0256075859069824
    3. '   ' → logprob: -5.650607585906982
    4. 'import' → logprob: -5.650607585906982
    5. 'cost' → logprob: -8.40060806274414
    6. 'prev' → logprob: -8.65060806274414
    7. ' import' → logprob: -8.77560806274414
    8. ' ' → logprob: -9.77560806274414
    9. ' prev' → logprob: -10.15060806274414
    10. ' cost' → logprob: -10.52560806274414

Token 201: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.545153796672821
    2. '=' → logprob: -0.920153796672821
    3. '_cost' → logprob: -5.295153617858887
    4. 's' → logprob: -5.545153617858887
    5. 'cost' → logprob: -6.045153617858887
    6. 'dp' → logprob: -6.545153617858887
    7. '0' → logprob: -6.670153617858887
    8. ' in' → logprob: -6.920153617858887
    9. 'range' → logprob: -7.170153617858887
    10. '==' → logprob: -7.295153617858887

Token 202: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3006335198879242
    2. '=' → logprob: -2.175633430480957
    3. '_cost' → logprob: -2.800633430480957
    4. 's' → logprob: -3.175633430480957
    5. '_range' → logprob: -4.300633430480957
    6. '_values' → logprob: -4.925633430480957
    7. ' in' → logprob: -4.925633430480957
    8. 'cost' → logprob: -5.800633430480957
    9. 'range' → logprob: -6.175633430480957
    10. 'in' → logprob: -6.300633430480957

Token 203: '128' (ID: 8076)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.44843876361846924
    2. 'cl' → logprob: -1.6984387636184692
    3. '0' → logprob: -2.3234386444091797
    4. 'code' → logprob: -3.3234386444091797
    5. '[' → logprob: -4.07343864440918
    6. '[x' → logprob: -4.19843864440918
    7. 'range' → logprob: -5.94843864440918
    8. ' x' → logprob: -6.07343864440918
    9. ' clamp' → logprob: -6.44843864440918
    10. '255' → logprob: -6.82343864440918

Token 204: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7501464486122131
    2. '   ' → logprob: -1.3751463890075684
    3. 'dp' → logprob: -1.3751463890075684
    4. ' dp' → logprob: -4.875146389007568
    5. '    
' → logprob: -5.125146389007568
    6. 'cost' → logprob: -5.500146389007568
    7. '	dp' → logprob: -7.250146389007568
    8. 'import' → logprob: -7.500146389007568
    9. '_dp' → logprob: -7.625146389007568
    10. '(dp' → logprob: -7.750146389007568

Token 205: ' no' (ID: 860)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5214982032775879
    2. 'prev' → logprob: -1.271498203277588
    3. 'cost' → logprob: -3.521498203277588
    4. ' prev' → logprob: -3.771498203277588
    5. ' dp' → logprob: -4.021498203277588
    6. 'y' → logprob: -4.396498203277588
    7. '   ' → logprob: -4.396498203277588
    8. 'import' → logprob: -5.146498203277588
    9. 'for' → logprob: -5.146498203277588
    10. '#' → logprob: -5.771498203277588

Token 206: ' cost' (ID: 3097)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.8550418615341187
    2. 't' → logprob: -1.1050418615341187
    3. ' output' → logprob: -2.980041980743408
    4. ' previous' → logprob: -3.980041980743408
    5. 'de' → logprob: -3.980041980743408
    6. ' return' → logprob: -4.105041980743408
    7. 'n' → logprob: -4.355041980743408
    8. ' cost' → logprob: -4.480041980743408
    9. ' prior' → logprob: -4.605041980743408
    10. ' space' → logprob: -4.730041980743408

Token 207: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6373785734176636
    2. 'dp' → logprob: -1.2623785734176636
    3. '   ' → logprob: -2.012378692626953
    4. ' dp' → logprob: -3.512378692626953
    5. 'cost' → logprob: -4.387378692626953
    6. '    
' → logprob: -5.262378692626953
    7. ' cost' → logprob: -6.637378692626953
    8. 'prev' → logprob: -7.137378692626953
    9. '_dp' → logprob: -7.262378692626953
    10. '	dp' → logprob: -7.387378692626953

Token 208: ' i' (ID: 575)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.329935908317566
    2. ' y' → logprob: -1.579935908317566
    3. 'the' → logprob: -1.829935908317566
    4. ' first' → logprob: -2.9549360275268555
    5. ' starting' → logprob: -2.9549360275268555
    6. ' position' → logprob: -3.2049360275268555
    7. ' initial' → logprob: -3.4549360275268555
    8. 'position' → logprob: -3.8299360275268555
    9. 'starting' → logprob: -3.8299360275268555
    10. 'first' → logprob: -3.9549360275268555

Token 209: '=' (ID: 28)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4393119215965271
    2. 'nd' → logprob: -1.4393119812011719
    3. '0' → logprob: -3.814311981201172
    4. 'n' → logprob: -4.064311981201172
    5. ' for' → logprob: -4.064311981201172
    6. '   ' → logprob: -4.189311981201172
    7. '=' → logprob: -4.564311981201172
    8. 't' → logprob: -4.814311981201172
    9. ' =' → logprob: -5.439311981201172
    10. 'for' → logprob: -5.439311981201172

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020569102838635445
    2. '-' → logprob: -4.270569324493408
    3. ' ' → logprob: -5.145569324493408
    4. ' -' → logprob: -7.645569324493408
    5. '1' → logprob: -9.52056884765625
    6. '   ' → logprob: -13.64556884765625
    7. 's' → logprob: -13.77056884765625
    8. '  ' → logprob: -13.77056884765625
    9. '=' → logprob: -14.02056884765625
    10. 'i' → logprob: -14.08306884765625

Token 211: ' because' (ID: 2236)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.29682546854019165
    2. '
' → logprob: -2.046825408935547
    3. ' dp' → logprob: -2.546825408935547
    4. '   ' → logprob: -3.296825408935547
    5. 'cost' → logprob: -5.296825408935547
    6. 'import' → logprob: -6.171825408935547
    7. '    
' → logprob: -6.796825408935547
    8. ' cost' → logprob: -7.296825408935547
    9. '	dp' → logprob: -7.671825408935547
    10. ' for' → logprob: -7.796825408935547

Token 212: ' no' (ID: 860)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.976177453994751
    2. ' the' → logprob: -1.976177453994751
    3. ' we' → logprob: -2.101177453994751
    4. ' it' → logprob: -2.476177453994751
    5. 'y' → logprob: -2.726177453994751
    6. ' x' → logprob: -3.226177453994751
    7. 'x' → logprob: -3.476177453994751
    8. ' initial' → logprob: -3.851177453994751
    9. ' it's' → logprob: -3.976177453994751
    10. ' output' → logprob: -4.101177215576172

Token 213: ' error' (ID: 2915)
  Prédit: ' previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' previous' → logprob: -0.37741246819496155
    2. ' output' → logprob: -2.1274125576019287
    3. 'previous' → logprob: -3.1274125576019287
    4. ' prior' → logprob: -3.2524125576019287
    5. ' input' → logprob: -3.8774125576019287
    6. 'input' → logprob: -4.12741231918335
    7. 'output' → logprob: -4.25241231918335
    8. ' samples' → logprob: -4.25241231918335
    9. 'prev' → logprob: -4.75241231918335
    10. 'samples' → logprob: -4.87741231918335

Token 214: ' at' (ID: 540)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025025339797139168
    2. '<|end|>' → logprob: -4.400025367736816
    3. '   ' → logprob: -5.025025367736816
    4. 'dp' → logprob: -6.650025367736816
    5. '    
' → logprob: -6.775025367736816
    6. '<|end|>' → logprob: -6.900025367736816
    7. '

' → logprob: -7.400025367736816
    8. '  
' → logprob: -7.525025367736816
    9. ' for' → logprob: -8.775025367736816
    10. '   
' → logprob: -9.025025367736816

Token 215: ' i' (ID: 575)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.9221434593200684
    2. ' position' → logprob: -1.9221434593200684
    3. ' all' → logprob: -1.9221434593200684
    4. ' i' → logprob: -2.5471434593200684
    5. 'position' → logprob: -2.6721434593200684
    6. 'all' → logprob: -2.7971434593200684
    7. 'i' → logprob: -3.0471434593200684
    8. 'the' → logprob: -3.1721434593200684
    9. ' first' → logprob: -3.2971434593200684
    10. ' initial' → logprob: -3.2971434593200684

Token 216: '=' (ID: 28)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3749411404132843
    2. 'dp' → logprob: -1.874941110610962
    3. '
' → logprob: -2.499941110610962
    4. ']' → logprob: -3.499941110610962
    5. ')' → logprob: -4.124941349029541
    6. '    
' → logprob: -5.374941349029541
    7. 'cost' → logprob: -5.499941349029541
    8. ',' → logprob: -6.124941349029541
    9. '[' → logprob: -6.249941349029541
    10. 's' → logprob: -6.249941349029541

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01625383272767067
    2. ' ' → logprob: -4.51625394821167
    3. '-' → logprob: -5.39125394821167
    4. '1' → logprob: -8.016253471374512
    5. ' -' → logprob: -8.266253471374512
    6. '   ' → logprob: -11.516253471374512
    7. '```' → logprob: -11.641253471374512
    8. 'i' → logprob: -12.641253471374512
    9. '=' → logprob: -12.766253471374512
    10. 'x' → logprob: -12.891253471374512

Token 218: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0429098904132843
    2. 'dp' → logprob: -3.417909860610962
    3. '   ' → logprob: -5.292910099029541
    4. '<|end|>' → logprob: -6.417910099029541
    5. '    
' → logprob: -7.417910099029541
    6. ' dp' → logprob: -7.792910099029541
    7. 'cost' → logprob: -8.417909622192383
    8. '

' → logprob: -8.917909622192383
    9. '<|end|>' → logprob: -8.917909622192383
    10. '  
' → logprob: -8.917909622192383

Token 219: ' problem' (ID: 4792)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.805850863456726
    2. 'output' → logprob: -1.930850863456726
    3. 'the' → logprob: -2.0558509826660156
    4. ' output' → logprob: -2.4308509826660156
    5. ' input' → logprob: -2.5558509826660156
    6. ' the' → logprob: -2.9308509826660156
    7. 'cl' → logprob: -2.9308509826660156
    8. 'prediction' → logprob: -3.3058509826660156
    9. ' code' → logprob: -3.4308509826660156
    10. ' prediction' → logprob: -3.5558509826660156

Token 220: '?
' (ID: 3901)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.48641064763069153
    2. '
' → logprob: -1.1114106178283691
    3. ' dp' → logprob: -3.736410617828369
    4. '   ' → logprob: -4.111410617828369
    5. 'cost' → logprob: -5.111410617828369
    6. '    
' → logprob: -6.611410617828369
    7. ' for' → logprob: -6.736410617828369
    8. 'for' → logprob: -6.736410617828369
    9. ' cost' → logprob: -7.486410617828369
    10. ' 
' → logprob: -7.486410617828369

Token 221: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18246608972549438
    2. 'dp' → logprob: -2.4324660301208496
    3. '<|end|>' → logprob: -2.9324660301208496
    4. '   ' → logprob: -5.18246603012085
    5. ')' → logprob: -5.80746603012085
    6. '#' → logprob: -5.80746603012085
    7. '<|end|>' → logprob: -6.05746603012085
    8. '  
' → logprob: -6.68246603012085
    9. '

' → logprob: -6.80746603012085
    10. 'for' → logprob: -6.80746603012085

Token 222: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05352938175201416
    2. ' 
' → logprob: -4.678529262542725
    3. '#' (adapté à ' #') → logprob: -5.178529262542725
    4. '<|end|>' → logprob: -5.178529262542725
    5. 'dp' → logprob: -5.178529262542725
    6. '\n' → logprob: -5.303529262542725
    7. '  
' → logprob: -5.428529262542725
    8. '   ' → logprob: -5.678529262542725
    9. ' ' → logprob: -6.053529262542725
    10. '    
' → logprob: -6.553529262542725

Token 223: ' careful' (ID: 25120)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11483083665370941
    2. ' dp' → logprob: -2.489830732345581
    3. '   ' → logprob: -3.864830732345581
    4. 'import' → logprob: -6.48983097076416
    5. ' if' → logprob: -6.98983097076416
    6. 'if' → logprob: -7.61483097076416
    7. 'cost' → logprob: -7.98983097076416
    8. ' ' → logprob: -8.11483097076416
    9. 'prev' → logprob: -8.61483097076416
    10. ' for' → logprob: -8.98983097076416

Token 224: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0910032987594604
    2. 'for' → logprob: -1.5910032987594604
    3. ' for' → logprob: -1.8410032987594604
    4. '
' → logprob: -2.09100341796875
    5. '#' → logprob: -3.34100341796875
    6. ',' → logprob: -3.96600341796875
    7. 'import' → logprob: -4.09100341796875
    8. '=' → logprob: -4.34100341796875
    9. ' ' → logprob: -4.34100341796875
    10. ':' → logprob: -4.46600341796875

Token 225: ' y' (ID: 342)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8743157386779785
    2. ' the' → logprob: -2.1243157386779785
    3. 'dp' → logprob: -3.1243157386779785
    4. '#' → logprob: -3.1243157386779785
    5. 'there' → logprob: -3.1243157386779785
    6. 'initial' → logprob: -3.2493157386779785
    7. 'since' → logprob: -3.7493157386779785
    8. 'for' → logprob: -3.7493157386779785
    9. 'we' → logprob: -3.8743157386779785
    10. 'y' → logprob: -3.9993157386779785

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740610718727112
    2. '_' → logprob: -1.2240610122680664
    3. '[' → logprob: -3.5990610122680664
    4. '=' → logprob: -3.5990610122680664
    5. ' =' → logprob: -4.599061012268066
    6. ' at' → logprob: -5.099061012268066
    7. ' _' → logprob: -6.474061012268066
    8. ' ' → logprob: -7.099061012268066
    9. 'ields' → logprob: -7.099061012268066
    10. '[i' → logprob: -7.099061012268066

Token 227: ' corresponds' (ID: 66938)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4125494658946991
    2. '=' → logprob: -1.1625494956970215
    3. ' is' → logprob: -4.0375494956970215
    4. ' should' → logprob: -6.1625494956970215
    5. '[' → logprob: -7.0375494956970215
    6. ' must' → logprob: -7.0375494956970215
    7. ' at' → logprob: -7.5375494956970215
    8. '   ' → logprob: -7.9125494956970215
    9. ' ' → logprob: -7.9125494956970215
    10. ' can' → logprob: -8.287549018859863

Token 228: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6329862475395203
    2. 'to' → logprob: -0.7579862475395203
    3. '   ' → logprob: -9.632986068725586
    4. '_to' → logprob: -9.757986068725586
    5. 'y' → logprob: -10.007986068725586
    6. 'i' → logprob: -10.007986068725586
    7. ' y' → logprob: -10.382986068725586
    8. ' i' → logprob: -10.882986068725586
    9. '0' → logprob: -11.007986068725586
    10. ' ' → logprob: -11.132986068725586

Token 229: ' i' (ID: 575)
  Prédit: '128'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '128' → logprob: -0.006620992906391621
    2. ' ' → logprob: -5.50662088394165
    3. '127' → logprob: -7.50662088394165
    4. 'initial' → logprob: -7.63162088394165
    5. 'index' → logprob: -8.256621360778809
    6. '0' → logprob: -8.631621360778809
    7. 'x' → logprob: -8.881621360778809
    8. 'the' → logprob: -9.006621360778809
    9. 'i' → logprob: -9.131621360778809
    10. 'position' → logprob: -9.256621360778809

Token 230: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5008471012115479
    2. '=' → logprob: -1.2508471012115479
    3. '0' → logprob: -3.000847101211548
    4. ')' → logprob: -4.125846862792969
    5. ' ' → logprob: -4.375846862792969
    6. '   ' → logprob: -4.750846862792969
    7. '[' → logprob: -4.875846862792969
    8. ' for' → logprob: -6.000846862792969
    9. ']' → logprob: -6.250846862792969
    10. ' +=' → logprob: -7.000846862792969

Token 231: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023047706112265587
    2. '-' → logprob: -3.898047685623169
    3. ' ' → logprob: -6.148047924041748
    4. ' -' → logprob: -8.27304744720459
    5. '1' → logprob: -9.27304744720459
    6. '   ' → logprob: -12.14804744720459
    7. '  ' → logprob: -12.77304744720459
    8. '=' → logprob: -13.71054744720459
    9. '	' → logprob: -14.52304744720459
    10. 'i' → logprob: -14.64804744720459

Token 232: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13327138125896454
    2. 'dp' → logprob: -2.6332714557647705
    3. '   ' → logprob: -3.1332714557647705
    4. '<|end|>' → logprob: -5.633271217346191
    5. ' dp' → logprob: -6.508271217346191
    6. '    
' → logprob: -6.633271217346191
    7. 'cost' → logprob: -7.758271217346191
    8. '<|end|>' → logprob: -8.383271217346191
    9. ',' → logprob: -8.633271217346191
    10. '_dp' → logprob: -8.633271217346191

Token 233: ' but' (ID: 889)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.2929767668247223
    2. '#' → logprob: -2.9179768562316895
    3. 'so' → logprob: -3.6679768562316895
    4. ' continue' → logprob: -3.9179768562316895
    5. ' but' → logprob: -4.0429768562316895
    6. ' y' → logprob: -4.0429768562316895
    7. 'prev' → logprob: -4.5429768562316895
    8. ' prev' → logprob: -4.6679768562316895
    9. '   ' → logprob: -4.7929768562316895
    10. 'y' → logprob: -4.9179768562316895

Token 234: ' input' (ID: 3422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.470710039138794
    2. 'i' → logprob: -1.720710039138794
    3. 'the' → logprob: -1.845710039138794
    4. 'range' → logprob: -2.720710039138794
    5. 'y' → logprob: -2.845710039138794
    6. ' the' → logprob: -3.095710039138794
    7. ' for' → logprob: -3.220710039138794
    8. 'we' → logprob: -3.345710039138794
    9. 'dp' → logprob: -3.720710039138794
    10. ' we' → logprob: -3.720710039138794

Token 235: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4774228632450104
    2. ']' → logprob: -2.9774229526519775
    3. ' =' → logprob: -3.2274229526519775
    4. '[' → logprob: -3.4774229526519775
    5. '<|end|>' → logprob: -3.4774229526519775
    6. ',' → logprob: -3.7274229526519775
    7. '   ' → logprob: -3.8524229526519775
    8. '=' → logprob: -3.8524229526519775
    9. '[i' → logprob: -3.9774229526519775
    10. ' ' → logprob: -4.227422714233398

Token 236: ' has' (ID: 853)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3659310340881348
    2. ' =' → logprob: -1.7409310340881348
    3. ')' → logprob: -1.9909310340881348
    4. '   ' → logprob: -2.1159310340881348
    5. '0' → logprob: -2.4909310340881348
    6. '[i' → logprob: -3.2409310340881348
    7. '=' → logprob: -3.3659310340881348
    8. ',' → logprob: -3.6159310340881348
    9. ' for' → logprob: -3.8659310340881348
    10. ' ' → logprob: -3.9909310340881348

Token 237: ' length' (ID: 5517)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011177030391991138
    2. 'length' → logprob: -5.136177062988281
    3. ' N' → logprob: -6.386177062988281
    4. '0' → logprob: -6.886177062988281
    5. ' length' → logprob: -7.511177062988281
    6. ' no' → logprob: -7.636177062988281
    7. 'no' → logprob: -8.011177062988281
    8. 'indices' → logprob: -8.261177062988281
    9. 'i' → logprob: -8.386177062988281
    10. 'len' → logprob: -8.511177062988281

Token 238: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8680816292762756
    2. ' ' → logprob: -1.6180815696716309
    3. 'N' → logprob: -1.9930815696716309
    4. '=' → logprob: -2.368081569671631
    5. ')' → logprob: -3.118081569671631
    6. ' =' → logprob: -3.618081569671631
    7. ' N' → logprob: -3.993081569671631
    8. '   ' → logprob: -4.493081569671631
    9. '<|end|>' → logprob: -4.493081569671631
    10. '1' → logprob: -4.618081569671631

Token 239: ' samples' (ID: 16902)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7432878613471985
    2. '   ' → logprob: -0.7432878613471985
    3. '<|end|>' → logprob: -3.4932878017425537
    4. '    
' → logprob: -5.493288040161133
    5. ' for' → logprob: -6.243288040161133
    6. '  
' → logprob: -6.618288040161133
    7. '\n' → logprob: -6.743288040161133
    8. ' ' → logprob: -6.868288040161133
    9. ',' → logprob: -6.993288040161133
    10. ')' → logprob: -6.993288040161133

Token 240: ' x' (ID: 1215)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5413117408752441
    2. '   ' → logprob: -1.1663117408752441
    3. 'dp' → logprob: -2.541311740875244
    4. '<|end|>' → logprob: -4.541311740875244
    5. '    
' → logprob: -5.541311740875244
    6. 'cost' → logprob: -5.791311740875244
    7. ' dp' → logprob: -6.166311740875244
    8. '

' → logprob: -6.916311740875244
    9. '  
' → logprob: -7.041311740875244
    10. ')' → logprob: -7.291311740875244

Token 241: '[' (ID: 58)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13697516918182373
    2. '   ' → logprob: -3.0119752883911133
    3. '<|end|>' → logprob: -4.261975288391113
    4. ']' → logprob: -5.011975288391113
    5. ' =' → logprob: -5.136975288391113
    6. '[' → logprob: -5.136975288391113
    7. ')' → logprob: -5.261975288391113
    8. '0' → logprob: -5.386975288391113
    9. ',' → logprob: -5.636975288391113
    10. '<|end|>' → logprob: -5.761975288391113

Token 242: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.522171676158905
    2. '0' → logprob: -1.3971717357635498
    3. 'i' → logprob: -2.02217173576355
    4. '])' → logprob: -4.772171497344971
    5. ' ' → logprob: -5.772171497344971
    6. ')' → logprob: -5.772171497344971
    7. '   ' → logprob: -6.022171497344971
    8. ' ]' → logprob: -6.147171497344971
    9. '[' → logprob: -6.397171497344971
    10. '[i' → logprob: -6.772171497344971

Token 243: '..' (ID: 485)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008474627509713173
    2. '],' → logprob: -5.383474826812744
    3. ' ]' → logprob: -6.758474826812744
    4. '-' → logprob: -7.008474826812744
    5. ']:' → logprob: -7.008474826812744
    6. ']==' → logprob: -9.008474349975586
    7. '].' → logprob: -9.133474349975586
    8. ' -' → logprob: -9.508474349975586
    9. '+' → logprob: -9.633474349975586
    10. ']-' → logprob: -9.758474349975586

Token 244: 'N' (ID: 45)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6483568549156189
    2. 'N' → logprob: -0.8983568549156189
    3. ']' → logprob: -3.0233569145202637
    4. ' -' → logprob: -4.898356914520264
    5. ' N' → logprob: -4.898356914520264
    6. ' ' → logprob: -6.023356914520264
    7. '0' → logprob: -6.273356914520264
    8. '1' → logprob: -7.273356914520264
    9. ')' → logprob: -8.148356437683105
    10. '])' → logprob: -8.398356437683105

Token 245: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010250733233988285
    2. ']' → logprob: -4.635250568389893
    3. ' -' → logprob: -7.760250568389893
    4. ')' → logprob: -10.88525104522705
    5. '],' → logprob: -11.38525104522705
    6. '1' → logprob: -11.63525104522705
    7. ' ]' → logprob: -11.76025104522705
    8. '   ' → logprob: -12.38525104522705
    9. ']-' → logprob: -12.88525104522705
    10. '[' → logprob: -13.13525104522705

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.625035285949707
    3. ')' → logprob: -12.250035285949707
    4. ']' → logprob: -12.750035285949707
    5. '-' → logprob: -13.000035285949707
    6. '   ' → logprob: -15.375035285949707
    7. '```' → logprob: -15.375035285949707
    8. '2' → logprob: -15.625035285949707
    9. 'N' → logprob: -15.625035285949707
    10. '0' → logprob: -15.625035285949707

Token 247: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5887258052825928
    2. '   ' → logprob: -1.0887258052825928
    3. ')' → logprob: -2.3387258052825928
    4. '<|end|>' → logprob: -5.338726043701172
    5. '
' → logprob: -6.213726043701172
    6. '.' → logprob: -7.088726043701172
    7. ',' → logprob: -7.088726043701172
    8. '  ' → logprob: -7.838726043701172
    9. '<|end|>' → logprob: -7.963726043701172
    10. '    
' → logprob: -8.213726043701172

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47076019644737244
    2. '
' → logprob: -1.0957602262496948
    3. '<|end|>' → logprob: -4.220760345458984
    4. 'dp' → logprob: -4.470760345458984
    5. '    
' → logprob: -5.220760345458984
    6. ' ' → logprob: -6.470760345458984
    7. ']' → logprob: -6.595760345458984
    8. '[' → logprob: -6.595760345458984
    9. ')' → logprob: -7.220760345458984
    10. '  
' → logprob: -7.595760345458984

Token 249: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14386864006519318
    2. '
' → logprob: -2.6438686847686768
    3. ' dp' → logprob: -3.6438686847686768
    4. '   ' → logprob: -4.018868446350098
    5. ' 
' → logprob: -5.768868446350098
    6. ' ' → logprob: -5.768868446350098
    7. 'import' → logprob: -6.018868446350098
    8. '    
' → logprob: -6.768868446350098
    9. '  
' → logprob: -6.768868446350098
    10. '#' (adapté à ' #') → logprob: -7.018868446350098

Token 250: ' from' (ID: 591)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.015540960244834423
    2. '   ' → logprob: -4.765541076660156
    3. 'import' → logprob: -5.390541076660156
    4. ' dp' → logprob: -7.140541076660156
    5. 'INF' → logprob: -7.265541076660156
    6. 'prev' → logprob: -7.640541076660156
    7. 'from' → logprob: -8.640541076660156
    8. 'for' → logprob: -9.640541076660156
    9. 'inf' → logprob: -10.515541076660156
    10. '
' → logprob: -10.640541076660156

Token 251: ' problem' (ID: 4792)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7959668636322021
    2. ' here' → logprob: -1.2959668636322021
    3. ' ' → logprob: -2.795966863632202
    4. 'here' → logprob: -2.795966863632202
    5. '0' → logprob: -3.170966863632202
    6. ' i' → logprob: -3.545966863632202
    7. 'range' → logprob: -3.545966863632202
    8. 'collections' → logprob: -3.545966863632202
    9. ' collections' → logprob: -5.420967102050781
    10. '1' → logprob: -5.670967102050781

Token 252: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0671883821487427
    2. '[' → logprob: -1.9421883821487427
    3. '=' → logprob: -2.192188262939453
    4. ':' → logprob: -2.442188262939453
    5. '[i' → logprob: -2.692188262939453
    6. '_' → logprob: -2.942188262939453
    7. 'import' → logprob: -3.567188262939453
    8. ' =' → logprob: -3.567188262939453
    9. ',' → logprob: -3.817188262939453
    10. ')' → logprob: -3.817188262939453

Token 253: ' y' (ID: 342)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.3454087972640991
    2. 'dp' → logprob: -1.7204087972640991
    3. '#' → logprob: -1.9704087972640991
    4. '   ' → logprob: -2.4704089164733887
    5. ' pass' → logprob: -2.5954089164733887
    6. 'prev' → logprob: -2.7204089164733887
    7. 'for' → logprob: -3.5954089164733887
    8. 'y' → logprob: -3.7204089164733887
    9. ' for' → logprob: -3.8454089164733887
    10. 'import' → logprob: -3.9704089164733887

Token 254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6441373229026794
    2. '_' → logprob: -1.6441373825073242
    3. '[' → logprob: -1.7691373825073242
    4. '[i' → logprob: -3.269137382507324
    5. ' =' → logprob: -4.019137382507324
    6. '=' → logprob: -4.769137382507324
    7. 'i' → logprob: -4.894137382507324
    8. ' is' → logprob: -5.019137382507324
    9. '_i' → logprob: -5.269137382507324
    10. ' at' → logprob: -5.394137382507324

Token 255: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5300632119178772
    2. ' =' → logprob: -0.9050632119178772
    3. '[' → logprob: -5.530063152313232
    4. ' is' → logprob: -7.280063152313232
    5. '0' → logprob: -7.530063152313232
    6. ' should' → logprob: -8.15506362915039
    7. ' must' → logprob: -8.40506362915039
    8. '=y' → logprob: -8.53006362915039
    9. ' ' → logprob: -9.03006362915039
    10. '=[]' → logprob: -9.40506362915039

Token 256: '128' (ID: 8076)
  Prédit: '128'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '128' → logprob: -0.004088609013706446
    2. ' ' → logprob: -5.504088401794434
    3. '   ' → logprob: -12.629088401794434
    4. '127' → logprob: -13.004088401794434
    5. '0' → logprob: -13.379088401794434
    6. '  ' → logprob: -13.941588401794434
    7. '```' → logprob: -15.004088401794434
    8. '129' → logprob: -15.066588401794434
    9. '126' → logprob: -16.00408935546875
    10. '	' → logprob: -16.12908935546875

Token 257: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14406508207321167
    2. '   ' → logprob: -2.6440651416778564
    3. '<|end|>' → logprob: -3.1440651416778564
    4. '<|end|>' → logprob: -4.644064903259277
    5. 'dp' → logprob: -5.519064903259277
    6. '    
' → logprob: -6.394064903259277
    7. ',' → logprob: -6.644064903259277
    8. ')' → logprob: -7.394064903259277
    9. 'import' → logprob: -7.644064903259277
    10. '

' → logprob: -7.644064903259277

Token 258: 'initial' (ID: 17493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013799804262816906
    2. ')
' → logprob: -5.263799667358398
    3. ' )' → logprob: -5.888799667358398
    4. '),' → logprob: -6.138799667358398
    5. ' for' → logprob: -7.138799667358398
    6. ',' → logprob: -7.138799667358398
    7. ' at' → logprob: -7.263799667358398
    8. ' is' → logprob: -8.513799667358398
    9. ')
' → logprob: -8.638799667358398
    10. '   ' → logprob: -9.013799667358398

Token 259: ')
' (ID: 446)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.3567443788051605
    2. ')' → logprob: -1.731744408607483
    3. 'value' → logprob: -2.7317442893981934
    4. ' )' → logprob: -3.8567442893981934
    5. ' output' → logprob: -4.856744289398193
    6. 'y' → logprob: -5.606744289398193
    7. ' cost' → logprob: -5.606744289398193
    8. ' state' → logprob: -5.981744289398193
    9. 'ization' → logprob: -5.981744289398193
    10. '_value' → logprob: -6.481744289398193

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026378102600574493
    2. 'dp' → logprob: -4.526378154754639
    3. '    
' → logprob: -5.401378154754639
    4. '
' → logprob: -5.651378154754639
    5. ')' → logprob: -5.901378154754639
    6. '<|end|>' → logprob: -6.276378154754639
    7. ']' → logprob: -7.651378154754639
    8. ',' → logprob: -8.02637767791748
    9. '    ' → logprob: -8.65137767791748
    10. ' dp' → logprob: -8.77637767791748

Token 261: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4692545533180237
    2. 'dp' → logprob: -1.094254493713379
    3. ' dp' → logprob: -4.094254493713379
    4. '
' → logprob: -4.219254493713379
    5. '    
' → logprob: -5.594254493713379
    6. 'DP' → logprob: -7.594254493713379
    7. 'import' → logprob: -7.719254493713379
    8. '    ' → logprob: -7.844254493713379
    9. '_dp' → logprob: -7.844254493713379
    10. ')' → logprob: -8.094254493713379

Token 262: ' and' (ID: 326)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11924633383750916
    2. ' dp' → logprob: -2.494246244430542
    3. '   ' → logprob: -3.869246244430542
    4. 'import' → logprob: -5.244246482849121
    5. ' ' → logprob: -7.119246482849121
    6. 'prev' → logprob: -7.494246482849121
    7. ')' → logprob: -7.994246482849121
    8. ' for' → logprob: -8.244246482849121
    9. 'for' → logprob: -8.244246482849121
    10. 'y' → logprob: -8.494246482849121

Token 263: ' for' (ID: 395)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.8969122171401978
    2. 'for' → logprob: -1.1469122171401978
    3. 'y' → logprob: -2.771912097930908
    4. ' prev' → logprob: -2.896912097930908
    5. ' for' → logprob: -3.021912097930908
    6. ' y' → logprob: -3.146912097930908
    7. 'dp' → logprob: -4.021912097930908
    8. 'previous' → logprob: -4.146912097930908
    9. '   ' → logprob: -4.896912097930908
    10. ' previous' → logprob: -5.271912097930908

Token 264: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38849741220474243
    2. ' i' → logprob: -1.1384973526000977
    3. ' each' → logprob: -8.263497352600098
    4. ' the' → logprob: -8.263497352600098
    5. ' y' → logprob: -8.638497352600098
    6. 'each' → logprob: -8.888497352600098
    7. 'y' → logprob: -9.263497352600098
    8. ' next' → logprob: -9.263497352600098
    9. 'the' → logprob: -9.513497352600098
    10. ' all' → logprob: -9.638497352600098

Token 265: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04311234876513481
    2. 'in' → logprob: -3.293112277984619
    3. '=' → logprob: -5.543112277984619
    4. ' =' → logprob: -7.668112277984619
    5. '0' → logprob: -8.418112754821777
    6. ' ' → logprob: -8.793112754821777
    7. '   ' → logprob: -9.043112754821777
    8. 'from' → logprob: -10.043112754821777
    9. '1' → logprob: -10.168112754821777
    10. ')' → logprob: -10.793112754821777

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028372086584568024
    2. '0' → logprob: -3.778372049331665
    3. ' ' → logprob: -5.278372287750244
    4. '   ' → logprob: -11.403371810913086
    5. '2' → logprob: -14.903371810913086
    6. 'range' → logprob: -15.278371810913086
    7. '
' → logprob: -15.840871810913086
    8. '  ' → logprob: -16.090871810913086
    9. '    ' → logprob: -16.340871810913086
    10. '=' → logprob: -16.403371810913086

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12710973620414734
    2. '0' → logprob: -2.1271097660064697
    3. ' ' → logprob: -8.62710952758789
    4. '   ' → logprob: -13.75210952758789
    5. '2' → logprob: -14.12710952758789
    6. 'range' → logprob: -15.50210952758789
    7. 'i' → logprob: -16.00210952758789
    8. '
' → logprob: -16.25210952758789
    9. '(' → logprob: -16.62710952758789
    10. '```' → logprob: -17.25210952758789

Token 268: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04569007828831673
    2. 'to' → logprob: -3.4206900596618652
    3. '   ' → logprob: -4.920690059661865
    4. ':' → logprob: -5.920690059661865
    5. '<|end|>' → logprob: -7.295690059661865
    6. ',' → logprob: -7.920690059661865
    7. ' ' → logprob: -8.420690536499023
    8. '    ' → logprob: -8.545690536499023
    9. ' onwards' → logprob: -8.670690536499023
    10. '  ' → logprob: -9.420690536499023

Token 269: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0052384985610842705
    2. ' N' → logprob: -5.2552385330200195
    3. '1' → logprob: -12.63023853302002
    4. ' ' → logprob: -13.75523853302002
    5. '   ' → logprob: -15.00523853302002
    6. 'n' → logprob: -17.005237579345703
    7. 'M' → logprob: -17.380237579345703
    8. '
' → logprob: -18.130237579345703
    9. ' range' → logprob: -18.755237579345703
    10. 'range' → logprob: -18.880237579345703

Token 270: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009527633897960186
    2. '   ' → logprob: -5.259527683258057
    3. ',' → logprob: -6.259527683258057
    4. ':
' → logprob: -6.759527683258057
    5. '):' → logprob: -7.384527683258057
    6. '<|end|>' → logprob: -9.134527206420898
    7. '+' → logprob: -9.134527206420898
    8. 'for' → logprob: -9.759527206420898
    9. ')' → logprob: -10.384527206420898
    10. '=' → logprob: -10.509527206420898

Token 271: ' y' (ID: 342)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6696049571037292
    2. '   ' → logprob: -0.9196049571037292
    3. ' y' → logprob: -3.169605016708374
    4. 'for' → logprob: -3.419605016708374
    5. 'y' → logprob: -6.169604778289795
    6. '<|end|>' → logprob: -6.169604778289795
    7. ' dp' → logprob: -6.169604778289795
    8. '#' → logprob: -6.294604778289795
    9. '    ' → logprob: -6.919604778289795
    10. 'dp' → logprob: -7.544604778289795

Token 272: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.44124165177345276
    2. ' =' → logprob: -1.8162416219711304
    3. 'i' → logprob: -2.19124174118042
    4. '=' → logprob: -3.19124174118042
    5. '_i' → logprob: -4.44124174118042
    6. '=[]' → logprob: -5.06624174118042
    7. '[' → logprob: -5.19124174118042
    8. '0' → logprob: -5.56624174118042
    9. '=i' → logprob: -6.44124174118042
    10. '[]' → logprob: -6.81624174118042

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20959395170211792
    2. '=' → logprob: -1.9595940113067627
    3. ' in' → logprob: -4.209593772888184
    4. ' range' → logprob: -5.084593772888184
    5. 's' → logprob: -5.334593772888184
    6. ' is' → logprob: -5.834593772888184
    7. ',' → logprob: -5.959593772888184
    8. ' ranges' → logprob: -6.209593772888184
    9. ' for' → logprob: -6.334593772888184
    10. 'range' → logprob: -6.334593772888184

Token 274: ' y' (ID: 342)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.30059999227523804
    2. 'y' → logprob: -1.9256000518798828
    3. '128' → logprob: -3.675600051879883
    4. ' clamp' → logprob: -3.675600051879883
    5. ' y' → logprob: -3.925600051879883
    6. 'x' → logprob: -4.175600051879883
    7. '(cl' → logprob: -4.800600051879883
    8. 'code' → logprob: -5.675600051879883
    9. 'lambda' → logprob: -5.675600051879883
    10. 'max' → logprob: -6.050600051879883

Token 275: '_{' (ID: 22305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7734983563423157
    2. '[i' → logprob: -0.7734983563423157
    3. '[' → logprob: -3.773498296737671
    4. '_{' → logprob: -4.52349853515625
    5. '0' → logprob: -4.89849853515625
    6. '-' → logprob: -4.89849853515625
    7. '_i' → logprob: -5.14849853515625
    8. 'i' → logprob: -5.14849853515625
    9. '   ' → logprob: -6.02349853515625
    10. '[-' → logprob: -6.14849853515625

Token 276: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00013285996101330966
    2. ' i' → logprob: -10.50013256072998
    3. '{i' → logprob: -10.62513256072998
    4. '_i' → logprob: -11.00013256072998
    5. '   ' → logprob: -11.12513256072998
    6. ' ' → logprob: -11.37513256072998
    7. '[i' → logprob: -11.62513256072998
    8. '
' → logprob: -12.12513256072998
    9. '-' → logprob: -12.25013256072998
    10. '(i' → logprob: -12.37513256072998

Token 277: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0023981286212801933
    2. '1' → logprob: -6.7523980140686035
    3. '}' → logprob: -7.1273980140686035
    4. ' -' → logprob: -9.002398490905762
    5. '}+' → logprob: -9.377398490905762
    6. '}-' → logprob: -9.877398490905762
    7. '+' → logprob: -10.377398490905762
    8. '−' → logprob: -10.377398490905762
    9. '_' → logprob: -11.127398490905762
    10. 'minus' → logprob: -11.252398490905762

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.302704761968926e-05
    2. '-' → logprob: -10.375073432922363
    3. ' ' → logprob: -10.875073432922363
    4. '```' → logprob: -11.875073432922363
    5. '   ' → logprob: -12.125073432922363
    6. 'i' → logprob: -12.750073432922363
    7. '
' → logprob: -14.062573432922363
    8. 'prev' → logprob: -14.250073432922363
    9. 'x' → logprob: -14.500073432922363
    10. '`' → logprob: -14.562573432922363

Token 279: '}' (ID: 92)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5769840478897095
    2. '+' → logprob: -0.8269840478897095
    3. ' plus' → logprob: -7.07698392868042
    4. ')' → logprob: -10.576984405517578
    5. ')+' → logprob: -10.576984405517578
    6. ' +/-' → logprob: -10.701984405517578
    7. '+k' → logprob: -10.826984405517578
    8. 'plus' → logprob: -11.451984405517578
    9. '}+' → logprob: -11.576984405517578
    10. '}' → logprob: -11.701984405517578

Token 280: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5902944803237915
    2. ' +' → logprob: -0.8402944803237915
    3. '_' → logprob: -5.090294361114502
    4. '-' → logprob: -6.215294361114502
    5. '   ' → logprob: -6.465294361114502
    6. ' -' → logprob: -7.590294361114502
    7. '[' → logprob: -7.715294361114502
    8. ',' → logprob: -7.840294361114502
    9. ' ' → logprob: -7.965294361114502
    10. '=' → logprob: -8.09029483795166

Token 281: ' C' (ID: 363)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3170933723449707
    2. 'code' → logprob: -1.4420933723449707
    3. 'c' → logprob: -1.6920933723449707
    4. 'dx' → logprob: -2.1920933723449707
    5. 'delta' → logprob: -2.6920933723449707
    6. 'k' → logprob: -3.4420933723449707
    7. 'v' → logprob: -4.192093372344971
    8. 'cl' → logprob: -4.442093372344971
    9. ' d' → logprob: -4.567093372344971
    10. ' code' → logprob: -4.692093372344971

Token 282: '[k' (ID: 14298)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15966041386127472
    2. '<|end|>' → logprob: -2.2846603393554688
    3. ' for' → logprob: -4.409660339355469
    4. 'for' → logprob: -4.784660339355469
    5. '<|end|>' → logprob: -5.659660339355469
    6. ')' → logprob: -5.909660339355469
    7. '#' → logprob: -6.034660339355469
    8. ',' → logprob: -6.159660339355469
    9. '[' → logprob: -6.534660339355469
    10. '_' → logprob: -6.659660339355469

Token 283: '_i' (ID: 10853)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06613874435424805
    2. '])' → logprob: -3.066138744354248
    3. 'ode' → logprob: -5.316138744354248
    4. ']+' → logprob: -6.066138744354248
    5. ']-' → logprob: -6.441138744354248
    6. ']
' → logprob: -6.566138744354248
    7. 'k' → logprob: -6.566138744354248
    8. '],' → logprob: -7.066138744354248
    9. 'e' → logprob: -7.191138744354248
    10. 'ost' → logprob: -7.191138744354248

Token 284: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02357865311205387
    2. '])' → logprob: -4.648578643798828
    3. '[k' → logprob: -4.773578643798828
    4. ']
' → logprob: -6.273578643798828
    5. '],' → logprob: -6.523578643798828
    6. 'k' → logprob: -7.648578643798828
    7. '[' → logprob: -8.398578643798828
    8. ']+' → logprob: -8.898578643798828
    9. ']-' → logprob: -9.023578643798828
    10. '[i' → logprob: -9.023578643798828

Token 285: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5519527792930603
    2. 'dp' → logprob: -1.551952838897705
    3. '[' → logprob: -3.301952838897705
    4. '#' → logprob: -3.551952838897705
    5. ']' → logprob: -3.551952838897705
    6. '_' → logprob: -3.551952838897705
    7. '   ' → logprob: -4.426952838897705
    8. 'for' → logprob: -4.676952838897705
    9. ':' → logprob: -4.801952838897705
    10. 'y' → logprob: -5.051952838897705

Token 286: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08496474474668503
    2. '<|end|>' → logprob: -3.0849647521972656
    3. ' ' → logprob: -4.459964752197266
    4. '    
' → logprob: -5.334964752197266
    5. '[' → logprob: -5.959964752197266
    6. '
' → logprob: -6.209964752197266
    7. '.' → logprob: -6.209964752197266
    8. ' 
' → logprob: -6.834964752197266
    9. ',' → logprob: -6.834964752197266
    10. ')' → logprob: -6.959964752197266

Token 287: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14152275025844574
    2. 'prev' → logprob: -2.5165226459503174
    3. ' dp' → logprob: -4.3915228843688965
    4. '   ' → logprob: -4.5165228843688965
    5. 'for' → logprob: -4.8915228843688965
    6. 'y' → logprob: -5.6415228843688965
    7. '#' → logprob: -5.7665228843688965
    8. ' prev' → logprob: -6.1415228843688965
    9. ' for' → logprob: -6.3915228843688965
    10. 'max' → logprob: -6.8915228843688965

Token 288: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17596550285816193
    2. 'for' → logprob: -2.1759655475616455
    3. '   ' → logprob: -4.175965309143066
    4. ' y' → logprob: -4.425965309143066
    5. '    ' → logprob: -5.300965309143066
    6. ' i' → logprob: -5.800965309143066
    7. '
' → logprob: -5.800965309143066
    8. 'dp' → logprob: -6.800965309143066
    9. ' prev' → logprob: -6.800965309143066
    10. ' dp' → logprob: -6.925965309143066

Token 289: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3276366591453552
    2. 'prev' → logprob: -2.07763671875
    3. 'for' → logprob: -2.20263671875
    4. ' dp' → logprob: -4.20263671875
    5. '#' → logprob: -4.70263671875
    6. ' for' → logprob: -4.82763671875
    7. ' prev' → logprob: -5.07763671875
    8. 'import' → logprob: -6.57763671875
    9. 'y' → logprob: -6.70263671875
    10. 'previous' → logprob: -7.45263671875

Token 290: ' sequence' (ID: 16281)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4151812195777893
    2. ' for' → logprob: -1.9151811599731445
    3. ' next' → logprob: -2.6651811599731445
    4. 'prev' → logprob: -4.0401811599731445
    5. ' code' → logprob: -4.1651811599731445
    6. 'next' → logprob: -4.5401811599731445
    7. 'y' → logprob: -4.6651811599731445
    8. '   ' → logprob: -4.7901811599731445
    9. ' previous' → logprob: -5.0401811599731445
    10. 'rest' → logprob: -5.2901811599731445

Token 291: ' y' (ID: 342)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' has' (ID: 853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32380640506744385
    2. '_' → logprob: -2.0738062858581543
    3. 's' → logprob: -2.4488062858581543
    4. '=' → logprob: -3.1988062858581543
    5. '=[]' → logprob: -4.323806285858154
    6. '_i' → logprob: -5.948806285858154
    7. '<|end|>' → logprob: -6.573806285858154
    8. '_values' → logprob: -6.823806285858154
    9. '[' → logprob: -7.198806285858154
    10. ')' → logprob: -7.198806285858154

Token 293: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5311551690101624
    2. ' length' → logprob: -1.2811551094055176
    3. 'N' → logprob: -2.0311551094055176
    4. ' N' → logprob: -5.781155109405518
    5. ' ' → logprob: -10.281155586242676
    6. 'len' → logprob: -11.156155586242676
    7. 'size' → logprob: -11.656155586242676
    8. 'range' → logprob: -12.156155586242676
    9. ' size' → logprob: -12.156155586242676
    10. 'a' → logprob: -12.656155586242676

Token 294: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.20224960148334503
    2. 'N' → logprob: -1.7022496461868286
    3. ' ' → logprob: -7.702249526977539
    4. '1' → logprob: -9.077249526977539
    5. ' i' → logprob: -9.702249526977539
    6. 'i' → logprob: -10.077249526977539
    7. '(N' → logprob: -10.327249526977539
    8. 'n' → logprob: -10.327249526977539
    9. ' =' → logprob: -10.702249526977539
    10. ' n' → logprob: -10.952249526977539

Token 295: '+' (ID: 10)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.11996734328568e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.625041007995605
    4. '```' → logprob: -15.375041007995605
    5. 'for' → logprob: -16.125041961669922
    6. '
' → logprob: -16.125041961669922
    7. '2' → logprob: -16.375041961669922
    8. '...' → logprob: -17.375041961669922
    9. '0' → logprob: -17.375041961669922
    10. 'from' → logprob: -17.375041961669922

Token 297: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17979303002357483
    2. '   ' → logprob: -2.304793119430542
    3. '
' → logprob: -3.179793119430542
    4. ' dp' → logprob: -5.679792881011963
    5. ',' → logprob: -5.929792881011963
    6. '.' → logprob: -5.929792881011963
    7. '_dp' → logprob: -6.054792881011963
    8. 'import' → logprob: -6.179792881011963
    9. '	dp' → logprob: -6.179792881011963
    10. '#' → logprob: -6.429792881011963

Token 298: ' y' (ID: 342)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5539538860321045
    2. 'dp' → logprob: -1.6789538860321045
    3. 'y' → logprob: -1.9289538860321045
    4. ' y' → logprob: -2.8039538860321045
    5. ' dp' → logprob: -3.8039538860321045
    6. '    ' → logprob: -5.428954124450684
    7. '```' → logprob: -5.928954124450684
    8. 'import' → logprob: -6.553954124450684
    9. '    
' → logprob: -8.178954124450684
    10. 'n' → logprob: -8.303954124450684

Token 299: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021060291677713394
    2. '=' → logprob: -4.646060466766357
    3. '=[' → logprob: -5.146060466766357
    4. '=[]' → logprob: -5.896060466766357
    5. '0' → logprob: -6.771060466766357
    6. '_prev' → logprob: -7.771060466766357
    7. '   ' → logprob: -8.6460599899292
    8. '```' → logprob: -8.7710599899292
    9. 's' → logprob: -9.0210599899292
    10. '[' → logprob: -9.1460599899292

Token 300: '..' (ID: 485)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6214635968208313
    2. '=' → logprob: -0.9964635968208313
    3. ',' → logprob: -2.8714635372161865
    4. '[' → logprob: -3.6214635372161865
    5. '=[]' → logprob: -5.746463775634766
    6. '=[' → logprob: -5.996463775634766
    7. '   ' → logprob: -6.246463775634766
    8. 'import' → logprob: -7.746463775634766
    9. '<|end|>' → logprob: -7.996463775634766
    10. '.' → logprob: -8.121463775634766

Token 301: 'y' (ID: 88)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5847342610359192
    2. 'y' → logprob: -0.8347342610359192
    3. ' y' → logprob: -4.9597344398498535
    4. ' N' → logprob: -6.5847344398498535
    5. '_N' → logprob: -9.334733963012695
    6. '```' → logprob: -9.959733963012695
    7. '
' → logprob: -10.084733963012695
    8. 'i' → logprob: -10.084733963012695
    9. ' ' → logprob: -10.334733963012695
    10. '   ' → logprob: -10.834733963012695

Token 302: 'N' (ID: 45)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12387605011463165
    2. '[' → logprob: -2.6238760948181152
    3. '_i' → logprob: -3.7488760948181152
    4. '[i' → logprob: -4.873876094818115
    5. 'i' → logprob: -5.123876094818115
    6. ']' → logprob: -5.748876094818115
    7. '_]' → logprob: -6.998876094818115
    8. '0' → logprob: -7.373876094818115
    9. '```' → logprob: -8.623875617980957
    10. '[N' → logprob: -8.873875617980957

Token 303: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02406487800180912
    2. '
' → logprob: -4.649065017700195
    3. '   ' → logprob: -5.149065017700195
    4. 'y' → logprob: -5.274065017700195
    5. '#' → logprob: -7.149065017700195
    6. '_dp' → logprob: -7.399065017700195
    7. ' dp' → logprob: -8.149065017700195
    8. 'import' → logprob: -8.274065017700195
    9. '	dp' → logprob: -8.399065017700195
    10. '[' → logprob: -8.524065017700195

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022336462512612343
    2. '    
' → logprob: -4.272336483001709
    3. '
' → logprob: -6.522336483001709
    4. '#' → logprob: -6.897336483001709
    5. 'y' → logprob: -7.022336483001709
    6. '    ' → logprob: -7.647336483001709
    7. 'for' → logprob: -7.647336483001709
    8. 'dp' → logprob: -7.647336483001709
    9. ' 
' → logprob: -7.772336483001709
    10. ')' → logprob: -7.897336483001709

Token 305: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24228689074516296
    2. '   ' → logprob: -1.7422869205474854
    3. '
' → logprob: -3.8672869205474854
    4. ' dp' → logprob: -4.617286682128906
    5. '    
' → logprob: -5.242286682128906
    6. '	dp' → logprob: -7.117286682128906
    7. 'y' → logprob: -7.492286682128906
    8. 'import' → logprob: -7.492286682128906
    9. '_dp' → logprob: -7.867286682128906
    10. 'DP' → logprob: -8.367286682128906

Token 306: ' x' (ID: 1215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14147794246673584
    2. '   ' → logprob: -2.1414780616760254
    3. ' dp' → logprob: -4.391478061676025
    4. 'import' → logprob: -6.516478061676025
    5. '
' → logprob: -8.516477584838867
    6. '    
' → logprob: -8.516477584838867
    7. '	dp' → logprob: -9.641477584838867
    8. '#' → logprob: -10.641477584838867
    9. 'DP' → logprob: -11.266477584838867
    10. '    ' → logprob: -11.391477584838867

Token 307: ' has' (ID: 853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.173547625541687
    2. '0' → logprob: -1.548547625541687
    3. '[' → logprob: -1.548547625541687
    4. '_i' → logprob: -2.6735477447509766
    5. ' =' → logprob: -2.6735477447509766
    6. '_target' → logprob: -3.9235477447509766
    7. '_prev' → logprob: -4.548547744750977
    8. ')' → logprob: -4.548547744750977
    9. '_values' → logprob: -4.548547744750977
    10. 'i' → logprob: -4.798547744750977

Token 308: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6814997792243958
    2. ' length' → logprob: -1.931499719619751
    3. 'len' → logprob: -1.931499719619751
    4. 'N' → logprob: -2.181499719619751
    5. '0' → logprob: -3.806499719619751
    6. '[]' → logprob: -3.931499719619751
    7. ' N' → logprob: -4.18149995803833
    8. ' ' → logprob: -4.55649995803833
    9. ' len' → logprob: -5.18149995803833
    10. '[N' → logprob: -5.43149995803833

Token 309: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002967320033349097
    2. ' N' → logprob: -8.125296592712402
    3. '[N' → logprob: -14.750296592712402
    4. 'len' → logprob: -16.62529754638672
    5. ' ' → logprob: -16.75029754638672
    6. '	N' → logprob: -17.25029754638672
    7. '[' → logprob: -17.37529754638672
    8. '   ' → logprob: -17.37529754638672
    9. '<N' → logprob: -17.62529754638672
    10. '(N' → logprob: -17.75029754638672

Token 310: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6788330674171448
    2. '   ' → logprob: -1.4288330078125
    3. '<|end|>' → logprob: -1.5538330078125
    4. '    
' → logprob: -4.4288330078125
    5. ']' → logprob: -5.1788330078125
    6. '  
' → logprob: -5.5538330078125
    7. '<|end|>' → logprob: -5.5538330078125
    8. ',' → logprob: -5.9288330078125
    9. ')' → logprob: -6.3038330078125
    10. '[' → logprob: -6.4288330078125

Token 311: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9702986478805542
    2. ' for' → logprob: -1.3452986478805542
    3. 'for' → logprob: -2.2202987670898438
    4. '<|end|>' → logprob: -2.8452987670898438
    5. 'x' → logprob: -3.3452987670898438
    6. ')' → logprob: -3.4702987670898438
    7. '[' → logprob: -3.5952987670898438
    8. ' ' → logprob: -4.345298767089844
    9. '#' → logprob: -4.470298767089844
    10. ' x' → logprob: -4.720298767089844

Token 312: '0' (ID: 15)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4240470826625824
    2. '[' → logprob: -1.7990471124649048
    3. '_i' → logprob: -3.1740469932556152
    4. ' =' → logprob: -3.1740469932556152
    5. 'i' → logprob: -3.2990469932556152
    6. ')' → logprob: -4.299046993255615
    7. '   ' → logprob: -5.049046993255615
    8. '=' → logprob: -5.424046993255615
    9. '```' → logprob: -5.799046993255615
    10. '<|end|>' → logprob: -5.924046993255615

Token 313: '..' (ID: 485)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -1.3682758808135986
    2. '<|end|>' → logprob: -1.6182758808135986
    3. '+' → logprob: -2.2432758808135986
    4. ']' → logprob: -2.4932758808135986
    5. ',' → logprob: -2.4932758808135986
    6. '[' → logprob: -3.4932758808135986
    7. '..' → logprob: -3.4932758808135986
    8. ':' → logprob: -3.6182758808135986
    9. '
' → logprob: -3.8682758808135986
    10. ')' → logprob: -3.8682758808135986

Token 314: 'x' (ID: 87)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004156568902544677
    2. ' N' → logprob: -7.875415802001953
    3. ' ' → logprob: -11.375415802001953
    4. '   ' → logprob: -11.750415802001953
    5. 'i' → logprob: -12.625415802001953
    6. '...' → logprob: -13.375415802001953
    7. 'x' → logprob: -13.375415802001953
    8. '  ' → logprob: -13.500415802001953
    9. '{' → logprob: -13.625415802001953
    10. 'n' → logprob: -13.625415802001953

Token 315: 'N' (ID: 45)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15402020514011383
    2. 'N' → logprob: -2.029020309448242
    3. 'i' → logprob: -4.779020309448242
    4. ']' → logprob: -7.404020309448242
    5. '_i' → logprob: -7.654020309448242
    6. '   ' → logprob: -8.404020309448242
    7. ' -' → logprob: -8.529020309448242
    8. '[N' → logprob: -8.529020309448242
    9. '-N' → logprob: -8.529020309448242
    10. ' N' → logprob: -8.779020309448242

Token 316: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5815656185150146
    2. ']' → logprob: -1.7065656185150146
    3. '[' → logprob: -2.0815656185150146
    4. '_' → logprob: -3.3315656185150146
    5. '+' → logprob: -4.581565856933594
    6. ')' → logprob: -4.581565856933594
    7. '0' → logprob: -4.831565856933594
    8. '[i' → logprob: -4.831565856933594
    9. '   ' → logprob: -4.956565856933594
    10. '\' → logprob: -4.956565856933594

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014036978245712817
    2. '-' → logprob: -8.875140190124512
    3. ' ' → logprob: -14.750140190124512
    4. '```' → logprob: -15.750140190124512
    5. '0' → logprob: -17.625141143798828
    6. '   ' → logprob: -17.750141143798828
    7. '`' → logprob: -17.750141143798828
    8. ' -' → logprob: -18.000141143798828
    9. '9' → logprob: -18.625141143798828
    10. ')' → logprob: -19.250141143798828

Token 318: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8244670033454895
    2. 'dp' → logprob: -0.9494670033454895
    3. '
' → logprob: -1.9494669437408447
    4. '    
' → logprob: -3.9494669437408447
    5. 'import' → logprob: -4.949467182159424
    6. ' dp' → logprob: -6.324467182159424
    7. '_dp' → logprob: -7.324467182159424
    8. '	dp' → logprob: -7.449467182159424
    9. 'DP' → logprob: -7.949467182159424
    10. '

' → logprob: -8.074466705322266

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04665040969848633
    2. 'dp' → logprob: -3.2966504096984863
    3. '
' → logprob: -5.546650409698486
    4. '    
' → logprob: -5.921650409698486
    5. 'import' → logprob: -6.546650409698486
    6. ' dp' → logprob: -8.421649932861328
    7. 'from' → logprob: -9.671649932861328
    8. '	dp' → logprob: -9.921649932861328
    9. '```' → logprob: -10.046649932861328
    10. 'DP' → logprob: -10.546649932861328

Token 320: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18206831812858582
    2. '   ' → logprob: -1.9320683479309082
    3. '
' → logprob: -4.557068347930908
    4. ' dp' → logprob: -5.557068347930908
    5. '    
' → logprob: -5.932068347930908
    6. 'y' → logprob: -6.307068347930908
    7. 'import' → logprob: -7.057068347930908
    8. '	dp' → logprob: -7.182068347930908
    9. '_dp' → logprob: -7.807068347930908
    10. '(dp' → logprob: -9.05706787109375

Token 321: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08727412670850754
    2. ' dp' → logprob: -3.0872740745544434
    3. '   ' → logprob: -3.7122740745544434
    4. '
' → logprob: -4.587274074554443
    5. 'import' → logprob: -6.337274074554443
    6. '    
' → logprob: -7.212274074554443
    7. '	dp' → logprob: -8.712274551391602
    8. 'cost' → logprob: -9.087274551391602
    9. ' 
' → logprob: -9.337274551391602
    10. '_dp' → logprob: -9.587274551391602

Token 322: ' want' (ID: 1682)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17386433482170105
    2. ' need' → logprob: -3.0488643646240234
    3. 'need' → logprob: -3.9238643646240234
    4. ' dp' → logprob: -4.048864364624023
    5. '   ' → logprob: -4.298864364624023
    6. 'import' → logprob: -4.423864364624023
    7. 'continue' → logprob: -4.673864364624023
    8. ' can' → logprob: -5.048864364624023
    9. 'initialize' → logprob: -5.173864364624023
    10. ']' → logprob: -5.423864364624023

Token 323: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2528926730155945
    2. ' to' → logprob: -1.5028927326202393
    3. 'def' → logprob: -7.87789249420166
    4. 'min' → logprob: -8.75289249420166
    5. '
' → logprob: -9.25289249420166
    6. 'minimal' → logprob: -9.62789249420166
    7. '   ' → logprob: -9.75289249420166
    8. 'dp' → logprob: -10.12789249420166
    9. 'for' → logprob: -10.37789249420166
    10. 'cost' → logprob: -10.62789249420166

Token 324: ' minimize' (ID: 41776)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07550685852766037
    2. 'compute' → logprob: -3.5755069255828857
    3. ' minimize' → logprob: -3.5755069255828857
    4. 'find' → logprob: -4.325506687164307
    5. 'calculate' → logprob: -6.450506687164307
    6. 'continue' → logprob: -7.700506687164307
    7. 'dp' → logprob: -8.075507164001465
    8. ' find' → logprob: -8.450507164001465
    9. 'import' → logprob: -8.575507164001465
    10. ' compute' → logprob: -8.700507164001465

Token 325: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2211379110813141
    2. 'the' → logprob: -2.7211380004882812
    3. ' the' → logprob: -3.2211380004882812
    4. 'dp' → logprob: -3.3461380004882812
    5. ' sum' → logprob: -3.8461380004882812
    6. 'total' → logprob: -4.596138000488281
    7. 'import' → logprob: -4.846138000488281
    8. 'for' → logprob: -5.471138000488281
    9. '
' → logprob: -6.221138000488281
    10. ' total' → logprob: -6.346138000488281

Token 326: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030963044613599777
    2. '   ' → logprob: -4.155962944030762
    3. '_' → logprob: -5.030962944030762
    4. ' of' → logprob: -6.280962944030762
    5. '[' → logprob: -6.405962944030762
    6. '(
' → logprob: -6.530962944030762
    7. '  ' → logprob: -7.530962944030762
    8. ' =' → logprob: -7.655962944030762
    9. 'of' → logprob: -7.655962944030762
    10. '    ' → logprob: -8.405962944030762

Token 327: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.062078263610601425
    2. ' i' → logprob: -2.8120782375335693
    3. '   ' → logprob: -10.312078475952148
    4. '(i' → logprob: -10.562078475952148
    5. '_i' → logprob: -11.062078475952148
    6. '```' → logprob: -11.562078475952148
    7. '{i' → logprob: -11.812078475952148
    8. ' ' → logprob: -12.312078475952148
    9. '(' → logprob: -12.687078475952148
    10. '0' → logprob: -13.062078475952148

Token 328: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6237034797668457
    2. '(' → logprob: -2.6237034797668457
    3. ' of' → logprob: -2.7487034797668457
    4. '   ' → logprob: -2.8737034797668457
    5. '(i' → logprob: -2.8737034797668457
    6. 'i' → logprob: -3.2487034797668457
    7. 'of' → logprob: -3.4987034797668457
    8. '_' → logprob: -3.4987034797668457
    9. ' =' → logprob: -3.9987034797668457
    10. '+' → logprob: -3.9987034797668457

Token 329: '0' (ID: 15)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9334081411361694
    2. '0' → logprob: -1.8084081411361694
    3. 'range' → logprob: -1.9334081411361694
    4. ' i' → logprob: -2.308408260345459
    5. 'i' → logprob: -2.308408260345459
    6. 'N' → logprob: -2.933408260345459
    7. ' ' → logprob: -3.933408260345459
    8. ' N' → logprob: -3.933408260345459
    9. '1' → logprob: -5.558408260345459
    10. '   ' → logprob: -7.183408260345459

Token 330: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.16412697732448578
    2. 'to' → logprob: -1.914126992225647
    3. ' i' → logprob: -7.039126873016357
    4. '<|end|>' → logprob: -7.289126873016357
    5. '..' → logprob: -7.414126873016357
    6. 'i' → logprob: -7.414126873016357
    7. ' of' → logprob: -8.539127349853516
    8. ' ' → logprob: -8.664127349853516
    9. '```' → logprob: -8.914127349853516
    10. ',' → logprob: -9.164127349853516

Token 331: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014165511354804039
    2. ' N' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.014165878295898
    4. '(N' → logprob: -15.139165878295898
    5. '```' → logprob: -15.264165878295898
    6. '   ' → logprob: -15.764165878295898
    7. 'n' → logprob: -15.889165878295898
    8. '{' → logprob: -16.7641658782959
    9. '	N' → logprob: -16.8891658782959
    10. '<N' → logprob: -17.0141658782959

Token 332: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1515723168849945
    2. ' +' → logprob: -3.1515722274780273
    3. '   ' → logprob: -3.4015722274780273
    4. '-' → logprob: -4.276572227478027
    5. '_' → logprob: -5.151572227478027
    6. 'i' → logprob: -5.276572227478027
    7. ')' → logprob: -5.276572227478027
    8. ' ' → logprob: -5.651572227478027
    9. '```' → logprob: -5.651572227478027
    10. 'for' → logprob: -5.901572227478027

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029828163678757846
    2. ' ' → logprob: -8.125298500061035
    3. '   ' → logprob: -14.000298500061035
    4. '```' → logprob: -14.000298500061035
    5. '-' → logprob: -14.875298500061035
    6. '2' → logprob: -16.62529754638672
    7. '
' → logprob: -16.75029754638672
    8. ' ' → logprob: -17.12529754638672
    9. '  ' → logprob: -17.75029754638672
    10. 'for' → logprob: -18.37529754638672

Token 334: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05928323417901993
    2. '    ' → logprob: -3.5592832565307617
    3. '(' → logprob: -5.434283256530762
    4. '+' → logprob: -5.559283256530762
    5. ' of' → logprob: -5.559283256530762
    6. ' +' → logprob: -5.809283256530762
    7. '_' → logprob: -6.184283256530762
    8. ' (' → logprob: -6.434283256530762
    9. ')' → logprob: -6.559283256530762
    10. '       ' → logprob: -6.684283256530762

Token 335: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08270298689603806
    2. '(y' → logprob: -3.332702875137329
    3. '(x' → logprob: -3.332702875137329
    4. '   ' → logprob: -4.957703113555908
    5. '(cl' → logprob: -7.832703113555908
    6. ' ((' → logprob: -8.83270263671875
    7. '((' → logprob: -8.83270263671875
    8. '(dp' → logprob: -9.83270263671875
    9. '(abs' → logprob: -9.83270263671875
    10. ' ' → logprob: -10.20770263671875

Token 336: 'x' (ID: 87)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.08919539302587509
    2. 'y' → logprob: -3.089195489883423
    3. ' (' → logprob: -3.339195489883423
    4. ' y' → logprob: -6.089195251464844
    5. '(cl' → logprob: -6.839195251464844
    6. '   ' → logprob: -7.839195251464844
    7. '(' → logprob: -8.214195251464844
    8. '(x' → logprob: -8.839195251464844
    9. 'cl' → logprob: -9.589195251464844
    10. '((' → logprob: -10.839195251464844

Token 337: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01944817043840885
    2. 'i' → logprob: -4.394448280334473
    3. '_i' → logprob: -5.519448280334473
    4. '[' → logprob: -7.019448280334473
    5. '   ' → logprob: -7.769448280334473
    6. ' i' → logprob: -8.519448280334473
    7. '
' → logprob: -8.644448280334473
    8. ' [' → logprob: -8.769448280334473
    9. ')' → logprob: -9.019448280334473
    10. ' -' → logprob: -9.269448280334473

Token 338: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07058149576187134
    2. '-' → logprob: -2.6955814361572266
    3. ' ' → logprob: -7.945581436157227
    4. '[' → logprob: -8.445581436157227
    5. '   ' → logprob: -10.445581436157227
    6. '[i' → logprob: -11.195581436157227
    7. '  ' → logprob: -11.570581436157227
    8. '-y' → logprob: -11.945581436157227
    9. ')' → logprob: -12.945581436157227
    10. ' ' → logprob: -13.195581436157227

Token 339: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03823288902640343
    2. ' y' → logprob: -3.2882328033447266
    3. 'cl' → logprob: -9.788232803344727
    4. 'ys' → logprob: -10.538232803344727
    5. '(y' → logprob: -10.663232803344727
    6. 'ycl' → logprob: -10.788232803344727
    7. ' (' → logprob: -11.413232803344727
    8. ' clamp' → logprob: -11.413232803344727
    9. 'yi' → logprob: -11.538232803344727
    10. 'yc' → logprob: -12.788232803344727

Token 340: '_{' (ID: 22305)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09652449935674667
    2. '_i' → logprob: -2.596524477005005
    3. 'i' → logprob: -4.096524715423584
    4. '[' → logprob: -7.846524715423584
    5. '```' → logprob: -8.596524238586426
    6. ' i' → logprob: -9.346524238586426
    7. '_' → logprob: -10.221524238586426
    8. '(i' → logprob: -10.846524238586426
    9. ')' → logprob: -10.971524238586426
    10. '[
' → logprob: -11.096524238586426

Token 341: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.470901229884475e-05
    2. '[i' → logprob: -10.00008487701416
    3. '(i' → logprob: -11.50008487701416
    4. ' i' → logprob: -11.50008487701416
    5. '{i' → logprob: -11.50008487701416
    6. '```' → logprob: -12.25008487701416
    7. '_i' → logprob: -12.87508487701416
    8. '
' → logprob: -14.25008487701416
    9. '   ' → logprob: -15.62508487701416
    10. ' ' → logprob: -15.62508487701416

Token 342: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.025138458237051964
    2. '+' → logprob: -4.0251383781433105
    3. '[' → logprob: -5.9001383781433105
    4. '```' → logprob: -6.4001383781433105
    5. 'i' → logprob: -6.6501383781433105
    6. ')' → logprob: -7.4001383781433105
    7. '[
' → logprob: -7.9001383781433105
    8. ']' → logprob: -9.900138854980469
    9. '[int' → logprob: -10.400138854980469
    10. '
' → logprob: -10.775138854980469

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.134509021649137e-05
    2. ' ' → logprob: -10.25006103515625
    3. '   ' → logprob: -11.12506103515625
    4. 'i' → logprob: -12.50006103515625
    5. '}' → logprob: -13.75006103515625
    6. '```' → logprob: -14.00006103515625
    7. '    ' → logprob: -14.12506103515625
    8. '-' → logprob: -14.12506103515625
    9. '  ' → logprob: -14.37506103515625
    10. '+' → logprob: -14.62506103515625

Token 344: '})' (ID: 9263)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.591284453868866
    2. ')' → logprob: -1.2162845134735107
    3. '])' → logprob: -2.2162845134735107
    4. '[i' → logprob: -3.8412845134735107
    5. '[' → logprob: -4.716284275054932
    6. ')^' → logprob: -4.966284275054932
    7. '})' → logprob: -6.466284275054932
    8. '`)' → logprob: -7.591284275054932
    9. '```' → logprob: -8.34128475189209
    10. ' )' → logprob: -8.34128475189209

Token 345: '^' (ID: 61)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2914356589317322
    2. '
' → logprob: -1.416435718536377
    3. '    
' → logprob: -4.916435718536377
    4. 'dp' → logprob: -6.416435718536377
    5. '

' → logprob: -7.416435718536377
    6. '
    
' → logprob: -8.791435241699219
    7. '[' → logprob: -9.791435241699219
    8. '```' → logprob: -9.916435241699219
    9. 'cost' → logprob: -10.291435241699219
    10. 'y' → logprob: -10.291435241699219

Token 346: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013285996101330966
    2. ' ' → logprob: -9.00013256072998
    3. '**' → logprob: -12.37513256072998
    4. '²' → logprob: -13.62513256072998
    5. ')' → logprob: -13.75013256072998
    6. '{' → logprob: -14.25013256072998
    7. '*' → logprob: -14.37513256072998
    8. '[' → logprob: -14.62513256072998
    9. '^' → logprob: -15.00013256072998
    10. '```' → logprob: -15.37513256072998

Token 347: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44892966747283936
    2. 'dp' → logprob: -1.0739296674728394
    3. '   ' → logprob: -4.573929786682129
    4. ' dp' → logprob: -6.198929786682129
    5. '    
' → logprob: -6.323929786682129
    6. '_dp' → logprob: -6.823929786682129
    7. 'import' → logprob: -6.948929786682129
    8. '[' → logprob: -7.073929786682129
    9. '#' → logprob: -7.323929786682129
    10. '	dp' → logprob: -7.698929786682129

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40307244658470154
    2. 'dp' → logprob: -1.528072476387024
    3. '
' → logprob: -2.4030723571777344
    4. '    
' → logprob: -4.278072357177734
    5. 'import' → logprob: -5.653072357177734
    6. ' dp' → logprob: -6.653072357177734
    7. '_dp' → logprob: -6.653072357177734
    8. '	dp' → logprob: -6.903072357177734
    9. '(dp' → logprob: -7.903072357177734
    10. '#' → logprob: -8.153072357177734

Token 349: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.42519843578338623
    2. '   ' → logprob: -1.1751984357833862
    3. '
' → logprob: -3.675198554992676
    4. 'import' → logprob: -4.800198554992676
    5. '    
' → logprob: -6.050198554992676
    6. ' dp' → logprob: -7.175198554992676
    7. '```' → logprob: -8.800198554992676
    8. 'from' → logprob: -9.300198554992676
    9. '	dp' → logprob: -9.425198554992676
    10. 'INF' → logprob: -9.425198554992676

Token 350: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06411731988191605
    2. 'import' → logprob: -3.064117431640625
    3. '   ' → logprob: -4.314117431640625
    4. 'from' → logprob: -7.564117431640625
    5. 'INF' → logprob: -7.564117431640625
    6. '#' → logprob: -8.064117431640625
    7. ' dp' → logprob: -8.564117431640625
    8. 'inf' → logprob: -8.814117431640625
    9. '
' → logprob: -8.939117431640625
    10. '	dp' → logprob: -10.189117431640625

Token 351: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4006025195121765
    2. ' dp' → logprob: -1.7756025791168213
    3. '   ' → logprob: -2.1506025791168213
    4. '
' → logprob: -3.7756025791168213
    5. 'import' → logprob: -4.150602340698242
    6. 'y' → logprob: -5.775602340698242
    7. 'prev' → logprob: -7.775602340698242
    8. ' y' → logprob: -7.775602340698242
    9. '    
' → logprob: -8.400602340698242
    10. ' for' → logprob: -8.650602340698242

Token 352: ' over' (ID: 1072)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029183102771639824
    2. '=' → logprob: -3.6541831493377686
    3. '[' → logprob: -6.2791829109191895
    4. ']' → logprob: -8.529183387756348
    5. '=[]' → logprob: -8.904183387756348
    6. '[i' → logprob: -9.279183387756348
    7. ' ' → logprob: -9.404183387756348
    8. '=[' → logprob: -9.529183387756348
    9. 's' → logprob: -9.654183387756348
    10. '   ' → logprob: -9.904183387756348

Token 353: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9414410591125488
    2. 'range' → logprob: -1.0664410591125488
    3. ' range' → logprob: -1.6914410591125488
    4. ' i' → logprob: -2.941441059112549
    5. 'N' → logprob: -3.941441059112549
    6. ' N' → logprob: -6.316441059112549
    7. '   ' → logprob: -6.316441059112549
    8. ' ' → logprob: -6.816441059112549
    9. 'x' → logprob: -6.941441059112549
    10. ']' → logprob: -7.191441059112549

Token 354: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3424786329269409
    2. '=' → logprob: -1.592478632926941
    3. '[' → logprob: -2.5924787521362305
    4. '[i' → logprob: -5.0924787521362305
    5. '_' → logprob: -6.5924787521362305
    6. '   ' → logprob: -7.2174787521362305
    7. 'import' → logprob: -7.5924787521362305
    8. ',' → logprob: -7.5924787521362305
    9. '=[' → logprob: -7.5924787521362305
    10. ']' → logprob: -7.9674787521362305

Token 355: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020582063123583794
    2. ' range' → logprob: -3.8955819606781006
    3. '1' → logprob: -10.52058219909668
    4. '0' → logprob: -12.52058219909668
    5. '   ' → logprob: -12.89558219909668
    6. '(range' → logprob: -12.89558219909668
    7. '[' → logprob: -13.64558219909668
    8. ' ' → logprob: -14.02058219909668
    9. '```' → logprob: -14.52058219909668
    10. '
' → logprob: -14.64558219909668

Token 356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41594794392585754
    2. '1' → logprob: -1.4159479141235352
    3. 'range' → logprob: -2.540947914123535
    4. 'N' → logprob: -4.040947914123535
    5. ' range' → logprob: -6.915947914123535
    6. ' ' → logprob: -9.415947914123535
    7. ']' → logprob: -10.290947914123535
    8. '   ' → logprob: -10.415947914123535
    9. ' N' → logprob: -11.290947914123535
    10. 'M' → logprob: -11.665947914123535

Token 357: '..' (ID: 485)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06663203984498978
    2. ' +' → logprob: -3.566632032394409
    3. '][' → logprob: -3.816632032394409
    4. ']' → logprob: -4.816632270812988
    5. ',' → logprob: -5.816632270812988
    6. '   ' → logprob: -7.316632270812988
    7. ' ][' → logprob: -7.441632270812988
    8. ']+' → logprob: -7.566632270812988
    9. '1' → logprob: -7.691632270812988
    10. ' ]' → logprob: -8.691632270812988

Token 358: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00018792471382766962
    2. ' N' → logprob: -8.625187873840332
    3. 'M' → logprob: -12.250187873840332
    4. ' ' → logprob: -13.500187873840332
    5. '   ' → logprob: -13.750187873840332
    6. '1' → logprob: -15.125187873840332
    7. ']' → logprob: -15.750187873840332
    8. '(N' → logprob: -16.50018882751465
    9. '0' → logprob: -16.62518882751465
    10. '255' → logprob: -16.75018882751465

Token 359: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4608018398284912
    2. '+' → logprob: -1.3358018398284912
    3. ']:' → logprob: -2.460801839828491
    4. '   ' → logprob: -5.21080207824707
    5. '-' → logprob: -5.33580207824707
    6. ']+' → logprob: -6.21080207824707
    7. ')' → logprob: -6.33580207824707
    8. ' +' → logprob: -6.33580207824707
    9. '):' → logprob: -6.46080207824707
    10. ' ]' → logprob: -6.96080207824707

Token 360: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7525761127471924
    2. ' dp' → logprob: -1.3775761127471924
    3. 'import' → logprob: -2.3775761127471924
    4. '   ' → logprob: -3.2525761127471924
    5. '[' → logprob: -3.5025761127471924
    6. ' ' → logprob: -3.6275761127471924
    7. ']' → logprob: -3.7525761127471924
    8. 'prev' → logprob: -4.127575874328613
    9. 'y' → logprob: -4.877575874328613
    10. ' ]' → logprob: -5.002575874328613

Token 361: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039250344038009644
    2. '=' → logprob: -3.539250373840332
    3. ']' → logprob: -5.039250373840332
    4. '[' → logprob: -6.289250373840332
    5. ' ' → logprob: -7.914250373840332
    6. '=[' → logprob: -8.289250373840332
    7. '[i' → logprob: -8.789250373840332
    8. ']=' → logprob: -9.289250373840332
    9. '=[]' → logprob: -9.914250373840332
    10. ' =[' → logprob: -10.164250373840332

Token 362: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07485713064670563
    2. '][' → logprob: -2.824857234954834
    3. ']=' → logprob: -4.699857234954834
    4. ']={' → logprob: -6.824857234954834
    5. '][]' → logprob: -7.699857234954834
    6. '=' → logprob: -7.949857234954834
    7. '],' → logprob: -8.324856758117676
    8. ' ]' → logprob: -8.324856758117676
    9. ' =' → logprob: -8.699856758117676
    10. '   ' → logprob: -8.699856758117676

Token 363: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.11719141155481339
    2. '256' → logprob: -2.3671913146972656
    3. 'value' → logprob: -5.242191314697266
    4. ']' → logprob: -5.617191314697266
    5. '0' → logprob: -5.992191314697266
    6. 'range' → logprob: -6.867191314697266
    7. ' ' → logprob: -7.117191314697266
    8. ' :]' → logprob: -7.617191314697266
    9. ':]' → logprob: -7.742191314697266
    10. '{' → logprob: -8.117191314697266

Token 364: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006538331042975187
    2. ' ]' → logprob: -5.631538391113281
    3. ']=' → logprob: -6.006538391113281
    4. '=' → logprob: -9.006538391113281
    5. '   ' → logprob: -9.381538391113281
    6. 's' → logprob: -10.006538391113281
    7. '],' → logprob: -10.131538391113281
    8. ']:' → logprob: -10.256538391113281
    9. '][' → logprob: -10.631538391113281
    10. ']={' → logprob: -11.006538391113281

Token 365: ' minimal' (ID: 19957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3557126224040985
    2. '=' → logprob: -1.230712652206421
    3. 'import' → logprob: -6.480712413787842
    4. ']' → logprob: -6.730712413787842
    5. '[' → logprob: -6.730712413787842
    6. '=[]' → logprob: -6.980712413787842
    7. '   ' → logprob: -7.355712413787842
    8. '<|end|>' → logprob: -7.980712413787842
    9. '=[' → logprob: -8.105712890625
    10. ')' → logprob: -8.230712890625

Token 366: ' cost' (ID: 3097)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5949750542640686
    2. ' =' → logprob: -1.0949749946594238
    3. '[' → logprob: -3.469974994659424
    4. '=' → logprob: -3.719974994659424
    5. ' ' → logprob: -3.844974994659424
    6. ')' → logprob: -4.094974994659424
    7. ']' → logprob: -4.969974994659424
    8. '   ' → logprob: -5.219974994659424
    9. ' _' → logprob: -6.469974994659424
    10. ',' → logprob: -7.094974994659424

Token 367: ' up' (ID: 869)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44806158542633057
    2. '=' → logprob: -1.1980615854263306
    3. '_' → logprob: -3.448061466217041
    4. '[' → logprob: -4.073061466217041
    5. '   ' → logprob: -5.698061466217041
    6. ',' → logprob: -6.198061466217041
    7. ']' → logprob: -6.323061466217041
    8. ')' → logprob: -6.823061466217041
    9. ' ' → logprob: -7.823061466217041
    10. 'for' → logprob: -8.1980619430542

Token 368: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4132297933101654
    2. '   ' → logprob: -2.2882297039031982
    3. 'date' → logprob: -2.2882297039031982
    4. 'dates' → logprob: -3.2882297039031982
    5. '       ' → logprob: -3.9132297039031982
    6. '=' → logprob: -4.413229942321777
    7. 'dated' → logprob: -4.538229942321777
    8. '[i' → logprob: -4.663229942321777
    9. 'on' → logprob: -4.788229942321777
    10. '_to' → logprob: -5.163229942321777

Token 369: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10973566025495529
    2. ''' → logprob: -3.3597357273101807
    3. ' i' → logprob: -3.6097357273101807
    4. ')' → logprob: -4.609735488891602
    5. ' ' → logprob: -4.734735488891602
    6. '[i' → logprob: -5.859735488891602
    7. 'y' → logprob: -5.859735488891602
    8. ' (' → logprob: -6.109735488891602
    9. ']' → logprob: -6.234735488891602
    10. ' ]' → logprob: -6.234735488891602

Token 370: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5973737239837646
    2. '=' → logprob: -0.9723737239837646
    3. '_' → logprob: -3.5973737239837646
    4. ']' → logprob: -4.222373962402344
    5. '[' → logprob: -4.222373962402344
    6. '   ' → logprob: -4.972373962402344
    7. ',' → logprob: -5.972373962402344
    8. 'import' → logprob: -6.097373962402344
    9. ')' → logprob: -7.347373962402344
    10. 'for' → logprob: -7.722373962402344

Token 371: 'amount' (ID: 10703)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7349231839179993
    2. ')' → logprob: -1.1099231243133545
    3. '   ' → logprob: -2.7349231243133545
    4. ' ]' → logprob: -3.4849231243133545
    5. '])' → logprob: -3.7349231243133545
    6. ' ' → logprob: -4.484923362731934
    7. '[' → logprob: -4.609923362731934
    8. 'y' → logprob: -4.859923362731934
    9. ',' → logprob: -4.984923362731934
    10. ':' → logprob: -5.359923362731934

Token 372: ' of' (ID: 328)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9949164390563965
    2. 's' → logprob: -1.4949164390563965
    3. '=' → logprob: -1.6199164390563965
    4. '[' → logprob: -2.6199164390563965
    5. ')' → logprob: -3.6199164390563965
    6. '   ' → logprob: -3.6199164390563965
    7. ' ' → logprob: -3.7449164390563965
    8. ' of' → logprob: -3.8699164390563965
    9. ' =' → logprob: -4.6199164390563965
    10. '][' → logprob: -5.7449164390563965

Token 373: ' squared' (ID: 117867)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9928188323974609
    2. ' ' → logprob: -1.242818832397461
    3. ' y' → logprob: -2.367818832397461
    4. ' ]' → logprob: -2.617818832397461
    5. '   ' → logprob: -3.617818832397461
    6. ')' → logprob: -3.617818832397461
    7. 'y' → logprob: -3.867818832397461
    8. '[' → logprob: -4.242818832397461
    9. ' the' → logprob: -4.617818832397461
    10. ' i' → logprob: -4.617818832397461

Token 374: ' errors' (ID: 10664)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4700639843940735
    2. '_errors' → logprob: -2.0950639247894287
    3. 'errors' → logprob: -2.4700639247894287
    4. ']' → logprob: -3.0950639247894287
    5. ' errors' → logprob: -3.4700639247894287
    6. ')' → logprob: -3.7200639247894287
    7. '_error' → logprob: -4.220064163208008
    8. ' ' → logprob: -4.345064163208008
    9. ' error' → logprob: -4.720064163208008
    10. 'error' → logprob: -4.970064163208008

Token 375: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5495244860649109
    2. '   ' → logprob: -2.1745245456695557
    3. ')' → logprob: -2.2995245456695557
    4. ' for' → logprob: -2.5495245456695557
    5. 'for' → logprob: -3.0495245456695557
    6. '[' → logprob: -3.6745245456695557
    7. ' at' → logprob: -4.174524307250977
    8. ',' → logprob: -4.424524307250977
    9. 'import' → logprob: -5.049524307250977
    10. '_' → logprob: -5.549524307250977

Token 376: ' the' (ID: 290)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0402358770370483
    2. 'i' → logprob: -1.4152358770370483
    3. ' y' → logprob: -2.165235996246338
    4. ' previous' → logprob: -2.415235996246338
    5. ' the' → logprob: -2.665235996246338
    6. ' next' → logprob: -2.915235996246338
    7. 'y' → logprob: -4.290235996246338
    8. ')' → logprob: -4.290235996246338
    9. 'the' → logprob: -4.540235996246338
    10. '   ' → logprob: -4.540235996246338

Token 377: ' first' (ID: 1577)
  Prédit: ' ]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ]' → logprob: -0.8376169204711914
    2. ' ' → logprob: -1.2126169204711914
    3. ']' → logprob: -1.8376169204711914
    4. '_' → logprob: -3.5876169204711914
    5. ')' → logprob: -3.5876169204711914
    6. '[' → logprob: -3.7126169204711914
    7. ' )' → logprob: -4.962616920471191
    8. ' next' → logprob: -5.337616920471191
    9. 'i' → logprob: -5.962616920471191
    10. ' 
' → logprob: -6.087616920471191

Token 378: ' i' (ID: 575)
  Prédit: ' ]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ]' → logprob: -1.0254522562026978
    2. ' ' → logprob: -1.4004522562026978
    3. ' i' → logprob: -1.9004522562026978
    4. ']' → logprob: -2.400452136993408
    5. 'i' → logprob: -3.025452136993408
    6. ' y' → logprob: -3.775452136993408
    7. '1' → logprob: -4.525452136993408
    8. ')' → logprob: -4.525452136993408
    9. '   ' → logprob: -4.775452136993408
    10. 'y' → logprob: -4.900452136993408

Token 379: ' samples' (ID: 16902)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10666005313396454
    2. '][' → logprob: -3.2316601276397705
    3. '[' → logprob: -3.6066601276397705
    4. '_' → logprob: -4.356659889221191
    5. '   ' → logprob: -4.731659889221191
    6. ' ]' → logprob: -5.731659889221191
    7. ')' → logprob: -5.731659889221191
    8. ' ' → logprob: -6.606659889221191
    9. '_]' → logprob: -6.856659889221191
    10. ' ][' → logprob: -6.981659889221191

Token 380: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8669101595878601
    2. ')' → logprob: -1.3669102191925049
    3. '[' → logprob: -1.8669102191925049
    4. '   ' → logprob: -2.491910219192505
    5. ',' → logprob: -2.866910219192505
    6. '][' → logprob: -5.116909980773926
    7. ' ]' → logprob: -5.741909980773926
    8. '<|end|>' → logprob: -5.741909980773926
    9. ' ' → logprob: -6.241909980773926
    10. '=' → logprob: -6.366909980773926

Token 381: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9890536069869995
    2. ' =' → logprob: -1.2390536069869995
    3. '=' → logprob: -1.4890536069869995
    4. ':' → logprob: -3.489053726196289
    5. '   ' → logprob: -3.739053726196289
    6. '_' → logprob: -3.739053726196289
    7. ']' → logprob: -4.614053726196289
    8. ' ' → logprob: -4.739053726196289
    9. ',' → logprob: -5.114053726196289
    10. '' → logprob: -6.739053726196289

Token 382: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7795974612236023
    2. '=' → logprob: -1.904597520828247
    3. ' =' → logprob: -2.029597520828247
    4. '   ' → logprob: -2.029597520828247
    5. '[' → logprob: -3.154597520828247
    6. '
' → logprob: -3.654597520828247
    7. ':' → logprob: -4.029597282409668
    8. 'import' → logprob: -4.904597282409668
    9. ' dp' → logprob: -5.154597282409668
    10. ']' → logprob: -5.154597282409668

Token 383: ' and' (ID: 326)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0700642541050911
    2. '   ' → logprob: -3.1950643062591553
    3. 'import' → logprob: -4.195064067840576
    4. ' dp' → logprob: -5.195064067840576
    5. 'd' → logprob: -6.320064067840576
    6. 'from' → logprob: -6.570064067840576
    7. ']' → logprob: -7.070064067840576
    8. '[' → logprob: -7.945064067840576
    9. '_' → logprob: -8.320064544677734
    10. '    
' → logprob: -8.570064544677734

Token 384: ' y' (ID: 342)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.16101941466331482
    2. ' prev' → logprob: -2.2860193252563477
    3. 'for' → logprob: -4.161019325256348
    4. ' for' → logprob: -5.286019325256348
    5. '   ' → logprob: -5.411019325256348
    6. 'parent' → logprob: -5.536019325256348
    7. 'previous' → logprob: -5.661019325256348
    8. 'from' → logprob: -5.661019325256348
    9. 'y' → logprob: -6.411019325256348
    10. 'dp' → logprob: -6.411019325256348

Token 385: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5557413101196289
    2. ' in' → logprob: -1.680741310119629
    3. ']' → logprob: -2.930741310119629
    4. ')' → logprob: -3.430741310119629
    5. '_values' → logprob: -3.430741310119629
    6. '_range' → logprob: -3.930741310119629
    7. 'range' → logprob: -4.305741310119629
    8. '_prev' → logprob: -4.430741310119629
    9. '])' → logprob: -4.680741310119629
    10. ' range' → logprob: -4.805741310119629

Token 386: ' the' (ID: 290)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2293718457221985
    2. ' ' → logprob: -2.6043717861175537
    3. ' range' → logprob: -3.1043717861175537
    4. 'range' → logprob: -4.229372024536133
    5. ' a' → logprob: -4.354372024536133
    6. '0' → logprob: -4.479372024536133
    7. 'in' → logprob: -4.854372024536133
    8. ' an' → logprob: -5.104372024536133
    9. ' the' → logprob: -5.354372024536133
    10. '256' → logprob: -5.354372024536133

Token 387: ' value' (ID: 1432)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.30147257447242737
    2. 'next' → logprob: -2.6764726638793945
    3. ' current' → logprob: -2.9264726638793945
    4. ' previous' → logprob: -3.1764726638793945
    5. 'previous' → logprob: -3.3014726638793945
    6. 'current' → logprob: -4.0514726638793945
    7. ' range' → logprob: -4.3014726638793945
    8. 'range' → logprob: -4.6764726638793945
    9. 'difference' → logprob: -5.5514726638793945
    10. ' difference' → logprob: -6.1764726638793945

Token 388: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0716338157653809
    2. '[' → logprob: -1.8216338157653809
    3. '_' → logprob: -1.8216338157653809
    4. '=' → logprob: -2.071633815765381
    5. 's' → logprob: -2.446633815765381
    6. '   ' → logprob: -2.946633815765381
    7. ']' → logprob: -3.446633815765381
    8. 'import' → logprob: -4.821633815765381
    9. ' ' → logprob: -4.946633815765381
    10. ',' → logprob: -4.946633815765381

Token 389: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5521873235702515
    2. 'the' → logprob: -0.9271873235702515
    3. ' the' → logprob: -4.552187442779541
    4. 'current' → logprob: -4.927187442779541
    5. 'previous' → logprob: -5.302187442779541
    6. ' y' → logprob: -6.177187442779541
    7. 'output' → logprob: -6.302187442779541
    8. 'i' → logprob: -7.177187442779541
    9. ' current' → logprob: -8.302186965942383
    10. ' previous' → logprob: -8.802186965942383

Token 390: '_i' (ID: 10853)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8115695714950562
    2. '_' → logprob: -1.9365695714950562
    3. ' at' → logprob: -2.1865696907043457
    4. '[i' → logprob: -2.6865696907043457
    5. 's' → logprob: -2.8115696907043457
    6. '][' → logprob: -3.1865696907043457
    7. '[' → logprob: -3.4365696907043457
    8. '   ' → logprob: -4.061569690704346
    9. ' ' → logprob: -4.561569690704346
    10. ',' → logprob: -4.686569690704346

Token 391: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.959541916847229
    2. ']' → logprob: -1.084541916847229
    3. 'dp' → logprob: -2.0845417976379395
    4. '[' → logprob: -3.4595417976379395
    5. 'import' → logprob: -3.9595417976379395
    6. ':' → logprob: -4.0845417976379395
    7. '
' → logprob: -4.3345417976379395
    8. '=' → logprob: -4.8345417976379395
    9. 'for' → logprob: -4.8345417976379395
    10. ' =' → logprob: -4.8345417976379395

Token 392: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7219465374946594
    2. '[' → logprob: -2.2219464778900146
    3. ']' → logprob: -2.3469464778900146
    4. 'dp' → logprob: -2.4719464778900146
    5. '   ' → logprob: -3.0969464778900146
    6. '#' → logprob: -3.8469464778900146
    7. '\' → logprob: -3.9719464778900146
    8. ':' → logprob: -3.9719464778900146
    9. 'for' → logprob: -3.9719464778900146
    10. '_' → logprob: -4.346946716308594

Token 393: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014737824909389019
    2. ' dp' → logprob: -5.014737606048584
    3. '   ' → logprob: -5.389737606048584
    4. 'import' → logprob: -6.889737606048584
    5. '[' → logprob: -7.764737606048584
    6. '_dp' → logprob: -8.014738082885742
    7. '
' → logprob: -8.264738082885742
    8. '	dp' → logprob: -8.639738082885742
    9. '\' → logprob: -8.764738082885742
    10. '    
' → logprob: -9.014738082885742

Token 394: ' At' (ID: 3604)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0016334053361788392
    2. '   ' → logprob: -6.876633167266846
    3. 'import' → logprob: -7.751633167266846
    4. 'from' → logprob: -9.501633644104004
    5. ' dp' → logprob: -9.751633644104004
    6. ']' → logprob: -11.251633644104004
    7. '#' → logprob: -12.376633644104004
    8. '    
' → logprob: -12.501633644104004
    9. '
' → logprob: -13.126633644104004
    10. 'd' → logprob: -13.251633644104004

Token 395: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20253002643585205
    2. ' i' → logprob: -1.702530026435852
    3. 'for' → logprob: -8.577529907226562
    4. ' for' → logprob: -8.577529907226562
    5. ' each' → logprob: -8.702529907226562
    6. '0' → logprob: -8.827529907226562
    7. ' ' → logprob: -8.952529907226562
    8. '   ' → logprob: -9.452529907226562
    9. ' the' → logprob: -9.952529907226562
    10. '#' → logprob: -10.577529907226562

Token 396: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010485752485692501
    2. ' =' → logprob: -4.760485649108887
    3. '+' → logprob: -6.385485649108887
    4. ' in' → logprob: -9.635485649108887
    5. '>' → logprob: -10.260485649108887
    6. '==' → logprob: -10.635485649108887
    7. ' +' → logprob: -11.260485649108887
    8. '1' → logprob: -11.260485649108887
    9. '0' → logprob: -11.510485649108887
    10. ' ' → logprob: -11.885485649108887

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.277553620748222e-05
    2. ' ' → logprob: -9.750062942504883
    3. '1' → logprob: -12.500062942504883
    4. '=' → logprob: -14.875062942504883
    5. '   ' → logprob: -16.187562942504883
    6. '```' → logprob: -16.625062942504883
    7. ' =' → logprob: -17.937562942504883
    8. ',' → logprob: -18.062562942504883
    9. '  ' → logprob: -18.312562942504883
    10. 'i' → logprob: -18.312562942504883

Token 398: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019189180806279182
    2. '=' → logprob: -4.144189357757568
    3. '   ' → logprob: -7.019189357757568
    4. '[' → logprob: -7.144189357757568
    5. ':' → logprob: -7.644189357757568
    6. ',' → logprob: -7.894189357757568
    7. '=[' → logprob: -8.51918888092041
    8. 'dp' → logprob: -8.76918888092041
    9. 'import' → logprob: -9.76918888092041
    10. '={' → logprob: -9.89418888092041

Token 399: ' y' (ID: 342)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011343240737915039
    2. ' dp' → logprob: -4.761343002319336
    3. 'import' → logprob: -6.136343002319336
    4. 'from' → logprob: -8.261343002319336
    5. '256' → logprob: -8.761343002319336
    6. 'INF' → logprob: -10.636343002319336
    7. 'cost' → logprob: -10.761343002319336
    8. ' from' → logprob: -11.011343002319336
    9. 'prev' → logprob: -11.136343002319336
    10. '   ' → logprob: -11.386343002319336

Token 400: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41597458720207214
    2. ' =' → logprob: -1.6659746170043945
    3. '0' → logprob: -2.5409746170043945
    4. 's' → logprob: -3.0409746170043945
    5. '[' → logprob: -4.5409746170043945
    6. '_' → logprob: -5.0409746170043945
    7. '=[' → logprob: -5.2909746170043945
    8. '```' → logprob: -7.2909746170043945
    9. '_=' → logprob: -7.6659746170043945
    10. '==' → logprob: -8.040974617004395

Token 401: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05581201612949371
    2. ' =' → logprob: -3.305812120437622
    3. '=[' → logprob: -4.680811882019043
    4. '[' → logprob: -4.805811882019043
    5. '```' → logprob: -10.555811882019043
    6. ' =[' → logprob: -10.555811882019043
    7. ']' → logprob: -10.805811882019043
    8. '==' → logprob: -10.930811882019043
    9. '={' → logprob: -11.055811882019043
    10. '={}' → logprob: -12.055811882019043

Token 402: '128' (ID: 8076)
  Prédit: '128'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '128' → logprob: -0.0004402055055834353
    2. ' ' → logprob: -7.7504401206970215
    3. '{' → logprob: -11.87544059753418
    4. '[' → logprob: -14.25044059753418
    5. '1' → logprob: -14.75044059753418
    6. '```' → logprob: -15.12544059753418
    7. '
' → logprob: -15.37544059753418
    8. '   ' → logprob: -15.50044059753418
    9. '{
' → logprob: -15.75044059753418
    10. '  ' → logprob: -16.12544059753418

Token 403: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.525714635848999
    2. ' =' → logprob: -1.525714635848999
    3. '   ' → logprob: -2.525714635848999
    4. 'dp' → logprob: -2.650714635848999
    5. '=' → logprob: -4.650714874267578
    6. 'import' → logprob: -5.025714874267578
    7. ',' → logprob: -5.525714874267578
    8. '```' → logprob: -5.525714874267578
    9. ':' → logprob: -5.650714874267578
    10. '    
' → logprob: -6.025714874267578

Token 404: ' cost' (ID: 3097)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22408200800418854
    2. '0' → logprob: -2.0990819931030273
    3. '{' → logprob: -3.8490819931030273
    4. 'sys' → logprob: -4.474081993103027
    5. '[' → logprob: -4.599081993103027
    6. 'import' → logprob: -4.849081993103027
    7. 'cost' → logprob: -4.849081993103027
    8. 'inf' → logprob: -5.349081993103027
    9. ' dp' → logprob: -5.724081993103027
    10. 'float' → logprob: -5.974081993103027

Token 405: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5750377178192139
    2. '=' → logprob: -1.3250377178192139
    3. 's' → logprob: -1.8250377178192139
    4. '=[' → logprob: -5.200037956237793
    5. '[' → logprob: -5.575037956237793
    6. '   ' → logprob: -7.450037956237793
    7. ' ' → logprob: -9.200037956237793
    8. '={' → logprob: -9.700037956237793
    9. '=[[' → logprob: -9.950037956237793
    10. 'array' → logprob: -10.075037956237793

Token 406: '0' (ID: 15)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.25299978256225586
    2. '0' → logprob: -1.5029997825622559
    3. ' {' → logprob: -7.002999782562256
    4. '[' → logprob: -9.253000259399414
    5. ' ' → logprob: -10.378000259399414
    6. 'float' → logprob: -10.878000259399414
    7. '{}' → logprob: -12.003000259399414
    8. '{}
' → logprob: -12.878000259399414
    9. '{
' → logprob: -13.878000259399414
    10. 'sys' → logprob: -14.128000259399414

Token 407: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7341874241828918
    2. '
' → logprob: -0.8591874241828918
    3. '   ' → logprob: -2.484187364578247
    4. ' dp' → logprob: -5.484187602996826
    5. 'import' → logprob: -5.609187602996826
    6. '    
' → logprob: -6.609187602996826
    7. '	dp' → logprob: -7.359187602996826
    8. '_dp' → logprob: -7.484187602996826
    9. '```' → logprob: -7.609187602996826
    10. ':' → logprob: -8.609187126159668

Token 408: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012927140109241009
    2. '   ' → logprob: -4.887927055358887
    3. '
' → logprob: -5.762927055358887
    4. 'import' → logprob: -6.262927055358887
    5. ' dp' → logprob: -9.387927055358887
    6. '    
' → logprob: -9.387927055358887
    7. 'from' → logprob: -10.262927055358887
    8. '```' → logprob: -10.512927055358887
    9. '	dp' → logprob: -11.762927055358887
    10. '_dp' → logprob: -12.137927055358887

Token 409: ' INF' (ID: 69196)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0908363088965416
    2. '   ' → logprob: -2.5908362865448
    3. 'import' → logprob: -4.465836524963379
    4. 'from' → logprob: -8.590836524963379
    5. 'INF' (adapté à ' INF') → logprob: -9.215836524963379
    6. ' dp' → logprob: -9.465836524963379
    7. '
' → logprob: -12.090836524963379
    8. '	dp' → logprob: -12.090836524963379
    9. ' import' → logprob: -13.590836524963379
    10. '```' → logprob: -13.840836524963379

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889319956302643
    2. '=' → logprob: -2.5788931846618652
    3. '=int' → logprob: -12.828893661499023
    4. '_' → logprob: -14.828893661499023
    5. '=float' → logprob: -15.953893661499023
    6. '＝' → logprob: -16.453893661499023
    7. ')' → logprob: -16.828893661499023
    8. '   ' → logprob: -16.828893661499023
    9. ',' → logprob: -17.203893661499023
    10. '=}' → logprob: -17.453893661499023

Token 411: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00710510928183794
    2. 'float' → logprob: -5.007104873657227
    3. ' ' → logprob: -8.257104873657227
    4. '1' → logprob: -9.132104873657227
    5. ' float' → logprob: -11.007104873657227
    6. 'int' → logprob: -12.257104873657227
    7. '100' → logprob: -14.382104873657227
    8. '999' → logprob: -15.382104873657227
    9. '   ' → logprob: -17.382104873657227
    10. '  ' → logprob: -19.507104873657227

Token 412: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005439369939267635
    2. 'float' → logprob: -5.255439281463623
    3. '1' → logprob: -8.505439758300781
    4. 'int' → logprob: -13.005439758300781
    5. '100' → logprob: -14.630439758300781
    6. '999' → logprob: -15.380439758300781
    7. ' float' → logprob: -15.880439758300781
    8. ' ' → logprob: -16.00543975830078
    9. '123' → logprob: -19.00543975830078
    10. '987' → logprob: -19.75543975830078

Token 413: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002774246677290648
    2. '10' → logprob: -8.875277519226074
    3. '7' → logprob: -9.250277519226074
    4. '8' → logprob: -10.500277519226074
    5. '12' → logprob: -11.625277519226074
    6. '09' → logprob: -13.250277519226074
    7. '6' → logprob: -13.375277519226074
    8. '18' → logprob: -14.125277519226074
    9. '**' → logprob: -14.750277519226074
    10. '15' → logprob: -15.500277519226074

Token 414: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002602172316983342
    2. '15' → logprob: -6.0026021003723145
    3. '10' → logprob: -9.752602577209473
    4. '18' → logprob: -10.002602577209473
    5. '12' → logprob: -10.877602577209473
    6. '7' → logprob: -13.252602577209473
    7. '14' → logprob: -13.377602577209473
    8. '8' → logprob: -14.877602577209473
    9. '16' → logprob: -15.502602577209473
    10. '13' → logprob: -15.752602577209473

Token 415: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.41915249824523926
    2. '   ' → logprob: -1.6691524982452393
    3. '
' → logprob: -1.9191524982452393
    4. ' dp' → logprob: -5.66915225982666
    5. '    
' → logprob: -6.41915225982666
    6. '	dp' → logprob: -6.41915225982666
    7. '_dp' → logprob: -8.66915225982666
    8. '
' → logprob: -10.04415225982666
    9. 'DP' → logprob: -10.16915225982666
    10. '(dp' → logprob: -10.16915225982666

Token 416: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22689072787761688
    2. '   ' → logprob: -1.6018906831741333
    3. ' dp' → logprob: -6.726890563964844
    4. '
' → logprob: -8.851890563964844
    5. '	dp' → logprob: -9.476890563964844
    6. 'import' → logprob: -10.976890563964844
    7. '    
' → logprob: -11.101890563964844
    8. '_dp' → logprob: -11.726890563964844
    9. 'DP' → logprob: -12.601890563964844
    10. 'cost' → logprob: -12.976890563964844

Token 417: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.01454869657754898
    2. '   ' → logprob: -4.2645487785339355
    3. ' dp' → logprob: -8.264548301696777
    4. 'import' → logprob: -9.014548301696777
    5. 'from' → logprob: -12.639548301696777
    6. '	dp' → logprob: -13.639548301696777
    7. '
' → logprob: -14.889548301696777
    8. 'cost' → logprob: -15.264548301696777
    9. '    
' → logprob: -15.389548301696777
    10. 'DP' → logprob: -15.889548301696777

Token 418: '_prev' (ID: 60491)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004430709406733513
    2. '=' → logprob: -5.504430770874023
    3. '[' → logprob: -9.129430770874023
    4. ' =[' → logprob: -9.129430770874023
    5. '=[' → logprob: -9.379430770874023
    6. ' ' → logprob: -10.379430770874023
    7. '=[[' → logprob: -11.754430770874023
    8. '   ' → logprob: -12.254430770874023
    9. '0' → logprob: -13.504430770874023
    10. '.append' → logprob: -13.754430770874023

Token 419: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520228624343872
    2. '=' → logprob: -1.5020228624343872
    3. '[' → logprob: -9.877022743225098
    4. '=[' → logprob: -10.502022743225098
    5. ' =[' → logprob: -12.127022743225098
    6. ',' → logprob: -12.377022743225098
    7. ')' → logprob: -13.127022743225098
    8. ']' → logprob: -14.502022743225098
    9. '```' → logprob: -14.877022743225098
    10. '={}' → logprob: -14.877022743225098

Token 420: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.04368546977639198
    2. '[' → logprob: -3.2936854362487793
    3. ' {' → logprob: -5.918685436248779
    4. ' [' → logprob: -5.918685436248779
    5. '{}' → logprob: -8.793685913085938
    6. '[-' → logprob: -9.793685913085938
    7. 'dict' → logprob: -10.918685913085938
    8. '   ' → logprob: -12.043685913085938
    9. '{}
' → logprob: -12.293685913085938
    10. ' [-' → logprob: -13.168685913085938

Token 421: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -3.292907877039397e-06
    2. '0' → logprob: -12.75000286102295
    3. ' INF' → logprob: -15.25000286102295
    4. '-INF' → logprob: -16.500003814697266
    5. '_INF' → logprob: -18.000003814697266
    6. 'float' → logprob: -18.250003814697266
    7. 'inf' → logprob: -18.500003814697266
    8. '-' → logprob: -19.125003814697266
    9. 'None' → logprob: -19.750003814697266
    10. 'IN' → logprob: -19.875003814697266

Token 422: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0892055481672287
    2. ']*' → logprob: -2.464205503463745
    3. ']*(' → logprob: -9.464205741882324
    4. ']+' → logprob: -9.714205741882324
    5. ' ]' → logprob: -9.714205741882324
    6. ' for' → logprob: -9.714205741882324
    7. 'for' → logprob: -11.964205741882324
    8. '"]' → logprob: -15.464205741882324
    9. '   ' → logprob: -15.964205741882324
    10. ',' → logprob: -16.839204788208008

Token 423: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -3.130576806142926e-05
    2. '(' → logprob: -10.750031471252441
    3. '257' → logprob: -12.125031471252441
    4. '300' → logprob: -12.625031471252441
    5. '```' → logprob: -14.375031471252441
    6. ' ' → logprob: -16.125030517578125
    7. '260' → logprob: -16.500030517578125
    8. '512' → logprob: -16.750030517578125
    9. '258' → logprob: -16.875030517578125
    10. '   ' → logprob: -16.875030517578125

Token 424: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006940328981727362
    2. '
' → logprob: -5.0069403648376465
    3. '   ' → logprob: -9.381939888000488
    4. '    
' → logprob: -9.756939888000488
    5. ' dp' → logprob: -10.131939888000488
    6. '	dp' → logprob: -11.131939888000488
    7. '  
' → logprob: -12.006939888000488
    8. '(dp' → logprob: -12.131939888000488
    9. '_dp' → logprob: -12.381939888000488
    10. 'DP' → logprob: -12.506939888000488

Token 425: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0061284638941287994
    2. '   ' → logprob: -5.631128311157227
    3. '128' → logprob: -6.631128311157227
    4. '0' → logprob: -7.006128311157227
    5. ' dp' → logprob: -9.006128311157227
    6. '[' → logprob: -9.631128311157227
    7. '    
' → logprob: -10.131128311157227
    8. '
' → logprob: -10.756128311157227
    9. 'cl' → logprob: -11.256128311157227
    10. '	dp' → logprob: -11.631128311157227

Token 426: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0044931392185389996
    2. '   ' → logprob: -5.504493236541748
    3. '128' → logprob: -8.00449275970459
    4. ' dp' → logprob: -9.50449275970459
    5. '	dp' → logprob: -12.75449275970459
    6. 'for' → logprob: -14.12949275970459
    7. '  ' → logprob: -14.37949275970459
    8. '    
' → logprob: -14.50449275970459
    9. ' ' → logprob: -14.62949275970459
    10. '(dp' → logprob: -15.00449275970459

Token 427: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.00014084660506341606
    2. 'prev' → logprob: -9.250141143798828
    3. '_' → logprob: -10.500141143798828
    4. '[' → logprob: -11.375141143798828
    5. '_previous' → logprob: -13.500141143798828
    6. 'Prev' → logprob: -13.625141143798828
    7. ' _' → logprob: -14.125141143798828
    8. '\' → logprob: -14.875141143798828
    9. '```' → logprob: -15.125141143798828
    10. '	prev' → logprob: -15.250141143798828

Token 428: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.253713218029588e-05
    2. ' =' → logprob: -10.500062942504883
    3. '=' → logprob: -11.000062942504883
    4. ' [' → logprob: -12.000062942504883
    5. ']' → logprob: -12.750062942504883
    6. '][' → logprob: -13.125062942504883
    7. '[:]' → logprob: -13.125062942504883
    8. '[
' → logprob: -13.500062942504883
    9. '[int' → logprob: -14.500062942504883
    10. '```' → logprob: -14.625062942504883

Token 429: '128' (ID: 8076)
  Prédit: '128'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '128' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '1' → logprob: -16.75
    4. '0' → logprob: -17.625
    5. '138' → logprob: -18.125
    6. '129' → logprob: -18.375
    7. '[' → logprob: -18.625
    8. '```' → logprob: -19.75
    9. '127' → logprob: -19.875
    10. ']' → logprob: -20.0

Token 430: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017529279284644872
    2. ']=' → logprob: -8.750175476074219
    3. ' ]' → logprob: -11.000175476074219
    4. '=' → logprob: -17.25017547607422
    5. ')' → logprob: -18.00017547607422
    6. '   ' → logprob: -18.12517547607422
    7. ']+=' → logprob: -18.50017547607422
    8. '']' → logprob: -18.75017547607422
    9. ']==' → logprob: -18.87517547607422
    10. ']
' → logprob: -19.50017547607422

Token 431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. ']=' → logprob: -17.60020637512207
    4. ' ' → logprob: -18.60020637512207
    5. ']' → logprob: -18.60020637512207
    6. '=}' → logprob: -19.22520637512207
    7. '=int' → logprob: -19.47520637512207
    8. '	' → logprob: -19.60020637512207
    9. '＝' → logprob: -19.85020637512207
    10. ' ' → logprob: -20.10020637512207

Token 432: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -21.375
    4. '۰' → logprob: -22.375
    5. '  ' → logprob: -23.125
    6. '000' → logprob: -24.0
    7. '```' → logprob: -24.375
    8. '00' → logprob: -24.625
    9. '
' → logprob: -25.25
    10. '    ' → logprob: -25.3125

Token 433: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -21.25
    4. '۰' → logprob: -22.25
    5. '  ' → logprob: -23.25
    6. '000' → logprob: -23.625
    7. '    ' → logprob: -24.625
    8. '０' → logprob: -24.625
    9. '00' → logprob: -24.75
    10. '```' → logprob: -25.4375

Token 434: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036494456231594086
    2. 'for' → logprob: -3.411494493484497
    3. ' for' → logprob: -5.911494255065918
    4. '    
' → logprob: -9.786494255065918
    5. '<|end|>' → logprob: -10.036494255065918
    6. '
' → logprob: -11.161494255065918
    7. '	for' → logprob: -11.161494255065918
    8. ')' → logprob: -13.286494255065918
    9. '<|end|>' → logprob: -13.411494255065918
    10. ',' → logprob: -13.536494255065918

Token 435: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06768384575843811
    2. '   ' → logprob: -3.0676839351654053
    3. 'dp' → logprob: -4.317683696746826
    4. ' for' → logprob: -5.192683696746826
    5. '	for' → logprob: -10.692684173583984
    6. ' dp' → logprob: -13.692684173583984
    7. '    
' → logprob: -13.692684173583984
    8. '	dp' → logprob: -14.317684173583984
    9. 'from' → logprob: -14.442684173583984
    10. '```' → logprob: -15.317684173583984

Token 436: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001817297888919711
    2. '   ' → logprob: -8.750182151794434
    3. ' for' → logprob: -11.125182151794434
    4. 'dp' → logprob: -11.750182151794434
    5. 'from' → logprob: -15.375182151794434
    6. '	for' → logprob: -16.375181198120117
    7. '    
' → logprob: -16.625181198120117
    8. 'import' → logprob: -17.375181198120117
    9. '  ' → logprob: -18.625181198120117
    10. ' ' → logprob: -19.500181198120117

Token 437: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759502649307251
    2. 'i' → logprob: -0.8259502649307251
    3. '   ' → logprob: -11.700950622558594
    4. '	i' → logprob: -13.575950622558594
    5. ' ' → logprob: -13.950950622558594
    6. '_i' → logprob: -15.200950622558594
    7. '  ' → logprob: -17.325950622558594
    8. ' ' → logprob: -17.450950622558594
    9. '    ' → logprob: -18.200950622558594
    10. '`' → logprob: -18.700950622558594

Token 438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003203377593308687
    2. 'in' → logprob: -5.753203392028809
    3. ' ' → logprob: -10.878203392028809
    4. '	in' → logprob: -12.878203392028809
    5. '+' → logprob: -14.003203392028809
    6. '   ' → logprob: -14.503203392028809
    7. '    ' → logprob: -14.628203392028809
    8. ' i' → logprob: -14.628203392028809
    9. '1' → logprob: -14.878203392028809
    10. ',' → logprob: -15.003203392028809

Token 439: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018151583150029182
    2. ' range' → logprob: -4.018151760101318
    3. '   ' → logprob: -13.89315128326416
    4. ' ' → logprob: -14.14315128326416
    5. '(range' → logprob: -17.018152236938477
    6. '  ' → logprob: -17.143152236938477
    7. '	range' → logprob: -17.893152236938477
    8. '    ' → logprob: -18.518152236938477
    9. '1' → logprob: -18.768152236938477
    10. 'in' → logprob: -18.893152236938477

Token 440: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015097891446202993
    2. '(N' → logprob: -8.875150680541992
    3. '1' → logprob: -12.000150680541992
    4. ' (' → logprob: -12.375150680541992
    5. '(
' → logprob: -15.125150680541992
    6. '   ' → logprob: -15.375150680541992
    7. ' ' → logprob: -15.875150680541992
    8. '(i' → logprob: -16.375150680541992
    9. '(n' → logprob: -18.500150680541992
    10. 'N' → logprob: -18.750150680541992

Token 441: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004643842112272978
    2. '):
' → logprob: -5.50464391708374
    3. '+' → logprob: -7.87964391708374
    4. ' ):' → logprob: -8.879643440246582
    5. '   ' → logprob: -10.629643440246582
    6. ')' → logprob: -11.004643440246582
    7. '):
' → logprob: -13.004643440246582
    8. ':' → logprob: -13.504643440246582
    9. ' +' → logprob: -14.629643440246582
    10. ',' → logprob: -14.754643440246582

Token 442: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6689278483390808
    2. '       ' → logprob: -0.7939278483390808
    3. 'dp' → logprob: -3.4189279079437256
    4. ' dp' → logprob: -5.9189276695251465
    5. '	dp' → logprob: -8.668928146362305
    6. '     ' → logprob: -11.043928146362305
    7. '_dp' → logprob: -11.293928146362305
    8. '(dp' → logprob: -11.918928146362305
    9. '    ' → logprob: -11.918928146362305
    10. '	   ' → logprob: -12.168928146362305

Token 443: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.009761640802025795
    2. '   ' → logprob: -4.884761810302734
    3. ' dp' → logprob: -6.259761810302734
    4. '       ' → logprob: -8.384761810302734
    5. '	dp' → logprob: -11.509761810302734
    6. 'import' → logprob: -14.259761810302734
    7. '_dp' → logprob: -14.384761810302734
    8. ' ' → logprob: -14.759761810302734
    9. '    ' → logprob: -14.884761810302734
    10. '  ' → logprob: -15.259761810302734

Token 444: '_curr' (ID: 92432)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.37482208013534546
    2. '_current' → logprob: -1.8748221397399902
    3. '_prev' → logprob: -2.6248221397399902
    4. '_curr' → logprob: -2.6248221397399902
    5. '_cur' → logprob: -5.12482213973999
    6. '_new' → logprob: -6.12482213973999
    7. ' _' → logprob: -6.37482213973999
    8. '_now' → logprob: -6.62482213973999
    9. '_' → logprob: -7.12482213973999
    10. ' =' → logprob: -7.49982213973999

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10029099881649017
    2. '=' → logprob: -2.3502910137176514
    3. '=[' → logprob: -9.47529125213623
    4. ' =[' → logprob: -11.85029125213623
    5. '[' → logprob: -15.10029125213623
    6. '   ' → logprob: -15.97529125213623
    7. ' ' → logprob: -16.850290298461914
    8. '=[]' → logprob: -16.975290298461914
    9. ' [' → logprob: -17.475290298461914
    10. ')' → logprob: -18.225290298461914

Token 446: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009125363430939615
    2. ' [' → logprob: -7.000912666320801
    3. '   ' → logprob: -13.8759126663208
    4. ' ' → logprob: -15.8759126663208
    5. '  ' → logprob: -19.375911712646484
    6. '    ' → logprob: -20.000911712646484
    7. '=[' → logprob: -20.500911712646484
    8. '[I' → logprob: -20.500911712646484
    9. '[MAX' → logprob: -20.750911712646484
    10. '([' → logprob: -20.875911712646484

Token 447: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: 0.0
    2. '10' → logprob: -18.5
    3. ' INF' → logprob: -18.625
    4. '_INF' → logprob: -20.125
    5. '
' → logprob: -21.125
    6. 'inf' → logprob: -21.625
    7. '-INF' → logprob: -21.625
    8. '   ' → logprob: -21.875
    9. '[' → logprob: -22.125
    10. '0' → logprob: -22.5

Token 448: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.313385009765625
    2. ']' → logprob: -1.313385009765625
    3. ' ]' → logprob: -9.438385009765625
    4. '   ' → logprob: -11.063385009765625
    5. ']+' → logprob: -11.063385009765625
    6. ']*(' → logprob: -12.063385009765625
    7. '*' → logprob: -12.938385009765625
    8. ']<<' → logprob: -14.688385009765625
    9. ']int' → logprob: -14.813385009765625
    10. '```' → logprob: -14.813385009765625

Token 449: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '255' → logprob: -19.875
    4. '```' → logprob: -21.25
    5. '2' → logprob: -21.375
    6. '265' → logprob: -22.625
    7. '(' → logprob: -23.25
    8. '[' → logprob: -23.25
    9. '356' → logprob: -23.375
    10. '=' → logprob: -23.8125

Token 450: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011365631595253944
    2. '   ' → logprob: -4.7613654136657715
    3. 'for' → logprob: -6.1363654136657715
    4. ' for' → logprob: -7.5113654136657715
    5. '<|end|>' → logprob: -10.76136589050293
    6. '	for' → logprob: -12.01136589050293
    7. '	   ' → logprob: -12.26136589050293
    8. ' ' → logprob: -13.76136589050293
    9. '        
' → logprob: -14.01136589050293
    10. '           ' → logprob: -14.13636589050293

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011025778017938137
    2. '   ' → logprob: -5.136025905609131
    3. 'for' → logprob: -5.511025905609131
    4. ' for' → logprob: -6.886025905609131
    5. '	for' → logprob: -11.136025428771973
    6. '	   ' → logprob: -12.636025428771973
    7. '           ' → logprob: -14.511025428771973
    8. ' ' → logprob: -14.761025428771973
    9. '	' → logprob: -14.761025428771973
    10. '     ' → logprob: -15.261025428771973

Token 452: ' xi' (ID: 26869)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006705015548504889
    2. '   ' → logprob: -7.375670433044434
    3. ' for' → logprob: -10.875670433044434
    4. '       ' → logprob: -11.125670433044434
    5. 'c' → logprob: -12.125670433044434
    6. 'code' → logprob: -13.500670433044434
    7. 'k' → logprob: -14.125670433044434
    8. '        
' → logprob: -14.750670433044434
    9. 'prev' → logprob: -14.875670433044434
    10. '	for' → logprob: -15.000670433044434

Token 453: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761269330978394
    2. ' =' → logprob: -0.8261269330978394
    3. '_val' → logprob: -9.451127052307129
    4. '   ' → logprob: -10.576127052307129
    5. 'for' → logprob: -10.576127052307129
    6. 'x' → logprob: -11.326127052307129
    7. '_' → logprob: -11.451127052307129
    8. '_value' → logprob: -11.826127052307129
    9. 'value' → logprob: -12.451127052307129
    10. 'val' → logprob: -12.451127052307129

Token 454: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.676292231422849e-05
    2. ' x' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.000017166137695
    4. '	x' → logprob: -20.125017166137695
    5. '(x' → logprob: -21.250017166137695
    6. ' ' → logprob: -23.375017166137695
    7. '  ' → logprob: -23.500017166137695
    8. '       ' → logprob: -23.750017166137695
    9. ',x' → logprob: -23.875017166137695
    10. '    ' → logprob: -23.875017166137695

Token 455: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. 'i' → logprob: -16.0
    4. '   ' → logprob: -17.5
    5. ' [' → logprob: -17.625
    6. '       ' → logprob: -18.125
    7. '
' → logprob: -18.25
    8. '[
' → logprob: -18.25
    9. '_i' → logprob: -18.75
    10. '[I' → logprob: -18.875

Token 456: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.18396922945976257
    2. ']' → logprob: -1.933969259262085
    3. '       ' → logprob: -4.433969020843506
    4. ')
' → logprob: -4.933969020843506
    5. ')' → logprob: -5.683969020843506
    6. '   ' → logprob: -7.433969020843506
    7. ']
' → logprob: -8.808969497680664
    8. ' ]
' → logprob: -9.433969497680664
    9. '
' → logprob: -9.558969497680664
    10. ']

' → logprob: -10.558969497680664

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011944045312702656
    2. 'for' → logprob: -4.761943817138672
    3. '   ' → logprob: -5.886943817138672
    4. ' for' → logprob: -7.511943817138672
    5. '	for' → logprob: -14.261943817138672
    6. ' ' → logprob: -15.011943817138672
    7. '           ' → logprob: -15.511943817138672
    8. '	   ' → logprob: -15.636943817138672
    9. '<|end|>' → logprob: -16.136943817138672
    10. '        
' → logprob: -16.136943817138672

Token 458: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010213677771389484
    2. '   ' → logprob: -4.760213851928711
    3. ' for' → logprob: -6.510213851928711
    4. '       ' → logprob: -9.135213851928711
    5. '	for' → logprob: -13.635213851928711
    6. ' ' → logprob: -15.010213851928711
    7. '  ' → logprob: -15.385213851928711
    8. '    
' → logprob: -16.38521385192871
    9. '```' → logprob: -18.01021385192871
    10. '    ' → logprob: -18.01021385192871

Token 459: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002133960137143731
    2. 'prev' → logprob: -6.377133846282959
    3. ' y' → logprob: -8.752134323120117
    4. 'c' → logprob: -9.127134323120117
    5. 'curr' → logprob: -9.252134323120117
    6. 'yi' → logprob: -11.502134323120117
    7. 'code' → logprob: -11.752134323120117
    8. 'yc' → logprob: -12.127134323120117
    9. 'yj' → logprob: -12.127134323120117
    10. 'v' → logprob: -12.377134323120117

Token 460: 'prev' (ID: 15969)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3877793550491333
    2. ' in' → logprob: -1.1377793550491333
    3. 'y' → logprob: -8.137779235839844
    4. '0' → logprob: -8.262779235839844
    5. 'i' → logprob: -9.012779235839844
    6. '_in' → logprob: -9.637779235839844
    7. '_prev' → logprob: -10.012779235839844
    8. 'prev' → logprob: -10.387779235839844
    9. '_' → logprob: -10.887779235839844
    10. 'range' → logprob: -11.012779235839844

Token 461: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0789778083562851
    2. 'in' → logprob: -2.5789778232574463
    3. 'y' → logprob: -10.453977584838867
    4. ' ' → logprob: -11.703977584838867
    5. ',' → logprob: -11.828977584838867
    6. '0' → logprob: -12.578977584838867
    7. 'In' → logprob: -12.578977584838867
    8. 's' → logprob: -12.703977584838867
    9. 'import' → logprob: -12.703977584838867
    10. '	in' → logprob: -12.703977584838867

Token 462: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019288709154352546
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -15.75192928314209
    4. '	range' → logprob: -16.876928329467773
    5. '0' → logprob: -17.126928329467773
    6. '[' → logprob: -19.126928329467773
    7. '   ' → logprob: -19.126928329467773
    8. '
' → logprob: -19.376928329467773
    9. ' ' → logprob: -19.626928329467773
    10. '  ' → logprob: -20.376928329467773

Token 463: '(' (ID: 7)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: 0.0
    2. '(' → logprob: -17.625
    3. '0' → logprob: -19.125
    4. '255' → logprob: -20.25
    5. '
' → logprob: -22.5
    6. ' ' → logprob: -22.625
    7. '1' → logprob: -23.125
    8. '26' → logprob: -23.5
    9. '=' → logprob: -23.625
    10. '56' → logprob: -24.0

Token 464: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: 0.0
    2. '0' → logprob: -18.5
    3. ' ' → logprob: -19.25
    4. '   ' → logprob: -21.625
    5. '(' → logprob: -21.625
    6. '1' → logprob: -21.75
    7. 'max' → logprob: -22.375
    8. ')' → logprob: -22.5
    9. '255' → logprob: -22.5
    10. 'len' → logprob: -22.75

Token 465: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10029562562704086
    2. '):
' → logprob: -2.3502955436706543
    3. '       ' → logprob: -9.975296020507812
    4. '):
' → logprob: -10.600296020507812
    5. ':' → logprob: -11.725296020507812
    6. ')' → logprob: -12.600296020507812
    7. '):

' → logprob: -13.225296020507812
    8. ' ):' → logprob: -13.350296020507812
    9. '   ' → logprob: -13.475296020507812
    10. '           ' → logprob: -14.475296020507812

Token 466: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017941193655133247
    2. ' if' → logprob: -4.142940998077393
    3. '       ' → logprob: -6.767940998077393
    4. ' for' → logprob: -7.892940998077393
    5. 'if' → logprob: -8.39294147491455
    6. '	       ' → logprob: -9.39294147491455
    7. '   ' → logprob: -10.64294147491455
    8. '        ' → logprob: -11.14294147491455
    9. 'for' → logprob: -11.89294147491455
    10. '         ' → logprob: -12.01794147491455

Token 467: ' prev' (ID: 10258)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020723825320601463
    2. 'cost' → logprob: -4.520723819732666
    3. ' if' → logprob: -4.770723819732666
    4. 'prev' (adapté à ' prev') → logprob: -7.770723819732666
    5. 'c' → logprob: -8.270724296569824
    6. '           ' → logprob: -8.645724296569824
    7. 'curr' → logprob: -9.145724296569824
    8. '   ' → logprob: -9.520724296569824
    9. 'cur' → logprob: -9.645724296569824
    10. ' cost' → logprob: -11.395724296569824

Token 468: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.08948025852441788
    2. 'cost' → logprob: -2.46448016166687
    3. '_c' → logprob: -8.08948040008545
    4. '_val' → logprob: -9.33948040008545
    5. 'c' → logprob: -9.46448040008545
    6. 'Cost' → logprob: -10.96448040008545
    7. '=' → logprob: -11.21448040008545
    8. ' =' → logprob: -11.71448040008545
    9. ' cost' → logprob: -12.33948040008545
    10. 'dp' → logprob: -12.33948040008545

Token 469: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478977203369
    2. ' =' → logprob: -0.6931478977203369
    3. '   ' → logprob: -15.068147659301758
    4. ' ' → logprob: -15.943147659301758
    5. '    ' → logprob: -16.568147659301758
    6. '       ' → logprob: -17.068147659301758
    7. ':' → logprob: -17.193147659301758
    8. ',' → logprob: -17.193147659301758
    9. '=sys' → logprob: -17.693147659301758
    10. ' if' → logprob: -17.818147659301758

Token 470: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0011705794604495168
    2. ' dp' → logprob: -6.751170635223389
    3. '	dp' → logprob: -15.25117015838623
    4. '(dp' → logprob: -17.126171112060547
    5. '           ' → logprob: -17.376171112060547
    6. '_dp' → logprob: -17.626171112060547
    7. '   ' → logprob: -20.376171112060547
    8. '.dp' → logprob: -20.501171112060547
    9. ' ' → logprob: -21.251171112060547
    10. 'd' → logprob: -21.376171112060547

Token 471: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -1.0280383548888494e-06
    2. 'prev' → logprob: -14.250000953674316
    3. ' _' → logprob: -17.000001907348633
    4. '_' → logprob: -17.125001907348633
    5. '_pred' → logprob: -17.375001907348633
    6. '_curr' → logprob: -17.500001907348633
    7. '_prec' → logprob: -17.750001907348633
    8. '[_' → logprob: -17.750001907348633
    9. 'Prev' → logprob: -19.125001907348633
    10. '[' → logprob: -19.250001907348633

Token 472: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026589972898364067
    2. 'yp' → logprob: -3.651589870452881
    3. ' [' → logprob: -8.651590347290039
    4. ' y' → logprob: -10.276590347290039
    5. '
' → logprob: -10.401590347290039
    6. '[
' → logprob: -11.526590347290039
    7. ' yp' → logprob: -11.776590347290039
    8. '[y' → logprob: -12.151590347290039
    9. 'ypy' → logprob: -12.401590347290039
    10. '```' → logprob: -12.401590347290039

Token 473: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -4.320199877838604e-07
    2. 'y' → logprob: -15.625
    3. ' y' → logprob: -15.625
    4. 'ypass' → logprob: -16.25
    5. 'yper' → logprob: -18.25
    6. '

' → logprob: -18.5
    7. '
' → logprob: -19.375
    8. 'ypad' → logprob: -19.875
    9. '[' → logprob: -20.0
    10. '```' → logprob: -20.125

Token 474: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -3.1424973713001236e-05
    2. 're' → logprob: -10.625031471252441
    3. 'ev' → logprob: -12.000031471252441
    4. 'prev' → logprob: -14.875031471252441
    5. 'erv' → logprob: -15.125031471252441
    6. ' rev' → logprob: -16.500030517578125
    7. 'ref' → logprob: -16.750030517578125
    8. 'rel' → logprob: -17.500030517578125
    9. 'res' → logprob: -18.125030517578125
    10. 'r' → logprob: -18.375030517578125

Token 475: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7364148497581482
    2. ')
' → logprob: -1.236414909362793
    3. '           ' → logprob: -1.611414909362793
    4. ']' → logprob: -4.486414909362793
    5. ']
' → logprob: -4.861414909362793
    6. '
' → logprob: -5.236414909362793
    7. '               ' → logprob: -5.861414909362793
    8. '       ' → logprob: -6.486414909362793
    9. '                   ' → logprob: -7.736414909362793
    10. '   ' → logprob: -8.611414909362793

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021195695735514164
    2. '<|end|>' → logprob: -6.627119541168213
    3. ' if' → logprob: -8.377120018005371
    4. '	       ' → logprob: -8.877120018005371
    5. '<|end|>' → logprob: -9.127120018005371
    6. '		' → logprob: -9.127120018005371
    7. '       ' → logprob: -9.377120018005371
    8. '               ' → logprob: -10.377120018005371
    9. 'if' → logprob: -11.127120018005371
    10. '          ' → logprob: -11.627120018005371

Token 477: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.024138187989592552
    2. '           ' → logprob: -3.7741382122039795
    3. ' if' → logprob: -7.0241379737854
    4. 'for' → logprob: -13.399138450622559
    5. '	if' → logprob: -15.024138450622559
    6. '       ' → logprob: -15.274138450622559
    7. 'If' → logprob: -16.399137496948242
    8. '               ' → logprob: -17.649137496948242
    9. '   ' → logprob: -17.774137496948242
    10. '		' → logprob: -17.899137496948242

Token 478: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -8.061054359131958e-06
    2. ' prev' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.25000762939453
    4. '	prev' → logprob: -18.50000762939453
    5. '           ' → logprob: -20.37500762939453
    6. '(prev' → logprob: -20.75000762939453
    7. 'previous' → logprob: -21.00000762939453
    8. '  ' → logprob: -21.50000762939453
    9. '
' → logprob: -21.87500762939453
    10. ' ' → logprob: -22.12500762939453

Token 479: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.5213274309644476e-05
    2. 'cost' → logprob: -11.125015258789062
    3. '_COST' → logprob: -14.875015258789062
    4. ' cost' → logprob: -17.250015258789062
    5. 'Cost' → logprob: -17.500015258789062
    6. '_code' → logprob: -17.875015258789062
    7. '-cost' → logprob: -18.750015258789062
    8. '_' → logprob: -18.875015258789062
    9. '_co' → logprob: -18.875015258789062
    10. 'prev' → logprob: -19.250015258789062

Token 480: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07930480688810349
    2. ' ==' → logprob: -2.5793046951293945
    3. '>=' → logprob: -7.8293046951293945
    4. ' >=' → logprob: -11.454304695129395
    5. '<' → logprob: -13.204304695129395
    6. '!=' → logprob: -13.704304695129395
    7. '===' → logprob: -13.829304695129395
    8. '==
' → logprob: -13.954304695129395
    9. '>' → logprob: -14.829304695129395
    10. ']==' → logprob: -15.329304695129395

Token 481: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -6.704273118884885e-07
    2. ' INF' → logprob: -14.625000953674316
    3. 'IN' → logprob: -16.125
    4. '   ' → logprob: -18.375
    5. '_INF' → logprob: -18.875
    6. '-INF' → logprob: -20.625
    7. ' ' → logprob: -20.875
    8. 'inf' → logprob: -21.0
    9. '  ' → logprob: -21.625
    10. 'INV' → logprob: -21.625

Token 482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3561985194683075
    2. ':
' → logprob: -1.7311985492706299
    3. '               ' → logprob: -2.10619854927063
    4. '           ' → logprob: -7.731198310852051
    5. ' continue' → logprob: -8.48119831085205
    6. 'continue' → logprob: -9.23119831085205
    7. ' or' → logprob: -10.23119831085205
    8. '       ' → logprob: -10.98119831085205
    9. '                   ' → logprob: -11.10619831085205
    10. '	continue' → logprob: -11.10619831085205

Token 483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010226861340925097
    2. ':' → logprob: -7.126022815704346
    3. '           ' → logprob: -9.626022338867188
    4. ' continue' → logprob: -9.751022338867188
    5. '	           ' → logprob: -10.626022338867188
    6. ':
' → logprob: -10.876022338867188
    7. '	       ' → logprob: -12.001022338867188
    8. '       ' → logprob: -12.126022338867188
    9. '                   ' → logprob: -12.251022338867188
    10. '<|end|>' → logprob: -12.501022338867188

Token 484: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4330653250217438
    2. '               ' → logprob: -1.4330652952194214
    3. ' continue' → logprob: -2.183065414428711
    4. '	continue' → logprob: -9.183065414428711
    5. '                   ' → logprob: -9.433065414428711
    6. '           ' → logprob: -11.183065414428711
    7. '_continue' → logprob: -12.183065414428711
    8. '   ' → logprob: -12.433065414428711
    9. '	           ' → logprob: -13.808065414428711
    10. '			' → logprob: -14.183065414428711

Token 485: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006048843264579773
    2. '       ' → logprob: -5.131048679351807
    3. '
' → logprob: -9.881049156188965
    4. ' for' → logprob: -10.881049156188965
    5. '   ' → logprob: -11.631049156188965
    6. '        
' → logprob: -11.756049156188965
    7. '	       ' → logprob: -11.881049156188965
    8. '		' → logprob: -12.006049156188965
    9. '               ' → logprob: -12.381049156188965
    10. '	   ' → logprob: -12.631049156188965

Token 486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013572083844337612
    2. '       ' → logprob: -9.12513542175293
    3. ' for' → logprob: -11.62513542175293
    4. '
' → logprob: -12.25013542175293
    5. '   ' → logprob: -12.37513542175293
    6. '	       ' → logprob: -13.25013542175293
    7. '            
' → logprob: -13.75013542175293
    8. '               ' → logprob: -13.87513542175293
    9. '        
' → logprob: -14.00013542175293
    10. '          ' → logprob: -14.12513542175293

Token 487: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.869383692741394
    2. '           ' → logprob: -1.119383692741394
    3. 'for' (adapté à ' for') → logprob: -1.369383692741394
    4. '       ' → logprob: -10.244383811950684
    5. '   ' → logprob: -12.119383811950684
    6. '	for' → logprob: -13.119383811950684
    7. ' ' → logprob: -14.369383811950684
    8. '
' → logprob: -14.494383811950684
    9. '            
' → logprob: -14.869383811950684
    10. '               ' → logprob: -14.994383811950684

Token 488: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.613152265548706
    2. 'k' → logprob: -1.238152265548706
    3. 'ck' → logprob: -1.863152265548706
    4. ' c' → logprob: -4.988152503967285
    5. 'code' → logprob: -6.113152503967285
    6. ' k' → logprob: -6.738152503967285
    7. 'delta' → logprob: -6.863152503967285
    8. ' ck' → logprob: -6.988152503967285
    9. 'offset' → logprob: -8.363152503967285
    10. 'cj' → logprob: -8.738152503967285

Token 489: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20272627472877502
    2. ' in' → logprob: -1.7027262449264526
    3. 'k' → logprob: -6.702726364135742
    4. 'c' → logprob: -9.827726364135742
    5. '_in' → logprob: -12.577726364135742
    6. ' ' → logprob: -12.577726364135742
    7. '_idx' → logprob: -12.827726364135742
    8. ')' → logprob: -12.952726364135742
    9. 'x' → logprob: -12.952726364135742
    10. 'code' → logprob: -13.202726364135742

Token 490: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.0005769816925749183
    2. ' code' → logprob: -7.625576972961426
    3. 'range' → logprob: -9.625576972961426
    4. 'c' → logprob: -12.000576972961426
    5. '   ' → logprob: -12.250576972961426
    6. ' ' → logprob: -12.375576972961426
    7. '(code' → logprob: -12.375576972961426
    8. '_code' → logprob: -14.125576972961426
    9. 'ode' → logprob: -14.250576972961426
    10. '  ' → logprob: -14.500576972961426

Token 491: 'book' (ID: 3092)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0155384540557861
    2. 'book' → logprob: -1.5155384540557861
    3. 'in' → logprob: -1.6405384540557861
    4. 'c' → logprob: -1.6405384540557861
    5. 'k' → logprob: -4.515538215637207
    6. 'idx' → logprob: -5.140538215637207
    7. '_idx' → logprob: -5.765538215637207
    8. 'val' → logprob: -6.140538215637207
    9. 'index' → logprob: -6.140538215637207
    10. 'point' → logprob: -6.515538215637207

Token 492: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06271596997976303
    2. ':
' → logprob: -2.812716007232666
    3. '):
' → logprob: -8.062715530395508
    4. '<|end|>' → logprob: -8.562715530395508
    5. '):' → logprob: -8.687715530395508
    6. '<|end|>' → logprob: -11.062715530395508
    7. ']:' → logprob: -11.437715530395508
    8. ']:
' → logprob: -11.687715530395508
    9. '       ' → logprob: -12.062715530395508
    10. ':

' → logprob: -12.562715530395508

Token 493: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007729397038929164
    2. ' y' → logprob: -8.000772476196289
    3. '           ' → logprob: -8.500772476196289
    4. ' new' → logprob: -9.625772476196289
    5. ',' → logprob: -10.250772476196289
    6. 'y' → logprob: -10.750772476196289
    7. '                
' → logprob: -10.750772476196289
    8. '	           ' → logprob: -11.500772476196289
    9. '              ' → logprob: -11.625772476196289
    10. ' for' → logprob: -11.625772476196289

Token 494: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.10020061582326889
    2. 'yn' → logprob: -2.475200653076172
    3. ' y' → logprob: -5.600200653076172
    4. '                   ' → logprob: -6.100200653076172
    5. 'yc' → logprob: -6.225200653076172
    6. '               ' → logprob: -7.225200653076172
    7. '   ' → logprob: -7.725200653076172
    8. 'new' → logprob: -8.725200653076172
    9. ' yn' → logprob: -8.725200653076172
    10. 'yv' → logprob: -8.725200653076172

Token 495: 'cur' (ID: 3264)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5921080112457275
    2. 'new' → logprob: -1.2171080112457275
    3. 'next' → logprob: -2.4671080112457275
    4. 'curr' → logprob: -4.092107772827148
    5. '=' → logprob: -4.217107772827148
    6. '_next' → logprob: -4.592107772827148
    7. '_new' → logprob: -4.842107772827148
    8. 'cur' → logprob: -5.467107772827148
    9. 'val' → logprob: -5.467107772827148
    10. '_curr' → logprob: -5.592107772827148

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20145875215530396
    2. ' =' → logprob: -1.7014586925506592
    3. '_val' → logprob: -10.826458930969238
    4. '   ' → logprob: -11.951458930969238
    5. '_candidate' → logprob: -12.201458930969238
    6. '_idx' → logprob: -12.701458930969238
    7. '=int' → logprob: -13.201458930969238
    8. 'val' → logprob: -13.326458930969238
    9. '_value' → logprob: -13.826458930969238
    10. ' ' → logprob: -13.951458930969238

Token 497: ' clamp' (ID: 76503)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.014191949740052223
    2. ' clamp' → logprob: -4.5141921043396
    3. 'yp' → logprob: -6.0141921043396
    4. ' yp' → logprob: -8.264191627502441
    5. '   ' → logprob: -8.514191627502441
    6. 'y' → logprob: -10.139191627502441
    7. ' cl' → logprob: -10.139191627502441
    8. ' ' → logprob: -10.639191627502441
    9. '	cl' → logprob: -10.764191627502441
    10. '(cl' → logprob: -11.014191627502441

Token 498: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.6656825866666622e-05
    2. '(prev' → logprob: -11.50002670288086
    3. ' (' → logprob: -11.62502670288086
    4. 'yp' → logprob: -12.50002670288086
    5. '(dp' → logprob: -12.75002670288086
    6. '((' → logprob: -14.12502670288086
    7. '(
' → logprob: -16.62502670288086
    8. '(y' → logprob: -16.87502670288086
    9. ' ' → logprob: -17.00002670288086
    10. '(int' → logprob: -17.25002670288086

Token 499: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.00021593389101326466
    2. ' yp' → logprob: -9.000215530395508
    3. ' y' → logprob: -9.375215530395508
    4. '(' → logprob: -12.875215530395508
    5. 'y' → logprob: -13.250215530395508
    6. ' ' → logprob: -14.125215530395508
    7. '   ' → logprob: -14.250215530395508
    8. '
' → logprob: -14.375215530395508
    9. '0' → logprob: -15.375215530395508
    10. 'ype' → logprob: -15.750215530395508

Token 500: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0015001024585217237
    2. 'prev' → logprob: -6.876500129699707
    3. 're' → logprob: -8.251500129699707
    4. 'ev' → logprob: -8.501500129699707
    5. 'v' → logprob: -14.751500129699707
    6. 'rep' → logprob: -14.751500129699707
    7. '(prev' → logprob: -15.001500129699707
    8. 'ref' → logprob: -15.001500129699707
    9. '
' → logprob: -15.126500129699707
    10. ' ' → logprob: -15.501500129699707

Token 501: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.600365400314331
    2. '+c' → logprob: -0.975365400314331
    3. '+' → logprob: -2.600365400314331
    4. '               ' → logprob: -10.60036563873291
    5. '+y' → logprob: -10.85036563873291
    6. ' +
' → logprob: -11.85036563873291
    7. ' ' → logprob: -11.97536563873291
    8. '+C' → logprob: -11.97536563873291
    9. ' c' → logprob: -12.85036563873291
    10. '                ' → logprob: -12.85036563873291

Token 502: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.848420551046729e-05
    2. ' c' → logprob: -9.7500581741333
    3. '               ' → logprob: -17.000059127807617
    4. '   ' → logprob: -17.250059127807617
    5. '	c' → logprob: -18.250059127807617
    6. ')c' → logprob: -19.125059127807617
    7. '                   ' → logprob: -20.000059127807617
    8. '  ' → logprob: -20.250059127807617
    9. ' ' → logprob: -21.625059127807617
    10. '                               ' → logprob: -21.750059127807617

Token 503: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12701882421970367
    2. ')' → logprob: -2.127018928527832
    3. ')
' → logprob: -9.502018928527832
    4. '               ' → logprob: -11.252018928527832
    5. ' )
' → logprob: -13.252018928527832
    6. ')

' → logprob: -14.252018928527832
    7. ')`
' → logprob: -15.002018928527832
    8. ' )' → logprob: -16.127017974853516
    9. '           ' → logprob: -16.252017974853516
    10. '                   ' → logprob: -17.377017974853516

Token 504: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00025633294717408717
    2. '                
' → logprob: -9.375256538391113
    3. '           ' → logprob: -10.125256538391113
    4. ')' → logprob: -10.250256538391113
    5. '                   ' → logprob: -10.625256538391113
    6. '                ' → logprob: -10.750256538391113
    7. '              ' → logprob: -11.125256538391113
    8. '<|end|>' → logprob: -11.625256538391113
    9. '```' → logprob: -11.875256538391113
    10. '
' → logprob: -12.500256538391113

Token 505: ' diff' (ID: 8868)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1401108056306839
    2. ' cost' → logprob: -2.140110731124878
    3. 'error' → logprob: -5.390110969543457
    4. '               ' → logprob: -5.390110969543457
    5. 'err' → logprob: -6.015110969543457
    6. ' error' → logprob: -7.390110969543457
    7. 'curr' → logprob: -8.515110969543457
    8. '   ' → logprob: -8.765110969543457
    9. 'cur' → logprob: -8.890110969543457
    10. 'new' → logprob: -9.390110969543457

Token 506: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020817816257477
    2. '=' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.725208282470703
    4. '   ' → logprob: -15.225208282470703
    5. '           ' → logprob: -15.475208282470703
    6. '               ' → logprob: -16.100208282470703
    7. '    ' → logprob: -16.225208282470703
    8. ')' → logprob: -16.225208282470703
    9. '            ' → logprob: -16.975208282470703
    10. ' ' → logprob: -16.975208282470703

Token 507: ' xi' (ID: 26869)
  Prédit: 'xi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.09932099282741547
    2. 'x' → logprob: -2.849320888519287
    3. '(x' → logprob: -3.349320888519287
    4. ' xi' → logprob: -6.974320888519287
    5. ' (' → logprob: -8.474321365356445
    6. '(' → logprob: -8.849321365356445
    7. '   ' → logprob: -9.224321365356445
    8. ' x' → logprob: -9.849321365356445
    9. '\x' → logprob: -9.974321365356445
    10. '
' → logprob: -10.724321365356445

Token 508: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0380435548722744
    2. '-' → logprob: -3.28804349899292
    3. ' ' → logprob: -14.038043975830078
    4. ' ' → logprob: -14.038043975830078
    5. '   ' → logprob: -16.038043975830078
    6. 'diff' → logprob: -16.288043975830078
    7. ' -
' → logprob: -16.788043975830078
    8. '  ' → logprob: -17.288043975830078
    9. '−' → logprob: -17.288043975830078
    10. ',' → logprob: -17.913043975830078

Token 509: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002613358374219388
    2. ' y' → logprob: -8.250261306762695
    3. '               ' → logprob: -17.500261306762695
    4. '   ' → logprob: -18.500261306762695
    5. '(y' → logprob: -18.500261306762695
    6. 'dp' → logprob: -18.500261306762695
    7. '           ' → logprob: -18.750261306762695
    8. '                   ' → logprob: -18.875261306762695
    9. '	y' → logprob: -18.875261306762695
    10. '[y' → logprob: -19.375261306762695

Token 510: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.3856492842023727e-06
    2. '[cur' → logprob: -13.875000953674316
    3. ' cur' → logprob: -15.500000953674316
    4. 'y' → logprob: -16.250001907348633
    5. '_cur' → logprob: -16.625001907348633
    6. '[y' → logprob: -17.875001907348633
    7. '[' → logprob: -18.000001907348633
    8. 'cl' → logprob: -18.250001907348633
    9. '	cur' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.500001907348633

Token 511: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06019403412938118
    2. '               ' → logprob: -3.1851940155029297
    3. ')' → logprob: -4.18519401550293
    4. '                
' → logprob: -7.81019401550293
    5. ')**' → logprob: -8.31019401550293
    6. ')
' → logprob: -8.43519401550293
    7. '
' → logprob: -8.68519401550293
    8. ' 
' → logprob: -8.81019401550293
    9. '<|end|>' → logprob: -9.31019401550293
    10. '                   ' → logprob: -9.43519401550293

Token 512: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26388242840766907
    2. '
' → logprob: -2.6388823986053467
    3. 'diff' → logprob: -2.7638823986053467
    4. ' diff' → logprob: -3.8888823986053467
    5. ' 
' → logprob: -4.013882637023926
    6. '                
' → logprob: -4.138882637023926
    7. '  
' → logprob: -4.888882637023926
    8. '*' → logprob: -5.263882637023926
    9. '**' → logprob: -5.388882637023926
    10. '<|end|>' → logprob: -5.513882637023926

Token 513: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.10189317166805267
    2. 'cost' (adapté à ' cost') → logprob: -2.351893186569214
    3. ' new' → logprob: -6.976892948150635
    4. '               ' → logprob: -7.476892948150635
    5. 'new' → logprob: -9.101893424987793
    6. ' curr' → logprob: -10.351893424987793
    7. ' cur' → logprob: -11.601893424987793
    8. '                   ' → logprob: -12.476893424987793
    9. 'curr' → logprob: -12.726893424987793
    10. ' diff' → logprob: -12.851893424987793

Token 514: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859725013375282
    2. '=' → logprob: -3.0485973358154297
    3. '   ' → logprob: -12.67359733581543
    4. '           ' → logprob: -13.04859733581543
    5. '    ' → logprob: -14.67359733581543
    6. '_cost' → logprob: -14.67359733581543
    7. ' ' → logprob: -14.79859733581543
    8. '               ' → logprob: -15.04859733581543
    9. 'cost' → logprob: -15.04859733581543
    10. '_new' → logprob: -15.17359733581543

Token 515: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.009785366244614124
    2. ' prev' → logprob: -4.634785175323486
    3. 'diff' → logprob: -10.759785652160645
    4. '           ' → logprob: -13.134785652160645
    5. '               ' → logprob: -13.509785652160645
    6. '	prev' → logprob: -13.634785652160645
    7. '   ' → logprob: -13.759785652160645
    8. '(prev' → logprob: -13.759785652160645
    9. ' diff' → logprob: -14.509785652160645
    10. '                   ' → logprob: -14.634785652160645

Token 516: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -5.512236498361744e-07
    2. 'cost' → logprob: -14.500000953674316
    3. '_COST' → logprob: -18.375
    4. '_c' → logprob: -18.625
    5. ' cost' → logprob: -19.25
    6. 'Cost' → logprob: -19.25
    7. '-cost' → logprob: -20.125
    8. '_code' → logprob: -20.25
    9. '_' → logprob: -21.0
    10. 't' → logprob: -21.125

Token 517: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023245826363563538
    2. '+' → logprob: -3.7732458114624023
    3. ' +
' → logprob: -16.14824676513672
    4. '
' → logprob: -16.52324676513672
    5. '+
' → logprob: -17.52324676513672
    6. '   ' → logprob: -17.77324676513672
    7. '＋' → logprob: -17.77324676513672
    8. ' ' → logprob: -17.89824676513672
    9. ' ' → logprob: -17.89824676513672
    10. ' plus' → logprob: -18.27324676513672

Token 518: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.575952410697937
    2. 'diff' → logprob: -0.825952410697937
    3. '(diff' → logprob: -11.450952529907227
    4. '	diff' → logprob: -13.450952529907227
    5. '   ' → logprob: -14.075952529907227
    6. ' ' → logprob: -15.825952529907227
    7. '  ' → logprob: -18.450952529907227
    8. '_diff' → logprob: -18.825952529907227
    9. ' (' → logprob: -18.950952529907227
    10. ' dif' → logprob: -19.325952529907227

Token 519: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03806788846850395
    2. ' *' → logprob: -3.2880678176879883
    3. '**' → logprob: -10.663067817687988
    4. 'diff' → logprob: -13.163067817687988
    5. '*d' → logprob: -14.663067817687988
    6. ' diff' → logprob: -15.288067817687988
    7. '(diff' → logprob: -15.788067817687988
    8. '	diff' → logprob: -15.788067817687988
    9. ' **' → logprob: -16.288068771362305
    10. '*object' → logprob: -16.413068771362305

Token 520: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0001426346570951864
    2. ' diff' → logprob: -8.875143051147461
    3. '	diff' → logprob: -13.000143051147461
    4. 'dif' → logprob: -15.500143051147461
    5. '(diff' → logprob: -16.12514305114746
    6. 'd' → logprob: -16.87514305114746
    7. '```' → logprob: -17.37514305114746
    8. '_diff' → logprob: -18.00014305114746
    9. 'difference' → logprob: -18.25014305114746
    10. '   ' → logprob: -18.25014305114746

Token 521: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014764121442567557
    2. '
' → logprob: -9.125147819519043
    3. '<|end|>' → logprob: -11.500147819519043
    4. ' if' → logprob: -11.875147819519043
    5. '           ' → logprob: -12.000147819519043
    6. '                
' → logprob: -12.375147819519043
    7. '                   ' → logprob: -12.875147819519043
    8. '			' → logprob: -13.750147819519043
    9. '```' → logprob: -13.875147819519043
    10. '<|end|>' → logprob: -13.875147819519043

Token 522: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3544423381972592e-05
    2. ' if' → logprob: -12.00001335144043
    3. '           ' → logprob: -13.00001335144043
    4. '```' → logprob: -13.12501335144043
    5. '<|end|>' → logprob: -13.50001335144043
    6. 'if' → logprob: -14.62501335144043
    7. '                   ' → logprob: -14.75001335144043
    8. '			' → logprob: -15.75001335144043
    9. '       ' → logprob: -16.00001335144043
    10. '<|end|>' → logprob: -16.12501335144043

Token 523: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2953200042247772
    2. 'if' (adapté à ' if') → logprob: -1.5453200340270996
    3. '               ' → logprob: -3.1703200340270996
    4. '           ' → logprob: -7.6703200340271
    5. '                   ' → logprob: -12.920319557189941
    6. '	if' → logprob: -13.420319557189941
    7. '```' → logprob: -14.420319557189941
    8. '
' → logprob: -15.045319557189941
    9. 'If' → logprob: -15.045319557189941
    10. '   ' → logprob: -15.295319557189941

Token 524: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.3970506489276886
    2. 'cost' → logprob: -1.1470506191253662
    3. 'dp' → logprob: -5.022050857543945
    4. ' dp' → logprob: -5.647050857543945
    5. '   ' → logprob: -12.147050857543945
    6. '(cost' → logprob: -13.897050857543945
    7. '_cost' → logprob: -14.397050857543945
    8. 'Cost' → logprob: -15.147050857543945
    9. '(dp' → logprob: -15.147050857543945
    10. '       ' → logprob: -15.147050857543945

Token 525: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25195151567459106
    2. '<' → logprob: -1.5019514560699463
    3. 'dp' → logprob: -12.501951217651367
    4. ' dp' → logprob: -12.626951217651367
    5. '<th' → logprob: -13.001951217651367
    6. '<int' → logprob: -13.126951217651367
    7. '(dp' → logprob: -13.251951217651367
    8. '<td' → logprob: -13.376951217651367
    9. '<p' → logprob: -14.001951217651367
    10. '<len' → logprob: -14.376951217651367

Token 526: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.836499985889532e-05
    2. ' dp' → logprob: -9.7500581741333
    3. '	dp' → logprob: -17.625059127807617
    4. '_dp' → logprob: -19.625059127807617
    5. '(dp' → logprob: -20.625059127807617
    6. '
' → logprob: -21.875059127807617
    7. '   ' → logprob: -22.000059127807617
    8. 'd' → logprob: -23.250059127807617
    9. '.dp' → logprob: -23.625059127807617
    10. '           ' → logprob: -23.750059127807617

Token 527: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.0007156503852456808
    2. 'curr' → logprob: -7.250715732574463
    3. '_cur' → logprob: -12.500715255737305
    4. '[curr' → logprob: -13.875715255737305
    5. '_prev' → logprob: -14.000715255737305
    6. '	curr' → logprob: -16.250715255737305
    7. ' curr' → logprob: -16.375715255737305
    8. 'Curr' → logprob: -16.500715255737305
    9. '(curr' → logprob: -18.125715255737305
    10. '_current' → logprob: -18.250715255737305

Token 528: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. 'y' → logprob: -17.125
    4. '[c' → logprob: -17.5
    5. '   ' → logprob: -18.25
    6. ' [' → logprob: -18.75
    7. '       ' → logprob: -19.5
    8. '[Y' → logprob: -19.5
    9. '```' → logprob: -19.75
    10. '[
' → logprob: -20.75

Token 529: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -5.512236498361744e-07
    2. '[cur' → logprob: -14.750000953674316
    3. '_cur' → logprob: -17.625
    4. 'curr' → logprob: -18.125
    5. '	cur' → logprob: -19.0
    6. '(cur' → logprob: -19.125
    7. ' cur' → logprob: -19.5
    8. 'c' → logprob: -19.75
    9. '```' → logprob: -19.875
    10. 'y' → logprob: -19.875

Token 530: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5913230180740356
    2. ']:' → logprob: -0.8413230180740356
    3. ']' → logprob: -5.341322898864746
    4. '               ' → logprob: -5.716322898864746
    5. ':' → logprob: -6.466322898864746
    6. '[y' → logprob: -6.466322898864746
    7. '[' → logprob: -6.591322898864746
    8. '       ' → logprob: -7.216322898864746
    9. '           ' → logprob: -7.466322898864746
    10. '                   ' → logprob: -7.591322898864746

Token 531: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00257660960778594
    2. '               ' → logprob: -6.37757682800293
    3. '                       ' → logprob: -7.62757682800293
    4. '           ' → logprob: -9.00257682800293
    5. '                           ' → logprob: -9.25257682800293
    6. 'dp' → logprob: -9.75257682800293
    7. ' dp' → logprob: -10.75257682800293
    8. '(dp' → logprob: -11.37757682800293
    9. '                  ' → logprob: -11.37757682800293
    10. '                    
' → logprob: -11.50257682800293

Token 532: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.011147800832986832
    2. ' dp' → logprob: -4.511147975921631
    3. '                   ' → logprob: -9.261147499084473
    4. '                       ' → logprob: -12.636147499084473
    5. '               ' → logprob: -14.136147499084473
    6. '	dp' → logprob: -14.261147499084473
    7. '(dp' → logprob: -16.01114845275879
    8. '_dp' → logprob: -16.26114845275879
    9. '           ' → logprob: -16.38614845275879
    10. '   ' → logprob: -17.88614845275879

Token 533: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -1.723973582556937e-05
    2. 'curr' → logprob: -11.000017166137695
    3. '[curr' → logprob: -15.000017166137695
    4. '_cur' → logprob: -15.750017166137695
    5. '	curr' → logprob: -17.750017166137695
    6. ' curr' → logprob: -18.250017166137695
    7. '_prev' → logprob: -18.250017166137695
    8. 'Curr' → logprob: -18.500017166137695
    9. '(curr' → logprob: -19.000017166137695
    10. '\' → logprob: -19.500017166137695

Token 534: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. 'y' → logprob: -19.25
    4. '\[' → logprob: -20.125
    5. '[c' → logprob: -20.375
    6. '   ' → logprob: -20.5
    7. ' [' → logprob: -21.0
    8. '[
' → logprob: -21.0
    9. '[d' → logprob: -21.5
    10. '```' → logprob: -22.5

Token 535: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -9.496052371105179e-05
    2. '[cur' → logprob: -9.75009536743164
    3. 'curr' → logprob: -10.62509536743164
    4. '_cur' → logprob: -11.75009536743164
    5. 'prev' → logprob: -13.25009536743164
    6. '   ' → logprob: -14.37509536743164
    7. ' cur' → logprob: -14.50009536743164
    8. '	cur' → logprob: -14.62509536743164
    9. '[curr' → logprob: -15.50009536743164
    10. '```' → logprob: -15.50009536743164

Token 536: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03742767125368118
    2. ' =' → logprob: -4.03742790222168
    3. ']' → logprob: -4.03742790222168
    4. ']=' → logprob: -6.53742790222168
    5. ' ]' → logprob: -13.53742790222168
    6. ')' → logprob: -15.41242790222168
    7. 'cost' → logprob: -16.03742790222168
    8. '[' → logprob: -16.66242790222168
    9. ')=' → logprob: -16.66242790222168
    10. '=cut' → logprob: -17.03742790222168

Token 537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '=c' → logprob: -17.639163970947266
    4. '=
' → logprob: -18.139163970947266
    5. 'cost' → logprob: -18.764163970947266
    6. ']=' → logprob: -19.514163970947266
    7. '=cut' → logprob: -20.014163970947266
    8. '＝' → logprob: -20.139163970947266
    9. '=

' → logprob: -20.514163970947266
    10. ' cost' → logprob: -20.514163970947266

Token 538: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0001234428636962548
    2. ' cost' → logprob: -9.000123023986816
    3. '(cost' → logprob: -22.250123977661133
    4. '_cost' → logprob: -23.625123977661133
    5. 'Cost' → logprob: -24.875123977661133
    6. 'code' → logprob: -25.875123977661133
    7. '.cost' → logprob: -26.000123977661133
    8. 'color' → logprob: -27.500123977661133
    9. 'cos' → logprob: -27.625123977661133
    10. '   ' → logprob: -27.625123977661133

Token 539: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002216869033873081
    2. '
' → logprob: -6.502216815948486
    3. '        
' → logprob: -7.502216815948486
    4. '    
' → logprob: -9.127217292785645
    5. '<|end|>' → logprob: -11.252217292785645
    6. '   ' → logprob: -11.377217292785645
    7. '  
' → logprob: -11.502217292785645
    8. '       
' → logprob: -12.127217292785645
    9. ' 
' → logprob: -12.627217292785645
    10. '   
' → logprob: -13.377217292785645

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.620622712536715e-05
    2. '	' → logprob: -10.750045776367188
    3. '
' → logprob: -11.625045776367188
    4. '   ' → logprob: -11.875045776367188
    5. '<|end|>' → logprob: -12.875045776367188
    6. '        
' → logprob: -13.000045776367188
    7. '	   ' → logprob: -14.125045776367188
    8. '    
' → logprob: -14.250045776367188
    9. '		
' → logprob: -14.750045776367188
    10. '      ' → logprob: -15.500045776367188

Token 541: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.25208815932273865
    2. '   ' → logprob: -1.502088189125061
    3. ' dp' → logprob: -8.75208854675293
    4. '	dp' → logprob: -14.50208854675293
    5. '       ' → logprob: -15.12708854675293
    6. '_dp' → logprob: -16.25208854675293
    7. '  ' → logprob: -17.37708854675293
    8. '(dp' → logprob: -17.37708854675293
    9. '```' → logprob: -17.87708854675293
    10. ' ' → logprob: -18.00208854675293

Token 542: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.038153715431690216
    2. '_curr' → logprob: -3.288153648376465
    3. '_' → logprob: -9.913153648376465
    4. '_cur' → logprob: -10.288153648376465
    5. '_current' → logprob: -11.788153648376465
    6. '_next' → logprob: -12.038153648376465
    7. '=_' → logprob: -12.288153648376465
    8. 'prev' → logprob: -13.538153648376465
    9. '[_' → logprob: -13.663153648376465
    10. '_prec' → logprob: -13.788153648376465

Token 543: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270376294851303
    2. ' =' → logprob: -2.127037525177002
    3. ',' → logprob: -9.12703800201416
    4. '[:]' → logprob: -14.75203800201416
    5. '_=' → logprob: -15.87703800201416
    6. '＝' → logprob: -16.002037048339844
    7. '[' → logprob: -16.752037048339844
    8. '.=' → logprob: -17.002037048339844
    9. '=}' → logprob: -17.127037048339844
    10. ')' → logprob: -17.252037048339844

Token 544: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.15310683415737e-05
    2. ' dp' → logprob: -10.750021934509277
    3. '	dp' → logprob: -22.50002098083496
    4. '_dp' → logprob: -22.62502098083496
    5. '(dp' → logprob: -23.25002098083496
    6. 'dc' → logprob: -23.37502098083496
    7. 'df' → logprob: -24.62502098083496
    8. 'd' → logprob: -24.62502098083496
    9. 'dpi' → logprob: -26.50002098083496
    10. 'dt' → logprob: -26.75002098083496

Token 545: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -3.273621405242011e-05
    2. 'curr' → logprob: -10.375032424926758
    3. '_prev' → logprob: -14.375032424926758
    4. '_cur' → logprob: -14.625032424926758
    5. '_' → logprob: -16.000032424926758
    6. '[curr' → logprob: -16.250032424926758
    7. '```' → logprob: -16.625032424926758
    8. '[_' → logprob: -16.750032424926758
    9. ''_' → logprob: -17.125032424926758
    10. 'Curr' → logprob: -17.375032424926758

Token 546: '

' (ID: 279)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9087147116661072
    2. 'result' → logprob: -1.783714771270752
    3. '   ' → logprob: -2.033714771270752
    4. 'print' → logprob: -2.158714771270752
    5. 'total' → logprob: -2.658714771270752
    6. 'answer' → logprob: -2.908714771270752
    7. '
' → logprob: -3.533714771270752
    8. 'minimum' → logprob: -4.783714771270752
    9. '    
' → logprob: -5.533714771270752
    10. 'ans' → logprob: -5.658714771270752

Token 547: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014139179140329361
    2. '   ' → logprob: -5.014139175415039
    3. 'result' → logprob: -5.139139175415039
    4. 'min' → logprob: -6.889139175415039
    5. 'answer' → logprob: -8.639139175415039
    6. '```' → logprob: -8.639139175415039
    7. 'minimum' → logprob: -10.264139175415039
    8. 'ans' → logprob: -10.264139175415039
    9. '    
' → logprob: -10.639139175415039
    10. ' print' → logprob: -10.889139175415039

Token 548: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06281068921089172
    2. 'result' → logprob: -3.0628106594085693
    3. 'min' → logprob: -5.062810897827148
    4. 'answer' → logprob: -5.062810897827148
    5. 'ans' → logprob: -6.687810897827148
    6. 'best' → logprob: -8.812810897827148
    7. 'res' → logprob: -9.812810897827148
    8. '   ' → logprob: -12.312810897827148
    9. '```' → logprob: -12.562810897827148
    10. 'output' → logprob: -12.937810897827148

Token 549: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.37500286102295
    3. 'min' → logprob: -14.25000286102295
    4. '(dp' → logprob: -15.25000286102295
    5. ' min' → logprob: -16.750001907348633
    6. '=min' → logprob: -16.875001907348633
    7. '(max' → logprob: -17.125001907348633
    8. '[min' → logprob: -17.375001907348633
    9. '(int' → logprob: -17.500001907348633
    10. ' (' → logprob: -18.375001907348633

Token 550: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.375005722045898
    3. ')' → logprob: -13.500005722045898
    4. 'dp' → logprob: -15.125005722045898
    5. '(
' → logprob: -17.5000057220459
    6. '(df' → logprob: -17.8750057220459
    7. '(d' → logprob: -18.2500057220459
    8. ' (' → logprob: -18.5000057220459
    9. '	dp' → logprob: -18.5000057220459
    10. ' dp' → logprob: -18.6250057220459

Token 551: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -3.4121114822482923e-06
    2. 'prev' → logprob: -12.625003814697266
    3. '_curr' → logprob: -17.500003814697266
    4. ')' → logprob: -17.625003814697266
    5. '	prev' → logprob: -18.875003814697266
    6. '.prev' → logprob: -20.000003814697266
    7. '_prior' → logprob: -20.500003814697266
    8. 'Prev' → logprob: -20.625003814697266
    9. '[' → logprob: -21.000003814697266
    10. '(prev' → logprob: -21.125003814697266

Token 552: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005295188166201115
    2. ')' → logprob: -5.255295276641846
    3. '()))' → logprob: -9.755294799804688
    4. '())' → logprob: -13.630294799804688
    5. ' ))' → logprob: -13.880294799804688
    6. '))
' → logprob: -14.755294799804688
    7. ')))' → logprob: -15.255294799804688
    8. '[' → logprob: -15.630294799804688
    9. '])' → logprob: -16.005294799804688
    10. '[]' → logprob: -16.130294799804688


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 550
Tokens correctement prédits (1ère position, stricte): 171
Tokens correctement prédits (1ère position, avec adaptation): 186
Tokens correctement prédits (top 10): 398
Précision stricte (1ère position): 31.09%
Précision adaptée (1ère position): 33.82%
Précision (top 10): 72.36%
================================================================================
