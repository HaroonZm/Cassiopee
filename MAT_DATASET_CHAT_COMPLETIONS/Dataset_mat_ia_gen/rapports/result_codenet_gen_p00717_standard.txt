================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def normalize(points):
    xs = [x for x, y in points]
    ys = [y for x, y in points]
    minx, miny = min(xs), min(ys)
    return [(x - minx, y - miny) for x, y in points]

def vec_diff(points):
    return [(points[i+1][0]-points[i][0], points[i+1][1]-points[i][1]) for i in range(len(points)-1)]

def rotate(vecs, deg):
    # Rotate by 0,90,180,270 degrees
    if deg == 0:
        return vecs
    if deg == 90:
        return [(-y,x) for x,y in vecs]
    if deg == 180:
        return [(-x,-y) for x,y in vecs]
    if deg == 270:
        return [(y,-x) for x,y in vecs]

def is_all_axis_aligned(vecs):
    return all((x == 0 or y == 0) and (x != 0 or y != 0) for x,y in vecs)

def encode_shape(points):
    # points assumed to have 90 deg turns and axis aligned segments
    # encode as sequence of moves (dx,dy)
    vecs = vec_diff(points)
    if not is_all_axis_aligned(vecs):
        return None
    return vecs

def canonical(vecs):
    # returns a normalized tuple to compare shapes considering rotation and reversal and translation
    # Try all 4 rotations and both directions, pick minimal lex
    candidates = []
    for r in [0,90,180,270]:
        rvecs = rotate(vecs,r)
        # original
        candidates.append(tuple(rvecs))
        # reversed
        candidates.append(tuple(rvecs[::-1]))
    # we want a canonical form which ignores translation (already encoded in relative vectors)
    # lex smallest used
    return min(candidates)

def read_points(m, input_iter):
    points = []
    for _ in range(m):
        x,y = map(int,next(input_iter).split())
        points.append((x,y))
    return points

def same_shape(template, candidate):
    if len(template) != len(candidate):
        return False
    tvecs = encode_shape(template)
    cvecs = encode_shape(candidate)
    if tvecs is None or cvecs is None:
        return False
    return canonical(tvecs) == canonical(cvecs)

def main():
    input_iter = iter(sys.stdin.read().splitlines())
    while True:
        line = next(input_iter)
        if line == '0':
            break
        n = int(line)
        polygons = []
        for _ in range(n+1):
            m = int(next(input_iter))
            pts = read_points(m, input_iter)
            polygons.append(pts)
        template = polygons[0]
        res = []
        for i in range(1,n+1):
            if same_shape(template, polygons[i]):
                res.append(i)
        for r in res:
            print(r)
        print("+++++")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26693636178970337
    2. '\n' → logprob: -2.0169363021850586
    3. 'import' → logprob: -3.1419363021850586
    4. '<|end|>' → logprob: -3.2669363021850586
    5. 'newline' → logprob: -5.516936302185059
    6. '\' → logprob: -5.516936302185059
    7. '<|end|>' → logprob: -6.141936302185059
    8. '' → logprob: -6.266936302185059
    9. 'print' → logprob: -6.891936302185059
    10. '\r' → logprob: -6.891936302185059

Token 4: ' normalize' (ID: 44464)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013927715830504894
    2. ' space' → logprob: -6.388927936553955
    3. ' main' → logprob: -6.388927936553955
    4. ' ' → logprob: -6.888927936553955
    5. '<|end|>' → logprob: -6.888927936553955
    6. ' process' → logprob: -7.013927936553955
    7. '  ' → logprob: -7.013927936553955
    8. ' a' → logprob: -7.263927936553955
    9. ' sys' → logprob: -7.513927936553955
    10. '_' → logprob: -7.763927936553955

Token 5: '(points' (ID: 72131)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07100074738264084
    2. '_' → logprob: -2.696000814437866
    3. '_name' → logprob: -8.446001052856445
    4. '_text' → logprob: -8.446001052856445
    5. '_token' → logprob: -8.946001052856445
    6. '_string' → logprob: -9.321001052856445
    7. ' (' → logprob: -9.821001052856445
    8. '_data' → logprob: -10.196001052856445
    9. '_user' → logprob: -10.196001052856445
    10. '_space' → logprob: -10.196001052856445

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015372514724731445
    2. ',' → logprob: -4.265372276306152
    3. ')' → logprob: -7.265372276306152
    4. ':' → logprob: -8.390372276306152
    5. '[' → logprob: -9.265372276306152
    6. '):
' → logprob: -9.390372276306152
    7. ' ):' → logprob: -10.765372276306152
    8. '   ' → logprob: -11.140372276306152
    9. '[]):' → logprob: -11.265372276306152
    10. '<|end|>' → logprob: -11.515372276306152

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2668744623661041
    2. ':' → logprob: -1.5168744325637817
    3. '```' → logprob: -5.641874313354492
    4. '    
' → logprob: -5.891874313354492
    5. '    ' → logprob: -6.266874313354492
    6. '[' → logprob: -6.766874313354492
    7. ' ' → logprob: -7.516874313354492
    8. 'return' → logprob: -7.516874313354492
    9. ''' → logprob: -7.766874313354492
    10. ' return' → logprob: -7.891874313354492

Token 8: ' xs' (ID: 26642)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.067671775817871
    2. ' points' → logprob: -1.817671775817871
    3. ' if' → logprob: -1.942671775817871
    4. ' normalized' → logprob: -2.567671775817871
    5. ' return' → logprob: -2.817671775817871
    6. ' ' → logprob: -3.192671775817871
    7. 'normalized' → logprob: -3.192671775817871
    8. '    ' → logprob: -3.567671775817871
    9. 'return' → logprob: -3.692671775817871
    10. 'points' → logprob: -3.817671775817871

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48550722002983093
    2. '.' → logprob: -1.4855072498321533
    3. '=' → logprob: -1.8605072498321533
    4. ' .' → logprob: -7.360507011413574
    5. ')' → logprob: -7.485507011413574
    6. ',' → logprob: -7.610507011413574
    7. '[' → logprob: -7.860507011413574
    8. '[:]' → logprob: -8.110507011413574
    9. ' ' → logprob: -9.985507011413574
    10. '.=' → logprob: -10.360507011413574

Token 10: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.011600034311413765
    2. '[' → logprob: -4.761600017547607
    3. '[min' → logprob: -7.011600017547607
    4. '[p' → logprob: -7.261600017547607
    5. '[list' → logprob: -8.511600494384766
    6. '[x' → logprob: -8.511600494384766
    7. ' points' → logprob: -8.636600494384766
    8. '[len' → logprob: -9.011600494384766
    9. ' []' → logprob: -9.011600494384766
    10. '[max' → logprob: -9.136600494384766

Token 11: 'x' (ID: 87)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008566114120185375
    2. 'point' → logprob: -5.133565902709961
    3. 'x' → logprob: -6.008565902709961
    4. ' p' → logprob: -9.008565902709961
    5. 'pt' → logprob: -10.383565902709961
    6. 'float' → logprob: -11.258565902709961
    7. ' point' → logprob: -12.258565902709961
    8. 'points' → logprob: -12.883565902709961
    9. '```' → logprob: -13.758565902709961
    10. 'int' → logprob: -14.258565902709961

Token 12: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5841578245162964
    2. ' for' → logprob: -1.0841578245162964
    3. '.' → logprob: -2.584157943725586
    4. 'for' → logprob: -3.584157943725586
    5. ',' → logprob: -7.709157943725586
    6. '.x' → logprob: -8.959157943725586
    7. ']' → logprob: -9.459157943725586
    8. '.point' → logprob: -9.459157943725586
    9. ')' → logprob: -10.084157943725586
    10. '['' → logprob: -10.084157943725586

Token 13: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3392871916294098
    2. 'x' → logprob: -1.3392871618270874
    3. '_' → logprob: -4.089287281036377
    4. ' _' → logprob: -5.714287281036377
    5. ' p' → logprob: -6.089287281036377
    6. ' ' → logprob: -6.714287281036377
    7. 'p' → logprob: -6.964287281036377
    8. ',' → logprob: -8.464286804199219
    9. '(x' → logprob: -8.964286804199219
    10. '_x' → logprob: -8.964286804199219

Token 14: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0023921828251332045
    2. 'in' → logprob: -6.252392292022705
    3. '_' → logprob: -9.377391815185547
    4. ' ' → logprob: -9.377391815185547
    5. 's' → logprob: -9.377391815185547
    6. ' x' → logprob: -9.502391815185547
    7. 'x' → logprob: -10.252391815185547
    8. ',' → logprob: -10.627391815185547
    9. ' points' → logprob: -10.627391815185547
    10. ' _' → logprob: -10.627391815185547

Token 15: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.05818728357553482
    2. '_' → logprob: -3.308187246322632
    3. ' y' → logprob: -4.558187484741211
    4. '_y' → logprob: -4.683187484741211
    5. ' _' → logprob: -8.933187484741211
    6. 'ys' → logprob: -9.558187484741211
    7. ' ys' → logprob: -11.558187484741211
    8. '	y' → logprob: -14.308187484741211
    9. 'y's' → logprob: -15.683187484741211
    10. '__' → logprob: -16.05818748474121

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016055719926953316
    2. 'in' → logprob: -4.141055583953857
    3. '<|end|>' → logprob: -11.641056060791016
    4. ' ' → logprob: -12.391056060791016
    5. ')' → logprob: -12.766056060791016
    6. ',' → logprob: -13.891056060791016
    7. '```' → logprob: -14.016056060791016
    8. '	in' → logprob: -14.516056060791016
    9. '<|end|>' → logprob: -14.516056060791016
    10. 'import' → logprob: -14.953556060791016

Token 17: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0007183883571997285
    2. ' points' → logprob: -7.250718593597412
    3. '(points' → logprob: -11.750718116760254
    4. '	points' → logprob: -15.125718116760254
    5. '_points' → logprob: -16.75071907043457
    6. '.points' → logprob: -17.25071907043457
    7. ')' → logprob: -17.75071907043457
    8. 'oints' → logprob: -18.00071907043457
    9. '[' → logprob: -18.12571907043457
    10. 'point' → logprob: -18.37571907043457

Token 18: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025648376904428005
    2. ' ]' → logprob: -6.752564907073975
    3. ' in' → logprob: -7.502564907073975
    4. ' if' → logprob: -7.502564907073975
    5. '   ' → logprob: -8.752564430236816
    6. '<|end|>' → logprob: -9.877564430236816
    7. 'in' → logprob: -10.627564430236816
    8. '()]' → logprob: -11.252564430236816
    9. 'if' → logprob: -11.752564430236816
    10. '<|end|>' → logprob: -12.002564430236816

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13007353246212006
    2. 'min' → logprob: -3.2550735473632812
    3. ' min' → logprob: -3.2550735473632812
    4. 'max' → logprob: -4.005073547363281
    5. ' max' → logprob: -5.255073547363281
    6. '    
' → logprob: -5.380073547363281
    7. 'return' → logprob: -6.380073547363281
    8. ',' → logprob: -6.505073547363281
    9. ' 
' → logprob: -6.505073547363281
    10. ' return' → logprob: -6.755073547363281

Token 20: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -1.1744437217712402
    2. '   ' → logprob: -1.2994437217712402
    3. 'min' → logprob: -1.2994437217712402
    4. ' min' → logprob: -2.2994437217712402
    5. 'max' → logprob: -4.17444372177124
    6. 'xmin' → logprob: -5.17444372177124
    7. ' max' → logprob: -5.29944372177124
    8. ' x' → logprob: -5.54944372177124
    9. ' ymin' → logprob: -5.79944372177124
    10. ' ys' → logprob: -6.04944372177124

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023248272016644478
    2. '=' → logprob: -3.7732481956481934
    3. ' ' → logprob: -13.648248672485352
    4. ' =[' → logprob: -13.648248672485352
    5. '[' → logprob: -15.773248672485352
    6. '=[]' → logprob: -16.27324867248535
    7. ' for' → logprob: -16.89824867248535
    8. '=[' → logprob: -17.14824867248535
    9. ')' → logprob: -17.27324867248535
    10. ' in' → logprob: -17.52324867248535

Token 22: ' [' (ID: 723)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.16119720041751862
    2. ' [' → logprob: -1.9111971855163574
    3. '[' → logprob: -7.411197185516357
    4. '[x' → logprob: -7.911197185516357
    5. 'y' → logprob: -14.036197662353516
    6. ' y' → logprob: -14.911197662353516
    7. '[z' → logprob: -16.286197662353516
    8. ' ' → logprob: -16.536197662353516
    9. '[t' → logprob: -16.911197662353516
    10. '[u' → logprob: -17.286197662353516

Token 23: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.60414821645827e-06
    2. ' y' → logprob: -12.375004768371582
    3. 'x' → logprob: -15.375004768371582
    4. '(y' → logprob: -17.375003814697266
    5. '   ' → logprob: -18.875003814697266
    6. '```' → logprob: -19.375003814697266
    7. '	y' → logprob: -19.875003814697266
    8. ''y' → logprob: -20.000003814697266
    9. ']' → logprob: -20.250003814697266
    10. ')y' → logprob: -20.625003814697266

Token 24: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04866412654519081
    2. 'for' → logprob: -3.048664093017578
    3. ' in' → logprob: -9.548664093017578
    4. 'in' → logprob: -12.548664093017578
    5. '	for' → logprob: -13.423664093017578
    6. '<|end|>' → logprob: -15.298664093017578
    7. ' ' → logprob: -15.923664093017578
    8. ')' → logprob: -17.548664093017578
    9. '```' → logprob: -17.548664093017578
    10. '<|end|>' → logprob: -17.798664093017578

Token 25: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03031454235315323
    2. ' x' → logprob: -3.5303144454956055
    3. 'y' → logprob: -7.6553144454956055
    4. '_,' → logprob: -10.030314445495605
    5. ' y' → logprob: -10.655314445495605
    6. ',' → logprob: -11.280314445495605
    7. '```' → logprob: -12.405314445495605
    8. '(x' → logprob: -13.280314445495605
    9. ',x' → logprob: -13.780314445495605
    10. '	x' → logprob: -14.405314445495605

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001363168703392148
    2. ',y' → logprob: -9.250136375427246
    3. ' ,' → logprob: -11.125136375427246
    4. 'for' → logprob: -11.625136375427246
    5. '<|end|>' → logprob: -12.250136375427246
    6. ' in' → logprob: -12.625136375427246
    7. ' for' → logprob: -12.875136375427246
    8. ',user' → logprob: -13.250136375427246
    9. 'in' → logprob: -13.375136375427246
    10. '‌,' → logprob: -14.375136375427246

Token 27: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.29142656922340393
    2. 'points' → logprob: -2.166426658630371
    3. ' y' → logprob: -2.416426658630371
    4. ' points' → logprob: -3.041426658630371
    5. 'ys' → logprob: -7.166426658630371
    6. 'x' → logprob: -8.166426658630371
    7. ' ys' → logprob: -9.041426658630371
    8. ' ' → logprob: -11.791426658630371
    9. '(points' → logprob: -11.916426658630371
    10. 's' → logprob: -12.166426658630371

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08897600322961807
    2. 'in' → logprob: -2.4639759063720703
    3. 'points' → logprob: -10.58897590637207
    4. ' ' → logprob: -13.08897590637207
    5. ']' → logprob: -13.21397590637207
    6. 'import' → logprob: -13.21397590637207
    7. '<|end|>' → logprob: -13.83897590637207
    8. 's' → logprob: -14.08897590637207
    9. '```' → logprob: -14.08897590637207
    10. ')' → logprob: -14.83897590637207

Token 29: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0036298849154263735
    2. ' points' → logprob: -5.628629684448242
    3. '(points' → logprob: -10.753629684448242
    4. '[' → logprob: -12.628629684448242
    5. '	points' → logprob: -13.378629684448242
    6. 'oints' → logprob: -14.003629684448242
    7. '.points' → logprob: -14.253629684448242
    8. '```' → logprob: -14.753629684448242
    9. ' ' → logprob: -15.253629684448242
    10. ')' → logprob: -15.253629684448242

Token 30: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003660938236862421
    2. '   ' → logprob: -8.2503662109375
    3. ']
' → logprob: -9.5003662109375
    4. ' ]' → logprob: -10.7503662109375
    5. ']
' → logprob: -12.8753662109375
    6. ')' → logprob: -13.0003662109375
    7. ')]' → logprob: -13.2503662109375
    8. ']

' → logprob: -14.6253662109375
    9. '])' → logprob: -15.0003662109375
    10. '()]' → logprob: -15.3753662109375

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03316942974925041
    2. 'min' → logprob: -4.033169269561768
    3. ' min' → logprob: -5.158169269561768
    4. 'max' → logprob: -5.283169269561768
    5. ' max' → logprob: -6.908169269561768
    6. 'mx' → logprob: -7.033169269561768
    7. 'xmin' → logprob: -7.533169269561768
    8. ' mx' → logprob: -7.908169269561768
    9. '
' → logprob: -8.158169746398926
    10. '    
' → logprob: -8.533169746398926

Token 32: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.5368205904960632
    2. ' min' → logprob: -1.161820650100708
    3. '   ' → logprob: -2.661820650100708
    4. 'max' → logprob: -4.411820411682129
    5. 'mx' → logprob: -5.161820411682129
    6. 'xmin' → logprob: -5.161820411682129
    7. ' max' → logprob: -5.911820411682129
    8. 'x' → logprob: -5.911820411682129
    9. ' mx' → logprob: -6.786820411682129
    10. 'return' → logprob: -7.036820411682129

Token 33: 'x' (ID: 87)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.4828222095966339
    2. '_' → logprob: -0.9828221797943115
    3. '(xs' → logprob: -5.232822418212891
    4. '(' → logprob: -6.107822418212891
    5. '(x' → logprob: -7.107822418212891
    6. 'x' → logprob: -8.35782241821289
    7. '(_' → logprob: -9.98282241821289
    8. ' _' → logprob: -11.23282241821289
    9. '(_)' → logprob: -11.48282241821289
    10. '_val' → logprob: -12.48282241821289

Token 34: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17267253994941711
    2. '=' → logprob: -2.4226725101470947
    3. '_' → logprob: -2.6726725101470947
    4. ',' → logprob: -7.672672748565674
    5. ' ' → logprob: -9.422672271728516
    6. '_x' → logprob: -9.422672271728516
    7. ')' → logprob: -9.797672271728516
    8. '_=' → logprob: -9.797672271728516
    9. ' _' → logprob: -10.172672271728516
    10. '(' → logprob: -11.797672271728516

Token 35: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.296043336391449
    2. ' max' → logprob: -1.9210433959960938
    3. 'min' → logprob: -2.4210433959960938
    4. ' min' → logprob: -4.046043395996094
    5. '=' → logprob: -5.921043395996094
    6. ' =' → logprob: -7.796043395996094
    7. '=min' → logprob: -8.671043395996094
    8. '=max' → logprob: -8.796043395996094
    9. '_max' → logprob: -11.171043395996094
    10. 'mx' → logprob: -11.671043395996094

Token 36: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006791751366108656
    2. '_x' → logprob: -5.006791591644287
    3. '(x' → logprob: -9.881792068481445
    4. '_' → logprob: -11.131792068481445
    5. '(xs' → logprob: -12.756792068481445
    6. '=' → logprob: -13.006792068481445
    7. ' x' → logprob: -13.256792068481445
    8. 'xs' → logprob: -13.756792068481445
    9. '(' → logprob: -13.881792068481445
    10. 'X' → logprob: -14.631792068481445

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891656458377838
    2. '=' → logprob: -2.578916549682617
    3. ',' → logprob: -10.578916549682617
    4. ' =
' → logprob: -14.953916549682617
    5. ' ' → logprob: -15.453916549682617
    6. ' ,' → logprob: -15.953916549682617
    7. '<|end|>' → logprob: -15.953916549682617
    8. '=

' → logprob: -16.453916549682617
    9. '  ' → logprob: -16.453916549682617
    10. ')' → logprob: -16.703916549682617

Token 38: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.31367242336273193
    2. ' min' → logprob: -1.313672423362732
    3. '(min' → logprob: -7.8136725425720215
    4. ' ' → logprob: -13.688672065734863
    5. '[min' → logprob: -13.688672065734863
    6. '=min' → logprob: -13.688672065734863
    7. '	min' → logprob: -13.813672065734863
    8. '   ' → logprob: -14.688672065734863
    9. ',min' → logprob: -14.813672065734863
    10. ' minimum' → logprob: -15.063672065734863

Token 39: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -1.1160349458805285e-05
    2. '(' → logprob: -11.875011444091797
    3. 'xs' → logprob: -13.000011444091797
    4. '(x' → logprob: -13.375011444091797
    5. ' xs' → logprob: -16.000011444091797
    6. ' (' → logprob: -16.125011444091797
    7. '(min' → logprob: -16.125011444091797
    8. '(points' → logprob: -17.500011444091797
    9. '(
' → logprob: -17.750011444091797
    10. '(s' → logprob: -18.500011444091797

Token 40: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -9.05499910004437e-05
    2. ')' → logprob: -9.875090599060059
    3. ',' → logprob: -10.625090599060059
    4. ' ),' → logprob: -11.250090599060059
    5. '   ' → logprob: -14.250090599060059
    6. ',),' → logprob: -14.750090599060059
    7. ' ' → logprob: -15.625090599060059
    8. '()),' → logprob: -16.000089645385742
    9. ')),' → logprob: -16.250089645385742
    10. 'min' → logprob: -16.750089645385742

Token 41: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.0788961797952652
    2. 'min' → logprob: -2.5788962841033936
    3. '(min' → logprob: -13.203896522521973
    4. '	min' → logprob: -13.203896522521973
    5. '[min' → logprob: -14.578896522521973
    6. ' max' → logprob: -14.828896522521973
    7. ' ' → logprob: -15.078896522521973
    8. ' minimum' → logprob: -15.078896522521973
    9. '=min' → logprob: -15.203896522521973
    10. ',min' → logprob: -15.203896522521973

Token 42: '(' (ID: 7)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.016747241839766502
    2. '(' → logprob: -4.26674747467041
    3. 'ys' → logprob: -6.01674747467041
    4. '(y' → logprob: -9.14174747467041
    5. 'y's' → logprob: -11.26674747467041
    6. 'x' → logprob: -11.51674747467041
    7. ' ys' → logprob: -11.89174747467041
    8. '(min' → logprob: -13.51674747467041
    9. 'yl' → logprob: -14.14174747467041
    10. '(xs' → logprob: -14.51674747467041

Token 43: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -2.4034345187828876e-05
    2. ' ys' → logprob: -11.00002384185791
    3. '(' → logprob: -12.00002384185791
    4. ')' → logprob: -14.50002384185791
    5. 'yses' → logprob: -15.50002384185791
    6. 'ysi' → logprob: -15.62502384185791
    7. 'ysy' → logprob: -17.000024795532227
    8. ',' → logprob: -17.500024795532227
    9. '[' → logprob: -18.125024795532227
    10. '```' → logprob: -18.125024795532227

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.064297824399546e-05
    2. ')
' → logprob: -9.750070571899414
    3. '))' → logprob: -12.750070571899414
    4. '   ' → logprob: -12.750070571899414
    5. ' )' → logprob: -12.875070571899414
    6. '),' → logprob: -13.625070571899414
    7. '()' → logprob: -13.750070571899414
    8. '`)' → logprob: -15.750070571899414
    9. ')<' → logprob: -15.875070571899414
    10. ')

' → logprob: -16.000070571899414

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015145803801715374
    2. '    
' → logprob: -4.890145778656006
    3. 'return' → logprob: -5.765145778656006
    4. '
' → logprob: -6.265145778656006
    5. '```' → logprob: -6.765145778656006
    6. ' return' → logprob: -7.765145778656006
    7. '\n' → logprob: -9.015146255493164
    8. '   
' → logprob: -9.265146255493164
    9. '``' → logprob: -9.265146255493164
    10. 'points' → logprob: -9.640146255493164

Token 46: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020221728831529617
    2. 'return' (adapté à ' return') → logprob: -5.270221710205078
    3. '    
' → logprob: -5.770221710205078
    4. ' return' → logprob: -5.895221710205078
    5. 'normalized' → logprob: -6.270221710205078
    6. 'max' → logprob: -6.395221710205078
    7. ' points' → logprob: -6.645221710205078
    8. 'points' → logprob: -6.895221710205078
    9. '```' → logprob: -7.020221710205078
    10. ' normalized' → logprob: -7.520221710205078

Token 47: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6966464519500732
    2. ' [(' → logprob: -0.6966464519500732
    3. ' [' → logprob: -6.071646690368652
    4. '[' → logprob: -6.821646690368652
    5. '[((' → logprob: -10.196646690368652
    6. '[[' → logprob: -10.196646690368652
    7. ' [[' → logprob: -12.071646690368652
    8. '[x' → logprob: -12.071646690368652
    9. '([(' → logprob: -12.571646690368652
    10. '[
' → logprob: -13.196646690368652

Token 48: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010811600368469954
    2. '(x' → logprob: -6.8760809898376465
    3. ' x' → logprob: -10.376081466674805
    4. '   ' → logprob: -11.126081466674805
    5. ' (' → logprob: -14.001081466674805
    6. ' ' → logprob: -14.251081466674805
    7. ')x' → logprob: -15.001081466674805
    8. '(' → logprob: -15.501081466674805
    9. '	x' → logprob: -15.626081466674805
    10. '  ' → logprob: -15.751081466674805

Token 49: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04328782111406326
    2. '-' → logprob: -3.168287754058838
    3. '-min' → logprob: -8.168288230895996
    4. ',' → logprob: -13.293288230895996
    5. ' ' → logprob: -13.543288230895996
    6. ' ' → logprob: -14.918288230895996
    7. 'min' → logprob: -15.043288230895996
    8. '   ' → logprob: -15.293288230895996
    9. '[' → logprob: -15.668288230895996
    10. ' –' → logprob: -15.668288230895996

Token 50: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06196948140859604
    2. ' min' → logprob: -2.811969518661499
    3. '	min' → logprob: -14.061969757080078
    4. ' ' → logprob: -15.061969757080078
    5. '   ' → logprob: -15.686969757080078
    6. '[min' → logprob: -15.936969757080078
    7. '(min' → logprob: -16.311969757080078
    8. '=min' → logprob: -16.561969757080078
    9. '_min' → logprob: -17.186969757080078
    10. '1' → logprob: -17.561969757080078

Token 51: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1472419600977446e-06
    2. '(x' → logprob: -14.875000953674316
    3. ' x' → logprob: -15.000000953674316
    4. ')x' → logprob: -15.125000953674316
    5. 'xs' → logprob: -16.625001907348633
    6. ')' → logprob: -17.375001907348633
    7. 'xmin' → logprob: -19.375001907348633
    8. '(xs' → logprob: -19.875001907348633
    9. ''x' → logprob: -20.125001907348633
    10. '[x' → logprob: -20.125001907348633

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.787507714354433e-05
    2. ' ,' → logprob: -10.12504768371582
    3. ',y' → logprob: -12.12504768371582
    4. ',x' → logprob: -13.87504768371582
    5. ',
' → logprob: -14.75004768371582
    6. '),' → logprob: -15.25004768371582
    7. ')' → logprob: -15.37504768371582
    8. '   ' → logprob: -15.62504768371582
    9. '<|end|>' → logprob: -16.25004768371582
    10. '‌,' → logprob: -17.50004768371582

Token 53: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.25193095207214355
    2. 'y' → logprob: -1.5019309520721436
    3. ' ' → logprob: -14.251931190490723
    4. '    ' → logprob: -15.001931190490723
    5. '<|end|>' → logprob: -15.251931190490723
    6. ' ' → logprob: -15.501931190490723
    7. '	y' → logprob: -15.626931190490723
    8. '   ' → logprob: -16.251930236816406
    9. ')y' → logprob: -17.626930236816406
    10. '(y' → logprob: -17.751930236816406

Token 54: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0006285638664849102
    2. '-' → logprob: -7.375628471374512
    3. ' ' → logprob: -13.875628471374512
    4. '<|end|>' → logprob: -14.250628471374512
    5. ')' → logprob: -15.250628471374512
    6. '-min' → logprob: -16.875629425048828
    7. ' -
' → logprob: -17.250629425048828
    8. ' ' → logprob: -17.250629425048828
    9. '<|end|>' → logprob: -17.875629425048828
    10. 'min' → logprob: -18.250629425048828

Token 55: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.005234594456851482
    2. ' min' → logprob: -5.255234718322754
    3. ' ' → logprob: -15.005234718322754
    4. 'm' → logprob: -15.380234718322754
    5. '	min' → logprob: -16.005233764648438
    6. '[min' → logprob: -16.005233764648438
    7. '(min' → logprob: -16.880233764648438
    8. '   ' → logprob: -17.755233764648438
    9. 'max' → logprob: -18.005233764648438
    10. '_min' → logprob: -18.005233764648438

Token 56: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1160349458805285e-05
    2. ' y' → logprob: -12.375011444091797
    3. ' ' → logprob: -12.500011444091797
    4. 'x' → logprob: -13.750011444091797
    5. '   ' → logprob: -14.125011444091797
    6. ')' → logprob: -14.500011444091797
    7. '	y' → logprob: -15.625011444091797
    8. '  ' → logprob: -16.125011444091797
    9. '

' → logprob: -17.000011444091797
    10. ''y' → logprob: -17.125011444091797

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. '   ' → logprob: -13.125006675720215
    3. ' )' → logprob: -13.125006675720215
    4. ')
' → logprob: -13.750006675720215
    5. ')]' → logprob: -14.500006675720215
    6. '),' → logprob: -14.625006675720215
    7. '')' → logprob: -15.500006675720215
    8. '))' → logprob: -16.6250057220459
    9. '       ' → logprob: -16.8750057220459
    10. ']' → logprob: -17.1250057220459

Token 58: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.021406905725598335
    2. 'for' → logprob: -4.271407127380371
    3. '   ' → logprob: -5.146407127380371
    4. ')' → logprob: -6.646407127380371
    5. '       ' → logprob: -9.896407127380371
    6. '	for' → logprob: -11.146407127380371
    7. '    ' → logprob: -11.396407127380371
    8. ' ' → logprob: -12.146407127380371
    9. ')]' → logprob: -12.521407127380371
    10. ']' → logprob: -12.896407127380371

Token 59: ' x' (ID: 1215)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.062397394329309464
    2. 'points' → logprob: -2.8123974800109863
    3. '(points' → logprob: -8.437397003173828
    4. ' point' → logprob: -9.437397003173828
    5. 'point' → logprob: -9.437397003173828
    6. ' x' → logprob: -10.687397003173828
    7. '	points' → logprob: -11.812397003173828
    8. 'x' → logprob: -11.937397003173828
    9. ' (' → logprob: -12.062397003173828
    10. 'p' → logprob: -12.562397003173828

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025668602902442217
    2. ',y' → logprob: -6.002566814422607
    3. ',x' → logprob: -10.127567291259766
    4. ' ,' → logprob: -10.627567291259766
    5. ' in' → logprob: -11.002567291259766
    6. ',user' → logprob: -13.752567291259766
    7. 'points' → logprob: -13.877567291259766
    8. 'in' → logprob: -14.127567291259766
    9. ',p' → logprob: -14.127567291259766
    10. ' ' → logprob: -14.502567291259766

Token 61: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06207086890935898
    2. ' y' → logprob: -2.812070846557617
    3. ' points' → logprob: -9.687070846557617
    4. 'points' → logprob: -10.187070846557617
    5. ' ' → logprob: -12.812070846557617
    6. '	y' → logprob: -15.437070846557617
    7. '   ' → logprob: -16.312070846557617
    8. '<|end|>' → logprob: -16.312070846557617
    9. '_y' → logprob: -16.437070846557617
    10. 'ys' → logprob: -16.812070846557617

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10051633417606354
    2. 'in' → logprob: -2.3505163192749023
    3. 'points' → logprob: -8.225516319274902
    4. ' points' → logprob: -10.725516319274902
    5. ')' → logprob: -11.600516319274902
    6. '(points' → logprob: -12.350516319274902
    7. '<|end|>' → logprob: -12.600516319274902
    8. ']' → logprob: -13.100516319274902
    9. 's' → logprob: -15.350516319274902
    10. ' ' → logprob: -15.850516319274902

Token 63: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.08894851803779602
    2. ' points' → logprob: -2.4639484882354736
    3. '(points' → logprob: -11.838948249816895
    4. '	points' → logprob: -13.713948249816895
    5. ')' → logprob: -15.463948249816895
    6. '.points' → logprob: -15.463948249816895
    7. ' ' → logprob: -16.83894920349121
    8. '[' → logprob: -16.96394920349121
    9. '```' → logprob: -17.08894920349121
    10. '_points' → logprob: -17.21394920349121

Token 64: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03849468752741814
    2. ')]' → logprob: -3.28849458694458
    3. ')' → logprob: -7.91349458694458
    4. '])' → logprob: -9.413495063781738
    5. ']
' → logprob: -12.788495063781738
    6. ' ]' → logprob: -13.413495063781738
    7. '])]' → logprob: -14.413495063781738
    8. ')])' → logprob: -15.163495063781738
    9. '`]' → logprob: -15.663495063781738
    10. ']}' → logprob: -16.663494110107422

Token 65: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' vec' (ID: 10563)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9692398905754089
    2. ' is' → logprob: -1.0942399501800537
    3. ' solve' → logprob: -3.2192399501800537
    4. ' normalize' → logprob: -3.3442399501800537
    5. ' rotate' → logprob: -3.5942399501800537
    6. ' unique' → logprob: -3.7192399501800537
    7. ' find' → logprob: -3.9692399501800537
    8. ' get' → logprob: -3.9692399501800537
    9. ' connected' → logprob: -4.094239711761475
    10. ' scale' → logprob: -4.344239711761475

Token 67: '_diff' (ID: 41047)
  Prédit: 'tor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tor' → logprob: -0.0030885895248502493
    2. 'tors' → logprob: -5.878088474273682
    3. '2' → logprob: -9.75308895111084
    4. 'or' → logprob: -9.87808895111084
    5. 't' → logprob: -10.50308895111084
    6. '   ' → logprob: -10.62808895111084
    7. 'otor' → logprob: -10.75308895111084
    8. 's' → logprob: -11.62808895111084
    9. 'ctor' → logprob: -11.62808895111084
    10. 'to' → logprob: -11.62808895111084

Token 68: '(points' (ID: 72131)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06651090830564499
    2. '(p' → logprob: -3.5665109157562256
    3. '(points' → logprob: -3.9415109157562256
    4. '(' → logprob: -4.3165106773376465
    5. '(point' → logprob: -6.4415106773376465
    6. '(vec' → logprob: -7.8165106773376465
    7. '(v' → logprob: -8.066511154174805
    8. '(s' → logprob: -8.316511154174805
    9. ' (' → logprob: -8.316511154174805
    10. '(x' → logprob: -9.066511154174805

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.922563963802531e-05
    2. ',' → logprob: -10.375079154968262
    3. ' ):' → logprob: -10.750079154968262
    4. ')' → logprob: -11.250079154968262
    5. '):
' → logprob: -11.500079154968262
    6. '   ' → logprob: -13.625079154968262
    7. ':' → logprob: -13.750079154968262
    8. ']:' → logprob: -14.750079154968262
    9. '[]):' → logprob: -15.750079154968262
    10. '[' → logprob: -15.750079154968262

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047395240515470505
    2. '(points' → logprob: -3.2973952293395996
    3. ' points' → logprob: -4.7973952293396
    4. '[' → logprob: -7.6723952293396
    5. 'points' → logprob: -8.047395706176758
    6. '	points' → logprob: -9.922395706176758
    7. '(x' → logprob: -10.422395706176758
    8. '(p' → logprob: -10.547395706176758
    9. '[(' → logprob: -10.672395706176758
    10. '(' → logprob: -10.797395706176758

Token 71: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09467283636331558
    2. ' return' → logprob: -2.469672918319702
    3. '[' → logprob: -6.344672679901123
    4. ' points' → logprob: -6.344672679901123
    5. 'return' (adapté à ' return') → logprob: -6.844672679901123
    6. ' [' → logprob: -7.344672679901123
    7. ' ' → logprob: -9.719673156738281
    8. ' [(' → logprob: -9.719673156738281
    9. '```' → logprob: -9.844673156738281
    10. '[]' → logprob: -9.844673156738281

Token 72: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.35898661613464355
    2. '[(' → logprob: -1.3589866161346436
    3. ' [' → logprob: -3.2339866161346436
    4. '[' → logprob: -5.358986854553223
    5. '[x' → logprob: -7.858986854553223
    6. '[p' → logprob: -9.108986854553223
    7. ' ' → logprob: -10.358986854553223
    8. '[n' → logprob: -11.483986854553223
    9. '[len' → logprob: -11.858986854553223
    10. '[((' → logprob: -11.858986854553223

Token 73: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2529735863208771
    2. 'x' → logprob: -1.5029735565185547
    3. 'b' → logprob: -7.377973556518555
    4. ' points' → logprob: -8.252973556518555
    5. '   ' → logprob: -10.377973556518555
    6. 'y' → logprob: -10.377973556518555
    7. '(points' → logprob: -10.502973556518555
    8. 'p' → logprob: -11.377973556518555
    9. 'j' → logprob: -11.877973556518555
    10. 'a' → logprob: -11.877973556518555

Token 74: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008904983988031745
    2. '[' → logprob: -7.125890731811523
    3. 'i' → logprob: -9.625890731811523
    4. '[j' → logprob: -11.250890731811523
    5. '[n' → logprob: -13.000890731811523
    6. '[t' → logprob: -14.250890731811523
    7. '   ' → logprob: -14.500890731811523
    8. '1' → logprob: -14.500890731811523
    9. '[idx' → logprob: -14.875890731811523
    10. '][' → logprob: -15.000890731811523

Token 75: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001769616355886683
    2. ' +' → logprob: -9.000177383422852
    3. '][' → logprob: -10.125177383422852
    4. '[' → logprob: -11.750177383422852
    5. '   ' → logprob: -12.375177383422852
    6. ']' → logprob: -14.875177383422852
    7. '+
' → logprob: -15.000177383422852
    8. '+i' → logprob: -16.00017738342285
    9. ' ' → logprob: -16.12517738342285
    10. '1' → logprob: -16.25017738342285

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.333223139634356e-05
    2. '+' → logprob: -10.500033378601074
    3. ']' → logprob: -12.750033378601074
    4. ' ' → logprob: -13.125033378601074
    5. '0' → logprob: -14.625033378601074
    6. '   ' → logprob: -15.375033378601074
    7. '2' → logprob: -16.500032424926758
    8. '][' → logprob: -18.250032424926758
    9. '```' → logprob: -18.250032424926758
    10. '  ' → logprob: -18.625032424926758

Token 77: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027582556009292603
    2. '][' → logprob: -3.6525826454162598
    3. ')[' → logprob: -7.02758264541626
    4. ')' → logprob: -8.527582168579102
    5. '[i' → logprob: -10.027582168579102
    6. '   ' → logprob: -10.152582168579102
    7. ' ][' → logprob: -10.277582168579102
    8. ']' → logprob: -10.652582168579102
    9. ' [' → logprob: -11.027582168579102
    10. ' ' → logprob: -11.902582168579102

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. 'x' → logprob: -16.75
    3. ' ' → logprob: -16.875
    4. '][' → logprob: -17.5
    5. ']' → logprob: -18.0
    6. 'i' → logprob: -18.75
    7. ')' → logprob: -18.875
    8. 'k' → logprob: -19.375
    9. '   ' → logprob: -19.75
    10. '1' → logprob: -19.75

Token 79: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16060926020145416
    2. '-' → logprob: -1.910609245300293
    3. ')' → logprob: -8.035609245300293
    4. ' )' → logprob: -10.410609245300293
    5. ' ' → logprob: -11.410609245300293
    6. ']' → logprob: -11.785609245300293
    7. ' ' → logprob: -12.785609245300293
    8. ')-(' → logprob: -12.785609245300293
    9. ',' → logprob: -13.660609245300293
    10. ' ]' → logprob: -14.035609245300293

Token 80: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2519451081752777
    2. ' points' → logprob: -1.5019451379776
    3. '	points' → logprob: -11.251945495605469
    4. '(points' → logprob: -12.876945495605469
    5. 'point' → logprob: -15.376945495605469
    6. '_points' → logprob: -16.00194549560547
    7. '.points' → logprob: -17.12694549560547
    8. 'p' → logprob: -17.75194549560547
    9. ' pontos' → logprob: -17.75194549560547
    10. 'oints' → logprob: -17.87694549560547

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0536014698445797
    2. '[' → logprob: -3.1786015033721924
    3. '][' → logprob: -4.553601264953613
    4. ' [' → logprob: -12.053601264953613
    5. '   ' → logprob: -12.803601264953613
    6. ' ' → logprob: -12.928601264953613
    7. ' ][' → logprob: -14.428601264953613
    8. '0' → logprob: -14.428601264953613
    9. '[][' → logprob: -14.678601264953613
    10. '[I' → logprob: -14.678601264953613

Token 82: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000759957532864064
    2. '[' → logprob: -7.500760078430176
    3. '0' → logprob: -8.875760078430176
    4. ' ][' → logprob: -9.750760078430176
    5. ']' → logprob: -12.750760078430176
    6. ' ' → logprob: -13.125760078430176
    7. '   ' → logprob: -13.125760078430176
    8. ''][' → logprob: -15.125760078430176
    9. '```' → logprob: -15.125760078430176
    10. '1' → logprob: -15.250760078430176

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '[' → logprob: -16.437501907348633
    4. '   ' → logprob: -16.500001907348633
    5. '۰' → logprob: -16.500001907348633
    6. '০' → logprob: -17.312501907348633
    7. ']' → logprob: -17.812501907348633
    8. '1' → logprob: -18.000001907348633
    9. '][' → logprob: -18.125001907348633
    10. '  ' → logprob: -18.187501907348633

Token 84: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033388370648026466
    2. '),' → logprob: -5.878338813781738
    3. '),(' → logprob: -9.128338813781738
    4. ')' → logprob: -9.253338813781738
    5. ' ,' → logprob: -9.378338813781738
    6. '   ' → logprob: -9.628338813781738
    7. ',
' → logprob: -9.628338813781738
    8. '],' → logprob: -10.128338813781738
    9. '<|end|>' → logprob: -10.503338813781738
    10. ',

' → logprob: -11.628338813781738

Token 85: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.0009508833172731102
    2. 'points' → logprob: -7.000950813293457
    3. '(points' → logprob: -10.250950813293457
    4. '	points' → logprob: -12.875950813293457
    5. ' ' → logprob: -14.500950813293457
    6. '_points' → logprob: -14.750950813293457
    7. '.points' → logprob: -15.500950813293457
    8. ' puntos' → logprob: -16.000951766967773
    9. ' pontos' → logprob: -16.000951766967773
    10. ' ' → logprob: -16.125951766967773

Token 86: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11391770839691162
    2. '[i' → logprob: -2.488917827606201
    3. '[' → logprob: -3.738917827606201
    4. ')[' → logprob: -7.613917827606201
    5. '][' → logprob: -8.363917350769043
    6. 's' → logprob: -10.113917350769043
    7. '   ' → logprob: -10.488917350769043
    8. '+i' → logprob: -11.238917350769043
    9. '1' → logprob: -11.363917350769043
    10. ' +' → logprob: -11.363917350769043

Token 87: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003103175258729607
    2. '][' → logprob: -8.125309944152832
    3. ' +' → logprob: -11.875309944152832
    4. '   ' → logprob: -12.625309944152832
    5. '1' → logprob: -13.500309944152832
    6. '[' → logprob: -14.000309944152832
    7. '+
' → logprob: -15.125309944152832
    8. '+[' → logprob: -15.375309944152832
    9. ' ][' → logprob: -15.625309944152832
    10. ']][' → logprob: -15.875309944152832

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.440506407059729e-05
    2. '+' → logprob: -10.75003433227539
    3. ' ' → logprob: -11.37503433227539
    4. 'i' → logprob: -14.00003433227539
    5. '][' → logprob: -14.75003433227539
    6. '   ' → logprob: -15.62503433227539
    7. ']' → logprob: -17.75003433227539
    8. '```' → logprob: -17.87503433227539
    9. '[' → logprob: -18.12503433227539
    10. '  ' → logprob: -18.50003433227539

Token 89: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0018796122167259455
    2. '[' → logprob: -6.376879692077637
    3. ' ][' → logprob: -9.251879692077637
    4. '   ' → logprob: -9.751879692077637
    5. ']' → logprob: -11.876879692077637
    6. ')[' → logprob: -12.126879692077637
    7. '"][' → logprob: -12.626879692077637
    8. ''][' → logprob: -13.126879692077637
    9. ')][' → logprob: -13.751879692077637
    10. ']][' → logprob: -13.751879692077637

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007300666766241193
    2. '0' → logprob: -7.250730037689209
    3. 'i' → logprob: -11.750730514526367
    4. '[' → logprob: -11.875730514526367
    5. '][' → logprob: -12.875730514526367
    6. ' ' → logprob: -13.625730514526367
    7. '[i' → logprob: -14.250730514526367
    8. '```' → logprob: -15.125730514526367
    9. ']' → logprob: -16.125730514526367
    10. '   ' → logprob: -16.250730514526367

Token 91: ']-' (ID: 27107)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.23073558509349823
    2. '-' → logprob: -2.7307355403900146
    3. '[' → logprob: -3.1057355403900146
    4. ' -' → logprob: -3.3557355403900146
    5. ')[' → logprob: -3.4807355403900146
    6. ']' → logprob: -4.730735778808594
    7. ')' → logprob: -4.855735778808594
    8. ']-' → logprob: -5.480735778808594
    9. '<|end|>' → logprob: -5.480735778808594
    10. '-point' → logprob: -5.980735778808594

Token 92: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.688212614681106e-05
    2. ' points' → logprob: -11.000017166137695
    3. '(points' → logprob: -16.375017166137695
    4. '	points' → logprob: -17.375017166137695
    5. '.points' → logprob: -19.625017166137695
    6. 'oints' → logprob: -20.500017166137695
    7. '_points' → logprob: -21.500017166137695
    8. '   ' → logprob: -21.875017166137695
    9. 'point' → logprob: -22.000017166137695
    10. ' ' → logprob: -22.125017166137695

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002272296929731965
    2. '[' → logprob: -6.127272129058838
    3. '][' → logprob: -9.627272605895996
    4. ')[' → logprob: -11.502272605895996
    5. '```' → logprob: -12.127272605895996
    6. ')' → logprob: -14.127272605895996
    7. 'points' → logprob: -14.127272605895996
    8. '   ' → logprob: -14.377272605895996
    9. ' [' → logprob: -14.502272605895996
    10. '[
' → logprob: -14.752272605895996

Token 94: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002715873415581882
    2. '[' → logprob: -8.875271797180176
    3. ']' → logprob: -9.000271797180176
    4. ' ][' → logprob: -12.500271797180176
    5. '1' → logprob: -13.250271797180176
    6. '   ' → logprob: -14.750271797180176
    7. '])' → logprob: -14.750271797180176
    8. ')][' → logprob: -14.875271797180176
    9. ')[' → logprob: -15.000271797180176
    10. '"][' → logprob: -15.125271797180176

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019549215212464333
    2. '0' → logprob: -6.251955032348633
    3. 'i' → logprob: -11.251955032348633
    4. ']' → logprob: -12.251955032348633
    5. '```' → logprob: -12.751955032348633
    6. '-' → logprob: -13.251955032348633
    7. ' ' → logprob: -13.376955032348633
    8. '])' → logprob: -14.251955032348633
    9. '][' → logprob: -14.626955032348633
    10. '[' → logprob: -14.876955032348633

Token 96: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12705041468143463
    2. ')]' → logprob: -2.1270503997802734
    3. ')])' → logprob: -9.627050399780273
    4. ' )' → logprob: -11.002050399780273
    5. '))' → logprob: -11.502050399780273
    6. '   ' → logprob: -11.627050399780273
    7. ']' → logprob: -11.877050399780273
    8. '])' → logprob: -12.252050399780273
    9. '),' → logprob: -12.502050399780273
    10. ')
' → logprob: -13.877050399780273

Token 97: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07225213944911957
    2. '   ' → logprob: -3.072252035140991
    3. ')' → logprob: -4.07225227355957
    4. 'for' → logprob: -5.69725227355957
    5. '    ' → logprob: -7.19725227355957
    6. ' ' → logprob: -7.32225227355957
    7. '	for' → logprob: -7.69725227355957
    8. '       ' → logprob: -7.82225227355957
    9. ']' → logprob: -7.94725227355957
    10. ' )' → logprob: -9.07225227355957

Token 98: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.017954658716917038
    2. 'range' → logprob: -4.5179548263549805
    3. ' i' → logprob: -5.0179548263549805
    4. 'i' → logprob: -8.26795482635498
    5. ' ' → logprob: -12.64295482635498
    6. ' xrange' → logprob: -13.26795482635498
    7. '	range' → logprob: -13.51795482635498
    8. '_range' → logprob: -14.01795482635498
    9. '(range' → logprob: -14.01795482635498
    10. 'Range' → logprob: -15.51795482635498

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008630876429378986
    2. ' ' → logprob: -5.508630752563477
    3. ' range' → logprob: -5.758630752563477
    4. '<|end|>' → logprob: -6.883630752563477
    5. 'in' → logprob: -8.383630752563477
    6. ' i' → logprob: -9.758630752563477
    7. 'range' → logprob: -10.133630752563477
    8. ' xrange' → logprob: -11.133630752563477
    9. '<|end|>' → logprob: -11.383630752563477
    10. '  ' → logprob: -13.008630752563477

Token 100: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029753385111689568
    2. 'range' → logprob: -3.5297534465789795
    3. ' xrange' → logprob: -13.029753684997559
    4. '(range' → logprob: -15.029753684997559
    5. '	range' → logprob: -15.029753684997559
    6. '_range' → logprob: -17.654752731323242
    7. ' ' → logprob: -18.029752731323242
    8. '<|end|>' → logprob: -19.029752731323242
    9. '.range' → logprob: -19.654752731323242
    10. ' rango' → logprob: -20.904752731323242

Token 101: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00020354038861114532
    2. '(' → logprob: -8.500203132629395
    3. '(
' → logprob: -18.25020408630371
    4. 'len' → logprob: -19.75020408630371
    5. '(length' → logprob: -20.50020408630371
    6. '(

' → logprob: -20.62520408630371
    7. ' (' → logprob: -20.62520408630371
    8. '((' → logprob: -20.75020408630371
    9. '<len' → logprob: -20.75020408630371
    10. '[len' → logprob: -21.00020408630371

Token 102: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.011048528365790844
    2. '(' → logprob: -4.511048316955566
    3. '(len' → logprob: -15.136048316955566
    4. '(

' → logprob: -15.886048316955566
    5. '	points' → logprob: -16.011049270629883
    6. '(
' → logprob: -16.261049270629883
    7. '(parts' → logprob: -17.136049270629883
    8. ' points' → logprob: -18.011049270629883
    9. '(point' → logprob: -18.261049270629883
    10. ' (' → logprob: -18.886049270629883

Token 103: ')-' (ID: 14080)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.2959067225456238
    2. ')' → logprob: -2.0459067821502686
    3. '-' → logprob: -3.1709067821502686
    4. '(' → logprob: -3.4209067821502686
    5. '()' → logprob: -3.7959067821502686
    6. ' -' → logprob: -3.7959067821502686
    7. '()-' → logprob: -5.6709065437316895
    8. ' )' → logprob: -6.7959065437316895
    9. '(len' → logprob: -7.4209065437316895
    10. ' ' → logprob: -7.4209065437316895

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '(' → logprob: -17.625335693359375
    4. '2' → logprob: -19.500335693359375
    5. '```' → logprob: -20.375335693359375
    6. '   ' → logprob: -21.000335693359375
    7. '  ' → logprob: -21.125335693359375
    8. '１' → logprob: -21.875335693359375
    9. '0' → logprob: -21.875335693359375
    10. ')' → logprob: -22.000335693359375

Token 105: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.009604386053979397
    2. ')' → logprob: -4.884604454040527
    3. ')])' → logprob: -6.259604454040527
    4. ']' → logprob: -10.634604454040527
    5. ' )' → logprob: -10.884604454040527
    6. '])]' → logprob: -11.134604454040527
    7. '))' → logprob: -11.384604454040527
    8. '])' → logprob: -11.759604454040527
    9. '   ' → logprob: -12.509604454040527
    10. ')}' → logprob: -13.759604454040527

Token 106: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006882557645440102
    2. '
' → logprob: -5.381882667541504
    3. '<|end|>' → logprob: -6.631882667541504
    4. '```' → logprob: -7.756882667541504
    5. '

' → logprob: -8.006882667541504
    6. '#' → logprob: -10.381882667541504
    7. '  
' → logprob: -10.631882667541504
    8. '<|end|>' → logprob: -10.756882667541504
    9. '    
' → logprob: -11.006882667541504
    10. 'import' → logprob: -11.006882667541504

Token 107: ' rotate' (ID: 31987)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.709050178527832
    2. ' main' → logprob: -1.709050178527832
    3. ' area' → logprob: -1.959050178527832
    4. ' polygon' → logprob: -2.084050178527832
    5. ' rotate' → logprob: -2.209050178527832
    6. ' normalize' → logprob: -2.709050178527832
    7. ' convex' → logprob: -3.334050178527832
    8. ' scale' → logprob: -4.334050178527832
    9. ' centroid' → logprob: -4.459050178527832
    10. ' find' → logprob: -4.584050178527832

Token 108: '(vec' (ID: 57650)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.02593875862658024
    2. '(' → logprob: -3.7759387493133545
    3. '_points' → logprob: -6.525938987731934
    4. ' (' → logprob: -7.650938987731934
    5. '(point' → logprob: -7.650938987731934
    6. '_' → logprob: -9.525938987731934
    7. '(angle' → logprob: -10.400938987731934
    8. '(Point' → logprob: -10.775938987731934
    9. '_angle' → logprob: -11.025938987731934
    10. '(p' → logprob: -11.150938987731934

Token 109: 's' (ID: 82)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5931854248046875
    2. 's' → logprob: -0.8431854248046875
    3. '):' → logprob: -5.3431854248046875
    4. ' ,' → logprob: -5.5931854248046875
    5. 'ector' → logprob: -5.7181854248046875
    6. 'ectors' → logprob: -6.7181854248046875
    7. ')' → logprob: -6.8431854248046875
    8. '   ' → logprob: -7.7181854248046875
    9. '_,' → logprob: -8.343185424804688
    10. 'ection' → logprob: -8.468185424804688

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003398726985324174
    2. ' ,' → logprob: -8.00033950805664
    3. '):' → logprob: -13.00033950805664
    4. ',v' → logprob: -13.62533950805664
    5. '‌,' → logprob: -15.25033950805664
    6. ')' → logprob: -16.87533950805664
    7. ',
' → logprob: -17.00033950805664
    8. '   ' → logprob: -17.12533950805664
    9. 's' → logprob: -17.12533950805664
    10. 'vec' → logprob: -17.12533950805664

Token 111: ' deg' (ID: 5597)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.09440775960683823
    2. ' angle' → logprob: -2.594407796859741
    3. 'k' → logprob: -5.094407558441162
    4. ' k' → logprob: -6.219407558441162
    5. 'theta' → logprob: -6.219407558441162
    6. 'degrees' → logprob: -6.719407558441162
    7. 'times' → logprob: -6.844407558441162
    8. 'n' → logprob: -7.344407558441162
    9. ' ' → logprob: -7.719407558441162
    10. '90' → logprob: -7.844407558441162

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013389740139245987
    2. 's' → logprob: -5.013389587402344
    3. ',' → logprob: -5.138389587402344
    4. ')' → logprob: -7.763389587402344
    5. ' ):' → logprob: -9.013389587402344
    6. '):
' → logprob: -9.138389587402344
    7. ' ,' → logprob: -10.388389587402344
    8. '_angle' → logprob: -10.888389587402344
    9. '=' → logprob: -11.138389587402344
    10. ' ' → logprob: -11.263389587402344

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2142592668533325
    2. ':' → logprob: -1.8392592668533325
    3. '):' → logprob: -1.8392592668533325
    4. ' ' → logprob: -2.089259147644043
    5. '90' → logprob: -2.464259147644043
    6. ',' → logprob: -2.589259147644043
    7. ')' → logprob: -3.839259147644043
    8. ' :' → logprob: -3.964259147644043
    9. '    ' → logprob: -4.214259147644043
    10. ' import' → logprob: -4.339259147644043

Token 114: ' #' (ID: 1069)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.12451925128698349
    2. ' from' → logprob: -2.7495193481445312
    3. 'import' → logprob: -3.2495193481445312
    4. '    ' → logprob: -5.124519348144531
    5. 'from' → logprob: -5.124519348144531
    6. ' ' → logprob: -6.624519348144531
    7. '   ' → logprob: -7.124519348144531
    8. '0' → logprob: -9.374519348144531
    9. '1' → logprob: -9.999519348144531
    10. '2' → logprob: -10.874519348144531

Token 115: ' Rotate' (ID: 98562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13615727424621582
    2. ' import' → logprob: -2.386157274246216
    3. 'import' → logprob: -3.761157274246216
    4. 'from' → logprob: -5.761157035827637
    5. ' angle' → logprob: -6.511157035827637
    6. ' from' → logprob: -6.511157035827637
    7. '    ' → logprob: -6.761157035827637
    8. '   ' → logprob: -7.011157035827637
    9. ' pass' → logprob: -7.386157035827637
    10. '2' → logprob: -7.511157035827637

Token 116: ' by' (ID: 656)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20964595675468445
    2. 'import' → logprob: -1.8346459865570068
    3. ' ' → logprob: -4.584645748138428
    4. ' from' → logprob: -4.959645748138428
    5. 'vec' → logprob: -6.084645748138428
    6. ' vec' → logprob: -6.084645748138428
    7. ' [
' → logprob: -6.334645748138428
    8. ' [' → logprob: -7.209645748138428
    9. 'from' → logprob: -7.209645748138428
    10. ' (' → logprob: -7.334645748138428

Token 117: ' ' (ID: 220)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.18444286286830902
    2. 'deg' → logprob: -2.5594427585601807
    3. ' deg' → logprob: -2.9344427585601807
    4. ' ' → logprob: -4.43444299697876
    5. 'import' → logprob: -4.68444299697876
    6. ' (' → logprob: -5.05944299697876
    7. '(de' → logprob: -5.68444299697876
    8. ' import' → logprob: -6.55944299697876
    9. ' -' → logprob: -6.68444299697876
    10. '-' → logprob: -7.30944299697876

Token 118: '0' (ID: 15)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '90' → logprob: -0.06749098002910614
    2. 'deg' → logprob: -3.067491054534912
    3. 'import' → logprob: -4.942491054534912
    4. ' ' → logprob: -6.192491054534912
    5. 'from' → logprob: -6.442491054534912
    6. '(de' → logprob: -6.692491054534912
    7. '(' → logprob: -6.817491054534912
    8. ' deg' → logprob: -7.192491054534912
    9. 'degrees' → logprob: -7.192491054534912
    10. 'for' → logprob: -7.442491054534912

Token 119: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: '90' (ID: 2744)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.695609450340271
    2. '90' → logprob: -0.695609450340271
    3. ' -' → logprob: -7.8206095695495605
    4. '180' → logprob: -7.9456095695495605
    5. 'def' → logprob: -8.195609092712402
    6. '0' → logprob: -8.195609092712402
    7. '45' → logprob: -8.320609092712402
    8. '9' → logprob: -8.695609092712402
    9. ' def' → logprob: -8.945609092712402
    10. '1' → logprob: -9.070609092712402

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008938711136579514
    2. ' ,' → logprob: -4.758938789367676
    3. ',
' → logprob: -9.133938789367676
    4. ' ' → logprob: -9.383938789367676
    5. '0' → logprob: -9.883938789367676
    6. ' or' → logprob: -10.758938789367676
    7. ')' → logprob: -11.633938789367676
    8. ',

' → logprob: -11.758938789367676
    9. '°,' → logprob: -12.008938789367676
    10. 'import' → logprob: -12.133938789367676

Token 122: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.0014883159892633557
    2. '1' → logprob: -7.001488208770752
    3. ' ' → logprob: -7.626488208770752
    4. 'def' → logprob: -9.75148868560791
    5. '18' → logprob: -11.62648868560791
    6. '-' → logprob: -12.00148868560791
    7. '
' → logprob: -12.37648868560791
    8. 'or' → logprob: -13.25148868560791
    9. '```' → logprob: -13.37648868560791
    10. ' def' → logprob: -13.62648868560791

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014908155426383018
    2. ' ,' → logprob: -7.126490592956543
    3. ' or' → logprob: -8.251490592956543
    4. ',
' → logprob: -9.126490592956543
    5. ')' → logprob: -9.251490592956543
    6. ':' → logprob: -9.501490592956543
    7. '):' → logprob: -10.376490592956543
    8. '0' → logprob: -10.876490592956543
    9. ' ' → logprob: -11.001490592956543
    10. 'or' → logprob: -11.001490592956543

Token 124: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -9.29340603761375e-05
    2. ' ' → logprob: -9.500092506408691
    3. '27' → logprob: -12.000092506408691
    4. 'def' → logprob: -12.125092506408691
    5. '   ' → logprob: -13.500092506408691
    6. 'or' → logprob: -13.625092506408691
    7. '```' → logprob: -13.750092506408691
    8. ' def' → logprob: -14.125092506408691
    9. '90' → logprob: -14.375092506408691
    10. '360' → logprob: -14.500092506408691

Token 125: ' degrees' (ID: 18210)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12140396982431412
    2. '   ' → logprob: -2.746403932571411
    3. '):' → logprob: -3.121403932571411
    4. 'import' → logprob: -6.62140417098999
    5. ',' → logprob: -7.24640417098999
    6. ' :' → logprob: -7.37140417098999
    7. '(' → logprob: -7.49640417098999
    8. ')' → logprob: -7.74640417098999
    9. ':
' → logprob: -8.371403694152832
    10. '():' → logprob: -8.496403694152832

Token 126: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08143525570631027
    2. '   ' → logprob: -2.831435203552246
    3. ':
' → logprob: -4.831435203552246
    4. 'import' → logprob: -5.206435203552246
    5. ',' → logprob: -5.581435203552246
    6. '):' → logprob: -7.081435203552246
    7. '
' → logprob: -8.581435203552246
    8. 'def' → logprob: -8.831435203552246
    9. ' :' → logprob: -8.956435203552246
    10. ')' → logprob: -9.081435203552246

Token 127: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09901215136051178
    2. '   ' → logprob: -2.5990121364593506
    3. 'import' → logprob: -4.34901237487793
    4. ':
' → logprob: -5.47401237487793
    5. ',' → logprob: -6.72401237487793
    6. '
' → logprob: -8.22401237487793
    7. '):' → logprob: -8.22401237487793
    8. ' import' → logprob: -8.34901237487793
    9. ' :' → logprob: -8.34901237487793
    10. ' ' → logprob: -9.22401237487793

Token 128: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5750075578689575
    2. ' if' → logprob: -0.9500075578689575
    3. ' rotated' → logprob: -4.825007438659668
    4. ' import' → logprob: -5.075007438659668
    5. 'if' (adapté à ' if') → logprob: -5.200007438659668
    6. 'import' → logprob: -5.325007438659668
    7. ' rot' → logprob: -5.450007438659668
    8. ' angle' → logprob: -5.575007438659668
    9. ' n' → logprob: -5.825007438659668
    10. ' radians' → logprob: -6.200007438659668

Token 129: ' deg' (ID: 5597)
  Prédit: ' deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deg' → logprob: -0.0002966127940453589
    2. 'deg' → logprob: -8.125296592712402
    3. ' ' → logprob: -15.250296592712402
    4. ' ' → logprob: -15.625296592712402
    5. '	de' → logprob: -15.750296592712402
    6. ' d' → logprob: -17.75029754638672
    7. '(de' → logprob: -18.37529754638672
    8. ' de' → logprob: -18.75029754638672
    9. ' not' → logprob: -18.87529754638672
    10. '_deg' → logprob: -19.25029754638672

Token 130: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.024585533887147903
    2. '==' → logprob: -3.899585485458374
    3. ' %' → logprob: -6.149585723876953
    4. '%' → logprob: -6.524585723876953
    5. ' ' → logprob: -7.899585723876953
    6. '=' → logprob: -10.399585723876953
    7. ')' → logprob: -10.899585723876953
    8. ' ' → logprob: -12.524585723876953
    9. ' =' → logprob: -13.274585723876953
    10. ' )' → logprob: -13.524585723876953

Token 131: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28327664732933044
    2. '0' → logprob: -1.4082766771316528
    3. '90' → logprob: -6.158276557922363
    4. ' ' → logprob: -12.783276557922363
    5. '  ' → logprob: -12.908276557922363
    6. '<|end|>' → logprob: -13.658276557922363
    7. '45' → logprob: -14.533276557922363
    8. ' 
' → logprob: -15.345776557922363
    9. '40' → logprob: -15.470776557922363
    10. '30' → logprob: -15.595776557922363

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006955838296562433
    2. '90' → logprob: -5.131955623626709
    3. ' ' → logprob: -6.881955623626709
    4. '  ' → logprob: -15.756956100463867
    5. '180' → logprob: -16.381956100463867
    6. '   ' → logprob: -16.881956100463867
    7. '9' → logprob: -16.881956100463867
    8. '1' → logprob: -17.444456100463867
    9. '00' → logprob: -17.444456100463867
    10. '```' → logprob: -17.819456100463867

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00045700959162786603
    2. ':return' → logprob: -8.125456809997559
    3. ':
' → logprob: -9.375456809997559
    4. ' :' → logprob: -9.500456809997559
    5. '):' → logprob: -13.875456809997559
    6. ':
' → logprob: -16.375457763671875
    7. ':def' → logprob: -16.875457763671875
    8. ':**' → logprob: -16.875457763671875
    9. ' :
' → logprob: -17.500457763671875
    10. ':list' → logprob: -17.750457763671875

Token 134: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12696905434131622
    2. '       ' → logprob: -2.3769690990448
    3. ':
' → logprob: -4.126968860626221
    4. ':return' → logprob: -4.751968860626221
    5. ' return' → logprob: -7.626968860626221
    6. '):' → logprob: -8.376969337463379
    7. ' :' → logprob: -8.376969337463379
    8. '<|end|>' → logprob: -8.626969337463379
    9. '   ' → logprob: -9.001969337463379
    10. 'return' → logprob: -9.251969337463379

Token 135: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31457680463790894
    2. ' return' → logprob: -1.3145768642425537
    3. '       ' → logprob: -6.689576625823975
    4. '   ' → logprob: -9.939577102661133
    5. '
' → logprob: -11.064577102661133
    6. '	return' → logprob: -12.564577102661133
    7. ':return' → logprob: -13.689577102661133
    8. 'eturn' → logprob: -14.564577102661133
    9. '    ' → logprob: -14.814577102661133
    10. '        
' → logprob: -15.439577102661133

Token 136: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.018153570592403412
    2. ' vec' → logprob: -4.018153667449951
    3. '	vec' → logprob: -13.018153190612793
    4. '[' → logprob: -14.018153190612793
    5. 've' → logprob: -15.018153190612793
    6. '(vec' → logprob: -15.643153190612793
    7. 'list' → logprob: -16.39315414428711
    8. ' ' → logprob: -17.01815414428711
    9. 'vector' → logprob: -17.51815414428711
    10. '   ' → logprob: -17.64315414428711

Token 137: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3856492842023727e-06
    2. '_s' → logprob: -14.500000953674316
    3. ' s' → logprob: -15.000000953674316
    4. ')s' → logprob: -16.250001907348633
    5. 'vec' → logprob: -16.250001907348633
    6. '_vec' → logprob: -16.875001907348633
    7. '```' → logprob: -17.000001907348633
    8. 'с' → logprob: -17.250001907348633
    9. ')' → logprob: -17.375001907348633
    10. '{s' → logprob: -17.500001907348633

Token 138: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3694170415401459
    2. '   ' → logprob: -1.2444170713424683
    3. 'elif' → logprob: -4.619417190551758
    4. '    
' → logprob: -4.994417190551758
    5. '<|end|>' → logprob: -5.744417190551758
    6. '	elif' → logprob: -8.494417190551758
    7. '  
' → logprob: -8.494417190551758
    8. ' elif' → logprob: -8.869417190551758
    9. '<|end|>' → logprob: -9.869417190551758
    10. ')' → logprob: -9.994417190551758

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16489726305007935
    2. '
' → logprob: -1.9148972034454346
    3. '    
' → logprob: -5.789897441864014
    4. 'elif' → logprob: -7.039897441864014
    5. '\n' → logprob: -8.289896965026855
    6. ')' → logprob: -8.539896965026855
    7. ' elif' → logprob: -9.414896965026855
    8. '  
' → logprob: -10.414896965026855
    9. '   
' → logprob: -10.539896965026855
    10. '```' → logprob: -10.914896965026855

Token 140: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6397742629051208
    2. 'elif' → logprob: -0.7647742629051208
    3. ' if' → logprob: -5.514774322509766
    4. '   ' → logprob: -6.264774322509766
    5. 'import' → logprob: -7.514774322509766
    6. ' elif' → logprob: -7.639774322509766
    7. '    
' → logprob: -9.764774322509766
    8. '
' → logprob: -10.139774322509766
    9. 'from' → logprob: -10.764774322509766
    10. ')' → logprob: -11.014774322509766

Token 141: ' deg' (ID: 5597)
  Prédit: ' deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deg' → logprob: -0.005234002135694027
    2. 'deg' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.880233764648438
    4. '	de' → logprob: -17.005233764648438
    5. ' ' → logprob: -17.630233764648438
    6. '_deg' → logprob: -18.255233764648438
    7. '90' → logprob: -18.380233764648438
    8. ' degrees' → logprob: -18.630233764648438
    9. 'degree' → logprob: -18.630233764648438
    10. '   ' → logprob: -18.755233764648438

Token 142: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011065270751714706
    2. '==' → logprob: -4.511065483093262
    3. ' ' → logprob: -11.511065483093262
    4. '=' → logprob: -12.886065483093262
    5. ' =' → logprob: -12.886065483093262
    6. ' ' → logprob: -13.636065483093262
    7. '   ' → logprob: -15.011065483093262
    8. ' ===' → logprob: -15.886065483093262
    9. '```' → logprob: -16.136064529418945
    10. '[' → logprob: -16.386064529418945

Token 143: ' ' (ID: 220)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.043018486350774765
    2. ' ' → logprob: -3.1680185794830322
    3. '180' → logprob: -11.043018341064453
    4. '9' → logprob: -13.418018341064453
    5. '45' → logprob: -14.668018341064453
    6. '   ' → logprob: -15.293018341064453
    7. '1' → logprob: -15.293018341064453
    8. ' ninety' → logprob: -15.418018341064453
    9. '900' → logprob: -15.543018341064453
    10. '901' → logprob: -15.668018341064453

Token 144: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.0001295222609769553
    2. ' ' → logprob: -9.625129699707031
    3. '9' → logprob: -9.750129699707031
    4. '180' → logprob: -12.750129699707031
    5. '1' → logprob: -13.250129699707031
    6. '900' → logprob: -15.375129699707031
    7. '   ' → logprob: -16.37512969970703
    8. '901' → logprob: -17.12512969970703
    9. '```' → logprob: -17.87512969970703
    10. '0' → logprob: -18.00012969970703

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002810105914250016
    2. ':
' → logprob: -5.877810001373291
    3. ' :' → logprob: -12.62781047821045
    4. ':return' → logprob: -13.75281047821045
    5. '):' → logprob: -15.00281047821045
    6. ' :
' → logprob: -16.252809524536133
    7. '   ' → logprob: -16.252809524536133
    8. ':
' → logprob: -16.377809524536133
    9. ':

' → logprob: -16.627809524536133
    10. ':def' → logprob: -16.877809524536133

Token 146: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011309764347970486
    2. ':
' → logprob: -4.636309623718262
    3. '   ' → logprob: -6.886309623718262
    4. '       ' → logprob: -8.261309623718262
    5. '):' → logprob: -8.636309623718262
    6. ':return' → logprob: -10.136309623718262
    7. '):
' → logprob: -11.011309623718262
    8. ' :' → logprob: -11.886309623718262
    9. ')' → logprob: -12.386309623718262
    10. ',' → logprob: -12.386309623718262

Token 147: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9970899224281311
    2. '[' → logprob: -1.2470898628234863
    3. '   ' → logprob: -1.3720898628234863
    4. ' return' → logprob: -2.7470898628234863
    5. '[(' → logprob: -4.122089862823486
    6. ' [' → logprob: -4.997089862823486
    7. '[-' → logprob: -5.872089862823486
    8. '[((' → logprob: -9.372090339660645
    9. ' [(' → logprob: -9.747090339660645
    10. '  ' → logprob: -10.497090339660645

Token 148: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014458348974585533
    2. '[(' → logprob: -4.889458179473877
    3. ' [' → logprob: -5.014458179473877
    4. '   ' → logprob: -9.514458656311035
    5. '[((' → logprob: -9.639458656311035
    6. ' [(' → logprob: -10.889458656311035
    7. '[-' → logprob: -11.014458656311035
    8. ' ' → logprob: -11.639458656311035
    9. '  ' → logprob: -14.139458656311035
    10. '[n' → logprob: -14.264458656311035

Token 149: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0022990626748651266
    2. '(' → logprob: -6.377298831939697
    3. '(y' → logprob: -7.627298831939697
    4. ' (-' → logprob: -10.377299308776855
    5. '(x' → logprob: -10.502299308776855
    6. '(-(' → logprob: -10.877299308776855
    7. '((-' → logprob: -11.127299308776855
    8. '-y' → logprob: -12.002299308776855
    9. ' (' → logprob: -12.752299308776855
    10. '   ' → logprob: -13.252299308776855

Token 150: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0006665678229182959
    2. 'v' → logprob: -7.625666618347168
    3. ' y' → logprob: -9.125666618347168
    4. 'yv' → logprob: -10.250666618347168
    5. 'vy' → logprob: -10.875666618347168
    6. 'dy' → logprob: -11.500666618347168
    7. '   ' → logprob: -12.625666618347168
    8. 'b' → logprob: -14.250666618347168
    9. ' ' → logprob: -14.625666618347168
    10. 'vec' → logprob: -15.125666618347168

Token 151: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08460760116577148
    2. ',x' → logprob: -2.5846076011657715
    3. ' ,' → logprob: -5.5846076011657715
    4. 'x' → logprob: -6.3346076011657715
    5. ' x' → logprob: -9.45960807800293
    6. '[' → logprob: -9.58460807800293
    7. '0' → logprob: -11.70960807800293
    8. '   ' → logprob: -12.08460807800293
    9. '1' → logprob: -12.33460807800293
    10. ' ' → logprob: -13.20960807800293

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.463036435074173e-05
    2. ' )' → logprob: -10.625024795532227
    3. ')
' → logprob: -16.000024795532227
    4. ')]' → logprob: -17.375024795532227
    5. ' for' → logprob: -17.625024795532227
    6. 'for' → logprob: -18.000024795532227
    7. '   ' → logprob: -18.375024795532227
    8. '}' → logprob: -18.625024795532227
    9. '),' → logprob: -18.750024795532227
    10. ' ' → logprob: -19.125024795532227

Token 153: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02326202020049095
    2. 'for' → logprob: -3.7732620239257812
    3. ' ' → logprob: -11.898262023925781
    4. ')' → logprob: -12.023262023925781
    5. '	for' → logprob: -12.648262023925781
    6. ']' → logprob: -15.898262023925781
    7. '   ' → logprob: -16.02326202392578
    8. ' in' → logprob: -16.39826202392578
    9. '  ' → logprob: -17.02326202392578
    10. '
' → logprob: -17.64826202392578

Token 154: ' x' (ID: 1215)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.007965147495269775
    2. ' vec' → logprob: -5.257965087890625
    3. 'x' → logprob: -6.007965087890625
    4. '(' → logprob: -9.382965087890625
    5. '(x' → logprob: -10.007965087890625
    6. ' x' → logprob: -10.007965087890625
    7. '(vec' → logprob: -10.257965087890625
    8. '   ' → logprob: -10.882965087890625
    9. ' (' → logprob: -11.257965087890625
    10. ' ' → logprob: -11.257965087890625

Token 155: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.25198644399642944
    2. ',' → logprob: -1.5019865036010742
    3. ' ,' → logprob: -9.876986503601074
    4. ',_' → logprob: -13.251986503601074
    5. ',x' → logprob: -13.376986503601074
    6. 'y' → logprob: -14.876986503601074
    7. ',v' → logprob: -15.126986503601074
    8. ',w' → logprob: -15.126986503601074
    9. ',Y' → logprob: -15.251986503601074
    10. ',
' → logprob: -15.501986503601074

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048589304089546204
    2. 'in' → logprob: -3.0485892295837402
    3. ']' → logprob: -14.048589706420898
    4. 's' → logprob: -15.048589706420898
    5. ' ' → logprob: -15.173589706420898
    6. ')' → logprob: -15.798589706420898
    7. '<|end|>' → logprob: -16.5485897064209
    8. 'vec' → logprob: -16.6735897064209
    9. ' ]' → logprob: -16.6735897064209
    10. '	in' → logprob: -16.9235897064209

Token 157: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.02324652671813965
    2. ' vec' → logprob: -3.7732465267181396
    3. '	vec' → logprob: -14.523246765136719
    4. 've' → logprob: -15.148246765136719
    5. '(vec' → logprob: -15.148246765136719
    6. '_vec' → logprob: -18.89824676513672
    7. '.vec' → logprob: -18.89824676513672
    8. ' ' → logprob: -19.02324676513672
    9. 'Vec' → logprob: -19.27324676513672
    10. 'vector' → logprob: -19.27324676513672

Token 158: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.939851037808694e-05
    2. 'cs' → logprob: -10.875029563903809
    3. 'ecs' → logprob: -11.500029563903809
    4. 'с' → logprob: -15.875029563903809
    5. 'ectors' → logprob: -16.375028610229492
    6. 'es' → logprob: -17.125028610229492
    7. 'ects' → logprob: -17.750028610229492
    8. 'ctors' → logprob: -18.125028610229492
    9. '```' → logprob: -18.250028610229492
    10. 'c' → logprob: -18.625028610229492

Token 159: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001794658601284027
    2. ']
' → logprob: -6.376794815063477
    3. ' ]' → logprob: -9.876794815063477
    4. '   ' → logprob: -10.251794815063477
    5. ']
' → logprob: -12.251794815063477
    6. ']

' → logprob: -14.626794815063477
    7. ')]' → logprob: -15.251794815063477
    8. ' ]
' → logprob: -15.251794815063477
    9. '       ' → logprob: -16.876794815063477
    10. ')' → logprob: -18.501794815063477

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005868718726560473
    2. 'if' → logprob: -7.750586986541748
    3. '
' → logprob: -9.37558650970459
    4. ' if' → logprob: -9.62558650970459
    5. '    
' → logprob: -12.37558650970459
    6. '```' → logprob: -14.87558650970459
    7. 'elif' → logprob: -15.12558650970459
    8. ')' → logprob: -15.75058650970459
    9. '	if' → logprob: -15.87558650970459
    10. '  
' → logprob: -16.500587463378906

Token 161: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.059008751064538956
    2. '   ' → logprob: -3.184008836746216
    3. ' if' → logprob: -4.184008598327637
    4. '
' → logprob: -7.434008598327637
    5. '    
' → logprob: -10.934008598327637
    6. ' ' → logprob: -11.309008598327637
    7. 'elif' → logprob: -11.434008598327637
    8. ')
' → logprob: -12.809008598327637
    9. '```' → logprob: -12.809008598327637
    10. '  
' → logprob: -13.434008598327637

Token 162: ' deg' (ID: 5597)
  Prédit: ' deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deg' → logprob: -0.24514655768871307
    2. 'deg' → logprob: -1.6201465129852295
    3. '180' → logprob: -3.9951465129852295
    4. ' ' → logprob: -6.870146751403809
    5. '90' → logprob: -10.370146751403809
    6. '   ' → logprob: -10.495146751403809
    7. 'de' → logprob: -11.995146751403809
    8. '(de' → logprob: -11.995146751403809
    9. '_deg' → logprob: -12.495146751403809
    10. 'd' → logprob: -13.120146751403809

Token 163: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023249322548508644
    2. '==' → logprob: -3.773249387741089
    3. ' ' → logprob: -12.898249626159668
    4. ' ' → logprob: -14.898249626159668
    5. ' =' → logprob: -15.273249626159668
    6. '=' → logprob: -15.273249626159668
    7. '()==' → logprob: -16.02324867248535
    8. '   ' → logprob: -16.14824867248535
    9. ')==' → logprob: -16.52324867248535
    10. '(' → logprob: -16.89824867248535

Token 164: ' ' (ID: 220)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.004079112783074379
    2. ' ' → logprob: -5.504079341888428
    3. '18' → logprob: -15.75407886505127
    4. '270' → logprob: -15.87907886505127
    5. '1' → logprob: -16.004079818725586
    6. '90' → logprob: -16.129079818725586
    7. '   ' → logprob: -16.379079818725586
    8. '```' → logprob: -17.066579818725586
    9. 'def' → logprob: -17.129079818725586
    10. '181' → logprob: -17.754079818725586

Token 165: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -1.1994775377388578e-05
    2. '18' → logprob: -11.750012397766113
    3. '1' → logprob: -12.750012397766113
    4. ' ' → logprob: -14.125012397766113
    5. '181' → logprob: -16.125011444091797
    6. '```' → logprob: -16.125011444091797
    7. '179' → logprob: -17.437511444091797
    8. '182' → logprob: -17.562511444091797
    9. 'def' → logprob: -17.750011444091797
    10. '-' → logprob: -18.125011444091797

Token 166: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3134807050228119
    2. ':' → logprob: -1.3134807348251343
    3. ':

' → logprob: -9.938480377197266
    4. '       ' → logprob: -9.938480377197266
    5. '   ' → logprob: -10.063480377197266
    6. ':return' → logprob: -10.313480377197266
    7. ':
' → logprob: -10.563480377197266
    8. ' :
' → logprob: -11.688480377197266
    9. '):
' → logprob: -12.438480377197266
    10. '=' → logprob: -12.813480377197266

Token 167: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07740729302167892
    2. ' [' → logprob: -2.8274073600769043
    3. 'return' → logprob: -4.952407360076904
    4. '   ' → logprob: -5.202407360076904
    5. ' return' → logprob: -6.577407360076904
    6. '[(' → logprob: -7.577407360076904
    7. '[-' → logprob: -7.577407360076904
    8. '[
' → logprob: -8.577406883239746
    9. ' [(' → logprob: -9.952406883239746
    10. '[i' → logprob: -11.202406883239746

Token 168: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00540747307240963
    2. 'return' (adapté à ' return') → logprob: -5.755407333374023
    3. ' [' → logprob: -6.255407333374023
    4. '   ' → logprob: -9.130407333374023
    5. '[(' → logprob: -9.630407333374023
    6. ' return' → logprob: -9.630407333374023
    7. '[-' → logprob: -10.005407333374023
    8. '[
' → logprob: -11.755407333374023
    9. '=[' → logprob: -13.005407333374023
    10. '[((' → logprob: -13.130407333374023

Token 169: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001673061487963423
    2. ' [' → logprob: -8.750166893005371
    3. '[(' → logprob: -12.500166893005371
    4. '   ' → logprob: -13.250166893005371
    5. '[((' → logprob: -13.750166893005371
    6. '[-' → logprob: -14.000166893005371
    7. ' ' → logprob: -14.750166893005371
    8. '\[' → logprob: -15.125166893005371
    9. '[
' → logprob: -15.750166893005371
    10. '[n' → logprob: -17.125167846679688

Token 170: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0005357555346563458
    2. '[-' → logprob: -8.12553596496582
    3. '[' → logprob: -8.37553596496582
    4. ' (-' → logprob: -11.75053596496582
    5. '(' → logprob: -14.00053596496582
    6. '((-' → logprob: -14.87553596496582
    7. '   ' → logprob: -16.00053596496582
    8. '[(' → logprob: -16.62553596496582
    9. ' [' → logprob: -17.37553596496582
    10. '(-(' → logprob: -17.50053596496582

Token 171: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.836499985889532e-05
    2. ' x' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.875059127807617
    4. ' ' → logprob: -20.250059127807617
    5. '	x' → logprob: -20.875059127807617
    6. ')x' → logprob: -21.000059127807617
    7. '```' → logprob: -21.125059127807617
    8. '(x' → logprob: -21.125059127807617
    9. '_x' → logprob: -21.375059127807617
    10. '  ' → logprob: -22.625059127807617

Token 172: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.8827754855155945
    2. ',y' → logprob: -0.8827754855155945
    3. ',' → logprob: -1.7577755451202393
    4. ' ,' → logprob: -8.25777530670166
    5. ' ,-' → logprob: -10.38277530670166
    6. ',
' → logprob: -11.75777530670166
    7. ',_' → logprob: -13.00777530670166
    8. ',Y' → logprob: -13.75777530670166
    9. ',-
' → logprob: -14.63277530670166
    10. ',-

' → logprob: -14.75777530670166

Token 173: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.455048449221067e-05
    2. ' y' → logprob: -9.875054359436035
    3. '<|end|>' → logprob: -12.750054359436035
    4. ')y' → logprob: -16.50005531311035
    5. '<|end|>' → logprob: -17.50005531311035
    6. ',y' → logprob: -17.75005531311035
    7. '	y' → logprob: -17.87505531311035
    8. ''y' → logprob: -18.75005531311035
    9. ' ' → logprob: -19.37505531311035
    10. '-y' → logprob: -19.87505531311035

Token 174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006766175851225853
    2. ' for' → logprob: -5.256766319274902
    3. ' )' → logprob: -6.631766319274902
    4. 'for' → logprob: -8.506766319274902
    5. '   ' → logprob: -12.006766319274902
    6. ')]' → logprob: -12.881766319274902
    7. ']' → logprob: -14.006766319274902
    8. ' ' → logprob: -14.756766319274902
    9. '    ' → logprob: -15.256766319274902
    10. '[' → logprob: -15.631766319274902

Token 175: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02975129522383213
    2. 'for' → logprob: -3.5297513008117676
    3. ')' → logprob: -14.52975082397461
    4. '	for' → logprob: -15.27975082397461
    5. '[' → logprob: -17.15475082397461
    6. ' ' → logprob: -17.65475082397461
    7. ']' → logprob: -18.15475082397461
    8. ' in' → logprob: -18.77975082397461
    9. '   ' → logprob: -19.40475082397461
    10. ' ' → logprob: -19.77975082397461

Token 176: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5510569214820862
    2. ' x' → logprob: -0.9260569214820862
    3. 'vec' → logprob: -3.8010568618774414
    4. ' vec' → logprob: -5.301056861877441
    5. '(x' → logprob: -9.426056861877441
    6. ' ' → logprob: -9.676056861877441
    7. ' (' → logprob: -10.051056861877441
    8. '_x' → logprob: -12.176056861877441
    9. '[x' → logprob: -12.426056861877441
    10. 'xy' → logprob: -12.676056861877441

Token 177: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.04329010471701622
    2. ',' → logprob: -3.168290138244629
    3. ' ,' → logprob: -8.168290138244629
    4. ',x' → logprob: -12.043290138244629
    5. ',v' → logprob: -15.293290138244629
    6. ',
' → logprob: -15.543290138244629
    7. ',_' → logprob: -16.168289184570312
    8. ',Y' → logprob: -16.293289184570312
    9. ',(' → logprob: -16.293289184570312
    10. ',value' → logprob: -16.418289184570312

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10063902288675308
    2. 'in' → logprob: -2.3506391048431396
    3. 'vec' → logprob: -8.225639343261719
    4. ' vec' → logprob: -8.725639343261719
    5. '(vec' → logprob: -14.100639343261719
    6. ' ' → logprob: -14.975639343261719
    7. ')' → logprob: -15.225639343261719
    8. '<|end|>' → logprob: -15.350639343261719
    9. ']' → logprob: -15.725639343261719
    10. '_vec' → logprob: -15.975639343261719

Token 179: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.03804493322968483
    2. ' vec' → logprob: -3.2880449295043945
    3. '	vec' → logprob: -13.288044929504395
    4. '(vec' → logprob: -13.913044929504395
    5. 've' → logprob: -14.413044929504395
    6. 'vectors' → logprob: -16.28804588317871
    7. '_vec' → logprob: -16.53804588317871
    8. '.vec' → logprob: -16.78804588317871
    9. 'vector' → logprob: -17.28804588317871
    10. 'ves' → logprob: -17.41304588317871

Token 180: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004947916604578495
    2. 'cs' → logprob: -5.629948139190674
    3. 'vec' → logprob: -6.754948139190674
    4. 'ecs' → logprob: -9.004947662353516
    5. 'ectors' → logprob: -11.129947662353516
    6. '```' → logprob: -11.379947662353516
    7. '(vec' → logprob: -11.504947662353516
    8. '   ' → logprob: -12.379947662353516
    9. 'с' → logprob: -12.504947662353516
    10. 'ctors' → logprob: -13.004947662353516

Token 181: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009864693507552147
    2. '   ' → logprob: -4.759864807128906
    3. ']
' → logprob: -6.759864807128906
    4. ' ]' → logprob: -9.634864807128906
    5. ')]' → logprob: -11.759864807128906
    6. ')' → logprob: -11.884864807128906
    7. '<|end|>' → logprob: -11.884864807128906
    8. ']

' → logprob: -13.884864807128906
    9. ']
' → logprob: -15.384864807128906
    10. ' ]
' → logprob: -15.384864807128906

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004435578361153603
    2. 'if' → logprob: -5.8794355392456055
    3. ' if' → logprob: -6.5044355392456055
    4. '
' → logprob: -9.129435539245605
    5. '    
' → logprob: -11.004435539245605
    6. '	if' → logprob: -12.879435539245605
    7. '  
' → logprob: -13.504435539245605
    8. 'def' → logprob: -13.879435539245605
    9. '<|end|>' → logprob: -14.254435539245605
    10. ' 
' → logprob: -14.629435539245605

Token 183: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3213699460029602
    2. '   ' → logprob: -1.3213698863983154
    3. ' if' → logprob: -4.8213701248168945
    4. ' ' → logprob: -11.821370124816895
    5. '
' → logprob: -12.071370124816895
    6. '  ' → logprob: -12.571370124816895
    7. '    
' → logprob: -13.446370124816895
    8. '	if' → logprob: -14.446370124816895
    9. '  
' → logprob: -14.446370124816895
    10. 'If' → logprob: -15.571370124816895

Token 184: ' deg' (ID: 5597)
  Prédit: ' deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deg' → logprob: -0.03372327238321304
    2. 'deg' → logprob: -3.5337233543395996
    3. '270' → logprob: -5.5337233543396
    4. ' ' → logprob: -11.283722877502441
    5. '_deg' → logprob: -14.533722877502441
    6. '   ' → logprob: -15.033722877502441
    7. 'Deg' → logprob: -15.658722877502441
    8. ' degener' → logprob: -17.033723831176758
    9. '265' → logprob: -17.158723831176758
    10. ' degrees' → logprob: -17.658723831176758

Token 185: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.054954953491687775
    2. '==' → logprob: -2.929955005645752
    3. '=' → logprob: -10.179954528808594
    4. ' =' → logprob: -10.554954528808594
    5. ' ' → logprob: -12.554954528808594
    6. ' ' → logprob: -12.929954528808594
    7. '[' → logprob: -14.179954528808594
    8. ')' → logprob: -15.304954528808594
    9. '	' → logprob: -15.429954528808594
    10. ')==' → logprob: -15.554954528808594

Token 186: ' ' (ID: 220)
  Prédit: '270'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -0.06199771910905838
    2. ' ' → logprob: -2.811997652053833
    3. '27' → logprob: -10.561997413635254
    4. '273' → logprob: -13.311997413635254
    5. '271' → logprob: -13.436997413635254
    6. '90' → logprob: -15.061997413635254
    7. '275' → logprob: -15.561997413635254
    8. '   ' → logprob: -15.561997413635254
    9. '  ' → logprob: -16.49949836730957
    10. '2' → logprob: -16.74949836730957

Token 187: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -3.8889261304575484e-06
    2. '27' → logprob: -12.625003814697266
    3. ' ' → logprob: -14.625003814697266
    4. '275' → logprob: -17.500003814697266
    5. '273' → logprob: -17.500003814697266
    6. '90' → logprob: -17.625003814697266
    7. '271' → logprob: -18.000003814697266
    8. '2' → logprob: -18.500003814697266
    9. '```' → logprob: -19.125003814697266
    10. '   ' → logprob: -20.125003814697266

Token 188: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2044219672679901
    2. ':' → logprob: -1.7044219970703125
    3. '   ' → logprob: -5.9544219970703125
    4. '       ' → logprob: -8.454421997070312
    5. ' :' → logprob: -9.329421997070312
    6. ' :
' → logprob: -9.704421997070312
    7. '):
' → logprob: -10.954421997070312
    8. ':return' → logprob: -11.829421997070312
    9. ':

' → logprob: -12.079421997070312
    10. ':
' → logprob: -12.829421997070312

Token 189: '       ' (ID: 309)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.04400959983468056
    2. ' return' → logprob: -4.044009685516357
    3. 'return' → logprob: -4.544009685516357
    4. '   ' → logprob: -4.794009685516357
    5. ' [(' → logprob: -5.044009685516357
    6. '[y' → logprob: -9.4190092086792
    7. '[' → logprob: -10.4190092086792
    8. '[
' → logprob: -10.5440092086792
    9. ' =' → logprob: -12.0440092086792
    10. ' y' → logprob: -12.2940092086792

Token 190: ' return' (ID: 622)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0007810381939634681
    2. ' [(' → logprob: -7.250781059265137
    3. 'return' (adapté à ' return') → logprob: -10.250781059265137
    4. '   ' → logprob: -10.750781059265137
    5. ' return' → logprob: -11.625781059265137
    6. '[y' → logprob: -13.000781059265137
    7. '[' → logprob: -13.500781059265137
    8. '([(' → logprob: -14.125781059265137
    9. 'y' → logprob: -14.500781059265137
    10. '(y' → logprob: -15.625781059265137

Token 191: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0002326224057469517
    2. ' [(' → logprob: -8.375232696533203
    3. '[y' → logprob: -13.875232696533203
    4. '[' → logprob: -14.000232696533203
    5. '([(' → logprob: -15.750232696533203
    6. '   ' → logprob: -16.250232696533203
    7. 'y' → logprob: -17.750232696533203
    8. ' ' → logprob: -18.375232696533203
    9. '(y' → logprob: -18.500232696533203
    10. '  ' → logprob: -18.875232696533203

Token 192: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.264322317088954e-05
    2. ' y' → logprob: -9.875052452087402
    3. '(y' → logprob: -14.000052452087402
    4. ')y' → logprob: -15.875052452087402
    5. ',y' → logprob: -16.87505340576172
    6. '	y' → logprob: -18.00005340576172
    7. '‘y' → logprob: -18.12505340576172
    8. ''y' → logprob: -18.25005340576172
    9. '   ' → logprob: -19.12505340576172
    10. '_y' → logprob: -19.50005340576172

Token 193: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.14487962424755096
    2. ',' → logprob: -2.1448795795440674
    3. ',x' → logprob: -4.2698798179626465
    4. '-x' → logprob: -5.6448798179626465
    5. ' ,' → logprob: -9.519879341125488
    6. ' ,-' → logprob: -9.519879341125488
    7. 'x' → logprob: -10.769879341125488
    8. '-' → logprob: -10.769879341125488
    9. ',
' → logprob: -10.769879341125488
    10. '   ' → logprob: -11.019879341125488

Token 194: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1472419600977446e-06
    2. ' x' → logprob: -13.750000953674316
    3. ')x' → logprob: -20.000001907348633
    4. '	x' → logprob: -21.125001907348633
    5. '_x' → logprob: -23.875001907348633
    6. ''x' → logprob: -23.875001907348633
    7. '<|end|>' → logprob: -24.000001907348633
    8. '"x' → logprob: -24.125001907348633
    9. ' ' → logprob: -24.125001907348633
    10. 'vec' → logprob: -24.750001907348633

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033760786755010486
    2. ' )' → logprob: -8.000337600708008
    3. ')]' → logprob: -13.750337600708008
    4. 'for' → logprob: -14.000337600708008
    5. ')
' → logprob: -15.375337600708008
    6. '   ' → logprob: -17.250337600708008
    7. ' for' → logprob: -17.375337600708008
    8. 'x' → logprob: -18.000337600708008
    9. ']' → logprob: -18.250337600708008
    10. '）' → logprob: -18.875337600708008

Token 196: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2520545423030853
    2. 'for' → logprob: -1.5020545721054077
    3. ')' → logprob: -9.002054214477539
    4. ' ' → logprob: -13.377054214477539
    5. '	for' → logprob: -14.502054214477539
    6. ' )' → logprob: -16.75205421447754
    7. '   ' → logprob: -16.75205421447754
    8. ']' → logprob: -17.25205421447754
    9. '
' → logprob: -18.00205421447754
    10. ')]' → logprob: -18.50205421447754

Token 197: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048587486147880554
    2. ' x' → logprob: -3.0485875606536865
    3. '(x' → logprob: -16.673587799072266
    4. 'vec' → logprob: -17.423587799072266
    5. ' ' → logprob: -18.548587799072266
    6. '	x' → logprob: -18.798587799072266
    7. '_x' → logprob: -19.173587799072266
    8. ')x' → logprob: -20.548587799072266
    9. '<|end|>' → logprob: -20.673587799072266
    10. ' vec' → logprob: -20.798587799072266

Token 198: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0015096203424036503
    2. ',' → logprob: -6.501509666442871
    3. ' ,' → logprob: -11.876509666442871
    4. ',x' → logprob: -15.251509666442871
    5. ',
' → logprob: -17.001508712768555
    6. ',v' → logprob: -18.001508712768555
    7. ',Y' → logprob: -18.501508712768555
    8. ',user' → logprob: -18.751508712768555
    9. ',_' → logprob: -19.001508712768555
    10. 'y' → logprob: -19.001508712768555

Token 199: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06196970492601395
    2. 'in' → logprob: -2.811969757080078
    3. 'vec' → logprob: -13.436969757080078
    4. ']' → logprob: -15.436969757080078
    5. ' ' → logprob: -16.436969757080078
    6. ')' → logprob: -16.811969757080078
    7. 'import' → logprob: -16.811969757080078
    8. ' vec' → logprob: -16.936969757080078
    9. 's' → logprob: -17.186969757080078
    10. '	in' → logprob: -17.561969757080078

Token 200: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.005234475247561932
    2. ' vec' → logprob: -5.255234241485596
    3. '(vec' → logprob: -14.755234718322754
    4. '	vec' → logprob: -15.255234718322754
    5. 've' → logprob: -17.380233764648438
    6. '.vec' → logprob: -18.380233764648438
    7. 'vectors' → logprob: -18.380233764648438
    8. 'vector' → logprob: -18.505233764648438
    9. 'ves' → logprob: -18.880233764648438
    10. ' ' → logprob: -19.380233764648438

Token 201: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001227276516146958
    2. 'ecs' → logprob: -9.500123023986816
    3. 'cs' → logprob: -10.125123023986816
    4. 'ectors' → logprob: -12.875123023986816
    5. 'vec' → logprob: -13.125123023986816
    6. 'c' → logprob: -14.500123023986816
    7. 'ects' → logprob: -14.500123023986816
    8. 'ctors' → logprob: -14.875123023986816
    9. 'с' → logprob: -14.875123023986816
    10. '```' → logprob: -14.875123023986816

Token 202: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011130821891129017
    2. ')]' → logprob: -4.5111308097839355
    3. ']
' → logprob: -9.761131286621094
    4. ' ]' → logprob: -11.011131286621094
    5. '])' → logprob: -12.761131286621094
    6. '   ' → logprob: -12.886131286621094
    7. ')' → logprob: -13.386131286621094
    8. '()]' → logprob: -14.386131286621094
    9. ']

' → logprob: -14.511131286621094
    10. '])]' → logprob: -15.261131286621094

Token 203: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013530949363484979
    2. '<|end|>' → logprob: -6.6263532638549805
    3. '
' → logprob: -11.37635326385498
    4. '  
' → logprob: -12.75135326385498
    5. ')' → logprob: -12.87635326385498
    6. 'return' → logprob: -13.25135326385498
    7. '<|end|>' → logprob: -13.37635326385498
    8. ' def' → logprob: -13.37635326385498
    9. '```' → logprob: -13.87635326385498
    10. 'import' → logprob: -14.12635326385498

Token 204: ' is' (ID: 382)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.34125784039497375
    2. ' normalize' → logprob: -2.5912578105926514
    3. 'canonical' → logprob: -3.3412578105926514
    4. 'main' → logprob: -3.5912578105926514
    5. 'reflect' → logprob: -3.7162578105926514
    6. 're' → logprob: -4.0912580490112305
    7. 'transform' → logprob: -4.2162580490112305
    8. 'translate' → logprob: -4.3412580490112305
    9. 'points' → logprob: -4.3412580490112305
    10. 'to' → logprob: -4.5912580490112305

Token 205: '_all' (ID: 13305)
  Prédit: '_equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.7651955485343933
    2. '_sub' → logprob: -1.640195608139038
    3. '_same' → logprob: -2.140195608139038
    4. '_is' → logprob: -2.515195608139038
    5. '_equ' → logprob: -3.265195608139038
    6. '_unique' → logprob: -3.890195608139038
    7. 'omorphic' → logprob: -4.515195369720459
    8. '_subset' → logprob: -4.515195369720459
    9. '_in' → logprob: -4.640195369720459
    10. '_cont' → logprob: -5.015195369720459

Token 206: '_axis' (ID: 50852)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.12852627038955688
    2. '_connected' → logprob: -3.253526210784912
    3. '_equal' → logprob: -4.128526210784912
    4. '_points' → logprob: -4.378526210784912
    5. '_' → logprob: -4.503526210784912
    6. '_in' → logprob: -5.128526210784912
    7. '_on' → logprob: -5.128526210784912
    8. 'caps' → logprob: -5.753526210784912
    9. '_one' → logprob: -5.878526210784912
    10. 'one' → logprob: -6.003526210784912

Token 207: '_al' (ID: 18493)
  Prédit: '_al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.0015572358388453722
    2. '(points' → logprob: -7.001557350158691
    3. 'aligned' → logprob: -7.501557350158691
    4. '(vec' → logprob: -10.626557350158691
    5. '-al' → logprob: -10.876557350158691
    6. '_align' → logprob: -11.251557350158691
    7. '(al' → logprob: -11.376557350158691
    8. 'Aligned' → logprob: -11.376557350158691
    9. 'al' → logprob: -12.501557350158691
    10. '(par' → logprob: -13.751557350158691

Token 208: 'igned' (ID: 3626)
  Prédit: 'igned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igned' → logprob: -0.027660483494400978
    2. 'ign' → logprob: -3.652660369873047
    3. 'l' → logprob: -6.777660369873047
    4. 'ined' → logprob: -10.027660369873047
    5. 'low' → logprob: -10.527660369873047
    6. 'gn' → logprob: -10.527660369873047
    7. 'ig' → logprob: -11.152660369873047
    8. 'ing' → logprob: -11.402660369873047
    9. 'IGNED' → logprob: -11.402660369873047
    10. '#' → logprob: -11.402660369873047

Token 209: '(vec' (ID: 57650)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.3348871171474457
    2. '(vec' → logprob: -1.834887146949768
    3. '(rect' → logprob: -2.7098870277404785
    4. '(shape' → logprob: -3.9598870277404785
    5. '(' → logprob: -4.7098870277404785
    6. '(poly' → logprob: -4.7098870277404785
    7. '(pol' → logprob: -5.0848870277404785
    8. '(v' → logprob: -5.0848870277404785
    9. '(lines' → logprob: -6.0848870277404785
    10. '(s' → logprob: -6.4598870277404785

Token 210: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004078878089785576
    2. '_diff' → logprob: -6.7540788650512695
    3. 'igned' → logprob: -7.1290788650512695
    4. ')s' → logprob: -7.5040788650512695
    5. '(s' → logprob: -7.7540788650512695
    6. ')' → logprob: -8.12907886505127
    7. '_vec' → logprob: -8.62907886505127
    8. 'vec' → logprob: -8.87907886505127
    9. 'aligned' → logprob: -8.87907886505127
    10. '(vec' → logprob: -9.75407886505127

Token 211: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000947545631788671
    2. '):
' → logprob: -7.12594747543335
    3. ',' → logprob: -9.250947952270508
    4. ')' → logprob: -10.375947952270508
    5. ' ):' → logprob: -11.500947952270508
    6. 's' → logprob: -13.500947952270508
    7. '):
' → logprob: -13.875947952270508
    8. ':' → logprob: -14.125947952270508
    9. 'vec' → logprob: -14.375947952270508
    10. '=' → logprob: -15.000947952270508

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011486716102808714
    2. ' for' → logprob: -7.001148700714111
    3. '(' → logprob: -9.501148223876953
    4. 'for' → logprob: -9.876148223876953
    5. ':' → logprob: -10.001148223876953
    6. '    
' → logprob: -10.626148223876953
    7. '	for' → logprob: -11.251148223876953
    8. 'def' → logprob: -11.751148223876953
    9. ':
' → logprob: -12.626148223876953
    10. '[' → logprob: -13.251148223876953

Token 213: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2107565999031067
    2. ' for' → logprob: -1.710756540298462
    3. 'for' → logprob: -4.710756778717041
    4. ' return' → logprob: -8.210756301879883
    5. 'return' (adapté à ' return') → logprob: -10.460756301879883
    6. '	for' → logprob: -14.210756301879883
    7. 'def' → logprob: -14.960756301879883
    8. '   ' → logprob: -15.585756301879883
    9. '    
' → logprob: -16.210756301879883
    10. '
' → logprob: -16.460756301879883

Token 214: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4740847051143646
    2. ' all' → logprob: -0.974084734916687
    3. '	all' → logprob: -12.724084854125977
    4. 'll' → logprob: -13.974084854125977
    5. '   ' → logprob: -14.224084854125977
    6. '(all' → logprob: -14.349084854125977
    7. 'a' → logprob: -14.474084854125977
    8. ' ' → logprob: -14.849084854125977
    9. 'al' → logprob: -15.099084854125977
    10. ' ll' → logprob: -15.474084854125977

Token 215: '((' (ID: 2054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.8357352018356323
    2. '(abs' → logprob: -0.8357352018356323
    3. '((' → logprob: -2.085735321044922
    4. '(' → logprob: -5.585735321044922
    5. '(((' → logprob: -5.585735321044922
    6. 'abs' → logprob: -7.335735321044922
    7. '(
' → logprob: -8.460735321044922
    8. '([(' → logprob: -9.085735321044922
    9. '(v' → logprob: -9.460735321044922
    10. '([' → logprob: -9.960735321044922

Token 216: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01259253267198801
    2. '(x' → logprob: -4.387592315673828
    3. 'v' → logprob: -10.637592315673828
    4. '(v' → logprob: -10.887592315673828
    5. ' x' → logprob: -11.637592315673828
    6. 'abs' → logprob: -12.012592315673828
    7. '   ' → logprob: -12.012592315673828
    8. '(abs' → logprob: -12.387592315673828
    9. ' (' → logprob: -12.762592315673828
    10. 'dx' → logprob: -12.762592315673828

Token 217: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05497775226831436
    2. ' ==' → logprob: -2.9299776554107666
    3. ',' → logprob: -9.429977416992188
    4. '   ' → logprob: -12.179977416992188
    5. '=' → logprob: -12.304977416992188
    6. ')==' → logprob: -13.679977416992188
    7. ' ' → logprob: -13.679977416992188
    8. '==
' → logprob: -14.054977416992188
    9. '```' → logprob: -14.554977416992188
    10. '()==' → logprob: -15.179977416992188

Token 218: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -17.062931060791016
    4. ')' → logprob: -17.875431060791016
    5. '1' → logprob: -18.000431060791016
    6. '```' → logprob: -18.312931060791016
    7. ' ' → logprob: -18.562931060791016
    8. '  ' → logprob: -18.750431060791016
    9. 'zero' → logprob: -18.937931060791016
    10. '۰' → logprob: -19.000431060791016

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.43770408630371
    4. '1' → logprob: -17.56270408630371
    5. ')' → logprob: -17.68770408630371
    6. '```' → logprob: -18.06270408630371
    7. ' or' → logprob: -18.25020408630371
    8. 'x' → logprob: -18.43770408630371
    9. 'zero' → logprob: -18.56270408630371
    10. '۰' → logprob: -18.75020408630371

Token 220: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07902076840400696
    2. 'or' → logprob: -2.5790207386016846
    3. ')' → logprob: -8.954020500183105
    4. '   ' → logprob: -14.204020500183105
    5. '	or' → logprob: -14.704020500183105
    6. ' and' → logprob: -15.079020500183105
    7. ' ' → logprob: -15.704020500183105
    8. 'and' → logprob: -15.704020500183105
    9. ''or' → logprob: -17.954021453857422
    10. '  ' → logprob: -18.454021453857422

Token 221: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011050417087972164
    2. ' y' → logprob: -4.511050224304199
    3. '   ' → logprob: -13.1360502243042
    4. '	y' → logprob: -14.8860502243042
    5. '(y' → logprob: -16.386051177978516
    6. '    ' → logprob: -16.761051177978516
    7. ')y' → logprob: -16.761051177978516
    8. '  ' → logprob: -17.261051177978516
    9. ''y' → logprob: -17.636051177978516
    10. ')' → logprob: -17.886051177978516

Token 222: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06197866424918175
    2. '==' → logprob: -2.811978578567505
    3. ')' → logprob: -11.811978340148926
    4. ')==' → logprob: -12.811978340148926
    5. ' ' → logprob: -14.686978340148926
    6. '   ' → logprob: -15.686978340148926
    7. '=' → logprob: -16.311979293823242
    8. '()==' → logprob: -16.561979293823242
    9. ']==' → logprob: -16.686979293823242
    10. '```' → logprob: -17.186979293823242

Token 223: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.375204086303711
    4. '```' → logprob: -17.37520408630371
    5. '
' → logprob: -17.75020408630371
    6. '<|end|>' → logprob: -18.62520408630371
    7. '۰' → logprob: -19.25020408630371
    8. '=' → logprob: -19.37520408630371
    9. ')' → logprob: -20.00020408630371
    10. '``' → logprob: -20.37520408630371

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. ')' → logprob: -16.875085830688477
    4. '   ' → logprob: -17.000085830688477
    5. '```' → logprob: -17.625085830688477
    6. '
' → logprob: -17.937585830688477
    7. '۰' → logprob: -18.125085830688477
    8. '1' → logprob: -18.250085830688477
    9. 'x' → logprob: -18.312585830688477
    10. ' ' → logprob: -18.625085830688477

Token 225: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005600620643235743
    2. ' for' → logprob: -8.00055980682373
    3. 'for' → logprob: -8.87555980682373
    4. ' )' → logprob: -9.62555980682373
    5. '   ' → logprob: -11.37555980682373
    6. ')
' → logprob: -12.62555980682373
    7. '))' → logprob: -13.50055980682373
    8. '       ' → logprob: -14.00055980682373
    9. '           ' → logprob: -15.37555980682373
    10. '    ' → logprob: -15.37555980682373

Token 226: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006334125529974699
    2. 'for' → logprob: -5.38133430480957
    3. '   ' → logprob: -6.63133430480957
    4. ' and' → logprob: -8.88133430480957
    5. '       ' → logprob: -9.63133430480957
    6. '    ' → logprob: -9.75633430480957
    7. '           ' → logprob: -10.38133430480957
    8. ' or' → logprob: -10.63133430480957
    9. '          ' → logprob: -11.25633430480957
    10. '        ' → logprob: -11.38133430480957

Token 227: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4090558886528015
    2. ' (' → logprob: -1.1590559482574463
    3. ' not' → logprob: -4.409055709838867
    4. 'not' → logprob: -5.784055709838867
    5. '(abs' → logprob: -5.784055709838867
    6. '(not' → logprob: -5.909055709838867
    7. 'x' → logprob: -8.534055709838867
    8. ' abs' → logprob: -8.659055709838867
    9. 'abs' → logprob: -9.034055709838867
    10. '(' → logprob: -9.159055709838867

Token 228: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5315455198287964
    2. '(x' → logprob: -0.9065455198287964
    3. 'not' → logprob: -5.781545639038086
    4. 'abs' → logprob: -6.281545639038086
    5. '(abs' → logprob: -6.281545639038086
    6. ' (' → logprob: -6.906545639038086
    7. '(not' → logprob: -8.281545639038086
    8. ' x' → logprob: -8.781545639038086
    9. ' not' → logprob: -9.156545639038086
    10. '(' → logprob: -11.656545639038086

Token 229: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11288822442293167
    2. ' !=' → logprob: -2.3628883361816406
    3. ',' → logprob: -4.612888336181641
    4. '==' → logprob: -5.987888336181641
    5. ' ,' → logprob: -9.48788833618164
    6. ' ==' → logprob: -9.86288833618164
    7. '```' → logprob: -11.61288833618164
    8. ',x' → logprob: -12.23788833618164
    9. ')!=' → logprob: -12.23788833618164
    10. ' ' → logprob: -12.23788833618164

Token 230: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234475247561932
    2. ' ' → logprob: -5.255234241485596
    3. '   ' → logprob: -14.755234718322754
    4. '  ' → logprob: -16.005233764648438
    5. 'x' → logprob: -17.130233764648438
    6. '    ' → logprob: -17.380233764648438
    7. '
' → logprob: -17.755233764648438
    8. '=' → logprob: -18.755233764648438
    9. '00' → logprob: -18.817733764648438
    10. '```' → logprob: -18.880233764648438

Token 231: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005532711511477828
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -15.625553131103516
    4. '  ' → logprob: -17.875553131103516
    5. ')' → logprob: -18.625553131103516
    6. '
' → logprob: -18.938053131103516
    7. '```' → logprob: -19.000553131103516
    8. 'x' → logprob: -19.250553131103516
    9. ' ' → logprob: -19.250553131103516
    10. '(' → logprob: -19.250553131103516

Token 232: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00861528143286705
    2. 'or' → logprob: -5.383615493774414
    3. ' and' → logprob: -5.758615493774414
    4. ' for' → logprob: -7.508615493774414
    5. 'and' → logprob: -9.383615493774414
    6. '   ' → logprob: -9.508615493774414
    7. 'for' → logprob: -10.133615493774414
    8. ' ' → logprob: -10.258615493774414
    9. ')' → logprob: -10.508615493774414
    10. '    ' → logprob: -11.758615493774414

Token 233: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3868723213672638
    2. ' y' → logprob: -1.1368722915649414
    3. '(y' → logprob: -14.511872291564941
    4. ')y' → logprob: -15.261872291564941
    5. 'x' → logprob: -15.386872291564941
    6. ' ' → logprob: -16.136873245239258
    7. '	y' → logprob: -16.261873245239258
    8. ''y' → logprob: -17.136873245239258
    9. '   ' → logprob: -17.386873245239258
    10. '```' → logprob: -17.761873245239258

Token 234: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.06197004392743111
    2. '!=' → logprob: -2.8119699954986572
    3. ')!=' → logprob: -14.061969757080078
    4. '```' → logprob: -14.811969757080078
    5. ')' → logprob: -15.061969757080078
    6. '()!=' → logprob: -15.311969757080078
    7. '!=(' → logprob: -15.436969757080078
    8. '!=-' → logprob: -15.936969757080078
    9. ' ' → logprob: -16.436969757080078
    10. '!='' → logprob: -16.561969757080078

Token 235: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043126524542458355
    2. ' ' → logprob: -7.750431060791016
    3. '1' → logprob: -15.625431060791016
    4. ')' → logprob: -16.000431060791016
    5. '   ' → logprob: -16.000431060791016
    6. '```' → logprob: -17.625431060791016
    7. '=' → logprob: -18.062931060791016
    8. ' ' → logprob: -18.125431060791016
    9. '  ' → logprob: -18.187931060791016
    10. '۰' → logprob: -18.562931060791016

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.702754474943504e-05
    2. ' ' → logprob: -10.25003719329834
    3. '1' → logprob: -13.37503719329834
    4. '   ' → logprob: -17.875036239624023
    5. '
' → logprob: -17.875036239624023
    6. '```' → logprob: -18.000036239624023
    7. ')' → logprob: -18.875036239624023
    8. '

' → logprob: -18.937536239624023
    9. ' ' → logprob: -19.812536239624023
    10. '۰' → logprob: -19.937536239624023

Token 237: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03217777982354164
    2. ')' → logprob: -4.407177925109863
    3. 'for' → logprob: -4.657177925109863
    4. '   ' → logprob: -4.657177925109863
    5. '       ' → logprob: -8.532177925109863
    6. '    ' → logprob: -9.282177925109863
    7. '           ' → logprob: -9.532177925109863
    8. '	for' → logprob: -10.407177925109863
    9. '(x' → logprob: -10.657177925109863
    10. ' ' → logprob: -11.032177925109863

Token 238: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05970758572220802
    2. '   ' → logprob: -3.0597076416015625
    3. 'for' → logprob: -4.6847076416015625
    4. '       ' → logprob: -7.4347076416015625
    5. '    ' → logprob: -7.6847076416015625
    6. '           ' → logprob: -7.9347076416015625
    7. '          ' → logprob: -9.309707641601562
    8. '              ' → logprob: -9.559707641601562
    9. '(x' → logprob: -10.184707641601562
    10. '	for' → logprob: -10.309707641601562

Token 239: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006732068490236998
    2. ' x' → logprob: -5.006731986999512
    3. '(x' → logprob: -11.006731986999512
    4. ' (' → logprob: -16.131732940673828
    5. '	x' → logprob: -18.506732940673828
    6. ' ' → logprob: -19.006732940673828
    7. '   ' → logprob: -19.506732940673828
    8. '"x' → logprob: -20.881732940673828
    9. '_x' → logprob: -21.006732940673828
    10. ',x' → logprob: -21.631732940673828

Token 240: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.17975646257400513
    2. ',' → logprob: -1.8047564029693604
    3. ' ,' → logprob: -11.929756164550781
    4. ',x' → logprob: -13.304756164550781
    5. ',_' → logprob: -13.929756164550781
    6. ',v' → logprob: -14.054756164550781
    7. ',
' → logprob: -14.554756164550781
    8. ',(' → logprob: -15.304756164550781
    9. ',user' → logprob: -15.554756164550781
    10. 'y' → logprob: -15.804756164550781

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008617527782917023
    2. 'in' → logprob: -4.758617401123047
    3. ')' → logprob: -13.133617401123047
    4. 'vec' → logprob: -15.133617401123047
    5. '<|end|>' → logprob: -15.258617401123047
    6. ' ' → logprob: -15.633617401123047
    7. ' )' → logprob: -16.008617401123047
    8. ',' → logprob: -16.133617401123047
    9. '	in' → logprob: -17.258617401123047
    10. '
' → logprob: -17.883617401123047

Token 242: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.0067167943343520164
    2. ' vec' → logprob: -5.006716728210449
    3. '	vec' → logprob: -14.25671672821045
    4. '(vec' → logprob: -14.38171672821045
    5. '.vec' → logprob: -16.881717681884766
    6. ')' → logprob: -17.131717681884766
    7. '```' → logprob: -17.256717681884766
    8. '
' → logprob: -17.381717681884766
    9. 'vector' → logprob: -17.631717681884766
    10. 've' → logprob: -18.006717681884766

Token 243: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0280383548888494e-06
    2. 'ectors' → logprob: -14.250000953674316
    3. 'vec' → logprob: -16.000001907348633
    4. 'ecs' → logprob: -16.125001907348633
    5. 'ector' → logprob: -17.500001907348633
    6. 'es' → logprob: -17.875001907348633
    7. '[' → logprob: -17.875001907348633
    8. '(s' → logprob: -18.125001907348633
    9. '```' → logprob: -18.125001907348633
    10. '(vec' → logprob: -18.250001907348633

Token 244: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.875000953674316
    3. '))' → logprob: -15.375000953674316
    4. ')}' → logprob: -17.125
    5. '   ' → logprob: -17.5
    6. '])' → logprob: -17.75
    7. '())' → logprob: -17.75
    8. '),' → logprob: -18.375
    9. ').' → logprob: -18.875
    10. ');' → logprob: -18.875

Token 245: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04395221546292305
    2. '<|end|>' → logprob: -3.168952226638794
    3. '
' → logprob: -7.418951988220215
    4. '<|end|>' → logprob: -8.793951988220215
    5. '

' → logprob: -10.168951988220215
    6. 'newline' → logprob: -10.418951988220215
    7. ')' → logprob: -10.418951988220215
    8. '\' → logprob: -11.043951988220215
    9. ' def' → logprob: -11.168951988220215
    10. '\n' → logprob: -11.168951988220215

Token 246: ' encode' (ID: 31288)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7122611403465271
    2. ' is' → logprob: -1.7122611999511719
    3. ' check' → logprob: -3.087261199951172
    4. 'main' → logprob: -3.212261199951172
    5. 'are' → logprob: -3.337261199951172
    6. 'is' → logprob: -3.462261199951172
    7. ' can' → logprob: -3.587261199951172
    8. ' are' → logprob: -3.712261199951172
    9. ' same' → logprob: -4.587261199951172
    10. ' unique' → logprob: -4.837261199951172

Token 247: '_shape' (ID: 30261)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.24384690821170807
    2. '(vec' → logprob: -1.7438468933105469
    3. '(' → logprob: -3.243846893310547
    4. '_points' → logprob: -7.868846893310547
    5. '(vector' → logprob: -8.118846893310547
    6. '(rect' → logprob: -8.243846893310547
    7. '(shape' → logprob: -8.368846893310547
    8. '_vec' → logprob: -8.493846893310547
    9. '(point' → logprob: -8.618846893310547
    10. '(lines' → logprob: -8.743846893310547

Token 248: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.008557954803109169
    2. '(vec' → logprob: -5.2585577964782715
    3. '(shape' → logprob: -5.7585577964782715
    4. '(' → logprob: -8.88355827331543
    5. '(point' → logprob: -12.00855827331543
    6. '(sh' → logprob: -12.13355827331543
    7. ' (' → logprob: -12.88355827331543
    8. '(s' → logprob: -13.38355827331543
    9. '(coords' → logprob: -13.50855827331543
    10. '(lines' → logprob: -13.63355827331543

Token 249: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011140844784677029
    2. '):
' → logprob: -4.511140823364258
    3. ',' → logprob: -9.636140823364258
    4. '   ' → logprob: -12.011140823364258
    5. ' ):' → logprob: -12.011140823364258
    6. '):
' → logprob: -12.386140823364258
    7. ':' → logprob: -12.511140823364258
    8. '(points' → logprob: -12.511140823364258
    9. '):

' → logprob: -13.761140823364258
    10. '_points' → logprob: -14.011140823364258

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007521443068981171
    2. ' points' → logprob: -5.132521629333496
    3. ' vec' → logprob: -6.882521629333496
    4. 'vec' → logprob: -8.382521629333496
    5. ' normalized' → logprob: -8.507521629333496
    6. ' shape' → logprob: -10.382521629333496
    7. 'points' → logprob: -10.507521629333496
    8. '(points' → logprob: -11.382521629333496
    9. ' shapes' → logprob: -11.507521629333496
    10. ' pts' → logprob: -11.757521629333496

Token 251: ' #' (ID: 1069)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.4537823796272278
    2. 'norm' → logprob: -1.703782320022583
    3. ' points' → logprob: -2.828782320022583
    4. 'vec' → logprob: -2.828782320022583
    5. 'normalized' → logprob: -3.578782320022583
    6. '   ' → logprob: -4.453782558441162
    7. 'n' → logprob: -4.578782558441162
    8. ' norm' → logprob: -5.078782558441162
    9. ' normalized' → logprob: -5.203782558441162
    10. ' vec' → logprob: -6.328782558441162

Token 252: ' points' (ID: 5571)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.26880955696105957
    2. 'points' → logprob: -2.2688095569610596
    3. 'norm' → logprob: -2.8938095569610596
    4. ' vec' → logprob: -3.5188095569610596
    5. 'normalized' → logprob: -4.1438093185424805
    6. ' points' → logprob: -4.2688093185424805
    7. ' normalized' → logprob: -5.5188093185424805
    8. 'diff' → logprob: -5.5188093185424805
    9. '   ' → logprob: -6.1438093185424805
    10. ' norm' → logprob: -6.2688093185424805

Token 253: ' assumed' (ID: 37703)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5314478874206543
    2. ' =' → logprob: -0.9064478874206543
    3. '   ' → logprob: -4.906447887420654
    4. ':' → logprob: -8.656448364257812
    5. '_sorted' → logprob: -8.906448364257812
    6. '_vec' → logprob: -9.406448364257812
    7. 'normalized' → logprob: -9.656448364257812
    8. '_normal' → logprob: -9.656448364257812
    9. ')' → logprob: -9.781448364257812
    10. '_norm' → logprob: -9.906448364257812

Token 254: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.09056097269058228
    2. 'to' → logprob: -2.7155609130859375
    3. '=' → logprob: -4.0905609130859375
    4. 'normalized' → logprob: -6.7155609130859375
    5. ' normalized' → logprob: -6.9655609130859375
    6. ')' → logprob: -8.215560913085938
    7. '   ' → logprob: -8.340560913085938
    8. '<|end|>' → logprob: -8.715560913085938
    9. ' =' → logprob: -9.215560913085938
    10. '_normal' → logprob: -9.215560913085938

Token 255: ' have' (ID: 679)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.04862665385007858
    2. ' be' → logprob: -3.048626661300659
    3. '	be' → logprob: -11.298626899719238
    4. '[' → logprob: -11.798626899719238
    5. '   ' → logprob: -12.048626899719238
    6. '_be' → logprob: -12.298626899719238
    7. 'have' → logprob: -12.548626899719238
    8. ' ' → logprob: -14.048626899719238
    9. 'already' → logprob: -14.173626899719238
    10. 'normalize' → logprob: -14.298626899719238

Token 256: ' ' (ID: 220)
  Prédit: 'been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'been' → logprob: -0.09567725658416748
    2. 'at' → logprob: -2.595677375793457
    3. 'len' → logprob: -5.095677375793457
    4. 'already' → logprob: -5.220677375793457
    5. ' been' → logprob: -5.845677375793457
    6. 'length' → logprob: -6.470677375793457
    7. ' at' → logprob: -7.970677375793457
    8. 'be' → logprob: -8.970677375793457
    9. 'normalized' → logprob: -9.720677375793457
    10. 'normalize' → logprob: -10.470677375793457

Token 257: '90' (ID: 2744)
  Prédit: 'been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'been' → logprob: -0.008035039529204369
    2. 'at' → logprob: -5.633035182952881
    3. 'already' → logprob: -5.883035182952881
    4. ' been' → logprob: -7.258035182952881
    5. 'len' → logprob: -8.133034706115723
    6. 'length' → logprob: -8.258034706115723
    7. 'points' → logprob: -8.758034706115723
    8. 'normalized' → logprob: -9.508034706115723
    9. 'be' → logprob: -10.383034706115723
    10. 'normal' → logprob: -10.508034706115723

Token 258: ' deg' (ID: 5597)
  Prédit: '_degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.4223155975341797
    2. '-degree' → logprob: -1.2973155975341797
    3. 'degree' → logprob: -3.0473155975341797
    4. '_deg' → logprob: -5.17231559753418
    5. '_' → logprob: -5.79731559753418
    6. '   ' → logprob: -5.79731559753418
    7. '-' → logprob: -5.92231559753418
    8. '<|end|>' → logprob: -5.92231559753418
    9. ')' → logprob: -6.17231559753418
    10. 'deg' → logprob: -7.17231559753418

Token 259: ' turns' (ID: 18304)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2596843242645264
    2. ' rotations' → logprob: -1.2596843242645264
    3. ' rotated' → logprob: -3.0096843242645264
    4. 'def' → logprob: -3.0096843242645264
    5. ' increments' → logprob: -3.1346843242645264
    6. 'increments' → logprob: -3.2596843242645264
    7. ')' → logprob: -3.2596843242645264
    8. ' rotation' → logprob: -3.3846843242645264
    9. ' spacing' → logprob: -4.0096845626831055
    10. 'steps' → logprob: -4.0096845626831055

Token 260: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011259902268648148
    2. 'vec' → logprob: -4.761260032653809
    3. ' points' → logprob: -7.261260032653809
    4. ':' → logprob: -7.636260032653809
    5. 'def' → logprob: -7.886260032653809
    6. 'points' → logprob: -8.261260032653809
    7. ' vec' → logprob: -8.636260032653809
    8. '(points' → logprob: -8.886260032653809
    9. ':
' → logprob: -9.011260032653809
    10. '(vec' → logprob: -9.261260032653809

Token 261: ' axis' (ID: 16300)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.3207787573337555
    2. ' be' → logprob: -1.695778727531433
    3. 'len' → logprob: -3.0707788467407227
    4. 'vec' → logprob: -4.070778846740723
    5. 'not' → logprob: -5.570778846740723
    6. 'return' → logprob: -5.695778846740723
    7. 'are' → logprob: -5.945778846740723
    8. 'points' → logprob: -6.070778846740723
    9. ' not' → logprob: -6.320778846740723
    10. 'to' → logprob: -6.570778846740723

Token 262: ' aligned' (ID: 48224)
  Prédit: '_al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -0.795539379119873
    2. 'aligned' → logprob: -0.795539379119873
    3. '-al' → logprob: -2.545539379119873
    4. '   ' → logprob: -4.420539379119873
    5. ' aligned' → logprob: -5.045539379119873
    6. '_' → logprob: -8.545539855957031
    7. '=' → logprob: -8.920539855957031
    8. ' =' → logprob: -10.170539855957031
    9. 'al' → logprob: -10.670539855957031
    10. 'Aligned' → logprob: -11.170539855957031

Token 263: ' segments' (ID: 33749)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030807355418801308
    2. 'vec' → logprob: -3.5308072566986084
    3. 'def' → logprob: -8.405807495117188
    4. 'points' → logprob: -8.780807495117188
    5. ' vec' → logprob: -8.780807495117188
    6. 'diff' → logprob: -9.030807495117188
    7. ' points' → logprob: -9.280807495117188
    8. 'vectors' → logprob: -9.655807495117188
    9. ',' → logprob: -9.780807495117188
    10. ' vectors' → logprob: -10.155807495117188

Token 264: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012501158053055406
    2. 'vec' → logprob: -7.251250267028809
    3. '    
' → logprob: -8.251250267028809
    4. '
' → logprob: -9.251250267028809
    5. 'def' → logprob: -9.376250267028809
    6. 'points' → logprob: -11.001250267028809
    7. ':' → logprob: -11.001250267028809
    8. ',' → logprob: -11.251250267028809
    9. ' points' → logprob: -11.501250267028809
    10. 'tokens' → logprob: -11.626250267028809

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010437761375214905
    2. '    
' → logprob: -10.125103950500488
    3. ':' → logprob: -10.750103950500488
    4. '
' → logprob: -11.500103950500488
    5. 'def' → logprob: -11.625103950500488
    6. ')' → logprob: -12.375103950500488
    7. 'vec' → logprob: -12.500103950500488
    8. ',' → logprob: -12.625103950500488
    9. '(points' → logprob: -13.250103950500488
    10. ' points' → logprob: -13.250103950500488

Token 266: ' #' (ID: 1069)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.012978441081941128
    2. '   ' → logprob: -4.887978553771973
    3. 'points' → logprob: -5.887978553771973
    4. ' vec' → logprob: -6.262978553771973
    5. 'diff' → logprob: -8.387978553771973
    6. 'normalized' → logprob: -9.637978553771973
    7. 'norm' → logprob: -9.762978553771973
    8. 'if' → logprob: -10.012978553771973
    9. 'pts' → logprob: -10.137978553771973
    10. 'v' → logprob: -10.262978553771973

Token 267: ' encode' (ID: 31288)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.02721221186220646
    2. 'points' → logprob: -4.027212142944336
    3. 'diff' → logprob: -5.152212142944336
    4. 'norm' → logprob: -7.027212142944336
    5. 'normalized' → logprob: -7.527212142944336
    6. ' vec' → logprob: -8.152212142944336
    7. 'vectors' → logprob: -8.527212142944336
    8. 'v' → logprob: -8.652212142944336
    9. '   ' → logprob: -8.652212142944336
    10. 'res' → logprob: -8.652212142944336

Token 268: ' as' (ID: 472)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.03215203806757927
    2. 'points' → logprob: -4.53215217590332
    3. ' vec' → logprob: -4.65715217590332
    4. '   ' → logprob: -5.53215217590332
    5. 'diff' → logprob: -5.78215217590332
    6. ' points' → logprob: -6.15715217590332
    7. '=' → logprob: -7.53215217590332
    8. ' =' → logprob: -7.78215217590332
    9. 'd' → logprob: -8.53215217590332
    10. 'vectors' → logprob: -8.65715217590332

Token 269: ' sequence' (ID: 16281)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.03594525530934334
    2. '[(' → logprob: -3.660945177078247
    3. '[' → logprob: -5.410945415496826
    4. '(vec' → logprob: -7.160945415496826
    5. 'len' → logprob: -7.160945415496826
    6. 'a' → logprob: -7.410945415496826
    7. '[len' → logprob: -7.535945415496826
    8. '['' → logprob: -8.035944938659668
    9. ' vec' → logprob: -8.035944938659668
    10. 'dire' → logprob: -8.035944938659668

Token 270: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1916925609111786
    2. 'of' → logprob: -1.816692590713501
    3. '[' → logprob: -5.816692352294922
    4. 'vec' → logprob: -5.816692352294922
    5. '[(' → logprob: -6.816692352294922
    6. 'diff' → logprob: -7.191692352294922
    7. '   ' → logprob: -7.191692352294922
    8. ' =' → logprob: -7.191692352294922
    9. ' [' → logprob: -7.566692352294922
    10. ' vec' → logprob: -7.941692352294922

Token 271: ' moves' (ID: 19523)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -1.3205708265304565
    2. 'str' → logprob: -1.4455708265304565
    3. 'vec' → logprob: -2.070570945739746
    4. 'vectors' → logprob: -2.945570945739746
    5. 'dx' → logprob: -3.195570945739746
    6. 'dire' → logprob: -3.445570945739746
    7. ''d' → logprob: -3.695570945739746
    8. '("' → logprob: -3.695570945739746
    9. '"' → logprob: -3.820570945739746
    10. 'moves' → logprob: -3.820570945739746

Token 272: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011285603046417236
    2. 'moves' → logprob: -5.261285781860352
    3. 'def' → logprob: -6.386285781860352
    4. ',' → logprob: -6.886285781860352
    5. 'encoded' → logprob: -6.886285781860352
    6. 'vec' → logprob: -7.511285781860352
    7. 'result' → logprob: -8.136285781860352
    8. ' moves' → logprob: -8.261285781860352
    9. ':' → logprob: -8.386285781860352
    10. 's' → logprob: -9.136285781860352

Token 273: 'dx' (ID: 22100)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7372426986694336
    2. ''x' → logprob: -1.3622426986694336
    3. 'dx' → logprob: -2.2372426986694336
    4. 'vec' → logprob: -2.7372426986694336
    5. ''' → logprob: -4.112242698669434
    6. 'points' → logprob: -4.362242698669434
    7. '"x' → logprob: -4.612242698669434
    8. ')' → logprob: -4.987242698669434
    9. 'str' → logprob: -5.487242698669434
    10. '(x' → logprob: -5.487242698669434

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005916363443247974
    2. ' ,' → logprob: -7.75059175491333
    3. 'dy' → logprob: -10.125591278076172
    4. ',y' → logprob: -10.250591278076172
    5. ',)' → logprob: -10.875591278076172
    6. ',),' → logprob: -11.000591278076172
    7. ',d' → logprob: -11.375591278076172
    8. '),' → logprob: -11.500591278076172
    9. ',
' → logprob: -11.500591278076172
    10. ')' → logprob: -12.875591278076172

Token 275: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.018151700496673584
    2. ' dy' → logprob: -4.018151760101318
    3. '   ' → logprob: -14.51815128326416
    4. ')' → logprob: -14.89315128326416
    5. '
' → logprob: -14.89315128326416
    6. ' ' → logprob: -15.51815128326416
    7. '1' → logprob: -15.64315128326416
    8. '.dy' → logprob: -16.768152236938477
    9. '

' → logprob: -17.268152236938477
    10. ',' → logprob: -17.518152236938477

Token 276: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012538038427010179
    2. ')
' → logprob: -7.876253604888916
    3. '),' → logprob: -8.126254081726074
    4. ',' → logprob: -8.251254081726074
    5. '   ' → logprob: -9.001254081726074
    6. '):
' → logprob: -9.376254081726074
    7. '):' → logprob: -9.626254081726074
    8. ' )' → logprob: -10.876254081726074
    9. 'def' → logprob: -12.251254081726074
    10. '):

' → logprob: -12.376254081726074

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014348741387948394
    2. 'vec' → logprob: -6.751434803009033
    3. 'return' → logprob: -8.751435279846191
    4. ' return' → logprob: -10.751435279846191
    5. '    
' → logprob: -11.001435279846191
    6. 'def' → logprob: -11.251435279846191
    7. 'points' → logprob: -11.376435279846191
    8. 'diff' → logprob: -11.626435279846191
    9. '
' → logprob: -11.876435279846191
    10. 'vectors' → logprob: -11.876435279846191

Token 278: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' (adapté à ' vec') → logprob: -0.1309027522802353
    2. 'diff' → logprob: -2.5059027671813965
    3. 'return' → logprob: -3.8809027671813965
    4. '   ' → logprob: -4.0059027671813965
    5. 'd' → logprob: -7.2559027671813965
    6. ' vec' → logprob: -7.6309027671813965
    7. 'vectors' → logprob: -7.7559027671813965
    8. 'moves' → logprob: -8.755902290344238
    9. ' return' → logprob: -8.880902290344238
    10. 'v' → logprob: -9.505902290344238

Token 279: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00017684244085103273
    2. '=' → logprob: -9.625176429748535
    3. '_s' → logprob: -9.875176429748535
    4. ' =' → logprob: -10.750176429748535
    5. ' s' → logprob: -11.750176429748535
    6. '_diff' → logprob: -11.750176429748535
    7. '_' → logprob: -12.125176429748535
    8. '   ' → logprob: -12.250176429748535
    9. 'diff' → logprob: -12.750176429748535
    10. 'ectors' → logprob: -12.875176429748535

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858771339058876
    2. '=' → logprob: -3.0485877990722656
    3. '   ' → logprob: -15.798587799072266
    4. ' =
' → logprob: -16.798587799072266
    5. ',' → logprob: -16.923587799072266
    6. 's' → logprob: -17.548587799072266
    7. ' =)' → logprob: -17.548587799072266
    8. ' =[' → logprob: -17.798587799072266
    9. ' ' → logprob: -18.048587799072266
    10. '＝' → logprob: -18.548587799072266

Token 281: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.03805262967944145
    2. ' vec' → logprob: -3.288052558898926
    3. '   ' → logprob: -12.038052558898926
    4. '(vec' → logprob: -12.663052558898926
    5. '	vec' → logprob: -13.788052558898926
    6. 've' → logprob: -14.663052558898926
    7. 'vector' → logprob: -15.413052558898926
    8. ' ' → logprob: -15.788052558898926
    9. '_vec' → logprob: -16.288053512573242
    10. '  ' → logprob: -17.288053512573242

Token 282: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -3.650518920039758e-06
    2. 's' → logprob: -12.875003814697266
    3. 'diff' → logprob: -14.750003814697266
    4. '_vec' → logprob: -15.000003814697266
    5. '_d' → logprob: -16.000003814697266
    6. '_DIFF' → logprob: -16.000003814697266
    7. '	diff' → logprob: -18.125003814697266
    8. 'or' → logprob: -18.750003814697266
    9. '[' → logprob: -18.875003814697266
    10. '_' → logprob: -19.000003814697266

Token 283: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.125000953674316
    3. '(normal' → logprob: -16.250001907348633
    4. ' (' → logprob: -16.250001907348633
    5. 'points' → logprob: -17.625001907348633
    6. '	points' → logprob: -18.750001907348633
    7. '(point' → logprob: -19.000001907348633
    8. ' points' → logprob: -19.250001907348633
    9. '(parts' → logprob: -19.375001907348633
    10. '(lines' → logprob: -19.500001907348633

Token 284: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024958718568086624
    2. ')
' → logprob: -6.002495765686035
    3. '   ' → logprob: -10.877495765686035
    4. ')
' → logprob: -14.377495765686035
    5. ' )' → logprob: -14.752495765686035
    6. ')return' → logprob: -15.502495765686035
    7. ' ' → logprob: -17.12749671936035
    8. ')

' → logprob: -17.50249671936035
    9. ')`
' → logprob: -18.00249671936035
    10. ').' → logprob: -18.25249671936035

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0060505010187625885
    2. '
' → logprob: -6.6310505867004395
    3. 'encoded' → logprob: -6.8810505867004395
    4. '<|end|>' → logprob: -7.1310505867004395
    5. 'return' → logprob: -7.5060505867004395
    6. '[' → logprob: -7.7560505867004395
    7. ' return' → logprob: -8.131050109863281
    8. '    
' → logprob: -8.256050109863281
    9. '```' → logprob: -8.256050109863281
    10. 'tokens' → logprob: -8.381050109863281

Token 286: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6444145441055298
    2. 'return' → logprob: -1.3944145441055298
    3. 'encoded' → logprob: -1.8944145441055298
    4. 'codes' → logprob: -4.26941442489624
    5. 'vec' → logprob: -4.51941442489624
    6. 'code' → logprob: -4.76941442489624
    7. 'normalized' → logprob: -5.01941442489624
    8. '   ' → logprob: -5.01941442489624
    9. ' if' → logprob: -5.26941442489624
    10. 'enc' → logprob: -5.64441442489624

Token 287: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.028810808435082436
    2. ' is' → logprob: -4.153810977935791
    3. ' len' → logprob: -5.028810977935791
    4. 'not' → logprob: -5.403810977935791
    5. ' all' → logprob: -7.278810977935791
    6. ' vec' → logprob: -7.778810977935791
    7. 'is' → logprob: -8.278810501098633
    8. 'len' → logprob: -9.028810501098633
    9. 'vec' → logprob: -9.403810501098633
    10. ' any' → logprob: -10.278810501098633

Token 288: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.043055254966020584
    2. 'is' → logprob: -3.168055295944214
    3. 'vec' → logprob: -10.418055534362793
    4. ' vec' → logprob: -10.668055534362793
    5. ' all' → logprob: -12.918055534362793
    6. 'all' → logprob: -16.043054580688477
    7. '(is' → logprob: -16.168054580688477
    8. ' (' → logprob: -16.543054580688477
    9. ' len' → logprob: -17.418054580688477
    10. '	is' → logprob: -17.543054580688477

Token 289: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -5.512236498361744e-07
    2. '_is' → logprob: -15.125000953674316
    3. 'all' → logprob: -16.25
    4. ' _' → logprob: -17.125
    5. '_axis' → logprob: -17.375
    6. '_al' → logprob: -17.625
    7. ' all' → logprob: -18.5
    8. '_' → logprob: -18.5
    9. '_any' → logprob: -19.125
    10. 'All' → logprob: -19.25

Token 290: '_axis' (ID: 50852)
  Prédit: '_axis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_axis' → logprob: -1.3856492842023727e-06
    2. 'axis' → logprob: -13.750000953674316
    3. '(axis' → logprob: -16.375001907348633
    4. '_ax' → logprob: -16.500001907348633
    5. '(x' → logprob: -16.625001907348633
    6. '_axes' → logprob: -18.125001907348633
    7. '_AXIS' → logprob: -18.750001907348633
    8. ' axis' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.000001907348633
    10. '```' → logprob: -19.125001907348633

Token 291: '_al' (ID: 18493)
  Prédit: '_al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_al' → logprob: -1.700132997939363e-05
    2. 'aligned' → logprob: -11.000017166137695
    3. '-al' → logprob: -16.000017166137695
    4. 'Aligned' → logprob: -16.250017166137695
    5. '_all' → logprob: -17.625017166137695
    6. ' aligned' → logprob: -18.625017166137695
    7. 'vec' → logprob: -18.750017166137695
    8. '   ' → logprob: -19.000017166137695
    9. '```' → logprob: -19.000017166137695
    10. '_align' → logprob: -19.375017166137695

Token 292: 'igned' (ID: 3626)
  Prédit: 'igned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igned' → logprob: -2.3557529857498594e-05
    2. 'gn' → logprob: -11.87502384185791
    3. 'ined' → logprob: -12.25002384185791
    4. 'ign' → logprob: -12.62502384185791
    5. 'aligned' → logprob: -12.62502384185791
    6. 'ed' → logprob: -13.62502384185791
    7. 'ig' → logprob: -13.62502384185791
    8. 'IGNED' → logprob: -14.25002384185791
    9. 'ned' → logprob: -14.50002384185791
    10. 'vec' → logprob: -14.75002384185791

Token 293: '(vec' (ID: 57650)
  Prédit: '(vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vec' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -16.0
    3. '(vector' → logprob: -16.125
    4. '(' → logprob: -16.5
    5. '(Vec' → logprob: -17.375
    6. 'vec' → logprob: -20.25
    7. '(buf' → logprob: -20.625
    8. '	vec' → logprob: -20.75
    9. '((' → logprob: -20.875
    10. '(fig' → logprob: -21.625

Token 294: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. 'ectors' → logprob: -18.0
    3. '[' → logprob: -19.625
    4. 'es' → logprob: -20.0
    5. 'с' → logprob: -20.5
    6. ')' → logprob: -20.5
    7. '(s' → logprob: -20.625
    8. ')
' → logprob: -20.875
    9. '(' → logprob: -21.125
    10. '{s' → logprob: -21.125

Token 295: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3135727047920227
    2. '):
' → logprob: -1.313572645187378
    3. ' ):' → logprob: -8.938572883605957
    4. '   ' → logprob: -9.563572883605957
    5. ')' → logprob: -10.063572883605957
    6. ' ):
' → logprob: -10.188572883605957
    7. ':' → logprob: -10.813572883605957
    8. '):
' → logprob: -13.063572883605957
    9. '():
' → logprob: -13.188572883605957
    10. '():' → logprob: -13.813572883605957

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.625866030342877e-05
    2. '
' → logprob: -10.000085830688477
    3. ' return' → logprob: -10.375085830688477
    4. '   ' → logprob: -12.875085830688477
    5. '        
' → logprob: -12.875085830688477
    6. 'return' → logprob: -13.500085830688477
    7. ' raise' → logprob: -13.750085830688477
    8. ',' → logprob: -13.875085830688477
    9. '    
' → logprob: -14.625085830688477
    10. ' 
' → logprob: -16.500085830688477

Token 297: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28853872418403625
    2. ' return' → logprob: -1.5385386943817139
    3. 'return' (adapté à ' return') → logprob: -3.663538694381714
    4. ' raise' → logprob: -5.038538932800293
    5. '   ' → logprob: -6.288538932800293
    6. 'raise' → logprob: -6.288538932800293
    7. '
' → logprob: -10.288538932800293
    8. '	return' → logprob: -10.538538932800293
    9. ' ' → logprob: -11.288538932800293
    10. '    ' → logprob: -11.538538932800293

Token 298: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3869664967060089
    2. 'None' → logprob: -1.1369664669036865
    3. '[]' → logprob: -9.886966705322266
    4. '
' → logprob: -11.011966705322266
    5. ' ' → logprob: -11.386966705322266
    6. '   ' → logprob: -11.886966705322266
    7. '[]
' → logprob: -12.761966705322266
    8. '    
' → logprob: -13.511966705322266
    9. ' []' → logprob: -13.511966705322266
    10. '(None' → logprob: -13.761966705322266

Token 299: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009937762282788754
    2. '
' → logprob: -5.009937763214111
    3. '    
' → logprob: -5.759937763214111
    4. ',' → logprob: -10.759937286376953
    5. '  
' → logprob: -11.509937286376953
    6. '   
' → logprob: -11.759937286376953
    7. '<|end|>' → logprob: -12.134937286376953
    8. '        
' → logprob: -13.009937286376953
    9. ')' → logprob: -13.134937286376953
    10. 'return' → logprob: -13.384937286376953

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006919730454683304
    2. '
' → logprob: -5.506919860839844
    3. '    
' → logprob: -5.881919860839844
    4. '   
' → logprob: -11.881919860839844
    5. '```' → logprob: -12.006919860839844
    6. '  
' → logprob: -12.006919860839844
    7. '        
' → logprob: -12.131919860839844
    8. 'return' → logprob: -12.381919860839844
    9. 'vec' → logprob: -13.131919860839844
    10. 'import' → logprob: -13.256919860839844

Token 301: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7746775150299072
    2. '   ' → logprob: -0.8996775150299072
    3. 'encoded' → logprob: -2.6496775150299072
    4. 'rot' → logprob: -3.6496775150299072
    5. ' return' → logprob: -4.399677276611328
    6. 'normalized' → logprob: -5.149677276611328
    7. 'vec' → logprob: -5.274677276611328
    8. 'norm' → logprob: -6.149677276611328
    9. 'enc' → logprob: -6.524677276611328
    10. 'for' → logprob: -6.524677276611328

Token 302: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.014880426228046417
    2. 'tuple' → logprob: -4.889880657196045
    3. '[' → logprob: -5.389880657196045
    4. ' vec' → logprob: -6.389880657196045
    5. '[(' → logprob: -7.139880657196045
    6. '(vec' → logprob: -9.264880180358887
    7. ' [' → logprob: -10.889880180358887
    8. ' tuple' → logprob: -10.889880180358887
    9. 'list' → logprob: -11.264880180358887
    10. '	vec' → logprob: -11.389880180358887

Token 303: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008077251841314137
    2. '_diff' → logprob: -7.125807762145996
    3. '_vec' → logprob: -13.000807762145996
    4. 'diff' → logprob: -14.500807762145996
    5. 'vec' → logprob: -15.375807762145996
    6. '_s' → logprob: -16.87580680847168
    7. '[' → logprob: -17.25080680847168
    8. '```' → logprob: -17.25080680847168
    9. '_DIFF' → logprob: -17.37580680847168
    10. '_d' → logprob: -17.75080680847168

Token 304: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: ' canonical' (ID: 91323)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05862513557076454
    2. ' find' → logprob: -4.433625221252441
    3. 'main' → logprob: -4.433625221252441
    4. ' normalize' → logprob: -4.683625221252441
    5. ' compare' → logprob: -5.558625221252441
    6. ' encode' → logprob: -5.683625221252441
    7. ' shape' → logprob: -5.808625221252441
    8. ' solve' → logprob: -6.058625221252441
    9. ' shapes' → logprob: -6.183625221252441
    10. ' check' → logprob: -6.558625221252441

Token 307: '(vec' (ID: 57650)
  Prédit: '_shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_shape' → logprob: -0.5109295845031738
    2. '_form' → logprob: -1.1359295845031738
    3. '_encode' → logprob: -3.260929584503174
    4. '(shape' → logprob: -4.135929584503174
    5. '(points' → logprob: -4.885929584503174
    6. 'ize' → logprob: -5.010929584503174
    7. '_name' → logprob: -5.635929584503174
    8. '(' → logprob: -6.260929584503174
    9. '_code' → logprob: -6.385929584503174
    10. '_shapes' → logprob: -7.260929584503174

Token 308: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09046809375286102
    2. '_diff' → logprob: -2.465468168258667
    3. '_s' → logprob: -7.215467929840088
    4. '_encode' → logprob: -8.090468406677246
    5. '_' → logprob: -9.090468406677246
    6. '_vec' → logprob: -9.465468406677246
    7. ')_' → logprob: -9.465468406677246
    8. '_code' → logprob: -9.715468406677246
    9. ')' → logprob: -10.840468406677246
    10. 'diff' → logprob: -10.965468406677246

Token 309: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06201384216547012
    2. '):
' → logprob: -2.812013864517212
    3. ' ):' → logprob: -10.187013626098633
    4. '):
' → logprob: -12.187013626098633
    5. ')' → logprob: -13.687013626098633
    6. '):

' → logprob: -14.187013626098633
    7. '   ' → logprob: -14.437013626098633
    8. ',' → logprob: -14.687013626098633
    9. ' ):
' → logprob: -14.812013626098633
    10. ':' → logprob: -15.812013626098633

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011015993542969227
    2. ':' → logprob: -4.886015892028809
    3. ':
' → logprob: -6.511015892028809
    4. '    
' → logprob: -8.011015892028809
    5. '<|end|>' → logprob: -8.261015892028809
    6. 'def' → logprob: -8.511015892028809
    7. '<|end|>' → logprob: -8.886015892028809
    8. '[::-' → logprob: -9.011015892028809
    9. ' for' → logprob: -9.636015892028809
    10. '():
' → logprob: -9.698515892028809

Token 311: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2701442539691925
    2. 'c' → logprob: -2.39514422416687
    3. ' if' → logprob: -3.27014422416687
    4. 'best' → logprob: -3.27014422416687
    5. ' best' → logprob: -3.64514422416687
    6. 'if' → logprob: -4.020144462585449
    7. ' candidates' → logprob: -5.145144462585449
    8. 'for' → logprob: -5.645144462585449
    9. 'min' → logprob: -6.020144462585449
    10. ' for' → logprob: -6.145144462585449

Token 312: ' returns' (ID: 7377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9295534491539001
    2. ' candidates' → logprob: -1.179553508758545
    3. 'c' → logprob: -2.179553508758545
    4. ' if' → logprob: -3.554553508758545
    5. ' all' → logprob: -3.929553508758545
    6. ' rotations' → logprob: -4.304553508758545
    7. ' best' → logprob: -4.679553508758545
    8. ' res' → logprob: -4.679553508758545
    9. ' variants' → logprob: -4.679553508758545
    10. 'rot' → logprob: -4.929553508758545

Token 313: ' a' (ID: 261)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.6786868572235107
    2. 'min' → logprob: -1.3036868572235107
    3. ' min' → logprob: -2.0536868572235107
    4. '[' → logprob: -2.5536868572235107
    5. 'all' → logprob: -5.55368709564209
    6. ' all' → logprob: -6.17868709564209
    7. ' None' → logprob: -6.30368709564209
    8. ' [' → logprob: -6.42868709564209
    9. 'vec' → logprob: -6.92868709564209
    10. 'None' → logprob: -6.92868709564209

Token 314: ' normalized' (ID: 59625)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7081241011619568
    2. 'list' → logprob: -0.7081241011619568
    3. 'set' → logprob: -5.583124160766602
    4. 'vec' → logprob: -6.208124160766602
    5. '   ' → logprob: -6.333124160766602
    6. ' tuple' → logprob: -6.958124160766602
    7. '[]' → logprob: -7.083124160766602
    8. 'def' → logprob: -7.083124160766602
    9. ' set' → logprob: -7.208124160766602
    10. '[' → logprob: -7.208124160766602

Token 315: ' tuple' (ID: 31311)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4022543728351593
    2. ' version' → logprob: -2.027254343032837
    3. ' tuple' → logprob: -2.652254343032837
    4. 'list' → logprob: -2.777254343032837
    5. ' sequence' → logprob: -4.027254581451416
    6. 'vec' → logprob: -4.652254581451416
    7. 'tuple' → logprob: -4.777254581451416
    8. 'sequence' → logprob: -5.402254581451416
    9. ' vec' → logprob: -5.777254581451416
    10. '[(' → logprob: -5.902254581451416

Token 316: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23963424563407898
    2. '(
' → logprob: -2.6146342754364014
    3. ':' → logprob: -2.8646342754364014
    4. '(vec' → logprob: -3.3646342754364014
    5. ' of' → logprob: -4.364634037017822
    6. '(tuple' → logprob: -4.489634037017822
    7. ' (' → logprob: -4.864634037017822
    8. '   ' → logprob: -5.114634037017822
    9. '(sorted' → logprob: -5.739634037017822
    10. '=' → logprob: -6.614634037017822

Token 317: ' compare' (ID: 12221)
  Prédit: 'represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'represent' → logprob: -0.4342774450778961
    2. ' represent' → logprob: -1.1842774152755737
    3. 'compare' → logprob: -4.059277534484863
    4. 'tuple' → logprob: -5.059277534484863
    5. 'allow' → logprob: -5.434277534484863
    6. ' tuple' → logprob: -6.059277534484863
    7. 'identify' → logprob: -6.309277534484863
    8. ' compare' → logprob: -6.434277534484863
    9. ' allow' → logprob: -6.559277534484863
    10. 'def' → logprob: -6.559277534484863

Token 318: ' shapes' (ID: 29447)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.16144442558288574
    2. ' vec' → logprob: -2.7864444255828857
    3. '(vec' → logprob: -3.1614444255828857
    4. '(
' → logprob: -4.161444664001465
    5. ' (
' → logprob: -4.536444664001465
    6. '[
' → logprob: -5.036444664001465
    7. ' (' → logprob: -5.661444664001465
    8. '(' → logprob: -6.036444664001465
    9. '   ' → logprob: -6.661444664001465
    10. 's' → logprob: -7.036444664001465

Token 319: ' considering' (ID: 17227)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1019703596830368
    2. ':' → logprob: -3.6019704341888428
    3. '(vec' → logprob: -3.6019704341888428
    4. '(' → logprob: -4.351970195770264
    5. 'vec' → logprob: -4.351970195770264
    6. ':
' → logprob: -5.726970195770264
    7. ' (' → logprob: -5.851970195770264
    8. '(
' → logprob: -5.851970195770264
    9. 'def' → logprob: -5.976970195770264
    10. ' vec' → logprob: -6.601970195770264

Token 320: ' rotation' (ID: 23769)
  Prédit: ' rotations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotations' → logprob: -0.27614712715148926
    2. ' all' → logprob: -1.5261471271514893
    3. 'all' → logprob: -4.15114688873291
    4. ' rotation' → logprob: -5.15114688873291
    5. 'rot' → logprob: -6.27614688873291
    6. 'rotation' → logprob: -9.27614688873291
    7. ' rotated' → logprob: -9.52614688873291
    8. 'vec' → logprob: -9.52614688873291
    9. ' vec' → logprob: -9.90114688873291
    10. ' rotational' → logprob: -9.90114688873291

Token 321: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36550474166870117
    2. '(vec' → logprob: -1.2405047416687012
    3. '(' → logprob: -4.990504741668701
    4. ',' → logprob: -6.115504741668701
    5. ':' → logprob: -6.365504741668701
    6. 'def' → logprob: -6.615504741668701
    7. 's' → logprob: -6.740504741668701
    8. 'vec' → logprob: -6.990504741668701
    9. ' and' → logprob: -7.240504741668701
    10. '(
' → logprob: -7.615504741668701

Token 322: ' reversal' (ID: 117109)
  Prédit: ' reflection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reflection' → logprob: -0.18387360870838165
    2. ' reflections' → logprob: -2.6838736534118652
    3. 'reflection' → logprob: -2.9338736534118652
    4. ' translation' → logprob: -3.4338736534118652
    5. 'ref' → logprob: -5.558873653411865
    6. 'translation' → logprob: -5.683873653411865
    7. ' translations' → logprob: -6.183873653411865
    8. 'reflect' → logprob: -7.433873653411865
    9. 'flip' → logprob: -7.433873653411865
    10. 'all' → logprob: -7.558873653411865

Token 323: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35822856426239014
    2. ':' → logprob: -1.7332285642623901
    3. ':
' → logprob: -2.2332286834716797
    4. '):
' → logprob: -5.23322868347168
    5. 'def' → logprob: -5.98322868347168
    6. ',' → logprob: -6.10822868347168
    7. '(vec' → logprob: -6.35822868347168
    8. '):' → logprob: -6.60822868347168
    9. '
' → logprob: -7.10822868347168
    10. 'vec' → logprob: -7.35822868347168

Token 324: ' translation' (ID: 24005)
  Prédit: ' reflection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reflection' → logprob: -0.9410940408706665
    2. ' translation' → logprob: -1.1910940408706665
    3. ' length' → logprob: -1.3160940408706665
    4. ' mir' → logprob: -4.566093921661377
    5. ' reflections' → logprob: -5.066093921661377
    6. 'reflection' → logprob: -5.566093921661377
    7. ' direction' → logprob: -6.191093921661377
    8. 'translation' → logprob: -6.191093921661377
    9. ' ' → logprob: -6.566093921661377
    10. ' scale' → logprob: -6.566093921661377

Token 325: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7365173697471619
    2. '   ' → logprob: -1.1115174293518066
    3. '(vec' → logprob: -2.3615174293518066
    4. ':
' → logprob: -2.8615174293518066
    5. '(' → logprob: -4.236517429351807
    6. 'def' → logprob: -4.361517429351807
    7. 'vec' → logprob: -5.361517429351807
    8. '(
' → logprob: -5.986517429351807
    9. ',' → logprob: -6.361517429351807
    10. '):
' → logprob: -6.986517429351807

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004500735085457563
    2. ':' → logprob: -6.004500865936279
    3. 'def' → logprob: -6.754500865936279
    4. '    
' → logprob: -8.129500389099121
    5. ':
' → logprob: -8.379500389099121
    6. '
' → logprob: -9.879500389099121
    7. ')' → logprob: -10.129500389099121
    8. '```' → logprob: -10.629500389099121
    9. '{' → logprob: -10.754500389099121
    10. ' def' → logprob: -11.004500389099121

Token 327: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2886534929275513
    2. ' candidates' → logprob: -1.4136534929275513
    3. ' if' → logprob: -1.7886534929275513
    4. ' best' → logprob: -2.0386533737182617
    5. ' n' → logprob: -3.0386533737182617
    6. ' min' → logprob: -3.4136533737182617
    7. ' res' → logprob: -3.6636533737182617
    8. ' rotations' → logprob: -4.538653373718262
    9. ' normalized' → logprob: -4.663653373718262
    10. ' options' → logprob: -4.663653373718262

Token 328: ' Try' (ID: 14720)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.7990341186523438
    2. '   ' → logprob: -1.2990341186523438
    3. ' n' → logprob: -2.5490341186523438
    4. 'n' → logprob: -3.4240341186523438
    5. ' if' → logprob: -3.4240341186523438
    6. 'c' → logprob: -3.7990341186523438
    7. ' res' → logprob: -3.9240341186523438
    8. ' normalized' → logprob: -3.9240341186523438
    9. 'norm' → logprob: -4.049034118652344
    10. ' best' → logprob: -4.924034118652344

Token 329: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.16336865723133087
    2. ' rotations' → logprob: -2.4133687019348145
    3. '   ' → logprob: -3.4133687019348145
    4. 'all' → logprob: -4.4133687019348145
    5. '[
' → logprob: -4.9133687019348145
    6. 'rot' → logprob: -5.9133687019348145
    7. ' both' → logprob: -6.4133687019348145
    8. ' [
' → logprob: -6.7883687019348145
    9. '[' → logprob: -7.7883687019348145
    10. 'vec' → logprob: -8.038368225097656

Token 330: ' ' (ID: 220)
  Prédit: ' rotations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotations' → logprob: -0.23600099980831146
    2. '   ' → logprob: -2.3610010147094727
    3. ' rot' → logprob: -2.7360010147094727
    4. ' deg' → logprob: -4.111001014709473
    5. ' ' → logprob: -4.361001014709473
    6. 'rot' → logprob: -4.611001014709473
    7. '[(' → logprob: -6.111001014709473
    8. ' angles' → logprob: -6.736001014709473
    9. ' rotation' → logprob: -6.986001014709473
    10. 'rots' → logprob: -6.986001014709473

Token 331: '4' (ID: 19)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.24176111817359924
    2. '[(' → logprob: -1.8667610883712769
    3. '   ' → logprob: -4.241761207580566
    4. ' rotations' → logprob: -4.241761207580566
    5. 'deg' → logprob: -4.741761207580566
    6. 'rots' → logprob: -4.866761207580566
    7. '[' → logprob: -5.116761207580566
    8. '(' → logprob: -5.866761207580566
    9. '[
' → logprob: -6.616761207580566
    10. ' rot' → logprob: -6.991761207580566

Token 332: ' rotations' (ID: 141136)
  Prédit: ' rotations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotations' → logprob: -0.02471683733165264
    2. 'rot' → logprob: -4.399716854095459
    3. '   ' → logprob: -4.649716854095459
    4. ' rot' → logprob: -7.649716854095459
    5. ' orientations' → logprob: -7.774716854095459
    6. ' rotated' → logprob: -7.899716854095459
    7. 'rots' → logprob: -8.0247163772583
    8. ' ' → logprob: -8.6497163772583
    9. ' for' → logprob: -8.8997163772583
    10. 'for' → logprob: -9.0247163772583

Token 333: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04471364617347717
    2. '
' → logprob: -4.044713497161865
    3. ':' → logprob: -4.794713497161865
    4. ':
' → logprob: -4.919713497161865
    5. ',' → logprob: -5.919713497161865
    6. '    
' → logprob: -6.169713497161865
    7. 'results' → logprob: -7.044713497161865
    8. 's' → logprob: -7.294713497161865
    9. 'def' → logprob: -7.419713497161865
    10. 'result' → logprob: -7.669713497161865

Token 334: ' both' (ID: 2973)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7756953835487366
    2. ' both' → logprob: -1.0256953239440918
    3. 'both' → logprob: -2.525695323944092
    4. ' their' → logprob: -3.025695323944092
    5. 'all' → logprob: -3.400695323944092
    6. 're' → logprob: -5.150695323944092
    7. '   ' → logprob: -5.525695323944092
    8. ' revers' → logprob: -6.275695323944092
    9. 'their' → logprob: -6.400695323944092
    10. ' (' → logprob: -6.525695323944092

Token 335: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -1.3095800876617432
    2. ' normal' → logprob: -1.5595800876617432
    3. 'dire' → logprob: -1.8095800876617432
    4. ' orientations' → logprob: -1.9345800876617432
    5. 'vec' → logprob: -2.684580087661743
    6. 'normal' → logprob: -3.184580087661743
    7. ' original' → logprob: -3.309580087661743
    8. ' vec' → logprob: -3.434580087661743
    9. ' forward' → logprob: -5.184579849243164
    10. 'orient' → logprob: -5.309579849243164

Token 336: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01840323954820633
    2. ':' → logprob: -4.893403053283691
    3. '
' → logprob: -5.018403053283691
    4. ':
' → logprob: -6.393403053283691
    5. ',' → logprob: -6.768403053283691
    6. '    
' → logprob: -7.268403053283691
    7. 'def' → logprob: -8.393403053283691
    8. ' and' → logprob: -9.643403053283691
    9. 'vec' → logprob: -10.393403053283691
    10. '  
' → logprob: -10.643403053283691

Token 337: ' pick' (ID: 5230)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7807475328445435
    2. ' candidates' → logprob: -1.1557475328445435
    3. ' best' → logprob: -1.5307475328445435
    4. ' results' → logprob: -5.280747413635254
    5. ' n' → logprob: -6.280747413635254
    6. 'best' → logprob: -7.155747413635254
    7. ' res' → logprob: -7.155747413635254
    8. ' options' → logprob: -7.155747413635254
    9. ' result' → logprob: -7.780747413635254
    10. ' sequences' → logprob: -8.405747413635254

Token 338: ' minimal' (ID: 19957)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.13495191931724548
    2. 'min' → logprob: -2.1349518299102783
    3. ' the' → logprob: -5.384952068328857
    4. '   ' → logprob: -6.884952068328857
    5. ' None' → logprob: -7.384952068328857
    6. ' minimal' → logprob: -7.509952068328857
    7. 'the' → logprob: -8.0099515914917
    8. ' max' → logprob: -8.2599515914917
    9. ' minimum' → logprob: -8.2599515914917
    10. 'max' → logprob: -9.1349515914917

Token 339: ' lex' (ID: 37772)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.7662586569786072
    2. ' vec' → logprob: -0.8912586569786072
    3. '(vec' → logprob: -3.391258716583252
    4. '   ' → logprob: -3.516258716583252
    5. 'def' → logprob: -4.391258716583252
    6. ' sequence' → logprob: -4.641258716583252
    7. ':' → logprob: -4.891258716583252
    8. ' result' → logprob: -5.641258716583252
    9. ' shape' → logprob: -5.766258716583252
    10. ':
' → logprob: -5.891258716583252

Token 340: '
' (ID: 198)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.13982394337654114
    2. ' vec' → logprob: -3.0148239135742188
    3. '(vec' → logprob: -3.8898239135742188
    4. 'ic' → logprob: -4.014823913574219
    5. ' tuple' → logprob: -4.639823913574219
    6. 'tuple' → logprob: -5.014823913574219
    7. ')' → logprob: -5.014823913574219
    8. '   ' → logprob: -5.764823913574219
    9. '(' → logprob: -5.764823913574219
    10. ' ' → logprob: -6.389823913574219

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033206648658961058
    2. ':' → logprob: -6.878320693969727
    3. ':
' → logprob: -7.128320693969727
    4. ',' → logprob: -8.128320693969727
    5. '):
' → logprob: -8.253320693969727
    6. '
' → logprob: -8.503320693969727
    7. '    
' → logprob: -8.628320693969727
    8. 'def' → logprob: -8.878320693969727
    9. 'vec' → logprob: -9.503320693969727
    10. ' candidates' → logprob: -9.503320693969727

Token 342: ' candidates' (ID: 18116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1059576272964478
    2. ' candidates' → logprob: -1.1059576272964478
    3. ' best' → logprob: -1.3559576272964478
    4. ' res' → logprob: -2.855957508087158
    5. 'best' → logprob: -4.355957508087158
    6. ' options' → logprob: -5.730957508087158
    7. ' result' → logprob: -6.605957508087158
    8. ' results' → logprob: -6.980957508087158
    9. ' min' → logprob: -7.105957508087158
    10. ' n' → logprob: -7.855957508087158

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005237429868429899
    2. '=' → logprob: -5.255237579345703
    3. ' =[' → logprob: -12.755237579345703
    4. '=[]' → logprob: -14.505237579345703
    5. ',' → logprob: -15.880237579345703
    6. ':' → logprob: -17.255237579345703
    7. 's' → logprob: -17.255237579345703
    8. '=[
' → logprob: -17.755237579345703
    9. ' ' → logprob: -17.880237579345703
    10. ' =
' → logprob: -18.005237579345703

Token 344: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01925687864422798
    2. ' []' → logprob: -4.019257068634033
    3. '[' → logprob: -7.519257068634033
    4. '[]
' → logprob: -7.644257068634033
    5. ' [' → logprob: -9.894256591796875
    6. '[]

' → logprob: -11.019256591796875
    7. ' []
' → logprob: -11.519256591796875
    8. 'vec' → logprob: -12.769256591796875
    9. '   ' → logprob: -13.769256591796875
    10. '[
' → logprob: -13.894256591796875

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1638626903295517
    2. ' for' → logprob: -1.913862705230713
    3. '	for' → logprob: -6.413862705230713
    4. 'for' → logprob: -7.163862705230713
    5. '    
' → logprob: -7.538862705230713
    6. '    ' → logprob: -8.038862228393555
    7. '
' → logprob: -8.288862228393555
    8. '  ' → logprob: -10.913862228393555
    9. ' ' → logprob: -11.413862228393555
    10. '```' → logprob: -11.663862228393555

Token 346: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1723695695400238
    2. ' for' → logprob: -2.4223694801330566
    3. '   ' → logprob: -2.6723694801330566
    4. 'c' → logprob: -8.422369956970215
    5. '
' → logprob: -8.922369956970215
    6. '	for' → logprob: -9.047369956970215
    7. '    
' → logprob: -10.172369956970215
    8. ' candidates' → logprob: -11.422369956970215
    9. 'def' → logprob: -12.297369956970215
    10. '```' → logprob: -13.172369956970215

Token 347: ' r' (ID: 428)
  Prédit: ' deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deg' → logprob: -0.5760575532913208
    2. 'deg' → logprob: -0.8260575532913208
    3. 'd' → logprob: -9.451057434082031
    4. ' d' → logprob: -11.326057434082031
    5. 'rot' → logprob: -11.701057434082031
    6. ' rot' → logprob: -12.076057434082031
    7. '_deg' → logprob: -12.451057434082031
    8. ' ' → logprob: -12.826057434082031
    9. 'vec' → logprob: -13.451057434082031
    10. 'degree' → logprob: -14.201057434082031

Token 348: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008093930780887604
    2. 'in' → logprob: -4.88309383392334
    3. 'ot' → logprob: -8.00809383392334
    4. ' ' → logprob: -9.50809383392334
    5. 'eg' → logprob: -10.63309383392334
    6. 'ange' → logprob: -11.00809383392334
    7. 'deg' → logprob: -11.38309383392334
    8. 'otation' → logprob: -12.00809383392334
    9. 'otate' → logprob: -12.50809383392334
    10. '   ' → logprob: -12.75809383392334

Token 349: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00033284336677752435
    2. 'range' → logprob: -8.250332832336426
    3. ' [' → logprob: -10.000332832336426
    4. ' range' → logprob: -10.750332832336426
    5. '(' → logprob: -12.625332832336426
    6. '0' → logprob: -13.500332832336426
    7. ' ' → logprob: -17.875333786010742
    8. '   ' → logprob: -18.750333786010742
    9. '(range' → logprob: -19.000333786010742
    10. ' (' → logprob: -19.375333786010742

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.375021934509277
    4. '  ' → logprob: -16.12502098083496
    5. '۰' → logprob: -21.12502098083496
    6. ',' → logprob: -21.37502098083496
    7. '    ' → logprob: -21.43752098083496
    8. '０' → logprob: -21.68752098083496
    9. '```' → logprob: -21.81252098083496
    10. '    
' → logprob: -22.31252098083496

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006326167494989932
    2. ' ,' → logprob: -7.3756327629089355
    3. ',
' → logprob: -12.125632286071777
    4. '   ' → logprob: -15.250632286071777
    5. '90' → logprob: -16.500633239746094
    6. ' ' → logprob: -16.625633239746094
    7. '‌,' → logprob: -17.250633239746094
    8. '0' → logprob: -17.750633239746094
    9. ',

' → logprob: -17.750633239746094
    10. ',
' → logprob: -18.000633239746094

Token 352: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.002477200934663415
    2. ' ' → logprob: -6.002477169036865
    3. '   ' → logprob: -13.752477645874023
    4. '  ' → logprob: -15.252477645874023
    5. '```' → logprob: -16.002477645874023
    6. '9' → logprob: -17.127477645874023
    7. '    ' → logprob: -17.502477645874023
    8. '900' → logprob: -17.877477645874023
    9. '	' → logprob: -18.502477645874023
    10. '180' → logprob: -18.814977645874023

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005987849435769022
    2. ' ,' → logprob: -8.125598907470703
    3. ',
' → logprob: -8.250598907470703
    4. '   ' → logprob: -10.375598907470703
    5. ']:' → logprob: -12.625598907470703
    6. '90' → logprob: -13.500598907470703
    7. ']:
' → logprob: -13.625598907470703
    8. ']' → logprob: -13.875598907470703
    9. ' ' → logprob: -14.625598907470703
    10. ',

' → logprob: -15.000598907470703

Token 354: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -20.375
    4. '```' → logprob: -21.5
    5. '18' → logprob: -23.125
    6. '270' → logprob: -23.875
    7. '1' → logprob: -24.25
    8. '  ' → logprob: -24.75
    9. '`' → logprob: -25.375
    10. '-' → logprob: -25.875

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002751598076429218
    2. ' ,' → logprob: -8.250275611877441
    3. ',
' → logprob: -11.250275611877441
    4. '   ' → logprob: -14.750275611877441
    5. '90' → logprob: -15.750275611877441
    6. '270' → logprob: -16.125274658203125
    7. ',

' → logprob: -16.750274658203125
    8. ',(' → logprob: -17.000274658203125
    9. '
' → logprob: -17.250274658203125
    10. ' ' → logprob: -17.375274658203125

Token 356: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -20.75
    5. '27' → logprob: -20.875
    6. '271' → logprob: -21.75
    7. '  ' → logprob: -22.375
    8. ',' → logprob: -22.75
    9. '273' → logprob: -23.0
    10. '275' → logprob: -23.875

Token 357: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.201861172914505
    2. ']:' → logprob: -1.7018611431121826
    3. ']:
' → logprob: -8.451861381530762
    4. ' ]' → logprob: -9.076861381530762
    5. '   ' → logprob: -9.576861381530762
    6. ']' → logprob: -10.326861381530762
    7. ']:

' → logprob: -11.451861381530762
    8. '):
' → logprob: -12.826861381530762
    9. ']:


' → logprob: -13.701861381530762
    10. ',' → logprob: -13.951861381530762

Token 358: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5052201747894287
    2. '       ' → logprob: -1.3802201747894287
    3. '   ' → logprob: -2.2552201747894287
    4. ':
' → logprob: -3.5052201747894287
    5. '<|end|>' → logprob: -5.630220413208008
    6. ' :' → logprob: -6.755220413208008
    7. '):
' → logprob: -6.755220413208008
    8. '):' → logprob: -6.755220413208008
    9. '<|end|>' → logprob: -7.880220413208008
    10. '    
' → logprob: -8.005220413208008

Token 359: ' r' (ID: 428)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2462512254714966
    2. 'rot' → logprob: -1.2462512254714966
    3. ' rotated' → logprob: -1.2462512254714966
    4. ' rot' → logprob: -2.621251106262207
    5. ' rv' → logprob: -3.246251106262207
    6. 'rots' → logprob: -5.246251106262207
    7. ' for' → logprob: -5.621251106262207
    8. 'rv' → logprob: -5.871251106262207
    9. '   ' → logprob: -5.996251106262207
    10. ' v' → logprob: -6.371251106262207

Token 360: 'vec' (ID: 3192)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.07251691818237305
    2. '_vec' → logprob: -2.947516918182373
    3. 'vec' → logprob: -4.197516918182373
    4. 'ots' → logprob: -6.197516918182373
    5. 'oted' → logprob: -9.072517395019531
    6. '_rot' → logprob: -9.197517395019531
    7. 'ec' → logprob: -10.072517395019531
    8. 'ev' → logprob: -10.697517395019531
    9. 's' → logprob: -11.197517395019531
    10. 'otate' → logprob: -11.322517395019531

Token 361: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.392202976712724e-06
    2. ' =' → logprob: -12.375006675720215
    3. '=' → logprob: -13.375006675720215
    4. '   ' → logprob: -15.500006675720215
    5. 'ectors' → logprob: -16.2500057220459
    6. 'ecs' → logprob: -16.5000057220459
    7. '=s' → logprob: -16.6250057220459
    8. ' ' → logprob: -17.6250057220459
    9. '_s' → logprob: -17.7500057220459
    10. 'es' → logprob: -18.1250057220459

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0380416102707386
    2. '=' → logprob: -3.288041591644287
    3. 's' → logprob: -16.913042068481445
    4. ')' → logprob: -17.163042068481445
    5. '.append' → logprob: -17.913042068481445
    6. ' ' → logprob: -18.413042068481445
    7. ' =
' → logprob: -18.413042068481445
    8. '＝' → logprob: -19.288042068481445
    9. ' =
' → logprob: -19.538042068481445
    10. ' +=' → logprob: -19.663042068481445

Token 363: ' rotate' (ID: 31987)
  Prédit: ' rotate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotate' → logprob: -0.07889220863580704
    2. 'rotate' → logprob: -2.578892230987549
    3. ' ' → logprob: -14.07889175415039
    4. '   ' → logprob: -14.20389175415039
    5. ' tuple' → logprob: -15.07889175415039
    6. '.rotate' → logprob: -15.32889175415039
    7. ' rotation' → logprob: -15.82889175415039
    8. 'rot' → logprob: -16.32889175415039
    9. 'tuple' → logprob: -16.70389175415039
    10. ' set' → logprob: -16.82889175415039

Token 364: '(vec' (ID: 57650)
  Prédit: '(vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vec' → logprob: -1.3306015716807451e-05
    2. 'vec' → logprob: -11.25001335144043
    3. ' (' → logprob: -16.25001335144043
    4. '(' → logprob: -16.25001335144043
    5. '	vec' → logprob: -17.25001335144043
    6. '```' → logprob: -18.87501335144043
    7. '(
' → logprob: -19.00001335144043
    8. '(Vec' → logprob: -19.12501335144043
    9. ' vec' → logprob: -19.37501335144043
    10. '(vector' → logprob: -20.37501335144043

Token 365: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00336307380348444
    2. 'vec' → logprob: -6.128363132476807
    3. '(vec' → logprob: -6.753363132476807
    4. ')' → logprob: -12.253362655639648
    5. ' vec' → logprob: -13.503362655639648
    6. ')(' → logprob: -13.878362655639648
    7. '	vec' → logprob: -14.253362655639648
    8. 'cs' → logprob: -14.503362655639648
    9. '   ' → logprob: -15.003362655639648
    10. 'ecs' → logprob: -15.003362655639648

Token 366: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16036558151245117
    2. ',r' → logprob: -1.9103655815124512
    3. ' ,' → logprob: -8.91036605834961
    4. ',v' → logprob: -13.16036605834961
    5. ',(' → logprob: -13.66036605834961
    6. ',[' → logprob: -13.78536605834961
    7. '   ' → logprob: -14.53536605834961
    8. '(r' → logprob: -14.91036605834961
    9. ',c' → logprob: -15.28536605834961
    10. ',res' → logprob: -16.03536605834961

Token 367: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25194892287254333
    2. ')' → logprob: -1.5019489526748657
    3. ')
' → logprob: -11.126949310302734
    4. ' )
' → logprob: -12.501949310302734
    5. ')

' → logprob: -14.501949310302734
    6. ')[' → logprob: -14.751949310302734
    7. ' )' → logprob: -15.251949310302734
    8. ')`
' → logprob: -16.001949310302734
    9. ' ' → logprob: -16.626949310302734
    10. ')c' → logprob: -17.751949310302734

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06864573061466217
    2. '   ' → logprob: -3.068645715713501
    3. '
' → logprob: -5.44364595413208
    4. '<|end|>' → logprob: -5.44364595413208
    5. ' candidates' → logprob: -5.56864595413208
    6. '        
' → logprob: -6.06864595413208
    7. '    
' → logprob: -6.44364595413208
    8. '  
' → logprob: -6.69364595413208
    9. ' for' → logprob: -6.81864595413208
    10. ',' → logprob: -8.818645477294922

Token 369: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11735212802886963
    2. ' candidates' → logprob: -2.24235200881958
    3. '   ' → logprob: -6.24235200881958
    4. 'for' → logprob: -6.61735200881958
    5. ' for' → logprob: -7.11735200881958
    6. '       ' → logprob: -8.242352485656738
    7. ' c' → logprob: -8.867352485656738
    8. '           ' → logprob: -12.742352485656738
    9. '_candidates' → logprob: -12.992352485656738
    10. ' ' → logprob: -13.367352485656738

Token 370: ' original' (ID: 4756)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15337178111076355
    2. ' candidates' → logprob: -2.278371810913086
    3. 'for' → logprob: -3.528371810913086
    4. ' for' → logprob: -4.653371810913086
    5. '   ' → logprob: -8.028371810913086
    6. ' c' → logprob: -8.278371810913086
    7. 'r' → logprob: -8.903371810913086
    8. 'if' → logprob: -10.903371810913086
    9. 'candidate' → logprob: -10.903371810913086
    10. '
' → logprob: -11.528371810913086

Token 371: '
' (ID: 198)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -1.1934047937393188
    2. 's' → logprob: -1.3184047937393188
    3. '
' → logprob: -2.3184046745300293
    4. ' and' → logprob: -2.5684046745300293
    5. 'c' → logprob: -2.5684046745300293
    6. 'vec' → logprob: -3.3184046745300293
    7. '_candidates' → logprob: -3.6934046745300293
    8. ' =' → logprob: -3.8184046745300293
    9. 'vectors' → logprob: -3.9434046745300293
    10. ',' → logprob: -4.193404674530029

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06785695999860764
    2. '
' → logprob: -3.192857027053833
    3. ' candidates' → logprob: -4.567856788635254
    4. 'c' → logprob: -5.692856788635254
    5. 's' → logprob: -6.067856788635254
    6. ',' → logprob: -6.567856788635254
    7. ' and' → logprob: -6.817856788635254
    8. '        
' → logprob: -6.942856788635254
    9. 'vectors' → logprob: -6.942856788635254
    10. '   ' → logprob: -7.442856788635254

Token 373: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.18084506690502167
    2. 'c' → logprob: -1.805845022201538
    3. '       ' → logprob: -8.055845260620117
    4. ' c' → logprob: -8.180845260620117
    5. '   ' → logprob: -8.430845260620117
    6. '
' → logprob: -8.680845260620117
    7. '_candidates' → logprob: -10.055845260620117
    8. 'candidate' → logprob: -10.555845260620117
    9. ' candidats' → logprob: -11.680845260620117
    10. 'cand' → logprob: -12.055845260620117

Token 374: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.73183855926618e-05
    2. '.' → logprob: -9.500077247619629
    3. '.extend' → logprob: -13.125077247619629
    4. ' .' → logprob: -14.875077247619629
    5. '.app' → logprob: -17.500078201293945
    6. '.push' → logprob: -18.375078201293945
    7. '.ap' → logprob: -18.875078201293945
    8. '.Append' → logprob: -19.250078201293945
    9. ').' → logprob: -19.375078201293945
    10. '.add' → logprob: -19.875078201293945

Token 375: '(tuple' (ID: 133029)
  Prédit: '(tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -8.804671233519912e-05
    2. '(r' → logprob: -9.87508773803711
    3. '(' → logprob: -10.75008773803711
    4. 'tuple' → logprob: -11.25008773803711
    5. ' tuple' → logprob: -13.50008773803711
    6. ' (' → logprob: -14.62508773803711
    7. '((' → logprob: -15.50008773803711
    8. '   ' → logprob: -17.37508773803711
    9. '(
' → logprob: -17.75008773803711
    10. 'r' → logprob: -17.75008773803711

Token 376: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.3875141143798828
    2. 'r' → logprob: -1.1375141143798828
    3. ' r' → logprob: -7.512514114379883
    4. '(' → logprob: -10.512514114379883
    5. '((' → logprob: -11.262514114379883
    6. '[r' → logprob: -11.262514114379883
    7. 'normalize' → logprob: -11.887514114379883
    8. '   ' → logprob: -11.887514114379883
    9. ')' → logprob: -12.137514114379883
    10. '
' → logprob: -12.262514114379883

Token 377: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -5.5577775128767826e-06
    2. ' vec' → logprob: -13.625005722045898
    3. 'v' → logprob: -14.125005722045898
    4. 've' → logprob: -14.125005722045898
    5. ')' → logprob: -14.250005722045898
    6. '_vec' → logprob: -14.500005722045898
    7. '   ' → logprob: -14.875005722045898
    8. '	vec' → logprob: -15.000005722045898
    9. '[' → logprob: -15.125005722045898
    10. '(vec' → logprob: -15.375005722045898

Token 378: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -13.125005722045898
    3. '   ' → logprob: -13.875005722045898
    4. '(s' → logprob: -14.500005722045898
    5. '
' → logprob: -14.750005722045898
    6. '[s' → logprob: -15.250005722045898
    7. 'c' → logprob: -15.500005722045898
    8. ' ' → logprob: -15.875005722045898
    9. ' s' → logprob: -15.875005722045898
    10. ')' → logprob: -15.875005722045898

Token 379: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06337175518274307
    2. '))
' → logprob: -2.8133716583251953
    3. ')' → logprob: -7.188371658325195
    4. ' ))' → logprob: -7.563371658325195
    5. ' ))
' → logprob: -9.063371658325195
    6. '))

' → logprob: -12.563371658325195
    7. '   ' → logprob: -12.688371658325195
    8. ' )' → logprob: -13.188371658325195
    9. '))
' → logprob: -13.438371658325195
    10. ')
' → logprob: -13.438371658325195

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0642075464129448
    2. '   ' → logprob: -2.8142075538635254
    3. '
' → logprob: -7.439207553863525
    4. '<|end|>' → logprob: -7.564207553863525
    5. '        
' → logprob: -8.189207077026367
    6. '    
' → logprob: -8.439207077026367
    7. ',' → logprob: -8.439207077026367
    8. '  
' → logprob: -8.939207077026367
    9. '	' → logprob: -9.314207077026367
    10. ')' → logprob: -10.064207077026367

Token 381: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07089803367853165
    2. '   ' → logprob: -2.8208980560302734
    3. '       ' → logprob: -4.945898056030273
    4. ' candidates' → logprob: -6.945898056030273
    5. '#' (adapté à ' #') → logprob: -7.195898056030273
    6. '	c' → logprob: -11.320898056030273
    7. '
' → logprob: -11.570898056030273
    8. ' c' → logprob: -11.695898056030273
    9. ' ' → logprob: -11.820898056030273
    10. ' #' → logprob: -11.945898056030273

Token 382: ' reversed' (ID: 57184)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.5277169942855835
    2. 'c' → logprob: -0.9027169942855835
    3. '   ' → logprob: -5.527717113494873
    4. '       ' → logprob: -7.902717113494873
    5. ' c' → logprob: -8.652716636657715
    6. ' reversed' → logprob: -10.902716636657715
    7. '           ' → logprob: -12.027716636657715
    8. '	c' → logprob: -12.152716636657715
    9. ' ' → logprob: -12.277716636657715
    10. ' reverse' → logprob: -12.527716636657715

Token 383: '
' (ID: 198)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.06121412292122841
    2. 'c' → logprob: -3.3112142086029053
    3. '.append' → logprob: -3.9362142086029053
    4. '(tuple' → logprob: -6.561213970184326
    5. ' candidates' → logprob: -7.061213970184326
    6. ' (' → logprob: -7.436213970184326
    7. '_candidates' → logprob: -9.686214447021484
    8. '   ' → logprob: -9.936214447021484
    9. '(reverse' → logprob: -10.061214447021484
    10. '(candidate' → logprob: -10.186214447021484

Token 384: '       ' (ID: 309)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0764627754688263
    2. 'c' → logprob: -3.076462745666504
    3. '.' → logprob: -4.451462745666504
    4. ' candidates' → logprob: -5.576462745666504
    5. '_candidates' → logprob: -5.826462745666504
    6. '   ' → logprob: -6.451462745666504
    7. '       ' → logprob: -6.451462745666504
    8. '.c' → logprob: -6.701462745666504
    9. '.reverse' → logprob: -6.701462745666504
    10. ').' → logprob: -7.201462745666504

Token 385: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0011298557510599494
    2. ' candidates' → logprob: -7.001129627227783
    3. '(c' → logprob: -9.626130104064941
    4. '   ' → logprob: -10.001130104064941
    5. 'tuple' → logprob: -10.251130104064941
    6. '.append' → logprob: -11.001130104064941
    7. ')c' → logprob: -11.501130104064941
    8. ')' → logprob: -11.626130104064941
    9. '.c' → logprob: -11.751130104064941
    10. ' c' → logprob: -11.876130104064941

Token 386: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.676292231422849e-05
    2. '.extend' → logprob: -11.500017166137695
    3. '.' → logprob: -12.125017166137695
    4. '.reverse' → logprob: -14.000017166137695
    5. ').' → logprob: -15.875017166137695
    6. ' .' → logprob: -16.500017166137695
    7. '.app' → logprob: -17.375017166137695
    8. '[::-' → logprob: -17.750017166137695
    9. '.add' → logprob: -18.500017166137695
    10. '.Append' → logprob: -19.125017166137695

Token 387: '(tuple' (ID: 133029)
  Prédit: '(tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.875000953674316
    3. '((' → logprob: -15.000000953674316
    4. 'tuple' → logprob: -16.25
    5. ' (' → logprob: -16.5
    6. ' tuple' → logprob: -18.375
    7. '(
' → logprob: -19.375
    8. '(t' → logprob: -20.0
    9. '   ' → logprob: -23.125
    10. ' ' → logprob: -23.375

Token 388: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.20213331282138824
    2. '(re' → logprob: -1.702133297920227
    3. '((' → logprob: -7.4521331787109375
    4. '([' → logprob: -10.077133178710938
    5. '(rv' → logprob: -10.327133178710938
    6. '([(' → logprob: -10.577133178710938
    7. '((-' → logprob: -11.077133178710938
    8. '([-' → logprob: -11.702133178710938
    9. '(list' → logprob: -11.952133178710938
    10. '(reverse' → logprob: -13.577133178710938

Token 389: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.015399383381009102
    2. 'ev' → logprob: -5.14039945602417
    3. '[::-' → logprob: -5.89039945602417
    4. 're' → logprob: -6.39039945602417
    5. 'ec' → logprob: -6.64039945602417
    6. '(re' → logprob: -7.01539945602417
    7. 'rev' → logprob: -7.51539945602417
    8. '[-' → logprob: -8.140398979187012
    9. 've' → logprob: -8.140398979187012
    10. '(vec' → logprob: -8.265398979187012

Token 390: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007686520111747086
    2. '(re' → logprob: -7.875768661499023
    3. 'c' → logprob: -8.875768661499023
    4. 'cs' → logprob: -9.875768661499023
    5. 'ecs' → logprob: -10.250768661499023
    6. '[::-' → logprob: -10.750768661499023
    7. 'x' → logprob: -10.875768661499023
    8. '(s' → logprob: -11.000768661499023
    9. '(reverse' → logprob: -11.250768661499023
    10. '(r' → logprob: -11.375768661499023

Token 391: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -3.531315314830863e-06
    2. ')[' → logprob: -13.125003814697266
    3. '[' → logprob: -13.750003814697266
    4. ' [' → logprob: -15.250003814697266
    5. '   ' → logprob: -15.875003814697266
    6. '[-' → logprob: -17.000003814697266
    7. '[:' → logprob: -18.125003814697266
    8. '[
' → logprob: -18.875003814697266
    9. '[[' → logprob: -19.000003814697266
    10. ' reversed' → logprob: -19.000003814697266

Token 392: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009539789753034711
    2. '1' → logprob: -7.0009541511535645
    3. ' -' → logprob: -11.125953674316406
    4. ':-' → logprob: -11.625953674316406
    5. '::-' → logprob: -12.000953674316406
    6. '[::-' → logprob: -13.250953674316406
    7. '-
' → logprob: -13.750953674316406
    8. ',' → logprob: -14.375953674316406
    9. 'r' → logprob: -14.375953674316406
    10. '−' → logprob: -14.500953674316406

Token 393: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0002969703928101808
    2. ']))
' → logprob: -8.875296592712402
    3. '])' → logprob: -9.625296592712402
    4. ']' → logprob: -10.375296592712402
    5. '   ' → logprob: -10.875296592712402
    6. '))' → logprob: -11.000296592712402
    7. ' ]' → logprob: -11.250296592712402
    8. '])))' → logprob: -12.750296592712402
    9. ']))

' → logprob: -13.375296592712402
    10. '       ' → logprob: -13.625296592712402

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062685526907444
    2. ' return' → logprob: -3.312685489654541
    3. 'return' → logprob: -3.812685489654541
    4. '
' → logprob: -6.562685489654541
    5. ')' → logprob: -7.937685489654541
    6. '    
' → logprob: -8.9376859664917
    7. '```' → logprob: -8.9376859664917
    8. ' candidates' → logprob: -9.9376859664917
    9. 'def' → logprob: -10.1876859664917
    10. ')
' → logprob: -10.4376859664917

Token 395: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06366429477930069
    2. 'return' → logprob: -3.188664197921753
    3. ' return' → logprob: -4.313664436340332
    4. '
' → logprob: -5.438664436340332
    5. ' candidates' → logprob: -6.938664436340332
    6. ')' → logprob: -7.563664436340332
    7. '    
' → logprob: -7.813664436340332
    8. '_candidates' → logprob: -8.563664436340332
    9. 'c' → logprob: -8.688664436340332
    10. ')
' → logprob: -9.188664436340332

Token 396: ' we' (ID: 581)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.039041582494974136
    2. ' return' → logprob: -3.539041519165039
    3. '   ' → logprob: -4.789041519165039
    4. 'c' → logprob: -7.039041519165039
    5. '
' → logprob: -10.664041519165039
    6. ' candidates' → logprob: -10.914041519165039
    7. ' ' → logprob: -12.414041519165039
    8. '  ' → logprob: -13.914041519165039
    9. '	return' → logprob: -14.039041519165039
    10. '    
' → logprob: -14.289041519165039

Token 397: ' want' (ID: 1682)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04027269408106804
    2. ' return' → logprob: -3.4152727127075195
    3. 'eturn' → logprob: -5.9152727127075195
    4. '   ' → logprob: -6.2902727127075195
    5. '=' → logprob: -6.5402727127075195
    6. ' =' → logprob: -8.04027271270752
    7. 'turn' → logprob: -8.41527271270752
    8. 'm' → logprob: -11.29027271270752
    9. ' ' → logprob: -12.04027271270752
    10. '  ' → logprob: -12.16527271270752

Token 398: ' a' (ID: 261)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.06196768581867218
    2. 'min' → logprob: -2.811967611312866
    3. ' sorted' → logprob: -18.436967849731445
    4. '(min' → logprob: -18.561967849731445
    5. ' return' → logprob: -18.686967849731445
    6. '=min' → logprob: -18.686967849731445
    7. '	min' → logprob: -18.936967849731445
    8. '   ' → logprob: -19.186967849731445
    9. 'max' → logprob: -19.561967849731445
    10. ' max' → logprob: -19.561967849731445

Token 399: ' canonical' (ID: 91323)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00013369438238441944
    2. ' min' → logprob: -9.000133514404297
    3. 'm' → logprob: -12.125133514404297
    4. 'minimal' → logprob: -13.125133514404297
    5. 'sorted' → logprob: -13.750133514404297
    6. '=min' → logprob: -14.250133514404297
    7. '(min' → logprob: -15.000133514404297
    8. 'minimum' → logprob: -15.375133514404297
    9. '_min' → logprob: -15.875133514404297
    10. '
' → logprob: -16.750133514404297

Token 400: ' form' (ID: 1625)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2538919448852539
    2. 'return' → logprob: -1.753891944885254
    3. 'c' → logprob: -4.003891944885254
    4. ' return' → logprob: -4.503891944885254
    5. 'candidate' → logprob: -5.128891944885254
    6. '=min' → logprob: -5.628891944885254
    7. '_candidate' → logprob: -6.003891944885254
    8. '_candidates' → logprob: -6.378891944885254
    9. ' min' → logprob: -6.503891944885254
    10. '_min' → logprob: -6.628891944885254

Token 401: ' which' (ID: 1118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.082666777074337
    2. ' return' → logprob: -3.0826668739318848
    3. 'return' → logprob: -3.4576668739318848
    4. '    
' → logprob: -7.582666873931885
    5. '
' → logprob: -7.832666873931885
    6. ' candidates' → logprob: -7.957666873931885
    7. '_candidates' → logprob: -8.332666397094727
    8. ')' → logprob: -8.957666397094727
    9. ',' → logprob: -9.207666397094727
    10. '<|end|>' → logprob: -9.582666397094727

Token 402: ' ignores' (ID: 119719)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2106248140335083
    2. 'return' → logprob: -2.2106246948242188
    3. ' return' → logprob: -3.2106246948242188
    4. ' =' → logprob: -3.3356246948242188
    5. ' is' → logprob: -5.960624694824219
    6. '=
' → logprob: -7.085624694824219
    7. 'is' → logprob: -7.335624694824219
    8. ':return' → logprob: -9.335624694824219
    9. 's' → logprob: -9.460624694824219
    10. ' =
' → logprob: -10.460624694824219

Token 403: ' translation' (ID: 24005)
  Prédit: ' translation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' translation' → logprob: -0.23708075284957886
    2. 'translation' → logprob: -1.9870808124542236
    3. ' translations' → logprob: -3.2370808124542236
    4. ' order' → logprob: -4.6120805740356445
    5. '_translation' → logprob: -5.2370805740356445
    6. ' the' → logprob: -5.6120805740356445
    7. 'translations' → logprob: -5.8620805740356445
    8. ' lex' → logprob: -5.8620805740356445
    9. ' direction' → logprob: -6.3620805740356445
    10. ' symmetry' → logprob: -7.3620805740356445

Token 404: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9068875908851624
    2. '   ' → logprob: -0.9068875908851624
    3. 'return' → logprob: -2.0318875312805176
    4. ' return' → logprob: -3.2818875312805176
    5. '    
' → logprob: -4.531887531280518
    6. ')' → logprob: -5.656887531280518
    7. ',' → logprob: -5.906887531280518
    8. ' 
' → logprob: -6.031887531280518
    9. ')
' → logprob: -6.156887531280518
    10. '  
' → logprob: -7.656887531280518

Token 405: 'already' (ID: 89136)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4378190040588379
    2. ' min' → logprob: -1.687819004058838
    3. ' return' → logprob: -2.562819004058838
    4. 'return' → logprob: -3.187819004058838
    5. '#' → logprob: -3.812819004058838
    6. 'vec' → logprob: -4.812819004058838
    7. ')' → logprob: -4.937819004058838
    8. ')
' → logprob: -5.187819004058838
    9. '   ' → logprob: -6.437819004058838
    10. 'def' → logprob: -7.562819004058838

Token 406: ' encoded' (ID: 41096)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.41480377316474915
    2. 'handled' → logprob: -1.4148037433624268
    3. 'done' → logprob: -3.2898037433624268
    4. 'encoded' → logprob: -3.7898037433624268
    5. 'covered' → logprob: -4.164803981781006
    6. 'account' → logprob: -4.539803981781006
    7. 'consider' → logprob: -5.414803981781006
    8. 'included' → logprob: -6.039803981781006
    9. 'accounts' → logprob: -7.789803981781006
    10. '   ' → logprob: -7.789803981781006

Token 407: ' in' (ID: 306)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.7943540215492249
    2. ')' → logprob: -0.9193540215492249
    3. ' as' → logprob: -2.66935396194458
    4. 'as' → logprob: -2.79435396194458
    5. 'in' → logprob: -4.91935396194458
    6. ' in' → logprob: -5.66935396194458
    7. '_vec' → logprob: -5.79435396194458
    8. 'vectors' → logprob: -6.54435396194458
    9. ' )' → logprob: -7.29435396194458
    10. ' vec' → logprob: -7.54435396194458

Token 408: ' relative' (ID: 15001)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.020510122179985046
    2. 'the' → logprob: -4.520510196685791
    3. ' vec' → logprob: -4.895510196685791
    4. ' the' → logprob: -6.520510196685791
    5. 'vectors' → logprob: -8.770509719848633
    6. 'vector' → logprob: -9.770509719848633
    7. 'len' → logprob: -10.020509719848633
    8. 'points' → logprob: -10.020509719848633
    9. 'encode' → logprob: -10.770509719848633
    10. ' vectors' → logprob: -10.770509719848633

Token 409: ' vectors' (ID: 52254)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.927658200263977
    2. 'positions' → logprob: -1.552658200263977
    3. ' moves' → logprob: -2.1776580810546875
    4. ' positions' → logprob: -2.4276580810546875
    5. 'vectors' → logprob: -2.8026580810546875
    6. ' vectors' → logprob: -3.1776580810546875
    7. 'points' → logprob: -3.6776580810546875
    8. 'coordinates' → logprob: -4.1776580810546875
    9. 'vec' → logprob: -4.5526580810546875
    10. ' movements' → logprob: -4.5526580810546875

Token 410: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17790056765079498
    2. ')
' → logprob: -1.9279005527496338
    3. '   ' → logprob: -4.052900791168213
    4. ' )' → logprob: -10.177900314331055
    5. 'return' → logprob: -10.177900314331055
    6. ' )
' → logprob: -10.427900314331055
    7. ')return' → logprob: -10.927900314331055
    8. ',' → logprob: -11.927900314331055
    9. ' ' → logprob: -12.427900314331055
    10. ')

' → logprob: -13.177900314331055

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04415184259414673
    2. 'return' → logprob: -3.294151782989502
    3. ' return' → logprob: -5.419151782989502
    4. '
' → logprob: -6.419151782989502
    5. '    
' → logprob: -10.91915225982666
    6. ')' → logprob: -12.54415225982666
    7. 'c' → logprob: -12.66915225982666
    8. ' candidates' → logprob: -13.16915225982666
    9. '```' → logprob: -13.91915225982666
    10. ')
' → logprob: -14.29415225982666

Token 412: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6352698802947998
    2. '   ' → logprob: -0.8852698802947998
    3. ' return' → logprob: -2.8852698802948
    4. '
' → logprob: -6.385270118713379
    5. 'c' → logprob: -10.010270118713379
    6. ' candidates' → logprob: -11.135270118713379
    7. '    
' → logprob: -11.635270118713379
    8. ')' → logprob: -12.885270118713379
    9. ' ' → logprob: -13.635270118713379
    10. '```' → logprob: -13.760270118713379

Token 413: ' lex' (ID: 37772)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024061162024736404
    2. '   ' → logprob: -4.02406120300293
    3. ' return' → logprob: -5.27406120300293
    4. '
' → logprob: -7.27406120300293
    5. 'c' → logprob: -9.52406120300293
    6. '    
' → logprob: -13.77406120300293
    7. ' candidates' → logprob: -14.14906120300293
    8. ' ' → logprob: -14.39906120300293
    9. 'candidate' → logprob: -14.64906120300293
    10. 'cand' → logprob: -14.77406120300293

Token 414: ' smallest' (ID: 42173)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -1.1291512250900269
    2. ' =' → logprob: -1.5041512250900269
    3. '=' → logprob: -1.8791512250900269
    4. 'return' → logprob: -2.2541513442993164
    5. '   ' → logprob: -2.7541513442993164
    6. 'c' → logprob: -3.5041513442993164
    7. ' return' → logprob: -3.8791513442993164
    8. 'min' → logprob: -4.004151344299316
    9. 'eturn' → logprob: -4.379151344299316
    10. '
' → logprob: -4.504151344299316

Token 415: ' used' (ID: 2061)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3129650056362152
    2. ' return' → logprob: -1.5629650354385376
    3. 'min' → logprob: -3.437964916229248
    4. '(min' → logprob: -4.687964916229248
    5. ' min' → logprob: -5.187964916229248
    6. '   ' → logprob: -5.437964916229248
    7. ',' → logprob: -6.687964916229248
    8. ')' → logprob: -6.687964916229248
    9. '=min' → logprob: -6.687964916229248
    10. 'sorted' → logprob: -7.312964916229248

Token 416: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5480597019195557
    2. '   ' → logprob: -1.1730597019195557
    3. ' return' → logprob: -2.5480597019195557
    4. '
' → logprob: -3.4230597019195557
    5. ')' → logprob: -7.173059463500977
    6. ')
' → logprob: -8.298059463500977
    7. ' candidates' → logprob: -8.923059463500977
    8. '    
' → logprob: -9.048059463500977
    9. '_candidates' → logprob: -9.298059463500977
    10. '<|end|>' → logprob: -9.298059463500977

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4818631708621979
    2. 'return' → logprob: -0.9818631410598755
    3. '
' → logprob: -5.231863021850586
    4. ' return' → logprob: -6.106863021850586
    5. '    
' → logprob: -8.856863021850586
    6. '```' → logprob: -11.231863021850586
    7. ':return' → logprob: -11.356863021850586
    8. ',' → logprob: -12.731863021850586
    9. '  
' → logprob: -13.106863021850586
    10. ')' → logprob: -13.356863021850586

Token 418: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007306072395294905
    2. '   ' → logprob: -5.007306098937988
    3. ' return' → logprob: -7.507306098937988
    4. '
' → logprob: -10.132306098937988
    5. '    
' → logprob: -14.132306098937988
    6. '	return' → logprob: -15.257306098937988
    7. '```' → logprob: -15.382306098937988
    8. ':return' → logprob: -15.507306098937988
    9. 'c' → logprob: -16.507305145263672
    10. '  ' → logprob: -16.632305145263672

Token 419: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6931471824645996
    2. 'min' → logprob: -0.6931471824645996
    3. '(min' → logprob: -17.068147659301758
    4. 'sorted' → logprob: -18.443147659301758
    5. '	min' → logprob: -18.818147659301758
    6. ' sorted' → logprob: -20.568147659301758
    7. '=min' → logprob: -20.943147659301758
    8. ' ' → logprob: -21.318147659301758
    9. ',min' → logprob: -21.443147659301758
    10. '_min' → logprob: -21.693147659301758

Token 420: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.625
    3. '(candidate' → logprob: -18.625
    4. 'c' → logprob: -19.0
    5. ' (' → logprob: -19.375
    6. '(tuple' → logprob: -19.75
    7. '©' → logprob: -20.5
    8. '(
' → logprob: -21.25
    9. '`' → logprob: -21.75
    10. '((' → logprob: -21.875

Token 421: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -9.253090865968261e-06
    2. 'and' → logprob: -11.875009536743164
    3. 'andidate' → logprob: -13.625009536743164
    4. 'c' → logprob: -15.125009536743164
    5. '{' → logprob: -15.500009536743164
    6. '[' → logprob: -15.500009536743164
    7. 'andid' → logprob: -16.125009536743164
    8. 'andi' → logprob: -16.375009536743164
    9. '_candidates' → logprob: -16.875009536743164
    10. '(' → logprob: -17.375009536743164

Token 422: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. '())' → logprob: -12.375008583068848
    3. ')
' → logprob: -12.875008583068848
    4. ' )' → logprob: -13.750008583068848
    5. '()' → logprob: -14.250008583068848
    6. '   ' → logprob: -15.125008583068848
    7. '))' → logprob: -16.500009536743164
    8. ')return' → logprob: -17.000009536743164
    9. ')}' → logprob: -17.750009536743164
    10. ' ' → logprob: -18.125009536743164

Token 423: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5889740586280823
    2. '<|end|>' → logprob: -0.8389740586280823
    3. '
' → logprob: -4.5889739990234375
    4. '<|end|>' → logprob: -6.9639739990234375
    5. '#' → logprob: -7.3389739990234375
    6. '```' → logprob: -7.4639739990234375
    7. '

' → logprob: -8.713973999023438
    8. '\' → logprob: -9.463973999023438
    9. 'shape' → logprob: -9.838973999023438
    10. ')' → logprob: -9.963973999023438

Token 424: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07665202766656876
    2. 'main' → logprob: -2.7016520500183105
    3. ' find' → logprob: -6.3266520500183105
    4. ' read' → logprob: -7.0766520500183105
    5. ' solve' → logprob: -7.5766520500183105
    6. ' shape' → logprob: -7.5766520500183105
    7. ' unique' → logprob: -7.7016520500183105
    8. ' shapes' → logprob: -8.076651573181152
    9. ' normalize' → logprob: -8.076651573181152
    10. ' identify' → logprob: -8.326651573181152

Token 425: '_points' (ID: 30070)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.12470121681690216
    2. 'line' → logprob: -2.3747012615203857
    3. '_points' → logprob: -4.499701023101807
    4. '_input' → logprob: -5.249701023101807
    5. '_lines' → logprob: -5.749701023101807
    6. '()' → logprob: -6.374701023101807
    7. '_' → logprob: -6.499701023101807
    8. '_point' → logprob: -7.374701023101807
    9. 'lines' → logprob: -8.374701499938965
    10. 'points' → logprob: -9.374701499938965

Token 426: '(m' (ID: 2145)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.038095541298389435
    2. '():
' → logprob: -3.288095474243164
    3. ' ():' → logprob: -10.038095474243164
    4. '()' → logprob: -12.038095474243164
    5. '():

' → logprob: -13.288095474243164
    6. '():
' → logprob: -13.663095474243164
    7. '(line' → logprob: -14.663095474243164
    8. '(' → logprob: -15.288095474243164
    9. '();' → logprob: -15.538095474243164
    10. '(lines' → logprob: -15.663095474243164

Token 427: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2988753020763397
    2. '):
' → logprob: -2.173875331878662
    3. 'ap' → logprob: -2.798875331878662
    4. 'in' → logprob: -4.173875331878662
    5. 'ethod' → logprob: -4.423875331878662
    6. '=' → logprob: -4.673875331878662
    7. '=sys' → logprob: -4.673875331878662
    8. '=int' → logprob: -4.923875331878662
    9. '()):
' → logprob: -5.048875331878662
    10. 'int' → logprob: -6.048875331878662

Token 428: ' input' (ID: 3422)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.5687732696533203
    2. 'lines' → logprob: -2.3187732696533203
    3. 'input' → logprob: -2.3187732696533203
    4. ')' → logprob: -2.6937732696533203
    5. ' input' → logprob: -2.6937732696533203
    6. '):' → logprob: -2.9437732696533203
    7. 'file' → logprob: -4.94377326965332
    8. 'points' → logprob: -4.94377326965332
    9. ' file' → logprob: -5.06877326965332
    10. '):
' → logprob: -5.19377326965332

Token 429: '_iter' (ID: 27043)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38458192348480225
    2. '()' → logprob: -1.5095819234848022
    3. '):
' → logprob: -2.509582042694092
    4. '=sys' → logprob: -5.134582042694092
    5. '()):
' → logprob: -5.509582042694092
    6. ')' → logprob: -5.634582042694092
    7. '=' → logprob: -6.884582042694092
    8. '():' → logprob: -7.134582042694092
    9. '():
' → logprob: -7.509582042694092
    10. '.readline' → logprob: -7.884582042694092

Token 430: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07901184260845184
    2. '):
' → logprob: -2.579011917114258
    3. ')' → logprob: -9.204011917114258
    4. '):
' → logprob: -11.329011917114258
    5. '):

' → logprob: -12.829011917114258
    6. ':' → logprob: -13.079011917114258
    7. ',' → logprob: -13.704011917114258
    8. ')):' → logprob: -14.329011917114258
    9. ' ):' → logprob: -14.829011917114258
    10. '=' → logprob: -14.829011917114258

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013766174204647541
    2. '	points' → logprob: -5.013766288757324
    3. '(points' → logprob: -5.638766288757324
    4. ' points' → logprob: -6.638766288757324
    5. 'points' → logprob: -7.138766288757324
    6. ':' → logprob: -7.513766288757324
    7. '_points' → logprob: -8.763766288757324
    8. '```' → logprob: -9.263766288757324
    9. '	lines' → logprob: -9.763766288757324
    10. '<|end|>' → logprob: -9.888766288757324

Token 432: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.5864611864089966
    2. 'points' (adapté à ' points') → logprob: -0.8364611864089966
    3. '   ' → logprob: -4.586461067199707
    4. '	points' → logprob: -8.836461067199707
    5. '(points' → logprob: -10.336461067199707
    6. 'result' → logprob: -10.586461067199707
    7. 'for' → logprob: -11.086461067199707
    8. 'pts' → logprob: -11.211461067199707
    9. '_points' → logprob: -11.461461067199707
    10. ' for' → logprob: -11.836461067199707

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014195355586707592
    2. ' =' → logprob: -4.264195442199707
    3. '   ' → logprob: -10.889195442199707
    4. '=[]' → logprob: -11.889195442199707
    5. '=
' → logprob: -12.764195442199707
    6. '=[]
' → logprob: -12.764195442199707
    7. ' =
' → logprob: -15.639195442199707
    8. ' ' → logprob: -16.38919448852539
    9. 'for' → logprob: -16.51419448852539
    10. ',' → logprob: -17.13919448852539

Token 434: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5770768523216248
    2. '[]
' → logprob: -1.3270769119262695
    3. '[next' → logprob: -2.0770769119262695
    4. '[]' → logprob: -4.3270769119262695
    5. '[m' → logprob: -4.5770769119262695
    6. '[input' → logprob: -4.5770769119262695
    7. ' [' → logprob: -5.3270769119262695
    8. '[p' → logprob: -6.3270769119262695
    9. '[array' → logprob: -6.7020769119262695
    10. '[list' → logprob: -6.9520769119262695

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025460533797740936
    2. 'for' → logprob: -4.150460720062256
    3. ' for' → logprob: -4.775460720062256
    4. '    
' → logprob: -7.400460720062256
    5. '	for' → logprob: -8.150460243225098
    6. '
' → logprob: -10.525460243225098
    7. '	
' → logprob: -12.400460243225098
    8. '       ' → logprob: -12.650460243225098
    9. '    ' → logprob: -13.275460243225098
    10. ',' → logprob: -13.525460243225098

Token 436: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00010437761375214905
    2. ' for' → logprob: -9.250103950500488
    3. '   ' → logprob: -11.750103950500488
    4. '
' → logprob: -15.375103950500488
    5. '	for' → logprob: -15.625103950500488
    6. '    
' → logprob: -18.125104904174805
    7. 'while' → logprob: -18.875104904174805
    8. '_' → logprob: -20.125104904174805
    9. '_for' → logprob: -20.125104904174805
    10. 'line' → logprob: -22.125104904174805

Token 437: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014169503934681416
    2. ' _' → logprob: -4.264169692993164
    3. '_line' → logprob: -12.764169692993164
    4. '_i' → logprob: -13.014169692993164
    5. '_input' → logprob: -15.639169692993164
    6. '_

' → logprob: -15.639169692993164
    7. '_
' → logprob: -15.764169692993164
    8. '_=' → logprob: -16.389169692993164
    9. 'i' → logprob: -16.514169692993164
    10. '_in' → logprob: -16.639169692993164

Token 438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004998935619369149
    2. 'in' → logprob: -7.625499725341797
    3. ' ' → logprob: -11.875499725341797
    4. 'range' → logprob: -13.375499725341797
    5. '  ' → logprob: -13.875499725341797
    6. 'import' → logprob: -14.125499725341797
    7. 'input' → logprob: -14.750499725341797
    8. '	in' → logprob: -14.875499725341797
    9. '   ' → logprob: -16.000499725341797
    10. '```' → logprob: -16.500499725341797

Token 439: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0012946429196745157
    2. ' range' → logprob: -6.7512946128845215
    3. 'input' → logprob: -9.00129508972168
    4. 'm' → logprob: -15.25129508972168
    5. '	range' → logprob: -15.37629508972168
    6. '   ' → logprob: -15.62629508972168
    7. ' ' → logprob: -15.75129508972168
    8. '(range' → logprob: -15.75129508972168
    9. ' input' → logprob: -15.75129508972168
    10. '  ' → logprob: -16.75129508972168

Token 440: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.477481871843338
    2. 'm' → logprob: -0.9774818420410156
    3. ' m' → logprob: -5.727481842041016
    4. ' (' → logprob: -9.352481842041016
    5. '(' → logprob: -9.977481842041016
    6. '	m' → logprob: -12.727481842041016
    7. 'range' → logprob: -12.852481842041016
    8. '(
' → logprob: -12.852481842041016
    9. '   ' → logprob: -13.977481842041016
    10. ' range' → logprob: -14.852481842041016

Token 441: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4291423559188843
    2. '):' → logprob: -1.0541423559188843
    3. '   ' → logprob: -8.054141998291016
    4. ')' → logprob: -10.304141998291016
    5. '):
' → logprob: -10.554141998291016
    6. ' ):
' → logprob: -10.679141998291016
    7. ' ):' → logprob: -11.054141998291016
    8. ':' → logprob: -11.179141998291016
    9. ':
' → logprob: -12.804141998291016
    10. ',' → logprob: -13.054141998291016

Token 442: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.628384530544281
    2. ' line' → logprob: -1.3783845901489258
    3. '       ' → logprob: -1.6283845901489258
    4. ' points' → logprob: -4.628384590148926
    5. 'line' → logprob: -5.378384590148926
    6. 'points' → logprob: -5.753384590148926
    7. ' lines' → logprob: -8.503384590148926
    8. ',' → logprob: -9.503384590148926
    9. ' s' → logprob: -9.503384590148926
    10. ' x' → logprob: -9.878384590148926

Token 443: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.024323435500264168
    2. 'line' → logprob: -4.024323463439941
    3. ' x' → logprob: -5.399323463439941
    4. ' line' → logprob: -6.649323463439941
    5. '   ' → logprob: -8.274323463439941
    6. 'points' → logprob: -9.649323463439941
    7. ' points' → logprob: -11.774323463439941
    8. 'xy' → logprob: -12.774323463439941
    9. 's' → logprob: -12.899323463439941
    10. 'l' → logprob: -12.899323463439941

Token 444: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10046093165874481
    2. ',y' → logprob: -2.350461006164551
    3. ' ,' → logprob: -8.35046100616455
    4. ',
' → logprob: -12.35046100616455
    5. 'y' → logprob: -12.72546100616455
    6. ',Y' → logprob: -13.10046100616455
    7. ',int' → logprob: -13.72546100616455
    8. ' y' → logprob: -13.97546100616455
    9. ',user' → logprob: -13.97546100616455
    10. ',s' → logprob: -14.35046100616455

Token 445: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133038878440857
    2. ' =' → logprob: -1.3133039474487305
    3. ',' → logprob: -10.81330394744873
    4. '=input' → logprob: -11.56330394744873
    5. '=int' → logprob: -12.31330394744873
    6. '=line' → logprob: -12.43830394744873
    7. '   ' → logprob: -13.06330394744873
    8. '=
' → logprob: -14.81330394744873
    9. ' =
' → logprob: -15.43830394744873
    10. '	' → logprob: -15.43830394744873

Token 446: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.16048751771450043
    2. ' map' → logprob: -1.9104875326156616
    3. 'next' → logprob: -8.410487174987793
    4. ' next' → logprob: -10.160487174987793
    5. '   ' → logprob: -14.035487174987793
    6. 'input' → logprob: -14.160487174987793
    7. 'int' → logprob: -14.660487174987793
    8. ' input' → logprob: -15.910487174987793
    9. '	map' → logprob: -16.78548812866211
    10. 'list' → logprob: -17.78548812866211

Token 447: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.020379772409796715
    2. 'int' → logprob: -4.520379543304443
    3. 'next' → logprob: -5.145379543304443
    4. '(next' → logprob: -5.895379543304443
    5. '(' → logprob: -7.895379543304443
    6. '(str' → logprob: -9.020380020141602
    7. ' next' → logprob: -9.270380020141602
    8. ' (' → logprob: -10.145380020141602
    9. '   ' → logprob: -10.145380020141602
    10. ' int' → logprob: -10.770380020141602

Token 448: ',next' (ID: 129376)
  Prédit: ',next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',next' → logprob: -0.4059806168079376
    2. ',' → logprob: -1.6559805870056152
    3. 'next' → logprob: -2.1559805870056152
    4. '(next' → logprob: -3.6559805870056152
    5. ' next' → logprob: -7.280980587005615
    6. ',input' → logprob: -7.780980587005615
    7. ' ,' → logprob: -10.780981063842773
    8. 'input' → logprob: -12.405981063842773
    9. '[next' → logprob: -12.780981063842773
    10. '   ' → logprob: -12.905981063842773

Token 449: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.1875571544806007e-05
    2. 'input' → logprob: -11.625011444091797
    3. ' (' → logprob: -13.500011444091797
    4. '(' → logprob: -13.875011444091797
    5. ' input' → logprob: -15.000011444091797
    6. '=input' → logprob: -15.875011444091797
    7. ',input' → logprob: -16.375011444091797
    8. ')' → logprob: -18.875011444091797
    9. '(
' → logprob: -19.125011444091797
    10. '(output' → logprob: -20.000011444091797

Token 450: '_iter' (ID: 27043)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.0445127372804563e-05
    2. ' (' → logprob: -12.62501049041748
    3. '=input' → logprob: -12.87501049041748
    4. 'input' → logprob: -13.00001049041748
    5. ',input' → logprob: -13.75001049041748
    6. '(' → logprob: -13.87501049041748
    7. '(
' → logprob: -16.250009536743164
    8. ' input' → logprob: -17.000009536743164
    9. ')(' → logprob: -17.000009536743164
    10. ')' → logprob: -17.000009536743164

Token 451: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3509182035923004
    2. ').' → logprob: -1.350918173789978
    3. '()).' → logprob: -3.3509182929992676
    4. ')' → logprob: -6.975918292999268
    5. '()' → logprob: -7.475918292999268
    6. '())' → logprob: -9.10091781616211
    7. ' ).' → logprob: -9.72591781616211
    8. '(' → logprob: -9.85091781616211
    9. '))' → logprob: -9.97591781616211
    10. '()))' → logprob: -9.97591781616211

Token 452: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16022585332393646
    2. 'split' → logprob: -1.9102258682250977
    3. ' strip' → logprob: -13.660225868225098
    4. '(strip' → logprob: -15.660225868225098
    5. 'rstrip' → logprob: -15.910225868225098
    6. ' split' → logprob: -16.03522491455078
    7. '(split' → logprob: -16.41022491455078
    8. '.strip' → logprob: -17.03522491455078
    9. 'str' → logprob: -19.91022491455078
    10. '.split' → logprob: -20.03522491455078

Token 453: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0005001319805160165
    2. '())
' → logprob: -8.375499725341797
    3. '()' → logprob: -8.750499725341797
    4. '()))' → logprob: -9.250499725341797
    5. ')' → logprob: -11.875499725341797
    6. ' ())' → logprob: -12.625499725341797
    7. '(' → logprob: -12.875499725341797
    8. '().' → logprob: -13.875499725341797
    9. '()))
' → logprob: -14.375499725341797
    10. '('' → logprob: -16.000499725341797

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024420046247541904
    2. ',' → logprob: -6.252441883087158
    3. '   ' → logprob: -8.627442359924316
    4. '<|end|>' → logprob: -9.252442359924316
    5. ' points' → logprob: -10.127442359924316
    6. 'points' → logprob: -10.127442359924316
    7. ')' → logprob: -10.252442359924316
    8. '	' → logprob: -10.377442359924316
    9. '        
' → logprob: -10.877442359924316
    10. '	   ' → logprob: -11.252442359924316

Token 455: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.03645848482847214
    2. ' points' → logprob: -3.5364584922790527
    3. '       ' → logprob: -5.036458492279053
    4. '   ' → logprob: -9.036458015441895
    5. '	points' → logprob: -9.661458015441895
    6. '(points' → logprob: -12.411458015441895
    7. '
' → logprob: -14.036458015441895
    8. '.points' → logprob: -14.661458015441895
    9. '_points' → logprob: -14.911458015441895
    10. '        
' → logprob: -15.411458015441895

Token 456: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3782830137643032e-05
    2. '.' → logprob: -11.25001335144043
    3. '.app' → logprob: -15.50001335144043
    4. ' .' → logprob: -15.75001335144043
    5. 'append' → logprob: -16.00001335144043
    6. '.extend' → logprob: -16.00001335144043
    7. '.Append' → logprob: -17.12501335144043
    8. ').' → logprob: -17.25001335144043
    9. '.push' → logprob: -17.37501335144043
    10. '.ap' → logprob: -17.50001335144043

Token 457: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015191456768661737
    2. '(' → logprob: -6.501519203186035
    3. '(x' → logprob: -11.001519203186035
    4. ' ((' → logprob: -17.12651824951172
    5. ' (' → logprob: -17.50151824951172
    6. '(
' → logprob: -18.62651824951172
    7. '[(' → logprob: -20.37651824951172
    8. ' ' → logprob: -21.00151824951172
    9. '([' → logprob: -21.12651824951172
    10. '(("' → logprob: -21.62651824951172

Token 458: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6240566083070007e-06
    2. ' x' → logprob: -13.375001907348633
    3. '(x' → logprob: -19.375001907348633
    4. ')x' → logprob: -19.875001907348633
    5. '	x' → logprob: -21.000001907348633
    6. '   ' → logprob: -21.000001907348633
    7. '
' → logprob: -22.250001907348633
    8. ' ' → logprob: -22.250001907348633
    9. '"x' → logprob: -22.875001907348633
    10. ')' → logprob: -23.125001907348633

Token 459: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.576019823551178
    2. ',' → logprob: -0.826019823551178
    3. ' ,' → logprob: -9.826020240783691
    4. ',
' → logprob: -10.576020240783691
    5. ',Y' → logprob: -15.576020240783691
    6. ',x' → logprob: -15.701020240783691
    7. 'y' → logprob: -16.326019287109375
    8. ',\
' → logprob: -16.451019287109375
    9. '<|end|>' → logprob: -17.076019287109375
    10. ',user' → logprob: -17.076019287109375

Token 460: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014346358366310596
    2. ')' → logprob: -6.751434803009033
    3. '))
' → logprob: -8.251434326171875
    4. ' ))' → logprob: -13.251434326171875
    5. ')))' → logprob: -14.251434326171875
    6. ')
' → logprob: -14.626434326171875
    7. '   ' → logprob: -14.876434326171875
    8. '));' → logprob: -16.126434326171875
    9. '))

' → logprob: -16.751434326171875
    10. '),' → logprob: -17.001434326171875

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029010437428951263
    2. 'return' → logprob: -5.877901077270508
    3. ' return' → logprob: -9.377901077270508
    4. '```' → logprob: -12.752901077270508
    5. '	return' → logprob: -12.877901077270508
    6. '
' → logprob: -12.877901077270508
    7. '<|end|>' → logprob: -13.252901077270508
    8. '    
' → logprob: -14.127901077270508
    9. 'def' → logprob: -15.377901077270508
    10. ':return' → logprob: -15.377901077270508

Token 462: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4869479835033417
    2. 'return' (adapté à ' return') → logprob: -0.9869480133056641
    3. ' return' → logprob: -4.361948013305664
    4. '	return' → logprob: -11.486948013305664
    5. '
' → logprob: -11.611948013305664
    6. ' ' → logprob: -12.486948013305664
    7. '    
' → logprob: -12.736948013305664
    8. 'import' → logprob: -13.486948013305664
    9. 'def' → logprob: -13.486948013305664
    10. ':return' → logprob: -13.486948013305664

Token 463: ' points' (ID: 5571)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.7759585380554199
    2. 'points' → logprob: -0.9009585380554199
    3. ' normalize' → logprob: -2.65095853805542
    4. ' points' → logprob: -2.77595853805542
    5. '(points' → logprob: -7.90095853805542
    6. '(normal' → logprob: -8.775959014892578
    7. 'normalized' → logprob: -9.650959014892578
    8. 'normal' → logprob: -10.400959014892578
    9. '	points' → logprob: -11.525959014892578
    10. ' normalized' → logprob: -11.650959014892578

Token 464: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02778593823313713
    2. '<|end|>' → logprob: -4.027785778045654
    3. '
' → logprob: -4.777785778045654
    4. '

' → logprob: -6.902785778045654
    5. '```' → logprob: -9.527786254882812
    6. '<|end|>' → logprob: -9.777786254882812
    7. '  
' → logprob: -11.277786254882812
    8. ' def' → logprob: -11.652786254882812
    9. '    
' → logprob: -11.777786254882812
    10. '#' → logprob: -13.152786254882812

Token 465: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.282920129597187e-05
    2. 'for' → logprob: -11.500012397766113
    3. '```' → logprob: -13.750012397766113
    4. '
' → logprob: -14.500012397766113
    5. '#' → logprob: -15.000012397766113
    6. 'if' → logprob: -15.250012397766113
    7. ' def' → logprob: -15.500012397766113
    8. 'data' → logprob: -16.37501335144043
    9. '    
' → logprob: -16.87501335144043
    10. '  
' → logprob: -17.25001335144043

Token 466: ' same' (ID: 2684)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04325471445918083
    2. 'main' → logprob: -3.1682546138763428
    3. ' solve' → logprob: -8.543254852294922
    4. 'solve' → logprob: -10.543254852294922
    5. ' process' → logprob: -11.543254852294922
    6. ' shape' → logprob: -12.418254852294922
    7. ' parse' → logprob: -12.543254852294922
    8. ' shapes' → logprob: -13.168254852294922
    9. 'def' → logprob: -13.293254852294922
    10. ' normalize' → logprob: -13.418254852294922

Token 467: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -0.0003087678924202919
    2. '_shapes' → logprob: -8.625308990478516
    3. '_line' → logprob: -9.875308990478516
    4. '_' → logprob: -10.500308990478516
    5. '_area' → logprob: -11.500308990478516
    6. '_points' → logprob: -11.625308990478516
    7. '_code' → logprob: -12.250308990478516
    8. '_size' → logprob: -12.375308990478516
    9. '(_' → logprob: -12.875308990478516
    10. '(' → logprob: -13.000308990478516

Token 468: '(template' (ID: 61942)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.05271286517381668
    2. '(vec' → logprob: -3.052712917327881
    3. '(' → logprob: -6.302712917327881
    4. '(p' → logprob: -7.177712917327881
    5. '(a' → logprob: -8.052712440490723
    6. '(s' → logprob: -8.302712440490723
    7. '(lines' → logprob: -8.427712440490723
    8. '(parts' → logprob: -8.677712440490723
    9. ' (' → logprob: -8.802712440490723
    10. '(m' → logprob: -8.927712440490723

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.861150860786438
    2. '_vec' → logprob: -0.986150860786438
    3. '_points' → logprob: -2.1111507415771484
    4. 's' → logprob: -3.1111507415771484
    5. 'vec' → logprob: -4.611150741577148
    6. '(points' → logprob: -4.611150741577148
    7. '_vectors' → logprob: -5.486150741577148
    8. 'points' → logprob: -5.486150741577148
    9. '1' → logprob: -6.361150741577148
    10. '_,' → logprob: -6.611150741577148

Token 470: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -1.1573749780654907
    2. ' candidate' → logprob: -1.2823749780654907
    3. 'target' → logprob: -2.782374858856201
    4. ' test' → logprob: -2.782374858856201
    5. 'shape' → logprob: -2.907374858856201
    6. 'test' → logprob: -3.407374858856201
    7. ' target' → logprob: -3.407374858856201
    8. 'query' → logprob: -3.532374858856201
    9. ' shape' → logprob: -3.657374858856201
    10. ' query' → logprob: -4.032374858856201

Token 471: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35572704672813416
    2. '):' → logprob: -1.2307270765304565
    3. '_vec' → logprob: -5.230727195739746
    4. '):
' → logprob: -7.355727195739746
    5. '_points' → logprob: -7.855727195739746
    6. '_' → logprob: -7.980727195739746
    7. 'vec' → logprob: -8.230727195739746
    8. '):

' → logprob: -9.480727195739746
    9. '_vectors' → logprob: -9.855727195739746
    10. ' ):
' → logprob: -10.605727195739746

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002875569916795939
    2. '    
' → logprob: -8.875288009643555
    3. 'vec' → logprob: -9.625288009643555
    4. '
' → logprob: -10.125288009643555
    5. 'def' → logprob: -11.375288009643555
    6. 'encoded' → logprob: -11.375288009643555
    7. 'tokens' → logprob: -12.625288009643555
    8. ' vec' → logprob: -12.875288009643555
    9. '```' → logprob: -13.000288009643555
    10. '(vec' → logprob: -13.250288009643555

Token 473: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023085197433829308
    2. ' t' → logprob: -4.898085117340088
    3. 't' → logprob: -5.773085117340088
    4. ' template' → logprob: -5.898085117340088
    5. 'template' → logprob: -6.023085117340088
    6. ' tmpl' → logprob: -6.523085117340088
    7. ' vec' → logprob: -7.023085117340088
    8. 'vec' → logprob: -7.398085117340088
    9. ' templ' → logprob: -7.523085117340088
    10. ' tpl' → logprob: -7.648085117340088

Token 474: ' len' (ID: 4631)
  Prédit: ' encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encode' → logprob: -0.651036262512207
    2. ' canonical' → logprob: -1.026036262512207
    3. ' not' → logprob: -3.151036262512207
    4. 'encode' → logprob: -3.276036262512207
    5. 'canonical' → logprob: -3.901036262512207
    6. ' normalize' → logprob: -4.276036262512207
    7. 'normalize' → logprob: -6.401036262512207
    8. ' template' → logprob: -6.651036262512207
    9. ' len' → logprob: -6.651036262512207
    10. '   ' → logprob: -8.026036262512207

Token 475: '(template' (ID: 61942)
  Prédit: '(template'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(template' → logprob: -0.0022039050236344337
    2. '(candidate' → logprob: -6.127203941345215
    3. 'template' → logprob: -11.002203941345215
    4. '(' → logprob: -13.752203941345215
    5. 'candidate' → logprob: -15.002203941345215
    6. ' (' → logprob: -15.752203941345215
    7. '(c' → logprob: -15.752203941345215
    8. '   ' → logprob: -15.752203941345215
    9. '	template' → logprob: -16.3772029876709
    10. ' template' → logprob: -16.7522029876709

Token 476: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006332940887659788
    2. ')!=' → logprob: -5.256332874298096
    3. 'vec' → logprob: -7.131332874298096
    4. ' )' → logprob: -9.006333351135254
    5. '!=' → logprob: -9.381333351135254
    6. '_vec' → logprob: -10.006333351135254
    7. '   ' → logprob: -10.881333351135254
    8. ')==' → logprob: -12.006333351135254
    9. ' !=' → logprob: -12.131333351135254
    10. '.vec' → logprob: -12.381333351135254

Token 477: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07099597901105881
    2. ' !=' → logprob: -2.695996046066284
    3. '()!=' → logprob: -7.570995807647705
    4. ')!=' → logprob: -8.070996284484863
    5. '==' → logprob: -9.570996284484863
    6. 'vec' → logprob: -9.945996284484863
    7. ')' → logprob: -9.945996284484863
    8. '   ' → logprob: -10.445996284484863
    9. '!=(' → logprob: -11.695996284484863
    10. ']!=' → logprob: -11.820996284484863

Token 478: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.003636415582150221
    2. ' len' → logprob: -5.628636360168457
    3. '   ' → logprob: -11.003636360168457
    4. 'candidate' → logprob: -11.003636360168457
    5. '(len' → logprob: -13.503636360168457
    6. '  ' → logprob: -15.003636360168457
    7. '	len' → logprob: -15.128636360168457
    8. ' candidate' → logprob: -15.128636360168457
    9. '    ' → logprob: -15.253636360168457
    10. ' ' → logprob: -16.003637313842773

Token 479: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.000556012790184468
    2. 'candidate' → logprob: -7.500555992126465
    3. '(template' → logprob: -12.875555992126465
    4. ' candidate' → logprob: -15.125555992126465
    5. '(' → logprob: -16.50055694580078
    6. '   ' → logprob: -16.50055694580078
    7. 'template' → logprob: -17.00055694580078
    8. '
' → logprob: -17.87555694580078
    9. ' (' → logprob: -18.25055694580078
    10. '_candidate' → logprob: -19.00055694580078

Token 480: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3146580755710602
    2. '):' → logprob: -1.3146580457687378
    3. '   ' → logprob: -6.814658164978027
    4. ')' → logprob: -8.439658164978027
    5. ':' → logprob: -10.564658164978027
    6. ' ):
' → logprob: -10.814658164978027
    7. ':
' → logprob: -11.189658164978027
    8. ' ):' → logprob: -11.814658164978027
    9. '):
' → logprob: -12.439658164978027
    10. '():
' → logprob: -13.064658164978027

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2294302135705948
    2. '   ' → logprob: -1.6044301986694336
    3. '
' → logprob: -5.604430198669434
    4. ' return' → logprob: -9.104430198669434
    5. 'return' → logprob: -10.104430198669434
    6. '	   ' → logprob: -10.229430198669434
    7. '    
' → logprob: -10.479430198669434
    8. '	return' → logprob: -10.479430198669434
    9. '	' → logprob: -10.604430198669434
    10. '        
' → logprob: -11.479430198669434

Token 482: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5319868326187134
    2. 'return' (adapté à ' return') → logprob: -1.6569868326187134
    3. '   ' → logprob: -2.406986713409424
    4. '       ' → logprob: -2.406986713409424
    5. '
' → logprob: -3.281986713409424
    6. ' 
' → logprob: -5.781986713409424
    7. '    
' → logprob: -8.406987190246582
    8. '    ' → logprob: -8.406987190246582
    9. 'False' → logprob: -8.406987190246582
    10. '	return' → logprob: -8.906987190246582

Token 483: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5759395956993103
    2. 'False' → logprob: -0.8259395956993103
    3. '(False' → logprob: -16.075939178466797
    4. '
' → logprob: -16.700939178466797
    5. ' True' → logprob: -18.075939178466797
    6. 'True' → logprob: -18.450939178466797
    7. '   ' → logprob: -18.450939178466797
    8. '=False' → logprob: -19.575939178466797
    9. ' None' → logprob: -19.700939178466797
    10. ' ' → logprob: -19.700939178466797

Token 484: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39966636896133423
    2. '   ' → logprob: -1.1496663093566895
    3. '    
' → logprob: -4.3996663093566895
    4. '  
' → logprob: -8.149666786193848
    5. '   
' → logprob: -9.649666786193848
    6. ' 
' → logprob: -10.649666786193848
    7. '        
' → logprob: -11.149666786193848
    8. '	
' → logprob: -11.774666786193848
    9. '

' → logprob: -11.899666786193848
    10. '<|end|>' → logprob: -12.149666786193848

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04226113483309746
    2. '    
' → logprob: -3.4172611236572266
    3. '
' → logprob: -4.792261123657227
    4. '  
' → logprob: -9.167261123657227
    5. '   
' → logprob: -9.417261123657227
    6. ' 
' → logprob: -10.167261123657227
    7. ' return' → logprob: -11.167261123657227
    8. '        
' → logprob: -11.542261123657227
    9. 'return' → logprob: -11.917261123657227
    10. '	
' → logprob: -12.292261123657227

Token 486: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11458519846200943
    2. 'template' → logprob: -3.1145851612091064
    3. 't' (adapté à ' t') → logprob: -3.8645851612091064
    4. '
' → logprob: -4.1145853996276855
    5. 'return' → logprob: -5.7395853996276855
    6. 'ct' → logprob: -5.9895853996276855
    7. ' template' → logprob: -5.9895853996276855
    8. ' t' → logprob: -6.3645853996276855
    9. 'tpl' → logprob: -6.3645853996276855
    10. 'temp' → logprob: -6.3645853996276855

Token 487: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.2244875133037567
    2. 'emplate' → logprob: -2.224487543106079
    3. '_vec' → logprob: -2.474487543106079
    4. ' =' → logprob: -5.9744873046875
    5. 'emp' → logprob: -6.3494873046875
    6. 'c' → logprob: -7.3494873046875
    7. '_c' → logprob: -7.7244873046875
    8. 'v' → logprob: -7.8494873046875
    9. 'emplates' → logprob: -7.9744873046875
    10. '=' → logprob: -7.9744873046875

Token 488: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.4192871175473556e-05
    2. 'ectors' → logprob: -10.125054359436035
    3. 'ector' → logprob: -12.250054359436035
    4. '=' → logprob: -12.750054359436035
    5. 'ecs' → logprob: -12.875054359436035
    6. 'vec' → logprob: -13.125054359436035
    7. 'ec' → logprob: -13.500054359436035
    8. ' =' → logprob: -14.750054359436035
    9. 'ects' → logprob: -17.00005340576172
    10. '```' → logprob: -17.62505340576172

Token 489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5335220098495483
    2. '=' → logprob: -1.0335220098495483
    3. ' ==' → logprob: -3.033522129058838
    4. '==' → logprob: -4.658522129058838
    5. ',' → logprob: -9.90852165222168
    6. '   ' → logprob: -10.65852165222168
    7. ' ' → logprob: -12.03352165222168
    8. ')==' → logprob: -13.65852165222168
    9. '  ' → logprob: -13.90852165222168
    10. ')' → logprob: -14.03352165222168

Token 490: ' encode' (ID: 31288)
  Prédit: 'encode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encode' → logprob: -0.2131805717945099
    2. ' encode' → logprob: -1.7131805419921875
    3. 'canonical' → logprob: -4.8381805419921875
    4. ' canonical' → logprob: -5.5881805419921875
    5. '   ' → logprob: -10.463180541992188
    6. 'normalize' → logprob: -12.713180541992188
    7. 'encoded' → logprob: -14.213180541992188
    8. ' canon' → logprob: -14.588180541992188
    9. 'encoding' → logprob: -14.713180541992188
    10. 'canon' → logprob: -14.963180541992188

Token 491: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -4.723352049040841e-06
    2. 'shape' → logprob: -12.500004768371582
    3. '_' → logprob: -14.625004768371582
    4. 'Shape' → logprob: -15.250004768371582
    5. '_points' → logprob: -16.750003814697266
    6. '_shapes' → logprob: -17.000003814697266
    7. '```' → logprob: -17.375003814697266
    8. '(shape' → logprob: -17.750003814697266
    9. ' shape' → logprob: -17.875003814697266
    10. '
' → logprob: -18.000003814697266

Token 492: '(template' (ID: 61942)
  Prédit: '(template'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(template' → logprob: -3.583550642360933e-05
    2. '(candidate' → logprob: -10.250036239624023
    3. '(' → logprob: -15.375036239624023
    4. ' (' → logprob: -15.750036239624023
    5. 'template' → logprob: -17.000036239624023
    6. '(temp' → logprob: -19.250036239624023
    7. '(t' → logprob: -19.750036239624023
    8. '(c' → logprob: -20.250036239624023
    9. '(normal' → logprob: -20.250036239624023
    10. ' template' → logprob: -20.500036239624023

Token 493: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0029617734253406525
    2. ')' → logprob: -5.8779616355896
    3. '(candidate' → logprob: -9.377962112426758
    4. ')c' → logprob: -10.752962112426758
    5. '   ' → logprob: -11.502962112426758
    6. ')
' → logprob: -11.502962112426758
    7. ' )
' → logprob: -11.627962112426758
    8. 'candidate' → logprob: -11.752962112426758
    9. ')

' → logprob: -12.252962112426758
    10. ' candidate' → logprob: -12.377962112426758

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008083881810307503
    2. 'c' → logprob: -4.883083820343018
    3. ' c' → logprob: -7.758083820343018
    4. ' ' → logprob: -10.758084297180176
    5. '    
' → logprob: -11.258084297180176
    6. '	c' → logprob: -11.508084297180176
    7. '
' → logprob: -13.008084297180176
    8. ' if' → logprob: -13.883084297180176
    9. '  
' → logprob: -14.258084297180176
    10. '  ' → logprob: -14.758084297180176

Token 495: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.16496115922927856
    2. ' c' → logprob: -2.164961099624634
    3. '   ' → logprob: -3.289961099624634
    4. 'if' → logprob: -10.289960861206055
    5. ' if' → logprob: -11.164960861206055
    6. '
' → logprob: -12.164960861206055
    7. '	c' → logprob: -12.289960861206055
    8. ' ' → logprob: -12.789960861206055
    9. '    
' → logprob: -13.289960861206055
    10. '       ' → logprob: -15.164960861206055

Token 496: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -3.173704271830502e-06
    2. '_vec' → logprob: -14.00000286102295
    3. '	vec' → logprob: -14.37500286102295
    4. 'v' → logprob: -14.50000286102295
    5. 've' → logprob: -14.50000286102295
    6. '   ' → logprob: -15.50000286102295
    7. ' vec' → logprob: -15.87500286102295
    8. '```' → logprob: -16.125003814697266
    9. '=' → logprob: -16.250003814697266
    10. '(vec' → logprob: -16.625003814697266

Token 497: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.014684110297821e-06
    2. '=' → logprob: -12.375008583068848
    3. 'ectors' → logprob: -12.875008583068848
    4. 'vec' → logprob: -13.750008583068848
    5. ' =' → logprob: -14.625008583068848
    6. 'ector' → logprob: -15.375008583068848
    7. 'ects' → logprob: -16.000009536743164
    8. 'ecs' → logprob: -16.750009536743164
    9. 'os' → logprob: -16.750009536743164
    10. '```' → logprob: -17.375009536743164

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.951414108276367
    4. '=
' → logprob: -18.076414108276367
    5. '   ' → logprob: -18.326414108276367
    6. '=

' → logprob: -19.201414108276367
    7. '  ' → logprob: -19.826414108276367
    8. '＝' → logprob: -19.951414108276367
    9. ' =
' → logprob: -20.201414108276367
    10. '=}' → logprob: -20.451414108276367

Token 499: ' encode' (ID: 31288)
  Prédit: ' encode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encode' → logprob: -0.3868716359138489
    2. 'encode' → logprob: -1.136871576309204
    3. '   ' → logprob: -15.636871337890625
    4. '.encode' → logprob: -15.636871337890625
    5. '_encode' → logprob: -16.136871337890625
    6. 'encoded' → logprob: -17.136871337890625
    7. 'decode' → logprob: -17.261871337890625
    8. ' ' → logprob: -17.761871337890625
    9. 'encoder' → logprob: -18.136871337890625
    10. 'code' → logprob: -18.386871337890625

Token 500: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -0.00091217877343297
    2. 'shape' → logprob: -7.000912189483643
    3. 'Shape' → logprob: -14.750911712646484
    4. 'candidate' → logprob: -16.375911712646484
    5. 'hape' → logprob: -16.875911712646484
    6. 'encode' → logprob: -17.250911712646484
    7. ' shape' → logprob: -17.375911712646484
    8. 'c' → logprob: -18.000911712646484
    9. 'vec' → logprob: -18.000911712646484
    10. 's' → logprob: -18.250911712646484

Token 501: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.10065066069364548
    2. 'candidate' → logprob: -2.3506505489349365
    3. ' candidate' → logprob: -7.725650787353516
    4. ' (' → logprob: -13.600650787353516
    5. '_candidate' → logprob: -13.850650787353516
    6. 'Candidate' → logprob: -16.350650787353516
    7. '
' → logprob: -16.475650787353516
    8. '   ' → logprob: -16.850650787353516
    9. ' 후보' → logprob: -16.975650787353516
    10. '(' → logprob: -16.975650787353516

Token 502: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08047009259462357
    2. ')' → logprob: -2.580470085144043
    3. '   ' → logprob: -6.455470085144043
    4. ')
' → logprob: -12.455470085144043
    5. ' )
' → logprob: -13.580470085144043
    6. ')

' → logprob: -14.705470085144043
    7. '())
' → logprob: -15.080470085144043
    8. ')return' → logprob: -15.080470085144043
    9. ' ' → logprob: -15.455470085144043
    10. '  ' → logprob: -15.455470085144043

Token 503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.172891830326989e-05
    2. '<|end|>' → logprob: -10.250082015991211
    3. ' if' → logprob: -10.875082015991211
    4. '    
' → logprob: -10.875082015991211
    5. '```' → logprob: -13.375082015991211
    6. 'if' → logprob: -13.375082015991211
    7. '<|end|>' → logprob: -13.500082015991211
    8. '	if' → logprob: -13.875082015991211
    9. '       ' → logprob: -14.625082015991211
    10. '
' → logprob: -14.750082015991211

Token 504: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023602871224284172
    2. ' if' → logprob: -3.7736029624938965
    3. 'if' (adapté à ' if') → logprob: -8.023602485656738
    4. '	if' → logprob: -11.273602485656738
    5. ' return' → logprob: -11.273602485656738
    6. '<|end|>' → logprob: -14.148602485656738
    7. '```' → logprob: -14.523602485656738
    8. '    
' → logprob: -14.648602485656738
    9. '    ' → logprob: -14.773602485656738
    10. ' ' → logprob: -14.773602485656738

Token 505: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.006032484583556652
    2. 't' → logprob: -5.131032466888428
    3. ' c' → logprob: -9.631032943725586
    4. ' None' → logprob: -10.631032943725586
    5. 'None' → logprob: -11.506032943725586
    6. 'c' → logprob: -12.756032943725586
    7. ' not' → logprob: -14.381032943725586
    8. ' ' → logprob: -15.381032943725586
    9. '	t' → logprob: -15.881032943725586
    10. '   ' → logprob: -16.381032943725586

Token 506: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.0020983952563256025
    2. 'c' → logprob: -6.252098560333252
    3. 't' → logprob: -9.502098083496094
    4. '   ' → logprob: -10.127098083496094
    5. 'None' → logprob: -10.752098083496094
    6. ' None' → logprob: -12.002098083496094
    7. 'not' → logprob: -12.002098083496094
    8. ' vec' → logprob: -12.127098083496094
    9. '```' → logprob: -12.127098083496094
    10. '  ' → logprob: -13.502098083496094

Token 507: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002146226615877822
    2. 'ecs' → logprob: -9.250214576721191
    3. 'cs' → logprob: -9.375214576721191
    4. 'ectors' → logprob: -10.750214576721191
    5. 'ects' → logprob: -12.000214576721191
    6. '   ' → logprob: -13.375214576721191
    7. 'c' → logprob: -13.500214576721191
    8. 'ector' → logprob: -14.625214576721191
    9. '```' → logprob: -14.750214576721191
    10. 'cts' → logprob: -15.000214576721191

Token 508: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0015085549093782902
    2. 'is' → logprob: -6.501508712768555
    3. ' ==' → logprob: -12.751508712768555
    4. '==' → logprob: -13.751508712768555
    5. ' ' → logprob: -14.001508712768555
    6. ' None' → logprob: -14.251508712768555
    7. 'None' → logprob: -15.376508712768555
    8. '	is' → logprob: -15.751508712768555
    9. '[' → logprob: -15.876508712768555
    10. '   ' → logprob: -16.251508712768555

Token 509: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5759406089782715
    2. ' None' → logprob: -0.8259406089782715
    3. '   ' → logprob: -13.70094108581543
    4. '_None' → logprob: -16.82594108581543
    5. ' ' → logprob: -17.07594108581543
    6. '=None' → logprob: -17.32594108581543
    7. '(None' → logprob: -17.70094108581543
    8. ' not' → logprob: -18.82594108581543
    9. '  ' → logprob: -19.20094108581543
    10. 'False' → logprob: -19.32594108581543

Token 510: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4972269535064697
    2. ':' → logprob: -1.6222269535064697
    3. '       ' → logprob: -2.4972269535064697
    4. ':
' → logprob: -2.8722269535064697
    5. '   ' → logprob: -2.9972269535064697
    6. ':return' → logprob: -5.497226715087891
    7. '    ' → logprob: -7.747226715087891
    8. '	or' → logprob: -8.99722671508789
    9. ' and' → logprob: -9.12222671508789
    10. '  ' → logprob: -9.24722671508789

Token 511: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38694995641708374
    2. ' c' → logprob: -1.1369500160217285
    3. '   ' → logprob: -9.51194953918457
    4. ' ' → logprob: -13.51194953918457
    5. '  ' → logprob: -14.01194953918457
    6. '	c' → logprob: -14.01194953918457
    7. ' ' → logprob: -14.13694953918457
    8. '    ' → logprob: -14.26194953918457
    9. '_c' → logprob: -15.88694953918457
    10. ' not' → logprob: -16.26194953918457

Token 512: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -4.4849443838757e-06
    2. 've' → logprob: -13.000004768371582
    3. 't' → logprob: -14.125004768371582
    4. 'c' → logprob: -14.500004768371582
    5. 'v' → logprob: -15.625004768371582
    6. '   ' → logprob: -15.875004768371582
    7. '```' → logprob: -16.000003814697266
    8. '	vec' → logprob: -16.250003814697266
    9. '_vec' → logprob: -16.375003814697266
    10. ' vec' → logprob: -16.500003814697266

Token 513: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.227250610711053e-05
    2. 'vec' → logprob: -10.250041961669922
    3. 'es' → logprob: -13.375041961669922
    4. 'ectors' → logprob: -13.625041961669922
    5. 'ecs' → logprob: -13.625041961669922
    6. 'cs' → logprob: -14.250041961669922
    7. 'ects' → logprob: -14.750041961669922
    8. 'vs' → logprob: -15.000041961669922
    9. 'c' → logprob: -15.375041961669922
    10. '_vec' → logprob: -15.375041961669922

Token 514: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16022492945194244
    2. 'is' → logprob: -1.9102249145507812
    3. 'None' → logprob: -15.285224914550781
    4. '==' → logprob: -15.785224914550781
    5. ')' → logprob: -16.03522491455078
    6. '	is' → logprob: -16.16022491455078
    7. ' ' → logprob: -16.66022491455078
    8. ' None' → logprob: -16.78522491455078
    9. '   ' → logprob: -17.03522491455078
    10. ')is' → logprob: -17.03522491455078

Token 515: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009115827269852161
    2. ' None' → logprob: -7.000911712646484
    3. '=None' → logprob: -17.750911712646484
    4. '(None' → logprob: -18.125911712646484
    5. '_None' → logprob: -18.250911712646484
    6. '   ' → logprob: -19.375911712646484
    7. 'none' → logprob: -20.375911712646484
    8. ' ' → logprob: -21.375911712646484
    9. ',None' → logprob: -22.375911712646484
    10. '_none' → logprob: -22.500911712646484

Token 516: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45766711235046387
    2. '       ' → logprob: -1.2076671123504639
    3. ':
' → logprob: -2.957667112350464
    4. ' or' → logprob: -4.832667350769043
    5. '   ' → logprob: -5.082667350769043
    6. ':return' → logprob: -6.707667350769043
    7. '<|end|>' → logprob: -7.457667350769043
    8. ',' → logprob: -8.832667350769043
    9. '):
' → logprob: -9.707667350769043
    10. '=False' → logprob: -10.582667350769043

Token 517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.070975071750581e-05
    2. '   ' → logprob: -11.250030517578125
    3. ' return' → logprob: -11.500030517578125
    4. '<|end|>' → logprob: -12.000030517578125
    5. '        
' → logprob: -15.500030517578125
    6. '	return' → logprob: -15.750030517578125
    7. '           ' → logprob: -15.875030517578125
    8. ',' → logprob: -16.125030517578125
    9. '	   ' → logprob: -16.375030517578125
    10. '```' → logprob: -16.500030517578125

Token 518: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05988364666700363
    2. 'return' (adapté à ' return') → logprob: -3.4348835945129395
    3. ' return' → logprob: -3.6848835945129395
    4. '   ' → logprob: -7.1848835945129395
    5. '	return' → logprob: -10.309884071350098
    6. '	' → logprob: -13.934884071350098
    7. '           ' → logprob: -14.309884071350098
    8. '
' → logprob: -14.309884071350098
    9. '	   ' → logprob: -14.309884071350098
    10. '{return' → logprob: -14.684884071350098

Token 519: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0015023599844425917
    2. ' False' → logprob: -6.501502513885498
    3. '(False' → logprob: -17.376502990722656
    4. 'True' → logprob: -20.126502990722656
    5. '   ' → logprob: -21.751502990722656
    6. '=False' → logprob: -22.501502990722656
    7. 'false' → logprob: -22.751502990722656
    8. '
' → logprob: -23.126502990722656
    9. '_false' → logprob: -24.626502990722656
    10. '.False' → logprob: -24.626502990722656

Token 520: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004982912912964821
    2. '
' → logprob: -5.754982948303223
    3. '    
' → logprob: -6.379982948303223
    4. '  
' → logprob: -10.004982948303223
    5. '<|end|>' → logprob: -10.129982948303223
    6. '```' → logprob: -11.879982948303223
    7. '   
' → logprob: -12.504982948303223
    8. '        
' → logprob: -13.004982948303223
    9. 'return' → logprob: -13.004982948303223
    10. '<|end|>' → logprob: -13.504982948303223

Token 521: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006583464564755559
    2. '
' → logprob: -7.6256585121154785
    3. '    
' → logprob: -8.75065803527832
    4. ' return' → logprob: -12.00065803527832
    5. 'return' → logprob: -12.87565803527832
    6. '  
' → logprob: -13.12565803527832
    7. '```' → logprob: -14.50065803527832
    8. '        
' → logprob: -15.50065803527832
    9. '   
' → logprob: -15.62565803527832
    10. '       ' → logprob: -16.25065803527832

Token 522: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28186437487602234
    2. 'return' (adapté à ' return') → logprob: -1.6568644046783447
    3. ' return' → logprob: -2.9068644046783447
    4. 't' → logprob: -9.156864166259766
    5. '
' → logprob: -9.531864166259766
    6. 'tc' → logprob: -11.031864166259766
    7. ' t' → logprob: -11.156864166259766
    8. 'ct' → logprob: -11.781864166259766
    9. ' tc' → logprob: -12.156864166259766
    10. '	return' → logprob: -12.281864166259766

Token 523: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.01815076172351837
    2. ' canonical' → logprob: -4.018150806427002
    3. 'c' → logprob: -14.018150329589844
    4. 'canon' → logprob: -18.018150329589844
    5. '   ' → logprob: -18.143150329589844
    6. 'can' → logprob: -18.518150329589844
    7. 'Canonical' → logprob: -19.518150329589844
    8. '
' → logprob: -19.768150329589844
    9. ' ' → logprob: -20.518150329589844
    10. '	c' → logprob: -20.768150329589844

Token 524: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.004113188479095697
    2. '(c' → logprob: -5.50411319732666
    3. '(' → logprob: -10.37911319732666
    4. '(s' → logprob: -13.12911319732666
    5. ' (' → logprob: -13.50411319732666
    6. '((' → logprob: -16.004112243652344
    7. '(tuple' → logprob: -16.754112243652344
    8. 't' → logprob: -17.254112243652344
    9. ')(' → logprob: -17.504112243652344
    10. '(tc' → logprob: -17.504112243652344

Token 525: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -7.896309739408025e-07
    2. '(vec' → logprob: -14.500000953674316
    3. 'c' → logprob: -17.0
    4. 'ec' → logprob: -17.0
    5. '(' → logprob: -17.75
    6. '   ' → logprob: -18.125
    7. '```' → logprob: -18.25
    8. ' vec' → logprob: -18.375
    9. '(c' → logprob: -18.5
    10. '(t' → logprob: -18.5

Token 526: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.128163257315464e-07
    2. 'cs' → logprob: -16.5
    3. 'ectors' → logprob: -16.75
    4. 'c' → logprob: -16.875
    5. 'с' → logprob: -17.0
    6. '(s' → logprob: -17.25
    7. '[' → logprob: -18.625
    8. '{s' → logprob: -18.625
    9. '[s' → logprob: -19.5
    10. 'ecs' → logprob: -19.625

Token 527: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001510335598140955
    2. ')==' → logprob: -6.501510143280029
    3. ' )' → logprob: -11.751510620117188
    4. '==' → logprob: -16.626510620117188
    5. '())' → logprob: -18.001510620117188
    6. '）' → logprob: -18.876510620117188
    7. ')
' → logprob: -19.751510620117188
    8. ')!=' → logprob: -19.751510620117188
    9. ']==' → logprob: -19.876510620117188
    10. ' ==' → logprob: -20.001510620117188

Token 528: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47411227226257324
    2. '==' → logprob: -0.9741122722625732
    3. '()==' → logprob: -11.224112510681152
    4. '=' → logprob: -11.599112510681152
    5. ')==' → logprob: -11.974112510681152
    6. '==
' → logprob: -12.599112510681152
    7. '()' → logprob: -13.974112510681152
    8. ')' → logprob: -14.724112510681152
    9. ' =' → logprob: -14.974112510681152
    10. ']==' → logprob: -15.099112510681152

Token 529: ' canonical' (ID: 91323)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.01815006136894226
    2. ' canonical' → logprob: -4.0181498527526855
    3. 'can' → logprob: -16.643150329589844
    4. ' ' → logprob: -17.893150329589844
    5. '   ' → logprob: -18.268150329589844
    6. 'c' → logprob: -18.893150329589844
    7. 'Canonical' → logprob: -19.268150329589844
    8. 'canon' → logprob: -19.393150329589844
    9. 'categor' → logprob: -19.643150329589844
    10. ' ' → logprob: -20.268150329589844

Token 530: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.87500286102295
    3. ' (' → logprob: -14.62500286102295
    4. 'c' → logprob: -16.625003814697266
    5. '((' → logprob: -17.875003814697266
    6. '(
' → logprob: -18.000003814697266
    7. '(s' → logprob: -19.125003814697266
    8. '(cipher' → logprob: -19.875003814697266
    9. ')c' → logprob: -20.000003814697266
    10. '(t' → logprob: -20.000003814697266

Token 531: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -1.1398757123970427e-05
    2. 'c' → logprob: -11.500011444091797
    3. 'v' → logprob: -14.875011444091797
    4. '(vec' → logprob: -15.250011444091797
    5. '_vec' → logprob: -15.250011444091797
    6. 't' → logprob: -16.250011444091797
    7. 've' → logprob: -16.375011444091797
    8. '(c' → logprob: -17.250011444091797
    9. 'ves' → logprob: -17.625011444091797
    10. '(' → logprob: -17.750011444091797

Token 532: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.008129963040119e-06
    2. 'c' → logprob: -13.000003814697266
    3. 'cs' → logprob: -14.375003814697266
    4. 'ectors' → logprob: -14.625003814697266
    5. 'vec' → logprob: -14.875003814697266
    6. 'rs' → logprob: -17.000003814697266
    7. 'ors' → logprob: -17.250003814697266
    8. 'с' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.500003814697266
    10. '(s' → logprob: -17.625003814697266

Token 533: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011439072113716975
    2. ')c' → logprob: -10.125114440917969
    3. 'c' → logprob: -10.500114440917969
    4. '(c' → logprob: -11.375114440917969
    5. ' )' → logprob: -11.750114440917969
    6. '))' → logprob: -11.875114440917969
    7. '())' → logprob: -11.875114440917969
    8. '[' → logprob: -13.000114440917969
    9. '[c' → logprob: -13.375114440917969
    10. ')
' → logprob: -13.375114440917969

Token 534: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06249549612402916
    2. 'def' → logprob: -3.062495470046997
    3. ' for' → logprob: -5.437495708465576
    4. 'import' → logprob: -5.562495708465576
    5. '#' → logprob: -6.187495708465576
    6. 'n' → logprob: -6.312495708465576
    7. 'if' → logprob: -7.312495708465576
    8. '```' → logprob: -7.812495708465576
    9. '<|end|>' → logprob: -8.062495231628418
    10. 'data' → logprob: -9.562495231628418

Token 535: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.25195714831352234
    2. 'main' → logprob: -1.5019571781158447
    3. 'def' → logprob: -10.501956939697266
    4. ' def' → logprob: -14.501956939697266
    5. 'solve' → logprob: -17.376956939697266
    6. 'process' → logprob: -17.501956939697266
    7. '	main' → logprob: -17.751956939697266
    8. ' process' → logprob: -19.001956939697266
    9. 'm' → logprob: -19.251956939697266
    10. '__' → logprob: -19.251956939697266

Token 536: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.629921436891891e-05
    2. '():
' → logprob: -10.75002670288086
    3. ' ():' → logprob: -12.50002670288086
    4. '()' → logprob: -14.12502670288086
    5. '(argv' → logprob: -16.25002670288086
    6. '(' → logprob: -16.50002670288086
    7. '():
' → logprob: -17.25002670288086
    8. '():

' → logprob: -17.87502670288086
    9. '(input' → logprob: -18.37502670288086
    10. '()(' → logprob: -18.75002670288086

Token 537: '   ' (ID: 271)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.019479267299175262
    2. 'input' → logprob: -4.519479274749756
    3. ' import' → logprob: -5.394479274749756
    4. '   ' → logprob: -5.644479274749756
    5. 'import' → logprob: -8.269478797912598
    6. '	input' → logprob: -10.394478797912598
    7. '```' → logprob: -11.394478797912598
    8. '_input' → logprob: -12.269478797912598
    9. ' readline' → logprob: -12.644478797912598
    10. ' lines' → logprob: -12.769478797912598

Token 538: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.07903013378381729
    2. ' input' → logprob: -2.5790300369262695
    3. '   ' → logprob: -9.45403003692627
    4. 'import' → logprob: -9.70403003692627
    5. ' import' → logprob: -14.57903003692627
    6. '	input' → logprob: -15.20403003692627
    7. '_input' → logprob: -16.704030990600586
    8. 'n' → logprob: -16.704030990600586
    9. ' ' → logprob: -16.829030990600586
    10. ' lines' → logprob: -17.079030990600586

Token 539: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.11353554576635361
    2. '_line' → logprob: -2.3635356426239014
    3. '_lines' → logprob: -4.988535404205322
    4. '_' → logprob: -5.488535404205322
    5. '()' → logprob: -6.238535404205322
    6. '_data' → logprob: -9.11353588104248
    7. '_iterator' → logprob: -9.23853588104248
    8. '_itr' → logprob: -10.36353588104248
    9. '_input' → logprob: -10.48853588104248
    10. '_=' → logprob: -11.11353588104248

Token 540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014182306826114655
    2. ' =' → logprob: -4.264182090759277
    3. '=sys' → logprob: -10.889182090759277
    4. '=
' → logprob: -16.764183044433594
    5. '=input' → logprob: -17.389183044433594
    6. '＝' → logprob: -18.264183044433594
    7. '_=' → logprob: -18.389183044433594
    8. '=int' → logprob: -19.014183044433594
    9. '=

' → logprob: -19.639183044433594
    10. 'import' → logprob: -19.639183044433594

Token 541: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.027526773512363434
    2. ' iter' → logprob: -3.77752685546875
    3. '(iter' → logprob: -5.77752685546875
    4. 'sys' → logprob: -6.77752685546875
    5. '(sys' → logprob: -10.40252685546875
    6. ' sys' → logprob: -12.02752685546875
    7. 'map' → logprob: -16.27752685546875
    8. '	iter' → logprob: -16.27752685546875
    9. '(' → logprob: -16.52752685546875
    10. '   ' → logprob: -17.02752685546875

Token 542: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -1.6240566083070007e-06
    2. 'sys' → logprob: -14.000001907348633
    3. '=sys' → logprob: -15.250001907348633
    4. '(input' → logprob: -15.375001907348633
    5. '(' → logprob: -15.625001907348633
    6. ' sys' → logprob: -16.250001907348633
    7. '	sys' → logprob: -17.250001907348633
    8. ' (' → logprob: -17.625001907348633
    9. '(stdin' → logprob: -17.750001907348633
    10. '(Sys' → logprob: -18.000001907348633

Token 543: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.1041145626222715e-05
    2. '.' → logprob: -12.125011444091797
    3. '.argv' → logprob: -12.125011444091797
    4. 'stdin' → logprob: -17.125011444091797
    5. ' .' → logprob: -17.750011444091797
    6. '.std' → logprob: -18.125011444091797
    7. '(stdin' → logprob: -18.375011444091797
    8. '.stdout' → logprob: -18.750011444091797
    9. '.readline' → logprob: -18.875011444091797
    10. '.input' → logprob: -19.875011444091797

Token 544: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5769191384315491
    2. ')' → logprob: -0.8269191384315491
    3. '.readlines' → logprob: -6.951919078826904
    4. ')
' → logprob: -12.076919555664062
    5. '())' → logprob: -12.201919555664062
    6. '.read' → logprob: -12.201919555664062
    7. ' )' → logprob: -13.201919555664062
    8. '.' → logprob: -13.451919555664062
    9. '))' → logprob: -14.201919555664062
    10. ' readline' → logprob: -14.326919555664062

Token 545: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0014046367723494768
    2. '()' → logprob: -7.001404762268066
    3. '())' → logprob: -7.626404762268066
    4. 'lines' → logprob: -12.876404762268066
    5. '(' → logprob: -13.126404762268066
    6. '()
' → logprob: -15.251404762268066
    7. ')' → logprob: -15.376404762268066
    8. 'line' → logprob: -16.00140380859375
    9. '()\' → logprob: -16.00140380859375
    10. ' lines' → logprob: -16.12640380859375

Token 546: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10053326189517975
    2. 'split' → logprob: -2.3505332469940186
    3. 'decode' → logprob: -8.100533485412598
    4. 'read' → logprob: -10.850533485412598
    5. 'rstrip' → logprob: -12.975533485412598
    6. 'lines' → logprob: -13.475533485412598
    7. '(strip' → logprob: -17.35053253173828
    8. '(split' → logprob: -17.60053253173828
    9. '().' → logprob: -18.10053253173828
    10. ' strip' → logprob: -18.22553253173828

Token 547: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5551672577857971
    2. '())' → logprob: -1.0551671981811523
    3. '()' → logprob: -2.5551671981811523
    4. '('\' → logprob: -9.305167198181152
    5. '()\' → logprob: -10.055167198181152
    6. '()
' → logprob: -10.430167198181152
    7. '())
' → logprob: -10.805167198181152
    8. ')' → logprob: -11.180167198181152
    9. 'line' → logprob: -12.680167198181152
    10. '()]' → logprob: -12.930167198181152

Token 548: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2530440390110016
    2. ')' → logprob: -1.5030440092086792
    3. '()' → logprob: -7.003044128417969
    4. '())
' → logprob: -9.378044128417969
    5. '   ' → logprob: -9.503044128417969
    6. '))' → logprob: -11.253044128417969
    7. '(' → logprob: -11.503044128417969
    8. ')
' → logprob: -11.878044128417969
    9. ' )' → logprob: -12.253044128417969
    10. ' ())' → logprob: -12.378044128417969

Token 549: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01212921179831028
    2. ' n' → logprob: -5.262129306793213
    3. 'n' → logprob: -5.387129306793213
    4. 'm' → logprob: -6.637129306793213
    5. '```' → logprob: -7.762129306793213
    6. ' m' → logprob: -8.762128829956055
    7. '	n' → logprob: -9.262128829956055
    8. 't' → logprob: -9.512128829956055
    9. ' while' → logprob: -9.637128829956055
    10. '    
' → logprob: -9.762128829956055

Token 550: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8871301412582397
    2. 't' → logprob: -0.8871301412582397
    3. 'T' → logprob: -2.0121302604675293
    4. '   ' → logprob: -3.6371302604675293
    5. 'while' (adapté à ' while') → logprob: -4.512130260467529
    6. 'try' → logprob: -6.262130260467529
    7. 'num' → logprob: -6.512130260467529
    8. 'm' → logprob: -7.012130260467529
    9. 'N' → logprob: -7.512130260467529
    10. 'q' → logprob: -8.637129783630371

Token 551: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2522343695163727
    2. 'True' → logprob: -1.5022343397140503
    3. '(True' → logprob: -8.12723445892334
    4. '1' → logprob: -12.50223445892334
    5. ' ' → logprob: -13.12723445892334
    6. '   ' → logprob: -13.25223445892334
    7. 'len' → logprob: -14.37723445892334
    8. 'true' → logprob: -14.87723445892334
    9. 'line' → logprob: -15.12723445892334
    10. ' line' → logprob: -15.25223445892334

Token 552: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017895184457302094
    2. '       ' → logprob: -4.392895221710205
    3. ':
' → logprob: -5.767895221710205
    4. '   ' → logprob: -6.267895221710205
    5. ',' → logprob: -8.892894744873047
    6. '):' → logprob: -10.517894744873047
    7. 'try' → logprob: -10.642894744873047
    8. '<|end|>' → logprob: -10.767894744873047
    9. '():' → logprob: -10.892894744873047
    10. ' :' → logprob: -11.017894744873047

Token 553: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40839341282844543
    2. 'try' → logprob: -1.158393383026123
    3. '       ' → logprob: -3.908393383026123
    4. ' try' → logprob: -6.783393383026123
    5. '	try' → logprob: -9.408393859863281
    6. '.try' → logprob: -13.533393859863281
    7. '_try' → logprob: -13.783393859863281
    8. 'Try' → logprob: -13.908393859863281
    9. '```' → logprob: -14.283393859863281
    10. '           ' → logprob: -15.158393859863281

Token 554: ' line' (ID: 2543)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.2789425849914551
    2. 'line' (adapté à ' line') → logprob: -1.528942584991455
    3. 'n' → logprob: -3.778942584991455
    4. '   ' → logprob: -5.778942584991455
    5. 'm' → logprob: -7.528942584991455
    6. ' try' → logprob: -9.278942108154297
    7. 'l' → logprob: -9.903942108154297
    8. ' line' → logprob: -11.528942108154297
    9. 'N' → logprob: -11.778942108154297
    10. 'size' → logprob: -12.778942108154297

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687393069267273
    2. ' =' → logprob: -1.1368739604949951
    3. '=line' → logprob: -13.261874198913574
    4. '   ' → logprob: -14.261874198913574
    5. ' ' → logprob: -15.636874198913574
    6. ' =
' → logprob: -15.761874198913574
    7. '=
' → logprob: -16.011873245239258
    8. '    ' → logprob: -17.511873245239258
    9. '  ' → logprob: -17.636873245239258
    10. '＝' → logprob: -17.761873245239258

Token 556: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0011717714369297028
    2. ' next' → logprob: -6.751171588897705
    3. '(next' → logprob: -13.501172065734863
    4. '[next' → logprob: -16.626171112060547
    5. ',next' → logprob: -18.126171112060547
    6. '
' → logprob: -18.251171112060547
    7. '	next' → logprob: -18.501171112060547
    8. '.next' → logprob: -19.126171112060547
    9. '_next' → logprob: -19.501171112060547
    10. '   ' → logprob: -19.876171112060547

Token 557: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.4034345187828876e-05
    2. 'input' → logprob: -10.87502384185791
    3. '(' → logprob: -12.25002384185791
    4. '(line' → logprob: -15.12502384185791
    5. 'line' → logprob: -16.750024795532227
    6. '=input' → logprob: -17.375024795532227
    7. ' (' → logprob: -17.875024795532227
    8. ',input' → logprob: -19.000024795532227
    9. '(
' → logprob: -19.375024795532227
    10. ' input' → logprob: -19.750024795532227

Token 558: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -4.320199877838604e-07
    2. 'iter' → logprob: -15.25
    3. '(iter' → logprob: -16.125
    4. '_iterator' → logprob: -17.0
    5. '_it' → logprob: -17.125
    6. 'Iter' → logprob: -18.875
    7. '_input' → logprob: -19.25
    8. '	iter' → logprob: -19.25
    9. '_iters' → logprob: -19.25
    10. '_itr' → logprob: -19.5

Token 559: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6956710815429688
    2. ').' → logprob: -0.8206710815429688
    3. ',' → logprob: -2.8206710815429688
    4. ')
' → logprob: -7.195671081542969
    5. ',None' → logprob: -7.320671081542969
    6. ' ,' → logprob: -10.195671081542969
    7. '   ' → logprob: -10.695671081542969
    8. ' ' → logprob: -11.195671081542969
    9. '()' → logprob: -11.570671081542969
    10. ',"' → logprob: -11.695671081542969

Token 560: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037610020488500595
    2. '<|end|>' → logprob: -4.412610054016113
    3. ' if' → logprob: -4.662610054016113
    4. '   ' → logprob: -5.162610054016113
    5. ' ' → logprob: -6.037610054016113
    6. '	' → logprob: -6.162610054016113
    7. '        
' → logprob: -6.912610054016113
    8. ',' → logprob: -6.912610054016113
    9. '.strip' → logprob: -7.537610054016113
    10. '<|end|>' → logprob: -8.287610054016113

Token 561: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2594154179096222
    2. ' if' → logprob: -1.5094153881072998
    3. 'n' → logprob: -5.134415626525879
    4. 'm' → logprob: -7.259415626525879
    5. ' n' → logprob: -8.009415626525879
    6. '       ' → logprob: -8.009415626525879
    7. 'line' → logprob: -8.634415626525879
    8. ' line' → logprob: -11.634415626525879
    9. 'l' → logprob: -12.384415626525879
    10. ' m' → logprob: -12.634415626525879

Token 562: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3122473955154419
    2. ' not' → logprob: -1.562247395515442
    3. 'not' → logprob: -3.3122472763061523
    4. ' line' → logprob: -3.8122472763061523
    5. '#line' → logprob: -13.687247276306152
    6. '(line' → logprob: -14.562247276306152
    7. '[line' → logprob: -15.062247276306152
    8. '=line' → logprob: -15.312247276306152
    9. ' ' → logprob: -15.437247276306152
    10. '	line' → logprob: -15.562247276306152

Token 563: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4934563934803009
    2. '==' → logprob: -0.9934563636779785
    3. '.strip' → logprob: -3.9934563636779785
    4. '()==' → logprob: -8.118456840515137
    5. '.' → logprob: -8.743456840515137
    6. '===' → logprob: -9.618456840515137
    7. ' =' → logprob: -9.993456840515137
    8. '=' → logprob: -10.118456840515137
    9. '.startswith' → logprob: -10.368456840515137
    10. ')==' → logprob: -10.868456840515137

Token 564: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02521495148539543
    2. '"' → logprob: -3.775214910507202
    3. '0' → logprob: -6.400215148925781
    4. '''' → logprob: -8.150215148925781
    5. '""' → logprob: -11.900215148925781
    6. ''#' → logprob: -12.900215148925781
    7. ' '' → logprob: -13.025215148925781
    8. ''q' → logprob: -13.650215148925781
    9. ''end' → logprob: -13.900215148925781
    10. ''O' → logprob: -14.275215148925781

Token 565: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1085522323846817
    2. ''' → logprob: -2.3585522174835205
    3. '':' → logprob: -4.8585524559021
    4. '''' → logprob: -8.233551979064941
    5. 'END' → logprob: -8.733551979064941
    6. '"' → logprob: -10.233551979064941
    7. '':
' → logprob: -10.358551979064941
    8. 'end' → logprob: -11.108551979064941
    9. '"":' → logprob: -12.233551979064941
    10. ''end' → logprob: -12.233551979064941

Token 566: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.030401047319173813
    2. '':
' → logprob: -3.5304009914398193
    3. ''' → logprob: -7.780401229858398
    4. '':
' → logprob: -8.405401229858398
    5. ''):
' → logprob: -13.155401229858398
    6. '<|end|>' → logprob: -13.530401229858398
    7. '')' → logprob: -13.905401229858398
    8. '":' → logprob: -14.155401229858398
    9. ''):' → logprob: -14.155401229858398
    10. ':' → logprob: -14.155401229858398

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14278264343738556
    2. '       ' → logprob: -2.017782688140869
    3. '		' → logprob: -10.392782211303711
    4. '   ' → logprob: -10.892782211303711
    5. '<|end|>' → logprob: -11.767782211303711
    6. '	       ' → logprob: -11.892782211303711
    7. ':' → logprob: -12.017782211303711
    8. ',' → logprob: -12.142782211303711
    9. '               ' → logprob: -12.142782211303711
    10. '          ' → logprob: -12.142782211303711

Token 568: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.17295114696025848
    2. ' break' → logprob: -1.922951102256775
    3. '       ' → logprob: -4.9229512214660645
    4. 'return' → logprob: -5.6729512214660645
    5. '	break' → logprob: -6.9229512214660645
    6. '           ' → logprob: -7.0479512214660645
    7. ' return' → logprob: -9.672950744628906
    8. '               ' → logprob: -12.297950744628906
    9. '   ' → logprob: -12.797950744628906
    10. '_break' → logprob: -12.797950744628906

Token 569: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01829778403043747
    2. '        
' → logprob: -4.1432976722717285
    3. '<|end|>' → logprob: -6.5182976722717285
    4. '		
' → logprob: -8.518298149108887
    5. '   ' → logprob: -8.893298149108887
    6. '	' → logprob: -9.268298149108887
    7. '
' → logprob: -9.268298149108887
    8. '<|end|>' → logprob: -10.143298149108887
    9. '            
' → logprob: -10.518298149108887
    10. '    
' → logprob: -10.643298149108887

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015583087224513292
    2. '	' → logprob: -7.001558303833008
    3. '        
' → logprob: -8.501558303833008
    4. '<|end|>' → logprob: -8.626558303833008
    5. '   ' → logprob: -9.001558303833008
    6. '```' → logprob: -10.376558303833008
    7. '		
' → logprob: -11.251558303833008
    8. '	   ' → logprob: -11.251558303833008
    9. '	m' → logprob: -12.126558303833008
    10. '' → logprob: -12.126558303833008

Token 571: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004632807336747646
    2. 'n' (adapté à ' n') → logprob: -5.504632949829102
    3. ' m' → logprob: -7.754632949829102
    4. '       ' → logprob: -9.129632949829102
    5. ' n' → logprob: -11.379632949829102
    6. 'k' → logprob: -13.379632949829102
    7. '   ' → logprob: -13.379632949829102
    8. 'M' → logprob: -14.004632949829102
    9. '```' → logprob: -14.254632949829102
    10. '        
' → logprob: -15.004632949829102

Token 572: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12305799871683121
    2. '=' → logprob: -2.2480580806732178
    3. ',' → logprob: -4.623057842254639
    4. ',m' → logprob: -8.998058319091797
    5. ' ,' → logprob: -8.998058319091797
    6. '=int' → logprob: -9.373058319091797
    7. ',n' → logprob: -11.498058319091797
    8. ' ' → logprob: -11.748058319091797
    9. '   ' → logprob: -12.498058319091797
    10. '    ' → logprob: -13.748058319091797

Token 573: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '[int' → logprob: -22.250335693359375
    4. '   ' → logprob: -22.375335693359375
    5. '(int' → logprob: -22.625335693359375
    6. '  ' → logprob: -23.125335693359375
    7. '	int' → logprob: -23.250335693359375
    8. '=int' → logprob: -23.500335693359375
    9. ' ' → logprob: -24.500335693359375
    10. '<int' → logprob: -25.125335693359375

Token 574: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.7372048862162046e-05
    2. '(' → logprob: -10.750027656555176
    3. 'line' → logprob: -12.125027656555176
    4. ' line' → logprob: -15.500027656555176
    5. '=line' → logprob: -16.12502670288086
    6. '#line' → logprob: -16.37502670288086
    7. '(n' → logprob: -16.50002670288086
    8. '[line' → logprob: -16.75002670288086
    9. '	line' → logprob: -18.12502670288086
    10. ' (' → logprob: -18.62502670288086

Token 575: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000443420372903347
    2. ')
' → logprob: -7.750443458557129
    3. '       ' → logprob: -12.375443458557129
    4. '   ' → logprob: -12.750443458557129
    5. ')n' → logprob: -13.125443458557129
    6. '<|end|>' → logprob: -13.375443458557129
    7. ' )' → logprob: -13.500443458557129
    8. ' ' → logprob: -15.500443458557129
    9. '),' → logprob: -16.375442504882812
    10. '<|end|>' → logprob: -16.375442504882812

Token 576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9064733982086182
    2. '   ' → logprob: -1.1564733982086182
    3. 'templates' → logprob: -1.7814733982086182
    4. 'for' → logprob: -2.406473398208618
    5. ' for' → logprob: -4.531473159790039
    6. 'template' → logprob: -5.281473159790039
    7. 'm' → logprob: -6.156473159790039
    8. 'points' → logprob: -6.781473159790039
    9. ' templates' → logprob: -7.031473159790039
    10. '	for' → logprob: -7.281473159790039

Token 577: ' polygons' (ID: 169724)
  Prédit: 'template'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'template' → logprob: -0.4882673919200897
    2. 'templates' → logprob: -0.9882674217224121
    3. 'm' → logprob: -4.363267421722412
    4. 'points' → logprob: -7.863267421722412
    5. 'for' → logprob: -8.738266944885254
    6. 't' → logprob: -8.863266944885254
    7. '   ' → logprob: -8.988266944885254
    8. 'tmpl' → logprob: -8.988266944885254
    9. 'templ' → logprob: -9.488266944885254
    10. 'sh' → logprob: -10.113266944885254

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016036715358495712
    2. '=' → logprob: -4.141036510467529
    3. '=[]' → logprob: -13.141036987304688
    4. '   ' → logprob: -15.641036987304688
    5. '[]' → logprob: -16.766036987304688
    6. 's' → logprob: -16.766036987304688
    7. ',' → logprob: -17.016036987304688
    8. '    ' → logprob: -17.141036987304688
    9. ' ' → logprob: -17.141036987304688
    10. ')' → logprob: -17.641036987304688

Token 579: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0018843731377273798
    2. '[' → logprob: -6.751884460449219
    3. '[]
' → logprob: -7.251884460449219
    4. ' []' → logprob: -12.501884460449219
    5. '[]

' → logprob: -14.501884460449219
    6. '[n' → logprob: -14.876884460449219
    7. '[]}' → logprob: -16.37688446044922
    8. '[user' → logprob: -16.75188446044922
    9. '[num' → logprob: -16.87688446044922
    10. '[number' → logprob: -17.00188446044922

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013878343626856804
    2. ' for' → logprob: -4.888878345489502
    3. '<|end|>' → logprob: -6.138878345489502
    4. 'for' → logprob: -6.513878345489502
    5. '   ' → logprob: -7.138878345489502
    6. '	for' → logprob: -7.138878345489502
    7. '	   ' → logprob: -8.138877868652344
    8. '        
' → logprob: -8.263877868652344
    9. '	' → logprob: -8.638877868652344
    10. '	       ' → logprob: -9.638877868652344

Token 581: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007330321241170168
    2. '       ' → logprob: -7.750732898712158
    3. ' for' → logprob: -8.125733375549316
    4. '	for' → logprob: -12.125733375549316
    5. '   ' → logprob: -13.875733375549316
    6. '```' → logprob: -15.875733375549316
    7. '        
' → logprob: -17.625732421875
    8. ' ' → logprob: -18.625732421875
    9. '_for' → logprob: -18.625732421875
    10. '	' → logprob: -19.500732421875

Token 582: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.339278580620885e-06
    2. ' _' → logprob: -13.125001907348633
    3. '_range' → logprob: -15.625001907348633
    4. '_i' → logprob: -17.375001907348633
    5. '_in' → logprob: -18.250001907348633
    6. '_=' → logprob: -19.000001907348633
    7. '_
' → logprob: -19.500001907348633
    8. '_n' → logprob: -20.500001907348633
    9. ' range' → logprob: -21.000001907348633
    10. ' in' → logprob: -21.125001907348633

Token 583: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7943073511123657
    2. ' in' → logprob: -0.7943073511123657
    3. 'range' → logprob: -2.419307231903076
    4. ' range' → logprob: -5.169307231903076
    5. '_' → logprob: -6.544307231903076
    6. ' ' → logprob: -9.794307708740234
    7. 'n' → logprob: -10.544307708740234
    8. ' _' → logprob: -12.544307708740234
    9. '_range' → logprob: -12.669307708740234
    10. '_in' → logprob: -13.169307708740234

Token 584: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '(range' → logprob: -21.000003814697266
    4. '	range' → logprob: -21.125003814697266
    5. '[' → logprob: -22.000003814697266
    6. '_range' → logprob: -22.125003814697266
    7. '_' → logprob: -23.000003814697266
    8. '   ' → logprob: -23.125003814697266
    9. 'rang' → logprob: -23.125003814697266
    10. '  ' → logprob: -23.750003814697266

Token 585: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25661250948905945
    2. 'n' → logprob: -1.5066125392913818
    3. ' n' → logprob: -5.381612300872803
    4. ' (' → logprob: -10.256612777709961
    5. '(' → logprob: -11.131612777709961
    6. '	n' → logprob: -11.381612777709961
    7. ' range' → logprob: -12.381612777709961
    8. 'range' → logprob: -12.506612777709961
    9. '_n' → logprob: -13.131612777709961
    10. '
' → logprob: -15.256612777709961

Token 586: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5886882543563843
    2. '):
' → logprob: -0.9636882543563843
    3. ':' → logprob: -3.588688373565674
    4. '   ' → logprob: -3.963688373565674
    5. ',' → logprob: -4.713688373565674
    6. '       ' → logprob: -5.588688373565674
    7. ':
' → logprob: -5.963688373565674
    8. '=' → logprob: -8.463687896728516
    9. ')' → logprob: -8.588687896728516
    10. 'n' → logprob: -8.713687896728516

Token 587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006288022268563509
    2. ' ' → logprob: -7.37562894821167
    3. '+' → logprob: -13.750628471374512
    4. '2' → logprob: -14.250628471374512
    5. '   ' → logprob: -15.625628471374512
    6. ')' → logprob: -15.875628471374512
    7. '=' → logprob: -16.625629425048828
    8. '0' → logprob: -16.750629425048828
    9. ' n' → logprob: -16.750629425048828
    10. 'n' → logprob: -16.875629425048828

Token 588: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4529130756855011
    2. '):' → logprob: -1.3279130458831787
    3. ':' → logprob: -3.2029130458831787
    4. '   ' → logprob: -3.5779130458831787
    5. ':
' → logprob: -4.202913284301758
    6. '       ' → logprob: -4.952913284301758
    7. ',' → logprob: -5.827913284301758
    8. '():
' → logprob: -6.702913284301758
    9. '<|end|>' → logprob: -6.827913284301758
    10. ')' → logprob: -7.077913284301758

Token 589: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2017097771167755
    2. 'points' → logprob: -2.201709747314453
    3. ' points' → logprob: -2.826709747314453
    4. '   ' → logprob: -5.326709747314453
    5. '	points' → logprob: -6.201709747314453
    6. '       ' → logprob: -6.326709747314453
    7. 'm' → logprob: -6.451709747314453
    8. '(points' → logprob: -7.826709747314453
    9. '```' → logprob: -8.076709747314453
    10. '<|end|>' → logprob: -8.076709747314453

Token 590: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.00038229089113883674
    2. ' m' → logprob: -8.125382423400879
    3. '           ' → logprob: -9.375382423400879
    4. 'k' → logprob: -14.625382423400879
    5. '   ' → logprob: -14.750382423400879
    6. 'line' → logprob: -15.375382423400879
    7. '	m' → logprob: -15.750382423400879
    8. 'num' → logprob: -16.750381469726562
    9. '       ' → logprob: -17.000381469726562
    10. 'l' → logprob: -17.125381469726562

Token 591: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03830081969499588
    2. '=' → logprob: -3.2883007526397705
    3. '=int' → logprob: -8.288300514221191
    4. '   ' → logprob: -12.288300514221191
    5. '=line' → logprob: -13.163300514221191
    6. ' ' → logprob: -14.413300514221191
    7. '    ' → logprob: -14.913300514221191
    8. '	' → logprob: -15.663300514221191
    9. ',' → logprob: -16.538301467895508
    10. ' =
' → logprob: -16.913301467895508

Token 592: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007099286303855479
    2. ' int' → logprob: -7.2507100105285645
    3. '[int' → logprob: -22.375709533691406
    4. '=int' → logprob: -22.625709533691406
    5. '	int' → logprob: -22.875709533691406
    6. '<int' → logprob: -23.125709533691406
    7. '   ' → logprob: -23.250709533691406
    8. '(int' → logprob: -23.250709533691406
    9. ' ' → logprob: -24.500709533691406
    10. ':int' → logprob: -25.625709533691406

Token 593: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0001234428636962548
    2. 'next' → logprob: -9.000123023986816
    3. '[next' → logprob: -17.625123977661133
    4. ' next' → logprob: -17.750123977661133
    5. ',next' → logprob: -18.750123977661133
    6. '	next' → logprob: -19.250123977661133
    7. '.next' → logprob: -20.250123977661133
    8. '(' → logprob: -20.250123977661133
    9. '(line' → logprob: -21.125123977661133
    10. 'Next' → logprob: -22.375123977661133

Token 594: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0086253322660923
    2. 'input' → logprob: -4.758625507354736
    3. ' input' → logprob: -11.883625030517578
    4. ',input' → logprob: -13.133625030517578
    5. '=input' → logprob: -13.633625030517578
    6. ' (' → logprob: -14.508625030517578
    7. '<input' → logprob: -16.383625030517578
    8. '	input' → logprob: -16.633625030517578
    9. '[input' → logprob: -16.633625030517578
    10. '(' → logprob: -16.883625030517578

Token 595: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.0009209888521581888
    2. 'iter' → logprob: -7.00092077255249
    3. 'input' → logprob: -12.500921249389648
    4. '(input' → logprob: -12.875921249389648
    5. '_iterator' → logprob: -13.250921249389648
    6. 'iterator' → logprob: -14.375921249389648
    7. '(iter' → logprob: -14.500921249389648
    8. 'Iter' → logprob: -15.875921249389648
    9. '_iters' → logprob: -16.87592124938965
    10. ' iter' → logprob: -17.00092124938965

Token 596: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07013338059186935
    2. ')
' → logprob: -3.4451334476470947
    3. '())' → logprob: -3.5701334476470947
    4. '())
' → logprob: -5.320133209228516
    5. '))' → logprob: -5.945133209228516
    6. '))
' → logprob: -9.570133209228516
    7. '()' → logprob: -9.570133209228516
    8. ')
' → logprob: -12.195133209228516
    9. '()))' → logprob: -12.320133209228516
    10. '()
' → logprob: -12.445133209228516

Token 597: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2112993746995926
    2. 'points' → logprob: -1.7112994194030762
    3. '<|end|>' → logprob: -5.336299419403076
    4. '	points' → logprob: -6.211299419403076
    5. '(points' → logprob: -6.961299419403076
    6. ' points' → logprob: -6.961299419403076
    7. '       ' → logprob: -7.836299419403076
    8. '	       ' → logprob: -8.461298942565918
    9. '   ' → logprob: -9.086298942565918
    10. '_points' → logprob: -9.711298942565918

Token 598: ' pts' (ID: 66515)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0020148828625679016
    2. '           ' → logprob: -7.252015113830566
    3. 'pol' → logprob: -7.252015113830566
    4. ' points' → logprob: -7.752015113830566
    5. '	points' → logprob: -9.252015113830566
    6. 'pts' (adapté à ' pts') → logprob: -10.377015113830566
    7. 'p' → logprob: -11.377015113830566
    8. 'poly' → logprob: -11.877015113830566
    9. 'polygon' → logprob: -11.877015113830566
    10. '(points' → logprob: -11.877015113830566

Token 599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692926824092865
    2. ' =' → logprob: -2.12692928314209
    3. '+=' → logprob: -14.37692928314209
    4. '.append' → logprob: -14.62692928314209
    5. '.extend' → logprob: -16.626928329467773
    6. ' +=' → logprob: -16.751928329467773
    7. '.=' → logprob: -18.001928329467773
    8. '=
' → logprob: -18.126928329467773
    9. ' ' → logprob: -18.626928329467773
    10. '.' → logprob: -19.126928329467773

Token 600: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3132619559764862
    2. ' read' → logprob: -1.3132619857788086
    3. '(read' → logprob: -15.438261985778809
    4. '	read' → logprob: -17.313261032104492
    5. '_read' → logprob: -19.063261032104492
    6. 'Read' → logprob: -20.063261032104492
    7. '.read' → logprob: -20.438261032104492
    8. 'list' → logprob: -20.688261032104492
    9. ' tuple' → logprob: -21.438261032104492
    10. 'tuple' → logprob: -21.563261032104492

Token 601: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0013710727216675878
    2. 'points' → logprob: -6.876370906829834
    3. 'input' → logprob: -8.876371383666992
    4. '(input' → logprob: -8.876371383666992
    5. '(points' → logprob: -10.626371383666992
    6. '_input' → logprob: -12.001371383666992
    7. 'm' → logprob: -12.001371383666992
    8. '(m' → logprob: -12.626371383666992
    9. '_point' → logprob: -12.626371383666992
    10. 'int' → logprob: -12.876371383666992

Token 602: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.1279553291387856e-05
    2. 'm' → logprob: -11.875011444091797
    3. '           ' → logprob: -13.125011444091797
    4. ' (' → logprob: -13.375011444091797
    5. '(' → logprob: -14.500011444091797
    6. ' m' → logprob: -16.625011444091797
    7. '               ' → logprob: -17.375011444091797
    8. '	m' → logprob: -18.000011444091797
    9. '```' → logprob: -18.000011444091797
    10. '   ' → logprob: -18.125011444091797

Token 603: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.47460854053497314
    2. ',' → logprob: -0.9746085405349731
    3. '(input' → logprob: -7.724608421325684
    4. ',next' → logprob: -9.974608421325684
    5. ' ,' → logprob: -10.724608421325684
    6. '(' → logprob: -12.474608421325684
    7. '           ' → logprob: -12.599608421325684
    8. ',n' → logprob: -12.724608421325684
    9. 'input' → logprob: -12.849608421325684
    10. ',int' → logprob: -13.349608421325684

Token 604: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804149478673935
    2. ' input' → logprob: -3.288041591644287
    3. '_input' → logprob: -20.788042068481445
    4. '(input' → logprob: -21.288042068481445
    5. 'Input' → logprob: -21.413042068481445
    6. '	input' → logprob: -22.413042068481445
    7. ',input' → logprob: -23.163042068481445
    8. '=input' → logprob: -23.538042068481445
    9. '<input' → logprob: -23.538042068481445
    10. ' ' → logprob: -24.038042068481445

Token 605: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -1.2664456789934775e-06
    2. 'iter' → logprob: -13.625000953674316
    3. '_iterator' → logprob: -17.625001907348633
    4. '_iters' → logprob: -18.375001907348633
    5. '	iter' → logprob: -18.875001907348633
    6. '_itr' → logprob: -19.125001907348633
    7. 'Iter' → logprob: -19.250001907348633
    8. ' iter' → logprob: -19.625001907348633
    9. '_it' → logprob: -20.125001907348633
    10. '_ITER' → logprob: -20.375001907348633

Token 606: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010246486403048038
    2. ')
' → logprob: -4.635246276855469
    3. '           ' → logprob: -7.635246276855469
    4. ')
' → logprob: -12.635246276855469
    5. '       ' → logprob: -13.385246276855469
    6. '<|end|>' → logprob: -14.260246276855469
    7. ' )' → logprob: -14.385246276855469
    8. '          ' → logprob: -15.385246276855469
    9. ')

' → logprob: -15.635246276855469
    10. '   ' → logprob: -15.885246276855469

Token 607: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025282368063926697
    2. '       ' → logprob: -4.150282382965088
    3. '   ' → logprob: -4.900282382965088
    4. 'pol' → logprob: -6.650282382965088
    5. '<|end|>' → logprob: -8.52528190612793
    6. ' pol' → logprob: -9.27528190612793
    7. ' polygons' → logprob: -10.52528190612793
    8. '         ' → logprob: -10.77528190612793
    9. '          ' → logprob: -10.90028190612793
    10. '               ' → logprob: -10.90028190612793

Token 608: ' polygons' (ID: 169724)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.00755338603630662
    2. ' polygons' → logprob: -5.132553577423096
    3. '       ' → logprob: -7.382553577423096
    4. '   ' → logprob: -7.632553577423096
    5. '           ' → logprob: -8.257553100585938
    6. 'points' → logprob: -8.507553100585938
    7. ' pol' → logprob: -10.507553100585938
    8. '(pol' → logprob: -11.757553100585938
    9. 'polygon' → logprob: -12.132553100585938
    10. ' ' → logprob: -12.757553100585938

Token 609: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010139751975657418
    2. '.' → logprob: -9.250101089477539
    3. ' .' → logprob: -12.875101089477539
    4. '.app' → logprob: -13.375101089477539
    5. 'append' → logprob: -15.250101089477539
    6. '.extend' → logprob: -15.500101089477539
    7. 's' → logprob: -15.500101089477539
    8. '.py' → logprob: -16.50010108947754
    9. '<|end|>' → logprob: -16.62510108947754
    10. '.Append' → logprob: -16.75010108947754

Token 610: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '((' → logprob: -15.25
    3. 'pts' → logprob: -17.25
    4. ' (' → logprob: -17.5
    5. '(points' → logprob: -18.625
    6. '(pt' → logprob: -19.0
    7. '(
' → logprob: -20.75
    8. '(tuple' → logprob: -21.625
    9. '(p' → logprob: -22.625
    10. '(parts' → logprob: -23.375

Token 611: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -1.1472419600977446e-06
    2. ' pts' → logprob: -13.875000953674316
    3. 'pt' → logprob: -16.375001907348633
    4. 'points' → logprob: -17.375001907348633
    5. '_pts' → logprob: -18.250001907348633
    6. '(' → logprob: -18.875001907348633
    7. 'Pts' → logprob: -19.500001907348633
    8. 'PTS' → logprob: -21.625001907348633
    9. 'normalize' → logprob: -21.875001907348633
    10. 'tuple' → logprob: -22.000001907348633

Token 612: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.017927029868588e-05
    2. ')
' → logprob: -9.750080108642578
    3. '<|end|>' → logprob: -11.000080108642578
    4. '       ' → logprob: -12.625080108642578
    5. '<|end|>' → logprob: -14.625080108642578
    6. '   ' → logprob: -14.750080108642578
    7. ')return' → logprob: -15.125080108642578
    8. ' )' → logprob: -15.750080108642578
    9. '),' → logprob: -16.375080108642578
    10. ')}' → logprob: -16.375080108642578

Token 613: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7891961336135864
    2. '
' → logprob: -1.2891961336135864
    3. '       ' → logprob: -2.164196014404297
    4. 'candidate' → logprob: -3.539196014404297
    5. '```' → logprob: -3.664196014404297
    6. ' for' → logprob: -3.789196014404297
    7. 'target' → logprob: -3.914196014404297
    8. 'template' → logprob: -4.164196014404297
    9. 'for' → logprob: -4.789196014404297
    10. 'targets' → logprob: -5.289196014404297

Token 614: ' template' (ID: 6894)
  Prédit: 'template'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'template' (adapté à ' template') → logprob: -0.016224168241024017
    2. 't' → logprob: -5.266224384307861
    3. 'target' → logprob: -5.266224384307861
    4. 'for' → logprob: -6.391224384307861
    5. 'temp' → logprob: -6.766224384307861
    6. 'candidate' → logprob: -7.516224384307861
    7. '   ' → logprob: -7.766224384307861
    8. ' template' → logprob: -8.016223907470703
    9. 'tmpl' → logprob: -8.641223907470703
    10. 'base' → logprob: -8.766223907470703

Token 615: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028201501816511154
    2. '=' → logprob: -3.6532015800476074
    3. ',' → logprob: -6.278201580047607
    4. ' ,' → logprob: -11.15320110321045
    5. 's' → logprob: -12.52820110321045
    6. '_points' → logprob: -14.02820110321045
    7. ' ' → logprob: -14.15320110321045
    8. '_shape' → logprob: -14.27820110321045
    9. ',p' → logprob: -14.90320110321045
    10. ' ' → logprob: -15.65320110321045

Token 616: ' polygons' (ID: 169724)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.009762583300471306
    2. ' polygons' → logprob: -4.634762763977051
    3. 'polygon' → logprob: -12.75976276397705
    4. '   ' → logprob: -13.88476276397705
    5. 'poly' → logprob: -14.00976276397705
    6. '(pol' → logprob: -14.25976276397705
    7. 'polar' → logprob: -14.63476276397705
    8. ' ' → logprob: -15.75976276397705
    9. 'poll' → logprob: -16.134761810302734
    10. ' pol' → logprob: -16.259761810302734

Token 617: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.9160102712921798e-05
    2. '[-' → logprob: -11.000029563903809
    3. '0' → logprob: -11.375029563903809
    4. '.pop' → logprob: -14.000029563903809
    5. '```' → logprob: -16.500028610229492
    6. '[:-' → logprob: -17.125028610229492
    7. ' [' → logprob: -17.375028610229492
    8. 'pop' → logprob: -17.875028610229492
    9. '[:' → logprob: -19.625028610229492
    10. 's' → logprob: -20.125028610229492

Token 618: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6895233531831764e-05
    2. '-' → logprob: -10.62502670288086
    3. ' ' → logprob: -13.25002670288086
    4. 'n' → logprob: -14.50002670288086
    5. ' -' → logprob: -16.00002670288086
    6. '[' → logprob: -16.25002670288086
    7. '
' → logprob: -17.37502670288086
    8. '   ' → logprob: -17.87502670288086
    9. '```' → logprob: -18.31252670288086
    10. '[-' → logprob: -18.75002670288086

Token 619: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5475784540176392
    2. '
' → logprob: -1.5475784540176392
    3. ')
' → logprob: -2.1725783348083496
    4. ']' → logprob: -2.6725783348083496
    5. '   ' → logprob: -5.04757833480835
    6. ']
' → logprob: -5.17257833480835
    7. '<|end|>' → logprob: -5.29757833480835
    8. ' for' → logprob: -5.67257833480835
    9. 'for' → logprob: -6.17257833480835
    10. '<|end|>' → logprob: -7.54757833480835

Token 620: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0637669712305069
    2. '       ' → logprob: -3.0637669563293457
    3. 'candidate' → logprob: -4.688766956329346
    4. ' for' → logprob: -5.313766956329346
    5. '   ' → logprob: -7.938766956329346
    6. 'c' → logprob: -8.063767433166504
    7. '```' → logprob: -8.688767433166504
    8. '	for' → logprob: -9.438767433166504
    9. ' candidate' → logprob: -12.063767433166504
    10. 'found' → logprob: -12.938767433166504

Token 621: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23334747552871704
    2. 'results' → logprob: -1.7333474159240723
    3. ' for' → logprob: -4.358347415924072
    4. 'matches' → logprob: -4.608347415924072
    5. '       ' → logprob: -5.858347415924072
    6. '   ' → logprob: -5.983347415924072
    7. 'found' → logprob: -6.358347415924072
    8. ' results' → logprob: -7.608347415924072
    9. 'answers' → logprob: -7.983347415924072
    10. 'c' → logprob: -8.23334789276123

Token 622: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7394317984580994
    2. ' =' → logprob: -0.8644317984580994
    3. 'ults' → logprob: -2.614431858062744
    4. 'ult' → logprob: -4.239431858062744
    5. 's' → logprob: -4.489431858062744
    6. '=[]' → logprob: -6.739431858062744
    7. 'uls' → logprob: -8.364431381225586
    8. '=True' → logprob: -8.614431381225586
    9. 'ULT' → logprob: -8.739431381225586
    10. 'ault' → logprob: -8.739431381225586

Token 623: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04206262528896332
    2. '[' → logprob: -3.792062520980835
    3. '[]
' → logprob: -4.292062759399414
    4. 'sum' → logprob: -6.292062759399414
    5. '0' → logprob: -7.292062759399414
    6. '[s' → logprob: -7.292062759399414
    7. '[]

' → logprob: -7.292062759399414
    8. '[
' → logprob: -7.667062759399414
    9. '["' → logprob: -8.417062759399414
    10. ' []' → logprob: -8.792062759399414

Token 624: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24506044387817383
    2. 'for' → logprob: -1.6200604438781738
    3. '	for' → logprob: -4.745060443878174
    4. '   ' → logprob: -5.120060443878174
    5. '       ' → logprob: -5.370060443878174
    6. '```' → logprob: -9.620059967041016
    7. '[' → logprob: -10.620059967041016
    8. '<|end|>' → logprob: -11.245059967041016
    9. ' ' → logprob: -11.870059967041016
    10. '	   ' → logprob: -11.995059967041016

Token 625: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004925066023133695
    2. ' for' → logprob: -7.750492572784424
    3. '       ' → logprob: -9.750492095947266
    4. '   ' → logprob: -13.125492095947266
    5. '	for' → logprob: -13.500492095947266
    6. '```' → logprob: -16.250492095947266
    7. ' ' → logprob: -19.250492095947266
    8. '
' → logprob: -20.875492095947266
    9. '``' → logprob: -21.000492095947266
    10. '	   ' → logprob: -21.000492095947266

Token 626: ' i' (ID: 575)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.19174647331237793
    2. 'cand' → logprob: -2.316746473312378
    3. 'poly' → logprob: -2.941746473312378
    4. ' candidate' → logprob: -4.191746711730957
    5. 'p' → logprob: -5.691746711730957
    6. 'i' → logprob: -6.566746711730957
    7. 'c' → logprob: -6.941746711730957
    8. ' poly' → logprob: -6.941746711730957
    9. 'polygon' → logprob: -7.441746711730957
    10. ' cand' → logprob: -7.941746711730957

Token 627: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4746860861778259
    2. 'in' → logprob: -0.9746860861778259
    3. ',' → logprob: -7.599686145782471
    4. ' ,' → logprob: -10.099685668945312
    5. ',in' → logprob: -10.224685668945312
    6. '	in' → logprob: -11.099685668945312
    7. ' ' → logprob: -12.349685668945312
    8. '_in' → logprob: -12.724685668945312
    9. '1' → logprob: -12.849685668945312
    10. '
' → logprob: -13.599685668945312

Token 628: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '(range' → logprob: -18.12520408630371
    4. 'ange' → logprob: -18.37520408630371
    5. '   ' → logprob: -20.25020408630371
    6. '	range' → logprob: -20.37520408630371
    7. 'pol' → logprob: -20.75020408630371
    8. 'r' → logprob: -21.00020408630371
    9. 'rang' → logprob: -21.12520408630371
    10. 'ran' → logprob: -21.25020408630371

Token 629: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5048530030981055e-06
    2. '1' → logprob: -13.500001907348633
    3. ' (' → logprob: -21.250001907348633
    4. '(n' → logprob: -21.250001907348633
    5. '   ' → logprob: -22.250001907348633
    6. 'n' → logprob: -22.750001907348633
    7. ' ' → logprob: -23.125001907348633
    8. '(
' → logprob: -23.500001907348633
    9. 'len' → logprob: -25.625001907348633
    10. '[' → logprob: -25.875001907348633

Token 630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '   ' → logprob: -16.0
    4. '(' → logprob: -18.75
    5. 'n' → logprob: -19.125
    6. '
' → logprob: -19.25
    7. 'len' → logprob: -20.0
    8. '```' → logprob: -20.5
    9. '１' → logprob: -21.0
    10. '  ' → logprob: -21.25

Token 631: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.5808712840080261
    2. ',' → logprob: -0.8308712840080261
    3. ',len' → logprob: -5.455871105194092
    4. ' ,' → logprob: -7.455871105194092
    5. '(n' → logprob: -10.70587158203125
    6. ',i' → logprob: -10.83087158203125
    7. ',num' → logprob: -11.58087158203125
    8. ',N' → logprob: -12.20587158203125
    9. ',
' → logprob: -12.45587158203125
    10. ',length' → logprob: -13.45587158203125

Token 632: '+' (ID: 10)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.5253981947898865
    2. ',' → logprob: -1.0253982543945312
    3. '+' → logprob: -3.1503982543945312
    4. ',len' → logprob: -5.775398254394531
    5. '(n' → logprob: -6.525398254394531
    6. '):
' → logprob: -7.150398254394531
    7. '):' → logprob: -7.525398254394531
    8. ' ,' → logprob: -7.650398254394531
    9. ',
' → logprob: -9.025398254394531
    10. ' +' → logprob: -9.150398254394531

Token 633: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. '+' → logprob: -14.875000953674316
    4. 'len' → logprob: -16.500001907348633
    5. '):
' → logprob: -17.375001907348633
    6. ')' → logprob: -17.625001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '
' → logprob: -18.750001907348633
    9. '```' → logprob: -18.750001907348633
    10. 'n' → logprob: -19.375001907348633

Token 634: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.019161811098456383
    2. '):' → logprob: -4.644161701202393
    3. ':
' → logprob: -5.269161701202393
    4. ':' → logprob: -5.769161701202393
    5. '   ' → logprob: -7.269161701202393
    6. '():
' → logprob: -8.51916217803955
    7. '):
' → logprob: -9.51916217803955
    8. '       ' → logprob: -10.14416217803955
    9. ']:
' → logprob: -10.76916217803955
    10. ' :
' → logprob: -11.39416217803955

Token 635: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029940124601125717
    2. ' if' → logprob: -3.654940128326416
    3. 'if' → logprob: -6.279940128326416
    4. '           ' → logprob: -7.029940128326416
    5. '```' → logprob: -7.779940128326416
    6. '
' → logprob: -9.029939651489258
    7. '<|end|>' → logprob: -9.029939651489258
    8. '   ' → logprob: -9.904939651489258
    9. ',' → logprob: -10.529939651489258
    10. '        
' → logprob: -10.654939651489258

Token 636: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3650127053260803
    2. '       ' → logprob: -1.3650126457214355
    3. ' res' → logprob: -3.7400126457214355
    4. 'if' (adapté à ' if') → logprob: -3.7400126457214355
    5. '
' → logprob: -6.9900126457214355
    6. '   ' → logprob: -6.9900126457214355
    7. '           ' → logprob: -7.4900126457214355
    8. 'res' → logprob: -7.8650126457214355
    9. ' result' → logprob: -10.115013122558594
    10. ' 
' → logprob: -10.990013122558594

Token 637: ' same' (ID: 2684)
  Prédit: ' same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.0067167943343520164
    2. 'same' → logprob: -5.006716728210449
    3. ' sam' → logprob: -14.13171672821045
    4. '.same' → logprob: -14.88171672821045
    5. '   ' → logprob: -16.256717681884766
    6. '_same' → logprob: -16.381717681884766
    7. '           ' → logprob: -16.506717681884766
    8. ' ' → logprob: -17.881717681884766
    9. '同' → logprob: -18.256717681884766
    10. '(s' → logprob: -18.381717681884766

Token 638: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -7.226628895296017e-06
    2. '_' → logprob: -12.000007629394531
    3. '(p' → logprob: -15.250007629394531
    4. '_shapes' → logprob: -15.625007629394531
    5. '(_' → logprob: -15.875007629394531
    6. '_polygon' → logprob: -15.875007629394531
    7. '(' → logprob: -16.37500762939453
    8. 'Shape' → logprob: -16.62500762939453
    9. '```' → logprob: -16.75000762939453
    10. ' _' → logprob: -16.75000762939453

Token 639: '(template' (ID: 61942)
  Prédit: '(template'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(template' → logprob: -0.5762412548065186
    2. '(pol' → logprob: -0.8262412548065186
    3. '(' → logprob: -8.576241493225098
    4. '(p' → logprob: -9.951241493225098
    5. '(poly' → logprob: -10.826241493225098
    6. ' (' → logprob: -10.826241493225098
    7. 'pol' → logprob: -11.201241493225098
    8. 'template' → logprob: -11.576241493225098
    9. '(temp' → logprob: -13.826241493225098
    10. ' polygons' → logprob: -14.576241493225098

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06833893805742264
    2. '(pol' → logprob: -3.0683388710021973
    3. '(' → logprob: -4.443338871002197
    4. ' ,' → logprob: -5.193338871002197
    5. ' (' → logprob: -6.818338871002197
    6. '(p' → logprob: -7.818338871002197
    7. ',(' → logprob: -8.068339347839355
    8. ',p' → logprob: -8.318339347839355
    9. ',
' → logprob: -9.943339347839355
    10. ' (,' → logprob: -10.193339347839355

Token 641: ' polygons' (ID: 169724)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.0007250601192936301
    2. ' polygons' → logprob: -7.250725269317627
    3. '(pol' → logprob: -11.750724792480469
    4. '           ' → logprob: -13.125724792480469
    5. 'poly' → logprob: -13.500724792480469
    6. '   ' → logprob: -14.125724792480469
    7. 'polygon' → logprob: -14.125724792480469
    8. '
' → logprob: -14.250724792480469
    9. ' pol' → logprob: -14.625724792480469
    10. '       ' → logprob: -14.875724792480469

Token 642: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011093381908722222
    2. '[' → logprob: -9.125110626220703
    3. '[
' → logprob: -13.875110626220703
    4. ' [' → logprob: -15.000110626220703
    5. '   ' → logprob: -15.500110626220703
    6. '[I' → logprob: -16.375110626220703
    7. ')[' → logprob: -16.625110626220703
    8. '[s' → logprob: -16.625110626220703
    9. '```' → logprob: -16.750110626220703
    10. '
' → logprob: -18.000110626220703

Token 643: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.4207797050476074
    2. ']):' → logprob: -1.1707797050476074
    3. '):
' → logprob: -4.545779705047607
    4. '[i' → logprob: -5.170779705047607
    5. ')' → logprob: -5.295779705047607
    6. '])' → logprob: -5.295779705047607
    7. '):' → logprob: -5.670779705047607
    8. ']' → logprob: -6.795779705047607
    9. '[' → logprob: -7.670779705047607
    10. ')]' → logprob: -7.670779705047607

Token 644: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004202224779874086
    2. '           ' → logprob: -6.004202365875244
    3. ' res' → logprob: -7.504202365875244
    4. '	           ' → logprob: -7.504202365875244
    5. '	       ' → logprob: -8.504201889038086
    6. '		       ' → logprob: -9.004201889038086
    7. '                
' → logprob: -9.879201889038086
    8. '
' → logprob: -10.379201889038086
    9. '```' → logprob: -10.754201889038086
    10. '		           ' → logprob: -10.879201889038086

Token 645: ' res' (ID: 694)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09456188231706619
    2. ' res' → logprob: -2.469561815261841
    3. 'res' (adapté à ' res') → logprob: -5.21956205368042
    4. '       ' → logprob: -10.344561576843262
    5. '           ' → logprob: -10.344561576843262
    6. '	           ' → logprob: -10.594561576843262
    7. '```' → logprob: -10.719561576843262
    8. '		       ' → logprob: -11.094561576843262
    9. '	       ' → logprob: -11.344561576843262
    10. '	res' → logprob: -11.594561576843262

Token 646: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007651584688574076
    2. '.' → logprob: -4.8826518058776855
    3. ' .' → logprob: -10.632651329040527
    4. 'append' → logprob: -12.007651329040527
    5. '.Append' → logprob: -12.757651329040527
    6. '.app' → logprob: -13.382651329040527
    7. '           ' → logprob: -13.382651329040527
    8. 'appen' → logprob: -13.757651329040527
    9. '.ap' → logprob: -14.007651329040527
    10. '               ' → logprob: -14.132651329040527

Token 647: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.014504636637866497
    2. '(str' → logprob: -4.264504432678223
    3. 'i' → logprob: -8.889504432678223
    4. '(' → logprob: -9.014504432678223
    5. 'str' → logprob: -10.014504432678223
    6. '('' → logprob: -10.389504432678223
    7. '((' → logprob: -13.389504432678223
    8. '(len' → logprob: -13.389504432678223
    9. '("' → logprob: -13.889504432678223
    10. '(
' → logprob: -14.764504432678223

Token 648: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.996708104154095e-05
    2. ')
' → logprob: -9.250100135803223
    3. ' )' → logprob: -13.500100135803223
    4. '       ' → logprob: -13.750100135803223
    5. '           ' → logprob: -14.750100135803223
    6. '   ' → logprob: -15.500100135803223
    7. '               ' → logprob: -16.000099182128906
    8. '())' → logprob: -16.125099182128906
    9. '+' → logprob: -16.375099182128906
    10. ')return' → logprob: -16.500099182128906

Token 649: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08180693536996841
    2. '       ' → logprob: -2.7068068981170654
    3. '   ' → logprob: -4.9568071365356445
    4. '        
' → logprob: -6.9568071365356445
    5. '    
' → logprob: -6.9568071365356445
    6. '  
' → logprob: -7.0818071365356445
    7. '```' → logprob: -7.4568071365356445
    8. ' 
' → logprob: -7.8318071365356445
    9. 'print' → logprob: -8.331807136535645
    10. '
' → logprob: -8.456807136535645

Token 650: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02682117559015751
    2. '   ' → logprob: -4.526821136474609
    3. ' print' → logprob: -5.026821136474609
    4. 'if' → logprob: -5.026821136474609
    5. ' if' → logprob: -6.276821136474609
    6. '
' → logprob: -8.15182113647461
    7. '       ' → logprob: -8.40182113647461
    8. '```' → logprob: -9.15182113647461
    9. 'for' (adapté à ' for') → logprob: -10.77682113647461
    10. ' for' → logprob: -12.15182113647461

Token 651: ' r' (ID: 428)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1693497747182846
    2. 'r' → logprob: -2.4193496704101562
    3. 'idx' → logprob: -2.9193496704101562
    4. 'x' → logprob: -4.919349670410156
    5. 'index' → logprob: -5.419349670410156
    6. 'j' → logprob: -7.044349670410156
    7. 'k' → logprob: -8.919349670410156
    8. 'id' → logprob: -10.669349670410156
    9. 'v' → logprob: -10.794349670410156
    10. ' idx' → logprob: -11.044349670410156

Token 652: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931517124176025
    2. ' in' → logprob: -0.6931517124176025
    3. ' ' → logprob: -13.193151473999023
    4. 'i' → logprob: -13.943151473999023
    5. ',' → logprob: -14.318151473999023
    6. 'r' → logprob: -15.443151473999023
    7. '_in' → logprob: -15.568151473999023
    8. '	in' → logprob: -15.693151473999023
    9. '   ' → logprob: -16.318151473999023
    10. ' i' → logprob: -16.568151473999023

Token 653: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00526471110060811
    2. ' res' → logprob: -5.255264759063721
    3. 'r' → logprob: -10.630264282226562
    4. 'sorted' → logprob: -12.505264282226562
    5. '(res' → logprob: -13.380264282226562
    6. 'range' → logprob: -14.630264282226562
    7. 're' → logprob: -15.130264282226562
    8. '   ' → logprob: -15.255264282226562
    9. '
' → logprob: -16.130264282226562
    10. ' ' → logprob: -16.130264282226562

Token 654: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2846248149871826
    2. ':' → logprob: -2.1596248149871826
    3. ',' → logprob: -2.2846248149871826
    4. 'in' → logprob: -4.034625053405762
    5. ':
' → logprob: -4.659625053405762
    6. '   ' → logprob: -6.784625053405762
    7. 'print' → logprob: -7.659625053405762
    8. '.' → logprob: -7.659625053405762
    9. '       ' → logprob: -8.159625053405762
    10. ',r' → logprob: -8.284625053405762

Token 655: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5023058652877808
    2. '           ' → logprob: -1.6273058652877808
    3. 'print' → logprob: -2.2523059844970703
    4. ' print' → logprob: -2.3773059844970703
    5. '   ' → logprob: -8.37730598449707
    6. '
' → logprob: -9.75230598449707
    7. '```' → logprob: -10.00230598449707
    8. '	print' → logprob: -10.12730598449707
    9. '	       ' → logprob: -11.00230598449707
    10. '        
' → logprob: -11.00230598449707

Token 656: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007217261008918285
    2. ' print' → logprob: -7.2507219314575195
    3. '           ' → logprob: -11.62572193145752
    4. '       ' → logprob: -13.37572193145752
    5. '   ' → logprob: -13.87572193145752
    6. '```' → logprob: -15.87572193145752
    7. '	print' → logprob: -16.000720977783203
    8. '               ' → logprob: -17.125720977783203
    9. '
' → logprob: -18.000720977783203
    10. '.print' → logprob: -19.375720977783203

Token 657: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0006184352096170187
    2. 'r' → logprob: -7.7506184577941895
    3. '(' → logprob: -9.000617980957031
    4. ' r' → logprob: -9.750617980957031
    5. '(f' → logprob: -12.250617980957031
    6. ' (' → logprob: -14.500617980957031
    7. '('' → logprob: -15.000617980957031
    8. '(
' → logprob: -16.00061798095703
    9. 'f' → logprob: -16.25061798095703
    10. '(i' → logprob: -16.37561798095703

Token 658: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ' )' → logprob: -12.375005722045898
    3. ')
' → logprob: -14.375005722045898
    4. '())' → logprob: -15.375005722045898
    5. ',' → logprob: -16.0000057220459
    6. ',)' → logprob: -16.2500057220459
    7. ')}' → logprob: -17.1250057220459
    8. '),' → logprob: -17.1250057220459
    9. ');' → logprob: -17.2500057220459
    10. '()' → logprob: -17.6250057220459

Token 659: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3738386631011963
    2. '
' → logprob: -1.2488386631011963
    3. '<|end|>' → logprob: -3.8738386631011963
    4. '```' → logprob: -5.623838424682617
    5. ' if' → logprob: -7.748838424682617
    6. '

' → logprob: -9.748838424682617
    7. '    
' → logprob: -10.498838424682617
    8. '[' → logprob: -10.623838424682617
    9. '  
' → logprob: -10.873838424682617
    10. '<|end|>' → logprob: -10.873838424682617

Token 660: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 661: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -3.8889261304575484e-06
    2. '("")' → logprob: -13.000003814697266
    3. '()
' → logprob: -13.875003814697266
    4. ' ()' → logprob: -15.500003814697266
    5. '(' → logprob: -15.750003814697266
    6. '('' → logprob: -16.125003814697266
    7. '()\' → logprob: -16.500003814697266
    8. '()"' → logprob: -18.375003814697266
    9. '()

' → logprob: -18.375003814697266
    10. '()`' → logprob: -19.000003814697266

Token 662: '++++' (ID: 20438)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.023971544578671455
    2. '"' → logprob: -4.3989715576171875
    3. ')' → logprob: -5.5239715576171875
    4. '""' → logprob: -5.7739715576171875
    5. '0' → logprob: -6.1489715576171875
    6. '#' → logprob: -6.3989715576171875
    7. '')' → logprob: -8.773971557617188
    8. '<|end|>' → logprob: -9.398971557617188
    9. '("")' → logprob: -9.898971557617188
    10. '()' → logprob: -10.023971557617188

Token 663: '+"' (ID: 8626)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.09368616342544556
    2. '+' → logprob: -2.468686103820801
    3. '+")' → logprob: -5.593686103820801
    4. '<|end|>' → logprob: -7.468686103820801
    5. '+)' → logprob: -9.0936861038208
    6. '")
' → logprob: -9.4686861038208
    7. '++++' → logprob: -9.9686861038208
    8. ')' → logprob: -10.0936861038208
    9. '+++' → logprob: -10.3436861038208
    10. '");' → logprob: -10.5936861038208

Token 664: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003197677666321397
    2. '")' → logprob: -5.75319766998291
    3. '<|end|>' → logprob: -11.50319766998291
    4. ')
' → logprob: -12.50319766998291
    5. '')' → logprob: -12.87819766998291
    6. '```' → logprob: -13.75319766998291
    7. '())' → logprob: -14.50319766998291
    8. '`)' → logprob: -14.50319766998291
    9. ')")' → logprob: -14.50319766998291
    10. '()' → logprob: -15.25319766998291

Token 665: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35484030842781067
    2. '<|end|>' → logprob: -1.7298402786254883
    3. '#' → logprob: -2.4798402786254883
    4. '```' → logprob: -3.3548402786254883
    5. ' if' → logprob: -6.354840278625488
    6. '
' → logprob: -7.979840278625488
    7. '<|end|>' → logprob: -8.479840278625488
    8. '[' → logprob: -8.604840278625488
    9. 'If' → logprob: -9.354840278625488
    10. '__' → logprob: -10.604840278625488

Token 666: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00043281487887725234
    2. '__' → logprob: -7.750432968139648
    3. ' _' → logprob: -13.500432968139648
    4. '_' → logprob: -14.875432968139648
    5. ' ' → logprob: -15.375432968139648
    6. ' ___' → logprob: -16.25043296813965
    7. ' ' → logprob: -17.25043296813965
    8. ' True' → logprob: -17.75043296813965
    9. ' ​' → logprob: -18.12543296813965
    10. ' ____' → logprob: -18.12543296813965

Token 667: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03175093233585358
    2. '==' → logprob: -4.1567511558532715
    3. ' ==' → logprob: -4.2817511558532715
    4. '.__' → logprob: -7.5317511558532715
    5. '__.__' → logprob: -8.031750679016113
    6. '__.' → logprob: -8.406750679016113
    7. '.' → logprob: -8.781750679016113
    8. ' __' → logprob: -8.906750679016113
    9. '=="' → logprob: -9.656750679016113
    10. '__["' → logprob: -9.781750679016113

Token 668: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00023476807109545916
    2. '__.__' → logprob: -8.375234603881836
    3. '__.' → logprob: -13.250234603881836
    4. '__["' → logprob: -14.375234603881836
    5. '==' → logprob: -14.625234603881836
    6. '__('' → logprob: -14.875234603881836
    7. '___' → logprob: -15.000234603881836
    8. '____' → logprob: -15.500234603881836
    9. '__[' → logprob: -16.000234603881836
    10. '__
' → logprob: -16.000234603881836

Token 669: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11847110837697983
    2. '==' → logprob: -2.243471145629883
    3. ' ==' → logprob: -5.868471145629883
    4. '=='' → logprob: -6.493471145629883
    5. '=="' → logprob: -6.743471145629883
    6. '_' → logprob: -10.993471145629883
    7. '__.__' → logprob: -11.243471145629883
    8. '___' → logprob: -11.368471145629883
    9. '[' → logprob: -11.493471145629883
    10. '__('' → logprob: -11.618471145629883

Token 670: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20146752893924713
    2. ''' → logprob: -1.701467514038086
    3. '__' → logprob: -10.201467514038086
    4. ' "__' → logprob: -11.326467514038086
    5. ' '__' → logprob: -12.826467514038086
    6. ''"' → logprob: -14.201467514038086
    7. '"name' → logprob: -15.326467514038086
    8. '"user' → logprob: -15.451467514038086
    9. '('__' → logprob: -15.701467514038086
    10. ''name' → logprob: -15.826467514038086

Token 671: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.4060561776859686e-05
    2. 'name' → logprob: -10.250043869018555
    3. 'python' → logprob: -12.625043869018555
    4. 'built' → logprob: -13.375043869018555
    5. 'py' → logprob: -14.000043869018555
    6. '"' → logprob: -14.125043869018555
    7. '__' → logprob: -14.750043869018555
    8. ' main' → logprob: -14.750043869018555
    9. '_main' → logprob: -15.000043869018555
    10. 'import' → logprob: -16.000043869018555

Token 672: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.11417139321565628
    2. '__' → logprob: -2.2391715049743652
    3. '__':
' → logprob: -6.864171504974365
    4. '__:' → logprob: -9.114171028137207
    5. '__.' → logprob: -9.489171028137207
    6. '__.__' → logprob: -9.864171028137207
    7. '__["' → logprob: -10.364171028137207
    8. '.__' → logprob: -11.614171028137207
    9. '.' → logprob: -11.864171028137207
    10. '__[' → logprob: -13.239171028137207

Token 673: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0027542340103536844
    2. ' main' → logprob: -6.002754211425781
    3. '	main' → logprob: -8.377754211425781
    4. '_main' → logprob: -10.377754211425781
    5. '   ' → logprob: -11.002754211425781
    6. '```' → logprob: -15.252754211425781
    7. '(main' → logprob: -15.627754211425781
    8. '    
' → logprob: -16.00275421142578
    9. '
' → logprob: -16.50275421142578
    10. 'Main' → logprob: -16.75275421142578

Token 674: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '	main' → logprob: -23.25
    4. '   ' → logprob: -26.5
    5. '(main' → logprob: -27.0
    6. '.main' → logprob: -27.25
    7. '_main' → logprob: -27.875
    8. 'Main' → logprob: -29.625
    9. '
' → logprob: -29.75
    10. '/main' → logprob: -31.125

Token 675: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 673
Tokens correctement prédits (1ère position, stricte): 321
Tokens correctement prédits (1ère position, avec adaptation): 346
Tokens correctement prédits (top 10): 561
Précision stricte (1ère position): 47.70%
Précision adaptée (1ère position): 51.41%
Précision (top 10): 83.36%
================================================================================
