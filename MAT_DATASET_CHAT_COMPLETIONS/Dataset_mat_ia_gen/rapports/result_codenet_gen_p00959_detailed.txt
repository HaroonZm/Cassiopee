================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

def medical_checkup():
    # Lecture des données d'entrée
    n, t = map(int, input().split())
    h = [int(input()) for _ in range(n)]

    # L'idée est de déterminer, pour chaque étudiant,
    # à quel item de checkup il est arrivé à l'instant t+0.5.

    # Chaque étudiant i passe les items dans l'ordre : 1, 2, 3, ...
    # Chaque item prend h[i] minutes pour lui
    # Donc le temps total pour terminer k items pour l'étudiant i est  k * h[i]

    # Tous les items sont réalisés séquentiellement par item,
    # c'est-à-dire que l'ordre des étudiants ne change pas,
    # mais les items sont "alignés" comme dans une chaîne de montage.

    # On peut voir cela comme un système où chaque étudiant passe la même séquence d'items,
    # mais le temps total pour finir k items pour un étudiant i est
    # k * h_i + temps d'attente dû au passage des étudiants précédents.

    # Le temps pour que le i-ème étudiant ait fini k items est :
    # sum_{j=1}^{i-1} (k * h_j) + k * h_i == k * (sum_{j=1}^i h_j)
    # donc le "pipeline" global avance à la vitesse cum_h = sum h_j (j=1..i)

    # Le problème se ramène à, pour chaque i,
    # trouver k tel que :
    # temps jusqu'à la fin du k-ième item pour l'étudiant i > t
    # mais pour (k-1)-ème item <= t

    # La fin du k-ième item pour l'étudiant i arrive à :
    # k * (sum_{j=1}^i h_j)

    # Nous cherchons donc k tel que :
    # k * prefix_sum[i] > t
    # k = ceil(t / prefix_sum[i])

    # L'item que l'étudiant i fait ou attend au temps t+0.5
    # est donc k = (t // prefix_sum[i]) + 1

    # Calcul des préfixes
    prefix_sum = [0] * n
    prefix_sum[0] = h[0]
    for i in range(1, n):
        prefix_sum[i] = prefix_sum[i-1] + h[i]

    # Calcul des items en cours
    # On fait un entier divisé par prefix_sum[i], on ajoute 1 à la division entière
    for i in range(n):
        item = t // prefix_sum[i] + 1
        print(item)

if __name__ == "__main__":
    medical_checkup()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.43662330508232117
    2. '.' → logprob: -1.1866233348846436
    3. 'import' → logprob: -4.0616230964660645
    4. '\' → logprob: -4.4366230964660645
    5. 'newline' → logprob: -5.1866230964660645
    6. '<|end|>' → logprob: -5.4366230964660645
    7. '
' → logprob: -5.9366230964660645
    8. '```' → logprob: -6.4366230964660645
    9. '' → logprob: -7.0616230964660645
    10. '<|end|>' → logprob: -7.1866230964660645

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013427028432488441
    2. '.' → logprob: -4.388427257537842
    3. ' (' → logprob: -8.013426780700684
    4. ')' → logprob: -9.013426780700684
    5. '[' → logprob: -9.138426780700684
    6. '()' → logprob: -9.513426780700684
    7. '('' → logprob: -9.888426780700684
    8. '(
' → logprob: -9.888426780700684
    9. ''' → logprob: -10.263426780700684
    10. ''s' → logprob: -10.638426780700684

Token 5: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.08015712350606918
    2. ' sys' → logprob: -2.5801570415496826
    3. 'input' → logprob: -6.705157279968262
    4. ' input' → logprob: -10.455157279968262
    5. '(sys' → logprob: -12.080157279968262
    6. '=sys' → logprob: -12.580157279968262
    7. '	sys' → logprob: -12.705157279968262
    8. 'lambda' → logprob: -15.205157279968262
    9. 'system' → logprob: -15.205157279968262
    10. ' ' → logprob: -15.330157279968262

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00026860725483857095
    2. '.readline' → logprob: -9.375268936157227
    3. ' .' → logprob: -10.375268936157227
    4. '[' → logprob: -10.500268936157227
    5. '.stdin' → logprob: -10.625268936157227
    6. '.import' → logprob: -10.750268936157227
    7. '.
' → logprob: -11.375268936157227
    8. '.setdefault' → logprob: -11.750268936157227
    9. '.`' → logprob: -12.000268936157227
    10. '.get' → logprob: -12.125268936157227

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28699058294296265
    2. '.readline' → logprob: -1.4119906425476074
    3. '.read' → logprob: -5.161990642547607
    4. '```' → logprob: -10.78699016571045
    5. '.Read' → logprob: -11.16199016571045
    6. 'read' → logprob: -11.28699016571045
    7. '.readlines' → logprob: -11.66199016571045
    8. '.\' → logprob: -12.03699016571045
    9. '.

' → logprob: -12.16199016571045
    10. '.
' → logprob: -12.28699016571045

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07035674154758453
    2. '(' → logprob: -2.945356845855713
    3. '()
' → logprob: -5.070356845855713
    4. '
' → logprob: -5.570356845855713
    5. '(
' → logprob: -5.945356845855713
    6. '\n' → logprob: -7.070356845855713
    7. '().' → logprob: -7.695356845855713
    8. '()\' → logprob: -7.820356845855713
    9. '\' → logprob: -8.070356369018555
    10. '()

' → logprob: -8.195356369018555

Token 9: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31658273935317993
    2. '(' → logprob: -1.3165826797485352
    3. 'def' → logprob: -6.566582679748535
    4. '(n' → logprob: -7.316582679748535
    5. '(
' → logprob: -8.441582679748535
    6. '().' → logprob: -8.566582679748535
    7. 'for' → logprob: -8.691582679748535
    8. '()
' → logprob: -8.941582679748535
    9. '()\' → logprob: -9.441582679748535
    10. '#' → logprob: -9.941582679748535

Token 10: ' medical' (ID: 7774)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002628096379339695
    2. ' space' → logprob: -7.252628326416016
    3. ' process' → logprob: -7.752628326416016
    4. '_' → logprob: -8.252628326416016
    5. ' calculate' → logprob: -8.627628326416016
    6. ' add' → logprob: -8.752628326416016
    7. ' read' → logprob: -9.002628326416016
    8. ' ' → logprob: -9.127628326416016
    9. ' my' → logprob: -9.252628326416016
    10. ' main' → logprob: -9.502628326416016

Token 11: '_check' (ID: 15847)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18674449622631073
    2. '(' → logprob: -1.9367444515228271
    3. '_data' → logprob: -5.186744689941406
    4. '_exam' → logprob: -5.186744689941406
    5. '():' → logprob: -5.686744689941406
    6. ' _' → logprob: -6.311744689941406
    7. '()' → logprob: -6.811744689941406
    8. '_history' → logprob: -6.811744689941406
    9. '_condition' → logprob: -6.811744689941406
    10. ' (' → logprob: -7.561744689941406

Token 12: 'up' (ID: 817)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13986043632030487
    2. '():' → logprob: -2.3898603916168213
    3. '_' → logprob: -3.3898603916168213
    4. ':' → logprob: -7.2648606300354
    5. '(:' → logprob: -7.8898606300354
    6. '(_' → logprob: -8.264860153198242
    7. '_:' → logprob: -8.514860153198242
    8. '(user' → logprob: -8.514860153198242
    9. '):' → logprob: -8.764860153198242
    10. '```' → logprob: -8.764860153198242

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0894806981086731
    2. '():' → logprob: -2.4644806385040283
    3. ':' → logprob: -8.46448040008545
    4. '(:' → logprob: -9.21448040008545
    5. '()' → logprob: -9.83948040008545
    6. ' (' → logprob: -10.96448040008545
    7. '(
' → logprob: -10.96448040008545
    8. '_' → logprob: -11.21448040008545
    9. '(user' → logprob: -11.46448040008545
    10. '(**' → logprob: -11.58948040008545

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03251201659440994
    2. '(' → logprob: -3.6575119495391846
    3. '    ' → logprob: -5.907512187957764
    4. ' ' → logprob: -6.657512187957764
    5. '    
' → logprob: -6.657512187957764
    6. '(n' → logprob: -8.907511711120605
    7. ' (' → logprob: -9.032511711120605
    8. '()' → logprob: -9.157511711120605
    9. '  ' → logprob: -9.532511711120605
    10. '\' → logprob: -10.032511711120605

Token 15: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2950982451438904
    2. '    ' → logprob: -2.545098304748535
    3. 'n' → logprob: -2.920098304748535
    4. ' ' → logprob: -2.920098304748535
    5. 'pass' → logprob: -4.545098304748535
    6. 'patient' → logprob: -4.545098304748535
    7. '(' → logprob: -4.795098304748535
    8. 'name' → logprob: -4.920098304748535
    9. ' name' → logprob: -5.295098304748535
    10. ' n' → logprob: -5.795098304748535

Token 16: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34598881006240845
    2. '    ' → logprob: -1.8459887504577637
    3. ' pass' → logprob: -2.5959887504577637
    4. '   ' → logprob: -3.3459887504577637
    5. 'pass' → logprob: -4.595988750457764
    6. ' patient' → logprob: -5.470988750457764
    7. '  ' → logprob: -6.345988750457764
    8. ' data' → logprob: -6.720988750457764
    9. ' #' → logprob: -6.845988750457764
    10. ' input' → logprob: -7.470988750457764

Token 17: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5849482417106628
    2. 's' → logprob: -1.8349483013153076
    3. '_' → logprob: -1.9599483013153076
    4. '_notes' → logprob: -3.0849483013153076
    5. '   ' → logprob: -3.5849483013153076
    6. ':' → logprob: -4.0849480628967285
    7. ' =' → logprob: -4.4599480628967285
    8. '    ' → logprob: -4.5849480628967285
    9. ' notes' → logprob: -5.0849480628967285
    10. '  ' → logprob: -5.9599480628967285

Token 18: ' données' (ID: 30580)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9022959470748901
    2. ' ' → logprob: -1.4022959470748901
    3. ' la' → logprob: -1.4022959470748901
    4. '   ' → logprob: -3.5272960662841797
    5. 'l' → logprob: -3.7772960662841797
    6. ' données' → logprob: -4.27729606628418
    7. ' input' → logprob: -5.52729606628418
    8. ' data' → logprob: -5.90229606628418
    9. ' patient' → logprob: -5.90229606628418
    10. 'd' → logprob: -6.02729606628418

Token 19: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07437709718942642
    2. ' ' → logprob: -3.3243770599365234
    3. '    ' → logprob: -4.324377059936523
    4. '  ' → logprob: -4.949377059936523
    5. '<|end|>' → logprob: -5.074377059936523
    6. '...' → logprob: -6.574377059936523
    7. '<|end|>' → logprob: -6.574377059936523
    8. '       ' → logprob: -6.949377059936523
    9. ' des' → logprob: -7.074377059936523
    10. ' (' → logprob: -7.449377059936523

Token 20: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.3434918522834778
    2. 'es' → logprob: -1.593491792678833
    3. 'e' → logprob: -2.843491792678833
    4. 'entrée' → logprob: -4.593492031097412
    5. 'u' → logprob: -5.843492031097412
    6. '’entrée' → logprob: -6.093492031097412
    7. ''âge' → logprob: -6.718492031097412
    8. ''' → logprob: -6.968492031097412
    9. ''une' → logprob: -7.218492031097412
    10. 'iagnostic' → logprob: -7.343492031097412

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01655380055308342
    2. '    
' → logprob: -5.14155387878418
    3. ' ' → logprob: -6.14155387878418
    4. '   
' → logprob: -6.39155387878418
    5. '\' → logprob: -6.51655387878418
    6. '    ' → logprob: -6.64155387878418
    7. '  
' → logprob: -7.14155387878418
    8. '  ' → logprob: -7.39155387878418
    9. '\n' → logprob: -7.64155387878418
    10. '```' → logprob: -7.89155387878418

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016205495921894908
    2. '    ' → logprob: -7.751620769500732
    3. '    
' → logprob: -7.876620769500732
    4. 'n' → logprob: -8.501620292663574
    5. ' ' → logprob: -8.751620292663574
    6. '(' → logprob: -9.626620292663574
    7. '  ' → logprob: -9.626620292663574
    8. '   
' → logprob: -10.001620292663574
    9. '       ' → logprob: -10.001620292663574
    10. 's' → logprob: -10.126620292663574

Token 23: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4234989285469055
    2. 'n' (adapté à ' n') → logprob: -1.1734988689422607
    3. '   ' → logprob: -3.7984988689422607
    4. ' age' → logprob: -5.54849910736084
    5. ' patient' → logprob: -5.92349910736084
    6. ' line' → logprob: -7.04849910736084
    7. '    ' → logprob: -7.42349910736084
    8. ' nb' → logprob: -7.42349910736084
    9. ' lines' → logprob: -7.92349910736084
    10. ' nombre' → logprob: -7.92349910736084

Token 24: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058436594903469086
    2. ' ' → logprob: -3.558436632156372
    3. ',' → logprob: -4.308436393737793
    4. '=' → logprob: -4.808436393737793
    5. ' ,' → logprob: -5.308436393737793
    6. '_' → logprob: -7.558436393737793
    7. '  ' → logprob: -8.058436393737793
    8. ')' → logprob: -8.183436393737793
    9. '=int' → logprob: -8.558436393737793
    10. ' )' → logprob: -8.933436393737793

Token 25: ' t' (ID: 260)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23094049096107483
    2. ' t' → logprob: -2.230940580368042
    3. ' k' → logprob: -3.730940580368042
    4. ' =' → logprob: -3.855940580368042
    5. ' m' → logprob: -4.105940341949463
    6. ' d' → logprob: -4.980940341949463
    7. '=' → logprob: -5.355940341949463
    8. 'm' → logprob: -5.605940341949463
    9. ' p' → logprob: -5.980940341949463
    10. '  ' → logprob: -5.980940341949463

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12606379389762878
    2. '=' → logprob: -2.251063823699951
    3. ',' → logprob: -4.751063823699951
    4. 'ime' → logprob: -6.626063823699951
    5. ' ' → logprob: -6.876063823699951
    6. 'imes' → logprob: -7.126063823699951
    7. 'emp' → logprob: -7.376063823699951
    8. '=int' → logprob: -8.626063346862793
    9. 'imestamp' → logprob: -9.751063346862793
    10. 'em' → logprob: -10.126063346862793

Token 27: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0012758307857438922
    2. 'map' → logprob: -7.001276016235352
    3. ' input' → logprob: -8.001276016235352
    4. ' ' → logprob: -10.876276016235352
    5. 'input' → logprob: -12.376276016235352
    6. ' list' → logprob: -13.251276016235352
    7. ' [' → logprob: -13.501276016235352
    8. '	map' → logprob: -14.001276016235352
    9. ' ' → logprob: -14.251276016235352
    10. '  ' → logprob: -14.251276016235352

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03291938453912735
    2. '(' → logprob: -3.532919406890869
    3. '(str' → logprob: -6.032919406890869
    4. '(input' → logprob: -7.282919406890869
    5. '(lambda' → logprob: -9.657918930053711
    6. '(in' → logprob: -12.032918930053711
    7. '(
' → logprob: -13.032918930053711
    8. '(list' → logprob: -13.657918930053711
    9. '(eval' → logprob: -13.657918930053711
    10. ' (' → logprob: -13.782918930053711

Token 29: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6975687146186829
    2. ',input' → logprob: -1.322568655014038
    3. ',' → logprob: -1.572568655014038
    4. '(' → logprob: -4.072568893432617
    5. 'input' → logprob: -4.697568893432617
    6. ')' → logprob: -6.322568893432617
    7. ' input' → logprob: -9.072568893432617
    8. ' ,' → logprob: -9.322568893432617
    9. '=input' → logprob: -10.322568893432617
    10. '(sys' → logprob: -11.572568893432617

Token 30: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.14270833134651184
    2. 'input' → logprob: -2.0177083015441895
    3. ')' → logprob: -10.517708778381348
    4. '(input' → logprob: -13.767708778381348
    5. ' )' → logprob: -13.892708778381348
    6. '=input' → logprob: -13.892708778381348
    7. ' ' → logprob: -14.017708778381348
    8. ',input' → logprob: -14.142708778381348
    9. '	input' → logprob: -14.392708778381348
    10. '_input' → logprob: -14.767708778381348

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00035488870344124734
    2. '()' → logprob: -8.000354766845703
    3. '())' → logprob: -11.000354766845703
    4. ' ().' → logprob: -13.500354766845703
    5. '()
' → logprob: -14.500354766845703
    6. '()))' → logprob: -14.625354766845703
    7. ')' → logprob: -16.125354766845703
    8. '(' → logprob: -16.625354766845703
    9. '()),' → logprob: -17.250354766845703
    10. '().
' → logprob: -17.250354766845703

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16965335607528687
    2. 'strip' → logprob: -1.9196534156799316
    3. 'rstrip' → logprob: -4.669653415679932
    4. '(split' → logprob: -12.294652938842773
    5. ')' → logprob: -12.919652938842773
    6. 'read' → logprob: -14.044652938842773
    7. ' split' → logprob: -14.919652938842773
    8. '(strip' → logprob: -15.544652938842773
    9. '())' → logprob: -15.919652938842773
    10. '```' → logprob: -16.044652938842773

Token 33: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003701973706483841
    2. ')' → logprob: -5.753702163696289
    3. '()' → logprob: -7.628702163696289
    4. '()))' → logprob: -10.503702163696289
    5. '(' → logprob: -12.628702163696289
    6. '))' → logprob: -12.878702163696289
    7. '())
' → logprob: -13.003702163696289
    8. '('' → logprob: -13.878702163696289
    9. ' ())' → logprob: -14.628702163696289
    10. '();)' → logprob: -15.378702163696289

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2408854216337204
    2. '
' → logprob: -2.1158854961395264
    3. ')' → logprob: -3.4908854961395264
    4. '    
' → logprob: -3.9908854961395264
    5. '\n' → logprob: -4.365885257720947
    6. '<|end|>' → logprob: -4.865885257720947
    7. ' 
' → logprob: -5.490885257720947
    8. ' ' → logprob: -5.615885257720947
    9. '  ' → logprob: -5.615885257720947
    10. '   
' → logprob: -5.865885257720947

Token 35: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28015077114105225
    2. ')' → logprob: -2.030150890350342
    3. '    
' → logprob: -4.030150890350342
    4. 'a' → logprob: -4.155150890350342
    5. ' times' → logprob: -4.655150890350342
    6. 't' → logprob: -4.780150890350342
    7. 'n' → logprob: -4.905150890350342
    8. ' 
' → logprob: -5.155150890350342
    9. 'times' → logprob: -5.155150890350342
    10. 's' → logprob: -5.405150890350342

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9302601218223572
    2. '=' → logprob: -1.180260181427002
    3. 'e' → logprob: -1.680260181427002
    4. ',' → logprob: -3.055260181427002
    5. '[' → logprob: -4.055260181427002
    6. '[i' → logprob: -4.680260181427002
    7. '   ' → logprob: -4.680260181427002
    8. ' ' → logprob: -4.930260181427002
    9. 's' → logprob: -5.680260181427002
    10. '[]' → logprob: -5.680260181427002

Token 37: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20150181651115417
    2. 'list' → logprob: -1.7015018463134766
    3. ' [' → logprob: -10.201501846313477
    4. '[' → logprob: -10.326501846313477
    5. ' ' → logprob: -12.201501846313477
    6. '[]' → logprob: -12.326501846313477
    7. '[list' → logprob: -12.451501846313477
    8. ' []' → logprob: -13.201501846313477
    9. 'map' → logprob: -13.701501846313477
    10. ' map' → logprob: -13.826501846313477

Token 38: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.939851037808694e-05
    2. ' int' → logprob: -11.125029563903809
    3. '*' → logprob: -12.000029563903809
    4. '0' → logprob: -12.375029563903809
    5. ']int' → logprob: -13.375029563903809
    6. '(int' → logprob: -14.250029563903809
    7. ']' → logprob: -14.625029563903809
    8. '   ' → logprob: -15.000029563903809
    9. '  ' → logprob: -15.375029563903809
    10. 'float' → logprob: -15.625029563903809

Token 39: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4282245635986328
    2. '(x' → logprob: -1.4282245635986328
    3. '(' → logprob: -2.303224563598633
    4. '(i' → logprob: -4.803224563598633
    5. ']' → logprob: -8.553224563598633
    6. '(
' → logprob: -9.428224563598633
    7. '(

' → logprob: -9.678224563598633
    8. '()]' → logprob: -10.178224563598633
    9. '(a' → logprob: -11.303224563598633
    10. '()' → logprob: -11.303224563598633

Token 40: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00014883324911352247
    2. '()' → logprob: -9.37514877319336
    3. '().' → logprob: -10.62514877319336
    4. '()]' → logprob: -10.75014877319336
    5. '()),' → logprob: -11.37514877319336
    6. '())
' → logprob: -12.62514877319336
    7. '()))' → logprob: -13.75014877319336
    8. ' ())' → logprob: -14.00014877319336
    9. ')' → logprob: -14.25014877319336
    10. '())

' → logprob: -15.62514877319336

Token 41: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06274855136871338
    2. '())' → logprob: -2.812748432159424
    3. '()]' → logprob: -7.312748432159424
    4. ')' → logprob: -9.937748908996582
    5. '(' → logprob: -10.312748908996582
    6. '().' → logprob: -10.812748908996582
    7. ' ()' → logprob: -12.437748908996582
    8. '()),' → logprob: -12.812748908996582
    9. ' ())' → logprob: -13.937748908996582
    10. '())
' → logprob: -14.437748908996582

Token 42: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2143409699201584
    2. '_' → logprob: -1.8393409252166748
    3. ' ' → logprob: -3.464340925216675
    4. ' in' → logprob: -6.589341163635254
    5. ' i' → logprob: -7.214341163635254
    6. '(' → logprob: -7.839341163635254
    7. ' range' → logprob: -8.714341163635254
    8. 'range' → logprob: -11.089341163635254
    9. '_i' → logprob: -12.589341163635254
    10. ' (' → logprob: -12.714341163635254

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02467566728591919
    2. 'in' → logprob: -4.1496758460998535
    3. 'range' → logprob: -4.8996758460998535
    4. ' range' → logprob: -7.0246758460998535
    5. ' ' → logprob: -8.399675369262695
    6. 'i' → logprob: -10.649675369262695
    7. '  ' → logprob: -11.774675369262695
    8. ' _' → logprob: -12.899675369262695
    9. '_' → logprob: -13.149675369262695
    10. 'ange' → logprob: -14.024675369262695

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005237075500190258
    2. ' range' → logprob: -5.255237102508545
    3. ' ' → logprob: -13.630236625671387
    4. '(range' → logprob: -14.380236625671387
    5. '	range' → logprob: -14.505236625671387
    6. 'rang' → logprob: -15.380236625671387
    7. '  ' → logprob: -15.505236625671387
    8. 'ran' → logprob: -16.130237579345703
    9. 'h' → logprob: -16.130237579345703
    10. '   ' → logprob: -16.130237579345703

Token 45: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001589618914294988
    2. '(' → logprob: -8.75015926361084
    3. ' (' → logprob: -15.12515926361084
    4. 'n' → logprob: -15.87515926361084
    5. '(t' → logprob: -17.500158309936523
    6. '(
' → logprob: -17.750158309936523
    7. ' n' → logprob: -18.250158309936523
    8. ')n' → logprob: -19.000158309936523
    9. ' ' → logprob: -19.250158309936523
    10. '(int' → logprob: -19.375158309936523

Token 46: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03377155959606171
    2. ']' → logprob: -3.408771514892578
    3. ')' → logprob: -9.283771514892578
    4. '])]' → logprob: -11.408771514892578
    5. ' ]' → logprob: -12.033771514892578
    6. '])' → logprob: -12.158771514892578
    7. '()]' → logprob: -13.158771514892578
    8. ']
' → logprob: -13.533771514892578
    9. '')]' → logprob: -13.658771514892578
    10. ')]
' → logprob: -14.033771514892578

Token 47: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0762747973203659
    2. '   ' → logprob: -2.951274871826172
    3. ' ' → logprob: -5.076274871826172
    4. ')' → logprob: -5.201274871826172
    5. '  
' → logprob: -6.451274871826172
    6. 'if' → logprob: -6.576274871826172
    7. '()' → logprob: -6.826274871826172
    8. ' if' → logprob: -6.951274871826172
    9. '    
' → logprob: -7.576274871826172
    10. 't' → logprob: -7.576274871826172

Token 48: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3174749612808228
    2. 'for' → logprob: -1.4424749612808228
    3. ' for' → logprob: -1.8174749612808228
    4. 'max' → logprob: -1.9424749612808228
    5. ' max' → logprob: -3.317474842071533
    6. 'result' → logprob: -3.817474842071533
    7. 'min' → logprob: -3.942474842071533
    8. '```' → logprob: -3.942474842071533
    9. 'best' → logprob: -4.317474842071533
    10. 'answer' → logprob: -4.817474842071533

Token 49: ' L' (ID: 451)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8547294735908508
    2. ' best' → logprob: -1.979729413986206
    3. ' for' → logprob: -2.354729413986206
    4. ' min' → logprob: -2.604729413986206
    5. 'max' → logprob: -3.104729413986206
    6. ' result' → logprob: -3.229729413986206
    7. 'for' → logprob: -3.729729413986206
    8. ' t' → logprob: -4.104729652404785
    9. 'best' → logprob: -4.104729652404785
    10. 'result' → logprob: -4.229729652404785

Token 50: ''idée' (ID: 131945)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6843069195747375
    2. 'e' → logprob: -0.8093069195747375
    3. 'im' → logprob: -3.9343068599700928
    4. 'es' → logprob: -5.309307098388672
    5. '#' → logprob: -5.934307098388672
    6. ''' → logprob: -6.184307098388672
    7. '   ' → logprob: -6.309307098388672
    8. 'ist' → logprob: -6.559307098388672
    9. 'et' → logprob: -6.934307098388672
    10. 'eur' → logprob: -6.934307098388672

Token 51: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.32048508524894714
    2. ':' → logprob: -1.9454851150512695
    3. 'est' → logprob: -2.8204851150512695
    4. ' :' → logprob: -3.5704851150512695
    5. ' de' → logprob: -4.6954851150512695
    6. 'de' → logprob: -5.0704851150512695
    7. ' principale' → logprob: -5.0704851150512695
    8. ' ' → logprob: -5.8204851150512695
    9. ' derrière' → logprob: -5.8204851150512695
    10. ' suivante' → logprob: -6.1954851150512695

Token 52: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2733772397041321
    2. ' d' → logprob: -1.6483771800994873
    3. ' to' → logprob: -4.398377418518066
    4. 'de' → logprob: -4.398377418518066
    5. 'd' → logprob: -4.898377418518066
    6. ' que' → logprob: -4.898377418518066
    7. ' ' → logprob: -5.523377418518066
    8. 'to' → logprob: -6.398377418518066
    9. 't' → logprob: -8.398377418518066
    10. '  ' → logprob: -8.523377418518066

Token 53: ' déterminer' (ID: 122024)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.8910483121871948
    2. 'min' → logprob: -1.7660483121871948
    3. ' trouver' → logprob: -1.8910483121871948
    4. 'max' → logprob: -2.7660484313964844
    5. 'chercher' → logprob: -3.6410484313964844
    6. ' utiliser' → logprob: -4.141048431396484
    7. ' maxim' → logprob: -4.641048431396484
    8. 'util' → logprob: -4.703548431396484
    9. ' max' → logprob: -4.953548431396484
    10. ' vérifier' → logprob: -5.016048431396484

Token 54: ',' (ID: 11)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.123813271522522
    2. ' la' → logprob: -1.248813271522522
    3. ' si' → logprob: -2.3738131523132324
    4. ' if' → logprob: -2.4988131523132324
    5. ' le' → logprob: -2.4988131523132324
    6. ' s' → logprob: -3.7488131523132324
    7. 'le' → logprob: -3.9988131523132324
    8. ' ' → logprob: -3.9988131523132324
    9. 'l' → logprob: -4.498813152313232
    10. ' quel' → logprob: -4.873813152313232

Token 55: ' pour' (ID: 1930)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.4143790006637573
    2. ' la' → logprob: -1.6643790006637573
    3. ' l' → logprob: -1.9143790006637573
    4. ' si' → logprob: -2.164379119873047
    5. ' combien' → logprob: -2.414379119873047
    6. ' if' → logprob: -2.539379119873047
    7. ' s' → logprob: -3.539379119873047
    8. 'le' → logprob: -3.914379119873047
    9. ' for' → logprob: -4.039379119873047
    10. 'l' → logprob: -4.289379119873047

Token 56: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.01013367809355259
    2. ' each' → logprob: -5.760133743286133
    3. ' ' → logprob: -6.135133743286133
    4. ' i' → logprob: -6.385133743286133
    5. ' chacune' → logprob: -7.385133743286133
    6. 'cha' → logprob: -7.885133743286133
    7. 'each' → logprob: -8.010133743286133
    8. 'i' → logprob: -8.635133743286133
    9. ' every' → logprob: -8.760133743286133
    10. ' l' → logprob: -8.760133743286133

Token 57: ' étudiant' (ID: 153135)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.427494078874588
    2. ' jour' → logprob: -2.1774940490722656
    3. 'i' → logprob: -2.4274940490722656
    4. 'patient' → logprob: -3.5524940490722656
    5. ' patient' → logprob: -3.5524940490722656
    6. 'jour' → logprob: -4.052494049072266
    7. ' moment' → logprob: -4.302494049072266
    8. 'h' → logprob: -4.552494049072266
    9. 'élé' → logprob: -5.427494049072266
    10. 'index' → logprob: -5.552494049072266

Token 58: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011367048136889935
    2. ' ,' → logprob: -4.636366844177246
    3. '<|end|>' → logprob: -7.386366844177246
    4. ')' → logprob: -8.511366844177246
    5. 's' → logprob: -9.011366844177246
    6. 'i' → logprob: -9.011366844177246
    7. ',i' → logprob: -9.511366844177246
    8. ':' → logprob: -9.886366844177246
    9. ',h' → logprob: -10.011366844177246
    10. 't' → logprob: -10.386366844177246

Token 59: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4236781597137451
    2. ')' → logprob: -1.9236781597137451
    3. 's' → logprob: -2.298678159713745
    4. ' la' → logprob: -2.298678159713745
    5. ' if' → logprob: -2.548678159713745
    6. ' l' → logprob: -2.923678159713745
    7. '    ' → logprob: -3.173678159713745
    8. '   ' → logprob: -3.173678159713745
    9. ' s' → logprob: -3.298678159713745
    10. ' si' → logprob: -3.548678159713745

Token 61: ' à' (ID: 1221)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9721055030822754
    2. ' combien' → logprob: -1.7221055030822754
    3. ' si' → logprob: -1.7221055030822754
    4. 's' → logprob: -2.2221055030822754
    5. ' if' → logprob: -2.9721055030822754
    6. 'si' → logprob: -4.097105503082275
    7. ' la' → logprob: -4.222105503082275
    8. ' le' → logprob: -4.347105503082275
    9. ' ' → logprob: -4.722105503082275
    10. 'le' → logprob: -5.097105503082275

Token 62: ' quel' (ID: 10613)
  Prédit: 'quel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quel' → logprob: -0.5014005899429321
    2. 'quelle' → logprob: -1.2514005899429321
    3. 'part' → logprob: -2.7514004707336426
    4. 'qu' → logprob: -4.626400470733643
    5. ' partir' → logprob: -4.751400470733643
    6. ' quel' → logprob: -5.126400470733643
    7. ' quelle' → logprob: -5.251400470733643
    8. '```' → logprob: -5.751400470733643
    9. '   ' → logprob: -6.251400470733643
    10. 'l' → logprob: -6.501400470733643

Token 63: ' item' (ID: 2169)
  Prédit: ' moment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' moment' → logprob: -0.163832426071167
    2. ' point' → logprob: -2.538832426071167
    3. 'point' → logprob: -3.288832426071167
    4. 'moment' → logprob: -3.538832426071167
    5. 'indice' → logprob: -6.663832664489746
    6. ' niveau' → logprob: -7.913832664489746
    7. 'interval' → logprob: -8.163832664489746
    8. ' instant' → logprob: -8.288832664489746
    9. 'niveau' → logprob: -8.538832664489746
    10. ' degré' → logprob: -8.538832664489746

Token 64: ' de' (ID: 334)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.9062289595603943
    2. ' on' → logprob: -1.156229019165039
    3. 's' → logprob: -3.031229019165039
    4. 't' → logprob: -3.031229019165039
    5. '```' → logprob: -3.531229019165039
    6. ' correspond' → logprob: -3.781229019165039
    7. 'on' → logprob: -4.281229019165039
    8. ' de' → logprob: -4.781229019165039
    9. 'niveau' → logprob: -4.781229019165039
    10. '<|end|>' → logprob: -4.781229019165039

Token 65: ' check' (ID: 2371)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.1353986263275146
    2. ' l' → logprob: -1.6353986263275146
    3. ' la' → logprob: -1.6353986263275146
    4. 'l' → logprob: -2.2603986263275146
    5. ' h' → logprob: -2.3853986263275146
    6. 't' → logprob: -3.3853986263275146
    7. 'la' → logprob: -3.7603986263275146
    8. 's' → logprob: -5.135398864746094
    9. ' t' → logprob: -5.510398864746094
    10. '```' → logprob: -5.510398864746094

Token 66: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.07360926270484924
    2. 'list' → logprob: -2.8236093521118164
    3. '-up' → logprob: -5.448609352111816
    4. 'point' → logprob: -5.823609352111816
    5. ' up' → logprob: -7.073609352111816
    6. 'liste' → logprob: -7.823609352111816
    7. 'in' → logprob: -7.948609352111816
    8. '_list' → logprob: -8.073609352111816
    9. '```' → logprob: -8.198609352111816
    10. 'points' → logprob: -8.198609352111816

Token 67: ' il' (ID: 1793)
  Prédit: ' il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.15150868892669678
    2. ' on' → logprob: -3.0265088081359863
    3. 's' → logprob: -3.6515088081359863
    4. 'il' → logprob: -4.401508808135986
    5. ' correspond' → logprob: -4.401508808135986
    6. ' ils' → logprob: -5.151508808135986
    7. 'on' → logprob: -5.526508808135986
    8. 't' → logprob: -5.651508808135986
    9. '   ' → logprob: -5.776508808135986
    10. '#' → logprob: -5.776508808135986

Token 68: ' est' (ID: 893)
  Prédit: ' correspond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -1.017496943473816
    2. ' faut' → logprob: -1.767496943473816
    3. 's' → logprob: -2.0174970626831055
    4. ' est' → logprob: -3.0174970626831055
    5. ' corresponds' → logprob: -3.0174970626831055
    6. ' faudra' → logprob: -3.3924970626831055
    7. ' doit' → logprob: -3.5174970626831055
    8. ' devra' → logprob: -3.6424970626831055
    9. ' pourra' → logprob: -4.0174970626831055
    10. 'f' → logprob: -4.3924970626831055

Token 69: ' arrivé' (ID: 109777)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7282080054283142
    2. 'ex' → logprob: -1.978208065032959
    3. 'assign' → logprob: -2.728208065032959
    4. 'le' → logprob: -2.853208065032959
    5. ' soumis' → logprob: -2.853208065032959
    6. ' expos' → logprob: -3.353208065032959
    7. 'ass' → logprob: -3.603208065032959
    8. ' susceptible' → logprob: -3.978208065032959
    9. 'sus' → logprob: -4.228208065032959
    10. ' le' → logprob: -4.915708065032959

Token 70: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4698890447616577
    2. 's' → logprob: -1.5948890447616577
    3. '(s' → logprob: -1.7198890447616577
    4. ',' → logprob: -1.9698890447616577
    5. ' (' → logprob: -3.0948891639709473
    6. '   ' → logprob: -3.0948891639709473
    7. '.' → logprob: -3.4698891639709473
    8. ' ' → logprob: -3.7198891639709473
    9. '()' → logprob: -3.8448891639709473
    10. '  ' → logprob: -4.469889163970947

Token 71: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.864234209060669
    2. 'temps' → logprob: -0.989234209060669
    3. ' l' → logprob: -2.614234209060669
    4. ' ' → logprob: -4.23923397064209
    5. '   ' → logprob: -4.23923397064209
    6. 'time' → logprob: -4.61423397064209
    7. 't' → logprob: -4.61423397064209
    8. ' temps' → logprob: -4.86423397064209
    9. ' la' → logprob: -4.98923397064209
    10. ' quel' → logprob: -5.11423397064209

Token 72: ''instant' (ID: 166425)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23765850067138672
    2. 'e' → logprob: -2.1126585006713867
    3. ''' → logprob: -2.8626585006713867
    4. ''instant' → logprob: -4.237658500671387
    5. ''a' → logprob: -5.112658500671387
    6. '')' → logprob: -5.487658500671387
    7. 'u' → logprob: -6.487658500671387
    8. ''i' → logprob: -6.487658500671387
    9. ''heure' → logprob: -7.112658500671387
    10. 'i' → logprob: -7.112658500671387

Token 73: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5257518291473389
    2. 't' → logprob: -1.2757518291473389
    3. ' ' → logprob: -2.900751829147339
    4. '0' → logprob: -3.025751829147339
    5. '_' → logprob: -5.150752067565918
    6. ' i' → logprob: -5.650752067565918
    7. 'i' → logprob: -5.900752067565918
    8. 's' → logprob: -6.150752067565918
    9. '`' → logprob: -7.025752067565918
    10. ' _' → logprob: -7.088252067565918

Token 74: '+' (ID: 10)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23737196624279022
    2. '
' → logprob: -2.1123719215393066
    3. '.' → logprob: -3.9873719215393066
    4. ',' → logprob: -4.362371921539307
    5. 'def' → logprob: -4.987371921539307
    6. '#' → logprob: -5.362371921539307
    7. '-' → logprob: -5.362371921539307
    8. '<|end|>' → logprob: -5.487371921539307
    9. '    
' → logprob: -5.487371921539307
    10. ':' → logprob: -5.612371921539307

Token 75: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08279792219400406
    2. ' ' → logprob: -2.5827980041503906
    3. '-' → logprob: -6.582798004150391
    4. '2' → logprob: -7.707798004150391
    5. 'i' → logprob: -7.707798004150391
    6. '0' → logprob: -8.33279800415039
    7. '  ' → logprob: -8.77029800415039
    8. '+' → logprob: -8.83279800415039
    9. ')' → logprob: -9.27029800415039
    10. 's' → logprob: -9.39529800415039

Token 76: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: '5' (ID: 20)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07160749286413193
    2. '
' → logprob: -3.8216075897216797
    3. ' ' → logprob: -3.9466075897216797
    4. 'for' → logprob: -5.69660758972168
    5. '    
' → logprob: -5.94660758972168
    6. '  ' → logprob: -5.94660758972168
    7. '```' → logprob: -5.94660758972168
    8. ' for' → logprob: -6.07160758972168
    9. '<|end|>' → logprob: -6.19660758972168
    10. '    ' → logprob: -6.32160758972168

Token 78: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6859151124954224
    2. '
' → logprob: -1.3109151124954224
    3. ' ' → logprob: -2.560914993286133
    4. '    
' → logprob: -3.560914993286133
    5. ':' → logprob: -3.935914993286133
    6. ')' → logprob: -4.060914993286133
    7. ' 
' → logprob: -4.185914993286133
    8. ',' → logprob: -4.310914993286133
    9. '    ' → logprob: -4.685914993286133
    10. '<|end|>' → logprob: -4.810914993286133

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0244317464530468
    2. '
' → logprob: -4.2744317054748535
    3. '    ' → logprob: -6.0244317054748535
    4. '    
' → logprob: -6.2744317054748535
    5. ' ' → logprob: -6.7744317054748535
    6. '  ' → logprob: -7.1494317054748535
    7. 'for' → logprob: -7.5244317054748535
    8. ' for' → logprob: -7.5244317054748535
    9. ' 
' → logprob: -7.6494317054748535
    10. '```' → logprob: -7.7744317054748535

Token 80: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.835628092288971
    2. 'result' → logprob: -1.8356280326843262
    3. 'for' → logprob: -2.585628032684326
    4. 'res' → logprob: -2.710628032684326
    5. ' for' → logprob: -2.835628032684326
    6. ' result' → logprob: -3.835628032684326
    7. ' res' → logprob: -3.835628032684326
    8. '
' → logprob: -3.835628032684326
    9. ' ' → logprob: -4.335628032684326
    10. 'max' → logprob: -4.585628032684326

Token 81: ' Chaque' (ID: 94758)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.9580249786376953
    2. ' max' → logprob: -2.0830249786376953
    3. 'max' → logprob: -2.3330249786376953
    4. 'result' → logprob: -2.8330249786376953
    5. 'dp' → logprob: -2.9580249786376953
    6. 'for' → logprob: -3.0830249786376953
    7. 'res' → logprob: -3.0830249786376953
    8. ' result' → logprob: -3.4580249786376953
    9. ' min' → logprob: -3.7080249786376953
    10. 'idx' → logprob: -3.8330249786376953

Token 82: ' étudiant' (ID: 153135)
  Prédit: ' étudiant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étudiant' → logprob: -0.8560894727706909
    2. 'item' → logprob: -2.1060895919799805
    3. 'interval' → logprob: -2.9810895919799805
    4. 'student' → logprob: -3.1060895919799805
    5. 'ét' → logprob: -3.2310895919799805
    6. 'élé' → logprob: -3.2310895919799805
    7. ' item' → logprob: -3.3560895919799805
    8. 'h' → logprob: -3.7310895919799805
    9. 'i' → logprob: -3.9810895919799805
    10. ' interval' → logprob: -4.2310895919799805

Token 83: ' i' (ID: 575)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -1.8372876644134521
    2. ' a' → logprob: -1.9622876644134521
    3. 'a' → logprob: -2.337287664413452
    4. 's' → logprob: -2.462287664413452
    5. 'arr' → logprob: -2.462287664413452
    6. ' est' → logprob: -2.587287664413452
    7. ' has' → logprob: -3.212287664413452
    8. ',' → logprob: -3.837287664413452
    9. ' starts' → logprob: -3.837287664413452
    10. ' is' → logprob: -3.962287664413452

Token 84: ' passe' (ID: 22210)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0618281364440918
    2. 'a' → logprob: -2.436828136444092
    3. ' arrive' → logprob: -2.561828136444092
    4. ''s' → logprob: -2.686828136444092
    5. 'arr' → logprob: -2.811828136444092
    6. ' commence' → logprob: -3.061828136444092
    7. ' has' → logprob: -3.436828136444092
    8. ' est' → logprob: -3.686828136444092
    9. ' arrives' → logprob: -4.061828136444092
    10. ',' → logprob: -4.061828136444092

Token 85: ' les' (ID: 1341)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8284926414489746
    2. ' par' → logprob: -1.5784926414489746
    3. ' au' → logprob: -2.3284926414489746
    4. ' through' → logprob: -2.8284926414489746
    5. ' un' → logprob: -3.0784926414489746
    6. 'par' → logprob: -3.4534926414489746
    7. ' ' → logprob: -3.8284926414489746
    8. ' le' → logprob: -4.203492641448975
    9. ' son' → logprob: -4.453492641448975
    10. ' une' → logprob: -4.578492641448975

Token 86: ' items' (ID: 4732)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.9127518534660339
    2. ' h' → logprob: -1.4127519130706787
    3. 't' → logprob: -2.6627519130706787
    4. ' t' → logprob: -3.0377519130706787
    5. ' n' → logprob: -3.2877519130706787
    6. 'n' → logprob: -3.5377519130706787
    7. ' ' → logprob: -3.6627519130706787
    8. 'check' → logprob: -3.9127519130706787
    9. ' items' → logprob: -4.0377516746521
    10. ' check' → logprob: -4.2877516746521

Token 87: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6838061809539795
    2. ' de' → logprob: -1.9338061809539795
    3. ' j' → logprob: -2.3088061809539795
    4. ' h' → logprob: -2.9338061809539795
    5. ' dans' → logprob: -2.9338061809539795
    6. ' à' → logprob: -3.0588061809539795
    7. 'h' → logprob: -3.0588061809539795
    8. '[i' → logprob: -3.1838061809539795
    9. '[j' → logprob: -3.3088061809539795
    10. '[' → logprob: -3.4338061809539795

Token 88: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5464410781860352
    2. ' l' → logprob: -1.1714410781860352
    3. 'ordre' → logprob: -3.296441078186035
    4. ''ordre' → logprob: -4.546441078186035
    5. 'order' → logprob: -4.671441078186035
    6. 'h' → logprob: -5.171441078186035
    7. 'un' → logprob: -5.296441078186035
    8. '[l' → logprob: -5.546441078186035
    9. ' order' → logprob: -5.546441078186035
    10. 'range' → logprob: -5.733941078186035

Token 89: ''ordre' (ID: 124753)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6220660209655762
    2. ' range' → logprob: -1.4970660209655762
    3. 'a' → logprob: -1.7470660209655762
    4. ''ordre' → logprob: -3.372066020965576
    5. 'e' → logprob: -4.747066020965576
    6. ' h' → logprob: -6.372066020965576
    7. '[' → logprob: -6.622066020965576
    8. 'ange' → logprob: -6.747066020965576
    9. 'ist' → logprob: -6.747066020965576
    10. ' a' → logprob: -6.747066020965576

Token 90: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31733638048171997
    2. ':' → logprob: -2.817336320877075
    3. ' h' → logprob: -3.067336320877075
    4. '.' → logprob: -3.317336320877075
    5. 'h' → logprob: -3.692336320877075
    6. ' ,' → logprob: -4.192336559295654
    7. ' de' → logprob: -4.317336559295654
    8. '   ' → logprob: -4.692336559295654
    9. '[i' → logprob: -4.692336559295654
    10. 'for' → logprob: -5.067336559295654

Token 91: ' ' (ID: 220)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.0298374891281128
    2. ' range' → logprob: -1.2798374891281128
    3. 'range' → logprob: -1.9048374891281128
    4. ' for' → logprob: -2.1548376083374023
    5. 'for' → logprob: -3.0298376083374023
    6. 'h' → logprob: -3.2798376083374023
    7. ' pass' → logprob: -5.529837608337402
    8. ' ' → logprob: -5.529837608337402
    9. '   ' → logprob: -6.154837608337402
    10. '0' → logprob: -6.904837608337402

Token 92: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6361879110336304
    2. 'h' → logprob: -1.3861879110336304
    3. ' range' → logprob: -1.8861879110336304
    4. ' h' → logprob: -3.38618803024292
    5. 'for' → logprob: -3.88618803024292
    6. ' for' → logprob: -4.88618803024292
    7. ' ' → logprob: -6.63618803024292
    8. '1' → logprob: -6.94868803024292
    9. '   ' → logprob: -7.32368803024292
    10. '(range' → logprob: -7.63618803024292

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07102672755718231
    2. ' ,' → logprob: -3.4460268020629883
    3. ' +' → logprob: -4.071026802062988
    4. '+' → logprob: -4.196026802062988
    5. ' ' → logprob: -6.321026802062988
    6. ' for' → logprob: -7.446026802062988
    7. '1' → logprob: -8.196026802062988
    8. '0' → logprob: -8.196026802062988
    9. '  ' → logprob: -8.571026802062988
    10. ',...' → logprob: -8.946026802062988

Token 94: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.32014816999435425
    2. ' ' → logprob: -1.320148229598999
    3. ',' → logprob: -5.57014799118042
    4. ' ,' → logprob: -6.19514799118042
    5. '1' → logprob: -8.445148468017578
    6. ' n' → logprob: -8.570148468017578
    7. ' i' → logprob: -8.695148468017578
    8. '```' → logprob: -9.320148468017578
    9. ' t' → logprob: -9.570148468017578
    10. '  ' → logprob: -9.945148468017578

Token 95: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023462209850549698
    2. ' ' → logprob: -3.7734622955322266
    3. ',' → logprob: -8.898462295532227
    4. '1' → logprob: -10.148462295532227
    5. ' ,' → logprob: -10.773462295532227
    6. '  ' → logprob: -12.023462295532227
    7. '```' → logprob: -12.585962295532227
    8. '...' → logprob: -13.398462295532227
    9. '0' → logprob: -14.023462295532227
    10. '
' → logprob: -14.085962295532227

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004528374411165714
    2. ' ,' → logprob: -8.125452995300293
    3. '+' → logprob: -9.750452995300293
    4. ',...' → logprob: -10.250452995300293
    5. ',
' → logprob: -10.375452995300293
    6. '...' → logprob: -11.500452995300293
    7. ' +' → logprob: -12.375452995300293
    8. '1' → logprob: -12.500452995300293
    9. 'def' → logprob: -13.000452995300293
    10. '<|end|>' → logprob: -13.125452995300293

Token 97: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10255729407072067
    2. ' ' → logprob: -2.3525571823120117
    3. ',' → logprob: -6.602557182312012
    4. '...' → logprob: -7.977557182312012
    5. '...,' → logprob: -8.352557182312012
    6. ' ,' → logprob: -8.477557182312012
    7. '1' → logprob: -9.352557182312012
    8. ' ...' → logprob: -10.102557182312012
    9. ' ...,' → logprob: -10.102557182312012
    10. '```' → logprob: -11.352557182312012

Token 98: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0025397518184036016
    2. '...' → logprob: -6.87753963470459
    3. '...,' → logprob: -7.00253963470459
    4. '1' → logprob: -8.00253963470459
    5. ' ' → logprob: -8.62753963470459
    6. ',' → logprob: -9.75253963470459
    7. '```' → logprob: -11.12753963470459
    8. ',...' → logprob: -13.00253963470459
    9. ' ...,' → logprob: -13.25253963470459
    10. '...
' → logprob: -13.50253963470459

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004620949272066355
    2. ' ,' → logprob: -5.7546210289001465
    3. '...' → logprob: -7.3796210289001465
    4. ',...' → logprob: -7.5046210289001465
    5. ',
' → logprob: -8.629620552062988
    6. ' ...' → logprob: -10.754620552062988
    7. '+' → logprob: -11.504620552062988
    8. ' +' → logprob: -11.629620552062988
    9. 'import' → logprob: -11.754620552062988
    10. '   ' → logprob: -11.754620552062988

Token 100: ' ...
' (ID: 12646)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.9158948659896851
    2. ' ' → logprob: -1.415894865989685
    3. '...' → logprob: -1.915894865989685
    4. ' ...' → logprob: -2.1658949851989746
    5. ' ...,' → logprob: -3.1658949851989746
    6. '...,' → logprob: -3.4158949851989746
    7. ',' → logprob: -4.665894985198975
    8. ' ,' → logprob: -4.790894985198975
    9. '  ' → logprob: -7.165894985198975
    10. ',...' → logprob: -7.665894985198975

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10612524300813675
    2. ',' → logprob: -2.4811253547668457
    3. ')' → logprob: -5.481125354766846
    4. 'for' → logprob: -6.106125354766846
    5. ' ,' → logprob: -6.106125354766846
    6. ' for' → logprob: -6.481125354766846
    7. '  ' → logprob: -6.606125354766846
    8. '
' → logprob: -7.356125354766846
    9. '    
' → logprob: -7.481125354766846
    10. 't' → logprob: -7.856125354766846

Token 102: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016497397795319557
    2. ',' → logprob: -5.766497611999512
    3. '
' → logprob: -6.016497611999512
    4. ' for' → logprob: -6.516497611999512
    5. 'for' → logprob: -6.641497611999512
    6. '  ' → logprob: -6.766497611999512
    7. ' ' → logprob: -7.016497611999512
    8. 'total' → logprob: -7.141497611999512
    9. ')' → logprob: -7.266497611999512
    10. 'time' → logprob: -7.516497611999512

Token 103: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3106580972671509
    2. 'time' → logprob: -1.3106580972671509
    3. ' time' → logprob: -2.3106579780578613
    4. 'for' → logprob: -2.4356579780578613
    5. ' for' → logprob: -2.8106579780578613
    6. 'total' → logprob: -2.9356579780578613
    7. 'current' → logprob: -3.5606579780578613
    8. 'remaining' → logprob: -3.6856579780578613
    9. ' total' → logprob: -3.9356579780578613
    10. 'i' → logprob: -4.060657978057861

Token 104: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.27874231338500977
    2. ' item' → logprob: -1.5287423133850098
    3. 'check' → logprob: -5.40374231338501
    4. 'time' → logprob: -5.77874231338501
    5. ' check' → logprob: -6.15374231338501
    6. 'student' → logprob: -6.52874231338501
    7. '#' → logprob: -6.65374231338501
    8. 'h' → logprob: -6.77874231338501
    9. 'temps' → logprob: -6.77874231338501
    10. ' étudiant' → logprob: -6.77874231338501

Token 105: ' prend' (ID: 37463)
  Prédit: ' dure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dure' → logprob: -0.8382314443588257
    2. ' prend' → logprob: -1.0882314443588257
    3. 'pr' → logprob: -2.7132315635681152
    4. ' i' → logprob: -3.2132315635681152
    5. ' prends' → logprob: -3.7132315635681152
    6. 'a' → logprob: -3.9632315635681152
    7. 'i' → logprob: -4.213231563568115
    8. 'd' → logprob: -4.838231563568115
    9. 'j' → logprob: -5.088231563568115
    10. ' ' → logprob: -5.088231563568115

Token 106: ' h' (ID: 312)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6423394680023193
    2. 't' → logprob: -1.0173394680023193
    3. ' ' → logprob: -3.3923394680023193
    4. ' t' → logprob: -3.6423394680023193
    5. ' exactement' → logprob: -4.267339706420898
    6. 'h' → logprob: -4.392339706420898
    7. ' un' → logprob: -5.017339706420898
    8. '2' → logprob: -5.517339706420898
    9. ' h' → logprob: -5.642339706420898
    10. 'un' → logprob: -5.767339706420898

Token 107: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006221305229701102
    2. '[' → logprob: -7.750622272491455
    3. '[j' → logprob: -9.625621795654297
    4. '[h' → logprob: -9.625621795654297
    5. '[t' → logprob: -10.500621795654297
    6. '[_' → logprob: -11.375621795654297
    7. '[n' → logprob: -11.875621795654297
    8. '[int' → logprob: -12.250621795654297
    9. 'i' → logprob: -13.125621795654297
    10. '[k' → logprob: -14.250621795654297

Token 108: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23291011154651642
    2. '[i' → logprob: -1.73291015625
    3. '])' → logprob: -3.85791015625
    4. ']+' → logprob: -5.85791015625
    5. '][' → logprob: -5.98291015625
    6. '[' → logprob: -6.73291015625
    7. ']*' → logprob: -6.85791015625
    8. '[j' → logprob: -6.98291015625
    9. '-' → logprob: -7.35791015625
    10. ']-' → logprob: -8.85791015625

Token 109: ' minutes' (ID: 5438)
  Prédit: ' secondes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' secondes' → logprob: -1.0075949430465698
    2. '+' → logprob: -1.3825949430465698
    3. '<|end|>' → logprob: -2.1325950622558594
    4. '*' → logprob: -3.5075950622558594
    5. 's' → logprob: -3.5075950622558594
    6. 'time' → logprob: -4.007595062255859
    7. ' temps' → logprob: -4.132595062255859
    8. '```' → logprob: -4.132595062255859
    9. ' time' → logprob: -4.257595062255859
    10. ' seconds' → logprob: -4.257595062255859

Token 110: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012345761992037296
    2. '
' → logprob: -5.387345790863037
    3. '    
' → logprob: -5.512345790863037
    4. '.' → logprob: -6.637345790863037
    5. ',' → logprob: -6.887345790863037
    6. ')' → logprob: -8.137345314025879
    7. 'def' → logprob: -8.762345314025879
    8. '    

' → logprob: -8.762345314025879
    9. '

' → logprob: -8.887345314025879
    10. '    
    
' → logprob: -10.012345314025879

Token 111: ' lui' (ID: 10623)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.22536467015743256
    2. ' passer' → logprob: -2.2253646850585938
    3. 'être' → logprob: -3.4753646850585938
    4. 'h' → logprob: -4.350364685058594
    5. ' être' → logprob: -5.100364685058594
    6. 'l' → logprob: -5.100364685058594
    7. ' compléter' → logprob: -5.475364685058594
    8. 'i' → logprob: -5.475364685058594
    9. ' pass' → logprob: -5.600364685058594
    10. ' i' → logprob: -5.725364685058594

Token 112: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03160148486495018
    2. '
' → logprob: -4.781601428985596
    3. ',' → logprob: -5.156601428985596
    4. '    
' → logprob: -5.406601428985596
    5. '.' → logprob: -5.531601428985596
    6. ')' → logprob: -5.781601428985596
    7. '\n' → logprob: -7.281601428985596
    8. '  
' → logprob: -7.531601428985596
    9. '  ' → logprob: -7.656601428985596
    10. ' ' → logprob: -7.781601428985596

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0063732098788022995
    2. '
' → logprob: -6.006373405456543
    3. '    
' → logprob: -6.381373405456543
    4. ')' → logprob: -7.006373405456543
    5. '  ' → logprob: -8.006373405456543
    6. '\n' → logprob: -8.631373405456543
    7. ',' → logprob: -8.631373405456543
    8. '   
' → logprob: -9.006373405456543
    9. '  
' → logprob: -9.506373405456543
    10. '.' → logprob: -9.756373405456543

Token 114: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05410278961062431
    2. '
' → logprob: -3.179102897644043
    3. '    
' → logprob: -5.429102897644043
    4. ')' → logprob: -6.304102897644043
    5. '  ' → logprob: -6.679102897644043
    6. '   
' → logprob: -7.179102897644043
    7. '\n' → logprob: -7.679102897644043
    8. '  
' → logprob: -7.929102897644043
    9. ',' → logprob: -8.429102897644043
    10. '

' → logprob: -8.554102897644043

Token 115: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03718581050634384
    2. 'for' → logprob: -5.4121856689453125
    3. ' time' → logprob: -5.7871856689453125
    4. 'remaining' → logprob: -5.7871856689453125
    5. 'result' → logprob: -5.9121856689453125
    6. ' for' → logprob: -6.0371856689453125
    7. 'time' → logprob: -6.0371856689453125
    8. '#' → logprob: -6.2871856689453125
    9. 'max' → logprob: -6.6621856689453125
    10. ' result' → logprob: -6.7871856689453125

Token 116: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.7583261728286743
    2. ',' → logprob: -1.8833261728286743
    3. 'le' → logprob: -1.8833261728286743
    4. ' le' → logprob: -2.6333260536193848
    5. ' l' → logprob: -3.0083260536193848
    6. ' il' → logprob: -3.0083260536193848
    7. '   ' → logprob: -3.1333260536193848
    8. ' chaque' → logprob: -3.1333260536193848
    9. ' à' → logprob: -3.6333260536193848
    10. ' la' → logprob: -3.6333260536193848

Token 117: ' temps' (ID: 11160)
  Prédit: ' temps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.4852297604084015
    2. 'temps' → logprob: -1.610229730606079
    3. ' reste' → logprob: -3.110229730606079
    4. ' cycle' → logprob: -3.485229730606079
    5. ' t' → logprob: -3.985229730606079
    6. ' total' → logprob: -4.235229969024658
    7. ' code' → logprob: -4.360229969024658
    8. 't' → logprob: -4.860229969024658
    9. 'total' → logprob: -4.985229969024658
    10. ' i' → logprob: -5.360229969024658

Token 118: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.3557010889053345
    2. ' =' → logprob: -2.480700969696045
    3. '_total' → logprob: -2.605700969696045
    4. 's' → logprob: -2.605700969696045
    5. '_pass' → logprob: -2.605700969696045
    6. '=' → logprob: -2.855700969696045
    7. 'pour' → logprob: -3.230700969696045
    8. ' total' → logprob: -3.230700969696045
    9. 'pass' → logprob: -3.480700969696045
    10. ' passé' → logprob: -3.855700969696045

Token 119: ' pour' (ID: 1930)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pour' → logprob: -1.2003120183944702
    2. ' =' → logprob: -2.0753121376037598
    3. ' pour' → logprob: -2.3253121376037598
    4. '   ' → logprob: -2.3253121376037598
    5. ' nécessaire' → logprob: -2.9503121376037598
    6. '=' → logprob: -3.3253121376037598
    7. 'total' → logprob: -3.3253121376037598
    8. 'pass' → logprob: -3.7003121376037598
    9. ' que' → logprob: -3.7003121376037598
    10. 'pris' → logprob: -3.8253121376037598

Token 120: ' terminer' (ID: 152867)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.8119932413101196
    2. ' chaque' → logprob: -2.06199312210083
    3. ' i' → logprob: -2.18699312210083
    4. 'h' → logprob: -2.18699312210083
    5. ' l' → logprob: -2.68699312210083
    6. ' passer' → logprob: -2.68699312210083
    7. ' h' → logprob: -2.81199312210083
    8. 'i' → logprob: -2.93699312210083
    9. 'pass' → logprob: -2.93699312210083
    10. 'un' → logprob: -3.43699312210083

Token 121: ' k' (ID: 372)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.135246142745018
    2. ' h' → logprob: -3.0102460384368896
    3. ' une' → logprob: -3.7602460384368896
    4. 'un' → logprob: -4.385246276855469
    5. ' l' → logprob: -4.885246276855469
    6. ' le' → logprob: -5.385246276855469
    7. ' la' → logprob: -5.385246276855469
    8. ' all' → logprob: -5.510246276855469
    9. ' =' → logprob: -5.760246276855469
    10. ' n' → logprob: -5.885246276855469

Token 122: ' items' (ID: 4732)
  Prédit: ' items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.6551479697227478
    2. ' *' → logprob: -1.2801480293273926
    3. ' ' → logprob: -2.5301480293273926
    4. 'items' → logprob: -2.9051480293273926
    5. '+' → logprob: -4.280148029327393
    6. '*' → logprob: -4.280148029327393
    7. '_items' → logprob: -4.780148029327393
    8. ')' → logprob: -5.030148029327393
    9. ' =' → logprob: -5.905148029327393
    10. ' h' → logprob: -6.280148029327393

Token 123: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6571428775787354
    2. ' est' → logprob: -1.4071428775787354
    3. '=' → logprob: -2.2821428775787354
    4. ' pour' → logprob: -3.2821428775787354
    5. '   ' → logprob: -3.5321428775787354
    6. ' ' → logprob: -4.657142639160156
    7. ' k' → logprob: -4.657142639160156
    8. ',' → logprob: -4.782142639160156
    9. '*' → logprob: -4.907142639160156
    10. ' *' → logprob: -5.032142639160156

Token 124: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5342597365379333
    2. ' l' → logprob: -2.034259796142578
    3. ' un' → logprob: -2.284259796142578
    4. 'i' → logprob: -2.534259796142578
    5. ' i' → logprob: -2.784259796142578
    6. 'un' → logprob: -3.659259796142578
    7. 'student' → logprob: -5.284259796142578
    8. ' étudiant' → logprob: -5.784259796142578
    9. ' chaque' → logprob: -7.034259796142578
    10. ' student' → logprob: -7.284259796142578

Token 125: ''ét' (ID: 23771)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0039154291152954
    2. '[i' → logprob: -1.0039154291152954
    3. 'h' → logprob: -2.503915309906006
    4. 'e' → logprob: -3.128915309906006
    5. 'i' → logprob: -3.253915309906006
    6. ''utilisateur' → logprob: -3.878915309906006
    7. ''ét' → logprob: -4.003915309906006
    8. 'ui' → logprob: -4.003915309906006
    9. ''i' → logprob: -4.878915309906006
    10. 'n' → logprob: -5.253915309906006

Token 126: 'udiant' (ID: 101120)
  Prédit: 'udiant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udiant' → logprob: -0.0509270541369915
    2. 'l' → logprob: -4.42592716217041
    3. 'ève' → logprob: -4.80092716217041
    4. 't' → logprob: -5.05092716217041
    5. 'udiante' → logprob: -5.05092716217041
    6. 'ud' → logprob: -5.67592716217041
    7. 'def' → logprob: -6.17592716217041
    8. 'student' → logprob: -6.42592716217041
    9. 'i' → logprob: -6.55092716217041
    10. 'udent' → logprob: -6.55092716217041

Token 127: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0226296279579401
    2. ' i' → logprob: -4.022629737854004
    3. 'i' → logprob: -5.522629737854004
    4. ' [' → logprob: -8.147629737854004
    5. '[' → logprob: -9.522629737854004
    6. '   ' → logprob: -10.147629737854004
    7. ')' → logprob: -11.147629737854004
    8. '(i' → logprob: -11.147629737854004
    9. '_i' → logprob: -12.022629737854004
    10. ' ' → logprob: -12.272629737854004

Token 128: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.12153234332799911
    2. ' is' → logprob: -2.996532440185547
    3. '#' → logprob: -3.621532440185547
    4. ' =' → logprob: -4.621532440185547
    5. ' #' → logprob: -5.246532440185547
    6. ' s' → logprob: -5.371532440185547
    7. ' i' → logprob: -5.746532440185547
    8. ',' → logprob: -5.996532440185547
    9. ' ' → logprob: -6.246532440185547
    10. '   ' → logprob: -6.246532440185547

Token 129: ' ' (ID: 220)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.22151127457618713
    2. 'k' → logprob: -1.9715112447738647
    3. ' h' → logprob: -3.4715113639831543
    4. ' (' → logprob: -3.8465113639831543
    5. 'h' → logprob: -5.721511363983154
    6. '   ' → logprob: -6.596511363983154
    7. '(k' → logprob: -6.971511363983154
    8. ' t' → logprob: -7.596511363983154
    9. '    ' → logprob: -7.846511363983154
    10. '(' → logprob: -8.971510887145996

Token 130: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.461972177028656
    2. ' k' → logprob: -1.3369722366333008
    3. ' h' → logprob: -3.086972236633301
    4. 'h' → logprob: -3.211972236633301
    5. ' (' → logprob: -4.836972236633301
    6. '(k' → logprob: -4.961972236633301
    7. ' lambda' → logprob: -6.461972236633301
    8. '(h' → logprob: -6.961972236633301
    9. ' t' → logprob: -6.961972236633301
    10. 'lambda' → logprob: -7.336972236633301

Token 131: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08951851725578308
    2. '*' → logprob: -2.4645185470581055
    3. '*h' → logprob: -7.4645185470581055
    4. ' ' → logprob: -12.714518547058105
    5. ' ' → logprob: -13.964518547058105
    6. '*(' → logprob: -14.714518547058105
    7. '*t' → logprob: -14.964518547058105
    8. '*i' → logprob: -14.964518547058105
    9. '   ' → logprob: -16.08951759338379
    10. '**' → logprob: -16.21451759338379

Token 132: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.17979182302951813
    2. ' h' → logprob: -1.804791808128357
    3. '   ' → logprob: -10.429791450500488
    4. ' ' → logprob: -11.929791450500488
    5. '(h' → logprob: -12.429791450500488
    6. ' (' → logprob: -12.679791450500488
    7. '  ' → logprob: -13.929791450500488
    8. ' ' → logprob: -14.304791450500488
    9. '    ' → logprob: -14.679791450500488
    10. '	h' → logprob: -15.304791450500488

Token 133: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001830410328693688
    2. '[' → logprob: -8.62518310546875
    3. ' [' → logprob: -13.62518310546875
    4. 'i' → logprob: -14.62518310546875
    5. '   ' → logprob: -14.62518310546875
    6. '[I' → logprob: -14.75018310546875
    7. '\[' → logprob: -16.00018310546875
    8. '[ii' → logprob: -16.12518310546875
    9. '```' → logprob: -16.62518310546875
    10. ']' → logprob: -16.62518310546875

Token 134: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38079649209976196
    2. ']' → logprob: -1.3807964324951172
    3. '])' → logprob: -2.755796432495117
    4. ')]' → logprob: -7.130796432495117
    5. ' )' → logprob: -7.755796432495117
    6. ' ]' → logprob: -9.005796432495117
    7. '   ' → logprob: -9.380796432495117
    8. '[i' → logprob: -9.505796432495117
    9. ' ])' → logprob: -9.755796432495117
    10. '）' → logprob: -10.130796432495117

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014754603616893291
    2. '    
' → logprob: -7.2514753341674805
    3. '
' → logprob: -7.8764753341674805
    4. '<|end|>' → logprob: -9.25147533416748
    5. '#' → logprob: -10.25147533416748
    6. '       ' → logprob: -10.50147533416748
    7. ')' → logprob: -10.50147533416748
    8. '    ' → logprob: -10.50147533416748
    9. 'for' → logprob: -10.62647533416748
    10. 'def' → logprob: -11.12647533416748

Token 136: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2574418783187866
    2. 'result' → logprob: -2.007441997528076
    3. '#' (adapté à ' #') → logprob: -2.132441997528076
    4. 'res' → logprob: -2.257441997528076
    5. 'remaining' → logprob: -2.507441997528076
    6. 'for' → logprob: -3.007441997528076
    7. 'min' → logprob: -3.132441997528076
    8. 'max' → logprob: -3.882441997528076
    9. 'answer' → logprob: -4.007441997528076
    10. 'results' → logprob: -4.257441997528076

Token 137: ' Tous' (ID: 64900)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.326844573020935
    2. 'for' → logprob: -2.0768446922302246
    3. '#' → logprob: -2.4518446922302246
    4. 'remaining' → logprob: -2.4518446922302246
    5. 'times' → logprob: -2.5768446922302246
    6. 'max' → logprob: -2.8268446922302246
    7. 'res' → logprob: -3.3268446922302246
    8. 'time' → logprob: -3.4518446922302246
    9. 'result' → logprob: -3.4518446922302246
    10. ' min' → logprob: -3.4518446922302246

Token 138: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.46288323402404785
    2. ' les' → logprob: -1.0878832340240479
    3. ' i' → logprob: -4.587882995605469
    4. 'i' → logprob: -5.587882995605469
    5. 'students' → logprob: -5.587882995605469
    6. 's' → logprob: -5.837882995605469
    7. ':' → logprob: -6.337882995605469
    8. '#' → logprob: -6.462882995605469
    9. 'le' → logprob: -6.837882995605469
    10. ' ' → logprob: -7.087882995605469

Token 139: ' items' (ID: 4732)
  Prédit: ' étudiants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étudiants' → logprob: -0.24009858071804047
    2. 'students' → logprob: -2.615098476409912
    3. ' élèves' → logprob: -3.490098476409912
    4. 'ét' → logprob: -3.615098476409912
    5. ' students' → logprob: -3.740098476409912
    6. 'items' → logprob: -4.615098476409912
    7. '#' → logprob: -5.115098476409912
    8. 'et' → logprob: -5.240098476409912
    9. ' items' → logprob: -5.240098476409912
    10. ' t' → logprob: -5.365098476409912

Token 140: ' sont' (ID: 5242)
  Prédit: ' prennent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prennent' → logprob: -0.7330902218818665
    2. 's' → logprob: -2.2330901622772217
    3. ' sont' → logprob: -2.2330901622772217
    4. 'pr' → logprob: -2.7330901622772217
    5. 'pass' → logprob: -2.9830901622772217
    6. ' ne' → logprob: -3.3580901622772217
    7. 'ont' → logprob: -3.9830901622772217
    8. '#' → logprob: -3.9830901622772217
    9. ' passent' → logprob: -3.9830901622772217
    10. 'n' → logprob: -4.483090400695801

Token 141: ' réalisés' (ID: 164788)
  Prédit: ' effectu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effectu' → logprob: -1.3452794551849365
    2. ' pass' → logprob: -1.7202794551849365
    3. ' indépend' → logprob: -2.5952794551849365
    4. 'pass' → logprob: -2.7202794551849365
    5. ' trait' → logprob: -3.0952794551849365
    6. ' faits' → logprob: -3.3452794551849365
    7. ' réalisés' → logprob: -3.5952794551849365
    8. 'trait' → logprob: -3.7202794551849365
    9. 'num' → logprob: -3.8452794551849365
    10. ' en' → logprob: -3.9702794551849365

Token 142: ' sé' (ID: 7462)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.20209801197052
    2. 'en' → logprob: -1.82709801197052
    3. ' simult' → logprob: -1.82709801197052
    4. ' jusqu' → logprob: -2.7020978927612305
    5. 'jus' → logprob: -2.8270978927612305
    6. 'au' → logprob: -3.0770978927612305
    7. ' au' → logprob: -3.2020978927612305
    8. 'sim' → logprob: -3.5770978927612305
    9. ' à' → logprob: -3.7020978927612305
    10. 'dans' → logprob: -4.0770978927612305

Token 143: 'quent' (ID: 13238)
  Prédit: 'quent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quent' → logprob: -0.010009399615228176
    2. 'par' → logprob: -5.010009288787842
    3. 'quential' → logprob: -6.260009288787842
    4. 'rie' → logprob: -7.010009288787842
    5. 'pare' → logprob: -8.635009765625
    6. 'ri' → logprob: -9.385009765625
    7. 'lect' → logprob: -9.760009765625
    8. 'qu' → logprob: -9.885009765625
    9. 'rial' → logprob: -10.885009765625
    10. 'quence' → logprob: -11.385009765625

Token 144: 'iellement' (ID: 70958)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0675332099199295
    2. 'nt' → logprob: -3.067533254623413
    3. 'enc' → logprob: -5.692533016204834
    4. 'iellement' → logprob: -5.942533016204834
    5. 'nc' → logprob: -6.317533016204834
    6. 'ential' → logprob: -6.442533016204834
    7. 'n' → logprob: -6.567533016204834
    8. 'ment' → logprob: -6.692533016204834
    9. 'nel' → logprob: -6.942533016204834
    10. '-' → logprob: -6.942533016204834

Token 145: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24937114119529724
    2. ',' → logprob: -1.7493711709976196
    3. '<|end|>' → logprob: -4.49937105178833
    4. '.' → logprob: -4.74937105178833
    5. 'for' → logprob: -4.87437105178833
    6. ' for' → logprob: -5.12437105178833
    7. ' ,' → logprob: -6.24937105178833
    8. ' par' → logprob: -6.24937105178833
    9. ' by' → logprob: -6.37437105178833
    10. ')' → logprob: -6.62437105178833

Token 146: ' item' (ID: 2169)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9962654709815979
    2. 'les' → logprob: -1.7462654113769531
    3. ' l' → logprob: -2.121265411376953
    4. ' chaque' → logprob: -2.121265411376953
    5. 'le' → logprob: -2.871265411376953
    6. ' les' → logprob: -3.121265411376953
    7. 'un' → logprob: -3.246265411376953
    8. ' un' → logprob: -4.121265411376953
    9. 't' → logprob: -4.371265411376953
    10. ' le' → logprob: -4.996265411376953

Token 147: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2209657430648804
    2. 's' → logprob: -1.3459657430648804
    3. ')' → logprob: -1.8459657430648804
    4. '<|end|>' → logprob: -2.59596586227417
    5. '   ' → logprob: -3.09596586227417
    6. 'for' → logprob: -3.97096586227417
    7. 'par' → logprob: -4.09596586227417
    8. ' par' → logprob: -4.09596586227417
    9. '<|end|>' → logprob: -4.34596586227417
    10. 'import' → logprob: -4.47096586227417

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08139515668153763
    2. ' i' → logprob: -4.206395149230957
    3. ' for' → logprob: -4.331395149230957
    4. ' not' → logprob: -4.456395149230957
    5. '#' → logprob: -4.831395149230957
    6. 'for' → logprob: -5.331395149230957
    7. ' c' → logprob: -5.581395149230957
    8. ' mais' → logprob: -5.706395149230957
    9. ' #' → logprob: -5.956395149230957
    10. 'not' → logprob: -6.081395149230957

Token 149: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2817923426628113
    2. '#' (adapté à ' #') → logprob: -1.906792402267456
    3. ' i' → logprob: -3.531792402267456
    4. ' donc' → logprob: -4.656792163848877
    5. ' #' → logprob: -4.906792163848877
    6. ' c' → logprob: -5.031792163848877
    7. ' mais' → logprob: -5.031792163848877
    8. 'for' → logprob: -5.531792163848877
    9. ' for' → logprob: -5.531792163848877
    10. ' et' → logprob: -5.656792163848877

Token 150: ' c' (ID: 274)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16962860524654388
    2. '   ' → logprob: -2.419628620147705
    3. ' #' → logprob: -3.294628620147705
    4. ' c' → logprob: -4.419628620147705
    5. 'c' → logprob: -5.044628620147705
    6. ' mais' → logprob: -5.919628620147705
    7. ' donc' → logprob: -6.044628620147705
    8. ' i' → logprob: -6.669628620147705
    9. 'mais' → logprob: -6.919628620147705
    10. ' et' → logprob: -7.794628620147705

Token 151: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.7848408818244934
    2. 'on' → logprob: -2.1598408222198486
    3. '#' → logprob: -2.4098408222198486
    4. 'ont' → logprob: -2.6598408222198486
    5. '-à' → logprob: -3.1598408222198486
    6. '   ' → logprob: -3.6598408222198486
    7. 'omme' → logprob: -3.6598408222198486
    8. 'om' → logprob: -3.6598408222198486
    9. 'es' → logprob: -4.034841060638428
    10. 'for' → logprob: -4.284841060638428

Token 152: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.254795640707016
    2. 'à' → logprob: -1.6297956705093384
    3. ' à' → logprob: -4.129795551300049
    4. '-' → logprob: -4.504795551300049
    5. 't' → logprob: -8.379796028137207
    6. 'a' → logprob: -8.379796028137207
    7. '```' → logprob: -8.504796028137207
    8. 'dire' → logprob: -8.504796028137207
    9. '   ' → logprob: -8.754796028137207
    10. ' ' → logprob: -9.004796028137207

Token 153: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.01954122819006443
    2. '-dire' → logprob: -4.019541263580322
    3. ' dire' → logprob: -7.644541263580322
    4. 'ce' → logprob: -8.644540786743164
    5. '-' → logprob: -9.019540786743164
    6. '   ' → logprob: -9.519540786743164
    7. 's' → logprob: -9.894540786743164
    8. 't' → logprob: -10.019540786743164
    9. '#' → logprob: -10.144540786743164
    10. 'part' → logprob: -10.394540786743164

Token 154: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.04937796667218208
    2. '   ' → logprob: -5.049377918243408
    3. ',' → logprob: -5.174377918243408
    4. ' for' → logprob: -5.299377918243408
    5. 'que' → logprob: -5.674377918243408
    6. ' pour' → logprob: -5.799377918243408
    7. 'for' → logprob: -5.799377918243408
    8. ' par' → logprob: -5.924377918243408
    9. '#' → logprob: -5.924377918243408
    10. ' on' → logprob: -6.174377918243408

Token 155: ' l' (ID: 305)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.609941840171814
    2. 'for' → logprob: -0.984941840171814
    3. ' l' → logprob: -3.7349419593811035
    4. ' chaque' → logprob: -4.2349419593811035
    5. ' le' → logprob: -4.7349419593811035
    6. ' on' → logprob: -4.7349419593811035
    7. 'le' → logprob: -4.7349419593811035
    8. ' time' → logprob: -5.9849419593811035
    9. ' each' → logprob: -6.2349419593811035
    10. ' les' → logprob: -6.3599419593811035

Token 156: ''ordre' (ID: 124753)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8475223779678345
    2. 'a' → logprob: -1.8475223779678345
    3. 'for' → logprob: -2.222522258758545
    4. '#' → logprob: -2.472522258758545
    5. 'def' → logprob: -2.972522258758545
    6. 's' → logprob: -3.847522258758545
    7. 'temps' → logprob: -4.222522258758545
    8. ''ensemble' → logprob: -4.472522258758545
    9. 're' → logprob: -4.597522258758545
    10. '   ' → logprob: -4.597522258758545

Token 157: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3256227672100067
    2. 'des' → logprob: -1.825622797012329
    3. ' for' → logprob: -3.325622797012329
    4. 'for' → logprob: -3.825622797012329
    5. '   ' → logprob: -4.32562255859375
    6. ' est' → logprob: -4.32562255859375
    7. ' =' → logprob: -4.70062255859375
    8. ' de' → logprob: -5.32562255859375
    9. 'de' → logprob: -5.82562255859375
    10. ',' → logprob: -6.20062255859375

Token 158: ' étudiants' (ID: 78752)
  Prédit: ' étudiants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étudiants' → logprob: -1.1083048582077026
    2. ' items' → logprob: -1.3583048582077026
    3. 'items' → logprob: -1.4833048582077026
    4. 'ét' → logprob: -3.358304977416992
    5. 'students' → logprob: -3.358304977416992
    6. ' students' → logprob: -3.483304977416992
    7. 'i' → logprob: -3.858304977416992
    8. ' i' → logprob: -4.858304977416992
    9. 'item' → logprob: -4.983304977416992
    10. 'check' → logprob: -5.233304977416992

Token 159: ' ne' (ID: 453)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pour' → logprob: -1.4120800495147705
    2. ' est' → logprob: -1.5370800495147705
    3. 'for' → logprob: -1.7870800495147705
    4. '#' → logprob: -1.7870800495147705
    5. ' pour' → logprob: -2.2870800495147705
    6. ' for' → logprob: -3.6620800495147705
    7. 'dans' → logprob: -4.537079811096191
    8. 'est' → logprob: -4.787079811096191
    9. 'n' → logprob: -4.787079811096191
    10. ',' → logprob: -4.787079811096191

Token 160: ' change' (ID: 3343)
  Prédit: ' change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.6537243723869324
    2. 'change' → logprob: -0.9037243723869324
    3. 's' → logprob: -3.153724431991577
    4. 'est' → logprob: -4.528724193572998
    5. 'ser' → logprob: -5.903724193572998
    6. 'pas' → logprob: -5.903724193572998
    7. ' est' → logprob: -6.403724193572998
    8. 'se' → logprob: -6.403724193572998
    9. ' respecte' → logprob: -7.028724193572998
    10. ' se' → logprob: -7.153724193572998

Token 161: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.037607260048389435
    2. 'pas' → logprob: -3.662607192993164
    3. ' rien' → logprob: -5.037607192993164
    4. '   ' → logprob: -6.037607192993164
    5. ',' → logprob: -7.287607192993164
    6. '.' → logprob: -8.162607192993164
    7. ' jamais' → logprob: -8.662607192993164
    8. ' for' → logprob: -8.912607192993164
    9. 'for' → logprob: -9.162607192993164
    10. ' line' → logprob: -9.162607192993164

Token 162: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10404233634471893
    2. '<|end|>' → logprob: -2.8540422916412354
    3. ',' → logprob: -4.3540425300598145
    4. ')' → logprob: -4.3540425300598145
    5. '.' → logprob: -5.4790425300598145
    6. ' for' → logprob: -5.9790425300598145
    7. 'for' → logprob: -6.3540425300598145
    8. '  ' → logprob: -6.4790425300598145
    9. '<|end|>' → logprob: -6.8540425300598145
    10. '
' → logprob: -7.1040425300598145

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09816420078277588
    2. '#' → logprob: -2.5981640815734863
    3. ' #' → logprob: -5.223164081573486
    4. ' et' → logprob: -5.598164081573486
    5. ' and' → logprob: -5.848164081573486
    6. '<|end|>' → logprob: -6.098164081573486
    7. ' mais' → logprob: -6.848164081573486
    8. ' but' → logprob: -7.348164081573486
    9. 'and' → logprob: -7.723164081573486
    10. ',' → logprob: -7.848164081573486

Token 164: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17826201021671295
    2. '#' (adapté à ' #') → logprob: -1.9282619953155518
    3. ' and' → logprob: -5.678262233734131
    4. ' et' → logprob: -5.678262233734131
    5. ' #' → logprob: -6.303262233734131
    6. 'et' → logprob: -6.303262233734131
    7. 'and' → logprob: -6.553262233734131
    8. ' mais' → logprob: -6.803262233734131
    9. ' but' → logprob: -7.553262233734131
    10. '    ' → logprob: -7.553262233734131

Token 165: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17122630774974823
    2. '   ' → logprob: -2.0462262630462646
    3. ' #' → logprob: -4.171226501464844
    4. 'et' → logprob: -5.296226501464844
    5. 'for' → logprob: -6.296226501464844
    6. 'mais' → logprob: -7.171226501464844
    7. 'while' → logprob: -7.296226501464844
    8. ' et' → logprob: -7.546226501464844
    9. ' for' → logprob: -7.671226501464844
    10. 'import' → logprob: -7.796226501464844

Token 166: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9803818464279175
    2. 'le' → logprob: -1.4803818464279175
    3. '   ' → logprob: -2.230381965637207
    4. 'for' → logprob: -2.980381965637207
    5. 'les' → logprob: -3.730381965637207
    6. ' le' → logprob: -3.855381965637207
    7. ' chaque' → logprob: -3.855381965637207
    8. ' les' → logprob: -3.980381965637207
    9. ' #' → logprob: -4.105381965637207
    10. ' for' → logprob: -4.355381965637207

Token 167: ' items' (ID: 4732)
  Prédit: ' items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.8440723419189453
    2. ' temps' → logprob: -1.0940723419189453
    3. 'items' → logprob: -2.4690723419189453
    4. ' étudiants' → logprob: -3.8440723419189453
    5. 'temps' → logprob: -3.8440723419189453
    6. ' times' → logprob: -4.094072341918945
    7. '#' → logprob: -4.344072341918945
    8. ' students' → logprob: -4.344072341918945
    9. ' t' → logprob: -5.219072341918945
    10. ' for' → logprob: -5.469072341918945

Token 168: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.4493696689605713
    2. 's' → logprob: -1.8243696689605713
    3. ' are' → logprob: -2.8243696689605713
    4. 'se' → logprob: -3.5743696689605713
    5. ' se' → logprob: -3.6993696689605713
    6. ' passent' → logprob: -3.8243696689605713
    7. '#' → logprob: -4.449369430541992
    8. 'pass' → logprob: -4.824369430541992
    9. 'for' → logprob: -4.949369430541992
    10. ' s' → logprob: -4.949369430541992

Token 169: ' "' (ID: 392)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -1.197344422340393
    2. 'pass' → logprob: -1.697344422340393
    3. 'ré' → logprob: -1.822344422340393
    4. 'faits' → logprob: -2.5723443031311035
    5. 'fait' → logprob: -2.6973443031311035
    6. ' trait' → logprob: -3.4473443031311035
    7. ' effectu' → logprob: -3.6973443031311035
    8. ' réalisés' → logprob: -3.6973443031311035
    9. 'faite' → logprob: -3.9473443031311035
    10. 'effect' → logprob: -3.9473443031311035

Token 170: 'align' (ID: 31928)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -1.5681051015853882
    2. 'pass' → logprob: -2.0681052207946777
    3. 'faits' → logprob: -2.1931052207946777
    4. 'ré' → logprob: -2.4431052207946777
    5. 'fait' → logprob: -2.5681052207946777
    6. ' trait' → logprob: -2.5681052207946777
    7. ' réalisés' → logprob: -2.8181052207946777
    8. ' effectu' → logprob: -3.0681052207946777
    9. ' pass' → logprob: -3.9431052207946777
    10. 'faite' → logprob: -4.318105220794678

Token 171: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0032650534994900227
    2. 'ées' → logprob: -6.628264904022217
    3. 'é' → logprob: -6.878264904022217
    4. 'es' → logprob: -8.003265380859375
    5. '```' → logprob: -8.503265380859375
    6. '=' → logprob: -9.253265380859375
    7. 'ement' → logprob: -9.253265380859375
    8. 'ed' → logprob: -10.503265380859375
    9. 'ée' → logprob: -10.878265380859375
    10. 'e' → logprob: -11.128265380859375

Token 172: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07886918634176254
    2. ' sur' → logprob: -3.328869104385376
    3. 'sur' → logprob: -4.953869342803955
    4. ' "' → logprob: -5.078869342803955
    5. 'vertical' → logprob: -5.328869342803955
    6. ' vertical' → logprob: -5.703869342803955
    7. ' horizontal' → logprob: -6.078869342803955
    8. ' par' → logprob: -6.453869342803955
    9. ' à' → logprob: -6.828869342803955
    10. 'vert' → logprob: -6.828869342803955

Token 173: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15904606878757477
    2. 'def' → logprob: -2.659046173095703
    3. 'for' → logprob: -3.784046173095703
    4. ',' → logprob: -3.909046173095703
    5. ')' → logprob: -4.534046173095703
    6. 'import' → logprob: -5.659046173095703
    7. '#' → logprob: -5.909046173095703
    8. 'sur' → logprob: -6.159046173095703
    9. ' par' → logprob: -6.409046173095703
    10. 'par' → logprob: -6.909046173095703

Token 174: ' dans' (ID: 2671)
  Prédit: ' ceci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ceci' → logprob: -1.2308967113494873
    2. ' suit' → logprob: -1.3558967113494873
    3. 'une' → logprob: -2.3558967113494873
    4. ' ça' → logprob: -2.4808967113494873
    5. 'cela' → logprob: -2.4808967113494873
    6. 'su' → logprob: -3.3558967113494873
    7. 's' → logprob: -3.6058967113494873
    8. 'dans' → logprob: -3.8558967113494873
    9. 'des' → logprob: -4.105896949768066
    10. 'ça' → logprob: -4.105896949768066

Token 175: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5185909271240234
    2. ' une' → logprob: -1.1435909271240234
    3. 'un' → logprob: -2.8935909271240234
    4. ' un' → logprob: -4.393590927124023
    5. 'des' → logprob: -5.143590927124023
    6. ' des' → logprob: -5.893590927124023
    7. 'les' → logprob: -6.268590927124023
    8. 'la' → logprob: -6.268590927124023
    9. 'le' → logprob: -6.393590927124023
    10. '```' → logprob: -6.893590927124023

Token 176: ' chaîne' (ID: 89288)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.6759019494056702
    2. 'queue' → logprob: -1.3009018898010254
    3. ' file' → logprob: -2.4259018898010254
    4. 'mat' → logprob: -3.4259018898010254
    5. ' boucle' → logprob: -3.5509018898010254
    6. 'ligne' → logprob: -4.300901889801025
    7. 'pipeline' → logprob: -4.300901889801025
    8. 'bou' → logprob: -4.925901889801025
    9. ' queue' → logprob: -5.050901889801025
    10. 'pile' → logprob: -5.925901889801025

Token 177: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007124168798327446
    2. '
' → logprob: -6.507123947143555
    3. 'for' → logprob: -6.632123947143555
    4. '    
' → logprob: -6.632123947143555
    5. 'def' → logprob: -7.757123947143555
    6. '#' → logprob: -8.132123947143555
    7. ':' → logprob: -8.132123947143555
    8. ' for' → logprob: -8.257123947143555
    9. ',' → logprob: -8.382123947143555
    10. ')' → logprob: -8.382123947143555

Token 178: ' montage' (ID: 83885)
  Prédit: 'mont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mont' → logprob: -0.06722752004861832
    2. 'production' → logprob: -2.817227602005005
    3. 'Mont' → logprob: -5.567227363586426
    4. 'Mark' → logprob: -7.567227363586426
    5. 'prod' → logprob: -9.317227363586426
    6. 'mon' → logprob: -9.317227363586426
    7. ' montage' → logprob: -9.442227363586426
    8. 'stations' → logprob: -9.567227363586426
    9. 't' → logprob: -10.192227363586426
    10. '
' → logprob: -10.317227363586426

Token 179: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0642848014831543
    2. '<|end|>' → logprob: -3.5642848014831543
    3. ')' → logprob: -4.564284801483154
    4. '
' → logprob: -5.314284801483154
    5. ',' → logprob: -5.564284801483154
    6. ':' → logprob: -5.814284801483154
    7. '<|end|>' → logprob: -5.814284801483154
    8. '.' → logprob: -6.064284801483154
    9. 'def' → logprob: -6.314284801483154
    10. '...' → logprob: -6.814284801483154

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003601140109822154
    2. '    
' → logprob: -6.50360107421875
    3. 'for' → logprob: -7.75360107421875
    4. '
' → logprob: -7.75360107421875
    5. 'def' → logprob: -7.87860107421875
    6. '#' → logprob: -8.37860107421875
    7. ')' → logprob: -9.00360107421875
    8. ' for' → logprob: -9.62860107421875
    9. '<|end|>' → logprob: -10.00360107421875
    10. 't' → logprob: -10.12860107421875

Token 181: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.7950265407562256
    2. 'result' → logprob: -2.0450265407562256
    3. 'remaining' → logprob: -2.0450265407562256
    4. '#' (adapté à ' #') → logprob: -2.1700265407562256
    5. 'max' → logprob: -2.5450265407562256
    6. 'min' → logprob: -2.5450265407562256
    7. 'time' → logprob: -2.6700265407562256
    8. 'def' → logprob: -3.2950265407562256
    9. 'total' → logprob: -3.4200265407562256
    10. 'times' → logprob: -3.7950265407562256

Token 182: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2790640592575073
    2. 'time' → logprob: -1.6540640592575073
    3. 'cycle' → logprob: -2.529064178466797
    4. 'times' → logprob: -2.779064178466797
    5. 'temps' → logprob: -2.904064178466797
    6. 'remaining' → logprob: -3.029064178466797
    7. 'items' → logprob: -3.529064178466797
    8. 'for' → logprob: -3.654064178466797
    9. 'current' → logprob: -4.154064178466797
    10. 'max' → logprob: -4.279064178466797

Token 183: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15563316643238068
    2. '#' → logprob: -2.9056332111358643
    3. ' =' → logprob: -3.9056332111358643
    4. ' def' → logprob: -4.405632972717285
    5. 'for' → logprob: -4.405632972717285
    6. '=' → logprob: -4.530632972717285
    7. ' #' → logprob: -5.280632972717285
    8. ' peux' → logprob: -5.280632972717285
    9. ' for' → logprob: -5.530632972717285
    10. ' n' → logprob: -5.905632972717285

Token 184: ' voir' (ID: 20611)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.5628048181533813
    2. 'penser' → logprob: -2.062804698944092
    3. 'faire' → logprob: -2.062804698944092
    4. 'tr' → logprob: -2.437804698944092
    5. '#' → logprob: -2.562804698944092
    6. 'util' → logprob: -2.687804698944092
    7. 'chercher' → logprob: -2.812804698944092
    8. 'def' → logprob: -2.937804698944092
    9. 'dé' → logprob: -3.062804698944092
    10. 'sim' → logprob: -4.187804698944092

Token 185: ' cela' (ID: 17542)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4533672332763672
    2. 'def' → logprob: -1.7033672332763672
    3. 'que' → logprob: -1.7033672332763672
    4. 'le' → logprob: -2.203367233276367
    5. 'for' → logprob: -2.453367233276367
    6. ' que' → logprob: -2.578367233276367
    7. 'comment' → logprob: -3.203367233276367
    8. 't' → logprob: -4.453367233276367
    9. '   ' → logprob: -4.453367233276367
    10. 'les' → logprob: -4.828367233276367

Token 186: ' comme' (ID: 7971)
  Prédit: 'comme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comme' → logprob: -0.5603527426719666
    2. '#' → logprob: -1.4353528022766113
    3. ' comme' → logprob: -2.5603528022766113
    4. 'for' → logprob: -3.6853528022766113
    5. 'que' → logprob: -3.9353528022766113
    6. 'def' → logprob: -4.060352802276611
    7. ' que' → logprob: -4.560352802276611
    8. '   ' → logprob: -4.810352802276611
    9. ',' → logprob: -5.685352802276611
    10. 't' → logprob: -5.685352802276611

Token 187: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.34837913513183594
    2. 'un' → logprob: -1.348379135131836
    3. ' une' → logprob: -3.848379135131836
    4. '#' → logprob: -4.973379135131836
    5. ' un' → logprob: -6.223379135131836
    6. 'la' → logprob: -6.223379135131836
    7. 'chercher' → logprob: -7.473379135131836
    8. '   ' → logprob: -7.598379135131836
    9. '```' → logprob: -8.723379135131836
    10. 'le' → logprob: -8.973379135131836

Token 188: ' système' (ID: 30034)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.42116665840148926
    2. ' problème' → logprob: -1.6711666584014893
    3. 'proble' → logprob: -4.04616641998291
    4. 'binary' → logprob: -4.17116641998291
    5. 'cycle' → logprob: -4.29616641998291
    6. 'tri' → logprob: -4.42116641998291
    7. 's' → logprob: -4.67116641998291
    8. '"' → logprob: -4.67116641998291
    9. 'process' → logprob: -4.79616641998291
    10. 'table' → logprob: -5.29616641998291

Token 189: ' où' (ID: 15113)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.12303955107927322
    2. ' de' → logprob: -2.498039484024048
    3. 'à' → logprob: -4.498039722442627
    4. 'd' → logprob: -5.373039722442627
    5. ' à' → logprob: -6.123039722442627
    6. 'où' → logprob: -6.373039722442627
    7. '#' → logprob: -6.623039722442627
    8. 'mult' → logprob: -7.123039722442627
    9. 'dis' → logprob: -7.248039722442627
    10. '   ' → logprob: -7.248039722442627

Token 190: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.4524637758731842
    2. ' chaque' → logprob: -1.9524637460708618
    3. 'le' → logprob: -2.3274638652801514
    4. 'les' → logprob: -2.9524638652801514
    5. 'l' → logprob: -3.9524638652801514
    6. '#' → logprob: -4.577463626861572
    7. 'on' → logprob: -4.952463626861572
    8. 't' → logprob: -5.452463626861572
    9. 'la' → logprob: -5.577463626861572
    10. ' le' → logprob: -5.577463626861572

Token 191: ' étudiant' (ID: 153135)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.8812242746353149
    2. ' étudiant' → logprob: -1.381224274635315
    3. 'item' → logprob: -1.756224274635315
    4. ' item' → logprob: -2.5062241554260254
    5. 'student' → logprob: -4.256224155426025
    6. '#' → logprob: -4.381224155426025
    7. 'for' → logprob: -5.131224155426025
    8. 'i' → logprob: -5.131224155426025
    9. 'et' → logprob: -5.131224155426025
    10. 'élé' → logprob: -5.256224155426025

Token 192: ' passe' (ID: 22210)
  Prédit: ' passe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passe' → logprob: -1.2682288885116577
    2. 'i' → logprob: -1.5182288885116577
    3. ' i' → logprob: -2.0182290077209473
    4. ' a' → logprob: -2.2682290077209473
    5. ' est' → logprob: -2.6432290077209473
    6. 'a' → logprob: -3.0182290077209473
    7. 'p' → logprob: -3.6432290077209473
    8. 'pass' → logprob: -4.143229007720947
    9. '   ' → logprob: -4.393229007720947
    10. ' doit' → logprob: -4.518229007720947

Token 193: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.8266974687576294
    2. ' un' → logprob: -2.07669734954834
    3. ' par' → logprob: -2.57669734954834
    4. 'un' → logprob: -2.57669734954834
    5. 'par' → logprob: -2.57669734954834
    6. ' le' → logprob: -2.95169734954834
    7. ' à' → logprob: -2.95169734954834
    8. 'au' → logprob: -2.95169734954834
    9. ' au' → logprob: -3.07669734954834
    10. ' les' → logprob: -3.20169734954834

Token 194: ' même' (ID: 9679)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.0353056192398071
    2. 'current' → logprob: -2.2853055000305176
    3. 'for' → logprob: -2.4103055000305176
    4. 'i' → logprob: -2.6603055000305176
    5. 'k' → logprob: -2.6603055000305176
    6. 'check' → logprob: -3.1603055000305176
    7. 'time' → logprob: -3.4103055000305176
    8. 'items' → logprob: -3.6603055000305176
    9. 'temps' → logprob: -3.7853055000305176
    10. 'm' → logprob: -4.035305500030518

Token 195: ' sé' (ID: 7462)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.9647355675697327
    2. 'ligne' → logprob: -1.089735507965088
    3. '   ' → logprob: -1.964735507965088
    4. ' unité' → logprob: -4.339735507965088
    5. ' durée' → logprob: -4.589735507965088
    6. 'item' → logprob: -4.589735507965088
    7. ' boucle' → logprob: -4.714735507965088
    8. '
' → logprob: -5.089735507965088
    9. ' line' → logprob: -5.214735507965088
    10. 'fois' → logprob: -5.214735507965088

Token 196: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.4299291968345642
    2. 'rie' → logprob: -1.054929256439209
    3. 'ance' → logprob: -7.429929256439209
    4. 'qu' → logprob: -8.67992877960205
    5. 'que' → logprob: -9.67992877960205
    6. 'ri' → logprob: -9.67992877960205
    7. 'q' → logprob: -9.92992877960205
    8. 'QUENCE' → logprob: -10.17992877960205
    9. 'quent' → logprob: -10.80492877960205
    10. '#' → logprob: -10.92992877960205

Token 197: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.02201908826828003
    2. ' de' → logprob: -4.772018909454346
    3. 'd' → logprob: -5.022018909454346
    4. '<|end|>' → logprob: -6.022018909454346
    5. ' des' → logprob: -6.147018909454346
    6. ',' → logprob: -7.647018909454346
    7. ' ' → logprob: -7.897018909454346
    8. 'de' → logprob: -8.022019386291504
    9. '   ' → logprob: -8.772019386291504
    10. ' of' → logprob: -9.022019386291504

Token 198: ''' (ID: 6)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.6329490542411804
    2. 'items' → logprob: -0.8829490542411804
    3. ' check' → logprob: -3.632949113845825
    4. ' tests' → logprob: -5.757948875427246
    5. ' étapes' → logprob: -5.820448875427246
    6. 'check' → logprob: -5.945448875427246
    7. ''' → logprob: -6.382948875427246
    8. ' checks' → logprob: -6.382948875427246
    9. ' steps' → logprob: -6.757948875427246
    10. ' temps' → logprob: -7.007948875427246

Token 199: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.11319272965192795
    2. ' items' → logprob: -2.3631927967071533
    3. 'temps' → logprob: -5.988192558288574
    4. ' check' → logprob: -6.488192558288574
    5. 'check' → logprob: -6.613192558288574
    6. 'steps' → logprob: -6.738192558288574
    7. 't' → logprob: -7.363192558288574
    8. 'checks' → logprob: -7.738192558288574
    9. ' étapes' → logprob: -7.738192558288574
    10. ' steps' → logprob: -7.863192558288574

Token 200: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02211039513349533
    2. ',' → logprob: -4.022110462188721
    3. '.' → logprob: -6.522110462188721
    4. ')' → logprob: -7.522110462188721
    5. '  ' → logprob: -7.897110462188721
    6. ' jusqu' → logprob: -8.147109985351562
    7. '    ' → logprob: -8.272109985351562
    8. ' ' → logprob: -9.147109985351562
    9. '    
' → logprob: -9.522109985351562
    10. '...' → logprob: -9.522109985351562

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.101747065782547
    2. ' mais' → logprob: -2.7267470359802246
    3. '#' → logprob: -4.476747035980225
    4. ' et' → logprob: -5.351747035980225
    5. ' but' → logprob: -5.351747035980225
    6. 'mais' → logprob: -5.976747035980225
    7. '    ' → logprob: -6.351747035980225
    8. 'but' → logprob: -6.351747035980225
    9. 'et' → logprob: -6.976747035980225
    10. ',' → logprob: -7.601747035980225

Token 202: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06978802382946014
    2. '#' (adapté à ' #') → logprob: -2.9447879791259766
    3. ' mais' → logprob: -4.444787979125977
    4. 'mais' → logprob: -7.444787979125977
    5. '    ' → logprob: -7.819787979125977
    6. ' #' → logprob: -8.069787979125977
    7. ' but' → logprob: -8.194787979125977
    8. ' et' → logprob: -8.194787979125977
    9. 'et' → logprob: -8.319787979125977
    10. 'but' → logprob: -8.319787979125977

Token 203: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06952062249183655
    2. '#' → logprob: -3.3195207118988037
    3. 'mais' → logprob: -4.319520473480225
    4. ' mais' → logprob: -4.444520473480225
    5. 'but' → logprob: -6.944520473480225
    6. ' but' → logprob: -7.069520473480225
    7. ' #' → logprob: -7.194520473480225
    8. '    ' → logprob: -7.319520473480225
    9. 'et' → logprob: -7.444520473480225
    10. ' et' → logprob: -7.819520473480225

Token 204: ' le' (ID: 505)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.9183245301246643
    2. 'le' → logprob: -1.9183244705200195
    3. ' chaque' → logprob: -2.6683244705200195
    4. 'les' → logprob: -2.7933244705200195
    5. ' à' → logprob: -3.5433244705200195
    6. 'au' → logprob: -3.5433244705200195
    7. ' le' → logprob: -3.5433244705200195
    8. 'à' → logprob: -3.6683244705200195
    9. 'que' → logprob: -3.7933244705200195
    10. 'l' → logprob: -3.7933244705200195

Token 205: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.5641496181488037
    2. ' temps' → logprob: -1.3141496181488037
    3. ' cycle' → logprob: -3.1891496181488037
    4. 't' → logprob: -3.9391496181488037
    5. 'dé' → logprob: -4.064149856567383
    6. 'cycle' → logprob: -4.564149856567383
    7. 'd' → logprob: -4.939149856567383
    8. 'nombre' → logprob: -5.314149856567383
    9. '#' → logprob: -5.314149856567383
    10. ' code' → logprob: -5.314149856567383

Token 206: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.953815758228302
    2. ' nécessaire' → logprob: -2.3288156986236572
    3. 'de' → logprob: -2.5788156986236572
    4. 'd' → logprob: -2.8288156986236572
    5. 'pour' → logprob: -2.8288156986236572
    6. ' total' → logprob: -3.0788156986236572
    7. ' d' → logprob: -3.5788156986236572
    8. ' de' → logprob: -3.7038156986236572
    9. 's' → logprob: -3.8288156986236572
    10. 'max' → logprob: -3.8288156986236572

Token 207: ' pour' (ID: 1930)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'needed' → logprob: -2.2812983989715576
    2. ' nécessaire' → logprob: -2.4062983989715576
    3. 'pour' → logprob: -2.4062983989715576
    4. '   ' → logprob: -2.5312983989715576
    5. ',' → logprob: -2.7812983989715576
    6. '=' → logprob: -3.2812983989715576
    7. 'for' → logprob: -3.4062983989715576
    8. '<|end|>' → logprob: -3.4062983989715576
    9. ' needed' → logprob: -3.5312983989715576
    10. 'pass' → logprob: -3.6562983989715576

Token 208: ' finir' (ID: 97022)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.5520421862602234
    2. ' passer' → logprob: -2.552042245864868
    3. 'faire' → logprob: -2.677042245864868
    4. ' chaque' → logprob: -2.802042245864868
    5. 'l' → logprob: -3.802042245864868
    6. 'le' → logprob: -4.052042007446289
    7. ' accompl' → logprob: -4.052042007446289
    8. ' l' → logprob: -4.302042007446289
    9. ' compléter' → logprob: -4.302042007446289
    10. 'cha' → logprob: -4.302042007446289

Token 209: ' k' (ID: 372)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.19149017333984375
    2. ' k' → logprob: -2.3164901733398438
    3. 'un' → logprob: -3.6914901733398438
    4. 'k' → logprob: -4.441490173339844
    5. ' chaque' → logprob: -4.941490173339844
    6. '   ' → logprob: -5.191490173339844
    7. ' n' → logprob: -5.441490173339844
    8. ' une' → logprob: -5.441490173339844
    9. ' le' → logprob: -6.316490173339844
    10. ' la' → logprob: -6.441490173339844

Token 210: ' items' (ID: 4732)
  Prédit: ' items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.38753682374954224
    2. ' *' → logprob: -1.5125367641448975
    3. 'items' → logprob: -2.7625367641448975
    4. '_items' → logprob: -4.762537002563477
    5. ' ' → logprob: -5.012537002563477
    6. '*' → logprob: -5.387537002563477
    7. ' _' → logprob: -6.012537002563477
    8. '+' → logprob: -6.262537002563477
    9. ' k' → logprob: -6.387537002563477
    10. ')' → logprob: -6.387537002563477

Token 211: ' pour' (ID: 1930)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pour' → logprob: -0.6865822672843933
    2. ' pour' → logprob: -1.936582326889038
    3. 'for' → logprob: -2.436582326889038
    4. '   ' → logprob: -2.686582326889038
    5. 'par' → logprob: -2.811582326889038
    6. ' par' → logprob: -3.061582326889038
    7. '#' → logprob: -3.311582326889038
    8. ' for' → logprob: -3.811582326889038
    9. ' est' → logprob: -4.311582088470459
    10. 'est' → logprob: -5.061582088470459

Token 212: ' un' (ID: 537)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5895547866821289
    2. 'l' → logprob: -1.089554786682129
    3. ' un' → logprob: -3.214554786682129
    4. ' chaque' → logprob: -3.589554786682129
    5. ' i' → logprob: -4.214554786682129
    6. ' cet' → logprob: -4.589554786682129
    7. 'i' → logprob: -5.589554786682129
    8. 'cet' → logprob: -6.089554786682129
    9. 'un' → logprob: -6.214554786682129
    10. ' each' → logprob: -6.464554786682129

Token 213: ' étudiant' (ID: 153135)
  Prédit: ' étudiant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étudiant' → logprob: -0.013848945498466492
    2. 'ét' → logprob: -4.763848781585693
    3. ' ét' → logprob: -7.138848781585693
    4. 'e' → logprob: -7.388848781585693
    5. ''ét' → logprob: -7.513848781585693
    6. 'i' → logprob: -7.638848781585693
    7. ' i' → logprob: -7.763848781585693
    8. 'él' → logprob: -7.763848781585693
    9. ' él' → logprob: -7.888848781585693
    10. 'élé' → logprob: -8.388849258422852

Token 214: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0535589456558228
    2. '[i' → logprob: -1.0535589456558228
    3. '<|end|>' → logprob: -1.5535589456558228
    4. ')' → logprob: -2.803558826446533
    5. '<|end|>' → logprob: -4.553558826446533
    6. ' i' → logprob: -5.678558826446533
    7. ',' → logprob: -5.803558826446533
    8. '...' → logprob: -5.928558826446533
    9. '[' → logprob: -6.303558826446533
    10. 'i' → logprob: -6.803558826446533

Token 215: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8479872345924377
    2. ')' → logprob: -1.222987174987793
    3. ' est' → logprob: -2.597987174987793
    4. ',' → logprob: -2.597987174987793
    5. ' is' → logprob: -3.097987174987793
    6. '#' → logprob: -4.097987174987793
    7. ' =' → logprob: -4.597987174987793
    8. '=' → logprob: -4.597987174987793
    9. 'def' → logprob: -5.097987174987793
    10. ']' → logprob: -5.472987174987793

Token 216: '
' (ID: 198)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.17421041429042816
    2. ' t' → logprob: -3.0492103099823
    3. 'k' → logprob: -3.4242103099823
    4. '   ' → logprob: -3.5492103099823
    5. ' (' → logprob: -3.9242103099823
    6. ' h' → logprob: -4.174210548400879
    7. ' n' → logprob: -5.049210548400879
    8. 't' → logprob: -6.299210548400879
    9. '    ' → logprob: -6.549210548400879
    10. ' ' → logprob: -6.924210548400879

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.705802321434021
    2. ' h' → logprob: -1.580802321434021
    3. ' n' → logprob: -2.3308024406433105
    4. ' k' → logprob: -2.3308024406433105
    5. ' t' → logprob: -3.2058024406433105
    6. ' (' → logprob: -3.8308024406433105
    7. '    ' → logprob: -4.3308024406433105
    8. 'n' → logprob: -4.9558024406433105
    9. ')' → logprob: -5.9558024406433105
    10. ' ' → logprob: -6.0808024406433105

Token 218: ' #' (ID: 1069)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5365419983863831
    2. ' t' → logprob: -1.6615419387817383
    3. ' (' → logprob: -2.5365419387817383
    4. 'k' → logprob: -3.2865419387817383
    5. '   ' → logprob: -3.2865419387817383
    6. ' n' → logprob: -3.6615419387817383
    7. ' h' → logprob: -3.9115419387817383
    8. 't' → logprob: -4.661541938781738
    9. '    ' → logprob: -5.536541938781738
    10. 'n' → logprob: -6.286541938781738

Token 219: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5209019184112549
    2. 't' → logprob: -2.395901918411255
    3. ' k' → logprob: -2.395901918411255
    4. ' (' → logprob: -2.645901918411255
    5. ' t' → logprob: -2.895901918411255
    6. '(k' → logprob: -3.520901918411255
    7. '(t' → logprob: -4.145901679992676
    8. '(h' → logprob: -5.020901679992676
    9. '   ' → logprob: -5.145901679992676
    10. 'h' → logprob: -5.270901679992676

Token 220: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0031974392477422953
    2. '*' → logprob: -5.75319766998291
    3. ' ' → logprob: -11.75319766998291
    4. ' ' → logprob: -12.37819766998291
    5. '*h' → logprob: -13.50319766998291
    6. '```' → logprob: -14.00319766998291
    7. '   ' → logprob: -14.19069766998291
    8. ' **' → logprob: -14.31569766998291
    9. '#' → logprob: -14.94069766998291
    10. '**' → logprob: -15.00319766998291

Token 221: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3132787048816681
    2. ' h' → logprob: -1.3132786750793457
    3. '   ' → logprob: -12.188279151916504
    4. ' ' → logprob: -12.438279151916504
    5. ' ' → logprob: -13.063279151916504
    6. '(h' → logprob: -13.063279151916504
    7. ' (' → logprob: -14.313279151916504
    8. '	h' → logprob: -14.813279151916504
    9. 't' → logprob: -15.125779151916504
    10. '  ' → logprob: -15.313279151916504

Token 222: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.68022444692906e-05
    2. '[' → logprob: -10.000046730041504
    3. '[j' → logprob: -14.750046730041504
    4. '[I' → logprob: -15.625046730041504
    5. ']' → logprob: -15.750046730041504
    6. 'i' → logprob: -17.00004768371582
    7. '\[' → logprob: -17.00004768371582
    8. '   ' → logprob: -17.12504768371582
    9. '[
' → logprob: -17.12504768371582
    10. ' [' → logprob: -17.12504768371582

Token 223: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0376916378736496
    2. '
' → logprob: -4.287691593170166
    3. '    
' → logprob: -5.037691593170166
    4. '<|end|>' → logprob: -5.412691593170166
    5. ')' → logprob: -5.537691593170166
    6. 'def' → logprob: -5.787691593170166
    7. '#' → logprob: -7.162691593170166
    8. '  ' → logprob: -7.537691593170166
    9. ',' → logprob: -7.912691593170166
    10. '```' → logprob: -8.037692070007324

Token 224: ' temps' (ID: 11160)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5706084966659546
    2. 't' → logprob: -2.195608615875244
    3. ' (' → logprob: -2.320608615875244
    4. ' k' → logprob: -2.445608615875244
    5. ' i' → logprob: -3.445608615875244
    6. 'k' → logprob: -3.570608615875244
    7. ' h' → logprob: -3.945608615875244
    8. ' n' → logprob: -4.320608615875244
    9. ' sum' → logprob: -4.320608615875244
    10. 'i' → logprob: -4.945608615875244

Token 225: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33650198578834534
    2. '_total' → logprob: -2.4615020751953125
    3. '_pass' → logprob: -3.0865020751953125
    4. '_offset' → logprob: -3.3365020751953125
    5. '_rest' → logprob: -3.4615020751953125
    6. '_de' → logprob: -4.0865020751953125
    7. '_sup' → logprob: -4.5865020751953125
    8. ')' → logprob: -5.4615020751953125
    9. '_s' → logprob: -5.5865020751953125
    10. '_depart' → logprob: -5.5865020751953125

Token 226: ''att' (ID: 50189)
  Prédit: ''att'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''att' → logprob: -0.16449443995952606
    2. ' attente' → logprob: -2.414494514465332
    3. 'éc' → logprob: -3.539494514465332
    4. 'att' → logprob: -4.164494514465332
    5. 'é' → logprob: -5.414494514465332
    6. 'e' → logprob: -5.414494514465332
    7. ''arrêt' → logprob: -6.414494514465332
    8. '’att' → logprob: -6.414494514465332
    9. ''arrivée' → logprob: -6.664494514465332
    10. ''entrée' → logprob: -7.039494514465332

Token 227: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.001795608433894813
    2. 'ent' → logprob: -6.376795768737793
    3. '#' → logprob: -11.876795768737793
    4. '   ' → logprob: -12.001795768737793
    5. 'entes' → logprob: -12.001795768737793
    6. 'ende' → logprob: -12.001795768737793
    7. ')' → logprob: -12.251795768737793
    8. 'endue' → logprob: -12.251795768737793
    9. 'ENTE' → logprob: -12.501795768737793
    10. '_' → logprob: -12.501795768737793

Token 228: ' dû' (ID: 70715)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007560606114566326
    2. ')' → logprob: -6.132560729980469
    3. '
' → logprob: -6.632560729980469
    4. '    
' → logprob: -6.882560729980469
    5. 'def' → logprob: -7.007560729980469
    6. '<|end|>' → logprob: -7.132560729980469
    7. '    ' → logprob: -8.882560729980469
    8. ',' → logprob: -9.007560729980469
    9. '  ' → logprob: -9.132560729980469
    10. '<|end|>' → logprob: -9.132560729980469

Token 229: ' au' (ID: 2791)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.6152622103691101
    2. ' à' → logprob: -0.9902622103691101
    3. ' au' → logprob: -2.865262269973755
    4. ' ' → logprob: -4.240262031555176
    5. 'aux' → logprob: -4.990262031555176
    6. 'au' → logprob: -5.240262031555176
    7. '   ' → logprob: -6.365262031555176
    8. 'à' → logprob: -6.740262031555176
    9. '  ' → logprob: -7.490262031555176
    10. '    ' → logprob: -8.240262031555176

Token 230: ' passage' (ID: 26368)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8706876635551453
    2. 'i' → logprob: -1.74568772315979
    3. ' previous' → logprob: -3.12068772315979
    4. 's' → logprob: -3.37068772315979
    5. ' k' → logprob: -3.62068772315979
    6. 'previous' → logprob: -3.74568772315979
    7. ' précédent' → logprob: -3.99568772315979
    8. ' la' → logprob: -3.99568772315979
    9. 'dé' → logprob: -4.120687484741211
    10. 'l' → logprob: -4.245687484741211

Token 231: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2467421442270279
    2. ')' → logprob: -2.3717422485351562
    3. ' =' → logprob: -2.7467422485351562
    4. '    ' → logprob: -3.9967422485351562
    5. ' )' → logprob: -5.246742248535156
    6. 'import' → logprob: -5.496742248535156
    7. '=' → logprob: -5.496742248535156
    8. '...' → logprob: -5.746742248535156
    9. ' for' → logprob: -6.121742248535156
    10. '<|end|>' → logprob: -6.121742248535156

Token 232: ' étudiants' (ID: 78752)
  Prédit: ' étudiants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étudiants' → logprob: -0.7746320962905884
    2. ' autres' → logprob: -1.7746320962905884
    3. 'ét' → logprob: -2.024631977081299
    4. 'pr' → logprob: -2.274631977081299
    5. 'aut' → logprob: -3.399631977081299
    6. 'i' → logprob: -3.774631977081299
    7. 'students' → logprob: -3.774631977081299
    8. ' précéd' → logprob: -3.899631977081299
    9. ' i' → logprob: -4.899631977081299
    10. '#' → logprob: -5.524631977081299

Token 233: ' précéd' (ID: 55435)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011864418163895607
    2. ')' → logprob: -5.511864185333252
    3. '    
' → logprob: -6.386864185333252
    4. '
' → logprob: -6.386864185333252
    5. '<|end|>' → logprob: -6.386864185333252
    6. 'def' → logprob: -6.636864185333252
    7. '<|end|>' → logprob: -8.38686466217041
    8. '[' → logprob: -9.13686466217041
    9. ')
' → logprob: -9.26186466217041
    10. ']' → logprob: -9.38686466217041

Token 234: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.29160770773887634
    2. '   ' → logprob: -2.291607618331909
    3. 'ent' → logprob: -2.791607618331909
    4. 'ente' → logprob: -4.291607856750488
    5. '       ' → logprob: -4.791607856750488
    6. 'ant' → logprob: -4.916607856750488
    7. 'i' → logprob: -5.041607856750488
    8. 'entes' → logprob: -5.041607856750488
    9. 'u' → logprob: -5.166607856750488
    10. 'es' → logprob: -5.166607856750488

Token 235: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006100135389715433
    2. ')' → logprob: -6.256100177764893
    3. 'def' → logprob: -6.881100177764893
    4. '    
' → logprob: -7.131100177764893
    5. '
' → logprob: -7.256100177764893
    6. '<|end|>' → logprob: -7.506100177764893
    7. ',' → logprob: -8.631099700927734
    8. ']' → logprob: -8.881099700927734
    9. '<|end|>' → logprob: -9.381099700927734
    10. '    ' → logprob: -9.381099700927734

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003192804753780365
    2. 'def' → logprob: -6.753192901611328
    3. '
' → logprob: -7.128192901611328
    4. '    
' → logprob: -7.253192901611328
    5. '#' → logprob: -9.628192901611328
    6. 'remaining' → logprob: -9.878192901611328
    7. ')' → logprob: -10.253192901611328
    8. '```' → logprob: -10.628192901611328
    9. '       ' → logprob: -10.878192901611328
    10. 'total' → logprob: -10.878192901611328

Token 237: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0180648323148489
    2. '#' (adapté à ' #') → logprob: -5.393064975738525
    3. '
' → logprob: -5.893064975738525
    4. 'def' → logprob: -5.893064975738525
    5. '    
' → logprob: -6.393064975738525
    6. 'result' → logprob: -7.018064975738525
    7. 'max' → logprob: -7.393064975738525
    8. 'time' → logprob: -7.768064975738525
    9. 'total' → logprob: -7.893064975738525
    10. 'remaining' → logprob: -8.018064498901367

Token 238: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8818864822387695
    2. 'time' → logprob: -2.3818864822387695
    3. 'left' → logprob: -2.5068864822387695
    4. 'res' → logprob: -2.6318864822387695
    5. 'remaining' → logprob: -2.7568864822387695
    6. 'waiting' → logprob: -2.8818864822387695
    7. 'def' → logprob: -3.0068864822387695
    8. 'low' → logprob: -3.0068864822387695
    9. 'wait' → logprob: -3.2568864822387695
    10. '   ' → logprob: -3.3818864822387695

Token 239: ' temps' (ID: 11160)
  Prédit: ' temps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temps' → logprob: -1.304864764213562
    2. ' max' → logprob: -1.554864764213562
    3. ' left' → logprob: -2.0548648834228516
    4. 'temps' → logprob: -2.6798648834228516
    5. ' reste' → logprob: -3.0548648834228516
    6. 'def' → logprob: -3.1798648834228516
    7. ' #' → logprob: -3.1798648834228516
    8. '#' → logprob: -3.1798648834228516
    9. ' def' → logprob: -3.5548648834228516
    10. ' low' → logprob: -3.6798648834228516

Token 240: ' pour' (ID: 1930)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.41816622018814087
    2. '_max' → logprob: -2.668166160583496
    3. '_' → logprob: -3.293166160583496
    4. '_c' → logprob: -3.418166160583496
    5. '_rest' → logprob: -3.668166160583496
    6. '_lim' → logprob: -3.918166160583496
    7. '_re' → logprob: -4.043166160583496
    8. '_p' → logprob: -4.043166160583496
    9. '=' → logprob: -4.293166160583496
    10. 'total' → logprob: -4.293166160583496

Token 241: ' que' (ID: 661)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9292299151420593
    2. ' i' → logprob: -1.054229974746704
    3. ' chaque' → logprob: -2.804229974746704
    4. 'fin' → logprob: -3.304229974746704
    5. ' terminer' → logprob: -3.304229974746704
    6. ' l' → logprob: -3.429229974746704
    7. ' finir' → logprob: -3.929229974746704
    8. 'pass' → logprob: -4.179229736328125
    9. 'l' → logprob: -4.679229736328125
    10. 'termin' → logprob: -4.804229736328125

Token 242: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9372119307518005
    2. 'l' → logprob: -1.5622119903564453
    3. ' i' → logprob: -2.1872119903564453
    4. 'i' → logprob: -2.3122119903564453
    5. ' chaque' → logprob: -2.8122119903564453
    6. ' un' → logprob: -2.9372119903564453
    7. 'un' → logprob: -3.9372119903564453
    8. ' k' → logprob: -4.812211990356445
    9. 'k' → logprob: -4.937211990356445
    10. 'le' → logprob: -5.062211990356445

Token 243: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27311888337135315
    2. ' i' → logprob: -1.7731188535690308
    3. 'ét' → logprob: -4.39811897277832
    4. 'j' → logprob: -4.64811897277832
    5. 'for' → logprob: -4.64811897277832
    6. '#' → logprob: -5.39811897277832
    7. ' étudiant' → logprob: -5.39811897277832
    8. ' for' → logprob: -5.52311897277832
    9. 'prem' → logprob: -5.52311897277832
    10. 'k' → logprob: -6.27311897277832

Token 244: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1381239891052246
    2. ' ' → logprob: -1.5131239891052246
    3. '=' → logprob: -2.7631239891052246
    4. ' =' → logprob: -3.0131239891052246
    5. ']' → logprob: -3.1381239891052246
    6. ' ==' → logprob: -3.3881239891052246
    7. ' -' → logprob: -3.3881239891052246
    8. ')' → logprob: -3.5131239891052246
    9. '+' → logprob: -3.5131239891052246
    10. ' i' → logprob: -3.6381239891052246

Token 245: 'ème' (ID: 9767)
  Prédit: 'ième'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ième' → logprob: -0.5011389851570129
    2. 'ème' → logprob: -1.0011389255523682
    3. ' è' → logprob: -5.126139163970947
    4. 'ieme' → logprob: -5.251139163970947
    5. 'eme' → logprob: -5.501139163970947
    6. 'è' → logprob: -5.876139163970947
    7. 'i' → logprob: -6.376139163970947
    8. '-' → logprob: -6.751139163970947
    9. ' i' → logprob: -7.126139163970947
    10. 'é' → logprob: -7.126139163970947

Token 246: ' étudiant' (ID: 153135)
  Prédit: ' étudiant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étudiant' → logprob: -0.043042585253715515
    2. 'ét' → logprob: -3.2930426597595215
    3. 'student' → logprob: -7.1680426597595215
    4. ' student' → logprob: -7.6680426597595215
    5. 'élé' → logprob: -7.7930426597595215
    6. ')' → logprob: -7.9180426597595215
    7. 'él' → logprob: -8.293042182922363
    8. '_' → logprob: -8.293042182922363
    9. ' ' → logprob: -8.418042182922363
    10. ' él' → logprob: -8.418042182922363

Token 247: ' ait' (ID: 43015)
  Prédit: ' passe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passe' → logprob: -0.5814966559410095
    2. ' i' → logprob: -2.3314967155456543
    3. 's' → logprob: -2.5814967155456543
    4. ' soit' → logprob: -2.9564967155456543
    5. ' puisse' → logprob: -2.9564967155456543
    6. 'i' → logprob: -3.0814967155456543
    7. 'd' → logprob: -3.9564967155456543
    8. 'pass' → logprob: -4.081496715545654
    9. ' à' → logprob: -4.706496715545654
    10. 'p' → logprob: -4.956496715545654

Token 248: ' fini' (ID: 63561)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.8381284475326538
    2. 'termin' → logprob: -1.0881284475326538
    3. 'fait' → logprob: -2.3381285667419434
    4. 'compl' → logprob: -3.2131285667419434
    5. 'ache' → logprob: -3.9631285667419434
    6. 'f' → logprob: -4.088128566741943
    7. ' fini' → logprob: -4.338128566741943
    8. ' terminé' → logprob: -4.338128566741943
    9. 'com' → logprob: -5.213128566741943
    10. 'valid' → logprob: -5.713128566741943

Token 249: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.639133632183075
    2. 'k' → logprob: -1.6391336917877197
    3. ' j' → logprob: -2.3891336917877197
    4. ' (' → logprob: -2.8891336917877197
    5. ' i' → logprob: -3.1391336917877197
    6. 'j' → logprob: -3.8891336917877197
    7. ' le' → logprob: -4.514133453369141
    8. 'i' → logprob: -4.889133453369141
    9. ' d' → logprob: -4.889133453369141
    10. ' de' → logprob: -4.889133453369141

Token 250: ' items' (ID: 4732)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4689227044582367
    2. '_items' → logprob: -1.093922734260559
    3. '*' → logprob: -3.8439226150512695
    4. 'items' → logprob: -4.7189226150512695
    5. ' _' → logprob: -5.7189226150512695
    6. '_' → logprob: -6.2189226150512695
    7. ')' → logprob: -6.7189226150512695
    8. ' ' → logprob: -7.3439226150512695
    9. ' items' → logprob: -7.5939226150512695
    10. ' =' → logprob: -8.59392261505127

Token 251: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6962254047393799
    2. ' =' → logprob: -1.0712254047393799
    3. '   ' → logprob: -2.94622540473938
    4. 'for' → logprob: -3.94622540473938
    5. ' pour' → logprob: -3.94622540473938
    6. ' for' → logprob: -4.321225166320801
    7. 'pour' → logprob: -4.446225166320801
    8. ' est' → logprob: -4.571225166320801
    9. 'def' → logprob: -5.321225166320801
    10. ',' → logprob: -5.321225166320801

Token 252: ' :
' (ID: 10039)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6262781023979187
    2. ' k' → logprob: -1.3762781620025635
    3. ' (' → logprob: -2.2512781620025635
    4. '   ' → logprob: -3.3762781620025635
    5. '(k' → logprob: -3.7512781620025635
    6. ' t' → logprob: -4.876277923583984
    7. '(' → logprob: -5.251277923583984
    8. 't' → logprob: -5.376277923583984
    9. ' i' → logprob: -5.376277923583984
    10. '(h' → logprob: -5.751277923583984

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8224895596504211
    2. ' t' → logprob: -2.0724895000457764
    3. ' k' → logprob: -2.1974895000457764
    4. ' (' → logprob: -2.3224895000457764
    5. 'k' → logprob: -2.6974895000457764
    6. ' i' → logprob: -2.8224895000457764
    7. 't' → logprob: -3.4474895000457764
    8. 'i' → logprob: -4.3224897384643555
    9. 'def' → logprob: -4.6974897384643555
    10. ' def' → logprob: -5.0724897384643555

Token 254: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5373126864433289
    2. '   ' → logprob: -2.2873127460479736
    3. 't' → logprob: -2.4123127460479736
    4. ' k' → logprob: -2.9123127460479736
    5. ' t' → logprob: -3.6623127460479736
    6. 'def' → logprob: -3.7873127460479736
    7. ' (' → logprob: -3.7873127460479736
    8. '(k' → logprob: -3.9123127460479736
    9. '#' (adapté à ' #') → logprob: -4.1623125076293945
    10. 'i' → logprob: -4.2873125076293945

Token 255: ' sum' (ID: 4215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2944009006023407
    2. ' k' → logprob: -2.669400930404663
    3. '   ' → logprob: -3.044400930404663
    4. 't' → logprob: -3.669400930404663
    5. '(k' → logprob: -4.044400691986084
    6. 'def' → logprob: -4.294400691986084
    7. ' (' → logprob: -4.294400691986084
    8. '#' → logprob: -4.419400691986084
    9. 'i' → logprob: -4.544400691986084
    10. ' t' → logprob: -4.669400691986084

Token 256: '_{' (ID: 22305)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.7199221253395081
    2. '   ' → logprob: -2.2199220657348633
    3. '(' → logprob: -2.3449220657348633
    4. '(i' → logprob: -2.5949220657348633
    5. 'h' → logprob: -3.0949220657348633
    6. '((' → logprob: -3.3449220657348633
    7. '=' → logprob: -3.7199220657348633
    8. '([' → logprob: -3.8449220657348633
    9. '_{' → logprob: -3.9699220657348633
    10. '_j' → logprob: -4.219922065734863

Token 257: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009298062650486827
    2. '0' → logprob: -8.000929832458496
    3. ' j' → logprob: -8.125929832458496
    4. 'i' → logprob: -8.500929832458496
    5. '_j' → logprob: -10.500929832458496
    6. '   ' → logprob: -11.000929832458496
    7. 'm' → logprob: -11.500929832458496
    8. '1' → logprob: -11.750929832458496
    9. 'prev' → logprob: -12.250929832458496
    10. ' ' → logprob: -12.625929832458496

Token 258: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0492063760757446
    2. 'i' → logprob: -1.0492063760757446
    3. ' =' → logprob: -3.049206256866455
    4. ')' → logprob: -3.174206256866455
    5. ' i' → logprob: -3.299206256866455
    6. 'n' → logprob: -3.424206256866455
    7. '[i' → logprob: -3.674206256866455
    8. ' n' → logprob: -4.424206256866455
    9. ' <=' → logprob: -4.549206256866455
    10. '   ' → logprob: -4.549206256866455

Token 259: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007589349057525396
    2. 'i' → logprob: -5.007589340209961
    3. '=' → logprob: -7.757589340209961
    4. 'n' → logprob: -9.132589340209961
    5. ' ' → logprob: -9.507589340209961
    6. 'range' → logprob: -9.632589340209961
    7. ' i' → logprob: -9.757589340209961
    8. '   ' → logprob: -10.757589340209961
    9. 'max' → logprob: -10.882589340209961
    10. '1' → logprob: -11.132589340209961

Token 260: '}^{' (ID: 107298)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19622549414634705
    2. '}' → logprob: -2.44622540473938
    3. '}^{' → logprob: -2.57122540473938
    4. ',' → logprob: -5.696225643157959
    5. ' =' → logprob: -6.321225643157959
    6. 'n' → logprob: -6.446225643157959
    7. 'i' → logprob: -6.446225643157959
    8. '...' → logprob: -6.821225643157959
    9. ' to' → logprob: -6.946225643157959
    10. 'to' → logprob: -7.196225643157959

Token 261: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002074006013572216
    2. 'n' → logprob: -6.377074241638184
    3. 'k' → logprob: -8.752074241638184
    4. ' i' → logprob: -9.002074241638184
    5. 'j' → logprob: -10.252074241638184
    6. 't' → logprob: -11.127074241638184
    7. '   ' → logprob: -11.252074241638184
    8. ' ' → logprob: -11.752074241638184
    9. '(i' → logprob: -12.377074241638184
    10. 'len' → logprob: -12.752074241638184

Token 262: '-' (ID: 12)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.269971638917923
    2. '-' → logprob: -1.6449716091156006
    3. '}(' → logprob: -3.8949716091156006
    4. '}^{' → logprob: -4.89497184753418
    5. '}+' → logprob: -5.26997184753418
    6. '}-' → logprob: -5.89497184753418
    7. '+' → logprob: -6.14497184753418
    8. ' -' → logprob: -6.51997184753418
    9. 'n' → logprob: -6.89497184753418
    10. '}[' → logprob: -7.89497184753418

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014525714504998177
    2. ' ' → logprob: -10.000144958496094
    3. 'n' → logprob: -10.125144958496094
    4. 't' → logprob: -11.000144958496094
    5. 'k' → logprob: -11.750144958496094
    6. '}' → logprob: -11.875144958496094
    7. '   ' → logprob: -12.812644958496094
    8. ' n' → logprob: -13.062644958496094
    9. 'def' → logprob: -13.125144958496094
    10. '-' → logprob: -13.312644958496094

Token 264: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.02802092581987381
    2. '}(' → logprob: -3.6530208587646484
    3. '   ' → logprob: -7.778020858764648
    4. ' }' → logprob: -8.153020858764648
    5. 'k' → logprob: -8.153020858764648
    6. '}[' → logprob: -9.028020858764648
    7. ' ' → logprob: -9.278020858764648
    8. 'h' → logprob: -9.528020858764648
    9. '(h' → logprob: -10.028020858764648
    10. '}
' → logprob: -10.028020858764648

Token 265: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14809323847293854
    2. '(k' → logprob: -2.7730932235717773
    3. ' k' → logprob: -2.8980932235717773
    4. ' (' → logprob: -4.398093223571777
    5. '(h' → logprob: -6.023093223571777
    6. 't' → logprob: -6.773093223571777
    7. 'h' → logprob: -6.898093223571777
    8. '(t' → logprob: -7.148093223571777
    9. '(' → logprob: -7.648093223571777
    10. ' t' → logprob: -8.148093223571777

Token 266: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013705497607588768
    2. 'h' → logprob: -4.638705730438232
    3. 't' → logprob: -6.638705730438232
    4. '(k' → logprob: -7.013705730438232
    5. '(h' → logprob: -7.013705730438232
    6. ')' → logprob: -8.013705253601074
    7. 'def' → logprob: -9.013705253601074
    8. ' k' → logprob: -9.388705253601074
    9. '(t' → logprob: -9.888705253601074
    10. '   ' → logprob: -10.013705253601074

Token 267: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16864092648029327
    2. '*' → logprob: -1.9186409711837769
    3. '*h' → logprob: -4.793641090393066
    4. ')' → logprob: -10.668641090393066
    5. ' ' → logprob: -11.043641090393066
    6. ' ' → logprob: -11.168641090393066
    7. ')*' → logprob: -11.793641090393066
    8. ' h' → logprob: -12.418641090393066
    9. 'h' → logprob: -12.418641090393066
    10. '+' → logprob: -12.793641090393066

Token 268: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03807029500603676
    2. ' h' → logprob: -3.2880702018737793
    3. '(h' → logprob: -11.663070678710938
    4. ' ' → logprob: -12.538070678710938
    5. '   ' → logprob: -12.538070678710938
    6. ')' → logprob: -13.163070678710938
    7. 'hj' → logprob: -13.163070678710938
    8. '
' → logprob: -13.788070678710938
    9. ' (' → logprob: -13.913070678710938
    10. '*h' → logprob: -14.288070678710938

Token 269: '_j' (ID: 12021)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00014370749704539776
    2. '[i' → logprob: -9.250144004821777
    3. 'j' → logprob: -10.500144004821777
    4. '[' → logprob: -11.125144004821777
    5. '[k' → logprob: -14.000144004821777
    6. '_j' → logprob: -14.250144004821777
    7. ' [' → logprob: -14.500144004821777
    8. '][' → logprob: -14.875144004821777
    9. '[
' → logprob: -15.125144004821777
    10. '}[' → logprob: -15.500144004821777

Token 270: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0044921888038516045
    2. ' )' → logprob: -5.629492282867432
    3. ')+' → logprob: -7.379492282867432
    4. ' +' → logprob: -8.629491806030273
    5. '+' → logprob: -10.129491806030273
    6. '+)' → logprob: -10.879491806030273
    7. ')+(' → logprob: -12.504491806030273
    8. ')
' → logprob: -12.504491806030273
    9. '#' → logprob: -12.879491806030273
    10. ' ' → logprob: -13.129491806030273

Token 271: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11138597130775452
    2. '   ' → logprob: -2.8613860607147217
    3. '+' → logprob: -3.8613860607147217
    4. ')' → logprob: -3.9863860607147217
    5. '<|end|>' → logprob: -6.236385822296143
    6. ' ' → logprob: -6.861385822296143
    7. '    ' → logprob: -7.111385822296143
    8. 'def' → logprob: -7.361385822296143
    9. ' +
' → logprob: -7.361385822296143
    10. '  ' → logprob: -7.611385822296143

Token 272: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08989033848047256
    2. ' k' → logprob: -2.464890241622925
    3. '(k' → logprob: -8.089890480041504
    4. ' (' → logprob: -8.214890480041504
    5. '   ' → logprob: -9.089890480041504
    6. ' ' → logprob: -9.839890480041504
    7. 't' → logprob: -9.964890480041504
    8. ' t' → logprob: -9.964890480041504
    9. 'i' → logprob: -10.464890480041504
    10. '  ' → logprob: -10.714890480041504

Token 273: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.009007236920297146
    2. '*' → logprob: -4.759007453918457
    3. ')' → logprob: -8.509007453918457
    4. ' ' → logprob: -9.884007453918457
    5. '   ' → logprob: -10.509007453918457
    6. '*h' → logprob: -10.634007453918457
    7. '#' → logprob: -11.259007453918457
    8. '<|end|>' → logprob: -11.509007453918457
    9. 'def' → logprob: -11.634007453918457
    10. '  ' → logprob: -11.759007453918457

Token 274: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3132791221141815
    2. ' h' → logprob: -1.313279151916504
    3. ' ' → logprob: -11.313279151916504
    4. '   ' → logprob: -13.688279151916504
    5. '  ' → logprob: -14.188279151916504
    6. 'hi' → logprob: -14.438279151916504
    7. '[' → logprob: -15.063279151916504
    8. '[h' → logprob: -15.063279151916504
    9. '	h' → logprob: -15.188279151916504
    10. ' ' → logprob: -15.438279151916504

Token 275: '_i' (ID: 10853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010986573761329055
    2. '[' → logprob: -7.6260986328125
    3. ')' → logprob: -7.7510986328125
    4. '_i' → logprob: -10.0010986328125
    5. '[j' → logprob: -10.2510986328125
    6. '   ' → logprob: -10.8760986328125
    7. 'i' → logprob: -11.0010986328125
    8. ']' → logprob: -11.2510986328125
    9. '}' → logprob: -12.2510986328125
    10. '[
' → logprob: -12.2510986328125

Token 276: ' ==' (ID: 951)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11439703404903412
    2. '
' → logprob: -2.4893970489501953
    3. 'def' → logprob: -4.489397048950195
    4. '    
' → logprob: -4.614397048950195
    5. '#' → logprob: -6.489397048950195
    6. ' =' → logprob: -7.114397048950195
    7. 'import' → logprob: -8.239397048950195
    8. '=' → logprob: -8.739397048950195
    9. '

' → logprob: -8.864397048950195
    10. '   
' → logprob: -9.114397048950195

Token 277: ' k' (ID: 372)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.8178041577339172
    2. ' k' → logprob: -1.0678040981292725
    3. 'k' → logprob: -2.5678040981292725
    4. ' (' → logprob: -2.6928040981292725
    5. 't' → logprob: -3.3178040981292725
    6. ' sum' → logprob: -4.567804336547852
    7. 'sum' → logprob: -5.067804336547852
    8. '(k' → logprob: -5.442804336547852
    9. '   ' → logprob: -6.192804336547852
    10. '(t' → logprob: -6.692804336547852

Token 278: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.003903026692569256
    2. '<|end|>' → logprob: -6.378902912139893
    3. '*' → logprob: -6.753902912139893
    4. ')' → logprob: -7.628902912139893
    5. '<|end|>' → logprob: -9.12890338897705
    6. ' ' → logprob: -9.37890338897705
    7. ' *
' → logprob: -10.00390338897705
    8. '  ' → logprob: -10.00390338897705
    9. '   ' → logprob: -10.25390338897705
    10. ',' → logprob: -10.62890338897705

Token 279: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.8659662008285522
    2. 'h' → logprob: -1.4909662008285522
    3. '(sum' → logprob: -1.8659662008285522
    4. 'sum' → logprob: -2.115966320037842
    5. ' (' → logprob: -2.865966320037842
    6. ' sum' → logprob: -4.990966320037842
    7. '(' → logprob: -5.115966320037842
    8. ' h' → logprob: -5.490966320037842
    9. '(t' → logprob: -5.615966320037842
    10. 't' → logprob: -7.615966320037842

Token 280: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.19043903052806854
    2. 'h' → logprob: -1.940438985824585
    3. '(sum' → logprob: -3.815438985824585
    4. ' sum' → logprob: -5.440439224243164
    5. '(h' → logprob: -5.940439224243164
    6. ' h' → logprob: -7.565439224243164
    7. '[h' → logprob: -9.940439224243164
    8. ' (' → logprob: -9.940439224243164
    9. '(' → logprob: -10.315439224243164
    10. 't' → logprob: -10.690439224243164

Token 281: '_{' (ID: 22305)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.36228811740875244
    2. 'h' → logprob: -1.2372881174087524
    3. '([' → logprob: -5.612287998199463
    4. '_{' → logprob: -5.737287998199463
    5. '_' → logprob: -6.487287998199463
    6. '(' → logprob: -6.487287998199463
    7. '_h' → logprob: -6.612287998199463
    8. '[h' → logprob: -7.112287998199463
    9. '_j' → logprob: -7.737287998199463
    10. '(j' → logprob: -7.862287998199463

Token 282: 'j' (ID: 73)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.025173569098114967
    2. 'j' → logprob: -4.525173664093018
    3. '[j' → logprob: -4.900173664093018
    4. '[' → logprob: -5.775173664093018
    5. '[h' → logprob: -6.275173664093018
    6. 'prev' → logprob: -7.400173664093018
    7. ' h' → logprob: -8.40017318725586
    8. 'range' → logprob: -9.02517318725586
    9. '   ' → logprob: -9.27517318725586
    10. 'l' → logprob: -9.65017318725586

Token 283: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00017994173686020076
    2. '=i' → logprob: -9.7501802444458
    3. '0' → logprob: -10.0001802444458
    4. '=j' → logprob: -10.1251802444458
    5. '=sys' → logprob: -11.6251802444458
    6. ' =' → logprob: -12.3751802444458
    7. '1' → logprob: -12.5001802444458
    8. 'i' → logprob: -13.0001802444458
    9. '+' → logprob: -13.2501802444458
    10. 'import' → logprob: -13.2501802444458

Token 284: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012554745189845562
    2. '1' → logprob: -4.38755464553833
    3. 'i' → logprob: -11.012555122375488
    4. '=' → logprob: -11.387555122375488
    5. ' ' → logprob: -11.762555122375488
    6. 'j' → logprob: -12.012555122375488
    7. 'import' → logprob: -14.012555122375488
    8. '   ' → logprob: -14.387555122375488
    9. '
' → logprob: -15.512555122375488
    10. '```' → logprob: -15.512555122375488

Token 285: '}' (ID: 92)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6553621888160706
    2. '}^{' → logprob: -0.7803621888160706
    3. '}' → logprob: -4.905362129211426
    4. '=j' → logprob: -5.155362129211426
    5. 'i' → logprob: -5.780362129211426
    6. '=i' → logprob: -6.155362129211426
    7. 'j' → logprob: -6.780362129211426
    8. ':j' → logprob: -7.280362129211426
    9. '0' → logprob: -7.780362129211426
    10. 'prev' → logprob: -8.280362129211426

Token 286: '^' (ID: 61)
  Prédit: '}^{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}^{' → logprob: -1.3848876953125
    2. '=' → logprob: -1.6348876953125
    3. '^{' → logprob: -2.1348876953125
    4. '0' → logprob: -2.2598876953125
    5. '[j' → logprob: -2.8848876953125
    6. 'h' → logprob: -2.8848876953125
    7. '^' → logprob: -2.8848876953125
    8. '   ' → logprob: -3.3848876953125
    9. ':j' → logprob: -3.5098876953125
    10. 'j' → logprob: -4.0098876953125

Token 287: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0037051814142614603
    2. '{i' → logprob: -6.253705024719238
    3. ' i' → logprob: -7.253705024719238
    4. '(i' → logprob: -7.503705024719238
    5. 'n' → logprob: -8.628705024719238
    6. 'j' → logprob: -9.253705024719238
    7. '[i' → logprob: -10.003705024719238
    8. 'len' → logprob: -10.253705024719238
    9. 'import' → logprob: -10.503705024719238
    10. '
' → logprob: -10.878705024719238

Token 288: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2568536698818207
    2. ' h' → logprob: -1.506853699684143
    3. '(h' → logprob: -5.7568535804748535
    4. ' (' → logprob: -7.0068535804748535
    5. ')' → logprob: -8.381854057312012
    6. '[h' → logprob: -8.631854057312012
    7. '   ' → logprob: -9.131854057312012
    8. '(' → logprob: -9.256854057312012
    9. ' ' → logprob: -10.006854057312012
    10. ' [' → logprob: -10.381854057312012

Token 289: '_j' (ID: 12021)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.009233581833541393
    2. '[j' → logprob: -4.759233474731445
    3. ')' → logprob: -8.134233474731445
    4. 'j' → logprob: -8.634233474731445
    5. '[' → logprob: -9.384233474731445
    6. '_j' → logprob: -10.009233474731445
    7. '[i' → logprob: -11.884233474731445
    8. '[
' → logprob: -13.009233474731445
    9. '[:]' → logprob: -13.134233474731445
    10. ')+' → logprob: -13.384233474731445

Token 290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014273790875449777
    2. ' )' → logprob: -7.376427173614502
    3. ')+' → logprob: -7.626427173614502
    4. '   ' → logprob: -10.00142765045166
    5. ' +' → logprob: -10.12642765045166
    6. '())' → logprob: -10.75142765045166
    7. '`)' → logprob: -10.75142765045166
    8. '+' → logprob: -10.75142765045166
    9. '])' → logprob: -10.87642765045166
    10. ']' → logprob: -10.87642765045166

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01048480998724699
    2. '
' → logprob: -5.13548469543457
    3. '    
' → logprob: -5.88548469543457
    4. 'def' → logprob: -6.88548469543457
    5. '#' → logprob: -8.38548469543457
    6. ')' → logprob: -9.01048469543457
    7. 'import' → logprob: -9.51048469543457
    8. '<|end|>' → logprob: -9.88548469543457
    9. '    ' → logprob: -10.01048469543457
    10. '   
' → logprob: -10.76048469543457

Token 292: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0225052572786808
    2. '
' → logprob: -4.772505283355713
    3. '    
' → logprob: -4.897505283355713
    4. 'def' → logprob: -5.897505283355713
    5. '#' (adapté à ' #') → logprob: -6.897505283355713
    6. 'prefix' → logprob: -7.147505283355713
    7. 's' → logprob: -8.147504806518555
    8. 'n' → logprob: -8.772504806518555
    9. '   
' → logprob: -9.397504806518555
    10. 'import' → logprob: -9.397504806518555

Token 293: ' donc' (ID: 14206)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.22370608150959015
    2. '   ' → logprob: -1.7237061262130737
    3. 'def' → logprob: -5.348706245422363
    4. 's' → logprob: -5.348706245422363
    5. ' prefix' → logprob: -5.473706245422363
    6. 'cum' → logprob: -5.723706245422363
    7. '#' → logprob: -6.098706245422363
    8. 'c' → logprob: -7.598706245422363
    9. 'suffix' → logprob: -7.723706245422363
    10. 'pre' → logprob: -7.973706245422363

Token 294: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2605239152908325
    2. 'def' → logprob: -2.635523796081543
    3. '#' → logprob: -3.010523796081543
    4. 'import' → logprob: -3.885523796081543
    5. 'le' → logprob: -4.135523796081543
    6. 'prefix' → logprob: -4.135523796081543
    7. 'on' → logprob: -4.760523796081543
    8. 'left' → logprob: -5.010523796081543
    9. 'la' → logprob: -5.135523796081543
    10. ' on' → logprob: -5.135523796081543

Token 295: ' "' (ID: 392)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.7082231044769287
    2. ' temps' → logprob: -1.8332231044769287
    3. 'k' → logprob: -2.2082231044769287
    4. 'prefix' → logprob: -3.0832231044769287
    5. '#' → logprob: -3.5832231044769287
    6. ' prefix' → logprob: -3.8332231044769287
    7. 't' → logprob: -4.208223342895508
    8. ' k' → logprob: -4.333223342895508
    9. 'minimum' → logprob: -4.583223342895508
    10. ' code' → logprob: -4.583223342895508

Token 296: 'pipeline' (ID: 107503)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.4046909511089325
    2. 'temps' → logprob: -1.5296909809112549
    3. ' prefix' → logprob: -3.154690980911255
    4. 'k' → logprob: -4.154690742492676
    5. ' temps' → logprob: -4.404690742492676
    6. '#' → logprob: -4.654690742492676
    7. 'c' → logprob: -5.154690742492676
    8. 's' → logprob: -5.279690742492676
    9. 'def' → logprob: -5.404690742492676
    10. 'pré' → logprob: -5.529690742492676

Token 297: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2398103028535843
    2. '_' → logprob: -3.3648102283477783
    3. ' complet' → logprob: -3.3648102283477783
    4. ' completion' → logprob: -3.7398102283477783
    5. '_length' → logprob: -3.9898102283477783
    6. ' processing' → logprob: -4.239810466766357
    7. ' de' → logprob: -4.614810466766357
    8. '_len' → logprob: -5.364810466766357
    9. ' continues' → logprob: -5.364810466766357
    10. ' des' → logprob: -5.489810466766357

Token 298: ' global' (ID: 5466)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0947526693344116
    2. '   ' → logprob: -1.9697526693344116
    3. 's' → logprob: -2.594752788543701
    4. 'sum' → logprob: -2.844752788543701
    5. '=' → logprob: -3.219752788543701
    6. ' continues' → logprob: -3.344752788543701
    7. 'time' → logprob: -3.969752788543701
    8. 'length' → logprob: -3.969752788543701
    9. '_' → logprob: -4.094752788543701
    10. 'continue' → logprob: -4.094752788543701

Token 299: ' avance' (ID: 81376)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16295631229877472
    2. 'prefix' → logprob: -3.2879562377929688
    3. 'def' → logprob: -4.037956237792969
    4. '_prefix' → logprob: -4.162956237792969
    5. '_' → logprob: -4.412956237792969
    6. 's' → logprob: -4.537956237792969
    7. '
' → logprob: -4.662956237792969
    8. ' =' → logprob: -4.912956237792969
    9. ' prefix' → logprob: -5.287956237792969
    10. 'cum' → logprob: -5.537956237792969

Token 300: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6068106293678284
    2. ' d' → logprob: -1.6068105697631836
    3. ' de' → logprob: -2.2318105697631836
    4. ' jusqu' → logprob: -3.2318105697631836
    5. 'd' → logprob: -3.3568105697631836
    6. 'de' → logprob: -3.8568105697631836
    7. ' =' → logprob: -4.481810569763184
    8. ',' → logprob: -4.981810569763184
    9. '=' → logprob: -5.356810569763184
    10. 's' → logprob: -5.606810569763184

Token 301: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.049839973449707
    2. 'la' → logprob: -1.299839973449707
    3. 'pas' → logprob: -2.424839973449707
    4. 'h' → logprob: -3.049839973449707
    5. 'cha' → logprob: -3.299839973449707
    6. 'un' → logprob: -3.299839973449707
    7. 't' → logprob: -3.299839973449707
    8. 'v' → logprob: -3.799839973449707
    9. ' chaque' → logprob: -3.924839973449707
    10. 'l' → logprob: -4.299839973449707

Token 302: ' vitesse' (ID: 71752)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.009705333970487118
    2. 'vit' → logprob: -5.884705543518066
    3. 'minute' → logprob: -6.134705543518066
    4. 'm' → logprob: -6.759705543518066
    5. 'pas' → logprob: -7.009705543518066
    6. 'vite' → logprob: -7.509705543518066
    7. 'min' → logprob: -7.884705543518066
    8. ' vitesse' → logprob: -7.884705543518066
    9. ' ' → logprob: -8.009705543518066
    10. '   ' → logprob: -8.509705543518066

Token 303: ' cum' (ID: 10023)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.3635215759277344
    2. '   ' → logprob: -1.7385215759277344
    3. ' =' → logprob: -2.2385215759277344
    4. 'sum' → logprob: -2.2385215759277344
    5. ' sum' → logprob: -2.4885215759277344
    6. '=' → logprob: -2.7385215759277344
    7. 'h' → logprob: -3.1135215759277344
    8. ' de' → logprob: -3.3635215759277344
    9. ' cumulative' → logprob: -3.8635215759277344
    10. 'de' → logprob: -4.363521575927734

Token 304: '_h' (ID: 3434)
  Prédit: 'ulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulative' → logprob: -0.05379895865917206
    2. 'ul' → logprob: -3.0537989139556885
    3. 'u' → logprob: -6.178799152374268
    4. 'ulat' → logprob: -6.928799152374268
    5. 'ulé' → logprob: -7.053799152374268
    6. 'mul' → logprob: -7.803799152374268
    7. '#' → logprob: -8.42879867553711
    8. 'sum' → logprob: -9.17879867553711
    9. 'l' → logprob: -9.67879867553711
    10. 'ée' → logprob: -9.80379867553711

Token 305: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17863009870052338
    2. '
' → logprob: -2.0536301136016846
    3. 'cum' → logprob: -3.9286301136016846
    4. '    
' → logprob: -5.8036298751831055
    5. 'import' → logprob: -6.0536298751831055
    6. 'def' → logprob: -6.0536298751831055
    7. 'c' → logprob: -6.4286298751831055
    8. ' =' → logprob: -6.9286298751831055
    9. '_c' → logprob: -6.9286298751831055
    10. '
' → logprob: -7.8036298751831055

Token 306: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5503183603286743
    2. '[' → logprob: -1.1753183603286743
    3. ' [' → logprob: -2.6753182411193848
    4. '[h' → logprob: -3.6753182411193848
    5. ' ' → logprob: -4.675318241119385
    6. 'sum' → logprob: -5.675318241119385
    7. 'h' → logprob: -5.800318241119385
    8. ' h' → logprob: -7.175318241119385
    9. '[t' → logprob: -7.425318241119385
    10. '[i' → logprob: -7.550318241119385

Token 307: ' h' (ID: 312)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.8830752372741699
    2. '+' → logprob: -1.13307523727417
    3. '_' → logprob: -3.13307523727417
    4. 'h' → logprob: -3.50807523727417
    5. '[' → logprob: -3.50807523727417
    6. ' +' → logprob: -3.63307523727417
    7. '[i' → logprob: -3.75807523727417
    8. '   ' → logprob: -3.88307523727417
    9. '_h' → logprob: -4.00807523727417
    10. ' cum' → logprob: -4.00807523727417

Token 308: '_j' (ID: 12021)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.041551463305950165
    2. 's' → logprob: -4.41655158996582
    3. '_j' → logprob: -5.29155158996582
    4. '   ' → logprob: -5.41655158996582
    5. '_i' → logprob: -5.41655158996582
    6. '[:' → logprob: -5.91655158996582
    7. '_s' → logprob: -6.04155158996582
    8. ')' → logprob: -6.04155158996582
    9. '_sum' → logprob: -6.16655158996582
    10. ' =' → logprob: -7.41655158996582

Token 309: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02031938172876835
    2. '
' → logprob: -4.89531946182251
    3. '    
' → logprob: -5.02031946182251
    4. 'def' → logprob: -5.64531946182251
    5. ')' → logprob: -8.020318984985352
    6. '<|end|>' → logprob: -8.270318984985352
    7. ',' → logprob: -8.520318984985352
    8. 'import' → logprob: -8.770318984985352
    9. '   
' → logprob: -8.895318984985352
    10. '[' → logprob: -8.895318984985352

Token 310: 'j' (ID: 73)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.32180389761924744
    2. ')' → logprob: -1.5718039274215698
    3. ')
' → logprob: -2.9468038082122803
    4. 'for' → logprob: -5.321804046630859
    5. '[i' → logprob: -5.821804046630859
    6. '   ' → logprob: -6.071804046630859
    7. ' for' → logprob: -6.446804046630859
    8. '[' → logprob: -6.821804046630859
    9. 's' → logprob: -7.696804046630859
    10. ')
' → logprob: -8.57180404663086

Token 311: '=' (ID: 28)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.059918567538261414
    2. '=' → logprob: -4.184918403625488
    3. '[' → logprob: -4.434918403625488
    4. ')' → logprob: -5.309918403625488
    5. '[i' → logprob: -5.309918403625488
    6. '+' → logprob: -5.309918403625488
    7. '   ' → logprob: -5.809918403625488
    8. ' up' → logprob: -5.934918403625488
    9. '
' → logprob: -6.809918403625488
    10. '[j' → logprob: -7.059918403625488

Token 312: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008581597357988358
    2. 'i' → logprob: -5.383581638336182
    3. '1' → logprob: -5.758581638336182
    4. ' ' → logprob: -8.258581161499023
    5. '   ' → logprob: -8.383581161499023
    6. '+' → logprob: -8.883581161499023
    7. '=' → logprob: -9.883581161499023
    8. ' i' → logprob: -10.133581161499023
    9. 'j' → logprob: -10.758581161499023
    10. ')' → logprob: -12.008581161499023

Token 313: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.190521478652954
    2. 'i' → logprob: -1.315521478652954
    3. '+' → logprob: -2.565521478652954
    4. ':i' → logprob: -2.565521478652954
    5. '
' → logprob: -2.940521478652954
    6. '   ' → logprob: -3.065521478652954
    7. 'for' → logprob: -3.690521478652954
    8. '=' → logprob: -4.065521240234375
    9. '=i' → logprob: -4.315521240234375
    10. '[i' → logprob: -4.315521240234375

Token 314: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007325552869588137
    2. ' i' → logprob: -7.250732421875
    3. '{i' → logprob: -11.625732421875
    4. '   ' → logprob: -12.125732421875
    5. '	i' → logprob: -12.750732421875
    6. '(i' → logprob: -13.625732421875
    7. ')i' → logprob: -13.750732421875
    8. '_i' → logprob: -13.875732421875
    9. ')' → logprob: -14.500732421875
    10. ',i' → logprob: -14.625732421875

Token 315: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2543483376502991
    2. '])' → logprob: -2.6293482780456543
    3. '+' → logprob: -3.0043482780456543
    4. ')
' → logprob: -3.5043482780456543
    5. '[i' → logprob: -4.629348278045654
    6. 's' → logprob: -4.629348278045654
    7. ']' → logprob: -4.629348278045654
    8. 'i' → logprob: -4.754348278045654
    9. '_i' → logprob: -5.379348278045654
    10. '[:' → logprob: -5.379348278045654

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027058476582169533
    2. 'cum' → logprob: -4.2770586013793945
    3. '
' → logprob: -5.1520586013793945
    4. 'def' → logprob: -5.7770586013793945
    5. '    
' → logprob: -7.0270586013793945
    6. ' cumulative' → logprob: -7.7770586013793945
    7. 'c' → logprob: -7.9020586013793945
    8. '#' → logprob: -8.027058601379395
    9. ' cum' → logprob: -8.027058601379395
    10. 'prefix' → logprob: -8.277058601379395

Token 317: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027592986822128296
    2. '
' → logprob: -4.15259313583374
    3. 'cum' → logprob: -4.90259313583374
    4. '    
' → logprob: -6.40259313583374
    5. 'prefix' → logprob: -6.90259313583374
    6. 'c' → logprob: -7.90259313583374
    7. 'def' → logprob: -8.277592658996582
    8. '#' (adapté à ' #') → logprob: -8.402592658996582
    9. ' cum' → logprob: -9.152592658996582
    10. ' prefix' → logprob: -9.402592658996582

Token 318: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2007311582565308
    2. 'cum' → logprob: -1.4507311582565308
    3. ' prefix' → logprob: -1.5757311582565308
    4. 'prefix' → logprob: -1.9507311582565308
    5. ' cum' → logprob: -3.0757312774658203
    6. 'c' → logprob: -3.2007312774658203
    7. ' cumulative' → logprob: -4.20073127746582
    8. '
' → logprob: -5.95073127746582
    9. ' c' → logprob: -6.20073127746582
    10. '#' → logprob: -6.95073127746582

Token 319: ' problème' (ID: 35630)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cum' → logprob: -1.032546043395996
    2. 'cum' → logprob: -1.782546043395996
    3. 'c' → logprob: -2.657546043395996
    4. '#' → logprob: -2.657546043395996
    5. ' #' → logprob: -3.157546043395996
    6. 'def' → logprob: -3.282546043395996
    7. 't' → logprob: -3.407546043395996
    8. ' cumulative' → logprob: -3.532546043395996
    9. ' code' → logprob: -3.657546043395996
    10. ' t' → logprob: -4.032546043395996

Token 320: ' se' (ID: 458)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9331660270690918
    2. '#' → logprob: -1.8081660270690918
    3. '<|end|>' → logprob: -2.308166027069092
    4. '   ' → logprob: -3.058166027069092
    5. ':' → logprob: -3.183166027069092
    6. ' n' → logprob: -3.558166027069092
    7. ' ' → logprob: -3.558166027069092
    8. ' reste' → logprob: -3.683166027069092
    9. 'est' → logprob: -3.933166027069092
    10. '.' → logprob: -4.058166027069092

Token 321: ' ram' (ID: 20920)
  Prédit: 'pose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pose' → logprob: -0.31089067459106445
    2. '#' → logprob: -1.4358906745910645
    3. 'term' → logprob: -5.3108906745910645
    4. 'pos' → logprob: -5.3108906745910645
    5. 'continue' → logprob: -5.8108906745910645
    6. 'st' → logprob: -6.3108906745910645
    7. 'solve' → logprob: -6.5608906745910645
    8. 'rés' → logprob: -6.6858906745910645
    9. 'arr' → logprob: -6.8108906745910645
    10. 'pas' → logprob: -6.9358906745910645

Token 322: 'ène' (ID: 22902)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.8607053756713867
    2. 'pl' → logprob: -1.2357053756713867
    3. 'place' → logprob: -2.2357053756713867
    4. 'ène' → logprob: -2.6107053756713867
    5. 'ont' → logprob: -3.4857053756713867
    6. 'plit' → logprob: -3.7357053756713867
    7. 'onte' → logprob: -4.610705375671387
    8. 'p' → logprob: -4.735705375671387
    9. '#' → logprob: -5.360705375671387
    10. 'int' → logprob: -6.110705375671387

Token 323: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.43089205026626587
    2. 'à' → logprob: -1.055891990661621
    3. ' donc' → logprob: -7.180891990661621
    4. '#' → logprob: -8.180891990661621
    5. '   ' → logprob: -8.680891990661621
    6. 'a' → logprob: -8.680891990661621
    7. ''à' → logprob: -8.805891990661621
    8. ' a' → logprob: -8.930891990661621
    9. 'au' → logprob: -9.055891990661621
    10. ' au' → logprob: -9.305891990661621

Token 324: ',' (ID: 11)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.10548823326826096
    2. ' trouver' → logprob: -3.2304883003234863
    3. 'chercher' → logprob: -3.8554883003234863
    4. 'calcul' → logprob: -4.855488300323486
    5. '#' → logprob: -5.105488300323486
    6. 'import' → logprob: -5.355488300323486
    7. 'dé' → logprob: -5.980488300323486
    8. 'une' → logprob: -5.980488300323486
    9. '```' → logprob: -6.355488300323486
    10. ' déterminer' → logprob: -6.480488300323486

Token 325: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -1.1769840717315674
    2. '   ' → logprob: -1.4269840717315674
    3. '#' → logprob: -1.9269840717315674
    4. 'pour' → logprob: -2.1769840717315674
    5. 'for' → logprob: -2.4269840717315674
    6. ' for' → logprob: -2.9269840717315674
    7. ' #' → logprob: -3.8019840717315674
    8. ' dans' → logprob: -5.551983833312988
    9. '  ' → logprob: -5.926983833312988
    10. 'dans' → logprob: -6.051983833312988

Token 326: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.02149186097085476
    2. 'cha' → logprob: -4.271492004394531
    3. ' i' → logprob: -6.271492004394531
    4. 'i' → logprob: -6.521492004394531
    5. 'each' → logprob: -7.021492004394531
    6. ' each' → logprob: -7.271492004394531
    7. 'ch' → logprob: -7.896492004394531
    8. 't' → logprob: -8.146492004394531
    9. ' un' → logprob: -8.146492004394531
    10. '#' → logprob: -8.521492004394531

Token 327: ' i' (ID: 575)
  Prédit: ' étudiant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étudiant' → logprob: -0.1452237218618393
    2. ' i' → logprob: -2.270223617553711
    3. 'i' → logprob: -3.895223617553711
    4. 'ét' → logprob: -4.645223617553711
    5. ' student' → logprob: -8.145223617553711
    6. 'et' → logprob: -8.270223617553711
    7. 'student' → logprob: -8.270223617553711
    8. ' ét' → logprob: -8.520223617553711
    9. '_' → logprob: -9.020223617553711
    10. ' ' → logprob: -9.270223617553711

Token 328: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021848121657967567
    2. '   ' → logprob: -4.896848201751709
    3. ',
' → logprob: -5.271848201751709
    4. ' ,' → logprob: -5.896848201751709
    5. ':' → logprob: -6.146848201751709
    6. ' in' → logprob: -6.771848201751709
    7. ' en' → logprob: -7.271848201751709
    8. ' (' → logprob: -7.896848201751709
    9. 'en' → logprob: -8.27184772491455
    10. 'in' → logprob: -8.27184772491455

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007239687256515026
    2. '#' → logprob: -5.632239818572998
    3. ' #' → logprob: -6.882239818572998
    4. ' déterminer' → logprob: -6.882239818572998
    5. '    ' → logprob: -7.132239818572998
    6. '       ' → logprob: -8.75723934173584
    7. ' trouver' → logprob: -9.25723934173584
    8. '  ' → logprob: -9.25723934173584
    9. 'def' → logprob: -9.25723934173584
    10. ' ' → logprob: -9.38223934173584

Token 330: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04177477955818176
    2. '#' (adapté à ' #') → logprob: -3.9167747497558594
    3. ' #' → logprob: -4.291774749755859
    4. ' for' → logprob: -6.416774749755859
    5. 'def' → logprob: -7.166774749755859
    6. 'for' → logprob: -7.541774749755859
    7. '    ' → logprob: -7.541774749755859
    8. ' t' → logprob: -7.666774749755859
    9. '       ' → logprob: -7.916774749755859
    10. '```' → logprob: -8.29177474975586

Token 331: ' trouver' (ID: 23195)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cum' → logprob: -0.7142533659934998
    2. 'cum' → logprob: -1.2142534255981445
    3. ' prefix' → logprob: -3.2142534255981445
    4. '#' → logprob: -3.2142534255981445
    5. ' #' → logprob: -3.5892534255981445
    6. 'prefix' → logprob: -4.2142534255981445
    7. 'import' → logprob: -4.5892534255981445
    8. ' trouver' → logprob: -4.9642534255981445
    9. '   ' → logprob: -4.9642534255981445
    10. ' cumulative' → logprob: -5.0892534255981445

Token 332: ' k' (ID: 372)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7557752132415771
    2. ' k' → logprob: -1.2557752132415771
    3. 'k' → logprob: -1.8807752132415771
    4. 'le' → logprob: -2.755775213241577
    5. ' la' → logprob: -3.630775213241577
    6. 'la' → logprob: -7.255775451660156
    7. ' l' → logprob: -7.255775451660156
    8. ' the' → logprob: -7.880775451660156
    9. ' ' → logprob: -8.380775451660156
    10. 'l' → logprob: -8.880775451660156

Token 333: ' tel' (ID: 10716)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15793675184249878
    2. '_max' → logprob: -2.2829368114471436
    3. '_min' → logprob: -3.7829368114471436
    4. 'max' → logprob: -4.2829365730285645
    5. '=' → logprob: -5.9079365730285645
    6. ' max' → logprob: -6.2829365730285645
    7. '_' → logprob: -7.6579365730285645
    8. '_possible' → logprob: -7.9079365730285645
    9. '   ' → logprob: -8.032937049865723
    10. ',' → logprob: -8.032937049865723

Token 334: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.15496893227100372
    2. 'que' → logprob: -2.4049689769744873
    3. '   ' → logprob: -3.0299689769744873
    4. '=' → logprob: -6.404968738555908
    5. ' that' → logprob: -7.279968738555908
    6. 'ue' → logprob: -7.529968738555908
    7. ' =' → logprob: -7.654968738555908
    8. '#' → logprob: -8.279969215393066
    9. '    ' → logprob: -8.529969215393066
    10. 'that' → logprob: -8.529969215393066

Token 335: ' :
' (ID: 10039)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2577722668647766
    2. 'cum' → logprob: -2.132772207260132
    3. ' k' → logprob: -2.757772207260132
    4. ' cum' → logprob: -3.382772207260132
    5. '   ' → logprob: -6.007772445678711
    6. 'c' → logprob: -6.132772445678711
    7. '(k' → logprob: -6.132772445678711
    8. 't' → logprob: -6.757772445678711
    9. ' (' → logprob: -6.882772445678711
    10. ' t' → logprob: -7.257772445678711

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21637357771396637
    2. 'cum' → logprob: -2.3413736820220947
    3. ' cum' → logprob: -2.4663736820220947
    4. 'k' → logprob: -5.841373443603516
    5. ' k' → logprob: -6.091373443603516
    6. ' t' → logprob: -6.591373443603516
    7. 'c' → logprob: -6.591373443603516
    8. '    ' → logprob: -6.716373443603516
    9. ' (' → logprob: -7.091373443603516
    10. 't' → logprob: -7.216373443603516

Token 337: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.867811918258667
    2. 'cum' → logprob: -1.367811918258667
    3. ' cum' → logprob: -1.492811918258667
    4. ' (' → logprob: -3.617811918258667
    5. 'k' → logprob: -3.867811918258667
    6. 'c' → logprob: -4.242812156677246
    7. ' t' → logprob: -4.617812156677246
    8. ' k' → logprob: -4.867812156677246
    9. 't' → logprob: -4.992812156677246
    10. '(c' → logprob: -5.492812156677246

Token 338: ' temps' (ID: 11160)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8813225030899048
    2. 'cum' → logprob: -0.8813225030899048
    3. '   ' → logprob: -2.6313223838806152
    4. ' cum' → logprob: -3.1313223838806152
    5. ' k' → logprob: -3.5063223838806152
    6. 'c' → logprob: -4.881322383880615
    7. '(k' → logprob: -5.131322383880615
    8. 't' → logprob: -5.131322383880615
    9. ' (' → logprob: -6.256322383880615
    10. ' t' → logprob: -6.506322383880615

Token 339: ' jusqu' (ID: 21961)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0197701454162598
    2. '   ' → logprob: -2.3947701454162598
    3. '_t' → logprob: -2.3947701454162598
    4. 't' → logprob: -2.5197701454162598
    5. '_' → logprob: -2.5197701454162598
    6. '[i' → logprob: -2.8947701454162598
    7. ' <=' → logprob: -3.3947701454162598
    8. ' >=' → logprob: -3.5197701454162598
    9. ' +' → logprob: -3.7697701454162598
    10. ' t' → logprob: -3.8947701454162598

Token 340: ''à' (ID: 33688)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0287692546844482
    2. ' à' → logprob: -1.6537692546844482
    3. 'à' → logprob: -1.9037692546844482
    4. '=' → logprob: -2.4037692546844482
    5. ''à' → logprob: -3.2787692546844482
    6. 'au' → logprob: -3.5287692546844482
    7. 'a' → logprob: -3.7787692546844482
    8. ' =' → logprob: -4.028769493103027
    9. '<=' → logprob: -4.028769493103027
    10. '+' → logprob: -4.403769493103027

Token 341: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6405417919158936
    2. 't' → logprob: -1.6405417919158936
    3. ' t' → logprob: -2.2655417919158936
    4. ' l' → logprob: -2.3905417919158936
    5. 'i' → logprob: -3.2655417919158936
    6. ' i' → logprob: -4.390542030334473
    7. 'k' → logprob: -4.640542030334473
    8. '(t' → logprob: -5.390542030334473
    9. '(i' → logprob: -5.390542030334473
    10. 'au' → logprob: -6.140542030334473

Token 342: ' fin' (ID: 2131)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.50819993019104
    2. ' i' → logprob: -2.00819993019104
    3. 'ligne' → logprob: -2.88319993019104
    4. ' ' → logprob: -3.13319993019104
    5. 'item' → logprob: -3.13319993019104
    6. 't' → logprob: -3.38319993019104
    7. ' t' → logprob: -4.133199691772461
    8. '   ' → logprob: -4.758199691772461
    9. ' moitié' → logprob: -5.258199691772461
    10. 'mo' → logprob: -5.258199691772461

Token 343: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3452006578445435
    2. '   ' → logprob: -1.4702006578445435
    3. 'k' → logprob: -1.8452006578445435
    4. 'de' → logprob: -2.470200538635254
    5. 't' → logprob: -2.970200538635254
    6. ' t' → logprob: -3.470200538635254
    7. ' k' → logprob: -3.845200538635254
    8. ' du' → logprob: -3.845200538635254
    9. 'du' → logprob: -3.970200538635254
    10. '_k' → logprob: -3.970200538635254

Token 344: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28146517276763916
    2. ' k' → logprob: -2.0314650535583496
    3. 'i' → logprob: -2.9064650535583496
    4. ' i' → logprob: -3.4064650535583496
    5. 'item' → logprob: -4.90646505355835
    6. ' check' → logprob: -5.03146505355835
    7. 'check' → logprob: -5.15646505355835
    8. '(i' → logprob: -6.78146505355835
    9. ' item' → logprob: -6.90646505355835
    10. ' (' → logprob: -7.65646505355835

Token 345: '-i' (ID: 18499)
  Prédit: '_items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_items' → logprob: -1.148849606513977
    2. ' _' → logprob: -1.898849606513977
    3. ' item' → logprob: -1.898849606513977
    4. '_item' → logprob: -2.2738494873046875
    5. ' items' → logprob: -3.2738494873046875
    6. ' *' → logprob: -3.3988494873046875
    7. '_' → logprob: -3.5238494873046875
    8. 'items' → logprob: -3.6488494873046875
    9. 'item' → logprob: -3.7738494873046875
    10. '   ' → logprob: -4.0238494873046875

Token 346: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.3241490423679352
    2. 'eme' → logprob: -1.4491490125656128
    3. '-' → logprob: -4.824149131774902
    4. '+' → logprob: -5.324149131774902
    5. 'me' → logprob: -5.574149131774902
    6. 'em' → logprob: -5.699149131774902
    7. 'tem' → logprob: -5.949149131774902
    8. '\' → logprob: -5.949149131774902
    9. 'è' → logprob: -6.074149131774902
    10. 'èm' → logprob: -6.074149131774902

Token 347: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.04649282619357109
    2. 'item' → logprob: -4.171493053436279
    3. '_item' → logprob: -4.171493053436279
    4. ' _' → logprob: -4.421493053436279
    5. '_' → logprob: -7.421493053436279
    6. ' ' → logprob: -7.796493053436279
    7. '_items' → logprob: -7.796493053436279
    8. '   ' → logprob: -8.296492576599121
    9. ' items' → logprob: -8.546492576599121
    10. ' #' → logprob: -8.921492576599121

Token 348: ' pour' (ID: 1930)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.308785319328308
    2. ' ==' → logprob: -1.433785319328308
    3. ' >' → logprob: -1.683785319328308
    4. ' <=' → logprob: -2.0587854385375977
    5. ' =' → logprob: -3.1837854385375977
    6. '   ' → logprob: -3.5587854385375977
    7. '>' → logprob: -4.183785438537598
    8. '>=' → logprob: -4.183785438537598
    9. '==' → logprob: -4.308785438537598
    10. '[i' → logprob: -4.808785438537598

Token 349: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3975892961025238
    2. 'i' → logprob: -2.0225892066955566
    3. ' l' → logprob: -2.2725892066955566
    4. ' i' → logprob: -2.3975892066955566
    5. 'le' → logprob: -7.647589206695557
    6. 'cet' → logprob: -8.397589683532715
    7. 'student' → logprob: -8.397589683532715
    8. 'ét' → logprob: -9.022589683532715
    9. ' ' → logprob: -9.522589683532715
    10. ' étudiant' → logprob: -9.647589683532715

Token 350: ''ét' (ID: 23771)
  Prédit: ''ét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ét' → logprob: -0.36119428277015686
    2. 'i' → logprob: -2.111194372177124
    3. ''' → logprob: -2.611194372177124
    4. ''i' → logprob: -3.611194372177124
    5. 'a' → logprob: -3.736194372177124
    6. ' étudiant' → logprob: -3.861194372177124
    7. ''utilisateur' → logprob: -5.111194133758545
    8. '’ét' → logprob: -5.111194133758545
    9. ' i' → logprob: -5.236194133758545
    10. 'e' → logprob: -5.361194133758545

Token 351: 'udiant' (ID: 101120)
  Prédit: 'udiant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udiant' → logprob: -0.001166056958027184
    2. 'ud' → logprob: -7.876165866851807
    3. 'udi' → logprob: -8.001166343688965
    4. 'u' → logprob: -8.501166343688965
    5. 'udiante' → logprob: -9.501166343688965
    6. 'udent' → logprob: -9.876166343688965
    7. 'i' → logprob: -10.251166343688965
    8. '   ' → logprob: -10.751166343688965
    9. 'udian' → logprob: -11.126166343688965
    10. '#' → logprob: -11.126166343688965

Token 352: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25345563888549805
    2. 'i' → logprob: -1.628455638885498
    3. '   ' → logprob: -3.628455638885498
    4. '_i' → logprob: -7.753455638885498
    5. '[i' → logprob: -7.878455638885498
    6. ' #' → logprob: -9.878456115722656
    7. '	i' → logprob: -10.128456115722656
    8. '    ' → logprob: -10.503456115722656
    9. '  ' → logprob: -10.503456115722656
    10. ' ' → logprob: -10.628456115722656

Token 353: ' >' (ID: 1424)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4292240142822266
    2. ' >' → logprob: -1.5542240142822266
    3. ' ==' → logprob: -2.4292240142822266
    4. '   ' → logprob: -2.4292240142822266
    5. ' >=' → logprob: -2.6792240142822266
    6. ' =' → logprob: -2.9292240142822266
    7. '#' → logprob: -2.9292240142822266
    8. ' +' → logprob: -2.9292240142822266
    9. '>' → logprob: -3.4292240142822266
    10. '=' → logprob: -3.6792240142822266

Token 354: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.014535190537571907
    2. 't' → logprob: -4.264535427093506
    3. '   ' → logprob: -8.264534950256348
    4. '    ' → logprob: -9.764534950256348
    5. '0' → logprob: -10.639534950256348
    6. ' ' → logprob: -11.139534950256348
    7. ' (' → logprob: -11.889534950256348
    8. '+' → logprob: -13.139534950256348
    9. '(t' → logprob: -13.514534950256348
    10. 'i' → logprob: -14.264534950256348

Token 355: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020436751656234264
    2. '
' → logprob: -7.627043724060059
    3. 'def' → logprob: -7.877043724060059
    4. '<|end|>' → logprob: -8.127043724060059
    5. '    
' → logprob: -8.127043724060059
    6. ',' → logprob: -9.502043724060059
    7. 'import' → logprob: -9.752043724060059
    8. '<|end|>' → logprob: -10.127043724060059
    9. '#' → logprob: -10.252043724060059
    10. ')' → logprob: -10.252043724060059

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028311500791460276
    2. '    
' → logprob: -6.252830982208252
    3. 'def' → logprob: -8.75283145904541
    4. ',' → logprob: -9.25283145904541
    5. '
' → logprob: -9.25283145904541
    6. ')' → logprob: -9.50283145904541
    7. '    ' → logprob: -9.62783145904541
    8. 'for' → logprob: -9.75283145904541
    9. ' for' → logprob: -9.87783145904541
    10. '```' → logprob: -10.00283145904541

Token 357: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002591946395114064
    2. '    ' → logprob: -7.877592086791992
    3. ',' → logprob: -8.127592086791992
    4. '       ' → logprob: -8.252592086791992
    5. ' =' → logprob: -8.377592086791992
    6. '<|end|>' → logprob: -8.502592086791992
    7. 'def' → logprob: -8.627592086791992
    8. '  ' → logprob: -9.377592086791992
    9. ' +' → logprob: -9.502592086791992
    10. '+' → logprob: -9.502592086791992

Token 358: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017697816947475076
    2. ' for' → logprob: -8.25177001953125
    3. 'for' → logprob: -8.37677001953125
    4. '    ' → logprob: -8.50177001953125
    5. '    
' → logprob: -8.75177001953125
    6. 'def' → logprob: -9.12677001953125
    7. 'k' → logprob: -9.12677001953125
    8. ' =' → logprob: -9.25177001953125
    9. '#' → logprob: -9.75177001953125
    10. ' (' → logprob: -10.00177001953125

Token 359: ' pour' (ID: 1930)
  Prédit: ' temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.35010242462158203
    2. 'temps' → logprob: -1.475102424621582
    3. ' k' → logprob: -3.225102424621582
    4. 'k' → logprob: -4.225102424621582
    5. ' le' → logprob: -5.850102424621582
    6. 'le' → logprob: -6.725102424621582
    7. ' pas' → logprob: -6.975102424621582
    8. ' ' → logprob: -7.225102424621582
    9. ' pour' → logprob: -7.350102424621582
    10. '#' → logprob: -7.350102424621582

Token 360: ' (' (ID: 350)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2789119482040405
    2. 'k' → logprob: -1.6539119482040405
    3. ' le' → logprob: -1.9039119482040405
    4. 'l' → logprob: -2.40391206741333
    5. ' l' → logprob: -2.65391206741333
    6. 'temps' → logprob: -2.77891206741333
    7. ' k' → logprob: -2.90391206741333
    8. 'tout' → logprob: -3.40391206741333
    9. 't' → logprob: -3.77891206741333
    10. ' chaque' → logprob: -4.77891206741333

Token 361: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08934203535318375
    2. ' k' → logprob: -2.5893421173095703
    3. 'i' → logprob: -5.58934211730957
    4. ')' → logprob: -6.33934211730957
    5. 't' → logprob: -6.33934211730957
    6. '   ' → logprob: -7.08934211730957
    7. ' i' → logprob: -7.71434211730957
    8. ' t' → logprob: -7.96434211730957
    9. ' ' → logprob: -8.08934211730957
    10. 'le' → logprob: -8.46434211730957

Token 362: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7618550658226013
    2. ' +' → logprob: -0.7618550658226013
    3. '-' → logprob: -3.511855125427246
    4. ' -' → logprob: -4.386855125427246
    5. '   ' → logprob: -5.011855125427246
    6. ')' → logprob: -5.511855125427246
    7. '[' → logprob: -5.761855125427246
    8. '_' → logprob: -6.261855125427246
    9. '=' → logprob: -6.511855125427246
    10. ')+' → logprob: -6.761855125427246

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14219659566879272
    2. ' ' → logprob: -2.5171966552734375
    3. '   ' → logprob: -3.5171966552734375
    4. ')' → logprob: -5.1421966552734375
    5. 'i' → logprob: -5.2671966552734375
    6. ' i' → logprob: -5.8921966552734375
    7. '  ' → logprob: -6.3921966552734375
    8. '=' → logprob: -6.8921966552734375
    9. '    ' → logprob: -6.8921966552734375
    10. '+' → logprob: -7.0171966552734375

Token 364: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008391166105866432
    2. '+' → logprob: -6.133391380310059
    3. ')*' → logprob: -6.258391380310059
    4. ' +' → logprob: -6.633391380310059
    5. '   ' → logprob: -7.133391380310059
    6. ' )' → logprob: -7.383391380310059
    7. ')+' → logprob: -7.508391380310059
    8. ')
' → logprob: -8.883391380310059
    9. ' *' → logprob: -9.133391380310059
    10. '),' → logprob: -9.508391380310059

Token 365: 'ème' (ID: 9767)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.47995811700820923
    2. ' items' → logprob: -1.9799580574035645
    3. ' *' → logprob: -2.4799580574035645
    4. '_items' → logprob: -3.3549580574035645
    5. 'i' → logprob: -3.7299580574035645
    6. 'item' → logprob: -4.1049580574035645
    7. '*' → logprob: -4.2299580574035645
    8. ')' → logprob: -4.6049580574035645
    9. '_item' → logprob: -4.7299580574035645
    10. ' <=' → logprob: -5.1049580574035645

Token 366: ' item' (ID: 2169)
  Prédit: '_item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_item' → logprob: -0.807062566280365
    2. ' _' → logprob: -1.8070626258850098
    3. ' item' → logprob: -1.8070626258850098
    4. '_' → logprob: -3.0570626258850098
    5. '_items' → logprob: -3.4320626258850098
    6. ')' → logprob: -3.5570626258850098
    7. '   ' → logprob: -4.05706262588501
    8. 'item' → logprob: -4.18206262588501
    9. ' >' → logprob: -4.43206262588501
    10. ' *' → logprob: -4.43206262588501

Token 367: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.0540562868118286
    2. '   ' → logprob: -1.9290562868118286
    3. ' +' → logprob: -2.304056167602539
    4. ' <' → logprob: -2.679056167602539
    5. ' <=' → logprob: -2.804056167602539
    6. ')' → logprob: -2.929056167602539
    7. '+' → logprob: -3.304056167602539
    8. ' ' → logprob: -3.554056167602539
    9. ' >' → logprob: -3.679056167602539
    10. ',' → logprob: -3.804056167602539

Token 368: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.19815008342266083
    2. ' ' → logprob: -2.573150157928467
    3. 't' → logprob: -2.823150157928467
    4. '    ' → logprob: -5.073150157928467
    5. 'n' → logprob: -5.198150157928467
    6. '1' → logprob: -5.448150157928467
    7. ' n' → logprob: -5.448150157928467
    8. '  ' → logprob: -5.448150157928467
    9. ' (' → logprob: -5.573150157928467
    10. ' h' → logprob: -6.073150157928467

Token 369: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019383925246074796
    2. '    
' → logprob: -6.751938343048096
    3. '
' → logprob: -8.251938819885254
    4. 'def' → logprob: -8.251938819885254
    5. 'n' → logprob: -9.876938819885254
    6. ',' → logprob: -10.876938819885254
    7. ')' → logprob: -10.876938819885254
    8. '  
' → logprob: -11.001938819885254
    9. '    ' → logprob: -11.251938819885254
    10. '\n' → logprob: -11.251938819885254

Token 370: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028122442308813334
    2. '    
' → logprob: -6.752812385559082
    3. '
' → logprob: -6.877812385559082
    4. 'def' → logprob: -8.502812385559082
    5. '```' → logprob: -8.877812385559082
    6. '  
' → logprob: -9.877812385559082
    7. 'for' → logprob: -10.127812385559082
    8. '    ' → logprob: -10.627812385559082
    9. '\n' → logprob: -10.752812385559082
    10. ' for' → logprob: -10.752812385559082

Token 371: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021497849375009537
    2. 'for' → logprob: -7.62714958190918
    3. 'results' → logprob: -7.62714958190918
    4. 'result' → logprob: -8.12714958190918
    5. ' for' → logprob: -8.12714958190918
    6. '
' → logprob: -8.37714958190918
    7. '    
' → logprob: -8.87714958190918
    8. 'def' → logprob: -9.00214958190918
    9. ' results' → logprob: -10.50214958190918
    10. 'res' → logprob: -11.12714958190918

Token 372: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17565952241420746
    2. '   ' → logprob: -3.300659418106079
    3. 'results' → logprob: -3.300659418106079
    4. 'res' → logprob: -3.425659418106079
    5. 'result' → logprob: -3.675659418106079
    6. ' for' → logprob: -3.925659418106079
    7. 'def' → logprob: -5.425659656524658
    8. ' results' → logprob: -6.675659656524658
    9. ' res' → logprob: -7.050659656524658
    10. 'answers' → logprob: -7.675659656524658

Token 373: ' fin' (ID: 2131)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.292517900466919
    2. 'for' → logprob: -2.042517900466919
    3. ' for' → logprob: -2.667517900466919
    4. '#' → logprob: -2.792517900466919
    5. ' cum' → logprob: -2.792517900466919
    6. ' #' → logprob: -2.917517900466919
    7. 'def' → logprob: -3.042517900466919
    8. ' cumulative' → logprob: -3.417517900466919
    9. 'temps' → logprob: -3.917517900466919
    10. 'cum' → logprob: -3.917517900466919

Token 374: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.423628568649292
    2. '   ' → logprob: -1.673628568649292
    3. '_' → logprob: -1.923628568649292
    4. ' =' → logprob: -1.923628568649292
    5. ' des' → logprob: -2.673628568649292
    6. ' du' → logprob: -2.798628568649292
    7. ' #' → logprob: -2.923628568649292
    8. '    ' → logprob: -4.048628807067871
    9. '  ' → logprob: -4.048628807067871
    10. '#' → logprob: -4.923628807067871

Token 375: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.40373075008392334
    2. ' k' → logprob: -1.1537307500839233
    3. ' check' → logprob: -5.403730869293213
    4. 'check' → logprob: -5.528730869293213
    5. 'i' → logprob: -5.903730869293213
    6. ' i' → logprob: -6.153730869293213
    7. ' (' → logprob: -6.903730869293213
    8. '(k' → logprob: -7.903730869293213
    9. ' #' → logprob: -8.153730392456055
    10. 'item' → logprob: -8.278730392456055

Token 376: '-i' (ID: 18499)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49005118012428284
    2. '-' → logprob: -1.7400511503219604
    3. ' _' → logprob: -2.11505126953125
    4. '_i' → logprob: -2.86505126953125
    5. ' -' → logprob: -4.86505126953125
    6. ' #' → logprob: -4.86505126953125
    7. '_-' → logprob: -5.74005126953125
    8. '-_' → logprob: -5.86505126953125
    9. '   ' → logprob: -6.49005126953125
    10. '_k' → logprob: -6.49005126953125

Token 377: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.3243815302848816
    2. '-' → logprob: -1.8243815898895264
    3. '-eme' → logprob: -3.3243815898895264
    4. '#' → logprob: -4.574381351470947
    5. 'ère' → logprob: -5.074381351470947
    6. 'è' → logprob: -5.074381351470947
    7. ' -' → logprob: -5.199381351470947
    8. '`' → logprob: -5.324381351470947
    9. '-i' → logprob: -5.324381351470947
    10. 'ième' → logprob: -5.449381351470947

Token 378: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.10911686718463898
    2. 'item' → logprob: -2.984116792678833
    3. '_' → logprob: -3.859116792678833
    4. ' _' → logprob: -4.109117031097412
    5. '_item' → logprob: -4.234117031097412
    6. ' ' → logprob: -7.984117031097412
    7. ' k' → logprob: -9.609116554260254
    8. '_items' → logprob: -10.359116554260254
    9. '   ' → logprob: -10.484116554260254
    10. ' #' → logprob: -10.484116554260254

Token 379: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.550605297088623
    2. ' for' → logprob: -1.800605297088623
    3. 'pour' → logprob: -2.300605297088623
    4. 'for' → logprob: -2.550605297088623
    5. ' de' → logprob: -3.675605297088623
    6. ' est' → logprob: -3.925605297088623
    7. ' du' → logprob: -5.050605297088623
    8. ' =' → logprob: -5.550605297088623
    9. '=' → logprob: -5.675605297088623
    10. '_' → logprob: -5.675605297088623

Token 380: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2043706774711609
    2. ' l' → logprob: -1.7043707370758057
    3. 'i' → logprob: -6.579370498657227
    4. ' i' → logprob: -7.079370498657227
    5. '#' → logprob: -8.704370498657227
    6. ' étudiant' → logprob: -9.329370498657227
    7. 'ét' → logprob: -9.954370498657227
    8. 'student' → logprob: -9.954370498657227
    9. ' ' → logprob: -10.079370498657227
    10. 'un' → logprob: -10.141870498657227

Token 381: ''ét' (ID: 23771)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07136478275060654
    2. ' i' → logprob: -3.4463648796081543
    3. ''' → logprob: -5.071364879608154
    4. ' étudiant' → logprob: -5.071364879608154
    5. '[i' → logprob: -5.571364879608154
    6. ''utilisateur' → logprob: -6.071364879608154
    7. '`' → logprob: -6.321364879608154
    8. '_' → logprob: -6.571364879608154
    9. ''i' → logprob: -6.571364879608154
    10. '#' → logprob: -6.696364879608154

Token 382: 'udiant' (ID: 101120)
  Prédit: 'udiant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'udiant' → logprob: -0.00023095356300473213
    2. 'ud' → logprob: -9.25023078918457
    3. 'udent' → logprob: -9.62523078918457
    4. 'u' → logprob: -11.00023078918457
    5. 'udiante' → logprob: -11.37523078918457
    6. 'udi' → logprob: -11.62523078918457
    7. 'i' → logprob: -12.12523078918457
    8. '#' → logprob: -12.12523078918457
    9. 'd' → logprob: -12.50023078918457
    10. ' étudiant' → logprob: -12.62523078918457

Token 383: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6564334630966187
    2. 'i' → logprob: -1.1564334630966187
    3. '[i' → logprob: -2.281433582305908
    4. '   ' → logprob: -3.156433582305908
    5. '_i' → logprob: -4.031433582305908
    6. ' _' → logprob: -6.656433582305908
    7. ',i' → logprob: -7.531433582305908
    8. ',' → logprob: -7.656433582305908
    9. '_' → logprob: -8.40643310546875
    10. '[' → logprob: -8.40643310546875

Token 384: ' arrive' (ID: 18338)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.03659188747406
    2. '   ' → logprob: -1.91159188747406
    3. ' =' → logprob: -2.6615920066833496
    4. 'for' → logprob: -2.6615920066833496
    5. ' for' → logprob: -2.7865920066833496
    6. '#' → logprob: -2.7865920066833496
    7. ' is' → logprob: -3.0365920066833496
    8. ' i' → logprob: -3.0365920066833496
    9. 'def' → logprob: -3.7865920066833496
    10. '=' → logprob: -4.03659200668335

Token 385: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3486684560775757
    2. ' à' → logprob: -2.2236685752868652
    3. '   ' → logprob: -2.7236685752868652
    4. '=' → logprob: -2.9736685752868652
    5. ':' → logprob: -3.4736685752868652
    6. 's' → logprob: -5.098668575286865
    7. ' au' → logprob: -5.348668575286865
    8. ' :' → logprob: -5.473668575286865
    9. ' est' → logprob: -6.098668575286865
    10. ' ==' → logprob: -6.098668575286865

Token 386: ' :
' (ID: 10039)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.39349108934402466
    2. 'k' → logprob: -1.6434910297393799
    3. 't' → logprob: -4.268491268157959
    4. ' t' → logprob: -4.268491268157959
    5. ' i' → logprob: -4.393491268157959
    6. 'i' → logprob: -4.393491268157959
    7. 'l' → logprob: -4.643491268157959
    8. ' l' → logprob: -4.643491268157959
    9. 'temps' → logprob: -4.893491268157959
    10. ' la' → logprob: -5.018491268157959

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03240007534623146
    2. '
' → logprob: -5.407400131225586
    3. '       ' → logprob: -5.407400131225586
    4. ' (' → logprob: -5.657400131225586
    5. '    ' → logprob: -6.032400131225586
    6. ' cum' → logprob: -6.157400131225586
    7. ' for' → logprob: -6.407400131225586
    8. ' sum' → logprob: -6.657400131225586
    9. 'cum' → logprob: -6.657400131225586
    10. 'c' → logprob: -6.907400131225586

Token 388: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3295140862464905
    2. ' k' → logprob: -2.4545140266418457
    3. 'k' → logprob: -2.8295140266418457
    4. ' (' → logprob: -2.9545140266418457
    5. 'cum' → logprob: -3.7045140266418457
    6. ' cum' → logprob: -3.8295140266418457
    7. 'c' → logprob: -5.204514026641846
    8. '       ' → logprob: -5.329514026641846
    9. ' t' → logprob: -5.579514026641846
    10. '(k' → logprob: -5.704514026641846

Token 389: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3386022448539734
    2. ' k' → logprob: -1.9636023044586182
    3. '(k' → logprob: -2.588602304458618
    4. ' (' → logprob: -3.213602304458618
    5. '   ' → logprob: -4.713602066040039
    6. 'cum' → logprob: -4.838602066040039
    7. 'import' → logprob: -5.588602066040039
    8. ' cum' → logprob: -6.588602066040039
    9. '((' → logprob: -6.588602066040039
    10. 'c' → logprob: -6.963602066040039

Token 390: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.002497417852282524
    2. '*' → logprob: -6.00249719619751
    3. '*(' → logprob: -11.502497673034668
    4. ' ' → logprob: -12.127497673034668
    5. ' ' → logprob: -13.752497673034668
    6. '#' → logprob: -13.877497673034668
    7. ')' → logprob: -14.502497673034668
    8. 'def' → logprob: -14.752497673034668
    9. '   ' → logprob: -15.002497673034668
    10. ' #' → logprob: -15.002497673034668

Token 391: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.268375039100647
    2. 'cum' → logprob: -2.2683749198913574
    3. '(sum' → logprob: -2.3933749198913574
    4. 'h' → logprob: -4.018374919891357
    5. 'c' → logprob: -4.268374919891357
    6. '(h' → logprob: -5.143374919891357
    7. '(c' → logprob: -7.518374919891357
    8. ' sum' → logprob: -7.518374919891357
    9. 'prefix' → logprob: -8.143375396728516
    10. ' cum' → logprob: -8.393375396728516

Token 392: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.10087849944829941
    2. 'cum' → logprob: -2.9758784770965576
    3. '(sum' → logprob: -4.100878715515137
    4. 'c' → logprob: -4.475878715515137
    5. 'h' → logprob: -4.850878715515137
    6. ' sum' → logprob: -5.100878715515137
    7. ' cum' → logprob: -6.350878715515137
    8. '[i' → logprob: -8.350878715515137
    9. '[h' → logprob: -8.725878715515137
    10. '(h' → logprob: -8.725878715515137

Token 393: '_{' (ID: 22305)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.037221759557724
    2. '_' → logprob: -3.537221670150757
    3. 'h' → logprob: -5.287221908569336
    4. '(h' → logprob: -7.162221908569336
    5. '_i' → logprob: -7.287221908569336
    6. '_c' → logprob: -8.162221908569336
    7. '_j' → logprob: -8.912221908569336
    8. 'cum' → logprob: -8.912221908569336
    9. '(_' → logprob: -9.162221908569336
    10. 's' → logprob: -9.912221908569336

Token 394: 'j' (ID: 73)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.020828325301408768
    2. 'j' → logprob: -4.0208282470703125
    3. '[j' → logprob: -6.7708282470703125
    4. 'i' → logprob: -8.020828247070312
    5. '_j' → logprob: -8.645828247070312
    6. 'range' → logprob: -8.770828247070312
    7. '[h' → logprob: -8.770828247070312
    8. '[i' → logprob: -8.895828247070312
    9. '(h' → logprob: -9.020828247070312
    10. ' h' → logprob: -9.020828247070312

Token 395: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04677031561732292
    2. 'h' → logprob: -4.171770095825195
    3. '[:' → logprob: -5.171770095825195
    4. '_=' → logprob: -5.171770095825195
    5. '_' → logprob: -5.421770095825195
    6. '[i' → logprob: -6.046770095825195
    7. '+=' → logprob: -6.171770095825195
    8. '[' → logprob: -6.796770095825195
    9. 'range' → logprob: -6.796770095825195
    10. '   ' → logprob: -7.046770095825195

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7239486575126648
    2. '=' → logprob: -0.9739486575126648
    3. 'i' → logprob: -2.0989487171173096
    4. 'h' → logprob: -5.4739484786987305
    5. '0' → logprob: -6.0989484786987305
    6. 'range' → logprob: -6.3489484786987305
    7. 'import' → logprob: -6.5989484786987305
    8. 'j' → logprob: -6.5989484786987305
    9. '[i' → logprob: -7.7239484786987305
    10. '(i' → logprob: -7.9739484786987305

Token 397: '}' (ID: 92)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0942365825176239
    2. '=i' → logprob: -2.7192366123199463
    3. '^' → logprob: -4.844236373901367
    4. '}' → logprob: -4.969236373901367
    5. 'i' → logprob: -5.719236373901367
    6. '}^{' → logprob: -6.469236373901367
    7. '[i' → logprob: -7.344236373901367
    8. '   ' → logprob: -7.594236373901367
    9. '_=' → logprob: -7.969236373901367
    10. 'h' → logprob: -7.969236373901367

Token 398: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.13912101089954376
    2. '[i' → logprob: -2.7641210556030273
    3. 'i' → logprob: -2.8891210556030273
    4. '=' → logprob: -5.639121055603027
    5. '=i' → logprob: -5.639121055603027
    6. '^{' → logprob: -7.139121055603027
    7. '   ' → logprob: -7.264121055603027
    8. '{i' → logprob: -7.639121055603027
    9. 'to' → logprob: -7.764121055603027
    10. '```' → logprob: -7.889121055603027

Token 399: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000373950315406546
    2. '(i' → logprob: -8.250373840332031
    3. ' i' → logprob: -9.875373840332031
    4. '{i' → logprob: -10.125373840332031
    5. ' (' → logprob: -12.250373840332031
    6. '   ' → logprob: -12.500373840332031
    7. 'j' → logprob: -12.625373840332031
    8. '(' → logprob: -13.000373840332031
    9. '[i' → logprob: -13.125373840332031
    10. 'import' → logprob: -13.875373840332031

Token 400: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10181210190057755
    2. ' h' → logprob: -2.3518121242523193
    3. '[h' → logprob: -7.35181188583374
    4. '(h' → logprob: -7.85181188583374
    5. '_h' → logprob: -8.726812362670898
    6. ')' → logprob: -9.351812362670898
    7. ' (' → logprob: -9.351812362670898
    8. '   ' → logprob: -9.601812362670898
    9. '[' → logprob: -10.601812362670898
    10. ' ' → logprob: -10.851812362670898

Token 401: '_j' (ID: 12021)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.6760957837104797
    2. '_j' → logprob: -1.301095724105835
    3. '_' → logprob: -1.676095724105835
    4. '[j' → logprob: -4.426095962524414
    5. 'j' → logprob: -5.176095962524414
    6. 's' → logprob: -5.301095962524414
    7. '_[' → logprob: -6.426095962524414
    8. '_i' → logprob: -6.426095962524414
    9. '[i' → logprob: -6.551095962524414
    10. '][:' → logprob: -6.801095962524414

Token 402: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006428890861570835
    2. ')+' → logprob: -6.0064287185668945
    3. ')
' → logprob: -6.7564287185668945
    4. '[i' → logprob: -6.8814287185668945
    5. '[:' → logprob: -7.7564287185668945
    6. '[j' → logprob: -7.8814287185668945
    7. ' )' → logprob: -7.8814287185668945
    8. '   ' → logprob: -9.756428718566895
    9. 'sum' → logprob: -9.756428718566895
    10. '_)' → logprob: -9.756428718566895

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028203589841723442
    2. '+' → logprob: -5.02820348739624
    3. 'def' → logprob: -5.52820348739624
    4. ' +' → logprob: -5.65320348739624
    5. '#' → logprob: -5.90320348739624
    6. ' =' → logprob: -6.02820348739624
    7. '
' → logprob: -6.52820348739624
    8. '```' → logprob: -6.77820348739624
    9. ')' → logprob: -6.90320348739624
    10. '[i' → logprob: -7.40320348739624

Token 404: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015898427227512002
    2. '
' → logprob: -7.376589775085449
    3. 'for' → logprob: -8.12658977508545
    4. 'k' → logprob: -8.62658977508545
    5. 'def' → logprob: -9.00158977508545
    6. '    
' → logprob: -9.25158977508545
    7. 'cum' → logprob: -9.37658977508545
    8. '#' (adapté à ' #') → logprob: -10.12658977508545
    9. 'prefix' → logprob: -10.87658977508545
    10. '```' → logprob: -11.12658977508545

Token 405: ' Nous' (ID: 20193)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.5417657494544983
    2. '   ' → logprob: -1.5417656898498535
    3. 'cum' → logprob: -2.2917656898498535
    4. 'for' → logprob: -2.6667656898498535
    5. 'c' → logprob: -3.7917656898498535
    6. 'pref' → logprob: -6.1667656898498535
    7. 'def' → logprob: -6.1667656898498535
    8. 'res' → logprob: -6.6667656898498535
    9. '#' → logprob: -7.1667656898498535
    10. 'result' → logprob: -7.2917656898498535

Token 406: ' cherch' (ID: 194183)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06911052763462067
    2. ' =' → logprob: -3.819110631942749
    3. 'import' → logprob: -4.69411039352417
    4. '#' → logprob: -4.69411039352417
    5. 'n' → logprob: -4.94411039352417
    6. '=' → logprob: -5.56911039352417
    7. 'def' → logprob: -5.69411039352417
    8. 'for' → logprob: -6.31911039352417
    9. 'continu' → logprob: -6.69411039352417
    10. '_' → logprob: -6.81911039352417

Token 407: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0024357126094400883
    2. '#' → logprob: -6.127435684204102
    3. 'on' → logprob: -9.127435684204102
    4. 'er' → logprob: -9.752435684204102
    5. '```' → logprob: -10.002435684204102
    6. '=' → logprob: -11.502435684204102
    7. '   ' → logprob: -11.877435684204102
    8. '##' → logprob: -12.127435684204102
    9. 'e' → logprob: -12.377435684204102
    10. '_' → logprob: -13.002435684204102

Token 408: ' donc' (ID: 14206)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.033936358988285065
    2. 'k' → logprob: -3.5339362621307373
    3. '   ' → logprob: -5.908936500549316
    4. ' le' → logprob: -6.783936500549316
    5. ' à' → logprob: -9.158936500549316
    6. ' la' → logprob: -10.283936500549316
    7. ' ' → logprob: -10.533936500549316
    8. ' for' → logprob: -10.533936500549316
    9. 'def' → logprob: -11.033936500549316
    10. 'le' → logprob: -11.033936500549316

Token 409: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.30691003799438477
    2. 'k' → logprob: -1.5569100379943848
    3. '   ' → logprob: -3.5569100379943848
    4. 'for' → logprob: -4.806910037994385
    5. ' for' → logprob: -4.931910037994385
    6. 'def' → logprob: -5.556910037994385
    7. ' le' → logprob: -6.056910037994385
    8. ' la' → logprob: -6.681910037994385
    9. ' à' → logprob: -7.306910037994385
    10. 'le' → logprob: -7.806910037994385

Token 410: ' tel' (ID: 10716)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030681774020195007
    2. '=' → logprob: -3.655681848526001
    3. '   ' → logprob: -5.530681610107422
    4. 'import' → logprob: -8.030681610107422
    5. ' =
' → logprob: -10.530681610107422
    6. '    ' → logprob: -11.030681610107422
    7. '=int' → logprob: -11.655681610107422
    8. '```' → logprob: -12.155681610107422
    9. 's' → logprob: -12.530681610107422
    10. 'def' → logprob: -12.655681610107422

Token 411: ' que' (ID: 661)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028717216104269028
    2. ' =' → logprob: -3.653717279434204
    3. '   ' → logprob: -6.903717041015625
    4. '=k' → logprob: -7.653717041015625
    5. '=(' → logprob: -8.528717041015625
    6. 'que' → logprob: -8.653717041015625
    7. '=int' → logprob: -9.028717041015625
    8. 'à' → logprob: -9.278717041015625
    9. '=lambda' → logprob: -9.653717041015625
    10. 'def' → logprob: -10.278717041015625

Token 412: ' :
' (ID: 10039)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.8619454503059387
    2. 'k' → logprob: -1.236945390701294
    3. '   ' → logprob: -1.611945390701294
    4. ' (' → logprob: -2.861945390701294
    5. '(k' → logprob: -3.611945390701294
    6. '
' → logprob: -6.611945629119873
    7. ' t' → logprob: -7.236945629119873
    8. 't' → logprob: -8.111945152282715
    9. '(t' → logprob: -8.736945152282715
    10. ' ' → logprob: -8.861945152282715

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03597307950258255
    2. 'k' → logprob: -3.660973072052002
    3. ' k' → logprob: -5.035973072052002
    4. 't' → logprob: -7.160973072052002
    5. '
' → logprob: -8.03597354888916
    6. '       ' → logprob: -8.03597354888916
    7. '    ' → logprob: -8.16097354888916
    8. ' t' → logprob: -8.28597354888916
    9. '(k' → logprob: -8.28597354888916
    10. ' (' → logprob: -8.53597354888916

Token 414: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2744768559932709
    2. '   ' → logprob: -2.0244767665863037
    3. ' k' → logprob: -2.2744767665863037
    4. '(k' → logprob: -6.149477005004883
    5. ' (' → logprob: -6.899477005004883
    6. 'import' → logprob: -7.274477005004883
    7. 't' → logprob: -7.524477005004883
    8. ' t' → logprob: -8.274477005004883
    9. 'from' → logprob: -8.899477005004883
    10. '    ' → logprob: -9.649477005004883

Token 415: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.033899370580911636
    2. '   ' → logprob: -3.7838993072509766
    3. ' k' → logprob: -4.658899307250977
    4. '(k' → logprob: -7.283899307250977
    5. 'import' → logprob: -8.783899307250977
    6. 't' → logprob: -8.783899307250977
    7. ' (' → logprob: -10.533899307250977
    8. 'from' → logprob: -10.658899307250977
    9. '```' → logprob: -10.783899307250977
    10. '(t' → logprob: -11.533899307250977

Token 416: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4727345407009125
    2. '*' → logprob: -1.7227345705032349
    3. ' =' → logprob: -1.9727345705032349
    4. '=' → logprob: -2.8477344512939453
    5. '>' → logprob: -7.597734451293945
    6. ' >' → logprob: -8.472734451293945
    7. '*(' → logprob: -9.097734451293945
    8. ' ' → logprob: -10.222734451293945
    9. '_' → logprob: -10.597734451293945
    10. '-' → logprob: -10.972734451293945

Token 417: ' prefix' (ID: 18633)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.1851014643907547
    2. 'sum' → logprob: -2.5601015090942383
    3. ' (' → logprob: -3.0601015090942383
    4. '(c' → logprob: -4.185101509094238
    5. 'cum' → logprob: -4.310101509094238
    6. 'c' → logprob: -4.685101509094238
    7. '(sys' → logprob: -6.060101509094238
    8. ' sum' → logprob: -7.185101509094238
    9. ' cum' → logprob: -7.310101509094238
    10. '(s' → logprob: -7.435101509094238

Token 418: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.9293773174285889
    2. '_s' → logprob: -1.5543773174285889
    3. '[i' → logprob: -1.6793773174285889
    4. 'sum' → logprob: -1.6793773174285889
    5. 's' → logprob: -4.804377555847168
    6. '_h' → logprob: -4.929377555847168
    7. 'h' → logprob: -5.679377555847168
    8. ' =' → logprob: -7.804377555847168
    9. '[-' → logprob: -8.679377555847168
    10. '[' → logprob: -8.679377555847168

Token 419: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04129023104906082
    2. '>' → logprob: -3.916290283203125
    3. 'h' → logprob: -5.041290283203125
    4. '<=' → logprob: -6.041290283203125
    5. '_i' → logprob: -6.166290283203125
    6. '[' → logprob: -6.291290283203125
    7. ' >' → logprob: -6.541290283203125
    8. ' <=' → logprob: -6.541290283203125
    9. 's' → logprob: -6.666290283203125
    10. 'sum' → logprob: -7.291290283203125

Token 420: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015107295475900173
    2. ']>=' → logprob: -4.640107154846191
    3. '-' → logprob: -5.765107154846191
    4. ']<=' → logprob: -7.015107154846191
    5. ']>' → logprob: -7.890107154846191
    6. '[i' → logprob: -8.140107154846191
    7. ' ]' → logprob: -8.890107154846191
    8. ']+' → logprob: -9.140107154846191
    9. '_]' → logprob: -10.015107154846191
    10. '[' → logprob: -10.140107154846191

Token 421: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2606848478317261
    2. '>' → logprob: -2.0106849670410156
    3. ' <=' → logprob: -2.5106849670410156
    4. '<=' → logprob: -4.260684967041016
    5. '=' → logprob: -9.635684967041016
    6. '[' → logprob: -9.760684967041016
    7. ' =' → logprob: -9.885684967041016
    8. '>=' → logprob: -11.385684967041016
    9. ' >=' → logprob: -11.385684967041016
    10. '<|end|>' → logprob: -11.760684967041016

Token 422: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.16022706031799316
    2. 't' → logprob: -1.9102270603179932
    3. ' ' → logprob: -13.535226821899414
    4. '   ' → logprob: -14.035226821899414
    5. ' ' → logprob: -14.785226821899414
    6. '`t' → logprob: -16.410226821899414
    7. '    ' → logprob: -16.660226821899414
    8. '	t' → logprob: -16.910226821899414
    9. '_t' → logprob: -17.035226821899414
    10. '(t' → logprob: -17.535226821899414

Token 423: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015936531126499176
    2. '
' → logprob: -4.515936374664307
    3. 'def' → logprob: -6.140936374664307
    4. 'import' → logprob: -6.890936374664307
    5. '    
' → logprob: -7.015936374664307
    6. '```' → logprob: -7.890936374664307
    7. 'for' → logprob: -9.765936851501465
    8. '#' → logprob: -10.390936851501465
    9. 'from' → logprob: -10.390936851501465
    10. '\' → logprob: -10.515936851501465

Token 424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018207771703600883
    2. '
' → logprob: -4.518207550048828
    3. '```' → logprob: -5.893207550048828
    4. '\n' → logprob: -6.143207550048828
    5. 'def' → logprob: -7.018207550048828
    6. ' =' → logprob: -8.018207550048828
    7. 'for' → logprob: -8.643207550048828
    8. '[i' → logprob: -8.893207550048828
    9. '    
' → logprob: -9.018207550048828
    10. '\' → logprob: -9.018207550048828

Token 425: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03415769711136818
    2. '
' → logprob: -3.5341577529907227
    3. 'def' → logprob: -6.034157752990723
    4. 'import' → logprob: -6.909157752990723
    5. '    
' → logprob: -8.784157752990723
    6. '```' → logprob: -8.784157752990723
    7. 'for' → logprob: -8.909157752990723
    8. 'n' → logprob: -9.409157752990723
    9. 'prefix' → logprob: -9.784157752990723
    10. 'k' → logprob: -9.784157752990723

Token 426: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01344255916774273
    2. 'prefix' → logprob: -5.013442516326904
    3. '```' → logprob: -5.763442516326904
    4. 'k' → logprob: -7.138442516326904
    5. 'for' → logprob: -7.388442516326904
    6. '
' → logprob: -7.513442516326904
    7. 'def' → logprob: -7.638442516326904
    8. ' prefix' → logprob: -8.263442993164062
    9. 'import' → logprob: -8.388442993164062
    10. 'from' → logprob: -8.513442993164062

Token 427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11662465333938599
    2. '=' → logprob: -2.241624593734741
    3. ' *' → logprob: -5.99162483215332
    4. ' >' → logprob: -7.49162483215332
    5. '*' → logprob: -7.99162483215332
    6. ' <=' → logprob: -8.36662483215332
    7. ' ' → logprob: -9.99162483215332
    8. '>' → logprob: -10.11662483215332
    9. ' >=' → logprob: -10.24162483215332
    10. '<=' → logprob: -11.24162483215332

Token 428: ' ceil' (ID: 35964)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.082912802696228
    2. '(t' → logprob: -1.207912802696228
    3. ' t' → logprob: -1.707912802696228
    4. ' (' → logprob: -1.707912802696228
    5. ' ' → logprob: -9.70791244506836
    6. '   ' → logprob: -11.58291244506836
    7. '(' → logprob: -12.20791244506836
    8. '((' → logprob: -13.20791244506836
    9. '1' → logprob: -13.45791244506836
    10. ' ' → logprob: -13.45791244506836

Token 429: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.818634569644928
    2. '((' → logprob: -0.818634569644928
    3. '(' → logprob: -2.318634510040283
    4. ' (' → logprob: -3.943634510040283
    5. ' ((' → logprob: -9.568634986877441
    6. '   ' → logprob: -10.693634986877441
    7. 'div' → logprob: -11.193634986877441
    8. '(
' → logprob: -11.693634986877441
    9. '(float' → logprob: -11.693634986877441
    10. ' ' → logprob: -12.068634986877441

Token 430: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5096971988677979
    2. '/' → logprob: -1.1346971988677979
    3. '   ' → logprob: -3.259697198867798
    4. '[i' → logprob: -4.009696960449219
    5. '/p' → logprob: -4.259696960449219
    6. 'prefix' → logprob: -6.009696960449219
    7. ' prefix' → logprob: -7.134696960449219
    8. '+' → logprob: -7.259696960449219
    9. 'import' → logprob: -7.384696960449219
    10. ' ' → logprob: -7.759696960449219

Token 431: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.1618015170097351
    2. ' prefix' → logprob: -1.9118015766143799
    3. '(prefix' → logprob: -6.786801338195801
    4. '   ' → logprob: -8.5368013381958
    5. ' (' → logprob: -9.1618013381958
    6. '_prefix' → logprob: -9.6618013381958
    7. ' prefixes' → logprob: -10.9118013381958
    8. '(' → logprob: -11.1618013381958
    9. 'pref' → logprob: -11.5368013381958
    10. ' ' → logprob: -11.9743013381958

Token 432: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -9.245724504580721e-05
    2. 'sum' → logprob: -9.375092506408691
    3. '[i' → logprob: -12.500092506408691
    4. '_s' → logprob: -12.625092506408691
    5. '\' → logprob: -16.000091552734375
    6. '   ' → logprob: -16.125091552734375
    7. 's' → logprob: -16.125091552734375
    8. ' _' → logprob: -17.250091552734375
    9. '[_' → logprob: -17.375091552734375
    10. '[' → logprob: -17.750091552734375

Token 433: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0066664693877100945
    2. '_sum' → logprob: -5.631666660308838
    3. 's' → logprob: -7.006666660308838
    4. '[' → logprob: -7.006666660308838
    5. 'sum' → logprob: -7.131666660308838
    6. ')[' → logprob: -8.13166618347168
    7. ')' → logprob: -10.13166618347168
    8. '_s' → logprob: -10.50666618347168
    9. '_[' → logprob: -10.75666618347168
    10. '\[' → logprob: -11.25666618347168

Token 434: '])

' (ID: 21045)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09461340308189392
    2. ')' → logprob: -2.5946133136749268
    3. ']' → logprob: -4.594613552093506
    4. '])' → logprob: -5.344613552093506
    5. ')+' → logprob: -7.969613552093506
    6. ']+' → logprob: -8.594613075256348
    7. '   ' → logprob: -9.844613075256348
    8. ')]' → logprob: -9.969613075256348
    9. '[' → logprob: -10.219613075256348
    10. 'i' → logprob: -11.844613075256348

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01663833111524582
    2. '
' → logprob: -4.766638278961182
    3. 'import' → logprob: -5.641638278961182
    4. 'def' → logprob: -5.766638278961182
    5. '    
' → logprob: -7.391638278961182
    6. 'from' → logprob: -8.39163875579834
    7. ':' → logprob: -9.76663875579834
    8. ')' → logprob: -10.14163875579834
    9. '```' → logprob: -10.26663875579834
    10. 'for' → logprob: -10.51663875579834

Token 436: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01036907359957695
    2. 'prefix' → logprob: -5.135369300842285
    3. 'import' → logprob: -6.260369300842285
    4. '
' → logprob: -6.260369300842285
    5. 'from' → logprob: -7.885369300842285
    6. ' prefix' → logprob: -9.260369300842285
    7. '    
' → logprob: -9.885369300842285
    8. 'def' → logprob: -10.010369300842285
    9. '```' → logprob: -11.760369300842285
    10. 'for' → logprob: -12.135369300842285

Token 437: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5634867548942566
    2. 'prefix' → logprob: -0.9384867548942566
    3. 'import' → logprob: -3.9384868144989014
    4. ' prefix' → logprob: -4.688486576080322
    5. 'from' → logprob: -4.938486576080322
    6. 'def' → logprob: -5.813486576080322
    7. ' from' → logprob: -8.56348705291748
    8. '#' → logprob: -8.68848705291748
    9. ' import' → logprob: -9.31348705291748
    10. '```' → logprob: -9.68848705291748

Token 438: ''' (ID: 6)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0658257007598877
    2. 'eft' → logprob: -1.0658257007598877
    3. 'ine' → logprob: -2.3158257007598877
    4. 'from' → logprob: -2.3158257007598877
    5. 'prefix' → logprob: -3.4408257007598877
    6. 'ast' → logprob: -3.6908257007598877
    7. 'for' → logprob: -4.190825462341309
    8. '   ' → logprob: -4.940825462341309
    9. '#' → logprob: -5.190825462341309
    10. 'e' → logprob: -5.565825462341309

Token 439: 'item' (ID: 2057)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9427915811538696
    2. 'from' → logprob: -1.0677915811538696
    3. 'for' → logprob: -2.44279146194458
    4. ' for' → logprob: -2.94279146194458
    5. '   ' → logprob: -3.06779146194458
    6. ' from' → logprob: -3.06779146194458
    7. 'n' → logprob: -4.94279146194458
    8. ' import' → logprob: -5.06779146194458
    9. 'prefix' → logprob: -5.06779146194458
    10. ' n' → logprob: -5.31779146194458

Token 440: ' que' (ID: 661)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.6068443655967712
    2. ' =' → logprob: -1.481844425201416
    3. '_number' → logprob: -2.731844425201416
    4. '_num' → logprob: -2.856844425201416
    5. '_' → logprob: -3.606844425201416
    6. '=' → logprob: -3.856844425201416
    7. '_idx' → logprob: -4.231844425201416
    8. '_act' → logprob: -4.231844425201416
    9. '_id' → logprob: -4.481844425201416
    10. '_i' → logprob: -5.606844425201416

Token 441: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.41422802209854126
    2. 'l' → logprob: -2.1642279624938965
    3. ' i' → logprob: -2.2892279624938965
    4. 'i' → logprob: -2.9142279624938965
    5. 's' → logprob: -3.9142279624938965
    6. 'il' → logprob: -4.5392279624938965
    7. 'su' → logprob: -4.9142279624938965
    8. ' s' → logprob: -5.6642279624938965
    9. ' il' → logprob: -5.9142279624938965
    10. ' the' → logprob: -6.0392279624938965

Token 442: ''ét' (ID: 23771)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45307350158691406
    2. ''i' → logprob: -1.703073501586914
    3. ' étudiant' → logprob: -2.828073501586914
    4. ''' → logprob: -3.328073501586914
    5. '[i' → logprob: -3.453073501586914
    6. ''utilisateur' → logprob: -4.328073501586914
    7. ''ét' → logprob: -5.078073501586914
    8. ' i' → logprob: -5.078073501586914
    9. 'student' → logprob: -5.453073501586914
    10. '_i' → logprob: -5.453073501586914

Token 443: 'udiant' (ID: 101120)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.427088975906372
    2. 'em' → logprob: -2.052088975906372
    3. 'me' → logprob: -2.052088975906372
    4. 'i' → logprob: -2.302088975906372
    5. '[i' → logprob: -2.302088975906372
    6. 'm' → logprob: -2.927088975906372
    7. 'e' → logprob: -3.052088975906372
    8. 'u' → logprob: -3.302088975906372
    9. 'ier' → logprob: -3.677088975906372
    10. 'udiant' → logprob: -3.802088975906372

Token 444: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30643439292907715
    2. '[i' → logprob: -1.6814343929290771
    3. ' i' → logprob: -2.681434392929077
    4. '_i' → logprob: -4.931434631347656
    5. 's' → logprob: -7.431434631347656
    6. '_' → logprob: -8.056434631347656
    7. '   ' → logprob: -8.681434631347656
    8. ' n' → logprob: -8.931434631347656
    9. 'pass' → logprob: -9.431434631347656
    10. 'n' → logprob: -9.556434631347656

Token 445: ' fait' (ID: 7473)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1504429578781128
    2. ' est' → logprob: -1.5254429578781128
    3. '_' → logprob: -2.2754430770874023
    4. ' =' → logprob: -2.5254430770874023
    5. 'est' → logprob: -3.0254430770874023
    6. '[i' → logprob: -3.1504430770874023
    7. '_s' → logprob: -3.9004430770874023
    8. '=' → logprob: -4.025443077087402
    9. '_arr' → logprob: -4.150443077087402
    10. '_i' → logprob: -4.275443077087402

Token 446: ' ou' (ID: 2031)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1377549171447754
    2. ' à' → logprob: -2.5127549171447754
    3. '=' → logprob: -4.137754917144775
    4. 'à' → logprob: -4.637754917144775
    5. ' next' → logprob: -4.887754917144775
    6. 'next' → logprob: -5.512754917144775
    7. '_next' → logprob: -6.137754917144775
    8. '   ' → logprob: -6.887754917144775
    9. ' actuellement' → logprob: -6.887754917144775
    10. ' i' → logprob: -7.012754917144775

Token 447: ' attend' (ID: 13384)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.44513729214668274
    2. 'fait' → logprob: -2.1951372623443604
    3. '#' → logprob: -3.0701372623443604
    4. ' est' → logprob: -3.3201372623443604
    5. 'ait' → logprob: -3.3201372623443604
    6. 'item' → logprob: -3.9451372623443604
    7. 'a' → logprob: -4.1951375007629395
    8. 'vient' → logprob: -4.8201375007629395
    9. 'qu' → logprob: -5.1951375007629395
    10. ' l' → logprob: -5.4451375007629395

Token 448: ' au' (ID: 2791)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4566502869129181
    2. '=' → logprob: -1.4566502571105957
    3. ' à' → logprob: -3.4566502571105957
    4. 'ra' → logprob: -3.7066502571105957
    5. 'e' → logprob: -4.206650257110596
    6. ' ' → logprob: -4.331650257110596
    7. '_' → logprob: -4.831650257110596
    8. 's' → logprob: -5.206650257110596
    9. '   ' → logprob: -5.331650257110596
    10. 'ait' → logprob: -5.581650257110596

Token 449: ' temps' (ID: 11160)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.173805594444275
    2. ' moment' → logprob: -1.173805594444275
    3. 'i' → logprob: -2.7988057136535645
    4. '+' → logprob: -2.7988057136535645
    5. ' i' → logprob: -2.9238057136535645
    6. 't' → logprob: -3.1738057136535645
    7. 'instant' → logprob: -3.6738057136535645
    8. ' =' → logprob: -3.7988057136535645
    9. 'temps' → logprob: -3.7988057136535645
    10. ' instant' → logprob: -4.0488057136535645

Token 450: ' t' (ID: 260)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7817901968955994
    2. ' =' → logprob: -1.7817902565002441
    3. '   ' → logprob: -2.156790256500244
    4. '[i' → logprob: -2.281790256500244
    5. '=' → logprob: -2.906790256500244
    6. 't' → logprob: -3.281790256500244
    7. ' +' → logprob: -3.781790256500244
    8. '_' → logprob: -4.656790256500244
    9. 'i' → logprob: -4.656790256500244
    10. ' t' → logprob: -5.281790256500244

Token 451: '+' (ID: 10)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7087069749832153
    2. '   ' → logprob: -0.9587069749832153
    3. '=' → logprob: -2.708706855773926
    4. '[i' → logprob: -3.583706855773926
    5. 'import' → logprob: -5.458706855773926
    6. 's' → logprob: -5.583706855773926
    7. ',' → logprob: -5.833706855773926
    8. '+' → logprob: -5.833706855773926
    9. '_' → logprob: -6.333706855773926
    10. ']' → logprob: -6.458706855773926

Token 452: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00343055441044271
    2. ' ' → logprob: -6.003430366516113
    3. '1' → logprob: -7.128430366516113
    4. '.' → logprob: -9.003430366516113
    5. '+' → logprob: -11.003430366516113
    6. '   ' → logprob: -11.753430366516113
    7. ' +' → logprob: -14.378430366516113
    8. ',' → logprob: -14.628430366516113
    9. '  ' → logprob: -14.878430366516113
    10. '`' → logprob: -14.878430366516113

Token 453: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003431381192058325
    2. '   ' → logprob: -6.25343132019043
    3. '+' → logprob: -7.37843132019043
    4. ',' → logprob: -7.50343132019043
    5. ':' → logprob: -9.87843132019043
    6. '=' → logprob: -10.00343132019043
    7. ')' → logprob: -10.12843132019043
    8. ' +' → logprob: -10.25343132019043
    9. ' ' → logprob: -10.50343132019043
    10. ' =' → logprob: -10.62843132019043

Token 454: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.8074162653647363e-05
    2. '   ' → logprob: -11.750018119812012
    3. ' ' → logprob: -12.000018119812012
    4. '.' → logprob: -13.625018119812012
    5. '```' → logprob: -13.875018119812012
    6. ',' → logprob: -14.875018119812012
    7. '1' → logprob: -15.375018119812012
    8. '0' → logprob: -15.437518119812012
    9. '  ' → logprob: -15.500018119812012
    10. '`' → logprob: -15.687518119812012

Token 455: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07865610718727112
    2. '=' → logprob: -2.9536561965942383
    3. '   ' → logprob: -3.9536561965942383
    4. '[i' → logprob: -6.578656196594238
    5. ']' → logprob: -7.203656196594238
    6. ' =
' → logprob: -7.953656196594238
    7. ')' → logprob: -8.203656196594238
    8. ' ' → logprob: -8.203656196594238
    9. ',' → logprob: -8.578656196594238
    10. '  ' → logprob: -8.828656196594238

Token 456: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030420124530792236
    2. '   ' → logprob: -4.030420303344727
    3. '=' → logprob: -4.905420303344727
    4. 's' → logprob: -6.780420303344727
    5. ' est' → logprob: -7.155420303344727
    6. ' is' → logprob: -7.280420303344727
    7. ',' → logprob: -7.655420303344727
    8. 'import' → logprob: -8.030420303344727
    9. ' =
' → logprob: -8.405420303344727
    10. ' ' → logprob: -9.155420303344727

Token 457: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09709757566452026
    2. '=' → logprob: -2.472097635269165
    3. '   ' → logprob: -5.222097396850586
    4. 'import' → logprob: -6.597097396850586
    5. ' =
' → logprob: -7.847097396850586
    6. ' is' → logprob: -8.472097396850586
    7. 'def' → logprob: -8.722097396850586
    8. 's' → logprob: -9.347097396850586
    9. ',' → logprob: -9.472097396850586
    10. 'for' → logprob: -9.722097396850586

Token 458: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6333159804344177
    2. '=' → logprob: -0.7583159804344177
    3. 'import' → logprob: -8.508316040039062
    4. '   ' → logprob: -8.758316040039062
    5. '=item' → logprob: -10.133316040039062
    6. ' ' → logprob: -10.258316040039062
    7. 'for' → logprob: -10.383316040039062
    8. ' is' → logprob: -10.383316040039062
    9. '=
' → logprob: -10.758316040039062
    10. 'is' → logprob: -10.758316040039062

Token 459: ' donc' (ID: 14206)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8477216958999634
    2. ' k' → logprob: -0.9727216958999634
    3. ' int' → logprob: -2.347721576690674
    4. 'k' → logprob: -3.097721576690674
    5. '(k' → logprob: -3.972721576690674
    6. ' math' → logprob: -4.722721576690674
    7. '(int' → logprob: -4.847721576690674
    8. 'int' → logprob: -5.222721576690674
    9. '(' → logprob: -5.722721576690674
    10. ' ceil' → logprob: -5.847721576690674

Token 460: ' k' (ID: 372)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6216356754302979
    2. '(t' → logprob: -1.2466356754302979
    3. 'k' → logprob: -2.371635675430298
    4. '(k' → logprob: -2.996635675430298
    5. ' k' → logprob: -4.496635437011719
    6. '(int' → logprob: -5.121635437011719
    7. 'int' → logprob: -5.371635437011719
    8. '((' → logprob: -6.121635437011719
    9. ' t' → logprob: -6.371635437011719
    10. 't' → logprob: -6.496635437011719

Token 461: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6110448837280273
    2. 'def' → logprob: -0.9860448837280273
    3. ':' → logprob: -2.9860448837280273
    4. '
' → logprob: -3.8610448837280273
    5. 'for' → logprob: -5.111044883728027
    6. '():' → logprob: -6.486044883728027
    7. ':
' → logprob: -6.736044883728027
    8. 'import' → logprob: -7.236044883728027
    9. ' for' → logprob: -7.361044883728027
    10. '\n' → logprob: -8.111044883728027

Token 462: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.39078962802886963
    2. ' (' → logprob: -1.1407896280288696
    3. 't' → logprob: -5.89078950881958
    4. ' t' → logprob: -7.51578950881958
    5. '(int' → logprob: -8.015789985656738
    6. ' ' → logprob: -9.140789985656738
    7. 'int' → logprob: -9.640789985656738
    8. '(' → logprob: -10.140789985656738
    9. '((' → logprob: -10.140789985656738
    10. '   ' → logprob: -12.265789985656738

Token 463: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.3847557306289673
    2. 't' → logprob: -1.2597557306289673
    3. ' (' → logprob: -3.3847556114196777
    4. ' t' → logprob: -6.509755611419678
    5. '   ' → logprob: -9.259756088256836
    6. ' ' → logprob: -9.509756088256836
    7. 'int' → logprob: -10.384756088256836
    8. '-' → logprob: -10.884756088256836
    9. '((' → logprob: -11.134756088256836
    10. '(int' → logprob: -11.259756088256836

Token 464: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2956804037094116
    2. '//' → logprob: -1.6706804037094116
    3. '+' → logprob: -2.920680522918701
    4. ' +' → logprob: -4.670680522918701
    5. '   ' → logprob: -5.920680522918701
    6. ' ' → logprob: -6.670680522918701
    7. 'div' → logprob: -8.170680046081543
    8. ')' → logprob: -9.170680046081543
    9. 'import' → logprob: -9.420680046081543
    10. '  ' → logprob: -9.670680046081543

Token 465: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.2843649685382843
    2. ' prefix' → logprob: -1.409364938735962
    3. '(prefix' → logprob: -5.784365177154541
    4. ' (' → logprob: -9.159364700317383
    5. '   ' → logprob: -11.409364700317383
    6. '(' → logprob: -12.284364700317383
    7. ' +' → logprob: -13.159364700317383
    8. '+' → logprob: -13.534364700317383
    9. '_prefix' → logprob: -13.534364700317383
    10. ' prefixes' → logprob: -13.784364700317383

Token 466: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00039135036058723927
    2. '_' → logprob: -8.375391006469727
    3. '_s' → logprob: -9.625391006469727
    4. '+' → logprob: -11.125391006469727
    5. ')_' → logprob: -11.125391006469727
    6. '   ' → logprob: -11.250391006469727
    7. 'sum' → logprob: -11.375391006469727
    8. '[i' → logprob: -11.625391006469727
    9. ')' → logprob: -12.250391006469727
    10. '_count' → logprob: -12.375391006469727

Token 467: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009692259482108057
    2. ')' → logprob: -8.250968933105469
    3. 's' → logprob: -8.750968933105469
    4. '[' → logprob: -8.875968933105469
    5. '_sum' → logprob: -9.375968933105469
    6. 'sum' → logprob: -9.625968933105469
    7. '   ' → logprob: -9.875968933105469
    8. 'i' → logprob: -10.250968933105469
    9. '//' → logprob: -10.250968933105469
    10. 'import' → logprob: -10.500968933105469

Token 468: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05290894955396652
    2. '[i' → logprob: -3.1779088973999023
    3. '+' → logprob: -4.802908897399902
    4. ')+' → logprob: -7.052908897399902
    5. ' +' → logprob: -7.927908897399902
    6. ']' → logprob: -8.927908897399902
    7. 'i' → logprob: -9.302908897399902
    8. '   ' → logprob: -10.177908897399902
    9. '//' → logprob: -10.302908897399902
    10. '[' → logprob: -10.427908897399902

Token 469: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.336758553981781
    2. 'def' → logprob: -1.5867586135864258
    3. '
' → logprob: -3.211758613586426
    4. '+' → logprob: -4.586758613586426
    5. '_' → logprob: -4.711758613586426
    6. '_prefix' → logprob: -5.211758613586426
    7. 'import' → logprob: -6.086758613586426
    8. ':' → logprob: -6.336758613586426
    9. 's' → logprob: -6.461758613586426
    10. '[i' → logprob: -6.586758613586426

Token 470: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -19.12510871887207
    4. '(' → logprob: -20.12510871887207
    5. '+' → logprob: -21.00010871887207
    6. '```' → logprob: -21.00010871887207
    7. ' +' → logprob: -21.62510871887207
    8. ' ' → logprob: -21.75010871887207
    9. ' (' → logprob: -22.37510871887207
    10. '  ' → logprob: -22.50010871887207

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.375003814697266
    4. '(' → logprob: -18.875003814697266
    5. '```' → logprob: -19.500003814697266
    6. 'int' → logprob: -20.375003814697266
    7. '+' → logprob: -20.875003814697266
    8. '{' → logprob: -22.000003814697266
    9. ' (' → logprob: -22.125003814697266
    10. '`' → logprob: -22.125003814697266

Token 472: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11870085448026657
    2. 'prefix' → logprob: -2.3687007427215576
    3. '
' → logprob: -4.493700981140137
    4. 'def' → logprob: -5.243700981140137
    5. '    
' → logprob: -7.243700981140137
    6. ' prefix' → logprob: -7.368700981140137
    7. '#' → logprob: -8.743700981140137
    8. 'import' → logprob: -8.743700981140137
    9. '(prefix' → logprob: -9.868700981140137
    10. 'n' → logprob: -10.493700981140137

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03839511424303055
    2. 'def' → logprob: -3.4133951663970947
    3. '
' → logprob: -5.788394927978516
    4. 'prefix' → logprob: -7.413394927978516
    5. 'import' → logprob: -7.538394927978516
    6. '    
' → logprob: -7.788394927978516
    7. 'n' → logprob: -10.163394927978516
    8. 'from' → logprob: -10.913394927978516
    9. '```' → logprob: -10.913394927978516
    10. '#' → logprob: -11.913394927978516

Token 474: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39394187927246094
    2. 'prefix' → logprob: -1.143941879272461
    3. '
' → logprob: -5.143941879272461
    4. 'def' → logprob: -8.143941879272461
    5. '    
' → logprob: -8.143941879272461
    6. ' prefix' → logprob: -8.393941879272461
    7. '#' (adapté à ' #') → logprob: -8.768941879272461
    8. 'n' → logprob: -9.018941879272461
    9. 'import' → logprob: -9.643941879272461
    10. 'pref' → logprob: -11.018941879272461

Token 475: ' Calcul' (ID: 57243)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.006086038891226053
    2. '#' → logprob: -5.8810858726501465
    3. '   ' → logprob: -6.2560858726501465
    4. 'cum' → logprob: -7.5060858726501465
    5. ' prefix' → logprob: -8.131086349487305
    6. 'def' → logprob: -8.381086349487305
    7. 'import' → logprob: -9.256086349487305
    8. 'c' → logprob: -9.506086349487305
    9. 'pref' → logprob: -9.881086349487305
    10. 'from' → logprob: -10.381086349487305

Token 476: ' des' (ID: 731)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.2913857698440552
    2. '   ' → logprob: -1.5413857698440552
    3. ' prefix' → logprob: -3.2913856506347656
    4. '_prefix' → logprob: -7.291385650634766
    5. 's' → logprob: -8.541385650634766
    6. 'cum' → logprob: -8.541385650634766
    7. 'pref' → logprob: -9.666385650634766
    8. '(prefix' → logprob: -9.791385650634766
    9. '#' → logprob: -10.041385650634766
    10. 'def' → logprob: -10.166385650634766

Token 477: ' pré' (ID: 9424)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.0001923352392623201
    2. ' prefix' → logprob: -9.125192642211914
    3. 'pref' → logprob: -10.375192642211914
    4. 'import' → logprob: -10.875192642211914
    5. '#' → logprob: -11.625192642211914
    6. 'pré' → logprob: -11.625192642211914
    7. 'pre' → logprob: -12.000192642211914
    8. 'from' → logprob: -12.625192642211914
    9. '```' → logprob: -12.750192642211914
    10. 'c' → logprob: -14.250192642211914

Token 478: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -5.073596548754722e-05
    2. 'sum' → logprob: -10.62505054473877
    3. '_fix' → logprob: -11.12505054473877
    4. 'fixed' → logprob: -12.12505054473877
    5. 'f' → logprob: -12.75005054473877
    6. 'prefix' → logprob: -14.00005054473877
    7. '_sum' → logprob: -14.12505054473877
    8. '_' → logprob: -15.12505054473877
    9. '#' → logprob: -15.50005054473877
    10. 'FIX' → logprob: -15.62505054473877

Token 479: 'es' (ID: 268)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.09626761823892593
    2. 'sum' → logprob: -2.5962677001953125
    3. '_s' → logprob: -4.2212677001953125
    4. '   ' → logprob: -7.0962677001953125
    5. 'um' → logprob: -7.3462677001953125
    6. 'ums' → logprob: -8.221267700195312
    7. ' sums' → logprob: -8.471267700195312
    8. 's' → logprob: -8.721267700195312
    9. '_' → logprob: -9.096267700195312
    10. 'ix' → logprob: -9.346267700195312

Token 480: '
' (ID: 198)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.22913391888141632
    2. '   ' → logprob: -1.7291339635849
    3. ' prefix' → logprob: -3.6041338443756104
    4. '(prefix' → logprob: -9.729133605957031
    5. '
' → logprob: -10.854133605957031
    6. 'pref' → logprob: -11.229133605957031
    7. 'cum' → logprob: -11.229133605957031
    8. ' ' → logprob: -12.229133605957031
    9. '_prefix' → logprob: -12.479133605957031
    10. '  ' → logprob: -12.479133605957031

Token 481: '   ' (ID: 271)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.015411481261253357
    2. '   ' → logprob: -4.390411376953125
    3. ' prefix' → logprob: -5.890411376953125
    4. 'pref' → logprob: -9.640411376953125
    5. 'cum' → logprob: -9.890411376953125
    6. '
' → logprob: -12.390411376953125
    7. 'pre' → logprob: -12.765411376953125
    8. '(prefix' → logprob: -13.015411376953125
    9. '_prefix' → logprob: -13.140411376953125
    10. '    
' → logprob: -13.640411376953125

Token 482: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.0009001428843475878
    2. '   ' → logprob: -7.3759002685546875
    3. 'pref' → logprob: -8.500900268554688
    4. ' prefix' → logprob: -9.750900268554688
    5. 'cum' → logprob: -11.625900268554688
    6. 'pre' → logprob: -13.000900268554688
    7. '    
' → logprob: -14.875900268554688
    8. 'c' → logprob: -15.500900268554688
    9. '(prefix' → logprob: -16.125900268554688
    10. ' pref' → logprob: -17.750900268554688

Token 483: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.006673101335763931
    2. '_s' → logprob: -5.256673336029053
    3. '_' → logprob: -6.631673336029053
    4. 'sum' → logprob: -9.506672859191895
    5. 's' → logprob: -10.631672859191895
    6. ' =' → logprob: -12.006672859191895
    7. '_len' → logprob: -12.256672859191895
    8. '_h' → logprob: -12.256672859191895
    9. '=' → logprob: -13.256672859191895
    10. ' _' → logprob: -13.631672859191895

Token 484: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022655367851257
    2. ' =' → logprob: -1.910226583480835
    3. '=[' → logprob: -13.285226821899414
    4. '   ' → logprob: -15.660226821899414
    5. ' =[' → logprob: -15.785226821899414
    6. '=[]' → logprob: -15.910226821899414
    7. ' ' → logprob: -16.160226821899414
    8. 's' → logprob: -16.660226821899414
    9. '[' → logprob: -16.910226821899414
    10. '=[]
' → logprob: -17.535226821899414

Token 485: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002170839812606573
    2. '[h' → logprob: -6.752171039581299
    3. '[]
' → logprob: -7.002171039581299
    4. ' [' → logprob: -10.00217056274414
    5. '[]' → logprob: -10.37717056274414
    6. '0' → logprob: -12.00217056274414
    7. 'h' → logprob: -12.25217056274414
    8. '[n' → logprob: -13.12717056274414
    9. '[i' → logprob: -15.25217056274414
    10. '[int' → logprob: -15.87717056274414

Token 486: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003361774142831564
    2. 'h' → logprob: -8.000336647033691
    3. ']' → logprob: -15.000336647033691
    4. ' ' → logprob: -15.625336647033691
    5. ']
' → logprob: -16.875335693359375
    6. '   ' → logprob: -17.500335693359375
    7. ' h' → logprob: -17.625335693359375
    8. '۰' → logprob: -18.500335693359375
    9. '
' → logprob: -18.812835693359375
    10. '=' → logprob: -18.812835693359375

Token 487: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09223632514476776
    2. ']
' → logprob: -2.467236280441284
    3. ']+' → logprob: -6.342236518859863
    4. ']*(' → logprob: -7.342236518859863
    5. 'for' → logprob: -8.342236518859863
    6. ']*' → logprob: -8.467236518859863
    7. ',' → logprob: -8.717236518859863
    8. 'import' → logprob: -9.592236518859863
    9. ' for' → logprob: -9.842236518859863
    10. ']
' → logprob: -10.217236518859863

Token 488: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6179929375648499
    2. ']' → logprob: -1.742992877960205
    3. '
' → logprob: -2.117992877960205
    4. '   ' → logprob: -2.492992877960205
    5. '+' → logprob: -2.992992877960205
    6. 'import' → logprob: -4.492992877960205
    7. '[n' → logprob: -5.617992877960205
    8. ' for' → logprob: -5.742992877960205
    9. 'n' → logprob: -5.992992877960205
    10. ']+' → logprob: -6.117992877960205

Token 489: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.165027217415627e-05
    2. ' (' → logprob: -11.500021934509277
    3. '(len' → logprob: -11.750021934509277
    4. '   ' → logprob: -12.750021934509277
    5. 'n' → logprob: -14.625021934509277
    6. '(N' → logprob: -16.50002098083496
    7. '(' → logprob: -17.00002098083496
    8. '((' → logprob: -17.12502098083496
    9. '
' → logprob: -18.00002098083496
    10. '(num' → logprob: -18.50002098083496

Token 490: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40684446692466736
    2. '   ' → logprob: -1.6568444967269897
    3. 'for' → logprob: -2.6568443775177
    4. 'prefix' → logprob: -2.6568443775177
    5. ' for' → logprob: -6.406844615936279
    6. '    
' → logprob: -7.406844615936279
    7. 'cum' → logprob: -8.156844139099121
    8. '  
' → logprob: -9.031844139099121
    9. 'acc' → logprob: -9.531844139099121
    10. '(prefix' → logprob: -9.656844139099121

Token 491: '   ' (ID: 271)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.023038610816001892
    2. '   ' → logprob: -3.898038625717163
    3. ' prefix' → logprob: -6.398038387298584
    4. 'current' → logprob: -7.523038387298584
    5. 'h' → logprob: -9.648038864135742
    6. 'acc' → logprob: -9.773038864135742
    7. 'c' → logprob: -9.773038864135742
    8. 'sum' → logprob: -10.523038864135742
    9. 'cum' → logprob: -10.523038864135742
    10. 'total' → logprob: -11.148038864135742

Token 492: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.00505787180736661
    2. 'h' → logprob: -5.6300578117370605
    3. ' prefix' → logprob: -7.1300578117370605
    4. 'current' → logprob: -7.7550578117370605
    5. '   ' → logprob: -9.130058288574219
    6. 'acc' → logprob: -10.005058288574219
    7. 'c' → logprob: -10.505058288574219
    8. 'cur' → logprob: -11.880058288574219
    9. 's' → logprob: -12.005058288574219
    10. 'cum' → logprob: -12.005058288574219

Token 493: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0026887289714068174
    2. 'sum' → logprob: -6.002688884735107
    3. '_s' → logprob: -8.87768840789795
    4. '=' → logprob: -10.50268840789795
    5. 's' → logprob: -10.75268840789795
    6. ' =' → logprob: -11.25268840789795
    7. '   ' → logprob: -12.50268840789795
    8. '_' → logprob: -12.75268840789795
    9. '[' → logprob: -13.62768840789795
    10. '_len' → logprob: -14.62768840789795

Token 494: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.558399319241289e-05
    2. 'import' → logprob: -11.250025749206543
    3. '=' → logprob: -11.750025749206543
    4. ' =' → logprob: -14.125025749206543
    5. ' [' → logprob: -14.500025749206543
    6. 's' → logprob: -14.750025749206543
    7. '][' → logprob: -14.750025749206543
    8. '0' → logprob: -14.875025749206543
    9. '```' → logprob: -14.875025749206543
    10. ',' → logprob: -15.000025749206543

Token 495: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '=' → logprob: -19.625
    4. ']' → logprob: -19.75
    5. '۰' → logprob: -19.875
    6. '   ' → logprob: -20.25
    7. '00' → logprob: -20.375
    8. 'import' → logprob: -20.875
    9. ')' → logprob: -21.125
    10. '[' → logprob: -21.25

Token 496: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019771684892475605
    2. ']=' → logprob: -6.62697696685791
    3. '=' → logprob: -7.37697696685791
    4. ' =' → logprob: -10.62697696685791
    5. ' ]' → logprob: -13.87697696685791
    6. ')' → logprob: -15.62697696685791
    7. ']+=' → logprob: -16.376977920532227
    8. 'h' → logprob: -16.751977920532227
    9. 's' → logprob: -17.876977920532227
    10. '[' → logprob: -18.126977920532227

Token 497: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003503626212477684
    2. ' =' → logprob: -8.000349998474121
    3. '=h' → logprob: -11.125349998474121
    4. '=int' → logprob: -17.250350952148438
    5. '=s' → logprob: -17.500350952148438
    6. 'h' → logprob: -17.625350952148438
    7. '=

' → logprob: -18.500350952148438
    8. '=sys' → logprob: -19.250350952148438
    9. '=
' → logprob: -19.500350952148438
    10. '=head' → logprob: -19.625350952148438

Token 498: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -5.512236498361744e-07
    2. ' h' → logprob: -14.500000953674316
    3. '	h' → logprob: -18.875
    4. '   ' → logprob: -19.0
    5. '[h' → logprob: -20.75
    6. '+h' → logprob: -21.25
    7. '"h' → logprob: -21.5
    8. '(h' → logprob: -22.0
    9. '*h' → logprob: -22.375
    10. '_h' → logprob: -22.5

Token 499: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '0' → logprob: -13.375001907348633
    3. ' [' → logprob: -16.875001907348633
    4. '[i' → logprob: -17.125001907348633
    5. '\[' → logprob: -18.000001907348633
    6. 's' → logprob: -18.875001907348633
    7. '1' → logprob: -19.250001907348633
    8. '```' → logprob: -19.375001907348633
    9. ' ' → logprob: -20.250001907348633
    10. '[
' → logprob: -20.375001907348633

Token 500: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -19.75
    4. '۰' → logprob: -20.0
    5. '00' → logprob: -21.125
    6. '[' → logprob: -21.75
    7. '０' → logprob: -21.75
    8. '000' → logprob: -22.125
    9. 'import' → logprob: -22.3125
    10. '٠' → logprob: -22.5

Token 501: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5761957168579102
    2. ']' → logprob: -0.8261957168579102
    3. '
' → logprob: -9.57619571685791
    4. ' ]' → logprob: -9.82619571685791
    5. ' ]
' → logprob: -9.95119571685791
    6. ']
' → logprob: -10.32619571685791
    7. ']

' → logprob: -10.57619571685791
    8. ']+' → logprob: -11.20119571685791
    9. ')' → logprob: -12.95119571685791
    10. '   ' → logprob: -13.20119571685791

Token 502: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0386296883225441
    2. ' for' → logprob: -3.2886297702789307
    3. '   ' → logprob: -7.788629531860352
    4. '
' → logprob: -8.788629531860352
    5. '	for' → logprob: -10.788629531860352
    6. ' 
' → logprob: -16.16362953186035
    7. '    
' → logprob: -16.16362953186035
    8. '```' → logprob: -16.28862953186035
    9. ' ' → logprob: -16.66362953186035
    10. '_for' → logprob: -17.53862953186035

Token 503: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011916367337107658
    2. ' for' → logprob: -5.011916160583496
    3. '   ' → logprob: -5.261916160583496
    4. '	for' → logprob: -13.261916160583496
    5. '
' → logprob: -15.386916160583496
    6. '```' → logprob: -16.761917114257812
    7. ' ' → logprob: -19.261917114257812
    8. '    
' → logprob: -19.511917114257812
    9. '       ' → logprob: -20.511917114257812
    10. '  ' → logprob: -21.136917114257812

Token 504: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38687145709991455
    2. ' i' → logprob: -1.1368714570999146
    3. '	i' → logprob: -15.511871337890625
    4. ' ' → logprob: -15.761871337890625
    5. '   ' → logprob: -16.886871337890625
    6. '_i' → logprob: -18.261871337890625
    7. ' ' → logprob: -19.761871337890625
    8. '1' → logprob: -19.886871337890625
    9. '  ' → logprob: -20.511871337890625
    10. 'I' → logprob: -20.761871337890625

Token 505: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02326434850692749
    2. 'in' → logprob: -3.7732644081115723
    3. '1' → logprob: -11.398263931274414
    4. ' ' → logprob: -12.898263931274414
    5. '   ' → logprob: -13.523263931274414
    6. 'import' → logprob: -13.648263931274414
    7. 'i' → logprob: -13.898263931274414
    8. '	in' → logprob: -14.273263931274414
    9. ' i' → logprob: -15.773263931274414
    10. 'range' → logprob: -16.023263931274414

Token 506: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029757438227534294
    2. ' range' → logprob: -3.529757499694824
    3. '1' → logprob: -12.779757499694824
    4. 'in' → logprob: -13.279757499694824
    5. ' ' → logprob: -13.654757499694824
    6. ' in' → logprob: -13.904757499694824
    7. '   ' → logprob: -15.154757499694824
    8. '(range' → logprob: -17.279756546020508
    9. '	range' → logprob: -18.529756546020508
    10. '  ' → logprob: -18.654756546020508

Token 507: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001170225441455841
    2. '1' → logprob: -6.7511701583862305
    3. ' (' → logprob: -17.751171112060547
    4. '   ' → logprob: -17.876171112060547
    5. '
' → logprob: -19.126171112060547
    6. ' ' → logprob: -19.126171112060547
    7. '(
' → logprob: -20.876171112060547
    8. ',' → logprob: -22.126171112060547
    9. '    ' → logprob: -22.376171112060547
    10. 'n' → logprob: -22.626171112060547

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '   ' → logprob: -21.0
    4. 'n' → logprob: -22.5
    5. '１' → logprob: -24.625
    6. '(' → logprob: -25.0
    7. '```' → logprob: -25.5
    8. '۱' → logprob: -25.75
    9. '	' → logprob: -26.0
    10. '
' → logprob: -26.0

Token 509: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009806475136429071
    2. ',n' → logprob: -7.000980854034424
    3. ' ,' → logprob: -9.625980377197266
    4. 'n' → logprob: -13.125980377197266
    5. '   ' → logprob: -13.875980377197266
    6. ',
' → logprob: -16.625980377197266
    7. ' n' → logprob: -17.000980377197266
    8. '(n' → logprob: -17.875980377197266
    9. '	n' → logprob: -18.250980377197266
    10. '<n' → logprob: -18.500980377197266

Token 510: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.700132997939363e-05
    2. ' n' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.375017166137695
    4. '	n' → logprob: -16.750017166137695
    5. ')n' → logprob: -21.000017166137695
    6. 'len' → logprob: -22.125017166137695
    7. '_n' → logprob: -22.625017166137695
    8. '    ' → logprob: -22.875017166137695
    9. ',n' → logprob: -23.875017166137695
    10. '```' → logprob: -24.250017166137695

Token 511: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07891743630170822
    2. '):' → logprob: -2.5789175033569336
    3. '):
' → logprob: -11.078917503356934
    4. '   ' → logprob: -11.703917503356934
    5. ' ):
' → logprob: -13.828917503356934
    6. ':' → logprob: -13.953917503356934
    7. ']:
' → logprob: -14.828917503356934
    8. ')' → logprob: -14.953917503356934
    9. ' ):' → logprob: -15.203917503356934
    10. ']:' → logprob: -15.328917503356934

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3933500051498413
    2. '   ' → logprob: -1.1433500051498413
    3. 'prefix' → logprob: -5.143350124359131
    4. ' prefix' → logprob: -7.393350124359131
    5. '(prefix' → logprob: -12.393349647521973
    6. '```' → logprob: -15.268349647521973
    7. '_prefix' → logprob: -16.26835060119629
    8. '   ' → logprob: -16.89335060119629
    9. '
' → logprob: -17.76835060119629
    10. '	   ' → logprob: -18.39335060119629

Token 513: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.0011986821191385388
    2. ' prefix' → logprob: -6.751198768615723
    3. '   ' → logprob: -10.751198768615723
    4. '       ' → logprob: -11.876198768615723
    5. '_prefix' → logprob: -17.126197814941406
    6. '(prefix' → logprob: -17.376197814941406
    7. '.prefix' → logprob: -18.501197814941406
    8. '
' → logprob: -19.376197814941406
    9. 'pref' → logprob: -20.751197814941406
    10. '-prefix' → logprob: -20.751197814941406

Token 514: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.7610454708337784e-05
    2. 'sum' → logprob: -10.500027656555176
    3. '[i' → logprob: -17.25002670288086
    4. '   ' → logprob: -18.12502670288086
    5. '_s' → logprob: -18.87502670288086
    6. 'Sum' → logprob: -18.87502670288086
    7. ' sum' → logprob: -19.00002670288086
    8. '	sum' → logprob: -19.25002670288086
    9. 's' → logprob: -19.37502670288086
    10. 'prefix' → logprob: -19.62502670288086

Token 515: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -13.625000953674316
    3. ' [' → logprob: -16.375001907348633
    4. '[I' → logprob: -17.250001907348633
    5. '\[' → logprob: -17.500001907348633
    6. '=' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.250001907348633
    8. 'i' → logprob: -19.500001907348633
    9. '```' → logprob: -20.125001907348633
    10. '=i' → logprob: -20.250001907348633

Token 516: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0802738870552275e-05
    2. ']=' → logprob: -11.50001049041748
    3. ' ]' → logprob: -15.00001049041748
    4. '=' → logprob: -15.25001049041748
    5. '   ' → logprob: -18.125011444091797
    6. ']+=' → logprob: -19.875011444091797
    7. ')' → logprob: -20.125011444091797
    8. ' =' → logprob: -20.125011444091797
    9. ']
' → logprob: -21.625011444091797
    10. '}' → logprob: -22.625011444091797

Token 517: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163863845169544
    2. ' =' → logprob: -4.264163970947266
    3. '+=' → logprob: -15.139163970947266
    4. ' +=' → logprob: -16.389163970947266
    5. '   ' → logprob: -18.389163970947266
    6. '=

' → logprob: -19.264163970947266
    7. '.=' → logprob: -19.389163970947266
    8. '＝' → logprob: -20.014163970947266
    9. '=
' → logprob: -20.514163970947266
    10. '=int' → logprob: -21.264163970947266

Token 518: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.01105265598744154
    2. ' prefix' → logprob: -4.51105260848999
    3. '   ' → logprob: -12.261053085327148
    4. '(prefix' → logprob: -16.63605308532715
    5. '_prefix' → logprob: -18.38605308532715
    6. '       ' → logprob: -18.51105308532715
    7. ' ' → logprob: -19.13605308532715
    8. '.prefix' → logprob: -20.01105308532715
    9. 'refix' → logprob: -20.13605308532715
    10. 'Prefix' → logprob: -20.13605308532715

Token 519: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.5491004129871726e-05
    2. 'sum' → logprob: -10.000045776367188
    3. 'prefix' → logprob: -17.625045776367188
    4. ' sum' → logprob: -17.750045776367188
    5. 'Sum' → logprob: -18.625045776367188
    6. '[i' → logprob: -19.125045776367188
    7. '+' → logprob: -19.250045776367188
    8. 's' → logprob: -19.375045776367188
    9. 'e' → logprob: -19.500045776367188
    10. '_s' → logprob: -19.750045776367188

Token 520: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.375
    3. '[I' → logprob: -19.125
    4. '   ' → logprob: -19.75
    5. '
' → logprob: -20.5
    6. '[' → logprob: -20.625
    7. '```' → logprob: -21.0
    8. '(i' → logprob: -21.0
    9. ' [' → logprob: -21.125
    10. '{i' → logprob: -21.375

Token 521: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.017357230186462402
    2. '[i' → logprob: -4.642357349395752
    3. 'i' → logprob: -4.892357349395752
    4. ' -' → logprob: -10.392356872558594
    5. ']' → logprob: -10.767356872558594
    6. '(i' → logprob: -11.767356872558594
    7. '-i' → logprob: -12.517356872558594
    8. 's' → logprob: -12.892356872558594
    9. '1' → logprob: -13.892356872558594
    10. '   ' → logprob: -14.892356872558594

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. 'i' → logprob: -14.500001907348633
    4. '   ' → logprob: -16.250001907348633
    5. ']' → logprob: -17.625001907348633
    6. '```' → logprob: -18.500001907348633
    7. '  ' → logprob: -19.625001907348633
    8. '
' → logprob: -21.375001907348633
    9. '    ' → logprob: -21.500001907348633
    10. '     ' → logprob: -21.500001907348633

Token 523: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007983243092894554
    2. '+' → logprob: -5.507983207702637
    3. ' +' → logprob: -6.132983207702637
    4. ']+' → logprob: -6.382983207702637
    5. ' ]' → logprob: -10.382983207702637
    6. ')' → logprob: -12.257983207702637
    7. '+]' → logprob: -14.007983207702637
    8. '   ' → logprob: -15.632983207702637
    9. ' ' → logprob: -16.382984161376953
    10. '}' → logprob: -16.632984161376953

Token 524: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023366019129753113
    2. ' +' → logprob: -3.7733659744262695
    3. '+h' → logprob: -9.02336597442627
    4. '+
' → logprob: -18.898366928100586
    5. '＋' → logprob: -18.898366928100586
    6. '+c' → logprob: -19.898366928100586
    7. ' plus' → logprob: -20.648366928100586
    8. ' ' → logprob: -21.023366928100586
    9. '+t' → logprob: -21.023366928100586
    10. '+k' → logprob: -21.148366928100586

Token 525: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0004306692280806601
    2. ' h' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.125431060791016
    4. '	h' → logprob: -19.125431060791016
    5. '  ' → logprob: -22.875431060791016
    6. '[h' → logprob: -23.000431060791016
    7. '       ' → logprob: -23.125431060791016
    8. ' ' → logprob: -23.375431060791016
    9. '<h' → logprob: -23.500431060791016
    10. '    ' → logprob: -23.500431060791016

Token 526: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -20.625
    3. ' [' → logprob: -21.5
    4. '[j' → logprob: -21.75
    5. '[
' → logprob: -22.125
    6. '   ' → logprob: -22.875
    7. '[I' → logprob: -23.125
    8. 'i' → logprob: -23.5
    9. '[h' → logprob: -24.125
    10. '```' → logprob: -24.875

Token 527: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012329687597230077
    2. '[i' → logprob: -6.751233100891113
    3. ' ]' → logprob: -10.751233100891113
    4. ')' → logprob: -10.876233100891113
    5. '])' → logprob: -11.001233100891113
    6. '   ' → logprob: -12.626233100891113
    7. '[' → logprob: -13.751233100891113
    8. '']' → logprob: -15.001233100891113
    9. ')]' → logprob: -15.001233100891113
    10. ']
' → logprob: -15.126233100891113

Token 528: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1265123337507248
    2. 'results' → logprob: -3.001512289047241
    3. 'for' → logprob: -3.126512289047241
    4. 'result' → logprob: -4.12651252746582
    5. 'items' → logprob: -6.25151252746582
    6. 'k' → logprob: -6.37651252746582
    7. '
' → logprob: -6.37651252746582
    8. 'answers' → logprob: -7.25151252746582
    9. '    
' → logprob: -7.50151252746582
    10. ' for' → logprob: -7.50151252746582

Token 529: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7811886668205261
    2. 'result' → logprob: -1.156188726425171
    3. 'results' → logprob: -1.906188726425171
    4. 'for' → logprob: -2.656188726425171
    5. 'res' → logprob: -5.406188488006592
    6. 'answers' → logprob: -6.531188488006592
    7. 'answer' → logprob: -6.781188488006592
    8. 'items' → logprob: -6.906188488006592
    9. 'ans' → logprob: -8.65618896484375
    10. 'k' → logprob: -9.03118896484375

Token 530: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.38484570384025574
    2. 'for' → logprob: -1.8848457336425781
    3. 'results' → logprob: -2.009845733642578
    4. 'res' → logprob: -3.759845733642578
    5. 'answer' → logprob: -5.759845733642578
    6. 'items' → logprob: -6.009845733642578
    7. 'answers' → logprob: -6.259845733642578
    8. '   ' → logprob: -6.759845733642578
    9. 'ans' → logprob: -6.884845733642578
    10. 'k' → logprob: -7.759845733642578

Token 531: ' des' (ID: 731)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7430344820022583
    2. '   ' → logprob: -0.9930344820022583
    3. 'results' → logprob: -2.4930343627929688
    4. 'res' → logprob: -3.2430343627929688
    5. 'answer' → logprob: -4.493034362792969
    6. 'ans' → logprob: -5.368034362792969
    7. 'for' → logprob: -5.493034362792969
    8. ' =' → logprob: -5.868034362792969
    9. '=' → logprob: -6.368034362792969
    10. 'answers' → logprob: -6.493034362792969

Token 532: ' items' (ID: 4732)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.5939062237739563
    2. 'result' → logprob: -1.5939061641693115
    3. 'items' → logprob: -1.7189061641693115
    4. 'res' → logprob: -3.5939061641693115
    5. 'for' → logprob: -4.218906402587891
    6. 'answers' → logprob: -4.218906402587891
    7. 'ans' → logprob: -5.843906402587891
    8. 'answer' → logprob: -6.218906402587891
    9. 'k' → logprob: -6.593906402587891
    10. 'positions' → logprob: -6.718906402587891

Token 533: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05990419536828995
    2. 'result' → logprob: -4.059904098510742
    3. 'for' → logprob: -4.184904098510742
    4. 'results' → logprob: -4.684904098510742
    5. 'items' → logprob: -5.309904098510742
    6. 'en' → logprob: -5.309904098510742
    7. ' =' → logprob: -5.684904098510742
    8. 'done' → logprob: -7.309904098510742
    9. 'answer' → logprob: -7.934904098510742
    10. '=' → logprob: -7.934904098510742

Token 534: ' cours' (ID: 10138)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.019541814923286438
    2. '[i' → logprob: -5.2695417404174805
    3. 'range' → logprob: -5.3945417404174805
    4. 'for' → logprob: -5.8945417404174805
    5. 'course' → logprob: -6.2695417404174805
    6. ' cours' → logprob: -6.8945417404174805
    7. '[' → logprob: -7.0195417404174805
    8. 'progress' → logprob: -7.5195417404174805
    9. 't' → logprob: -8.01954174041748
    10. 'att' → logprob: -8.14454174041748

Token 535: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033837456721812487
    2. 'for' → logprob: -6.253383636474609
    3. 'result' → logprob: -7.503383636474609
    4. 'results' → logprob: -7.628383636474609
    5. ' for' → logprob: -8.37838363647461
    6. 'items' → logprob: -9.25338363647461
    7. 'res' → logprob: -10.75338363647461
    8. ' results' → logprob: -10.87838363647461
    9. ' result' → logprob: -10.87838363647461
    10. 'ans' → logprob: -11.50338363647461

Token 536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28377383947372437
    2. 'for' → logprob: -2.408773899078369
    3. 'result' → logprob: -2.533773899078369
    4. 'items' → logprob: -2.783773899078369
    5. 'results' → logprob: -4.658773899078369
    6. 'res' → logprob: -5.658773899078369
    7. 'answer' → logprob: -6.533773899078369
    8. 'ans' → logprob: -7.408773899078369
    9. 'answers' → logprob: -8.033773422241211
    10. ' for' → logprob: -8.408773422241211

Token 537: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8856009840965271
    2. 'items' → logprob: -0.8856009840965271
    3. 'for' → logprob: -2.885601043701172
    4. 'res' → logprob: -3.010601043701172
    5. '   ' → logprob: -3.510601043701172
    6. 'results' → logprob: -3.760601043701172
    7. 'ans' → logprob: -5.260601043701172
    8. 'current' → logprob: -5.385601043701172
    9. 'answer' → logprob: -5.385601043701172
    10. ' items' → logprob: -7.260601043701172

Token 538: ' On' (ID: 2160)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.6476238369941711
    2. 'result' → logprob: -1.3976237773895264
    3. 'for' → logprob: -2.2726237773895264
    4. 'res' → logprob: -2.3976237773895264
    5. 'results' → logprob: -4.0226240158081055
    6. 'ans' → logprob: -4.7726240158081055
    7. 'answer' → logprob: -5.7726240158081055
    8. 'current' → logprob: -5.8976240158081055
    9. '   ' → logprob: -7.2726240158081055
    10. 'tasks' → logprob: -7.3976240158081055

Token 539: ' fait' (ID: 7473)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.8211778402328491
    2. 'for' → logprob: -1.0711778402328491
    3. '   ' → logprob: -2.8211779594421387
    4. 'result' → logprob: -3.3211779594421387
    5. 'results' → logprob: -3.5711779594421387
    6. ' for' → logprob: -3.6961779594421387
    7. ' =' → logprob: -4.071177959442139
    8. '=' → logprob: -4.071177959442139
    9. ' items' → logprob: -4.696177959442139
    10. 'temps' → logprob: -5.321177959442139

Token 540: ' un' (ID: 537)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.31968390941619873
    2. '   ' → logprob: -2.1946840286254883
    3. 'for' → logprob: -2.1946840286254883
    4. 'res' → logprob: -3.8196840286254883
    5. ' result' → logprob: -4.194684028625488
    6. ' for' → logprob: -5.319684028625488
    7. 'results' → logprob: -5.444684028625488
    8. 'items' → logprob: -6.194684028625488
    9. 'range' → logprob: -6.819684028625488
    10. ' res' → logprob: -7.319684028625488

Token 541: ' entier' (ID: 80473)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030065055936574936
    2. 'result' → logprob: -4.030065059661865
    3. 'items' → logprob: -5.280065059661865
    4. ' for' → logprob: -6.030065059661865
    5. 'results' → logprob: -6.030065059661865
    6. 'range' → logprob: -6.655065059661865
    7. 'print' → logprob: -8.905064582824707
    8. 'output' → logprob: -9.155064582824707
    9. 'res' → logprob: -9.280064582824707
    10. '   ' → logprob: -9.405064582824707

Token 542: ' div' (ID: 4223)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.1800897717475891
    2. ' division' → logprob: -1.9300897121429443
    3. 'div' → logprob: -4.055089950561523
    4. 't' → logprob: -6.555089950561523
    5. 'for' → logprob: -7.555089950561523
    6. '   ' → logprob: -9.555089950561523
    7. 's' → logprob: -10.180089950561523
    8. ' div' → logprob: -10.180089950561523
    9. 'part' → logprob: -10.430089950561523
    10. ' ' → logprob: -10.430089950561523

Token 543: 'isé' (ID: 30065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5807282328605652
    2. 'ision' → logprob: -0.8307282328605652
    3. 't' → logprob: -6.455728054046631
    4. '       ' → logprob: -6.830728054046631
    5. ' t' → logprob: -7.080728054046631
    6. ' ' → logprob: -7.830728054046631
    7. '  ' → logprob: -8.080728530883789
    8. 'isions' → logprob: -8.705728530883789
    9. 'iv' → logprob: -9.580728530883789
    10. '    ' → logprob: -9.580728530883789

Token 544: ' par' (ID: 686)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9666422009468079
    2. '   ' → logprob: -1.466642141342163
    3. ' t' → logprob: -2.341642141342163
    4. 'for' → logprob: -2.466642141342163
    5. 'ision' → logprob: -2.591642141342163
    6. ' by' → logprob: -3.216642141342163
    7. ' for' → logprob: -3.841642141342163
    8. ' (' → logprob: -4.091642379760742
    9. 'by' → logprob: -4.466642379760742
    10. '(t' → logprob: -4.591642379760742

Token 545: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.28361403942108154
    2. ' prefix' → logprob: -1.4086140394210815
    3. '(prefix' → logprob: -6.783614158630371
    4. 't' → logprob: -8.158614158630371
    5. ' t' → logprob: -8.158614158630371
    6. '   ' → logprob: -9.158614158630371
    7. '#' → logprob: -9.533614158630371
    8. '[' → logprob: -9.783614158630371
    9. '_prefix' → logprob: -9.783614158630371
    10. '
' → logprob: -10.033614158630371

Token 546: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.791440293658525e-05
    2. 'sum' → logprob: -10.125078201293945
    3. '_' → logprob: -10.875078201293945
    4. '   ' → logprob: -11.500078201293945
    5. '_s' → logprob: -12.625078201293945
    6. 't' → logprob: -13.875078201293945
    7. 'prefix' → logprob: -14.250078201293945
    8. ' _' → logprob: -14.250078201293945
    9. '[i' → logprob: -14.250078201293945
    10. '_prefix' → logprob: -14.875078201293945

Token 547: '[i' (ID: 1768)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7658993005752563
    2. 'for' → logprob: -0.8908993005752563
    3. ' =' → logprob: -3.015899181365967
    4. ' for' → logprob: -4.265899181365967
    5. '[i' → logprob: -4.265899181365967
    6. '_item' → logprob: -4.765899181365967
    7. '_items' → logprob: -4.890899181365967
    8. '_i' → logprob: -5.015899181365967
    9. 't' → logprob: -5.140899181365967
    10. '_t' → logprob: -5.640899181365967

Token 548: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.43307381868362427
    2. ']' → logprob: -1.4330737590789795
    3. ']
' → logprob: -3.0580737590789795
    4. ')' → logprob: -3.9330737590789795
    5. '])' → logprob: -4.058073997497559
    6. '],' → logprob: -5.183073997497559
    7. '])
' → logprob: -5.433073997497559
    8. '   ' → logprob: -5.683073997497559
    9. ')
' → logprob: -5.683073997497559
    10. 'i' → logprob: -5.933073997497559

Token 549: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.137843370437622
    2. 'items' → logprob: -1.637843370437622
    3. ' items' → logprob: -1.762843370437622
    4. ' for' → logprob: -2.637843370437622
    5. 'for' → logprob: -2.637843370437622
    6. 'k' → logprob: -3.012843370437622
    7. ' k' → logprob: -3.387843370437622
    8. 'result' → logprob: -3.887843370437622
    9. ' i' → logprob: -4.887843132019043
    10. 'results' → logprob: -4.887843132019043

Token 550: ' ajoute' (ID: 91611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004189994651824236
    2. ' for' → logprob: -5.754189968109131
    3. 't' → logprob: -8.504190444946289
    4. '   ' → logprob: -8.504190444946289
    5. 'continue' → logprob: -9.004190444946289
    6. '=' → logprob: -9.754190444946289
    7. ' continue' → logprob: -10.254190444946289
    8. 'print' → logprob: -10.504190444946289
    9. '#' → logprob: -10.504190444946289
    10. 'return' → logprob: -10.629190444946289

Token 551: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010906853713095188
    2. ' ' → logprob: -6.8760905265808105
    3. '   ' → logprob: -9.876091003417969
    4. '+' → logprob: -12.876091003417969
    5. ' +' → logprob: -13.501091003417969
    6. ' =' → logprob: -13.876091003417969
    7. '=' → logprob: -14.376091003417969
    8. '  ' → logprob: -15.251091003417969
    9. '    ' → logprob: -15.376091003417969
    10. '           ' → logprob: -16.00109100341797

Token 552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001847062085289508
    2. ' ' → logprob: -8.625185012817383
    3. '   ' → logprob: -12.750185012817383
    4. '+' → logprob: -13.875185012817383
    5. ' +' → logprob: -14.500185012817383
    6. '(' → logprob: -15.000185012817383
    7. ' (' → logprob: -15.875185012817383
    8. '    ' → logprob: -16.500185012817383
    9. '  ' → logprob: -17.000185012817383
    10. ' t' → logprob: -17.500185012817383

Token 553: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033221999183297157
    2. 'for' → logprob: -6.878322124481201
    3. 'result' → logprob: -7.003322124481201
    4. ' for' → logprob: -7.503322124481201
    5. 'results' → logprob: -8.00332260131836
    6. '
' → logprob: -8.12832260131836
    7. 'items' → logprob: -9.50332260131836
    8. ' result' → logprob: -10.75332260131836
    9. ' results' → logprob: -10.87832260131836
    10. 'res' → logprob: -11.12832260131836

Token 554: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.27636146545410156
    2. ' chaque' → logprob: -2.9013614654541016
    3. '(t' → logprob: -3.4013614654541016
    4. 'k' → logprob: -3.5263614654541016
    5. 'each' → logprob: -4.151361465454102
    6. ' t' → logprob: -4.401361465454102
    7. '[i' → logprob: -4.776361465454102
    8. '[' → logprob: -4.901361465454102
    9. 'result' → logprob: -4.901361465454102
    10. '[t' → logprob: -5.026361465454102

Token 555: ' division' (ID: 21629)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11573760211467743
    2. 'i' → logprob: -3.3657376766204834
    3. '[i' → logprob: -3.9907376766204834
    4. '#' → logprob: -4.365737438201904
    5. 't' → logprob: -4.365737438201904
    6. ' for' → logprob: -5.115737438201904
    7. 'result' → logprob: -5.365737438201904
    8. 'next' → logprob: -5.865737438201904
    9. '+' → logprob: -6.115737438201904
    10. '[' → logprob: -6.240737438201904

Token 556: ' entière' (ID: 61583)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017973626032471657
    2. '
' → logprob: -4.26797342300415
    3. 'for' → logprob: -7.01797342300415
    4. 'result' → logprob: -7.01797342300415
    5. 'results' → logprob: -7.26797342300415
    6. ' for' → logprob: -7.39297342300415
    7. '    
' → logprob: -8.017973899841309
    8. 'items' → logprob: -8.892973899841309
    9. ' results' → logprob: -9.892973899841309
    10. ' result' → logprob: -10.892973899841309

Token 557: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009612418711185455
    2. '
' → logprob: -5.009612560272217
    3. 'result' → logprob: -6.509612560272217
    4. 'for' → logprob: -8.009612083435059
    5. ' for' → logprob: -8.134612083435059
    6. 'results' → logprob: -8.134612083435059
    7. '    
' → logprob: -8.509612083435059
    8. ' result' → logprob: -9.759612083435059
    9. 'items' → logprob: -9.759612083435059
    10. ' results' → logprob: -10.384612083435059

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07119449228048325
    2. 'result' → logprob: -3.9461944103240967
    3. 'for' → logprob: -4.071194648742676
    4. 'items' → logprob: -4.321194648742676
    5. ' for' → logprob: -4.821194648742676
    6. 'results' → logprob: -5.196194648742676
    7. ' items' → logprob: -6.071194648742676
    8. ' result' → logprob: -6.821194648742676
    9. ' results' → logprob: -7.446194648742676
    10. '
' → logprob: -7.571194648742676

Token 559: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07527415454387665
    2. 'result' → logprob: -3.4502742290496826
    3. 'for' (adapté à ' for') → logprob: -4.7002739906311035
    4. ' for' → logprob: -4.7002739906311035
    5. 'results' → logprob: -4.8252739906311035
    6. ' result' → logprob: -4.9502739906311035
    7. 'items' → logprob: -5.7002739906311035
    8. ' results' → logprob: -6.2002739906311035
    9. ' items' → logprob: -6.3252739906311035
    10. 'res' → logprob: -9.200274467468262

Token 560: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3868919014930725
    2. ' i' → logprob: -1.1368918418884277
    3. 'range' → logprob: -11.511892318725586
    4. ' range' → logprob: -11.636892318725586
    5. '_i' → logprob: -14.511892318725586
    6. ' in' → logprob: -14.761892318725586
    7. '   ' → logprob: -14.886892318725586
    8. ' ' → logprob: -15.386892318725586
    9. '(i' → logprob: -15.511892318725586
    10. '	i' → logprob: -15.886892318725586

Token 561: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06205059215426445
    2. 'in' → logprob: -2.8120505809783936
    3. ',' → logprob: -10.062050819396973
    4. '   ' → logprob: -11.687050819396973
    5. ' ' → logprob: -11.812050819396973
    6. '	in' → logprob: -12.312050819396973
    7. 'n' → logprob: -12.937050819396973
    8. 'In' → logprob: -13.062050819396973
    9. 'import' → logprob: -13.437050819396973
    10. '(' → logprob: -13.437050819396973

Token 562: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975083328783512
    2. ' range' → logprob: -3.5297508239746094
    3. '(range' → logprob: -16.27975082397461
    4. '   ' → logprob: -16.40475082397461
    5. ' ' → logprob: -17.15475082397461
    6. 'n' → logprob: -17.77975082397461
    7. '	range' → logprob: -18.27975082397461
    8. '  ' → logprob: -18.77975082397461
    9. 'in' → logprob: -19.27975082397461
    10. ')' → logprob: -19.40475082397461

Token 563: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00018327576981391758
    2. '(' → logprob: -8.75018310546875
    3. 'n' → logprob: -10.62518310546875
    4. '(len' → logprob: -15.12518310546875
    5. ' (' → logprob: -16.50018310546875
    6. ',n' → logprob: -17.87518310546875
    7. '   ' → logprob: -18.00018310546875
    8. '(
' → logprob: -18.25018310546875
    9. '(i' → logprob: -19.25018310546875
    10. ')' → logprob: -19.25018310546875

Token 564: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12704433500766754
    2. '):
' → logprob: -2.127044439315796
    3. ':' → logprob: -10.127044677734375
    4. '):
' → logprob: -10.502044677734375
    5. ' ):' → logprob: -10.627044677734375
    6. '   ' → logprob: -11.502044677734375
    7. ')' → logprob: -12.252044677734375
    8. ']:' → logprob: -12.252044677734375
    9. ' ):
' → logprob: -13.752044677734375
    10. '}:' → logprob: -14.127044677734375

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003178273618686944
    2. ' print' → logprob: -9.000317573547363
    3. 'print' → logprob: -9.375317573547363
    4. ' k' → logprob: -10.250317573547363
    5. '   ' → logprob: -10.500317573547363
    6. ' item' → logprob: -11.250317573547363
    7. 'item' → logprob: -11.750317573547363
    8. 'result' → logprob: -12.125317573547363
    9. ' result' → logprob: -12.250317573547363
    10. ',' → logprob: -13.250317573547363

Token 566: ' item' (ID: 2169)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9863330721855164
    2. 'print' → logprob: -1.2363331317901611
    3. 'k' → logprob: -1.9863331317901611
    4. '       ' → logprob: -2.861333131790161
    5. ' print' → logprob: -2.861333131790161
    6. 'item' (adapté à ' item') → logprob: -2.861333131790161
    7. ' item' → logprob: -4.236332893371582
    8. '   ' → logprob: -4.361332893371582
    9. 'result' → logprob: -8.736332893371582
    10. 'current' → logprob: -8.861332893371582

Token 567: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0061650704592466354
    2. '=' → logprob: -5.256165027618408
    3. '_num' → logprob: -7.631165027618408
    4. '_number' → logprob: -9.131165504455566
    5. '_idx' → logprob: -9.256165504455566
    6. '_index' → logprob: -9.506165504455566
    7. '   ' → logprob: -10.006165504455566
    8. '_' → logprob: -10.131165504455566
    9. '_id' → logprob: -10.256165504455566
    10. '_count' → logprob: -11.256165504455566

Token 568: ' t' (ID: 260)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2018081694841385
    2. '(t' → logprob: -1.701808214187622
    3. 't' → logprob: -8.326807975769043
    4. ' t' → logprob: -8.951807975769043
    5. ' ' → logprob: -11.701807975769043
    6. '   ' → logprob: -11.826807975769043
    7. '(' → logprob: -11.826807975769043
    8. '  ' → logprob: -15.451807975769043
    9. '((' → logprob: -16.20180892944336
    10. '	t' → logprob: -16.70180892944336

Token 569: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.005969557911157608
    2. '//' → logprob: -5.130969524383545
    3. ' ' → logprob: -10.255970001220703
    4. '   ' → logprob: -12.880970001220703
    5. ' #' → logprob: -14.755970001220703
    6. '#' → logprob: -14.880970001220703
    7. '  ' → logprob: -14.880970001220703
    8. '//=' → logprob: -14.880970001220703
    9. ' //
' → logprob: -14.880970001220703
    10. '=' → logprob: -15.255970001220703

Token 570: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.011113251559436321
    2. ' prefix' → logprob: -4.511113166809082
    3. '(prefix' → logprob: -9.636113166809082
    4. '   ' → logprob: -16.5111141204834
    5. ' (' → logprob: -16.6361141204834
    6. '_prefix' → logprob: -18.1361141204834
    7. '(' → logprob: -18.7611141204834
    8. ' ' → logprob: -18.7611141204834
    9. 'refix' → logprob: -18.8861141204834
    10. '.prefix' → logprob: -19.7611141204834

Token 571: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.584861744660884e-05
    2. 'sum' → logprob: -10.000045776367188
    3. '[i' → logprob: -15.375045776367188
    4. ' sum' → logprob: -16.750045776367188
    5. 'prefix' → logprob: -17.125045776367188
    6. 's' → logprob: -17.750045776367188
    7. 'Sum' → logprob: -18.500045776367188
    8. 'i' → logprob: -18.625045776367188
    9. 'psum' → logprob: -18.750045776367188
    10. 'um' → logprob: -19.000045776367188

Token 572: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -15.875
    3. '[' → logprob: -16.0
    4. 'i' → logprob: -17.125
    5. '   ' → logprob: -17.875
    6. ' ' → logprob: -20.625
    7. '(i' → logprob: -20.625
    8. ' i' → logprob: -20.625
    9. '][' → logprob: -20.75
    10. '{i' → logprob: -21.125

Token 573: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008350382559001446
    2. ')' → logprob: -5.258350372314453
    3. ']+' → logprob: -5.883350372314453
    4. '+' → logprob: -8.383350372314453
    5. '[i' → logprob: -10.258350372314453
    6. ' +' → logprob: -10.258350372314453
    7. ')+' → logprob: -10.758350372314453
    8. '   ' → logprob: -13.258350372314453
    9. ' ]' → logprob: -13.258350372314453
    10. ' ' → logprob: -14.008350372314453

Token 574: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06272683292627335
    2. '+' → logprob: -2.8127267360687256
    3. '       ' → logprob: -7.187726974487305
    4. '+i' → logprob: -13.812726974487305
    5. '   ' → logprob: -14.062726974487305
    6. '        ' → logprob: -14.812726974487305
    7. ' ' → logprob: -15.062726974487305
    8. '           ' → logprob: -16.187726974487305
    9. '1' → logprob: -16.312726974487305
    10. '	' → logprob: -16.312726974487305

Token 575: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -19.875030517578125
    4. '```' → logprob: -22.750030517578125
    5. '  ' → logprob: -22.875030517578125
    6. ' ' → logprob: -23.875030517578125
    7. '+' → logprob: -24.125030517578125
    8. '１' → logprob: -24.250030517578125
    9. '
' → logprob: -24.625030517578125
    10. '(' → logprob: -24.875030517578125

Token 576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -20.125
    4. '```' → logprob: -20.5
    5. '  ' → logprob: -23.5
    6. '[' → logprob: -24.125
    7. '`' → logprob: -24.25
    8. '
' → logprob: -24.375
    9. '+' → logprob: -24.625
    10. '(' → logprob: -25.0

Token 577: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001935661886818707
    2. '<|end|>' → logprob: -7.0019354820251465
    3. '
' → logprob: -7.2519354820251465
    4. '   ' → logprob: -8.501935958862305
    5. 'print' → logprob: -9.876935958862305
    6. ')' → logprob: -10.751935958862305
    7. '        
' → logprob: -11.751935958862305
    8. ',' → logprob: -12.126935958862305
    9. '#' → logprob: -12.376935958862305
    10. '<|end|>' → logprob: -12.501935958862305

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002583594177849591
    2. 'print' → logprob: -9.000258445739746
    3. '   ' → logprob: -9.375258445739746
    4. '<|end|>' → logprob: -10.125258445739746
    5. '
' → logprob: -12.250258445739746
    6. ' print' → logprob: -13.250258445739746
    7. '        
' → logprob: -14.000258445739746
    8. '           ' → logprob: -14.375258445739746
    9. '```' → logprob: -14.500258445739746
    10. '#' → logprob: -14.625258445739746

Token 579: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00015812745550647378
    2. ' print' → logprob: -8.875158309936523
    3. '   ' → logprob: -11.375158309936523
    4. '       ' → logprob: -12.000158309936523
    5. '```' → logprob: -15.375158309936523
    6. 'sys' → logprob: -16.000158309936523
    7. '
' → logprob: -16.500158309936523
    8. '	print' → logprob: -16.875158309936523
    9. 'if' → logprob: -17.000158309936523
    10. '#print' → logprob: -18.500158309936523

Token 580: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.0007125511183403432
    2. 'item' → logprob: -7.2507123947143555
    3. '(i' → logprob: -13.750712394714355
    4. '(f' → logprob: -14.000712394714355
    5. '(' → logprob: -14.375712394714355
    6. ' item' → logprob: -16.500713348388672
    7. ' (' → logprob: -17.375713348388672
    8. '=item' → logprob: -18.500713348388672
    9. '(items' → logprob: -18.625713348388672
    10. '((' → logprob: -19.000713348388672

Token 581: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ' )' → logprob: -13.375003814697266
    3. ')
' → logprob: -13.625003814697266
    4. '   ' → logprob: -15.625003814697266
    5. '       ' → logprob: -16.500003814697266
    6. ')}' → logprob: -16.625003814697266
    7. '())' → logprob: -17.125003814697266
    8. ')i' → logprob: -17.250003814697266
    9. '()' → logprob: -17.375003814697266
    10. '))' → logprob: -17.500003814697266

Token 582: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 583: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01105206273496151
    2. '__' → logprob: -4.511052131652832
    3. '_' → logprob: -13.386052131652832
    4. ' _' → logprob: -14.011052131652832
    5. '___' → logprob: -14.136052131652832
    6. 'medical' → logprob: -14.636052131652832
    7. ' medical' → logprob: -15.636052131652832
    8. '_name' → logprob: -15.636052131652832
    9. '_med' → logprob: -15.886052131652832
    10. ' ___' → logprob: -16.136051177978516

Token 584: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003544239792972803
    2. '==' → logprob: -6.378544330596924
    3. ' ==' → logprob: -6.628544330596924
    4. ' __' → logprob: -7.628544330596924
    5. 'name' → logprob: -10.878543853759766
    6. '```' → logprob: -12.503543853759766
    7. '=="' → logprob: -12.628543853759766
    8. '__.__' → logprob: -13.253543853759766
    9. 'main' → logprob: -14.128543853759766
    10. '.__' → logprob: -14.128543853759766

Token 585: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.263011578586884e-05
    2. '__.__' → logprob: -10.375042915344238
    3. '==' → logprob: -11.500042915344238
    4. '=="' → logprob: -14.625042915344238
    5. '__.' → logprob: -15.375042915344238
    6. '___' → logprob: -15.750042915344238
    7. '____' → logprob: -16.125041961669922
    8. '__('' → logprob: -16.500041961669922
    9. '__["' → logprob: -16.750041961669922
    10. '__[' → logprob: -17.000041961669922

Token 586: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018870452418923378
    2. '==' → logprob: -4.2688703536987305
    3. ' ==' → logprob: -5.3938703536987305
    4. '=="' → logprob: -9.01887035369873
    5. '=='' → logprob: -11.26887035369873
    6. '__.__' → logprob: -11.89387035369873
    7. '_' → logprob: -12.64387035369873
    8. '___' → logprob: -12.89387035369873
    9. '=' → logprob: -14.14387035369873
    10. '__.' → logprob: -14.39387035369873

Token 587: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04859565943479538
    2. ''' → logprob: -3.048595666885376
    3. '__' → logprob: -12.048595428466797
    4. ' "__' → logprob: -13.298595428466797
    5. '"name' → logprob: -15.423595428466797
    6. ' '__' → logprob: -16.173595428466797
    7. '"user' → logprob: -16.298595428466797
    8. ''"' → logprob: -16.548595428466797
    9. '"'' → logprob: -17.173595428466797
    10. '"\' → logprob: -17.423595428466797

Token 588: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.8550976164988242e-05
    2. 'name' → logprob: -11.125018119812012
    3. '__' → logprob: -12.500018119812012
    4. ' main' → logprob: -17.125019073486328
    5. '"' → logprob: -17.250019073486328
    6. '_main' → logprob: -18.625019073486328
    7. 'ma' → logprob: -19.125019073486328
    8. 'built' → logprob: -19.750019073486328
    9. '(main' → logprob: -20.250019073486328
    10. '	main' → logprob: -20.500019073486328

Token 589: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.005360402166843414
    2. '__' → logprob: -5.2553606033325195
    3. '__':
' → logprob: -9.00536060333252
    4. '__:' → logprob: -12.75536060333252
    5. '__["' → logprob: -14.38036060333252
    6. '__.' → logprob: -16.630359649658203
    7. '_' → logprob: -16.880359649658203
    8. '__.__' → logprob: -17.130359649658203
    9. '```' → logprob: -17.255359649658203
    10. '():
' → logprob: -17.380359649658203

Token 590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003748533083125949
    2. 'medical' → logprob: -5.628748416900635
    3. ' medical' → logprob: -9.003748893737793
    4. 'med' → logprob: -11.378748893737793
    5. '	' → logprob: -12.128748893737793
    6. '   ' → logprob: -13.128748893737793
    7. '```' → logprob: -13.253748893737793
    8. '_med' → logprob: -13.878748893737793
    9. 'Medical' → logprob: -14.253748893737793
    10. ' medizin' → logprob: -14.378748893737793

Token 591: ' medical' (ID: 7774)
  Prédit: 'medical'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'medical' (adapté à ' medical') → logprob: -7.896309739408025e-07
    2. ' medical' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.625000953674316
    4. 'med' → logprob: -16.5
    5. 'import' → logprob: -17.5
    6. '    
' → logprob: -21.75
    7. '
' → logprob: -22.0
    8. '  ' → logprob: -22.25
    9. 'main' → logprob: -22.5
    10. 'medi' → logprob: -22.5

Token 592: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -1.4259644558478612e-05
    2. '_' → logprob: -11.250014305114746
    3. '_checker' → logprob: -14.375014305114746
    4. '_checkout' → logprob: -15.875014305114746
    5. '_checks' → logprob: -16.00001335144043
    6. '_checkpoint' → logprob: -16.50001335144043
    7. 'check' → logprob: -16.62501335144043
    8. '_checked' → logprob: -17.37501335144043
    9. '_CHECK' → logprob: -17.37501335144043
    10. '_Check' → logprob: -17.50001335144043

Token 593: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -2.45848218582978e-06
    2. '_up' → logprob: -13.25000286102295
    3. ' up' → logprob: -16.375001907348633
    4. 'уп' → logprob: -16.625001907348633
    5. '	up' → logprob: -17.000001907348633
    6. 'u' → logprob: -17.125001907348633
    7. 'upid' → logprob: -17.500001907348633
    8. 'p' → logprob: -17.750001907348633
    9. 'upt' → logprob: -17.750001907348633
    10. 'upu' → logprob: -17.875001907348633

Token 594: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1160349458805285e-05
    2. '()
' → logprob: -11.875011444091797
    3. '()`' → logprob: -13.125011444091797
    4. ' ()' → logprob: -13.875011444091797
    5. '()

' → logprob: -15.375011444091797
    6. '(' → logprob: -15.625011444091797
    7. '();' → logprob: -15.750011444091797
    8. '()"' → logprob: -15.875011444091797
    9. '()
' → logprob: -16.250011444091797
    10. '()\' → logprob: -16.250011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 592
Tokens correctement prédits (1ère position, stricte): 201
Tokens correctement prédits (1ère position, avec adaptation): 207
Tokens correctement prédits (top 10): 388
Précision stricte (1ère position): 33.95%
Précision adaptée (1ère position): 34.97%
Précision (top 10): 65.54%
================================================================================
