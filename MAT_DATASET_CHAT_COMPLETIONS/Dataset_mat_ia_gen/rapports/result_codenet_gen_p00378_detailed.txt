================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution complète en Python avec commentaires détaillés

# L'idée est de déterminer le coût minimum pour acheter au moins X millilitres d'eau,
# en combinant des bouteilles de 1 litre (1000 millilitres) et de 0.5 litre (500 millilitres).
# On souhaite minimiser le coût total.

# Approche:
# - On itère sur le nombre possible de bouteilles de 1 litre (de 0 à un maximum suffisant).
# - Pour chaque nombre de bouteilles de 1 litre, on calcule la quantité restante à couvrir.
# - On calcule alors le nombre minimal de bouteilles de 0.5 litre nécessaires (en arrondissant vers le haut).
# - On calcule le coût total pour cette combinaison.
# - On garde la meilleure solution (coût minimum) trouvée.

# Cette approche est efficace puisque X ≤ 20000 et le nombre maximum de bouteilles de 1 litre est au plus 20.

def main():
    # Lecture des entrées : prix A (1L), prix B (0.5L), et quantité X en millilitres
    A, B, X = map(int, input().split())

    # Initialisation du coût minimum à une valeur très haute
    cost_min = float('inf')

    # Nombre maximum potentiel de bouteilles 1L à considérer :
    # On peut acheter jusqu'à X//1000+2 bouteilles de 1L pour couvrir la quantité demandée, +2 pour marge.
    max_1L = X // 1000 + 2

    for count_1L in range(max_1L + 1):
        # Quantité couverte par les bouteilles 1L
        quantity_1L = count_1L * 1000

        # Quantité encore nécessaire après utilisation des bouteilles 1L
        leftover = max(0, X - quantity_1L)

        # Nombre minimal de bouteilles 0.5L pour couvrir leftover
        # Chaque bouteille 0.5L couvre 500ml, on divise en arrondissant vers le haut
        count_halfL = (leftover + 499) // 500  # Technique d'arrondi supérieur

        # Calcul du coût total pour cette combinaison
        total_cost = count_1L * A + count_halfL * B

        # On met à jour la solution minimale si meilleur coût trouvé
        if total_cost < cost_min:
            cost_min = total_cost

    print(cost_min)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' complète' (ID: 75660)
  → Token d'amorce (pas de prédiction)

Token 3: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7483005523681641
    2. '```' → logprob: -0.7483005523681641
    3. 'def' → logprob: -4.248300552368164
    4. ' :' → logprob: -4.498300552368164
    5. '#' → logprob: -4.498300552368164
    6. '\n' → logprob: -4.873300552368164
    7. '``' → logprob: -5.998300552368164
    8. '\' → logprob: -6.373300552368164
    9. '`' → logprob: -6.873300552368164
    10. ' ```' → logprob: -7.498300552368164

Token 4: ' Python' (ID: 26534)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.0820639505982399
    2. 'Python' → logprob: -2.582063913345337
    3. 'fr' → logprob: -6.332064151763916
    4. 'py' → logprob: -7.707064151763916
    5. ' Python' → logprob: -7.832064151763916
    6. ' python' → logprob: -8.207063674926758
    7. '```' → logprob: -8.457063674926758
    8. '#' → logprob: -11.707063674926758
    9. '.py' → logprob: -11.707063674926758
    10. ' français' → logprob: -12.082063674926758

Token 5: ' avec' (ID: 3937)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7949967980384827
    2. '```' → logprob: -0.9199967980384827
    3. '\' → logprob: -3.044996738433838
    4. 'def' → logprob: -3.419996738433838
    5. '\n' → logprob: -3.544996738433838
    6. '#' → logprob: -4.169996738433838
    7. ' :' → logprob: -4.294996738433838
    8. '``' → logprob: -5.794996738433838
    9. ':def' → logprob: -6.419996738433838
    10. '`' → logprob: -6.919996738433838

Token 6: ' commentaires' (ID: 67971)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3560217022895813
    2. 'import' → logprob: -2.9810216426849365
    3. 'def' → logprob: -3.1060216426849365
    4. ' def' → logprob: -3.4810216426849365
    5. 'une' → logprob: -3.8560216426849365
    6. '#' → logprob: -4.231021881103516
    7. '``' → logprob: -4.606021881103516
    8. 'python' → logprob: -4.606021881103516
    9. 'un' → logprob: -4.856021881103516
    10. ' tkinter' → logprob: -4.856021881103516

Token 7: ' déta' (ID: 99673)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5194528698921204
    2. '#' → logprob: -1.6444528102874756
    3. ':' → logprob: -1.8944528102874756
    4. '\' → logprob: -3.8944528102874756
    5. '\n' → logprob: -3.8944528102874756
    6. ' :' → logprob: -4.894453048706055
    7. '``' → logprob: -5.269453048706055
    8. '
' → logprob: -6.019453048706055
    9. 'def' → logprob: -7.019453048706055
    10. '`' → logprob: -7.144453048706055

Token 8: 'illés' (ID: 160970)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6309773921966553
    2. 'é' → logprob: -1.5059773921966553
    3. ':' → logprob: -3.0059773921966553
    4. 'e' → logprob: -3.3809773921966553
    5. 'ère' → logprob: -3.5059773921966553
    6. 'és' → logprob: -3.5059773921966553
    7. 's' → logprob: -3.7559773921966553
    8. 'èr' → logprob: -3.7559773921966553
    9. 'è' → logprob: -4.005977630615234
    10. '```' → logprob: -4.630977630615234

Token 9: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1836344599723816
    2. ':' → logprob: -2.4336345195770264
    3. '#' → logprob: -3.3086345195770264
    4. '\n' → logprob: -3.9336345195770264
    5. '\' → logprob: -4.683634281158447
    6. '``' → logprob: -5.433634281158447
    7. 'def' → logprob: -5.433634281158447
    8. '
' → logprob: -6.308634281158447
    9. ' :' → logprob: -6.683634281158447
    10. '

' → logprob: -7.308634281158447

Token 10: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7939863204956055
    2. '```' → logprob: -0.7939863204956055
    3. 'def' → logprob: -2.4189863204956055
    4. 'import' → logprob: -6.4189863204956055
    5. '\' → logprob: -6.6689863204956055
    6. '``' → logprob: -6.9189863204956055
    7. ''''
' → logprob: -7.1689863204956055
    8. '"""
' → logprob: -7.2939863204956055
    9. '\n' → logprob: -8.293986320495605
    10. ':' → logprob: -8.418986320495605

Token 11: ' L' (ID: 451)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4805677533149719
    2. 'def' → logprob: -1.4805676937103271
    3. ' import' → logprob: -3.105567693710327
    4. '```' → logprob: -3.355567693710327
    5. 'import' → logprob: -3.605567693710327
    6. ' ```' → logprob: -3.855567693710327
    7. ' Python' → logprob: -4.730567932128906
    8. ' Solution' → logprob: -5.855567932128906
    9. ' python' → logprob: -5.980567932128906
    10. ' Voici' → logprob: -6.355567932128906

Token 12: ''idée' (ID: 131945)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6902672648429871
    2. 'a' → logprob: -1.1902673244476318
    3. '#' → logprob: -2.440267324447632
    4. 'i' → logprob: -2.565267324447632
    5. 'iste' → logprob: -4.690267086029053
    6. ''i' → logprob: -5.690267086029053
    7. '```' → logprob: -6.190267086029053
    8. 'ine' → logprob: -6.315267086029053
    9. 'igne' → logprob: -6.565267086029053
    10. ''' → logprob: -6.690267086029053

Token 13: ' est' (ID: 893)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.8626134991645813
    2. ':' → logprob: -1.3626134395599365
    3. ' est' → logprob: -1.8626134395599365
    4. ' ' → logprob: -2.7376134395599365
    5. 'est' → logprob: -2.9876134395599365
    6. ' ' → logprob: -3.8626134395599365
    7. ' de' → logprob: -4.112613677978516
    8. 's' → logprob: -5.612613677978516
    9. ',' → logprob: -5.612613677978516
    10. '#' → logprob: -6.487613677978516

Token 14: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.30326947569847107
    2. ' d' → logprob: -1.4282695055007935
    3. 'de' → logprob: -4.178269386291504
    4. 'd' → logprob: -5.178269386291504
    5. ' ' → logprob: -7.553269386291504
    6. ' #' → logprob: -9.428269386291504
    7. ' que' → logprob: -9.428269386291504
    8. '_de' → logprob: -9.803269386291504
    9. '#' → logprob: -9.928269386291504
    10. '```' → logprob: -10.803269386291504

Token 15: ' déterminer' (ID: 122024)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4115649461746216
    2. 'impl' → logprob: -2.161564826965332
    3. 'def' → logprob: -2.161564826965332
    4. ' résoudre' → logprob: -2.161564826965332
    5. 'calcul' → logprob: -2.286564826965332
    6. 'dé' → logprob: -3.161564826965332
    7. ' créer' → logprob: -3.161564826965332
    8. 'mettre' → logprob: -3.911564826965332
    9. 'import' → logprob: -3.911564826965332
    10. 'cr' → logprob: -4.036564826965332

Token 16: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.552810788154602
    2. ' la' → logprob: -1.552810788154602
    3. ' ' → logprob: -2.3028106689453125
    4. ' le' → logprob: -2.4278106689453125
    5. 'l' → logprob: -5.1778106689453125
    6. ' ' → logprob: -5.1778106689453125
    7. 'le' → logprob: -6.0528106689453125
    8. ' si' → logprob: -6.1778106689453125
    9. ' if' → logprob: -6.5528106689453125
    10. '```' → logprob: -7.1778106689453125

Token 17: ' coût' (ID: 73109)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.19116796553134918
    2. ' type' → logprob: -1.941167950630188
    3. 'nombre' → logprob: -4.441167831420898
    4. ' meilleur' → logprob: -6.066167831420898
    5. 'type' → logprob: -6.191167831420898
    6. ' prochain' → logprob: -6.316167831420898
    7. 's' → logprob: -6.316167831420898
    8. ' nombres' → logprob: -6.566167831420898
    9. ' ' → logprob: -6.816167831420898
    10. ' maximum' → logprob: -7.066167831420898

Token 18: ' minimum' (ID: 11085)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8981818556785583
    2. ' d' → logprob: -1.3981819152832031
    3. ' de' → logprob: -1.7731819152832031
    4. 'total' → logprob: -2.648181915283203
    5. ' du' → logprob: -2.898181915283203
    6. ' ' → logprob: -4.523181915283203
    7. 'd' → logprob: -5.148181915283203
    8. ' optimal' → logprob: -5.148181915283203
    9. ' des' → logprob: -5.648181915283203
    10. 'de' → logprob: -5.773181915283203

Token 19: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3732796013355255
    2. ' de' → logprob: -1.8732795715332031
    3. ' d' → logprob: -2.248279571533203
    4. ' pour' → logprob: -4.123279571533203
    5. ' à' → logprob: -4.623279571533203
    6. ' des' → logprob: -5.248279571533203
    7. ' ,' → logprob: -5.998279571533203
    8. ' du' → logprob: -6.248279571533203
    9. ' au' → logprob: -6.373279571533203
    10. ' entre' → logprob: -6.373279571533203

Token 20: ' acheter' (ID: 60712)
  Prédit: ' parcour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -1.2335703372955322
    2. ' atteindre' → logprob: -1.3585703372955322
    3. ' réaliser' → logprob: -2.1085703372955322
    4. ' aller' → logprob: -3.3585703372955322
    5. ' chaque' → logprob: -3.7335703372955322
    6. ' arriver' → logprob: -3.7335703372955322
    7. ' effectuer' → logprob: -3.7335703372955322
    8. ' trouver' → logprob: -3.9835703372955322
    9. ' couvrir' → logprob: -3.9835703372955322
    10. ' se' → logprob: -4.233570098876953

Token 21: ' au' (ID: 2791)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.14406611025333405
    2. ' ' → logprob: -2.269066095352173
    3. ' une' → logprob: -4.644066333770752
    4. ' l' → logprob: -4.769066333770752
    5. ' le' → logprob: -5.769066333770752
    6. 'un' → logprob: -6.144066333770752
    7. ' des' → logprob: -6.269066333770752
    8. ' la' → logprob: -7.019066333770752
    9. ' les' → logprob: -7.019066333770752
    10. 'l' → logprob: -7.144066333770752

Token 22: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.04301940277218819
    2. ' moins' → logprob: -3.5430192947387695
    3. 'm' → logprob: -5.2930192947387695
    4. '```' → logprob: -5.4180192947387695
    5. 'mo' → logprob: -6.1680192947387695
    6. 'minimum' → logprob: -7.9180192947387695
    7. '#' → logprob: -8.66801929473877
    8. 'jourd' → logprob: -9.16801929473877
    9. '``' → logprob: -9.29301929473877
    10. 'n' → logprob: -9.41801929473877

Token 23: ' X' (ID: 2127)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6530491709709167
    2. ' une' → logprob: -0.9030491709709167
    3. ' ' → logprob: -2.9030492305755615
    4. ' chaque' → logprob: -5.153048992156982
    5. ' n' → logprob: -5.778048992156982
    6. '```' → logprob: -6.278048992156982
    7. 'un' → logprob: -6.528048992156982
    8. ' l' → logprob: -6.903048992156982
    9. ' deux' → logprob: -7.028048992156982
    10. ' '' → logprob: -7.403048992156982

Token 24: ' mill' (ID: 3215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4262830913066864
    2. ' produits' → logprob: -2.551283121109009
    3. ' unités' → logprob: -3.051283121109009
    4. '```' → logprob: -3.426283121109009
    5. '_' → logprob: -3.551283121109009
    6. ' articles' → logprob: -3.551283121109009
    7. 'produ' → logprob: -4.30128288269043
    8. ' fruits' → logprob: -4.30128288269043
    9. 'articles' → logprob: -4.42628288269043
    10. ' unité' → logprob: -4.98878288269043

Token 25: 'ilit' (ID: 45433)
  Prédit: 'ions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.22903038561344147
    2. 'i' → logprob: -2.1040303707122803
    3. 'iers' → logprob: -3.7290303707122803
    4. 'ion' → logprob: -3.8540303707122803
    5. 'e' → logprob: -3.9790303707122803
    6. 'es' → logprob: -5.854030609130859
    7. 'ieux' → logprob: -5.854030609130859
    8. 'ilit' → logprob: -5.854030609130859
    9. 'ier' → logprob: -6.229030609130859
    10. ' ions' → logprob: -6.604030609130859

Token 26: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.10454431921243668
    2. 'ers' → logprob: -2.3545444011688232
    3. 'r' → logprob: -6.229544162750244
    4. 'l' → logprob: -7.104544162750244
    5. '```' → logprob: -7.729544162750244
    6. 'rès' → logprob: -8.229544639587402
    7. 're' → logprob: -8.479544639587402
    8. 'er' → logprob: -8.604544639587402
    9. 'ères' → logprob: -9.104544639587402
    10. 'e' → logprob: -9.604544639587402

Token 27: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8358612060546875
    2. ' ' → logprob: -0.9608612060546875
    3. ' de' → logprob: -1.8358612060546875
    4. 's' → logprob: -4.9608612060546875
    5. '.' → logprob: -5.4608612060546875
    6. '```' → logprob: -5.4608612060546875
    7. ',' → logprob: -6.2108612060546875
    8. 'd' → logprob: -6.3358612060546875
    9. 'de' → logprob: -6.5858612060546875
    10. '<|end|>' → logprob: -7.0858612060546875

Token 28: ''eau' (ID: 38948)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.053160492330789566
    2. 'e' → logprob: -3.4281604290008545
    3. 'u' → logprob: -5.803160667419434
    4. ''eau' → logprob: -5.928160667419434
    5. ''huile' → logprob: -5.928160667419434
    6. ''espace' → logprob: -6.053160667419434
    7. 'a' → logprob: -6.303160667419434
    8. ''un' → logprob: -6.428160667419434
    9. ''u' → logprob: -6.803160667419434
    10. ' '' → logprob: -6.928160667419434

Token 29: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8900269269943237
    2. '.' → logprob: -1.1400269269943237
    3. ':' → logprob: -2.0150270462036133
    4. ' ' → logprob: -2.8900270462036133
    5. ' :' → logprob: -3.5150270462036133
    6. '#' → logprob: -4.515027046203613
    7. '```' → logprob: -4.515027046203613
    8. ' en' → logprob: -4.765027046203613
    9. ' ,' → logprob: -5.390027046203613
    10. 'e' → logprob: -6.015027046203613

Token 30: '#' (ID: 2)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.08258116245269775
    2. ' ' → logprob: -2.707581043243408
    3. ' à' → logprob: -5.957581043243408
    4. '```' → logprob: -6.207581043243408
    5. ' sachant' → logprob: -6.457581043243408
    6. ',' → logprob: -6.707581043243408
    7. '#' → logprob: -7.332581043243408
    8. ' ' → logprob: -7.332581043243408
    9. ' et' → logprob: -7.832581043243408
    10. 's' → logprob: -8.332581520080566

Token 31: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0843702033162117
    2. '#' → logprob: -3.0843701362609863
    3. 'en' → logprob: -4.084370136260986
    4. ' sachant' → logprob: -4.709370136260986
    5. ' étant' → logprob: -6.834370136260986
    6. ' compte' → logprob: -6.959370136260986
    7. ' ' → logprob: -7.084370136260986
    8. ' et' → logprob: -7.209370136260986
    9. ' #' → logprob: -7.209370136260986
    10. ' ' → logprob: -7.334370136260986

Token 32: ' combin' (ID: 25307)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.09241490811109543
    2. 'util' → logprob: -2.7174148559570312
    3. ' chois' → logprob: -5.217414855957031
    4. ' considér' → logprob: -5.717414855957031
    5. ' combin' → logprob: -5.842414855957031
    6. ' utilis' → logprob: -6.467414855957031
    7. ' tenant' → logprob: -6.967414855957031
    8. 'consider' → logprob: -7.092414855957031
    9. 'ayant' → logprob: -7.092414855957031
    10. ' respect' → logprob: -7.467414855957031

Token 33: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.004627598915249109
    2. 'e' → logprob: -5.629627704620361
    3. 'ais' → logprob: -8.379627227783203
    4. 'a' → logprob: -8.379627227783203
    5. 'ent' → logprob: -9.254627227783203
    6. '#' → logprob: -9.379627227783203
    7. 'aison' → logprob: -9.379627227783203
    8. 'ation' → logprob: -9.504627227783203
    9. 'er' → logprob: -10.254627227783203
    10. 'nant' → logprob: -11.004627227783203

Token 34: ' des' (ID: 731)
  Prédit: ' différentes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différentes' → logprob: -0.6493263840675354
    2. ' les' → logprob: -1.2743263244628906
    3. ' des' → logprob: -2.2743263244628906
    4. ' différents' → logprob: -2.8993263244628906
    5. ' plusieurs' → logprob: -3.7743263244628906
    6. 'diff' → logprob: -4.899326324462891
    7. ' ' → logprob: -6.274326324462891
    8. 'les' → logprob: -6.524326324462891
    9. ' l' → logprob: -6.774326324462891
    10. 'des' → logprob: -6.774326324462891

Token 35: ' boute' (ID: 110289)
  Prédit: ' boute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boute' → logprob: -0.6916047930717468
    2. 'b' → logprob: -1.1916048526763916
    3. ' différentes' → logprob: -2.4416048526763916
    4. ' packs' → logprob: -3.8166048526763916
    5. 'pack' → logprob: -4.8166046142578125
    6. ' options' → logprob: -4.8166046142578125
    7. ' offres' → logprob: -4.9416046142578125
    8. '```' → logprob: -5.0666046142578125
    9. 'packs' → logprob: -5.1916046142578125
    10. ' types' → logprob: -5.4416046142578125

Token 36: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -2.165027217415627e-05
    2. 'ille' → logprob: -11.125021934509277
    3. 'lles' → logprob: -12.500021934509277
    4. 'es' → logprob: -13.125021934509277
    5. 'ill' → logprob: -14.375021934509277
    6. 'ttes' → logprob: -15.750021934509277
    7. 'i' → logprob: -16.00002098083496
    8. '```' → logprob: -16.25002098083496
    9. 'e' → logprob: -17.12502098083496
    10. 'ills' → logprob: -17.75002098083496

Token 37: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07483766227960587
    2. ' ' → logprob: -3.4498376846313477
    3. 's' → logprob: -4.449837684631348
    4. ',' → logprob: -4.699837684631348
    5. ' d' → logprob: -4.699837684631348
    6. '.' → logprob: -6.074837684631348
    7. 'de' → logprob: -6.074837684631348
    8. ' ,' → logprob: -6.324837684631348
    9. ' disponibles' → logprob: -7.449837684631348
    10. ' of' → logprob: -7.574837684631348

Token 38: ' ' (ID: 220)
  Prédit: ' différentes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différentes' → logprob: -0.3496714234352112
    2. 'diff' → logprob: -2.2246713638305664
    3. ' différents' → logprob: -3.2246713638305664
    4. ' ' → logprob: -3.4746713638305664
    5. '```' → logprob: -3.7246713638305664
    6. ' volumes' → logprob: -3.9746713638305664
    7. ' diff' → logprob: -4.474671363830566
    8. ' tailles' → logprob: -4.474671363830566
    9. '2' → logprob: -4.599671363830566
    10. ' different' → logprob: -5.349671363830566

Token 39: '1' (ID: 16)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5118909478187561
    2. '2' → logprob: -2.6368908882141113
    3. ' différentes' → logprob: -2.6368908882141113
    4. 'e' → logprob: -3.5118908882141113
    5. '500' → logprob: -3.5118908882141113
    6. '100' → logprob: -3.6368908882141113
    7. 'capac' → logprob: -3.6368908882141113
    8. ' ' → logprob: -3.7618908882141113
    9. '1' → logprob: -4.011890888214111
    10. '```' → logprob: -4.386890888214111

Token 40: ' litre' (ID: 118636)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3875058591365814
    2. 'L' → logprob: -2.1375057697296143
    3. '00' → logprob: -2.8875057697296143
    4. '2' → logprob: -3.0125057697296143
    5. ' ' → logprob: -3.0125057697296143
    6. 'l' → logprob: -4.262506008148193
    7. ',' → logprob: -5.012506008148193
    8. '5' → logprob: -5.262506008148193
    9. '20' → logprob: -5.387506008148193
    10. ' L' → logprob: -5.637506008148193

Token 41: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3487305641174316
    2. ' (' → logprob: -1.3487305641174316
    3. ',' → logprob: -1.4737305641174316
    4. ' ' → logprob: -1.8487305641174316
    5. '.' → logprob: -2.9737305641174316
    6. ' ,' → logprob: -4.348730564117432
    7. '(' → logprob: -4.723730564117432
    8. ' s' → logprob: -5.598730564117432
    9. '(s' → logprob: -5.723730564117432
    10. ' et' → logprob: -6.348730564117432

Token 42: '100' (ID: 1353)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37104785442352295
    2. ' )' → logprob: -1.996047854423523
    3. ' ' → logprob: -3.1210479736328125
    4. '1' → logprob: -3.7460479736328125
    5. '0' → logprob: -3.8710479736328125
    6. '=' → logprob: -4.1210479736328125
    7. '),' → logprob: -4.3710479736328125
    8. ' =' → logprob: -4.4960479736328125
    9. ',' → logprob: -4.6210479736328125
    10. '100' → logprob: -5.2460479736328125

Token 43: '0' (ID: 15)
  Prédit: 'ml'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ml' → logprob: -0.231783926486969
    2. ')' → logprob: -2.481783866882324
    3. ' ml' → logprob: -2.856783866882324
    4. 'm' → logprob: -3.481783866882324
    5. ' )' → logprob: -4.231783866882324
    6. ' mill' → logprob: -4.981783866882324
    7. ' ' → logprob: -5.106783866882324
    8. 'mill' → logprob: -5.856783866882324
    9. ' m' → logprob: -6.356783866882324
    10. 'g' → logprob: -6.981783866882324

Token 44: ' mill' (ID: 3215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37451648712158203
    2. ' )' → logprob: -1.749516487121582
    3. 'ml' → logprob: -2.624516487121582
    4. ' ml' → logprob: -3.624516487121582
    5. 'm' → logprob: -4.249516487121582
    6. ' mill' → logprob: -5.249516487121582
    7. ' ' → logprob: -5.499516487121582
    8. ' ' → logprob: -5.499516487121582
    9. ' m' → logprob: -5.999516487121582
    10. ',' → logprob: -6.249516487121582

Token 45: 'ilit' (ID: 45433)
  Prédit: 'ilit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ilit' → logprob: -0.07027840614318848
    2. 'l' → logprob: -2.8202784061431885
    3. 'il' → logprob: -5.195278167724609
    4. 'lit' → logprob: -6.945278167724609
    5. ')' → logprob: -7.195278167724609
    6. 'i' → logprob: -8.19527816772461
    7. '   ' → logprob: -8.32027816772461
    8. ' litres' → logprob: -8.94527816772461
    9. '	' → logprob: -10.07027816772461
    10. '```' → logprob: -10.32027816772461

Token 46: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0028596781194210052
    2. 're' → logprob: -6.127859592437744
    3. '```' → logprob: -8.252860069274902
    4. 'es' → logprob: -8.877860069274902
    5. 'r' → logprob: -9.627860069274902
    6. '#' → logprob: -9.877860069274902
    7. 'rès' → logprob: -10.627860069274902
    8. ')' → logprob: -10.627860069274902
    9. ' res' → logprob: -11.002860069274902
    10. 't' → logprob: -11.252860069274902

Token 47: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00988086313009262
    2. ' )' → logprob: -4.884881019592285
    3. '),' → logprob: -6.509881019592285
    4. ',' → logprob: -7.759881019592285
    5. ' chacune' → logprob: -9.259881019592285
    6. 's' → logprob: -9.884881019592285
    7. '#' → logprob: -10.009881019592285
    8. ' et' → logprob: -10.259881019592285
    9. ' de' → logprob: -10.759881019592285
    10. ' ),' → logprob: -10.884881019592285

Token 48: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2667381763458252
    2. '.' → logprob: -2.266738176345825
    3. '```' → logprob: -2.766738176345825
    4. ':' → logprob: -3.766738176345825
    5. ' ' → logprob: -4.266737937927246
    6. ',
' → logprob: -5.266737937927246
    7. ' ,' → logprob: -5.516737937927246
    8. 'import' → logprob: -5.641737937927246
    9. ' :' → logprob: -5.891737937927246
    10. '#' → logprob: -5.891737937927246

Token 49: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3295646905899048
    2. 'des' → logprob: -1.9545646905899048
    3. ' ' → logprob: -3.0795645713806152
    4. ' de' → logprob: -3.2045645713806152
    5. '100' → logprob: -4.204564571380615
    6. 'de' → logprob: -4.329564571380615
    7. '500' → logprob: -4.954564571380615
    8. '250' → logprob: -5.454564571380615
    9. '50' → logprob: -5.829564571380615
    10. ' d' → logprob: -5.954564571380615

Token 50: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2126324623823166
    2. '500' → logprob: -1.837632417678833
    3. '250' → logprob: -4.337632656097412
    4. '50' → logprob: -4.587632656097412
    5. '200' → logprob: -5.587632656097412
    6. '0' → logprob: -5.837632656097412
    7. '100' → logprob: -7.087632656097412
    8. ' demi' → logprob: -7.462632656097412
    9. '```' → logprob: -7.837632656097412
    10. '1' → logprob: -9.775132179260254

Token 51: '0' (ID: 15)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.30635884404182434
    2. '0' → logprob: -2.056358814239502
    3. ' ' → logprob: -2.306358814239502
    4. '200' → logprob: -4.431358814239502
    5. '2' → logprob: -4.431358814239502
    6. '50' → logprob: -4.931358814239502
    7. '250' → logprob: -5.556358814239502
    8. '20' → logprob: -8.49385929107666
    9. '100' → logprob: -8.80635929107666
    10. '½' → logprob: -8.86885929107666

Token 52: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08250981569290161
    2. ',' → logprob: -2.957509756088257
    3. '500' → logprob: -4.332509994506836
    4. '50' → logprob: -4.832509994506836
    5. '5' → logprob: -5.582509994506836
    6. '0' → logprob: -7.957509994506836
    7. ' point' → logprob: -8.207509994506836
    8. '05' → logprob: -8.520009994506836
    9. '25' → logprob: -8.895009994506836
    10. '1' → logprob: -9.145009994506836

Token 53: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.996708104154095e-05
    2. '25' → logprob: -9.875100135803223
    3. '1' → logprob: -11.250100135803223
    4. '75' → logprob: -11.500100135803223
    5. '2' → logprob: -12.000100135803223
    6. '05' → logprob: -12.437600135803223
    7. '33' → logprob: -12.875100135803223
    8. '125' → logprob: -13.312600135803223
    9. '3' → logprob: -13.500100135803223
    10. '6' → logprob: -13.687600135803223

Token 54: ' litre' (ID: 118636)
  Prédit: ' litre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' litre' → logprob: -0.3257306218147278
    2. 'lit' → logprob: -1.700730562210083
    3. 'l' → logprob: -3.200730562210083
    4. '_l' → logprob: -3.450730562210083
    5. ' ' → logprob: -4.700730800628662
    6. '-l' → logprob: -4.950730800628662
    7. ' litro' → logprob: -6.700730800628662
    8. ' litres' → logprob: -6.825730800628662
    9. ' ' → logprob: -6.950730800628662
    10. ' лит' → logprob: -7.450730800628662

Token 55: ' (' (ID: 350)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.6760188341140747
    2. '

' → logprob: -1.8010188341140747
    3. ':' → logprob: -1.9260188341140747
    4. ',' → logprob: -1.9260188341140747
    5. '.' → logprob: -2.551018714904785
    6. 'import' → logprob: -2.801018714904785
    7. '
' → logprob: -3.301018714904785
    8. 's' → logprob: -3.301018714904785
    9. ' :' → logprob: -3.301018714904785
    10. '#' → logprob: -3.301018714904785

Token 56: '500' (ID: 3234)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7028489708900452
    2. '500' → logprob: -0.7028489708900452
    3. '5' → logprob: -5.2028489112854
    4. '50' → logprob: -5.5778489112854
    5. ')' → logprob: -8.952849388122559
    6. ' ' → logprob: -9.765349388122559
    7. ' )' → logprob: -10.140349388122559
    8. '```' → logprob: -10.452849388122559
    9. ' cinqu' → logprob: -10.827849388122559
    10. ' five' → logprob: -11.327849388122559

Token 57: ' mill' (ID: 3215)
  Prédit: ' mill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mill' → logprob: -0.2146283984184265
    2. ')' → logprob: -1.8396284580230713
    3. ' )' → logprob: -3.8396284580230713
    4. 'mill' → logprob: -4.964628219604492
    5. ' ' → logprob: -5.464628219604492
    6. '<|end|>' → logprob: -6.714628219604492
    7. ' ' → logprob: -8.839628219604492
    8. ' ml' → logprob: -10.339628219604492
    9. ' gram' → logprob: -10.339628219604492
    10. ' espaces' → logprob: -10.839628219604492

Token 58: 'ilit' (ID: 45433)
  Prédit: 'ilit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ilit' → logprob: -0.00023894020705483854
    2. 'il' → logprob: -8.500239372253418
    3. 'it' → logprob: -11.125239372253418
    4. ')' → logprob: -12.125239372253418
    5. 'i' → logprob: -12.125239372253418
    6. '```' → logprob: -12.750239372253418
    7. 'lit' → logprob: -13.250239372253418
    8. 'isecond' → logprob: -13.750239372253418
    9. 'illit' → logprob: -14.125239372253418
    10. 'l' → logprob: -14.750239372253418

Token 59: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.003726088209077716
    2. 'es' → logprob: -6.253726005554199
    3. 't' → logprob: -7.503726005554199
    4. 'r' → logprob: -7.628726005554199
    5. 'l' → logprob: -8.1287260055542
    6. 'rès' → logprob: -9.0037260055542
    7. 're' → logprob: -9.3787260055542
    8. 'd' → logprob: -9.8787260055542
    9. 'les' → logprob: -10.1287260055542
    10. ')' → logprob: -10.6287260055542

Token 60: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039039674447849393
    2. ').' → logprob: -8.75039005279541
    3. '#' → logprob: -8.87539005279541
    4. '):' → logprob: -10.75039005279541
    5. ')#' → logprob: -11.00039005279541
    6. ' )' → logprob: -11.25039005279541
    7. '),' → logprob: -11.62539005279541
    8. '```' → logprob: -11.62539005279541
    9. '.' → logprob: -11.87539005279541
    10. ',' → logprob: -12.50039005279541

Token 61: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0149317979812622
    2. '```' → logprob: -1.2649317979812622
    3. '#' → logprob: -1.5149317979812622
    4. 'd' → logprob: -3.1399316787719727
    5. 'import' → logprob: -3.6399316787719727
    6. 'n' → logprob: -3.7649316787719727
    7. '\' → logprob: -4.139931678771973
    8. '
' → logprob: -5.139931678771973
    9. 'a' → logprob: -5.389931678771973
    10. 'b' → logprob: -5.764931678771973

Token 62: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4733704924583435
    2. 'd' → logprob: -2.0983705520629883
    3. 'def' → logprob: -2.3483705520629883
    4. 'import' → logprob: -2.7233705520629883
    5. '```' → logprob: -3.3483705520629883
    6. 'n' → logprob: -4.098370552062988
    7. 'c' → logprob: -4.223370552062988
    8. 'b' → logprob: -4.723370552062988
    9. 'C' → logprob: -5.223370552062988
    10. '\' → logprob: -5.598370552062988

Token 63: ' souhaite' (ID: 68897)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -1.2072919607162476
    2. 'def' → logprob: -1.8322919607162476
    3. ' utilis' → logprob: -2.207292079925537
    4. ' va' → logprob: -2.832292079925537
    5. ' a' → logprob: -3.207292079925537
    6. ' calc' → logprob: -3.332292079925537
    7. ' continue' → logprob: -3.457292079925537
    8. ' utilise' → logprob: -3.582292079925537
    9. ' considère' → logprob: -3.957292079925537
    10. 'optim' → logprob: -3.957292079925537

Token 64: ' minim' (ID: 23874)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.083658218383789
    2. ' minim' → logprob: -1.083658218383789
    3. ' trouver' → logprob: -2.458658218383789
    4. ' utiliser' → logprob: -2.833658218383789
    5. ' optimiser' → logprob: -3.958658218383789
    6. 'acheter' → logprob: -4.208658218383789
    7. ' calcul' → logprob: -4.208658218383789
    8. ' acheter' → logprob: -4.208658218383789
    9. ' déterminer' → logprob: -4.208658218383789
    10. ' toujours' → logprob: -4.708658218383789

Token 65: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.0007052833680063486
    2. 's' → logprob: -7.875705242156982
    3. 'se' → logprob: -8.75070571899414
    4. 'zer' → logprob: -9.87570571899414
    5. 'iser' → logprob: -10.25070571899414
    6. 'm' → logprob: -11.12570571899414
    7. '#' → logprob: -11.37570571899414
    8. '```' → logprob: -12.00070571899414
    9. ' ser' → logprob: -12.50070571899414
    10. 'sera' → logprob: -12.62570571899414

Token 66: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.040383871644735336
    2. ' ' → logprob: -3.915383815765381
    3. 'le' → logprob: -4.415383815765381
    4. '_le' → logprob: -5.790383815765381
    5. ' les' → logprob: -6.040383815765381
    6. '_' → logprob: -7.290383815765381
    7. ' ' → logprob: -7.415383815765381
    8. ' l' → logprob: -8.915384292602539
    9. ' la' → logprob: -8.915384292602539
    10. ' un' → logprob: -9.540384292602539

Token 67: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -0.26715797185897827
    2. 'co' → logprob: -1.517158031463623
    3. ' co' → logprob: -5.017158031463623
    4. ' prix' → logprob: -5.892158031463623
    5. ' cout' → logprob: -6.267158031463623
    6. 'c' → logprob: -6.767158031463623
    7. 'prix' → logprob: -7.267158031463623
    8. ' coû' → logprob: -7.767158031463623
    9. ' coûts' → logprob: -8.017157554626465
    10. 'cout' → logprob: -8.017157554626465

Token 68: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4240376651287079
    2. ',' → logprob: -2.1740376949310303
    3. ' :' → logprob: -2.5490376949310303
    4. ':' → logprob: -2.5490376949310303
    5. '.' → logprob: -3.0490376949310303
    6. ' ,' → logprob: -5.049037456512451
    7. '_' → logprob: -5.049037456512451
    8. '```' → logprob: -5.924037456512451
    9. ' ' → logprob: -6.424037456512451
    10. 's' → logprob: -6.674037456512451

Token 69: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8177977204322815
    2. '#' → logprob: -1.8177976608276367
    3. 'def' → logprob: -2.3177976608276367
    4. 'import' → logprob: -2.9427976608276367
    5. '.' → logprob: -3.0677976608276367
    6. 'n' → logprob: -3.0677976608276367
    7. ',' → logprob: -3.1927976608276367
    8. 'i' → logprob: -3.8177976608276367
    9. '```' → logprob: -3.8177976608276367
    10. '
' → logprob: -4.442797660827637

Token 70: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2765960097312927
    2. '#' → logprob: -2.1515960693359375
    3. 'n' → logprob: -3.0265960693359375
    4. 'import' → logprob: -3.6515960693359375
    5. 'd' → logprob: -3.7765960693359375
    6. '```' → logprob: -4.2765960693359375
    7. 'c' → logprob: -5.4015960693359375
    8. 'b' → logprob: -5.7765960693359375
    9. 'C' → logprob: -6.1515960693359375
    10. 'a' → logprob: -6.6515960693359375

Token 71: ' Appro' (ID: 24145)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016448630020022392
    2. 'd' → logprob: -5.141448497772217
    3. 'import' → logprob: -5.141448497772217
    4. ' def' → logprob: -6.391448497772217
    5. 'n' → logprob: -6.891448497772217
    6. '#' → logprob: -6.891448497772217
    7. '```' → logprob: -8.141448974609375
    8. 'from' → logprob: -8.766448974609375
    9. ' import' → logprob: -9.391448974609375
    10. 'a' → logprob: -9.766448974609375

Token 72: 'che' (ID: 926)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5584971308708191
    2. 'ch' → logprob: -1.5584971904754639
    3. '#' → logprob: -1.8084971904754639
    4. 'che' → logprob: -3.308497190475464
    5. 'ches' → logprob: -4.808496952056885
    6. 'c' → logprob: -5.933496952056885
    7. 'xim' → logprob: -6.558496952056885
    8. 'xi' → logprob: -6.933496952056885
    9. 'def' → logprob: -7.183496952056885
    10. 'fond' → logprob: -7.183496952056885

Token 73: ':
' (ID: 734)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -0.5101525187492371
    2. ' dynamique' → logprob: -1.6351525783538818
    3. 'dp' → logprob: -3.260152578353882
    4. ' d' → logprob: -3.510152578353882
    5. 'dynamic' → logprob: -3.635152578353882
    6. 'def' → logprob: -3.760152578353882
    7. ' dp' → logprob: -3.885152578353882
    8. 'd' → logprob: -4.010152339935303
    9. ' :' → logprob: -4.510152339935303
    10. ' #' → logprob: -4.885152339935303

Token 74: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6268488764762878
    2. ' #' → logprob: -1.1268489360809326
    3. 'def' → logprob: -2.5018489360809326
    4. ' def' → logprob: -3.6268489360809326
    5. ' ' → logprob: -5.0018486976623535
    6. ' ```' → logprob: -5.5018486976623535
    7. '```' → logprob: -5.6268486976623535
    8. 'from' → logprob: -5.6268486976623535
    9. 'python' → logprob: -6.1268486976623535
    10. 'for' → logprob: -6.2518486976623535

Token 75: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32833293080329895
    2. '#' → logprob: -1.7033329010009766
    3. ' def' → logprob: -2.9533329010009766
    4. 'from' → logprob: -4.203332901000977
    5. 'dp' → logprob: -4.953332901000977
    6. ' #' → logprob: -5.328332901000977
    7. ' On' → logprob: -5.578332901000977
    8. 'On' → logprob: -5.828332901000977
    9. ' dynamic' → logprob: -5.953332901000977
    10. ' from' → logprob: -6.078332901000977

Token 76: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8854560256004333
    2. 'def' → logprob: -1.2604560852050781
    3. 'On' → logprob: -2.385456085205078
    4. 'Calcul' → logprob: -3.010456085205078
    5. 'Util' → logprob: -3.260456085205078
    6. 'for' → logprob: -3.510456085205078
    7. 'Dé' → logprob: -3.635456085205078
    8. ' On' → logprob: -4.010456085205078
    9. 'Pour' → logprob: -4.385456085205078
    10. ' Util' → logprob: -4.635456085205078

Token 77: ' it' (ID: 480)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.8126450777053833
    2. ' calc' → logprob: -1.3126450777053833
    3. ' utilis' → logprob: -2.9376449584960938
    4. ' utilise' → logprob: -3.4376449584960938
    5. ' calcul' → logprob: -3.6876449584960938
    6. ' peut' → logprob: -3.6876449584960938
    7. ' ' → logprob: -3.9376449584960938
    8. '_' → logprob: -4.062644958496094
    9. ' iter' → logprob: -4.437644958496094
    10. ' ' → logprob: -4.562644958496094

Token 78: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.006541050970554352
    2. 'é' → logprob: -5.6315412521362305
    3. 'er' → logprob: -6.8815412521362305
    4. 'è' → logprob: -7.5065412521362305
    5. 'e' → logprob: -8.13154125213623
    6. 'ére' → logprob: -8.75654125213623
    7. 'èr' → logprob: -8.88154125213623
    8. 'ègre' → logprob: -8.88154125213623
    9. 'ér' → logprob: -9.25654125213623
    10. 'ération' → logprob: -9.25654125213623

Token 79: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.1285649538040161
    2. ' ' → logprob: -2.2535648345947266
    3. 'sur' → logprob: -4.878564834594727
    4. ' à' → logprob: -6.128564834594727
    5. ' over' → logprob: -6.128564834594727
    6. ' through' → logprob: -7.878564834594727
    7. ' les' → logprob: -8.003564834594727
    8. 'r' → logprob: -8.253564834594727
    9. ' au' → logprob: -8.253564834594727
    10. ':' → logprob: -8.378564834594727

Token 80: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.34589308500289917
    2. ' l' → logprob: -2.220893144607544
    3. ' la' → logprob: -2.470893144607544
    4. ' ' → logprob: -2.595893144607544
    5. ' les' → logprob: -4.970892906188965
    6. ' nombre' → logprob: -5.720892906188965
    7. ' possible' → logprob: -5.970892906188965
    8. ' toutes' → logprob: -6.095892906188965
    9. 'le' → logprob: -6.470892906188965
    10. ' tous' → logprob: -6.720892906188965

Token 81: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.020938187837600708
    2. 'nombre' → logprob: -3.8959381580352783
    3. ' nombres' → logprob: -8.7709379196167
    4. ' nb' → logprob: -9.7709379196167
    5. ' ' → logprob: -10.2709379196167
    6. ' number' → logprob: -10.5209379196167
    7. 'n' → logprob: -10.6459379196167
    8. 's' → logprob: -10.8959379196167
    9. ' n' → logprob: -11.6459379196167
    10. 'nb' → logprob: -11.6459379196167

Token 82: ' possible' (ID: 4149)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4197847545146942
    2. ' d' → logprob: -1.4197847843170166
    3. ' ' → logprob: -2.9197847843170166
    4. ' possible' → logprob: -4.5447845458984375
    5. ' maximal' → logprob: -5.0447845458984375
    6. 'de' → logprob: -5.1697845458984375
    7. 'd' → logprob: -5.1697845458984375
    8. ' total' → logprob: -5.1697845458984375
    9. '_' → logprob: -5.4197845458984375
    10. ' des' → logprob: -5.9197845458984375

Token 83: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1569076031446457
    2. ' d' → logprob: -2.406907558441162
    3. ' ' → logprob: -3.656907558441162
    4. 'de' → logprob: -4.281907558441162
    5. 'd' → logprob: -5.156907558441162
    6. 's' → logprob: -5.781907558441162
    7. ' possible' → logprob: -6.156907558441162
    8. '_' → logprob: -6.656907558441162
    9. '  ' → logprob: -7.281907558441162
    10. '_de' → logprob: -7.656907558441162

Token 84: ' boute' (ID: 110289)
  Prédit: ' boute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boute' → logprob: -0.01277167722582817
    2. 'b' → logprob: -4.3877716064453125
    3. ' ' → logprob: -9.637771606445312
    4. '0' → logprob: -10.137771606445312
    5. '```' → logprob: -10.137771606445312
    6. ' bouteille' → logprob: -10.262771606445312
    7. '1' → logprob: -10.887771606445312
    8. '	b' → logprob: -11.137771606445312
    9. ' b' → logprob: -11.762771606445312
    10. ' bott' → logprob: -12.012771606445312

Token 85: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -0.003690216923132539
    2. 'i' → logprob: -6.378690242767334
    3. '```' → logprob: -7.003690242767334
    4. 'ill' → logprob: -8.253689765930176
    5. '``' → logprob: -8.378689765930176
    6. 'ille' → logprob: -8.628689765930176
    7. '

' → logprob: -9.503689765930176
    8. '"' → logprob: -10.378689765930176
    9. '</' → logprob: -10.628689765930176
    10. '"""' → logprob: -10.628689765930176

Token 86: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.23456402122974396
    2. 'de' → logprob: -1.9845640659332275
    3. 'd' → logprob: -3.2345640659332275
    4. ' d' → logprob: -3.6095640659332275
    5. '1' → logprob: -6.734563827514648
    6. ' ' → logprob: -7.109563827514648
    7. '100' → logprob: -7.359563827514648
    8. 's' → logprob: -7.359563827514648
    9. 'import' → logprob: -7.359563827514648
    10. '_' → logprob: -7.984563827514648

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06628323346376419
    2. ' ' → logprob: -2.8162832260131836
    3. '0' → logprob: -5.816283226013184
    4. '2' → logprob: -7.816283226013184
    5. '```' → logprob: -8.316283226013184
    6. ' litre' → logprob: -8.941283226013184
    7. '100' → logprob: -9.066283226013184
    8. '500' → logprob: -9.191283226013184
    9. 'b' → logprob: -9.878783226013184
    10. 'lit' → logprob: -10.503783226013184

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004250181373208761
    2. '100' → logprob: -6.5042500495910645
    3. '0' → logprob: -7.0042500495910645
    4. '500' → logprob: -7.3792500495910645
    5. ' ' → logprob: -7.6292500495910645
    6. '2' → logprob: -8.004250526428223
    7. '```' → logprob: -8.879250526428223
    8. 'un' → logprob: -9.254250526428223
    9. 'lit' → logprob: -9.879250526428223
    10. 'b' → logprob: -10.879250526428223

Token 89: ' litre' (ID: 118636)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lit' → logprob: -0.899569571018219
    2. '-' → logprob: -1.1495695114135742
    3. ' litre' → logprob: -1.6495695114135742
    4. '-l' → logprob: -3.649569511413574
    5. '-lit' → logprob: -4.149569511413574
    6. 'L' → logprob: -4.649569511413574
    7. ' ' → logprob: -4.649569511413574
    8. ' -' → logprob: -4.899569511413574
    9. 'l' → logprob: -5.399569511413574
    10. '_l' → logprob: -5.649569511413574

Token 90: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8319258093833923
    2. ',' → logprob: -1.456925868988037
    3. 's' → logprob: -2.331925868988037
    4. ' (' → logprob: -2.331925868988037
    5. ' ,' → logprob: -3.831925868988037
    6. '.' → logprob: -4.081925868988037
    7. ' à' → logprob: -4.331925868988037
    8. ' de' → logprob: -4.456925868988037
    9. ':' → logprob: -4.706925868988037
    10. ' que' → logprob: -4.831925868988037

Token 91: 'de' (ID: 613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2227635383605957
    2. ' ' → logprob: -1.2227635383605957
    3. ' )' → logprob: -1.7227635383605957
    4. '1' → logprob: -2.4727635383605957
    5. 'b' → logprob: -2.7227635383605957
    6. ' b' → logprob: -3.9727635383605957
    7. ' i' → logprob: -4.472763538360596
    8. '0' → logprob: -4.722763538360596
    9. 'i' → logprob: -5.097763538360596
    10. ' n' → logprob: -5.722763538360596

Token 92: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5231716632843018
    2. '0' → logprob: -0.8981716632843018
    3. '1' → logprob: -10.898171424865723
    4. '```' → logprob: -11.898171424865723
    5. ')' → logprob: -12.523171424865723
    6. ' )' → logprob: -12.898171424865723
    7. ' ' → logprob: -12.898171424865723
    8. ' range' → logprob: -13.023171424865723
    9. ' zéro' → logprob: -13.273171424865723
    10. ' #' → logprob: -13.523171424865723

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003601617179811001
    2. ' ' → logprob: -5.628601551055908
    3. '```' → logprob: -14.628602027893066
    4. '1' → logprob: -15.003602027893066
    5. ' zéro' → logprob: -15.378602027893066
    6. ')' → logprob: -15.878602027893066
    7. 'z' → logprob: -15.878602027893066
    8. 'zero' → logprob: -17.25360107421875
    9. '  ' → logprob: -17.37860107421875
    10. '`' → logprob: -17.44110107421875

Token 94: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.46813857555389404
    2. ' ' → logprob: -1.093138575553894
    3. 'à' → logprob: -3.4681386947631836
    4. ' jusqu' → logprob: -5.968138694763184
    5. ')' → logprob: -6.593138694763184
    6. ' )' → logprob: -6.593138694763184
    7. ' a' → logprob: -7.343138694763184
    8. 'jus' → logprob: -7.843138694763184
    9. ' up' → logprob: -8.218138694763184
    10. 'a' → logprob: -8.468138694763184

Token 95: ' un' (ID: 537)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7358013987541199
    2. ' X' → logprob: -0.8608013987541199
    3. 'X' → logprob: -2.7358014583587646
    4. ' x' → logprob: -4.9858012199401855
    5. ' ' → logprob: -5.2358012199401855
    6. ' la' → logprob: -6.1108012199401855
    7. ' max' → logprob: -6.1108012199401855
    8. '(X' → logprob: -6.1108012199401855
    9. ' n' → logprob: -6.2358012199401855
    10. 'x' → logprob: -6.3608012199401855

Token 96: ' maximum' (ID: 10562)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6785142421722412
    2. ' max' → logprob: -1.4285142421722412
    3. 'e' → logprob: -1.8035142421722412
    4. ' n' → logprob: -4.17851448059082
    5. ' maximum' → logprob: -4.42851448059082
    6. 'nombre' → logprob: -4.42851448059082
    7. 'max' → logprob: -4.55351448059082
    8. 'n' → logprob: -4.80351448059082
    9. ' range' → logprob: -5.17851448059082
    10. ' peu' → logprob: -5.80351448059082

Token 97: ' suff' (ID: 9490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47970330715179443
    2. ' )' → logprob: -1.4797033071517944
    3. ' ' → logprob: -2.729703426361084
    4. ' possible' → logprob: -3.104703426361084
    5. '_' → logprob: -4.229703426361084
    6. ' =' → logprob: -5.229703426361084
    7. '_possible' → logprob: -5.479703426361084
    8. 's' → logprob: -5.729703426361084
    9. ' de' → logprob: -5.729703426361084
    10. ' à' → logprob: -5.979703426361084

Token 98: 'isant' (ID: 56111)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.048666391521692276
    2. 'isant' → logprob: -3.048666477203369
    3. '#' → logprob: -10.298666000366211
    4. 'isement' → logprob: -11.173666000366211
    5. 'isent' → logprob: -11.923666000366211
    6. 's' → logprob: -12.423666000366211
    7. 'i' → logprob: -12.548666000366211
    8. '```' → logprob: -12.673666000366211
    9. '}' → logprob: -12.923666000366211
    10. 'isible' → logprob: -13.423666000366211

Token 99: ').
' (ID: 6294)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5073862671852112
    2. ')' → logprob: -1.1323862075805664
    3. ' ),' → logprob: -3.3823862075805664
    4. ' ).' → logprob: -3.8823862075805664
    5. ').' → logprob: -4.382386207580566
    6. '),' → logprob: -5.007386207580566
    7. ' ' → logprob: -7.007386207580566
    8. ' pour' → logprob: -7.882386207580566
    9. ' ):' → logprob: -8.757386207580566
    10. '):' → logprob: -8.757386207580566

Token 100: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14869442582130432
    2. '```' → logprob: -3.7736945152282715
    3. ' ```' → logprob: -3.8986945152282715
    4. 'n' → logprob: -3.8986945152282715
    5. ' :' → logprob: -4.6486945152282715
    6. ':' → logprob: -4.8986945152282715
    7. ' ,' → logprob: -4.8986945152282715
    8. ' for' → logprob: -5.1486945152282715
    9. '_' → logprob: -5.2736945152282715
    10. 'for' → logprob: -5.2736945152282715

Token 101: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.016364336013794
    2. ' ' → logprob: -1.516364336013794
    3. '#' → logprob: -1.766364336013794
    4. ' for' → logprob: -1.891364336013794
    5. ' #' → logprob: -3.141364336013794
    6. ' max' → logprob: -4.266364097595215
    7. 'n' → logprob: -4.391364097595215
    8. 'max' → logprob: -4.641364097595215
    9. ' 
' → logprob: -5.516364097595215
    10. 'def' → logprob: -5.891364097595215

Token 102: ' Pour' (ID: 13931)
  Prédit: ' On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' On' → logprob: -0.7017180323600769
    2. ' for' → logprob: -1.8267180919647217
    3. 'for' → logprob: -2.2017180919647217
    4. 'Pour' → logprob: -2.7017180919647217
    5. ' Pour' → logprob: -2.7017180919647217
    6. 'On' → logprob: -2.8267180919647217
    7. ' pour' → logprob: -4.326717853546143
    8. '#' → logprob: -4.576717853546143
    9. ' Ensuite' → logprob: -6.076717853546143
    10. 'For' → logprob: -6.201717853546143

Token 103: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.02591611072421074
    2. ' each' → logprob: -3.77591609954834
    3. ' chacune' → logprob: -6.40091609954834
    4. 'each' → logprob: -7.65091609954834
    5. ' cada' → logprob: -8.77591609954834
    6. ' chacun' → logprob: -9.65091609954834
    7. 'ch' → logprob: -10.02591609954834
    8. 'ach' → logprob: -10.15091609954834
    9. ' ' → logprob: -10.77591609954834
    10. ' every' → logprob: -11.02591609954834

Token 104: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.3397819399833679
    2. 'nombre' → logprob: -1.3397819995880127
    3. ' quantité' → logprob: -4.214781761169434
    4. ' ' → logprob: -5.714781761169434
    5. ' valeur' → logprob: -6.964781761169434
    6. 'n' → logprob: -7.089781761169434
    7. ' n' → logprob: -7.214781761169434
    8. ' i' → logprob: -7.214781761169434
    9. 'quant' → logprob: -7.464781761169434
    10. 'i' → logprob: -7.589781761169434

Token 105: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10594618320465088
    2. ' d' → logprob: -3.1059460639953613
    3. ' possible' → logprob: -3.7309460639953613
    4. '_' → logprob: -4.230946063995361
    5. ' ' → logprob: -4.980946063995361
    6. 'de' → logprob: -5.730946063995361
    7. '_possible' → logprob: -5.980946063995361
    8. '_de' → logprob: -6.230946063995361
    9. '_b' → logprob: -6.730946063995361
    10. 'possible' → logprob: -7.605946063995361

Token 106: ' boute' (ID: 110289)
  Prédit: ' boute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boute' → logprob: -0.5763982534408569
    2. 'b' → logprob: -0.8263982534408569
    3. '1' → logprob: -8.576397895812988
    4. ' ' → logprob: -9.326397895812988
    5. ' bouteille' → logprob: -9.701397895812988
    6. '```' → logprob: -10.076397895812988
    7. ' b' → logprob: -10.576397895812988
    8. '	b' → logprob: -11.326397895812988
    9. ' bottles' → logprob: -11.951397895812988
    10. '0' → logprob: -12.076397895812988

Token 107: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -0.006652610842138529
    2. 'ille' → logprob: -6.25665283203125
    3. 't' → logprob: -6.50665283203125
    4. 'ttes' → logprob: -7.00665283203125
    5. '```' → logprob: -7.00665283203125
    6. 'i' → logprob: -7.75665283203125
    7. 'lles' → logprob: -8.63165283203125
    8. 'ill' → logprob: -8.88165283203125
    9. '#' → logprob: -9.38165283203125
    10. 'tte' → logprob: -9.50665283203125

Token 108: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.12626314163208008
    2. 'de' → logprob: -2.25126314163208
    3. ' ' → logprob: -5.00126314163208
    4. ',' → logprob: -5.87626314163208
    5. '1' → logprob: -6.12626314163208
    6. ' ,' → logprob: -7.50126314163208
    7. ' d' → logprob: -7.62626314163208
    8. '_' → logprob: -8.376262664794922
    9. 'd' → logprob: -8.501262664794922
    10. '_de' → logprob: -9.876262664794922

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3164013624191284
    2. ' ' → logprob: -1.6914013624191284
    3. 'b' → logprob: -2.941401481628418
    4. ' boute' → logprob: -3.566401481628418
    5. ' b' → logprob: -6.691401481628418
    6. '```' → logprob: -7.128901481628418
    7. ' litres' → logprob: -7.128901481628418
    8. ' bouteille' → logprob: -7.378901481628418
    9. 'lit' → logprob: -7.878901481628418
    10. ' litre' → logprob: -8.753901481628418

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001044955221004784
    2. 'lit' → logprob: -7.126044750213623
    3. 'un' → logprob: -9.751045227050781
    4. ' ' → logprob: -10.126045227050781
    5. '```' → logprob: -10.126045227050781
    6. '100' → logprob: -10.251045227050781
    7. 'b' → logprob: -11.313545227050781
    8. 'l' → logprob: -11.313545227050781
    9. '500' → logprob: -12.813545227050781
    10. 'grand' → logprob: -13.001045227050781

Token 111: ' litre' (ID: 118636)
  Prédit: ' litre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' litre' → logprob: -0.47334229946136475
    2. '_l' → logprob: -1.3483422994613647
    3. 'lit' → logprob: -2.3483424186706543
    4. ' litro' → logprob: -4.973342418670654
    5. ' ' → logprob: -5.223342418670654
    6. '_' → logprob: -5.348342418670654
    7. ' litres' → logprob: -6.598342418670654
    8. ' лит' → logprob: -6.973342418670654
    9. ' ' → logprob: -7.223342418670654
    10. 'l' → logprob: -7.973342418670654

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04898484796285629
    2. ' ,' → logprob: -3.0489847660064697
    3. ',
' → logprob: -8.67398452758789
    4. 'b' → logprob: -9.92398452758789
    5. ':' → logprob: -10.17398452758789
    6. ' i' → logprob: -10.92398452758789
    7. ',b' → logprob: -11.04898452758789
    8. ' ' → logprob: -11.17398452758789
    9. 's' → logprob: -11.17398452758789
    10. ' ,
' → logprob: -11.54898452758789

Token 113: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.006982237100601196
    2. 'on' → logprob: -5.881982326507568
    3. ' calcul' → logprob: -6.256982326507568
    4. '#' → logprob: -6.506982326507568
    5. ' #' → logprob: -7.881982326507568
    6. ' je' → logprob: -8.88198184967041
    7. ' ' → logprob: -9.88198184967041
    8. 'calcul' → logprob: -10.25698184967041
    9. ' ' → logprob: -10.63198184967041
    10. ' nous' → logprob: -10.88198184967041

Token 114: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.019343171268701553
    2. 'cal' → logprob: -4.519343376159668
    3. 'calc' → logprob: -5.144343376159668
    4. ' calcul' → logprob: -6.519343376159668
    5. 'calcul' → logprob: -8.144343376159668
    6. ' dé' → logprob: -8.644343376159668
    7. ' cal' → logprob: -8.769343376159668
    8. ' calculate' → logprob: -10.019343376159668
    9. 'dé' → logprob: -10.019343376159668
    10. 'calculate' → logprob: -10.269343376159668

Token 115: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0014641504967585206
    2. '#' → logprob: -7.876464366912842
    3. 'le' → logprob: -7.876464366912842
    4. 'cule' → logprob: -8.126463890075684
    5. 'ul' → logprob: -9.251463890075684
    6. 'uler' → logprob: -10.501463890075684
    7. 'l' → logprob: -10.876463890075684
    8. 'ère' → logprob: -11.001463890075684
    9. 'ure' → logprob: -11.001463890075684
    10. '\' → logprob: -11.126463890075684

Token 116: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.03177841752767563
    2. 'le' → logprob: -3.656778335571289
    3. ' combien' → logprob: -5.656778335571289
    4. ' la' → logprob: -7.031778335571289
    5. ' l' → logprob: -8.406778335571289
    6. ' ' → logprob: -8.531778335571289
    7. 'nombre' → logprob: -8.781778335571289
    8. ' les' → logprob: -8.906778335571289
    9. 'l' → logprob: -9.281778335571289
    10. ' nombre' → logprob: -9.281778335571289

Token 117: ' quantité' (ID: 89219)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.3312680721282959
    2. ' nombre' → logprob: -1.456268072128296
    3. ' quantité' → logprob: -3.706268072128296
    4. 'co' → logprob: -5.206268310546875
    5. ' coût' → logprob: -5.956268310546875
    6. ' volume' → logprob: -5.956268310546875
    7. '#' → logprob: -5.956268310546875
    8. ' #' → logprob: -6.081268310546875
    9. 'volume' → logprob: -6.331268310546875
    10. 'quant' → logprob: -6.456268310546875

Token 118: ' restante' (ID: 130202)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10716620087623596
    2. 'de' → logprob: -3.482166290283203
    3. ' d' → logprob: -3.607166290283203
    4. ' nécessaire' → logprob: -4.107166290283203
    5. ' possible' → logprob: -4.857166290283203
    6. ' ' → logprob: -5.232166290283203
    7. ' restante' → logprob: -6.107166290283203
    8. ' totale' → logprob: -6.232166290283203
    9. ' supplémentaire' → logprob: -6.482166290283203
    10. 'possible' → logprob: -6.607166290283203

Token 119: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1738126277923584
    2. ' d' → logprob: -3.0488126277923584
    3. ' de' → logprob: -3.2988126277923584
    4. 'à' → logprob: -3.2988126277923584
    5. ' ' → logprob: -3.7988126277923584
    6. 'd' → logprob: -5.2988128662109375
    7. 'de' → logprob: -5.5488128662109375
    8. '#' → logprob: -6.2988128662109375
    9. ' nécessaire' → logprob: -6.7988128662109375
    10. ' #' → logprob: -7.0488128662109375

Token 120: ' couvrir' (ID: 197187)
  Prédit: ' acheter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acheter' → logprob: -0.6871033310890198
    2. ' couvrir' → logprob: -1.312103271484375
    3. 'acheter' → logprob: -1.562103271484375
    4. ' remplir' → logprob: -4.187103271484375
    5. ' compléter' → logprob: -6.812103271484375
    6. ' comb' → logprob: -7.937103271484375
    7. 'com' → logprob: -8.437103271484375
    8. ' payer' → logprob: -8.937103271484375
    9. '```' → logprob: -9.062103271484375
    10. ' fournir' → logprob: -9.312103271484375

Token 121: '.
' (ID: 558)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.31261327862739563
    2. ' avec' → logprob: -1.8126132488250732
    3. ' ' → logprob: -3.1876132488250732
    4. ',' → logprob: -3.5626132488250732
    5. ' de' → logprob: -4.187613487243652
    6. ' d' → logprob: -5.687613487243652
    7. ' ,' → logprob: -5.937613487243652
    8. ' en' → logprob: -6.187613487243652
    9. ' à' → logprob: -6.187613487243652
    10. 'par' → logprob: -6.312613487243652

Token 122: '#' (ID: 2)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1224894523620605
    2. ' ' → logprob: -1.6224894523620605
    3. 'for' → logprob: -1.7474894523620605
    4. '```' → logprob: -2.6224894523620605
    5. '#' → logprob: -2.7474894523620605
    6. ',' → logprob: -3.3724894523620605
    7. 'n' → logprob: -3.4974894523620605
    8. ' #' → logprob: -3.6224894523620605
    9. '100' → logprob: -4.7474894523620605
    10. 'b' → logprob: -4.9974894523620605

Token 123: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6976177096366882
    2. 'for' → logprob: -1.447617769241333
    3. '#' → logprob: -2.447617769241333
    4. 'n' → logprob: -3.197617769241333
    5. ' #' → logprob: -3.197617769241333
    6. ' n' → logprob: -3.322617769241333
    7. ' max' → logprob: -3.947617769241333
    8. ' ' → logprob: -4.697617530822754
    9. '```' → logprob: -4.697617530822754
    10. 'b' → logprob: -4.947617530822754

Token 124: ' On' (ID: 2160)
  Prédit: ' On'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' On' → logprob: -0.8035849928855896
    2. '#' → logprob: -1.6785850524902344
    3. ' for' → logprob: -1.9285850524902344
    4. 'for' → logprob: -2.4285850524902344
    5. 'On' → logprob: -2.5535850524902344
    6. ' #' → logprob: -3.6785850524902344
    7. ' on' → logprob: -4.803585052490234
    8. ' Ensuite' → logprob: -5.178585052490234
    9. 'Pour' → logprob: -5.553585052490234
    10. 'Calcul' → logprob: -5.803585052490234

Token 125: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.03269558399915695
    2. 'cal' → logprob: -4.532695770263672
    3. 'calc' → logprob: -4.907695770263672
    4. ' utilise' → logprob: -5.907695770263672
    5. ' complète' → logprob: -6.032695770263672
    6. ' essa' → logprob: -6.657695770263672
    7. ' calcul' → logprob: -7.032695770263672
    8. ' continue' → logprob: -7.282695770263672
    9. ' teste' → logprob: -7.407695770263672
    10. ' cal' → logprob: -7.407695770263672

Token 126: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -9.496052371105179e-05
    2. 'ul' → logprob: -9.75009536743164
    3. 'cule' → logprob: -10.37509536743164
    4. 'uler' → logprob: -13.62509536743164
    5. 'ulé' → logprob: -13.62509536743164
    6. '#' → logprob: -13.75009536743164
    7. 'ulte' → logprob: -14.00009536743164
    8. 'ulate' → logprob: -15.50009536743164
    9. 'уле' → logprob: -16.00009536743164
    10. 'ules' → logprob: -16.12509536743164

Token 127: ' alors' (ID: 17971)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.004150818567723036
    2. 'le' → logprob: -6.504150867462158
    3. ' combien' → logprob: -6.504150867462158
    4. ' la' → logprob: -7.254150867462158
    5. ' les' → logprob: -9.004150390625
    6. ' ' → logprob: -10.004150390625
    7. ' ' → logprob: -10.004150390625
    8. ' alors' → logprob: -10.379150390625
    9. ' ensuite' → logprob: -10.379150390625
    10. ' nombre' → logprob: -10.754150390625

Token 128: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.01481311209499836
    2. 'le' → logprob: -4.51481294631958
    3. ' combien' → logprob: -5.76481294631958
    4. ' la' → logprob: -8.889813423156738
    5. 'nombre' → logprob: -8.889813423156738
    6. ' nombre' → logprob: -8.889813423156738
    7. ' ' → logprob: -9.764813423156738
    8. ' les' → logprob: -10.389813423156738
    9. '#' → logprob: -11.014813423156738
    10. '_le' → logprob: -11.139813423156738

Token 129: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5236116051673889
    2. ' nombre' → logprob: -0.8986116051673889
    3. 'nb' → logprob: -8.648612022399902
    4. ' nb' → logprob: -9.523612022399902
    5. '#' → logprob: -9.773612022399902
    6. ' #' → logprob: -10.523612022399902
    7. '```' → logprob: -10.898612022399902
    8. ' nombres' → logprob: -11.148612022399902
    9. 'co' → logprob: -11.398612022399902
    10. 'minimum' → logprob: -11.523612022399902

Token 130: ' minimal' (ID: 19957)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0045607807114720345
    2. 'de' → logprob: -6.004560947418213
    3. ' nécessaire' → logprob: -6.879560947418213
    4. ' ' → logprob: -8.379560470581055
    5. ' d' → logprob: -8.879560470581055
    6. '#' → logprob: -8.879560470581055
    7. ' minimal' → logprob: -9.254560470581055
    8. '_' → logprob: -9.379560470581055
    9. '_de' → logprob: -9.754560470581055
    10. ' ' → logprob: -9.879560470581055

Token 131: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.00978076085448265
    2. 'de' → logprob: -5.6347808837890625
    3. ' ' → logprob: -6.1347808837890625
    4. ' d' → logprob: -6.1347808837890625
    5. '_' → logprob: -7.2597808837890625
    6. ' nécessaire' → logprob: -7.2597808837890625
    7. '_de' → logprob: -9.259780883789062
    8. '#' → logprob: -9.759780883789062
    9. ' ' → logprob: -9.759780883789062
    10. 'd' → logprob: -9.884780883789062

Token 132: ' boute' (ID: 110289)
  Prédit: ' boute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boute' → logprob: -0.07070434093475342
    2. 'b' → logprob: -2.695704460144043
    3. ' ' → logprob: -7.570704460144043
    4. ' bott' → logprob: -9.570704460144043
    5. ' bouteille' → logprob: -9.695704460144043
    6. ' b' → logprob: -9.945704460144043
    7. '	b' → logprob: -10.570704460144043
    8. ' ' → logprob: -11.445704460144043
    9. ' bottles' → logprob: -11.820704460144043
    10. '```' → logprob: -12.070704460144043

Token 133: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -0.00044044392416253686
    2. 'ill' → logprob: -9.00044059753418
    3. 't' → logprob: -9.37544059753418
    4. 'i' → logprob: -10.00044059753418
    5. '```' → logprob: -10.12544059753418
    6. 'ille' → logprob: -10.75044059753418
    7. '#' → logprob: -11.12544059753418
    8. '``' → logprob: -11.37544059753418
    9. 'e' → logprob: -11.50044059753418
    10. '>' → logprob: -11.62544059753418

Token 134: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.14625947177410126
    2. 'de' → logprob: -2.0212595462799072
    3. 'd' → logprob: -6.521259307861328
    4. ' d' → logprob: -6.896259307861328
    5. ' ' → logprob: -7.396259307861328
    6. ' demi' → logprob: -8.896259307861328
    7. '0' → logprob: -10.146259307861328
    8. '500' → logprob: -10.146259307861328
    9. '#' → logprob: -10.396259307861328
    10. '50' → logprob: -10.521259307861328

Token 135: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38762617111206055
    2. ' ' → logprob: -1.1376261711120605
    3. '500' → logprob: -7.2626261711120605
    4. '```' → logprob: -10.637626647949219
    5. ' demi' → logprob: -11.137626647949219
    6. ' ' → logprob: -13.575126647949219
    7. 'b' → logprob: -13.700126647949219
    8. ' half' → logprob: -13.887626647949219
    9. '  ' → logprob: -13.887626647949219
    10. '50' → logprob: -13.887626647949219

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001156770158559084
    2. ' ' → logprob: -7.001156806945801
    3. '500' → logprob: -8.5011568069458
    4. '```' → logprob: -10.2511568069458
    5. ' ' → logprob: -13.4386568069458
    6. 'dem' → logprob: -13.9386568069458
    7. '   ' → logprob: -14.3761568069458
    8. '.' → logprob: -15.1886568069458
    9. 'import' → logprob: -15.3136568069458
    10. '`' → logprob: -15.3761568069458

Token 137: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0012433248339220881
    2. ' point' → logprob: -7.5012431144714355
    3. 'point' → logprob: -8.126243591308594
    4. ',' → logprob: -8.626243591308594
    5. ' .' → logprob: -9.626243591308594
    6. '500' → logprob: -10.126243591308594
    7. ' ' → logprob: -10.251243591308594
    8. '_point' → logprob: -11.001243591308594
    9. '.point' → logprob: -11.001243591308594
    10. '-point' → logprob: -11.751243591308594

Token 138: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00844944640994072
    2. '.' → logprob: -4.883449554443359
    3. '500' → logprob: -7.633449554443359
    4. 'lit' → logprob: -9.25844955444336
    5. 'point' → logprob: -9.25844955444336
    6. '50' → logprob: -10.25844955444336
    7. ',' → logprob: -10.38344955444336
    8. ' ' → logprob: -10.50844955444336
    9. ' litre' → logprob: -10.88344955444336
    10. 'liter' → logprob: -12.00844955444336

Token 139: ' litre' (ID: 118636)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.25189536809921265
    2. ' litre' → logprob: -2.0018954277038574
    3. 'lit' → logprob: -2.6268954277038574
    4. '_' → logprob: -4.751895427703857
    5. 'l' → logprob: -6.376895427703857
    6. '-l' → logprob: -6.501895427703857
    7. 'L' → logprob: -6.751895427703857
    8. ' ' → logprob: -8.0018949508667
    9. ' litro' → logprob: -8.0018949508667
    10. '  
' → logprob: -8.2518949508667

Token 140: ' nécessaires' (ID: 74402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4728720784187317
    2. ',' → logprob: -2.347872018814087
    3. ' (' → logprob: -2.347872018814087
    4. 's' → logprob: -3.347872018814087
    5. ' à' → logprob: -3.722872018814087
    6. '1' → logprob: -3.972872018814087
    7. ' ,' → logprob: -4.222872257232666
    8. '.' → logprob: -4.347872257232666
    9. 'import' → logprob: -4.597872257232666
    10. '0' → logprob: -4.722872257232666

Token 141: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8115788698196411
    2. ' ' → logprob: -1.1865788698196411
    3. ' ,' → logprob: -2.5615787506103516
    4. '.' → logprob: -3.3115787506103516
    5. ':' → logprob: -3.4365787506103516
    6. ' pour' → logprob: -3.6865787506103516
    7. ' afin' → logprob: -4.061578750610352
    8. ' :' → logprob: -4.061578750610352
    9. ' (' → logprob: -4.436578750610352
    10. 's' → logprob: -5.061578750610352

Token 142: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3187195658683777
    2. ' pour' → logprob: -1.8187196254730225
    3. ' )' → logprob: -3.0687196254730225
    4. 'pour' → logprob: -3.0687196254730225
    5. ' en' → logprob: -5.693719387054443
    6. '),' → logprob: -6.068719387054443
    7. ').' → logprob: -6.193719387054443
    8. ' afin' → logprob: -6.318719387054443
    9. ' à' → logprob: -6.443719387054443
    10. ')
' → logprob: -6.818719387054443

Token 143: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.0935018062591553
    2. 'util' → logprob: -1.4685018062591553
    3. 'import' → logprob: -1.8435018062591553
    4. ' utilisant' → logprob: -1.8435018062591553
    5. 'div' → logprob: -2.5935018062591553
    6. ' arr' → logprob: -3.9685018062591553
    7. '```' → logprob: -5.218502044677734
    8. ' divis' → logprob: -5.718502044677734
    9. ' prenant' → logprob: -5.843502044677734
    10. 'aj' → logprob: -5.968502044677734

Token 144: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.3140561878681183
    2. 'ondi' → logprob: -1.314056158065796
    3. 'ondissement' → logprob: -7.314056396484375
    4. 'on' → logprob: -9.439056396484375
    5. 'ont' → logprob: -11.689056396484375
    6. 'онд' → logprob: -11.939056396484375
    7. '\' → logprob: -12.439056396484375
    8. '```' → logprob: -12.564056396484375
    9. '>' → logprob: -12.814056396484375
    10. 'ondo' → logprob: -12.939056396484375

Token 145: 'issant' (ID: 31359)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31001779437065125
    2. 'issant' → logprob: -1.4350178241729736
    3. 'is' → logprob: -3.8100178241729736
    4. 'd' → logprob: -6.1850175857543945
    5. 'issage' → logprob: -7.1850175857543945
    6. 'ant' → logprob: -7.5600175857543945
    7. 'ies' → logprob: -7.9350175857543945
    8. 'dis' → logprob: -7.9350175857543945
    9. '```' → logprob: -8.185017585754395
    10. 'ie' → logprob: -8.310017585754395

Token 146: ' vers' (ID: 3640)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.32639703154563904
    2. 'à' → logprob: -1.7013970613479614
    3. ' ' → logprob: -2.951396942138672
    4. ' vers' → logprob: -3.951396942138672
    5. '   ' → logprob: -4.451396942138672
    6. ' au' → logprob: -5.201396942138672
    7. 'au' → logprob: -5.451396942138672
    8. ' ' → logprob: -7.076396942138672
    9. '```' → logprob: -7.451396942138672
    10. '  ' → logprob: -7.701396942138672

Token 147: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.11356022953987122
    2. 'l' → logprob: -3.738560199737549
    3. ' ' → logprob: -4.113560199737549
    4. '```' → logprob: -4.238560199737549
    5. '   ' → logprob: -4.738560199737549
    6. '           ' → logprob: -5.238560199737549
    7. 'haut' → logprob: -5.488560199737549
    8. '+' → logprob: -5.738560199737549
    9. '``' → logprob: -5.738560199737549
    10. '_' → logprob: -5.863560199737549

Token 148: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.002854328602552414
    2. 'ha' → logprob: -6.377854347229004
    3. '```' → logprob: -7.252854347229004
    4. 'sup' → logprob: -9.252854347229004
    5. '   ' → logprob: -9.627854347229004
    6. '``' → logprob: -10.252854347229004
    7. ' haut' → logprob: -10.252854347229004
    8. '+' → logprob: -10.752854347229004
    9. 'H' → logprob: -10.877854347229004
    10. 'au' → logprob: -10.877854347229004

Token 149: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28522971272468567
    2. ' )' → logprob: -1.4102296829223633
    3. ').' → logprob: -6.285229682922363
    4. '),' → logprob: -6.910229682922363
    5. ' ),' → logprob: -7.410229682922363
    6. ' ).' → logprob: -8.160229682922363
    7. ' pour' → logprob: -8.535229682922363
    8. ' afin' → logprob: -10.285229682922363
    9. ')#' → logprob: -10.910229682922363
    10. ' à' → logprob: -11.160229682922363

Token 150: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1894000768661499
    2. '```' → logprob: -2.5644001960754395
    3. 'import' → logprob: -3.9394001960754395
    4. ' 
' → logprob: -4.4394001960754395
    5. 'n' → logprob: -4.6894001960754395
    6. '#' → logprob: -4.8144001960754395
    7. ' ' → logprob: -4.9394001960754395
    8. '0' → logprob: -5.0644001960754395
    9. 'x' → logprob: -5.1894001960754395
    10. ' def' → logprob: -5.4394001960754395

Token 151: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6075460910797119
    2. '```' → logprob: -1.232546091079712
    3. 'import' → logprob: -3.357546091079712
    4. '#' → logprob: -3.607546091079712
    5. 'x' → logprob: -3.857546091079712
    6. 'n' → logprob: -3.982546091079712
    7. ' 
' → logprob: -4.232545852661133
    8. 'b' → logprob: -4.357545852661133
    9. ' ' → logprob: -5.482545852661133
    10. ' def' → logprob: -5.482545852661133

Token 152: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09388164430856705
    2. ' #' → logprob: -2.718881607055664
    3. ' for' → logprob: -5.218881607055664
    4. 'def' → logprob: -5.468881607055664
    5. 'for' → logprob: -5.468881607055664
    6. ' min' → logprob: -6.343881607055664
    7. 'min' → logprob: -6.593881607055664
    8. ' cost' → logprob: -6.843881607055664
    9. 'from' → logprob: -7.218881607055664
    10. ' def' → logprob: -7.343881607055664

Token 153: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.0031339896377176046
    2. ' compare' → logprob: -6.753133773803711
    3. 'calc' → logprob: -7.878133773803711
    4. 'cal' → logprob: -8.003133773803711
    5. ' calcul' → logprob: -8.378133773803711
    6. '#' → logprob: -8.378133773803711
    7. 'compare' → logprob: -8.628133773803711
    8. ' continue' → logprob: -8.878133773803711
    9. ' vér' → logprob: -9.253133773803711
    10. ' #' → logprob: -9.753133773803711

Token 154: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -6.20603168499656e-05
    2. 'cule' → logprob: -10.000061988830566
    3. 'ul' → logprob: -11.625061988830566
    4. 'ulé' → logprob: -12.875061988830566
    5. 'uler' → logprob: -14.000061988830566
    6. 'u' → logprob: -14.250061988830566
    7. '_' → logprob: -14.625061988830566
    8. '```' → logprob: -14.875061988830566
    9. ' ule' → logprob: -15.000061988830566
    10. 'уле' → logprob: -15.125061988830566

Token 155: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.011972910724580288
    2. ' ' → logprob: -5.511972904205322
    3. 'le' → logprob: -5.636972904205322
    4. ' l' → logprob: -6.261972904205322
    5. ' la' → logprob: -6.761972904205322
    6. ' les' → logprob: -7.511972904205322
    7. ' ' → logprob: -8.63697338104248
    8. ',' → logprob: -9.63697338104248
    9. ' un' → logprob: -9.76197338104248
    10. '_le' → logprob: -10.13697338104248

Token 156: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -0.6423953771591187
    2. 'co' → logprob: -0.7673953771591187
    3. ' co' → logprob: -5.642395496368408
    4. ' prix' → logprob: -6.517395496368408
    5. 'prix' → logprob: -6.642395496368408
    6. 'cout' → logprob: -7.017395496368408
    7. 'cost' → logprob: -7.142395496368408
    8. ' cout' → logprob: -7.142395496368408
    9. 'c' → logprob: -8.76739501953125
    10. ' cost' → logprob: -8.76739501953125

Token 157: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.03523383289575577
    2. 'total' → logprob: -3.410233736038208
    3. '_total' → logprob: -6.535233974456787
    4. ' minimal' → logprob: -10.285233497619629
    5. ' totale' → logprob: -10.410233497619629
    6. ' final' → logprob: -11.285233497619629
    7. ' minimum' → logprob: -11.285233497619629
    8. ' complet' → logprob: -11.410233497619629
    9. '(total' → logprob: -11.660233497619629
    10. '#' → logprob: -12.035233497619629

Token 158: ' pour' (ID: 1930)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7876873016357422
    2. ' =' → logprob: -1.2876873016357422
    3. 'total' → logprob: -1.9126873016357422
    4. ',' → logprob: -3.162687301635742
    5. '#' → logprob: -4.162687301635742
    6. '=' → logprob: -4.787687301635742
    7. ':' → logprob: -5.037687301635742
    8. '.' → logprob: -5.037687301635742
    9. ' pour' → logprob: -5.162687301635742
    10. '_total' → logprob: -5.287687301635742

Token 159: ' cette' (ID: 7696)
  Prédit: ' cette'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cette' → logprob: -0.9667418003082275
    2. ' chaque' → logprob: -0.9667418003082275
    3. ' ce' → logprob: -1.8417418003082275
    4. ' ces' → logprob: -3.4667418003082275
    5. 'ces' → logprob: -3.4667418003082275
    6. 'ce' → logprob: -4.591741561889648
    7. ' cet' → logprob: -6.091741561889648
    8. 'c' → logprob: -6.091741561889648
    9. 'cet' → logprob: -6.216741561889648
    10. 'cha' → logprob: -8.591741561889648

Token 160: ' combinaison' (ID: 165933)
  Prédit: ' combinaison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinaison' → logprob: -0.10284656286239624
    2. 'comb' → logprob: -3.227846622467041
    3. ' configuration' → logprob: -3.977846622467041
    4. ' solution' → logprob: -4.102846622467041
    5. ' combination' → logprob: -5.102846622467041
    6. ' ' → logprob: -5.352846622467041
    7. ' it' → logprob: -5.977846622467041
    8. ' comb' → logprob: -5.977846622467041
    9. 'configuration' → logprob: -6.352846622467041
    10. 'solution' → logprob: -7.102846622467041

Token 161: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1476147174835205
    2. ':' → logprob: -1.3976147174835205
    3. '#' → logprob: -1.6476147174835205
    4. 's' → logprob: -2.6476147174835205
    5. '.' → logprob: -3.0226147174835205
    6. 'import' → logprob: -3.8976147174835205
    7. 'def' → logprob: -4.272614479064941
    8. ' ' → logprob: -4.272614479064941
    9. ' :' → logprob: -4.272614479064941
    10. '```' → logprob: -4.397614479064941

Token 162: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2743470072746277
    2. '```' → logprob: -2.1493470668792725
    3. 'import' → logprob: -3.5243470668792725
    4. '#' → logprob: -3.7743470668792725
    5. 'n' → logprob: -3.8993470668792725
    6. 'b' → logprob: -4.399346828460693
    7. '
' → logprob: -4.649346828460693
    8. 'for' → logprob: -4.899346828460693
    9. '``' → logprob: -5.774346828460693
    10. 'x' → logprob: -5.899346828460693

Token 163: ' -' (ID: 533)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9049491882324219
    2. 'def' → logprob: -2.654949188232422
    3. 'for' → logprob: -2.779949188232422
    4. ' ' → logprob: -2.779949188232422
    5. ' 
' → logprob: -2.779949188232422
    6. 'n' → logprob: -2.904949188232422
    7. 'b' → logprob: -3.279949188232422
    8. 'x' → logprob: -3.404949188232422
    9. '\n' → logprob: -3.404949188232422
    10. '#' → logprob: -3.404949188232422

Token 164: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6876038312911987
    2. 'min' → logprob: -1.8126038312911987
    3. ' On' → logprob: -1.8126038312911987
    4. 'On' → logprob: -3.0626039505004883
    5. ' min' → logprob: -3.1876039505004883
    6. ' best' → logprob: -3.3126039505004883
    7. 'def' → logprob: -4.062603950500488
    8. 'best' → logprob: -4.187603950500488
    9. ' #' → logprob: -5.187603950500488
    10. ' on' → logprob: -6.312603950500488

Token 165: ' garde' (ID: 65309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.17954212427139282
    2. 'min' → logprob: -3.304542064666748
    3. 'continue' → logprob: -3.679542064666748
    4. ' min' → logprob: -3.679542064666748
    5. ' cherche' → logprob: -3.929542064666748
    6. ' calc' → logprob: -4.304542064666748
    7. ' trouve' → logprob: -4.304542064666748
    8. ' chois' → logprob: -5.304542064666748
    9. ' compare' → logprob: -5.554542064666748
    10. ' best' → logprob: -5.804542064666748

Token 166: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.1763356626033783
    2. ' la' → logprob: -2.426335573196411
    3. '_le' → logprob: -3.676335573196411
    4. 'le' → logprob: -4.17633581161499
    5. '_' → logprob: -4.67633581161499
    6. ' ' → logprob: -4.92633581161499
    7. ' min' → logprob: -5.92633581161499
    8. ' minimum' → logprob: -6.05133581161499
    9. 'min' → logprob: -6.05133581161499
    10. '_min' → logprob: -6.80133581161499

Token 167: ' meilleure' (ID: 52387)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.7198307514190674
    2. 'min' → logprob: -0.8448307514190674
    3. ' minimum' → logprob: -3.2198307514190674
    4. 'me' → logprob: -3.3448307514190674
    5. ' meilleur' → logprob: -5.469830513000488
    6. 'co' → logprob: -6.469830513000488
    7. 'minimal' → logprob: -7.594830513000488
    8. ' minimal' → logprob: -7.719830513000488
    9. ' coût' → logprob: -7.969830513000488
    10. ' min' → logprob: -7.969830513000488

Token 168: ' solution' (ID: 7578)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0392390489578247
    2. '_solution' → logprob: -1.5392390489578247
    3. ' solution' → logprob: -1.9142390489578247
    4. '_comb' → logprob: -2.664238929748535
    5. '_min' → logprob: -3.039238929748535
    6. ' combinaison' → logprob: -3.289238929748535
    7. 'solution' → logprob: -3.664238929748535
    8. ' _' → logprob: -4.414238929748535
    9. '_co' → logprob: -4.539238929748535
    10. ' ' → logprob: -4.539238929748535

Token 169: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42284250259399414
    2. ',' → logprob: -2.422842502593994
    3. '.' → logprob: -2.797842502593994
    4. 's' → logprob: -3.047842502593994
    5. 'import' → logprob: -3.297842502593994
    6. '```' → logprob: -3.422842502593994
    7. 'def' → logprob: -3.922842502593994
    8. ' :' → logprob: -4.297842502593994
    9. 'n' → logprob: -4.672842502593994
    10. '#' → logprob: -4.922842502593994

Token 170: 'co' (ID: 1191)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1288404017686844
    2. ' min' → logprob: -2.503840446472168
    3. ' minimum' → logprob: -3.878840446472168
    4. 'minimum' → logprob: -4.253840446472168
    5. ' minimale' → logprob: -6.253840446472168
    6. ' minimal' → logprob: -7.378840446472168
    7. ' coût' → logprob: -7.753840446472168
    8. 'inf' → logprob: -8.628840446472168
    9. 'co' → logprob: -8.753840446472168
    10. 'au' → logprob: -8.878840446472168

Token 171: 'ût' (ID: 24581)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.4448037147521973
    2. 'r' → logprob: -1.4448037147521973
    3. 'ur' → logprob: -1.9448037147521973
    4. 'n' → logprob: -2.0698037147521973
    5. 'u' → logprob: -2.0698037147521973
    6. 'mp' → logprob: -3.3198037147521973
    7. 'urt' → logprob: -3.9448037147521973
    8. 'l' → logprob: -4.319803714752197
    9. '#' → logprob: -4.694803714752197
    10. '=' → logprob: -4.694803714752197

Token 172: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0655754804611206
    2. 'minimum' → logprob: -1.0655754804611206
    3. '_min' → logprob: -1.5655754804611206
    4. ' minimum' → logprob: -2.56557559967041
    5. ' minimal' → logprob: -4.31557559967041
    6. 'minimal' → logprob: -4.94057559967041
    7. ' minimale' → logprob: -5.94057559967041
    8. ' min' → logprob: -6.94057559967041
    9. 'total' → logprob: -8.31557559967041
    10. ' =' → logprob: -8.81557559967041

Token 173: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2030019909143448
    2. ' )' → logprob: -1.7030019760131836
    3. ').' → logprob: -7.578001976013184
    4. 'possible' → logprob: -7.828001976013184
    5. ' possible' → logprob: -8.328001976013184
    6. ',' → logprob: -8.828001976013184
    7. '_possible' → logprob: -9.703001976013184
    8. ' ).' → logprob: -9.953001976013184
    9. ')#' → logprob: -10.203001976013184
    10. ' )
' → logprob: -10.828001976013184

Token 174: ' trouv' (ID: 40254)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39745432138442993
    2. '
' → logprob: -2.022454261779785
    3. '```' → logprob: -2.147454261779785
    4. ':' → logprob: -3.147454261779785
    5. 'import' → logprob: -4.522454261779785
    6. '

' → logprob: -5.022454261779785
    7. ':
' → logprob: -5.272454261779785
    8. '\n' → logprob: -6.022454261779785
    9. '#' → logprob: -6.397454261779785
    10. '
' → logprob: -6.522454261779785

Token 175: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.49067384004592896
    2. 'é' → logprob: -0.990673840045929
    3. 'e' → logprob: -4.115674018859863
    4. 'è' → logprob: -10.490674018859863
    5. '=' → logprob: -10.740674018859863
    6. 'ie' → logprob: -10.865674018859863
    7. '_' → logprob: -11.240674018859863
    8. 'ee' → logprob: -11.615674018859863
    9. 'е' → logprob: -11.865674018859863
    10. '_e' → logprob: -11.865674018859863

Token 176: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8733590245246887
    2. '
' → logprob: -1.748358964920044
    3. '```' → logprob: -1.748358964920044
    4. '

' → logprob: -2.373358964920044
    5. ':' → logprob: -2.623358964920044
    6. 'import' → logprob: -3.623358964920044
    7. '\n' → logprob: -4.623359203338623
    8. ':
' → logprob: -4.623359203338623
    9. '
' → logprob: -4.873359203338623
    10. '\' → logprob: -6.123359203338623

Token 177: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.045480623841285706
    2. 'X' → logprob: -3.295480728149414
    3. 'n' → logprob: -5.795480728149414
    4. 'import' → logprob: -5.920480728149414
    5. '```' → logprob: -6.670480728149414
    6. '
' → logprob: -9.045480728149414
    7. ' 
' → logprob: -9.420480728149414
    8. '#' → logprob: -9.795480728149414
    9. 'x' → logprob: -10.420480728149414
    10. 'N' → logprob: -10.420480728149414

Token 178: ' Cette' (ID: 27383)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.440506407059729e-05
    2. ' def' → logprob: -11.25003433227539
    3. '```' → logprob: -11.37503433227539
    4. 'import' → logprob: -11.75003433227539
    5. 'class' → logprob: -14.00003433227539
    6. 'from' → logprob: -14.25003433227539
    7. '#' → logprob: -15.25003433227539
    8. 'X' → logprob: -16.12503433227539
    9. 'python' → logprob: -17.37503433227539
    10. 'n' → logprob: -18.12503433227539

Token 179: ' approche' (ID: 102373)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.24314221739768982
    2. ' méthode' → logprob: -2.7431421279907227
    3. ' approche' → logprob: -3.1181421279907227
    4. 'solution' → logprob: -3.6181421279907227
    5. 'mé' → logprob: -4.368142127990723
    6. ' partie' → logprob: -4.368142127990723
    7. 'part' → logprob: -4.493142127990723
    8. 'appro' → logprob: -4.618142127990723
    9. '#' → logprob: -4.618142127990723
    10. 'def' → logprob: -5.368142127990723

Token 180: ' est' (ID: 893)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.9971618056297302
    2. ' est' → logprob: -1.372161865234375
    3. 'def' → logprob: -2.872161865234375
    4. ' continue' → logprob: -3.122161865234375
    5. 'continue' → logprob: -3.247161865234375
    6. 's' → logprob: -3.497161865234375
    7. 'est' → logprob: -3.747161865234375
    8. ':' → logprob: -3.747161865234375
    9. ' fonctionne' → logprob: -3.747161865234375
    10. ' se' → logprob: -3.997161865234375

Token 181: ' efficace' (ID: 54338)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simple' → logprob: -0.8706851005554199
    2. ' efficace' → logprob: -1.87068510055542
    3. ' simple' → logprob: -2.37068510055542
    4. 'optim' → logprob: -2.87068510055542
    5. 'une' → logprob: -2.99568510055542
    6. ' assez' → logprob: -3.74568510055542
    7. ' suffis' → logprob: -3.74568510055542
    8. 'possible' → logprob: -3.99568510055542
    9. 'ex' → logprob: -4.12068510055542
    10. 'br' → logprob: -4.37068510055542

Token 182: ' puisque' (ID: 66135)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.39620620012283325
    2. 'car' → logprob: -2.3962061405181885
    3. ',' → logprob: -2.6462061405181885
    4. ' pour' → logprob: -2.6462061405181885
    5. 'pour' → logprob: -3.5212061405181885
    6. '.' → logprob: -3.8962061405181885
    7. ' et' → logprob: -4.271206378936768
    8. ' parce' → logprob: -5.021206378936768
    9. 'et' → logprob: -5.271206378936768
    10. 'def' → logprob: -5.271206378936768

Token 183: ' X' (ID: 2127)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0096955299377441
    2. 'l' → logprob: -1.1346955299377441
    3. ' le' → logprob: -2.009695529937744
    4. 'le' → logprob: -2.134695529937744
    5. ' la' → logprob: -3.759695529937744
    6. 'la' → logprob: -3.884695529937744
    7. ' les' → logprob: -4.759695529937744
    8. 'les' → logprob: -4.884695529937744
    9. ' nous' → logprob: -7.509695529937744
    10. ' ' → logprob: -8.259695053100586

Token 184: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16918691992759705
    2. '<=' → logprob: -2.79418683052063
    3. ' est' → logprob: -3.04418683052063
    4. ' =' → logprob: -4.544187068939209
    5. ' ' → logprob: -4.669187068939209
    6. ' n' → logprob: -5.294187068939209
    7. ' <' → logprob: -5.294187068939209
    8. ' ≤' → logprob: -5.419187068939209
    9. ' ' → logprob: -6.044187068939209
    10. ' peut' → logprob: -6.419187068939209

Token 185: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3946821391582489
    2. '100' → logprob: -1.1446821689605713
    3. '200' → logprob: -5.519681930541992
    4. ' ' → logprob: -5.769681930541992
    5. '500' → logprob: -8.269681930541992
    6. '300' → logprob: -9.144681930541992
    7. '1' → logprob: -9.269681930541992
    8. '2' → logprob: -10.144681930541992
    9. '150' → logprob: -10.269681930541992
    10. ' ' → logprob: -10.394681930541992

Token 186: '200' (ID: 1179)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22641301155090332
    2. '100' → logprob: -1.6014130115509033
    3. '200' → logprob: -7.851412773132324
    4. ' ' → logprob: -8.101412773132324
    5. '1' → logprob: -8.601412773132324
    6. '500' → logprob: -9.976412773132324
    7. 'int' → logprob: -11.101412773132324
    8. '300' → logprob: -11.226412773132324
    9. '2' → logprob: -11.476412773132324
    10. ' ' → logprob: -11.601412773132324

Token 187: '00' (ID: 504)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.33942678570747375
    2. '
' → logprob: -1.8394267559051514
    3. 'def' → logprob: -2.8394267559051514
    4. 'X' → logprob: -4.0894269943237305
    5. '\n' → logprob: -5.0894269943237305
    6. ' 

' → logprob: -5.0894269943237305
    7. '```' → logprob: -5.0894269943237305
    8. ':' → logprob: -5.7144269943237305
    9. '
 
' → logprob: -5.7144269943237305
    10. 'import' → logprob: -5.8394269943237305

Token 188: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9065533876419067
    2. '
' → logprob: -1.0315533876419067
    3. '

' → logprob: -1.5315533876419067
    4. '```' → logprob: -4.906553268432617
    5. '
' → logprob: -5.031553268432617
    6. 'X' → logprob: -5.656553268432617
    7. '\n' → logprob: -6.156553268432617
    8. '\' → logprob: -7.531553268432617
    9. 'import' → logprob: -7.781553268432617
    10. '

' → logprob: -7.906553268432617

Token 189: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7023659348487854
    2. 'les' → logprob: -1.2023658752441406
    3. 'que' → logprob: -2.8273658752441406
    4. '100' → logprob: -3.0773658752441406
    5. 'le' → logprob: -3.3273658752441406
    6. ' le' → logprob: -3.7023658752441406
    7. ' que' → logprob: -4.452365875244141
    8. 'co' → logprob: -5.202365875244141
    9. ' ' → logprob: -5.952365875244141
    10. 'l' → logprob: -6.077365875244141

Token 190: ' nombre' (ID: 9733)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -1.150117039680481
    2. ' coût' → logprob: -1.400117039680481
    3. ' nombre' → logprob: -2.0251169204711914
    4. ' prix' → logprob: -2.1501169204711914
    5. 'prix' → logprob: -3.1501169204711914
    6. ' #' → logprob: -3.2751169204711914
    7. 'nombre' → logprob: -3.7751169204711914
    8. ' max' → logprob: -4.150116920471191
    9. '#' → logprob: -4.525116920471191
    10. '100' → logprob: -4.775116920471191

Token 191: ' maximum' (ID: 10562)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8113930225372314
    2. ' maximal' → logprob: -0.9363930225372314
    3. ' d' → logprob: -2.5613930225372314
    4. '_' → logprob: -4.061392784118652
    5. '_max' → logprob: -4.436392784118652
    6. '_de' → logprob: -4.436392784118652
    7. ' max' → logprob: -4.561392784118652
    8. ' maximum' → logprob: -4.811392784118652
    9. 'max' → logprob: -4.936392784118652
    10. 'de' → logprob: -5.311392784118652

Token 192: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.12568193674087524
    2. 'de' → logprob: -2.7506818771362305
    3. ' d' → logprob: -3.7506818771362305
    4. '_de' → logprob: -4.3756818771362305
    5. '_' → logprob: -5.0006818771362305
    6. ' ' → logprob: -5.5006818771362305
    7. '#' → logprob: -6.1256818771362305
    8. 'd' → logprob: -6.2506818771362305
    9. '_d' → logprob: -7.0006818771362305
    10. ' possible' → logprob: -7.2506818771362305

Token 193: ' boute' (ID: 110289)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16235916316509247
    2. ' boute' → logprob: -1.9123591184616089
    3. ' ' → logprob: -7.412359237670898
    4. ' litres' → logprob: -8.037359237670898
    5. ' b' → logprob: -8.162359237670898
    6. ' bott' → logprob: -8.662359237670898
    7. '1' → logprob: -9.037359237670898
    8. '```' → logprob: -9.162359237670898
    9. ' bouteille' → logprob: -9.287359237670898
    10. '100' → logprob: -9.537359237670898

Token 194: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -0.006182252429425716
    2. 't' → logprob: -5.5061821937561035
    3. 'ttes' → logprob: -6.8811821937561035
    4. 'lles' → logprob: -8.256182670593262
    5. 'ille' → logprob: -8.381182670593262
    6. '```' → logprob: -8.631182670593262
    7. '#' → logprob: -9.131182670593262
    8. 'ill' → logprob: -9.506182670593262
    9. 'tes' → logprob: -10.256182670593262
    10. 'r' → logprob: -11.131182670593262

Token 195: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.20145437121391296
    2. ' de' → logprob: -2.0764544010162354
    3. 'd' → logprob: -3.3264544010162354
    4. ' d' → logprob: -4.701454162597656
    5. '=' → logprob: -5.576454162597656
    6. '#' → logprob: -6.201454162597656
    7. ' =' → logprob: -6.576454162597656
    8. '1' → logprob: -6.826454162597656
    9. '_' → logprob: -7.576454162597656
    10. 'à' → logprob: -7.701454162597656

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0173712857067585
    2. ' ' → logprob: -4.14237117767334
    3. '100' → logprob: -7.51737117767334
    4. 'un' → logprob: -7.89237117767334
    5. 'lit' → logprob: -8.89237117767334
    6. '```' → logprob: -9.26737117767334
    7. 'une' → logprob: -9.76737117767334
    8. 'l' → logprob: -10.76737117767334
    9. ' un' → logprob: -10.89237117767334
    10. '0' → logprob: -11.45487117767334

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002118023345246911
    2. '100' → logprob: -6.252118110656738
    3. 'lit' → logprob: -9.377118110656738
    4. 'un' → logprob: -10.252118110656738
    5. '```' → logprob: -10.627118110656738
    6. ' ' → logprob: -10.877118110656738
    7. 'l' → logprob: -12.377118110656738
    8. '0' → logprob: -12.502118110656738
    9. '500' → logprob: -12.752118110656738
    10. 'import' → logprob: -13.252118110656738

Token 198: ' litre' (ID: 118636)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lit' → logprob: -0.537594199180603
    2. '_l' → logprob: -1.412594199180603
    3. ' litre' → logprob: -1.787594199180603
    4. '_' → logprob: -6.037594318389893
    5. ' litres' → logprob: -7.037594318389893
    6. ' ' → logprob: -7.537594318389893
    7. 'l' → logprob: -7.912594318389893
    8. ' litro' → logprob: -8.787593841552734
    9. '-l' → logprob: -9.537593841552734
    10. '100' → logprob: -9.537593841552734

Token 199: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6563204526901245
    2. ' à' → logprob: -1.5313204526901245
    3. 'est' → logprob: -2.656320571899414
    4. 'à' → logprob: -2.906320571899414
    5. ' ' → logprob: -3.781320571899414
    6. ' =' → logprob: -4.031320571899414
    7. ' possible' → logprob: -4.156320571899414
    8. 'possible' → logprob: -4.281320571899414
    9. '=' → logprob: -4.406320571899414
    10. 'pe' → logprob: -4.656320571899414

Token 200: ' au' (ID: 2791)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.9355936050415039
    2. ' X' → logprob: -1.435593605041504
    3. ' (' → logprob: -1.560593605041504
    4. '20' → logprob: -2.310593605041504
    5. '(X' → logprob: -3.935593605041504
    6. ' ' → logprob: -4.310593605041504
    7. '21' → logprob: -4.435593605041504
    8. ' int' → logprob: -5.185593605041504
    9. 'int' → logprob: -5.685593605041504
    10. '(' → logprob: -6.685593605041504

Token 201: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8068961501121521
    2. 'plus' → logprob: -0.8068961501121521
    3. 'maximum' → logprob: -2.306896209716797
    4. 'moins' → logprob: -5.306896209716797
    5. 'minimum' → logprob: -6.306896209716797
    6. '+' → logprob: -7.681896209716797
    7. 'most' → logprob: -8.431896209716797
    8. '#' → logprob: -10.056896209716797
    9. 'p' → logprob: -10.056896209716797
    10. ' plus' → logprob: -10.056896209716797

Token 202: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.3582640588283539
    2. '20' → logprob: -1.2332640886306763
    3. ' ' → logprob: -4.858263969421387
    4. 'X' → logprob: -6.858263969421387
    5. ' (' → logprob: -8.233263969421387
    6. '22' → logprob: -8.733263969421387
    7. '(X' → logprob: -8.733263969421387
    8. '25' → logprob: -9.233263969421387
    9. ' X' → logprob: -9.358263969421387
    10. '(' → logprob: -9.983263969421387

Token 203: '20' (ID: 455)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.08981788158416748
    2. '20' → logprob: -2.464818000793457
    3. ' ' → logprob: -7.589818000793457
    4. '(' → logprob: -8.464818000793457
    5. 'X' → logprob: -9.839818000793457
    6. '((' → logprob: -10.714818000793457
    7. '(X' → logprob: -11.089818000793457
    8. '22' → logprob: -11.214818000793457
    9. '200' → logprob: -11.339818000793457
    10. '25' → logprob: -11.464818000793457

Token 204: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8517343401908875
    2. ':' → logprob: -2.1017343997955322
    3. 's' → logprob: -2.2267343997955322
    4. '
' → logprob: -2.7267343997955322
    5. '```' → logprob: -2.7267343997955322
    6. '#' → logprob: -3.1017343997955322
    7. 'X' → logprob: -3.2267343997955322
    8. ':
' → logprob: -3.6017343997955322
    9. 'n' → logprob: -3.9767343997955322
    10. ',' → logprob: -4.226734161376953

Token 205: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.694766489090398e-05
    2. ' def' → logprob: -10.625066757202148
    3. '```' → logprob: -10.875066757202148
    4. 'X' → logprob: -11.875066757202148
    5. '
' → logprob: -12.000066757202148
    6. ' 
' → logprob: -12.625066757202148
    7. 'n' → logprob: -12.750066757202148
    8. 'import' → logprob: -13.750066757202148
    9. 'x' → logprob: -14.375066757202148
    10. '  
' → logprob: -14.500066757202148

Token 206: ' main' (ID: 2758)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.0976032018661499
    2. 'min' → logprob: -3.0976033210754395
    3. ' minimum' → logprob: -3.7226033210754395
    4. ' minimal' → logprob: -4.7226033210754395
    5. ' find' → logprob: -5.7226033210754395
    6. ' solution' → logprob: -6.0976033210754395
    7. ' minimize' → logprob: -6.7226033210754395
    8. ' cost' → logprob: -6.7226033210754395
    9. ' solve' → logprob: -6.9726033210754395
    10. ' get' → logprob: -7.0976033210754395

Token 207: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00027480217977426946
    2. ' ():' → logprob: -8.250274658203125
    3. '()' → logprob: -11.625274658203125
    4. '(' → logprob: -12.750274658203125
    5. '():
' → logprob: -13.500274658203125
    6. ' ()' → logprob: -15.500274658203125
    7. '(":' → logprob: -17.250274658203125
    8. ' (' → logprob: -17.375274658203125
    9. '_' → logprob: -17.500274658203125
    10. ':' → logprob: -17.625274658203125

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14773543179035187
    2. ' 
' → logprob: -2.147735357284546
    3. '    
' → logprob: -4.772735595703125
    4. ' ' → logprob: -5.522735595703125
    5. ' X' → logprob: -5.647735595703125
    6. '
' → logprob: -6.897735595703125
    7. 'X' → logprob: -7.522735595703125
    8. '  
' → logprob: -7.522735595703125
    9. '   
' → logprob: -8.147735595703125
    10. ' ' → logprob: -8.397735595703125

Token 209: ' #' (ID: 1069)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.7633530497550964
    2. '   ' → logprob: -1.3883531093597412
    3. 'X' → logprob: -1.5133531093597412
    4. 'x' → logprob: -4.013352870941162
    5. ' import' → logprob: -4.013352870941162
    6. ' x' → logprob: -4.138352870941162
    7. 'import' → logprob: -4.513352870941162
    8. ' ' → logprob: -7.388352870941162
    9. ' n' → logprob: -8.51335334777832
    10. 'n' → logprob: -8.88835334777832

Token 210: ' Lecture' (ID: 106534)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.7577478885650635
    2. 'X' → logprob: -1.1327478885650635
    3. '   ' → logprob: -2.0077478885650635
    4. 'x' → logprob: -3.2577478885650635
    5. ' x' → logprob: -4.132747650146484
    6. 'import' → logprob: -4.507747650146484
    7. ' import' → logprob: -4.882747650146484
    8. ' input' → logprob: -7.257747650146484
    9. 'input' → logprob: -7.882747650146484
    10. ' ' → logprob: -8.507747650146484

Token 211: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09221893548965454
    2. '   ' → logprob: -2.7172188758850098
    3. ' =' → logprob: -4.09221887588501
    4. '()
' → logprob: -6.71721887588501
    5. ' des' → logprob: -7.09221887588501
    6. '():' → logprob: -7.21721887588501
    7. ' X' → logprob: -7.71721887588501
    8. ' de' → logprob: -7.84221887588501
    9. ' la' → logprob: -8.342219352722168
    10. ' ' → logprob: -8.342219352722168

Token 212: ' entr' (ID: 7072)
  Prédit: ' inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inputs' → logprob: -0.9307935237884521
    2. 'X' → logprob: -1.9307935237884521
    3. ' données' → logprob: -2.305793523788452
    4. 'inputs' → logprob: -2.305793523788452
    5. ' X' → logprob: -2.805793523788452
    6. 'x' → logprob: -3.430793523788452
    7. ' entr' → logprob: -3.555793523788452
    8. 'entr' → logprob: -3.930793523788452
    9. ' ' → logprob: -3.930793523788452
    10. 'val' → logprob: -4.055793762207031

Token 213: 'ées' (ID: 5161)
  Prédit: 'ees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ees' → logprob: -0.06048661097884178
    2. 'ées' → logprob: -2.9354865550994873
    3. 'rees' → logprob: -6.310486793518066
    4. 'es' → logprob: -6.435486793518066
    5. 'ies' → logprob: -7.060486793518066
    6. 'e' → logprob: -7.810486793518066
    7. '   ' → logprob: -7.935486793518066
    8. '#' → logprob: -9.185486793518066
    9. 'ée' → logprob: -9.685486793518066
    10. 'r' → logprob: -9.685486793518066

Token 214: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018549401313066483
    2. '    
' → logprob: -4.39354944229126
    3. ' 
' → logprob: -6.01854944229126
    4. 'X' → logprob: -7.26854944229126
    5. '   
' → logprob: -7.51854944229126
    6. ' X' → logprob: -7.76854944229126
    7. 'x' → logprob: -7.89354944229126
    8. '  
' → logprob: -8.018548965454102
    9. ',' → logprob: -8.518548965454102
    10. 'n' → logprob: -8.768548965454102

Token 215: ' prix' (ID: 18771)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.3742751181125641
    2. ' x' → logprob: -1.6242750883102417
    3. '   ' → logprob: -2.6242752075195312
    4. 'X' → logprob: -3.8742752075195312
    5. 'x' → logprob: -3.8742752075195312
    6. ' n' → logprob: -7.624275207519531
    7. ' ' → logprob: -9.124275207519531
    8. ' import' → logprob: -9.124275207519531
    9. '	x' → logprob: -9.499275207519531
    10. 'n' → logprob: -9.624275207519531

Token 216: ' A' (ID: 355)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22414813935756683
    2. '1' → logprob: -2.0991480350494385
    3. '_un' → logprob: -3.2241480350494385
    4. '_b' → logprob: -4.224148273468018
    5. '_l' → logprob: -4.349148273468018
    6. ' =' → logprob: -6.599148273468018
    7. 'A' → logprob: -6.849148273468018
    8. '_uni' → logprob: -6.849148273468018
    9. '_L' → logprob: -7.099148273468018
    10. '_B' → logprob: -7.099148273468018

Token 217: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8445102572441101
    2. '_' → logprob: -0.8445102572441101
    3. '1' → logprob: -2.094510316848755
    4. '_un' → logprob: -5.094510078430176
    5. '_l' → logprob: -5.469510078430176
    6. '_b' → logprob: -5.969510078430176
    7. ' ,' → logprob: -7.219510078430176
    8. 'A' → logprob: -7.219510078430176
    9. '_large' → logprob: -7.719510078430176
    10. '_et' → logprob: -8.094510078430176

Token 218: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8500500917434692
    2. '1' → logprob: -1.2250500917434692
    3. ',' → logprob: -1.8500500917434692
    4. '),' → logprob: -2.6000499725341797
    5. ' ' → logprob: -4.35004997253418
    6. '_' → logprob: -4.97504997253418
    7. ' )' → logprob: -4.97504997253418
    8. ' litre' → logprob: -5.97504997253418
    9. ' =' → logprob: -6.22504997253418
    10. ' ),' → logprob: -6.35004997253418

Token 219: 'L' (ID: 43)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.04836523160338402
    2. 'l' → logprob: -4.423365116119385
    3. 'lit' → logprob: -4.798365116119385
    4. ' litre' → logprob: -4.798365116119385
    5. ')' → logprob: -5.048365116119385
    6. ' )' → logprob: -5.423365116119385
    7. 'L' → logprob: -5.673365116119385
    8. '_' → logprob: -6.923365116119385
    9. ' ' → logprob: -7.423365116119385
    10. '_b' → logprob: -7.548365116119385

Token 220: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.29781147837638855
    2. ',' → logprob: -1.672811508178711
    3. ' ),' → logprob: -3.047811508178711
    4. ')' → logprob: -4.422811508178711
    5. '_b' → logprob: -5.422811508178711
    6. '_' → logprob: -5.672811508178711
    7. '1' → logprob: -7.172811508178711
    8. ' ,' → logprob: -7.422811508178711
    9. ' )' → logprob: -7.422811508178711
    10. ',),' → logprob: -8.547811508178711

Token 221: ' prix' (ID: 18771)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.15571987628936768
    2. 'prix' → logprob: -2.530719757080078
    3. ' B' → logprob: -3.030719757080078
    4. ' prix' → logprob: -4.280719757080078
    5. 'price' → logprob: -6.905719757080078
    6. 'A' → logprob: -8.030719757080078
    7. 'P' → logprob: -8.030719757080078
    8. 'p' → logprob: -8.655719757080078
    9. '   ' → logprob: -9.280719757080078
    10. 'Prix' → logprob: -9.530719757080078

Token 222: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.023647340014576912
    2. ' B' → logprob: -4.023647308349609
    3. ' =' → logprob: -6.523647308349609
    4. '_B' → logprob: -7.023647308349609
    5. 'A' → logprob: -7.398647308349609
    6. 'b' → logprob: -7.523647308349609
    7. '_' → logprob: -7.648647308349609
    8. '0' → logprob: -7.898647308349609
    9. '_b' → logprob: -8.27364730834961
    10. ' ' → logprob: -8.77364730834961

Token 223: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04875938594341278
    2. ' =' → logprob: -3.5487594604492188
    3. ' ,' → logprob: -4.298759460449219
    4. ' (' → logprob: -5.673759460449219
    5. ' ' → logprob: -7.423759460449219
    6. ')' → logprob: -7.423759460449219
    7. '(' → logprob: -8.673759460449219
    8. '=' → logprob: -9.423759460449219
    9. '  ' → logprob: -9.673759460449219
    10. '   ' → logprob: -9.798759460449219

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005486194975674152
    2. ' ' → logprob: -5.505486011505127
    3. '500' → logprob: -7.505486011505127
    4. '1' → logprob: -8.005486488342285
    5. ')' → logprob: -8.130486488342285
    6. '2' → logprob: -10.255486488342285
    7. 'prix' → logprob: -10.505486488342285
    8. '   ' → logprob: -10.755486488342285
    9. 'b' → logprob: -11.255486488342285
    10. '),' → logprob: -11.380486488342285

Token 225: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00020866614067927003
    2. ',' → logprob: -8.625208854675293
    3. '_' → logprob: -11.375208854675293
    4. ')' → logprob: -12.500208854675293
    5. 'point' → logprob: -12.500208854675293
    6. ' .' → logprob: -12.750208854675293
    7. ' ' → logprob: -13.250208854675293
    8. 'p' → logprob: -13.750208854675293
    9. ' point' → logprob: -13.750208854675293
    10. ' ,' → logprob: -14.500208854675293

Token 226: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.1472419600977446e-06
    2. '50' → logprob: -14.625000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '500' → logprob: -16.375001907348633
    5. '```' → logprob: -16.500001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '  ' → logprob: -18.000001907348633
    8. '.' → logprob: -18.625001907348633
    9. '５' → logprob: -18.750001907348633
    10. '75' → logprob: -19.125001907348633

Token 227: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.002002865308895707
    2. ' L' → logprob: -6.877002716064453
    3. '),' → logprob: -7.627002716064453
    4. ' litre' → logprob: -9.002002716064453
    5. ')' → logprob: -9.127002716064453
    6. ' ),' → logprob: -9.377002716064453
    7. '_L' → logprob: -9.752002716064453
    8. 'l' → logprob: -9.877002716064453
    9. ' )' → logprob: -11.377002716064453
    10. '_l' → logprob: -11.377002716064453

Token 228: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02927340380847454
    2. ')' → logprob: -3.654273509979248
    3. ',' → logprob: -6.279273509979248
    4. ' ),' → logprob: -7.279273509979248
    5. '):' → logprob: -7.904273509979248
    6. ' )' → logprob: -11.15427303314209
    7. '):
' → logprob: -12.15427303314209
    8. '),
' → logprob: -12.65427303314209
    9. ' ,' → logprob: -13.27927303314209
    10. '   ' → logprob: -13.77927303314209

Token 229: ' et' (ID: 859)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.016250547021627426
    2. ' X' → logprob: -4.5162506103515625
    3. 'x' → logprob: -5.3912506103515625
    4. 'quant' → logprob: -9.141250610351562
    5. '   ' → logprob: -9.266250610351562
    6. ',' → logprob: -9.766250610351562
    7. ' x' → logprob: -9.891250610351562
    8. 'prix' → logprob: -10.141250610351562
    9. 'import' → logprob: -10.266250610351562
    10. 'quantity' → logprob: -10.391250610351562

Token 230: ' quantité' (ID: 89219)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.16474774479866028
    2. 'X' → logprob: -1.914747714996338
    3. ' x' → logprob: -6.664747714996338
    4. ' ' → logprob: -6.789747714996338
    5. 'x' → logprob: -7.164747714996338
    6. ' la' → logprob: -8.164748191833496
    7. ',' → logprob: -8.164748191833496
    8. ' quantité' → logprob: -8.539748191833496
    9. ' ' → logprob: -9.039748191833496
    10. '   ' → logprob: -9.164748191833496

Token 231: ' X' (ID: 2127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7970391511917114
    2. ' X' → logprob: -1.2970391511917114
    3. 'X' → logprob: -1.6720391511917114
    4. ',' → logprob: -3.547039031982422
    5. ' d' → logprob: -3.797039031982422
    6. ' ' → logprob: -4.297039031982422
    7. ' demand' → logprob: -4.797039031982422
    8. ' à' → logprob: -5.547039031982422
    9. 'd' → logprob: -5.547039031982422
    10. 'x' → logprob: -6.422039031982422

Token 232: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00032712158281356096
    2. '=' → logprob: -8.250327110290527
    3. '   ' → logprob: -10.250327110290527
    4. ',' → logprob: -10.750327110290527
    5. ' ' → logprob: -12.875327110290527
    6. 'A' → logprob: -13.250327110290527
    7. ' A' → logprob: -13.500327110290527
    8. '    ' → logprob: -14.250327110290527
    9. 's' → logprob: -14.500327110290527
    10. ' ,' → logprob: -15.000327110290527

Token 233: ' mill' (ID: 3215)
  Prédit: ' mill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mill' → logprob: -0.053421687334775925
    2. 'mill' → logprob: -3.30342173576355
    3. 'ml' → logprob: -4.678421497344971
    4. ' ml' → logprob: -5.553421497344971
    5. 'int' → logprob: -7.553421497344971
    6. 'm' → logprob: -7.803421497344971
    7. ' m' → logprob: -8.428421974182129
    8. ' int' → logprob: -8.428421974182129
    9. ' ' → logprob: -8.553421974182129
    10. ' integer' → logprob: -8.928421974182129

Token 234: 'ilit' (ID: 45433)
  Prédit: 'ilit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ilit' → logprob: -0.004299084190279245
    2. 'il' → logprob: -5.879299163818359
    3. 'lit' → logprob: -7.254299163818359
    4. 'l' → logprob: -7.629299163818359
    5. '   ' → logprob: -9.37929916381836
    6. 'illit' → logprob: -9.37929916381836
    7. 'ill' → logprob: -10.37929916381836
    8. '       ' → logprob: -10.37929916381836
    9. 'it' → logprob: -11.25429916381836
    10. 'i' → logprob: -12.00429916381836

Token 235: 'res' (ID: 430)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03377501666545868
    2. 'res' → logprob: -3.4087750911712646
    3. 'tre' → logprob: -9.658775329589844
    4. 'lt' → logprob: -11.283775329589844
    5. 'st' → logprob: -11.908775329589844
    6. 'estres' → logprob: -12.033775329589844
    7. ' tres' → logprob: -12.158775329589844
    8. 'atres' → logprob: -12.283775329589844
    9. 'les' → logprob: -12.783775329589844
    10. 'it' → logprob: -12.783775329589844

Token 236: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002611924894154072
    2. '    
' → logprob: -6.502612113952637
    3. 'A' → logprob: -7.877612113952637
    4. ':' → logprob: -9.252612113952637
    5. '  ' → logprob: -9.252612113952637
    6. '    ' → logprob: -9.377612113952637
    7. ',' → logprob: -9.502612113952637
    8. ' ' → logprob: -9.752612113952637
    9. '   
' → logprob: -9.752612113952637
    10. '  
' → logprob: -9.877612113952637

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000407316314522177
    2. '    
' → logprob: -8.625407218933105
    3. 'A' → logprob: -9.125407218933105
    4. ' A' → logprob: -9.625407218933105
    5. '    ' → logprob: -10.875407218933105
    6. '       ' → logprob: -12.250407218933105
    7. '  ' → logprob: -12.500407218933105
    8. 'a' → logprob: -12.625407218933105
    9. ' ' → logprob: -12.750407218933105
    10. '   
' → logprob: -12.750407218933105

Token 238: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5239180326461792
    2. 'A' (adapté à ' A') → logprob: -0.8989180326461792
    3. '   ' → logprob: -7.273918151855469
    4. 'a' → logprob: -10.523918151855469
    5. ' prix' → logprob: -10.648918151855469
    6. 'prix' → logprob: -11.398918151855469
    7. ' ' → logprob: -11.648918151855469
    8. '	A' → logprob: -11.773918151855469
    9. ' line' → logprob: -12.023918151855469
    10. ' a' → logprob: -12.148918151855469

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026646157493814826
    2. ' ,' → logprob: -8.375266075134277
    3. ' =' → logprob: -10.625266075134277
    4. ',B' → logprob: -12.125266075134277
    5. '=' → logprob: -12.625266075134277
    6. ',A' → logprob: -13.875266075134277
    7. ',b' → logprob: -14.250266075134277
    8. ',input' → logprob: -14.750266075134277
    9. ',int' → logprob: -16.000267028808594
    10. '=input' → logprob: -16.000267028808594

Token 240: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03807706758379936
    2. ' B' → logprob: -3.2880771160125732
    3. ' ' → logprob: -10.913077354431152
    4. '=' → logprob: -11.913077354431152
    5. '  ' → logprob: -13.163077354431152
    6. ',' → logprob: -13.288077354431152
    7. ' =' → logprob: -13.288077354431152
    8. 'space' → logprob: -13.413077354431152
    9. '=B' → logprob: -13.413077354431152
    10. '    ' → logprob: -14.538077354431152

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09909084439277649
    2. ' =' → logprob: -2.474090814590454
    3. '=' → logprob: -4.599091053009033
    4. '=input' → logprob: -10.974090576171875
    5. ' ,' → logprob: -11.349090576171875
    6. ',input' → logprob: -12.349090576171875
    7. ' ' → logprob: -12.599090576171875
    8. '=int' → logprob: -14.599090576171875
    9. ')' → logprob: -14.849090576171875
    10. ',x' → logprob: -15.599090576171875

Token 242: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0889929011464119
    2. ' X' → logprob: -2.4639928340911865
    3. ' =' → logprob: -11.213993072509766
    4. ' ' → logprob: -11.213993072509766
    5. 'x' → logprob: -11.338993072509766
    6. '=' → logprob: -11.463993072509766
    7. '  ' → logprob: -13.588993072509766
    8. ',' → logprob: -14.213993072509766
    9. '   ' → logprob: -14.463993072509766
    10. ' x' → logprob: -14.713993072509766

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142485201358795
    2. ' =' → logprob: -1.7014248371124268
    3. '=input' → logprob: -11.451424598693848
    4. '=int' → logprob: -15.201424598693848
    5. ' ' → logprob: -15.576424598693848
    6. ',' → logprob: -15.826424598693848
    7. ')' → logprob: -15.951424598693848
    8. ')=' → logprob: -16.576425552368164
    9. '   ' → logprob: -17.201425552368164
    10. ' ' → logprob: -17.451425552368164

Token 244: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04858884960412979
    2. ' map' → logprob: -3.048588752746582
    3. '	map' → logprob: -14.048588752746582
    4. 'list' → logprob: -15.298588752746582
    5. '(map' → logprob: -15.923588752746582
    6. '[' → logprob: -16.0485897064209
    7. ' ' → logprob: -16.0485897064209
    8. '   ' → logprob: -17.2985897064209
    9. 'input' → logprob: -18.1735897064209
    10. '.map' → logprob: -18.2985897064209

Token 245: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.313314952421933e-05
    2. '(' → logprob: -9.875062942504883
    3. 'int' → logprob: -11.500062942504883
    4. '(input' → logprob: -13.500062942504883
    5. '[int' → logprob: -17.000062942504883
    6. '(str' → logprob: -17.250062942504883
    7. '=int' → logprob: -17.250062942504883
    8. '<int' → logprob: -17.250062942504883
    9. ' int' → logprob: -17.500062942504883
    10. '```' → logprob: -18.000062942504883

Token 246: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11761074513196945
    2. '(input' → logprob: -2.3676106929779053
    3. ',input' → logprob: -4.117610931396484
    4. ',' → logprob: -7.742610931396484
    5. ' input' → logprob: -8.117610931396484
    6. ')' → logprob: -8.617610931396484
    7. '=input' → logprob: -10.117610931396484
    8. '[input' → logprob: -12.117610931396484
    9. '<input' → logprob: -12.367610931396484
    10. '(' → logprob: -12.492610931396484

Token 247: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015023599844425917
    2. ' input' → logprob: -6.501502513885498
    3. '=input' → logprob: -18.876502990722656
    4. ',input' → logprob: -19.626502990722656
    5. ')' → logprob: -19.751502990722656
    6. '(input' → logprob: -20.126502990722656
    7. ' ' → logprob: -20.126502990722656
    8. '	input' → logprob: -20.251502990722656
    9. 'open' → logprob: -20.501502990722656
    10. '<input' → logprob: -20.876502990722656

Token 248: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.0590548703912646e-05
    2. '()' → logprob: -10.750030517578125
    3. '())' → logprob: -11.750030517578125
    4. ')' → logprob: -15.125030517578125
    5. '()[' → logprob: -15.500030517578125
    6. ' ().' → logprob: -15.500030517578125
    7. '(' → logprob: -15.625030517578125
    8. '()
' → logprob: -16.500030517578125
    9. '().__' → logprob: -16.625030517578125
    10. '();)' → logprob: -17.000030517578125

Token 249: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.061054359131958e-06
    2. 'strip' → logprob: -11.750007629394531
    3. '(split' → logprob: -16.00000762939453
    4. ' split' → logprob: -17.00000762939453
    5. 'spl' → logprob: -17.62500762939453
    6. 'rstrip' → logprob: -18.12500762939453
    7. '().' → logprob: -19.12500762939453
    8. '_split' → logprob: -19.87500762939453
    9. '.split' → logprob: -20.12500762939453
    10. '()' → logprob: -21.37500762939453

Token 250: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2054443657398224
    2. ')' → logprob: -1.7054443359375
    3. '()' → logprob: -5.5804443359375
    4. '(' → logprob: -9.0804443359375
    5. '('' → logprob: -9.0804443359375
    6. '))' → logprob: -11.9554443359375
    7. '()))' → logprob: -12.2054443359375
    8. '(','' → logprob: -12.3304443359375
    9. ' ())' → logprob: -13.5804443359375
    10. ' )' → logprob: -13.5804443359375

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036450665444135666
    2. '    
' → logprob: -3.5364506244659424
    3. '
' → logprob: -5.2864508628845215
    4. ' 
' → logprob: -7.6614508628845215
    5. '    ' → logprob: -8.536450386047363
    6. '   
' → logprob: -8.786450386047363
    7. ' min' → logprob: -9.161450386047363
    8. 'min' → logprob: -9.286450386047363
    9. '```' → logprob: -9.286450386047363
    10. '<|end|>' → logprob: -9.286450386047363

Token 252: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.15329475700855255
    2. 'best' → logprob: -2.903294801712036
    3. 'res' → logprob: -3.153294801712036
    4. 'ans' → logprob: -3.403294801712036
    5. 'max' → logprob: -4.903294563293457
    6. 'result' → logprob: -6.403294563293457
    7. 'cost' → logprob: -7.028294563293457
    8. 'answer' → logprob: -7.278294563293457
    9. ' min' → logprob: -8.028294563293457
    10. 'minimum' → logprob: -9.528294563293457

Token 253: ' Initial' (ID: 9209)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09586107730865479
    2. 'best' → logprob: -2.9708609580993652
    3. 'ans' → logprob: -4.095860958099365
    4. 'max' → logprob: -4.595860958099365
    5. 'res' → logprob: -5.345860958099365
    6. ' min' → logprob: -5.470860958099365
    7. 'cost' → logprob: -6.095860958099365
    8. 'result' → logprob: -6.970860958099365
    9. 'answer' → logprob: -7.970860958099365
    10. ' best' → logprob: -8.095861434936523

Token 254: 'isation' (ID: 6993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.541685938835144
    2. 'isation' → logprob: -1.541685938835144
    3. '_cost' → logprob: -2.2916860580444336
    4. 'iser' → logprob: -3.4166860580444336
    5. '_min' → logprob: -3.5416860580444336
    6. '   ' → logprob: -4.166686058044434
    7. 'is' → logprob: -4.791686058044434
    8. '_val' → logprob: -5.791686058044434
    9. 'er' → logprob: -6.166686058044434
    10. '_c' → logprob: -6.416686058044434

Token 255: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20544105768203735
    2. 'min' → logprob: -2.0804409980773926
    3. ' min' → logprob: -2.9554409980773926
    4. 'cost' → logprob: -6.080440998077393
    5. ' minimum' → logprob: -6.330440998077393
    6. 'minimum' → logprob: -6.580440998077393
    7. ' cost' → logprob: -7.330440998077393
    8. 'inf' → logprob: -7.330440998077393
    9. ' du' → logprob: -7.830440998077393
    10. 'best' → logprob: -8.45544147491455

Token 256: ' coût' (ID: 73109)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.19862419366836548
    2. 'res' → logprob: -2.3236241340637207
    3. 'cost' → logprob: -3.3236241340637207
    4. 'result' → logprob: -3.5736241340637207
    5. 'ans' → logprob: -4.323624134063721
    6. 'cout' → logprob: -6.323624134063721
    7. 'minimum' → logprob: -7.198624134063721
    8. 'inf' → logprob: -7.323624134063721
    9. 'answer' → logprob: -7.323624134063721
    10. 'best' → logprob: -7.698624134063721

Token 257: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.48220202326774597
    2. '_min' → logprob: -1.9822020530700684
    3. ' minimum' → logprob: -2.2322020530700684
    4. 'minimum' → logprob: -2.2322020530700684
    5. ' min' → logprob: -3.6072020530700684
    6. ' minimal' → logprob: -5.982202053070068
    7. '   ' → logprob: -8.23220157623291
    8. 'minimal' → logprob: -8.35720157623291
    9. ' =' → logprob: -11.10720157623291
    10. ' minimale' → logprob: -11.73220157623291

Token 258: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012326332740485668
    2. '=' → logprob: -5.512326240539551
    3. 'min' → logprob: -5.637326240539551
    4. '_min' → logprob: -6.012326240539551
    5. 'minimum' → logprob: -6.887326240539551
    6. ' minimum' → logprob: -7.512326240539551
    7. ' min' → logprob: -7.887326240539551
    8. '=min' → logprob: -9.01232624053955
    9. '   ' → logprob: -10.01232624053955
    10. 'inf' → logprob: -10.26232624053955

Token 259: ' une' (ID: 2463)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.011385788209736347
    2. '10' → logprob: -4.511385917663574
    3. ' float' → logprob: -8.011385917663574
    4. 'int' → logprob: -12.636385917663574
    5. '1' → logprob: -13.761385917663574
    6. ' ' → logprob: -13.886385917663574
    7. '100' → logprob: -14.386385917663574
    8. 'None' → logprob: -15.761385917663574
    9. '999' → logprob: -16.511384963989258
    10. 'inf' → logprob: -16.886384963989258

Token 260: ' valeur' (ID: 41664)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.44575035572052
    2. ' float' → logprob: -1.07075035572052
    3. ' very' → logprob: -5.5707502365112305
    4. 'int' → logprob: -5.9457502365112305
    5. 'inf' → logprob: -5.9457502365112305
    6. '100' → logprob: -6.4457502365112305
    7. ' très' → logprob: -6.5707502365112305
    8. ' large' → logprob: -6.9457502365112305
    9. 'tr' → logprob: -7.0707502365112305
    10. '10' → logprob: -7.1957502365112305

Token 261: ' très' (ID: 9412)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2932487428188324
    2. ' float' → logprob: -1.6682487726211548
    3. ' très' → logprob: -3.1682486534118652
    4. 'tr' → logprob: -4.418248653411865
    5. 'import' → logprob: -5.418248653411865
    6. 'inf' → logprob: -5.543248653411865
    7. '=float' → logprob: -7.043248653411865
    8. ' élevée' → logprob: -7.418248653411865
    9. ' infin' → logprob: -7.543248653411865
    10. 'é' → logprob: -8.043249130249023

Token 262: ' haute' (ID: 49646)
  Prédit: ' élevée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élevée' → logprob: -0.372412770986557
    2. 'import' → logprob: -1.8724128007888794
    3. ' grande' → logprob: -2.62241268157959
    4. 'é' → logprob: -2.62241268157959
    5. 'large' → logprob: -5.74741268157959
    6. ' haute' → logprob: -5.87241268157959
    7. ' large' → logprob: -6.12241268157959
    8. 'gr' → logprob: -6.24741268157959
    9. 'élé' → logprob: -7.74741268157959
    10. ' élevé' → logprob: -8.12241268157959

Token 263: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8342751264572144
    2. ' min' → logprob: -1.3342751264572144
    3. '   ' → logprob: -1.5842751264572144
    4. 'cost' → logprob: -2.959275245666504
    5. ' cost' → logprob: -3.959275245666504
    6. ' =' → logprob: -4.709275245666504
    7. 'inf' → logprob: -5.334275245666504
    8. ' minimum' → logprob: -5.334275245666504
    9. 'minimum' → logprob: -6.834275245666504
    10. 'co' → logprob: -7.084275245666504

Token 264: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4687746465206146
    2. '   ' → logprob: -1.468774676322937
    3. ' min' → logprob: -2.0937745571136475
    4. 'cost' → logprob: -4.343774795532227
    5. ' cost' → logprob: -5.593774795532227
    6. 'inf' → logprob: -6.468774795532227
    7. ' minimum' → logprob: -6.968774795532227
    8. 'minimum' → logprob: -7.093774795532227
    9. ' ' → logprob: -9.093774795532227
    10. 'ans' → logprob: -9.218774795532227

Token 265: ' cost' (ID: 3097)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03573431447148323
    2. 'ans' → logprob: -4.535734176635742
    3. 'cost' (adapté à ' cost') → logprob: -4.535734176635742
    4. ' min' → logprob: -4.785734176635742
    5. 'inf' → logprob: -5.785734176635742
    6. 'INF' → logprob: -6.785734176635742
    7. 'res' → logprob: -7.160734176635742
    8. ' cost' → logprob: -9.160734176635742
    9. ' ans' → logprob: -9.285734176635742
    10. 'answer' → logprob: -10.035734176635742

Token 266: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.1349751502275467
    2. ' =' → logprob: -2.1349751949310303
    3. '=' → logprob: -5.259974956512451
    4. '_' → logprob: -6.134974956512451
    5. '_max' → logprob: -8.25997543334961
    6. 'min' → logprob: -8.25997543334961
    7. '   ' → logprob: -9.88497543334961
    8. 'minimum' → logprob: -10.75997543334961
    9. '_MIN' → logprob: -11.13497543334961
    10. ' minimum' → logprob: -11.25997543334961

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269284337759018
    2. '=' → logprob: -2.1269283294677734
    3. '=int' → logprob: -16.001928329467773
    4. ' ' → logprob: -16.001928329467773
    5. ' ' → logprob: -16.751928329467773
    6. '   ' → logprob: -16.876928329467773
    7. ',' → logprob: -17.001928329467773
    8. '=float' → logprob: -17.376928329467773
    9. '＝' → logprob: -17.751928329467773
    10. 's' → logprob: -18.001928329467773

Token 268: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16023580729961395
    2. 'float' → logprob: -1.9102357625961304
    3. 'int' → logprob: -11.660235404968262
    4. ' float' → logprob: -12.785235404968262
    5. ' ' → logprob: -15.410235404968262
    6. '1' → logprob: -17.660236358642578
    7. '100' → logprob: -18.785236358642578
    8. ' ' → logprob: -19.160236358642578
    9. '(float' → logprob: -19.535236358642578
    10. 'Float' → logprob: -19.785236358642578

Token 269: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00015574338613077998
    2. ''' → logprob: -9.500155448913574
    3. ''in' → logprob: -9.500155448913574
    4. '(' → logprob: -12.875155448913574
    5. ''s' → logprob: -13.875155448913574
    6. '("' → logprob: -14.500155448913574
    7. 'inf' → logprob: -15.000155448913574
    8. ''a' → logprob: -15.250155448913574
    9. ''ex' → logprob: -15.500155448913574
    10. ''t' → logprob: -16.25015640258789

Token 270: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -7.73183855926618e-05
    2. ''in' → logprob: -9.500077247619629
    3. ''' → logprob: -13.375077247619629
    4. 'in' → logprob: -14.250077247619629
    5. 'info' → logprob: -15.750077247619629
    6. ' inf' → logprob: -16.875078201293945
    7. '-inf' → logprob: -17.250078201293945
    8. '_inf' → logprob: -17.625078201293945
    9. '.inf' → logprob: -18.125078201293945
    10. 'Inf' → logprob: -19.250078201293945

Token 271: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028135518077760935
    2. '')' → logprob: -5.877813339233398
    3. ' )' → logprob: -11.752813339233398
    4. ')'' → logprob: -14.752813339233398
    5. '")' → logprob: -15.627813339233398
    6. ' ' → logprob: -17.0028133392334
    7. ''' → logprob: -17.1278133392334
    8. ' ')' → logprob: -17.5028133392334
    9. ')")' → logprob: -17.6278133392334
    10. ')
' → logprob: -17.7528133392334

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06713645905256271
    2. ' for' → logprob: -3.317136526107788
    3. 'for' → logprob: -3.567136526107788
    4. '    
' → logprob: -8.192136764526367
    5. '
' → logprob: -9.692136764526367
    6. '	for' → logprob: -9.817136764526367
    7. '  ' → logprob: -11.192136764526367
    8. ' ' → logprob: -11.567136764526367
    9. ' 
' → logprob: -12.067136764526367
    10. '    ' → logprob: -12.067136764526367

Token 273: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022094044834375381
    2. ' for' → logprob: -8.500221252441406
    3. '   ' → logprob: -11.000221252441406
    4. '#' (adapté à ' #') → logprob: -14.625221252441406
    5. 'max' → logprob: -15.250221252441406
    6. '	for' → logprob: -17.750221252441406
    7. '
' → logprob: -18.250221252441406
    8. '    
' → logprob: -18.375221252441406
    9. ' ' → logprob: -18.500221252441406
    10. '  ' → logprob: -18.625221252441406

Token 274: ' Nombre' (ID: 70208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5094070477061905e-05
    2. ' for' → logprob: -11.125015258789062
    3. 'max' → logprob: -15.250015258789062
    4. '   ' → logprob: -16.750015258789062
    5. '#' → logprob: -18.750015258789062
    6. '
' → logprob: -19.625015258789062
    7. 'fo' → logprob: -20.125015258789062
    8. 'pour' → logprob: -20.250015258789062
    9. ' ' → logprob: -20.625015258789062
    10. 'range' → logprob: -20.625015258789062

Token 275: ' maximum' (ID: 10562)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.21538883447647095
    2. '_b' → logprob: -2.590388774871826
    3. '_' → logprob: -2.840388774871826
    4. 'max' → logprob: -3.090388774871826
    5. '_possible' → logprob: -5.215388774871826
    6. '_de' → logprob: -5.590388774871826
    7. '_pos' → logprob: -6.965388774871826
    8. 'de' → logprob: -7.215388774871826
    9. 'for' → logprob: -7.215388774871826
    10. '1' → logprob: -7.465388774871826

Token 276: ' potentiel' (ID: 113761)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.12454397976398468
    2. '_' → logprob: -2.8745439052581787
    3. '_max' → logprob: -3.9995439052581787
    4. '_de' → logprob: -4.124544143676758
    5. '_possible' → logprob: -4.124544143676758
    6. 'de' → logprob: -5.999544143676758
    7. ' =' → logprob: -6.124544143676758
    8. '_d' → logprob: -6.249544143676758
    9. ' de' → logprob: -6.749544143676758
    10. 'max' → logprob: -7.499544143676758

Token 277: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.15689098834991455
    2. ' de' → logprob: -3.031890869140625
    3. '_b' → logprob: -3.031890869140625
    4. 'd' → logprob: -3.531890869140625
    5. '_de' → logprob: -4.906890869140625
    6. '   ' → logprob: -6.031890869140625
    7. 'b' → logprob: -6.281890869140625
    8. ' =' → logprob: -6.406890869140625
    9. 'max' → logprob: -6.531890869140625
    10. '_' → logprob: -7.156890869140625

Token 278: ' boute' (ID: 110289)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011498695239424706
    2. ' boute' → logprob: -4.511498928070068
    3. ' bottles' → logprob: -8.76149845123291
    4. '1' → logprob: -9.13649845123291
    5. ' b' → logprob: -9.26149845123291
    6. ' ' → logprob: -9.76149845123291
    7. ' bott' → logprob: -11.88649845123291
    8. '100' → logprob: -12.26149845123291
    9. '```' → logprob: -12.38649845123291
    10. '   ' → logprob: -12.63649845123291

Token 279: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -0.00025311444187536836
    2. 'ttes' → logprob: -8.625252723693848
    3. 't' → logprob: -10.250252723693848
    4. 'tes' → logprob: -11.000252723693848
    5. 'lles' → logprob: -11.875252723693848
    6. 'ille' → logprob: -12.500252723693848
    7. '```' → logprob: -12.625252723693848
    8. 'ettes' → logprob: -13.250252723693848
    9. 'i' → logprob: -13.375252723693848
    10. '``' → logprob: -14.500252723693848

Token 280: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6993603706359863
    2. 'de' → logprob: -1.6993603706359863
    3. ' de' → logprob: -2.0743603706359863
    4. ' =' → logprob: -2.1993603706359863
    5. '   ' → logprob: -3.1993603706359863
    6. '_de' → logprob: -4.199360370635986
    7. '1' → logprob: -4.449360370635986
    8. '_one' → logprob: -5.324360370635986
    9. '=' → logprob: -5.699360370635986
    10. 'd' → logprob: -6.199360370635986

Token 281: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08967337012290955
    2. '=' → logprob: -3.5896732807159424
    3. '1' → logprob: -3.8396732807159424
    4. 'de' → logprob: -4.3396735191345215
    5. ' =' → logprob: -4.9646735191345215
    6. '_one' → logprob: -5.0896735191345215
    7. '_un' → logprob: -5.4646735191345215
    8. '_de' → logprob: -5.9646735191345215
    9. 'd' → logprob: -6.4646735191345215
    10. '_d' → logprob: -7.3396735191345215

Token 282: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.43110376596450806
    2. '_l' → logprob: -1.3061037063598633
    3. 'lit' → logprob: -3.1811037063598633
    4. '_L' → logprob: -4.306103706359863
    5. 'l' → logprob: -4.556103706359863
    6. '_' → logprob: -4.806103706359863
    7. ' litre' → logprob: -5.931103706359863
    8. '1' → logprob: -7.306103706359863
    9. 'de' → logprob: -7.806103706359863
    10. ' L' → logprob: -7.806103706359863

Token 283: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08180781453847885
    2. '=' → logprob: -2.831807851791382
    3. 'max' → logprob: -4.081807613372803
    4. ' max' → logprob: -6.706807613372803
    5. '_max' → logprob: -7.706807613372803
    6. '   ' → logprob: -7.831807613372803
    7. '1' → logprob: -8.831808090209961
    8. '=max' → logprob: -8.831808090209961
    9. 'possible' → logprob: -9.331808090209961
    10. ' possible' → logprob: -9.331808090209961

Token 284: ' considérer' (ID: 172894)
  Prédit: ' acheter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acheter' → logprob: -0.7729029655456543
    2. 'acheter' → logprob: -1.5229029655456543
    3. 'X' → logprob: -1.6479029655456543
    4. '100' → logprob: -3.2729029655456543
    5. ' X' → logprob: -3.2729029655456543
    6. ' ' → logprob: -4.147902965545654
    7. '20' → logprob: -4.897902965545654
    8. 'prendre' → logprob: -5.272902965545654
    9. 'x' → logprob: -5.272902965545654
    10. ' prendre' → logprob: -5.397902965545654

Token 285: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23279620707035065
    2. '=' → logprob: -2.7327961921691895
    3. ' for' → logprob: -2.7327961921691895
    4. 'for' → logprob: -3.2327961921691895
    5. 'range' → logprob: -4.2327961921691895
    6. '   ' → logprob: -4.4827961921691895
    7. ' range' → logprob: -4.8577961921691895
    8. 'max' → logprob: -6.4827961921691895
    9. ':' → logprob: -6.4827961921691895
    10. '(range' → logprob: -7.4827961921691895

Token 286: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.045934516936540604
    2. ' max' → logprob: -3.9209344387054443
    3. '   ' → logprob: -4.170934677124023
    4. 'for' → logprob: -4.795934677124023
    5. ' for' → logprob: -6.920934677124023
    6. 'n' → logprob: -8.670934677124023
    7. '(max' → logprob: -9.420934677124023
    8. 'num' → logprob: -10.420934677124023
    9. 'range' → logprob: -10.920934677124023
    10. ' n' → logprob: -11.170934677124023

Token 287: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005494733806699514
    2. ' max' → logprob: -5.505494594573975
    3. 'for' → logprob: -6.630494594573975
    4. '(max' → logprob: -10.255495071411133
    5. 'n' → logprob: -10.880495071411133
    6. '   ' → logprob: -11.130495071411133
    7. ' for' → logprob: -11.380495071411133
    8. 'num' → logprob: -11.755495071411133
    9. '	max' → logprob: -13.130495071411133
    10. 'import' → logprob: -13.755495071411133

Token 288: ' On' (ID: 2160)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0067764767445623875
    2. ' max' → logprob: -5.256776332855225
    3. 'for' → logprob: -6.631776332855225
    4. '(max' → logprob: -8.756776809692383
    5. 'n' → logprob: -10.756776809692383
    6. ' for' → logprob: -10.881776809692383
    7. 'import' → logprob: -11.756776809692383
    8. 'num' → logprob: -12.131776809692383
    9. '   ' → logprob: -12.381776809692383
    10. 'limit' → logprob: -13.256776809692383

Token 289: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6683884263038635
    2. 'range' → logprob: -1.0433883666992188
    3. ' range' → logprob: -2.7933883666992188
    4. ' for' → logprob: -2.7933883666992188
    5. 'max' → logprob: -5.668388366699219
    6. ' va' → logprob: -6.668388366699219
    7. 'r' → logprob: -7.293388366699219
    8. '_range' → logprob: -7.418388366699219
    9. 'e' → logprob: -7.793388366699219
    10. 'vais' → logprob: -7.793388366699219

Token 290: ' acheter' (ID: 60712)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.6913944482803345
    2. 'acheter' → logprob: -0.8163944482803345
    3. ' prendre' → logprob: -3.816394329071045
    4. ' acheter' → logprob: -4.316394329071045
    5. 'penser' → logprob: -4.941394329071045
    6. 'aller' → logprob: -5.816394329071045
    7. 'avoir' → logprob: -6.191394329071045
    8. 'max' → logprob: -6.316394329071045
    9. ' aller' → logprob: -6.566394329071045
    10. 'all' → logprob: -6.566394329071045

Token 291: ' jusqu' (ID: 21961)
  Prédit: ' jusqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.41577139496803284
    2. '0' → logprob: -2.415771484375
    3. ' (' → logprob: -2.540771484375
    4. ' for' → logprob: -3.040771484375
    5. 'for' → logprob: -3.415771484375
    6. ' X' → logprob: -4.415771484375
    7. '(' → logprob: -4.665771484375
    8. 'jus' → logprob: -4.790771484375
    9. 'X' → logprob: -4.915771484375
    10. ' ' → logprob: -5.040771484375

Token 292: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7673639059066772
    2. '   ' → logprob: -1.5173639059066772
    3. ' au' → logprob: -2.267364025115967
    4. 'à' → logprob: -2.642364025115967
    5. 'au' → logprob: -3.142364025115967
    6. ' (' → logprob: -3.392364025115967
    7. ''à' → logprob: -4.017364025115967
    8. ' jusqu' → logprob: -5.142364025115967
    9. '  ' → logprob: -5.517364025115967
    10. ' a' → logprob: -5.517364025115967

Token 293: ' X' (ID: 2127)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.18571874499320984
    2. 'X' → logprob: -2.3107187747955322
    3. ' (' → logprob: -2.8107187747955322
    4. ' X' → logprob: -5.435718536376953
    5. '20' → logprob: -5.685718536376953
    6. ' ' → logprob: -6.935718536376953
    7. '(A' → logprob: -7.185718536376953
    8. '(' → logprob: -8.310718536376953
    9. '21' → logprob: -8.810718536376953
    10. '((' → logprob: -9.060718536376953

Token 294: '//' (ID: 393)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2812376320362091
    2. '//' → logprob: -1.4062376022338867
    3. '   ' → logprob: -9.531237602233887
    4. ' ' → logprob: -12.156237602233887
    5. '
' → logprob: -13.156237602233887
    6. '100' → logprob: -13.156237602233887
    7. '#' → logprob: -13.281237602233887
    8. '  ' → logprob: -13.531237602233887
    9. '	' → logprob: -14.031237602233887
    10. '    ' → logprob: -14.281237602233887

Token 295: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '   ' → logprob: -15.875000953674316
    5. 'A' → logprob: -16.75
    6. '(' → logprob: -16.875
    7. '500' → logprob: -17.375
    8. '```' → logprob: -17.75
    9. '  ' → logprob: -18.125
    10. '
' → logprob: -18.25

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3902033970225602e-05
    2. '100' → logprob: -12.375014305114746
    3. '+' → logprob: -12.750014305114746
    4. ' ' → logprob: -13.000014305114746
    5. '000' → logprob: -13.375014305114746
    6. ' +' → logprob: -13.500014305114746
    7. '   ' → logprob: -14.000014305114746
    8. '  ' → logprob: -15.750014305114746
    9. '    ' → logprob: -16.00001335144043
    10. '=' → logprob: -16.25001335144043

Token 297: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519320547580719
    2. '+' → logprob: -1.5019320249557495
    3. ' plus' → logprob: -13.251932144165039
    4. ')+' → logprob: -14.626932144165039
    5. '   ' → logprob: -15.376932144165039
    6. '()+' → logprob: -15.626932144165039
    7. ' ' → logprob: -16.00193214416504
    8. '＋' → logprob: -16.62693214416504
    9. ' ' → logprob: -17.00193214416504
    10. ' +
' → logprob: -17.62693214416504

Token 298: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3880643844604492
    2. '1' → logprob: -1.1380643844604492
    3. ' ' → logprob: -6.763064384460449
    4. '3' → logprob: -11.13806438446045
    5. '(' → logprob: -11.88806438446045
    6. '+' → logprob: -12.38806438446045
    7. '10' → logprob: -12.63806438446045
    8. ' (' → logprob: -12.88806438446045
    9. '5' → logprob: -13.26306438446045
    10. '   ' → logprob: -13.51306438446045

Token 299: ' boute' (ID: 110289)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0299896001815796
    2. '+' → logprob: -1.1549896001815796
    3. '   ' → logprob: -1.4049896001815796
    4. ' for' → logprob: -3.279989719390869
    5. 'for' → logprob: -3.279989719390869
    6. ')' → logprob: -6.029989719390869
    7. '
' → logprob: -6.154989719390869
    8. '1' → logprob: -7.779989719390869
    9. ':' → logprob: -8.029989242553711
    10. ' )' → logprob: -8.029989242553711

Token 300: 'illes' (ID: 16849)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1986713856458664
    2. ' d' → logprob: -2.573671340942383
    3. ' de' → logprob: -3.448671340942383
    4. 'au' → logprob: -4.448671340942383
    5. ')' → logprob: -4.573671340942383
    6. 'def' → logprob: -4.698671340942383
    7. '=' → logprob: -5.198671340942383
    8. 'de' → logprob: -5.573671340942383
    9. '_' → logprob: -5.698671340942383
    10. 'illes' → logprob: -5.823671340942383

Token 301: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6754956245422363
    2. ' +' → logprob: -1.3004956245422363
    3. ' de' → logprob: -2.1754956245422363
    4. '1' → logprob: -3.1754956245422363
    5. '+' → logprob: -3.3004956245422363
    6. 'de' → logprob: -5.425495624542236
    7. ' pour' → logprob: -5.550495624542236
    8. '(' → logprob: -5.675495624542236
    9. ' (' → logprob: -5.675495624542236
    10. ',' → logprob: -5.675495624542236

Token 302: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01610603928565979
    2. ' ' → logprob: -4.141106128692627
    3. '100' → logprob: -10.391105651855469
    4. '   ' → logprob: -11.266105651855469
    5. '```' → logprob: -12.203605651855469
    6. '  ' → logprob: -12.328605651855469
    7. 'l' → logprob: -13.078605651855469
    8. 'un' → logprob: -13.266105651855469
    9. '    ' → logprob: -13.766105651855469
    10. 'b' → logprob: -13.953605651855469

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008471485925838351
    2. ' ' → logprob: -7.125847339630127
    3. '100' → logprob: -10.125846862792969
    4. '   ' → logprob: -14.250846862792969
    5. '  ' → logprob: -14.875846862792969
    6. '```' → logprob: -15.063346862792969
    7. '
' → logprob: -15.875846862792969
    8. 'int' → logprob: -16.25084686279297
    9. 'un' → logprob: -16.37584686279297
    10. '`' → logprob: -16.56334686279297

Token 304: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04165872186422348
    2. '100' → logprob: -4.541658878326416
    3. '1' → logprob: -5.041658878326416
    4. 'l' → logprob: -5.166658878326416
    5. 'lit' → logprob: -5.291658878326416
    6. '   ' → logprob: -5.916658878326416
    7. ' litre' → logprob: -5.916658878326416
    8. ' ' → logprob: -6.291658878326416
    9. ' L' → logprob: -6.791658878326416
    10. '_' → logprob: -7.541658878326416

Token 305: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16251197457313538
    2. ' +' → logprob: -2.2875120639801025
    3. '+' → logprob: -3.2875120639801025
    4. ' for' → logprob: -5.162511825561523
    5. 'for' → logprob: -5.662511825561523
    6. ',' → logprob: -7.287511825561523
    7. '
' → logprob: -7.412511825561523
    8. '  ' → logprob: -9.037511825561523
    9. '    ' → logprob: -9.287511825561523
    10. ')' → logprob: -9.662511825561523

Token 306: ' couvrir' (ID: 197187)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7493025064468384
    2. ' i' → logprob: -1.3743025064468384
    3. ' couvrir' → logprob: -1.7493025064468384
    4. ' s' → logprob: -3.999302387237549
    5. ' garantir' → logprob: -3.999302387237549
    6. 's' → logprob: -4.124302387237549
    7. 'être' → logprob: -4.499302387237549
    8. '_' → logprob: -4.749302387237549
    9. 'cover' → logprob: -4.749302387237549
    10. 'range' → logprob: -5.124302387237549

Token 307: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8045449256896973
    2. ' le' → logprob: -1.8045449256896973
    3. '   ' → logprob: -2.3045449256896973
    4. ' X' → logprob: -2.3045449256896973
    5. ' range' → logprob: -3.3045449256896973
    6. ' au' → logprob: -3.6795449256896973
    7. 'X' → logprob: -3.8045449256896973
    8. 'range' → logprob: -3.8045449256896973
    9. 'le' → logprob: -4.054544925689697
    10. ' complètement' → logprob: -4.304544925689697

Token 308: ' quantité' (ID: 89219)
  Prédit: ' quantité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantité' → logprob: -0.1780695617198944
    2. 'quant' → logprob: -2.178069591522217
    3. 'quantity' → logprob: -4.303069591522217
    4. ' X' → logprob: -4.928069591522217
    5. ' quant' → logprob: -5.428069591522217
    6. 'X' → logprob: -5.428069591522217
    7. ' quantity' → logprob: -5.678069591522217
    8. 'range' → logprob: -5.928069591522217
    9. ' ' → logprob: -6.678069591522217
    10. ' range' → logprob: -7.178069591522217

Token 309: ' demand' (ID: 8492)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9236723184585571
    2. '   ' → logprob: -1.1736723184585571
    3. '+' → logprob: -1.4236723184585571
    4. ' plus' → logprob: -4.048672199249268
    5. ' possible' → logprob: -4.298672199249268
    6. 'possible' → logprob: -5.048672199249268
    7. ',' → logprob: -5.673672199249268
    8. 'max' → logprob: -6.048672199249268
    9. ' (' → logprob: -6.173672199249268
    10. '1' → logprob: -6.423672199249268

Token 310: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45319974422454834
    2. 'ie' → logprob: -1.4531997442245483
    3. 'ue' → logprob: -3.203199863433838
    4. 'ée' → logprob: -3.203199863433838
    5. 'er' → logprob: -3.453199863433838
    6. 'ir' → logprob: -5.203199863433838
    7. 'i' → logprob: -5.953199863433838
    8. 'e' → logprob: -6.453199863433838
    9. ' ' → logprob: -6.578199863433838
    10. 'u' → logprob: -6.953199863433838

Token 311: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013659761287271976
    2. ',' → logprob: -5.138659954071045
    3. '.' → logprob: -5.763659954071045
    4. ' (' → logprob: -6.888659954071045
    5. '
' → logprob: -7.513659954071045
    6. '    
' → logprob: -7.763659954071045
    7. ')' → logprob: -7.763659954071045
    8. '+' → logprob: -8.013659477233887
    9. '  ' → logprob: -8.513659477233887
    10. 'for' → logprob: -8.763659477233887

Token 312: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05199936404824257
    2. '    ' → logprob: -3.42699933052063
    3. '+' → logprob: -5.551999568939209
    4. ' for' → logprob: -5.801999568939209
    5. ' ' → logprob: -5.926999568939209
    6. ' i' → logprob: -6.676999568939209
    7. '    
' → logprob: -6.926999568939209
    8. ')' → logprob: -6.926999568939209
    9. ' +' → logprob: -6.926999568939209
    10. ' )' → logprob: -7.676999568939209

Token 313: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3723773658275604
    2. '1' → logprob: -1.8723773956298828
    3. ' ' → logprob: -1.8723773956298828
    4. '3' → logprob: -5.747377395629883
    5. '   ' → logprob: -9.497377395629883
    6. '10' → logprob: -10.872377395629883
    7. '20' → logprob: -10.872377395629883
    8. '  ' → logprob: -10.872377395629883
    9. '```' → logprob: -11.372377395629883
    10. '5' → logprob: -11.497377395629883

Token 314: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.7990243434906006
    2. ')' → logprob: -1.2990243434906006
    3. ' afin' → logprob: -2.0490243434906006
    4. 'for' → logprob: -2.5490243434906006
    5. ' for' → logprob: -3.4240243434906006
    6. 'pour' → logprob: -4.67402458190918
    7. 'def' → logprob: -5.54902458190918
    8. ' au' → logprob: -5.54902458190918
    9. '```' → logprob: -5.67402458190918
    10. ' par' → logprob: -5.92402458190918

Token 315: ' marge' (ID: 138270)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.9283018708229065
    2. 's' → logprob: -1.6783018112182617
    3. ' être' → logprob: -2.6783018112182617
    4. 'sé' → logprob: -2.8033018112182617
    5. ' garantir' → logprob: -3.3033018112182617
    6. ' avoir' → logprob: -3.3033018112182617
    7. 'prendre' → logprob: -3.6783018112182617
    8. ' assurer' → logprob: -3.8033018112182617
    9. ' ' → logprob: -3.9283018112182617
    10. ' gérer' → logprob: -4.053301811218262

Token 316: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09593701362609863
    2. '
' → logprob: -3.2209370136260986
    3. 'for' → logprob: -3.4709370136260986
    4. ' for' → logprob: -5.5959367752075195
    5. 'range' → logprob: -5.5959367752075195
    6. '    
' → logprob: -6.3459367752075195
    7. '

' → logprob: -6.5959367752075195
    8. ' range' → logprob: -6.5959367752075195
    9. ')' → logprob: -6.8459367752075195
    10. 'max' → logprob: -6.9709367752075195

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07929632812738419
    2. ' for' → logprob: -2.704296350479126
    3. 'for' → logprob: -4.704296112060547
    4. 'max' → logprob: -8.829296112060547
    5. ' max' → logprob: -9.829296112060547
    6. '    
' → logprob: -9.954296112060547
    7. '	for' → logprob: -12.454296112060547
    8. '
' → logprob: -12.829296112060547
    9. '```' → logprob: -13.704296112060547
    10. ',' → logprob: -14.454296112060547

Token 318: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.4403834044933319
    2. 'for' → logprob: -1.4403834342956543
    3. ' max' → logprob: -2.4403834342956543
    4. ' for' → logprob: -3.4403834342956543
    5. '   ' → logprob: -8.565382957458496
    6. 'limit' → logprob: -13.565382957458496
    7. 'maximum' → logprob: -15.065382957458496
    8. ' ' → logprob: -15.565382957458496
    9. 'n' → logprob: -15.690382957458496
    10. 'range' → logprob: -15.940382957458496

Token 319: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08195599168539047
    2. '_b' → logprob: -2.706955909729004
    3. '_one' → logprob: -4.706955909729004
    4. '_num' → logprob: -6.831955909729004
    5. '_n' → logprob: -7.081955909729004
    6. '_qty' → logprob: -8.081955909729004
    7. '_count' → logprob: -8.706955909729004
    8. '_l' → logprob: -9.706955909729004
    9. '_i' → logprob: -9.706955909729004
    10. '_nb' → logprob: -9.831955909729004

Token 320: '1' (ID: 16)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.4780444800853729
    2. 'b' → logprob: -1.6030445098876953
    3. 'ones' → logprob: -1.8530445098876953
    4. '1' → logprob: -4.478044509887695
    5. 'lit' → logprob: -5.603044509887695
    6. '_one' → logprob: -5.978044509887695
    7. 'num' → logprob: -6.353044509887695
    8. 'n' → logprob: -7.353044509887695
    9. 'count' → logprob: -7.978044509887695
    10. 'buy' → logprob: -8.603044509887695

Token 321: 'L' (ID: 43)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22676798701286316
    2. '_l' → logprob: -1.8517680168151855
    3. '_b' → logprob: -3.6017680168151855
    4. '_L' → logprob: -4.2267680168151855
    5. 'L' → logprob: -6.1017680168151855
    6. '1' → logprob: -7.3517680168151855
    7. '_B' → logprob: -8.101767539978027
    8. '_li' → logprob: -8.351767539978027
    9. 'B' → logprob: -8.601767539978027
    10. ' =' → logprob: -9.476767539978027

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005934131797403097
    2. '=' → logprob: -5.130934238433838
    3. '_b' → logprob: -13.00593376159668
    4. ' ' → logprob: -13.50593376159668
    5. '_' → logprob: -14.00593376159668
    6. '_num' → logprob: -16.00593376159668
    7. ' ' → logprob: -16.00593376159668
    8. '   ' → logprob: -16.00593376159668
    9. '_possible' → logprob: -16.13093376159668
    10. '_count' → logprob: -16.63093376159668

Token 323: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.08741951733827591
    2. '(X' → logprob: -2.5874195098876953
    3. ' X' → logprob: -4.962419509887695
    4. ' (' → logprob: -6.587419509887695
    5. '   ' → logprob: -9.462419509887695
    6. ' ' → logprob: -10.712419509887695
    7. '(' → logprob: -11.212419509887695
    8. '	X' → logprob: -12.587419509887695
    9. '  ' → logprob: -14.087419509887695
    10. '((' → logprob: -14.587419509887695

Token 324: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.25193148851394653
    2. ' //' → logprob: -1.5019314289093018
    3. ' ' → logprob: -13.626931190490723
    4. '   ' → logprob: -14.376931190490723
    5. '#' → logprob: -14.876931190490723
    6. '//=' → logprob: -16.50193214416504
    7. '
' → logprob: -16.75193214416504
    8. '  ' → logprob: -16.87693214416504
    9. ' ' → logprob: -16.87693214416504
    10. '100' → logprob: -17.25193214416504

Token 325: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.250001907348633
    4. '1' → logprob: -17.375001907348633
    5. '  ' → logprob: -18.375001907348633
    6. '１００' → logprob: -18.625001907348633
    7. '```' → logprob: -19.125001907348633
    8. '(' → logprob: -20.750001907348633
    9. '[' → logprob: -20.750001907348633
    10. '000' → logprob: -20.875001907348633

Token 326: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '1' → logprob: -18.125
    4. '   ' → logprob: -19.125
    5. '１００' → logprob: -19.375
    6. '```' → logprob: -19.625
    7. '  ' → logprob: -20.625
    8. '999' → logprob: -20.875
    9. '000' → logprob: -20.875
    10. '10' → logprob: -21.625

Token 327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005248579662293196
    2. '3' → logprob: -5.255248546600342
    3. '   ' → logprob: -12.3802490234375
    4. '1' → logprob: -12.8802490234375
    5. '+' → logprob: -13.5052490234375
    6. '2' → logprob: -13.8177490234375
    7. '       ' → logprob: -13.8802490234375
    8. '03' → logprob: -13.8802490234375
    9. ' ' → logprob: -14.2552490234375
    10. '*' → logprob: -15.0052490234375

Token 328: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687190413475037
    2. ' +' → logprob: -1.1368719339370728
    3. '   ' → logprob: -14.136872291564941
    4. '＋' → logprob: -16.386871337890625
    5. ' plus' → logprob: -16.886871337890625
    6. '+
' → logprob: -17.136871337890625
    7. ' ' → logprob: -18.886871337890625
    8. '
' → logprob: -19.261871337890625
    9. '()+' → logprob: -19.261871337890625
    10. ')+' → logprob: -19.261871337890625

Token 329: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02975500375032425
    2. '3' → logprob: -3.529755115509033
    3. ' ' → logprob: -12.404754638671875
    4. '   ' → logprob: -15.154754638671875
    5. '```' → logprob: -17.404754638671875
    6. '  ' → logprob: -17.904754638671875
    7. '5' → logprob: -18.029754638671875
    8. '    ' → logprob: -20.404754638671875
    9. '`' → logprob: -20.467254638671875
    10. '	' → logprob: -20.529754638671875

Token 330: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007607100997120142
    2. '3' → logprob: -4.8826069831848145
    3. ' ' → logprob: -14.632607460021973
    4. '5' → logprob: -15.007607460021973
    5. '   ' → logprob: -15.757607460021973
    6. '```' → logprob: -17.382606506347656
    7. '10' → logprob: -17.882606506347656
    8. '  ' → logprob: -18.007606506347656
    9. '20' → logprob: -19.132606506347656
    10. '+' → logprob: -19.320106506347656

Token 331: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7221015691757202
    2. '   ' → logprob: -0.8471015691757202
    3. ' for' → logprob: -2.9721016883850098
    4. 'for' → logprob: -4.34710168838501
    5. '    
' → logprob: -4.47210168838501
    6. '  
' → logprob: -5.22210168838501
    7. ' 
' → logprob: -6.22210168838501
    8. '<|end|>' → logprob: -6.84710168838501
    9. '   
' → logprob: -8.347101211547852
    10. '
' → logprob: -8.472101211547852

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045993950217962265
    2. ' for' → logprob: -3.7959940433502197
    3. 'for' → logprob: -3.7959940433502197
    4. '    
' → logprob: -10.67099380493164
    5. '
' → logprob: -12.54599380493164
    6. '	for' → logprob: -12.54599380493164
    7. '  
' → logprob: -15.54599380493164
    8. ' 
' → logprob: -15.79599380493164
    9. ' ' → logprob: -16.04599380493164
    10. '   
' → logprob: -16.79599380493164

Token 333: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010441516526043415
    2. '   ' → logprob: -5.260441303253174
    3. ' for' → logprob: -5.260441303253174
    4. '	for' → logprob: -13.885441780090332
    5. ' ' → logprob: -16.635440826416016
    6. '    
' → logprob: -18.135440826416016
    7. '  ' → logprob: -18.885440826416016
    8. '
' → logprob: -20.635440826416016
    9. '    ' → logprob: -20.760440826416016
    10. '  
' → logprob: -21.510440826416016

Token 334: ' count' (ID: 3605)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6508072018623352
    2. ' i' → logprob: -0.9008072018623352
    3. ' bottles' → logprob: -4.0258073806762695
    4. 'num' → logprob: -4.2758073806762695
    5. 'one' → logprob: -4.7758073806762695
    6. ' one' → logprob: -4.7758073806762695
    7. ' num' → logprob: -4.7758073806762695
    8. 'n' → logprob: -5.1508073806762695
    9. ' n' → logprob: -5.5258073806762695
    10. 'b' → logprob: -6.2758073806762695

Token 335: '_' (ID: 62)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23733267188072205
    2. '_' → logprob: -1.7373327016830444
    3. 'in' → logprob: -3.612332582473755
    4. '1' → logprob: -5.487332820892334
    5. ' ' → logprob: -5.987332820892334
    6. '_in' → logprob: -6.487332820892334
    7. '_one' → logprob: -10.112332344055176
    8. ' _' → logprob: -10.987332344055176
    9. '	in' → logprob: -11.487332344055176
    10. '_i' → logprob: -11.737332344055176

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007877390831708908
    2. 'in' → logprob: -5.007877349853516
    3. '_' → logprob: -6.882877349853516
    4. ' in' → logprob: -9.632877349853516
    5. 'one' → logprob: -10.382877349853516
    6. '_one' → logprob: -11.382877349853516
    7. '```' → logprob: -12.257877349853516
    8. 'ones' → logprob: -12.382877349853516
    9. ' ' → logprob: -12.632877349853516
    10. 'i' → logprob: -12.882877349853516

Token 337: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.1464383453130722
    2. '_' → logprob: -2.2714383602142334
    3. 'in' → logprob: -3.6464383602142334
    4. '1' → logprob: -5.521438121795654
    5. '_L' → logprob: -6.396438121795654
    6. ' in' → logprob: -6.771438121795654
    7. '_in' → logprob: -9.646438598632812
    8. '_l' → logprob: -10.146438598632812
    9. ' ' → logprob: -10.271438598632812
    10. '   ' → logprob: -12.146438598632812

Token 338: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011712945997714996
    2. 'in' → logprob: -6.751171112060547
    3. ' ' → logprob: -14.001171112060547
    4. '	in' → logprob: -16.376171112060547
    5. '```' → logprob: -17.376171112060547
    6. ' ' → logprob: -17.501171112060547
    7. '_in' → logprob: -18.001171112060547
    8. 'space' → logprob: -18.251171112060547
    9. 'range' → logprob: -18.376171112060547
    10. 'count' → logprob: -18.501171112060547

Token 339: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0380416102707386
    2. 'range' → logprob: -3.288041591644287
    3. ' ' → logprob: -15.788042068481445
    4. '(range' → logprob: -17.538042068481445
    5. '	range' → logprob: -18.538042068481445
    6. '   ' → logprob: -19.413042068481445
    7. ' max' → logprob: -19.538042068481445
    8. '0' → logprob: -19.788042068481445
    9. ' ' → logprob: -20.413042068481445
    10. 'max' → logprob: -20.413042068481445

Token 340: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.03806536644697189
    2. '(' → logprob: -3.2880654335021973
    3. ' (' → logprob: -10.663064956665039
    4. '(
' → logprob: -15.913064956665039
    5. 'max' → logprob: -16.41306495666504
    6. ' max' → logprob: -16.66306495666504
    7. '   ' → logprob: -16.91306495666504
    8. '(count' → logprob: -17.53806495666504
    9. '0' → logprob: -17.78806495666504
    10. '(min' → logprob: -18.16306495666504

Token 341: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00014239625306800008
    2. '(' → logprob: -8.875142097473145
    3. '(max' → logprob: -13.875142097473145
    4. 'max' → logprob: -14.500142097473145
    5. '_(' → logprob: -15.125142097473145
    6. '_max' → logprob: -15.375142097473145
    7. '   ' → logprob: -15.750142097473145
    8. '(_' → logprob: -16.25014305114746
    9. '_)' → logprob: -16.25014305114746
    10. ' _' → logprob: -16.37514305114746

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003365350130479783
    2. '_' → logprob: -8.000336647033691
    3. '(' → logprob: -15.125336647033691
    4. ' ' → logprob: -15.500336647033691
    5. '```' → logprob: -15.750336647033691
    6. '   ' → logprob: -16.125335693359375
    7. '100' → logprob: -16.125335693359375
    8. 'max' → logprob: -16.625335693359375
    9. ',' → logprob: -17.000335693359375
    10. '-' → logprob: -17.125335693359375

Token 343: 'L' (ID: 43)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3028927445411682
    2. 'L' → logprob: -1.9278926849365234
    3. '):
' → logprob: -3.0528926849365234
    4. ')' → logprob: -3.1778926849365234
    5. '_' → logprob: -4.427892684936523
    6. '1' → logprob: -4.802892684936523
    7. '4' → logprob: -6.427892684936523
    8. '+' → logprob: -6.802892684936523
    9. '_L' → logprob: -6.927892684936523
    10. ',' → logprob: -7.052892684936523

Token 344: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008477445808239281
    2. ' ):' → logprob: -7.625847816467285
    3. '):
' → logprob: -8.250847816467285
    4. '+' → logprob: -9.500847816467285
    5. ':' → logprob: -11.375847816467285
    6. ')' → logprob: -11.625847816467285
    7. ' +' → logprob: -13.625847816467285
    8. '   ' → logprob: -14.125847816467285
    9. '):
' → logprob: -14.625847816467285
    10. '():' → logprob: -15.875847816467285

Token 345: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.000024795532227
    4. ')' → logprob: -16.625024795532227
    5. '):
' → logprob: -18.500024795532227
    6. '```' → logprob: -18.625024795532227
    7. '):' → logprob: -18.875024795532227
    8. '  ' → logprob: -19.125024795532227
    9. '0' → logprob: -20.125024795532227
    10. '       ' → logprob: -20.312524795532227

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.750009536743164
    3. '   ' → logprob: -13.875009536743164
    4. '2' → logprob: -15.000009536743164
    5. ')' → logprob: -15.875009536743164
    6. '0' → logprob: -17.125009536743164
    7. '(' → logprob: -17.625009536743164
    8. '3' → logprob: -17.750009536743164
    9. '  ' → logprob: -18.125009536743164
    10. '```' → logprob: -19.000009536743164

Token 347: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005730479606427252
    2. '):
' → logprob: -8.25057315826416
    3. ' ):' → logprob: -8.37557315826416
    4. ':' → logprob: -9.75057315826416
    5. ')' → logprob: -10.75057315826416
    6. '   ' → logprob: -14.37557315826416
    7. '():' → logprob: -15.37557315826416
    8. ' :' → logprob: -15.37557315826416
    9. '):
' → logprob: -15.50057315826416
    10. ' ):
' → logprob: -16.125572204589844

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013453540159389377
    2. '   ' → logprob: -6.876345157623291
    3. '        
' → logprob: -8.75134563446045
    4. '    ' → logprob: -9.75134563446045
    5. '    
' → logprob: -10.25134563446045
    6. ':' → logprob: -10.87634563446045
    7. '
' → logprob: -11.25134563446045
    8. ',' → logprob: -12.37634563446045
    9. '     ' → logprob: -12.50134563446045
    10. '    ' → logprob: -12.75134563446045

Token 349: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27838844060897827
    2. 'volume' → logprob: -2.153388500213623
    3. 'remaining' → logprob: -2.903388500213623
    4. 'quantity' → logprob: -4.278388500213623
    5. 'qty' → logprob: -4.403388500213623
    6. '   ' → logprob: -4.403388500213623
    7. '#' (adapté à ' #') → logprob: -5.028388500213623
    8. 'quant' → logprob: -5.028388500213623
    9. ' volume' → logprob: -5.403388500213623
    10. 'total' → logprob: -5.528388500213623

Token 350: ' Quant' (ID: 41610)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.8458706736564636
    2. 'volume' → logprob: -1.2208707332611084
    3. 'qty' → logprob: -2.3458707332611084
    4. 'quantity' → logprob: -3.3458707332611084
    5. 'rest' → logprob: -3.9708707332611084
    6. 'quant' → logprob: -3.9708707332611084
    7. 'lit' → logprob: -4.220870494842529
    8. 'vol' → logprob: -4.220870494842529
    9. 'remain' → logprob: -4.220870494842529
    10. 'total' → logprob: -4.470870494842529

Token 351: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.0003377270477358252
    2. 'ite' → logprob: -8.875337600708008
    3. '_' → logprob: -9.500337600708008
    4. '   ' → logprob: -9.500337600708008
    5. 'it' → logprob: -11.375337600708008
    6. 'ités' → logprob: -11.375337600708008
    7. '       ' → logprob: -11.625337600708008
    8. 'itié' → logprob: -12.250337600708008
    9. 'ity' → logprob: -12.375337600708008
    10. 'té' → logprob: -13.375337600708008

Token 352: ' cou' (ID: 3840)
  Prédit: '_rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rest' → logprob: -0.10899191349744797
    2. '_' → logprob: -2.608991861343384
    3. '_remaining' → logprob: -4.233992099761963
    4. 'rest' → logprob: -4.608992099761963
    5. ' restante' → logprob: -6.483992099761963
    6. '_re' → logprob: -7.108992099761963
    7. '_c' → logprob: -7.358992099761963
    8. ' rest' → logprob: -8.108991622924805
    9. '_needed' → logprob: -8.358991622924805
    10. '_a' → logprob: -8.483991622924805

Token 353: 'verte' (ID: 44260)
  Prédit: 'verte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verte' → logprob: -0.4852968156337738
    2. 'vr' → logprob: -0.9852968454360962
    3. 'v' → logprob: -5.610296726226807
    4. 'vert' → logprob: -5.735296726226807
    5. 'r' → logprob: -6.110296726226807
    6. 'verture' → logprob: -6.860296726226807
    7. 'ver' → logprob: -8.360297203063965
    8. '#' → logprob: -8.610297203063965
    9. 'vrt' → logprob: -8.985297203063965
    10. 'rv' → logprob: -9.235297203063965

Token 354: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06855601072311401
    2. '_' → logprob: -3.568556070327759
    3. '_par' → logprob: -3.943556070327759
    4. '=' → logprob: -4.31855583190918
    5. '   ' → logprob: -6.19355583190918
    6. '_by' → logprob: -6.69355583190918
    7. '1' → logprob: -7.19355583190918
    8. 'par' → logprob: -7.81855583190918
    9. '_c' → logprob: -8.56855583190918
    10. ' ' → logprob: -8.81855583190918

Token 355: ' les' (ID: 1341)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1893579661846161
    2. ' count' → logprob: -1.8143579959869385
    3. ' les' → logprob: -5.689357757568359
    4. '100' → logprob: -5.689357757568359
    5. 'les' → logprob: -6.939357757568359
    6. ' ' → logprob: -7.189357757568359
    7. '1' → logprob: -7.439357757568359
    8. '   ' → logprob: -8.43935775756836
    9. ' la' → logprob: -10.43935775756836
    10. 'b' → logprob: -10.68935775756836

Token 356: ' boute' (ID: 110289)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4200070798397064
    2. '1' → logprob: -1.7950071096420288
    3. 'count' → logprob: -2.4200069904327393
    4. ' ' → logprob: -3.2950069904327393
    5. ' boute' → logprob: -3.6700069904327393
    6. ' count' → logprob: -5.045007228851318
    7. ' bottles' → logprob: -5.045007228851318
    8. '100' → logprob: -5.045007228851318
    9. ' bott' → logprob: -6.045007228851318
    10. ' b' → logprob: -6.420007228851318

Token 357: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -0.06473385542631149
    2. 'tes' → logprob: -3.3147337436676025
    3. 't' → logprob: -3.8147337436676025
    4. 'ttes' → logprob: -5.939733982086182
    5. 'te' → logprob: -7.689733982086182
    6. 'lles' → logprob: -8.064733505249023
    7. 'ill' → logprob: -8.689733505249023
    8. '_' → logprob: -9.439733505249023
    9. 'ties' → logprob: -9.564733505249023
    10. 'v' → logprob: -10.064733505249023

Token 358: ' ' (ID: 220)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.904579758644104
    2. 'de' → logprob: -1.279579758644104
    3. '   ' → logprob: -1.529579758644104
    4. ' ' → logprob: -3.6545796394348145
    5. '100' → logprob: -3.7795796394348145
    6. '_' → logprob: -4.0295796394348145
    7. '       ' → logprob: -4.2795796394348145
    8. '1' → logprob: -4.5295796394348145
    9. 'd' → logprob: -5.9045796394348145
    10. ' =' → logprob: -6.5295796394348145

Token 359: '1' (ID: 16)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6608749032020569
    2. 'de' → logprob: -0.9108749032020569
    3. '1' → logprob: -3.035874843597412
    4. 'd' → logprob: -4.410874843597412
    5. '_' → logprob: -5.035874843597412
    6. '100' → logprob: -5.285874843597412
    7. ' ' → logprob: -5.535874843597412
    8. ' d' → logprob: -5.785874843597412
    9. '   ' → logprob: -6.285874843597412
    10. ' of' → logprob: -8.91087532043457

Token 360: 'L' (ID: 43)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0222277641296387
    2. 'L' → logprob: -1.1472277641296387
    3. '   ' → logprob: -2.0222277641296387
    4. '1' → logprob: -2.7722277641296387
    5. '       ' → logprob: -2.7722277641296387
    6. ' ' → logprob: -3.7722277641296387
    7. ' de' → logprob: -4.522227764129639
    8. '100' → logprob: -5.272227764129639
    9. '    ' → logprob: -5.647227764129639
    10. 'de' → logprob: -5.772227764129639

Token 361: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06966127455234528
    2. '       ' → logprob: -2.8196613788604736
    3. '=' → logprob: -5.3196611404418945
    4. '   ' → logprob: -6.6946611404418945
    5. ':' → logprob: -7.4446611404418945
    6. '100' → logprob: -8.319661140441895
    7. '_' → logprob: -8.444661140441895
    8. '1' → logprob: -8.694661140441895
    9. ' :' → logprob: -9.319661140441895
    10. ' ' → logprob: -10.069661140441895

Token 362: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017112337052822113
    2. '       ' → logprob: -4.7671122550964355
    3. '=' → logprob: -5.0171122550964355
    4. '   ' → logprob: -7.1421122550964355
    5. '_' → logprob: -7.8921122550964355
    6. '100' → logprob: -9.142112731933594
    7. 'covered' → logprob: -9.267112731933594
    8. ' ' → logprob: -9.392112731933594
    9. ':' → logprob: -9.517112731933594
    10. '    ' → logprob: -10.392112731933594

Token 363: ' quantity' (ID: 17245)
  Prédit: 'volume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'volume' → logprob: -0.6623740792274475
    2. 'qty' → logprob: -2.0373740196228027
    3. 'quantity' (adapté à ' quantity') → logprob: -2.2873740196228027
    4. ' volume' → logprob: -3.0373740196228027
    5. 'amount' → logprob: -3.4123740196228027
    6. 'quant' → logprob: -3.6623740196228027
    7. '       ' → logprob: -3.9123740196228027
    8. 'coverage' → logprob: -4.162374019622803
    9. ' quantity' → logprob: -4.287374019622803
    10. 'capacity' → logprob: -4.287374019622803

Token 364: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0036266776733100414
    2. ' =' → logprob: -6.128626823425293
    3. '_c' → logprob: -6.753626823425293
    4. '1' → logprob: -9.253626823425293
    5. '=' → logprob: -9.878626823425293
    6. '_cover' → logprob: -10.753626823425293
    7. '_used' → logprob: -11.378626823425293
    8. '_one' → logprob: -11.503626823425293
    9. '_count' → logprob: -11.628626823425293
    10. '_rest' → logprob: -11.878626823425293

Token 365: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4431484043598175
    2. 'covered' → logprob: -1.1931483745574951
    3. ' =' → logprob: -3.693148374557495
    4. '1' → logprob: -3.943148374557495
    5. 'count' → logprob: -5.443148612976074
    6. 'cover' → logprob: -5.818148612976074
    7. 'used' → logprob: -6.818148612976074
    8. '100' → logprob: -7.443148612976074
    9. 'c' → logprob: -7.818148612976074
    10. '_' → logprob: -8.318148612976074

Token 366: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4881534278392792
    2. '_' → logprob: -0.9881534576416016
    3. '_L' → logprob: -5.238153457641602
    4. '=' → logprob: -5.488153457641602
    5. ' =' → logprob: -5.863153457641602
    6. '1' → logprob: -7.863153457641602
    7. 'covered' → logprob: -7.863153457641602
    8. '   ' → logprob: -8.738153457641602
    9. '100' → logprob: -8.738153457641602
    10. '_l' → logprob: -8.738153457641602

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931493282318115
    2. ' =' → logprob: -0.6931493282318115
    3. '   ' → logprob: -13.81814956665039
    4. ' ' → logprob: -14.06814956665039
    5. ' ' → logprob: -16.19314956665039
    6. '    ' → logprob: -16.56814956665039
    7. '=count' → logprob: -16.56814956665039
    8. ')' → logprob: -17.06814956665039
    9. '=int' → logprob: -17.19314956665039
    10. '  ' → logprob: -17.44314956665039

Token 368: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.004106896463781595
    2. ' count' → logprob: -5.5041069984436035
    3. '   ' → logprob: -10.879106521606445
    4. '100' → logprob: -11.629106521606445
    5. ' ' → logprob: -15.004106521606445
    6. '       ' → logprob: -15.129106521606445
    7. '	count' → logprob: -16.254106521606445
    8. 'cost' → logprob: -17.629106521606445
    9. '    ' → logprob: -17.879106521606445
    10. 'counts' → logprob: -18.004106521606445

Token 369: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5048530030981055e-06
    2. ' _' → logprob: -13.625001907348633
    3. '```' → logprob: -17.375001907348633
    4. '[' → logprob: -17.500001907348633
    5. ')' → logprob: -17.625001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '1' → logprob: -17.875001907348633
    8. '*' → logprob: -18.437501907348633
    9. 'd' → logprob: -18.500001907348633
    10. ' ' → logprob: -18.750001907348633

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011581535451114178
    2. '100' → logprob: -4.7615814208984375
    3. 'L' → logprob: -5.8865814208984375
    4. ' ' → logprob: -8.886581420898438
    5. '_' → logprob: -10.761581420898438
    6. '```' → logprob: -11.011581420898438
    7. '[' → logprob: -13.261581420898438
    8. '   ' → logprob: -13.761581420898438
    9. ')' → logprob: -13.761581420898438
    10. '000' → logprob: -14.136581420898438

Token 371: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.3856492842023727e-06
    2. ' L' → logprob: -14.500000953674316
    3. '000' → logprob: -15.375000953674316
    4. '100' → logprob: -15.625000953674316
    5. '```' → logprob: -16.000001907348633
    6. '0' → logprob: -16.000001907348633
    7. '1' → logprob: -16.125001907348633
    8. '(' → logprob: -17.000001907348633
    9. '[' → logprob: -17.750001907348633
    10. '00' → logprob: -17.875001907348633

Token 372: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.012537435628473759
    2. '*' → logprob: -4.387537479400635
    3. '   ' → logprob: -10.762537002563477
    4. '       ' → logprob: -12.512537002563477
    5. ' ' → logprob: -14.012537002563477
    6. '100' → logprob: -14.137537002563477
    7. ')' → logprob: -14.637537002563477
    8. ' ' → logprob: -15.387537002563477
    9. '  ' → logprob: -16.262537002563477
    10. '    ' → logprob: -16.387537002563477

Token 373: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.375027656555176
    4. '1' → logprob: -17.750028610229492
    5. '  ' → logprob: -18.125028610229492
    6. '```' → logprob: -18.875028610229492
    7. '
' → logprob: -19.250028610229492
    8. '10' → logprob: -20.375028610229492
    9. ' ' → logprob: -20.625028610229492
    10. '１００' → logprob: -20.625028610229492

Token 374: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '1' → logprob: -16.75
    4. '   ' → logprob: -18.0
    5. '```' → logprob: -18.875
    6. '１００' → logprob: -20.125
    7. '10' → logprob: -20.625
    8. '  ' → logprob: -21.0
    9. '000' → logprob: -21.1875
    10. '0' → logprob: -21.25

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '۰' → logprob: -17.75
    4. '   ' → logprob: -17.875
    5. '       ' → logprob: -19.625
    6. '０' → logprob: -19.75
    7. '०' → logprob: -19.75
    8. '٠' → logprob: -20.125
    9. '০' → logprob: -20.25
    10. '```' → logprob: -21.0

Token 376: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1477651447057724
    2. '        
' → logprob: -2.3977651596069336
    3. '
' → logprob: -3.1477651596069336
    4. ' 
' → logprob: -7.022765159606934
    5. '<|end|>' → logprob: -7.022765159606934
    6. '  
' → logprob: -7.647765159606934
    7. '    
' → logprob: -8.147765159606934
    8. '       
' → logprob: -8.647765159606934
    9. ',' → logprob: -9.147765159606934
    10. ')' → logprob: -9.272765159606934

Token 377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1185464933514595
    2. '   ' → logprob: -2.493546485900879
    3. '        
' → logprob: -4.243546485900879
    4. '    
' → logprob: -5.368546485900879
    5. ' 
' → logprob: -5.993546485900879
    6. '  
' → logprob: -6.243546485900879
    7. '
' → logprob: -6.243546485900879
    8. 'remaining' → logprob: -7.493546485900879
    9. '    ' → logprob: -7.743546485900879
    10. ',' → logprob: -7.993546485900879

Token 378: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3483947813510895
    2. 'remaining' → logprob: -1.973394751548767
    3. 'quantity' → logprob: -2.5983948707580566
    4. 'rest' → logprob: -3.2233948707580566
    5. '#' (adapté à ' #') → logprob: -4.223394870758057
    6. ' quantity' → logprob: -4.973394870758057
    7. ' remaining' → logprob: -5.098394870758057
    8. ' #' → logprob: -5.723394870758057
    9. 'reste' → logprob: -6.098394870758057
    10. ' rest' → logprob: -6.223394870758057

Token 379: ' Quant' (ID: 41610)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.4906696677207947
    2. 'quantity' → logprob: -1.2406697273254395
    3. 'rest' → logprob: -2.6156697273254395
    4. 're' → logprob: -4.7406697273254395
    5. 'remain' → logprob: -4.9906697273254395
    6. 'if' → logprob: -5.7406697273254395
    7. 'rem' → logprob: -6.3656697273254395
    8. '#' → logprob: -6.7406697273254395
    9. 'reste' → logprob: -6.8656697273254395
    10. 'need' → logprob: -7.2406697273254395

Token 380: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.009571559727191925
    2. 'ity' → logprob: -4.884571552276611
    3. '       ' → logprob: -7.134571552276611
    4. 'ite' → logprob: -7.759571552276611
    5. '_' → logprob: -8.25957202911377
    6. '   ' → logprob: -9.25957202911377
    7. 'é' → logprob: -9.63457202911377
    8. '_rest' → logprob: -9.63457202911377
    9. 'ités' → logprob: -10.13457202911377
    10. '#' → logprob: -10.25957202911377

Token 381: ' encore' (ID: 14043)
  Prédit: '_rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rest' → logprob: -0.1371127963066101
    2. 'rest' → logprob: -2.387112855911255
    3. '_remaining' → logprob: -3.887112855911255
    4. '_re' → logprob: -5.262112617492676
    5. ' restante' → logprob: -5.387112617492676
    6. '_' → logprob: -6.012112617492676
    7. 'reste' → logprob: -6.137112617492676
    8. ' rest' → logprob: -7.137112617492676
    9. 'remaining' → logprob: -8.512112617492676
    10. '_rem' → logprob: -9.262112617492676

Token 382: ' nécessaire' (ID: 43098)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5452659130096436
    2. 'rest' → logprob: -0.9202659130096436
    3. ' à' → logprob: -4.420266151428223
    4. '   ' → logprob: -5.670266151428223
    5. ' restante' → logprob: -5.795266151428223
    6. ' rest' → logprob: -7.045266151428223
    7. 'requ' → logprob: -7.170266151428223
    8. '_rest' → logprob: -7.670266151428223
    9. 'reste' → logprob: -7.670266151428223
    10. 'remaining' → logprob: -8.170266151428223

Token 383: ' après' (ID: 16460)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020636018365621567
    2. '=' → logprob: -4.895636081695557
    3. '   ' → logprob: -5.020636081695557
    4. '       ' → logprob: -5.645636081695557
    5. 'rest' → logprob: -6.770636081695557
    6. ' rest' → logprob: -7.645636081695557
    7. ' restante' → logprob: -7.895636081695557
    8. 'remaining' → logprob: -8.395635604858398
    9. ' à' → logprob: -8.770635604858398
    10. '_rest' → logprob: -9.395635604858398

Token 384: ' utilisation' (ID: 80058)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.1511104851961136
    2. ' quantity' → logprob: -2.0261104106903076
    3. 'quant' → logprob: -5.151110649108887
    4. '(quantity' → logprob: -7.526110649108887
    5. ' quantité' → logprob: -8.026110649108887
    6. ' cette' → logprob: -8.026110649108887
    7. '   ' → logprob: -8.026110649108887
    8. ' ' → logprob: -8.151110649108887
    9. 'max' → logprob: -8.526110649108887
    10. ' la' → logprob: -9.276110649108887

Token 385: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5797719955444336
    2. '       ' → logprob: -1.5797719955444336
    3. ' de' → logprob: -1.8297719955444336
    4. '1' → logprob: -3.4547719955444336
    5. 'de' → logprob: -4.704771995544434
    6. ' des' → logprob: -4.829771995544434
    7. ' =' → logprob: -4.954771995544434
    8. ' d' → logprob: -5.079771995544434
    9. '   ' → logprob: -5.954771995544434
    10. ' ' → logprob: -6.204771995544434

Token 386: ' boute' (ID: 110289)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07038229703903198
    2. '1' → logprob: -2.8203823566436768
    3. ' ' → logprob: -6.070382118225098
    4. ' boute' → logprob: -6.070382118225098
    5. 'quantity' → logprob: -6.820382118225098
    6. 'count' → logprob: -7.195382118225098
    7. ' bott' → logprob: -7.445382118225098
    8. 'quant' → logprob: -8.445382118225098
    9. ' bottle' → logprob: -8.570382118225098
    10. ' b' → logprob: -8.695382118225098

Token 387: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -0.011237033642828465
    2. '1' → logprob: -4.761237144470215
    3. 'ttes' → logprob: -6.761237144470215
    4. '_' → logprob: -7.636237144470215
    5. 'tes' → logprob: -8.511237144470215
    6. 'lles' → logprob: -8.761237144470215
    7. 't' → logprob: -8.886237144470215
    8. 'ille' → logprob: -9.136237144470215
    9. 'ill' → logprob: -9.511237144470215
    10. '```' → logprob: -9.886237144470215

Token 388: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44883212447166443
    2. ' ' → logprob: -1.0738321542739868
    3. '       ' → logprob: -5.073832035064697
    4. '_' → logprob: -5.198832035064697
    5. ' de' → logprob: -5.698832035064697
    6. '   ' → logprob: -5.823832035064697
    7. '500' → logprob: -7.448832035064697
    8. '0' → logprob: -7.823832035064697
    9. 'de' → logprob: -8.573832511901855
    10. 'd' → logprob: -8.573832511901855

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018417751416563988
    2. ' ' → logprob: -6.8768415451049805
    3. 'de' → logprob: -7.6268415451049805
    4. ' de' → logprob: -8.62684154510498
    5. '_' → logprob: -9.37684154510498
    6. 'd' → logprob: -10.37684154510498
    7. '   ' → logprob: -12.00184154510498
    8. ' of' → logprob: -12.75184154510498
    9. '       ' → logprob: -12.75184154510498
    10. 'of' → logprob: -13.00184154510498

Token 390: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.1279553291387856e-05
    2. ' L' → logprob: -11.750011444091797
    3. '_L' → logprob: -13.750011444091797
    4. ' ' → logprob: -14.875011444091797
    5. '   ' → logprob: -15.125011444091797
    6. '1' → logprob: -15.250011444091797
    7. '500' → logprob: -15.375011444091797
    8. '100' → logprob: -15.500011444091797
    9. ',' → logprob: -15.750011444091797
    10. '0' → logprob: -16.000011444091797

Token 391: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020501010585576296
    2. ' =' → logprob: -7.252049922943115
    3. ',' → logprob: -8.002050399780273
    4. 'remaining' → logprob: -8.002050399780273
    5. '   ' → logprob: -8.502050399780273
    6. '
' → logprob: -9.502050399780273
    7. 'rest' → logprob: -9.502050399780273
    8. ' remaining' → logprob: -9.752050399780273
    9. ' restante' → logprob: -10.002050399780273
    10. ':' → logprob: -10.127050399780273

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07353916019201279
    2. 'rest' → logprob: -4.0735392570495605
    3. 'remaining' → logprob: -4.0735392570495605
    4. ' rest' → logprob: -4.3235392570495605
    5. ' remaining' → logprob: -4.5735392570495605
    6. '   ' → logprob: -5.5735392570495605
    7. 'needed' → logprob: -6.5735392570495605
    8. ' restante' → logprob: -6.5735392570495605
    9. ' reste' → logprob: -6.6985392570495605
    10. ' =' → logprob: -7.0735392570495605

Token 393: ' leftover' (ID: 97990)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.8095945119857788
    2. ' remaining' → logprob: -1.8095945119857788
    3. 'quantity' → logprob: -1.9345945119857788
    4. ' quantity' → logprob: -2.4345946311950684
    5. 'rest' → logprob: -2.9345946311950684
    6. ' rest' → logprob: -3.5595946311950684
    7. 'needed' → logprob: -3.8095946311950684
    8. ' remainder' → logprob: -3.9345946311950684
    9. 'need' → logprob: -4.684594631195068
    10. 'remain' → logprob: -5.309594631195068

Token 394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869014084339142
    2. '=' → logprob: -1.1369013786315918
    3. '_' → logprob: -10.63690185546875
    4. ' ' → logprob: -12.51190185546875
    5. '   ' → logprob: -13.88690185546875
    6. '_needed' → logprob: -14.13690185546875
    7. '_=' → logprob: -15.51190185546875
    8. ' ' → logprob: -15.51190185546875
    9. '  ' → logprob: -15.76190185546875
    10. '＝' → logprob: -15.88690185546875

Token 395: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4951067864894867
    2. ' max' → logprob: -1.370106816291809
    3. 'X' → logprob: -2.2451066970825195
    4. ' X' → logprob: -3.4951066970825195
    5. '0' → logprob: -9.37010669708252
    6. '   ' → logprob: -9.99510669708252
    7. ' ' → logprob: -11.62010669708252
    8. '(max' → logprob: -12.62010669708252
    9. 'x' → logprob: -13.37010669708252
    10. '	max' → logprob: -13.55760669708252

Token 396: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.264322317088954e-05
    2. '(X' → logprob: -9.875052452087402
    3. '0' → logprob: -13.875052452087402
    4. ' (' → logprob: -16.00005340576172
    5. '(
' → logprob: -18.25005340576172
    6. 'X' → logprob: -18.87505340576172
    7. '(left' → logprob: -18.87505340576172
    8. '(Q' → logprob: -19.75005340576172
    9. '(quantity' → logprob: -20.37505340576172
    10. '(x' → logprob: -20.50005340576172

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033875491935759783
    2. '(' → logprob: -5.878387451171875
    3. 'X' → logprob: -7.628387451171875
    4. '(X' → logprob: -9.378387451171875
    5. ' ' → logprob: -11.503387451171875
    6. ')' → logprob: -14.253387451171875
    7. ' X' → logprob: -14.628387451171875
    8. '   ' → logprob: -16.378387451171875
    9. '1' → logprob: -16.503387451171875
    10. ' (' → logprob: -17.128387451171875

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016501873033121228
    2. ',X' → logprob: -6.501650333404541
    3. ' ,' → logprob: -9.126649856567383
    4. '(X' → logprob: -11.001649856567383
    5. ',
' → logprob: -11.126649856567383
    6. 'X' → logprob: -13.376649856567383
    7. '(' → logprob: -13.501649856567383
    8. ')' → logprob: -14.126649856567383
    9. '       ' → logprob: -14.251649856567383
    10. ',left' → logprob: -14.376649856567383

Token 399: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.03804229199886322
    2. ' X' → logprob: -3.2880423069000244
    3. '   ' → logprob: -15.663042068481445
    4. '       ' → logprob: -15.663042068481445
    5. '(X' → logprob: -16.163042068481445
    6. '	X' → logprob: -16.163042068481445
    7. ' ' → logprob: -16.288042068481445
    8. '        ' → logprob: -17.038042068481445
    9. '           ' → logprob: -17.038042068481445
    10. '  ' → logprob: -18.163042068481445

Token 400: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0059415982104837894
    2. '-' → logprob: -5.130941390991211
    3. ')' → logprob: -12.005941390991211
    4. ' ' → logprob: -12.630941390991211
    5. '<|end|>' → logprob: -14.005941390991211
    6. '        ' → logprob: -14.630941390991211
    7. '       ' → logprob: -14.755941390991211
    8. '   ' → logprob: -15.005941390991211
    9. 'quantity' → logprob: -15.005941390991211
    10. ' ' → logprob: -15.505941390991211

Token 401: ' quantity' (ID: 17245)
  Prédit: 'quantity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quantity' → logprob: -0.00043102685594931245
    2. ' quantity' → logprob: -7.750431060791016
    3. '(quantity' → logprob: -16.000431060791016
    4. '       ' → logprob: -16.500431060791016
    5. '   ' → logprob: -16.750431060791016
    6. '           ' → logprob: -16.750431060791016
    7. ' ' → logprob: -19.125431060791016
    8. 'quant' → logprob: -19.375431060791016
    9. '               ' → logprob: -19.875431060791016
    10. '.quantity' → logprob: -19.875431060791016

Token 402: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.749814019713085e-06
    2. '1' → logprob: -12.125006675720215
    3. ')' → logprob: -14.375006675720215
    4. ' ' → logprob: -16.75000762939453
    5. ' _' → logprob: -17.06250762939453
    6. ',' → logprob: -17.12500762939453
    7. '100' → logprob: -17.12500762939453
    8. '```' → logprob: -17.12500762939453
    9. 's' → logprob: -17.31250762939453
    10. '-' → logprob: -17.37500762939453

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. '100' → logprob: -9.750075340270996
    3. '_' → logprob: -11.375075340270996
    4. ')' → logprob: -13.125075340270996
    5. '```' → logprob: -13.750075340270996
    6. ' ' → logprob: -13.875075340270996
    7. '   ' → logprob: -16.18757438659668
    8. '۱' → logprob: -16.31257438659668
    9. ',' → logprob: -16.50007438659668
    10. '<|end|>' → logprob: -16.62507438659668

Token 404: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.03003602847456932
    2. '1' → logprob: -3.530035972595215
    3. '_' → logprob: -8.280035972595215
    4. ')' → logprob: -11.030035972595215
    5. '_L' → logprob: -11.655035972595215
    6. ' ' → logprob: -12.905035972595215
    7. '```' → logprob: -13.030035972595215
    8. '-' → logprob: -14.780035972595215
    9. ' L' → logprob: -15.155035972595215
    10. '100' → logprob: -15.405035972595215

Token 405: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009402852156199515
    2. ' )' → logprob: -7.500940322875977
    3. ')

' → logprob: -8.375940322875977
    4. '       ' → logprob: -9.125940322875977
    5. ')
' → logprob: -10.000940322875977
    6. '   ' → logprob: -13.625940322875977
    7. ' )

' → logprob: -14.875940322875977
    8. ' ' → logprob: -15.375940322875977
    9. ')`' → logprob: -15.750940322875977
    10. ')

' → logprob: -16.125940322875977

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010566549375653267
    2. '        
' → logprob: -4.635566711425781
    3. ' 
' → logprob: -8.635566711425781
    4. '   ' → logprob: -9.260566711425781
    5. '  
' → logprob: -9.260566711425781
    6. ' ' → logprob: -9.510566711425781
    7. ')' → logprob: -9.885566711425781
    8. '        ' → logprob: -10.135566711425781
    9. '```' → logprob: -10.135566711425781
    10. ' ' → logprob: -10.260566711425781

Token 407: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06958900392055511
    2. '       ' → logprob: -2.9445888996124268
    3. 'import' → logprob: -4.319589138031006
    4. ' count' → logprob: -7.069589138031006
    5. 'from' → logprob: -8.819588661193848
    6. ' import' → logprob: -10.194588661193848
    7. 'num' → logprob: -10.319588661193848
    8. 'b' → logprob: -10.319588661193848
    9. '   ' → logprob: -10.569588661193848
    10. '#' (adapté à ' #') → logprob: -10.569588661193848

Token 408: ' Nombre' (ID: 70208)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005807805340737104
    2. 'import' → logprob: -5.380807876586914
    3. 'b' → logprob: -7.880807876586914
    4. ' count' → logprob: -8.130807876586914
    5. 'num' → logprob: -8.880807876586914
    6. 'half' → logprob: -9.255807876586914
    7. 'cost' → logprob: -9.380807876586914
    8. 'from' → logprob: -9.630807876586914
    9. '#' → logprob: -10.380807876586914
    10. 'nb' → logprob: -10.755807876586914

Token 409: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01904287375509739
    2. '_half' → logprob: -4.39404296875
    3. '_b' → logprob: -6.39404296875
    4. 'de' → logprob: -6.89404296875
    5. 'half' → logprob: -7.01904296875
    6. '_de' → logprob: -7.14404296875
    7. '_min' → logprob: -7.51904296875
    8. ' de' → logprob: -8.14404296875
    9. '0' → logprob: -8.14404296875
    10. 'of' → logprob: -8.64404296875

Token 410: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25893524289131165
    2. 'de' → logprob: -2.3839352130889893
    3. ' de' → logprob: -3.0089352130889893
    4. '       ' → logprob: -3.1339352130889893
    5. 'b' → logprob: -4.258935451507568
    6. 'count' → logprob: -5.258935451507568
    7. ' of' → logprob: -5.383935451507568
    8. '_b' → logprob: -5.508935451507568
    9. '   ' → logprob: -5.633935451507568
    10. ' ' → logprob: -6.008935451507568

Token 411: ' boute' (ID: 110289)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6299411058425903
    2. 'count' → logprob: -0.8799411058425903
    3. 'half' → logprob: -3.629940986633301
    4. 'B' → logprob: -3.879940986633301
    5. '(' → logprob: -6.254940986633301
    6. 'dem' → logprob: -6.504940986633301
    7. '0' → logprob: -7.129940986633301
    8. ' ' → logprob: -9.0049409866333
    9. '(count' → logprob: -9.0049409866333
    10. ' count' → logprob: -9.2549409866333

Token 412: 'illes' (ID: 16849)
  Prédit: 'illes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illes' → logprob: -7.076218025758862e-05
    2. 'aux' → logprob: -10.875070571899414
    3. 'ille' → logprob: -10.875070571899414
    4. 'ttes' → logprob: -11.625070571899414
    5. 'lles' → logprob: -12.125070571899414
    6. 'ill' → logprob: -12.375070571899414
    7. 'b' → logprob: -13.500070571899414
    8. '```' → logprob: -13.500070571899414
    9. 'tes' → logprob: -13.875070571899414
    10. 'i' → logprob: -13.875070571899414

Token 413: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17402230203151703
    2. '0' → logprob: -1.9240223169326782
    3. ' ' → logprob: -5.174022197723389
    4. '_half' → logprob: -5.924022197723389
    5. 'half' → logprob: -6.299022197723389
    6. '_b' → logprob: -7.549022197723389
    7. '500' → logprob: -7.799022197723389
    8. '       ' → logprob: -7.799022197723389
    9. 'b' → logprob: -7.924022197723389
    10. ' =' → logprob: -8.174022674560547

Token 414: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015552932396531105
    2. '_' → logprob: -5.140552997589111
    3. 'de' → logprob: -5.390552997589111
    4. '500' → logprob: -5.515552997589111
    5. 'of' → logprob: -8.390552520751953
    6. 'd' → logprob: -8.890552520751953
    7. ' ' → logprob: -9.140552520751953
    8. 'half' → logprob: -9.265552520751953
    9. 'dem' → logprob: -9.640552520751953
    10. '_half' → logprob: -9.640552520751953

Token 415: '.' (ID: 13)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08069863170385361
    2. '.' → logprob: -2.7056987285614014
    3. '0' → logprob: -4.955698490142822
    4. 'de' → logprob: -6.080698490142822
    5. 'of' → logprob: -7.705698490142822
    6. '500' → logprob: -7.955698490142822
    7. ' ' → logprob: -8.95569896697998
    8. 'B' → logprob: -9.45569896697998
    9. ' de' → logprob: -9.70569896697998
    10. 'd' → logprob: -9.95569896697998

Token 416: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.01126803644001484
    2. '500' → logprob: -4.636268138885498
    3. ' ' → logprob: -7.386268138885498
    4. '0' → logprob: -7.636268138885498
    5. 'half' → logprob: -9.13626766204834
    6. 'B' → logprob: -9.51126766204834
    7. '```' → logprob: -9.51126766204834
    8. '50' → logprob: -9.88626766204834
    9. '_' → logprob: -10.26126766204834
    10. '.' → logprob: -10.88626766204834

Token 417: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -3.531315314830863e-06
    2. ' L' → logprob: -13.250003814697266
    3. '_L' → logprob: -14.000003814697266
    4. 'l' → logprob: -14.750003814697266
    5. ' litre' → logprob: -16.250003814697266
    6. 'B' → logprob: -16.500003814697266
    7. ' ' → logprob: -16.625003814697266
    8. 'LB' → logprob: -16.875003814697266
    9. 'lit' → logprob: -17.000003814697266
    10. ' =' → logprob: -17.375003814697266

Token 418: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6442909836769104
    2. ' =' → logprob: -1.0192909240722656
    3. 'count' → logprob: -2.7692909240722656
    4. '=' → logprob: -3.5192909240722656
    5. ' count' → logprob: -4.019290924072266
    6. '   ' → logprob: -6.269290924072266
    7. '=count' → logprob: -7.144290924072266
    8. ' ' → logprob: -8.769290924072266
    9. ' needed' → logprob: -8.894290924072266
    10. ',' → logprob: -9.269290924072266

Token 419: ' couvrir' (ID: 197187)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3026975989341736
    2. '(left' → logprob: -1.6776976585388184
    3. ' leftover' → logprob: -3.1776976585388184
    4. 'cover' → logprob: -3.5526976585388184
    5. 'import' → logprob: -7.677697658538818
    6. '[left' → logprob: -7.802697658538818
    7. '((' → logprob: -8.05269718170166
    8. 'rest' → logprob: -8.05269718170166
    9. '0' → logprob: -8.17769718170166
    10. ' leftovers' → logprob: -8.30269718170166

Token 420: ' leftover' (ID: 97990)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.2504459619522095
    2. 'left' → logprob: -2.00044584274292
    3. ' leftover' → logprob: -2.75044584274292
    4. ' (' → logprob: -4.12544584274292
    5. '   ' → logprob: -6.50044584274292
    6. ' leftovers' → logprob: -6.62544584274292
    7. ' left' → logprob: -7.00044584274292
    8. 'import' → logprob: -7.50044584274292
    9. '[left' → logprob: -7.87544584274292
    10. 'le' → logprob: -8.250446319580078

Token 421: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41214752197265625
    2. 'count' → logprob: -1.4121475219726562
    3. ' =' → logprob: -2.7871475219726562
    4. ' count' → logprob: -4.287147521972656
    5. '(count' → logprob: -4.662147521972656
    6. '=' → logprob: -5.162147521972656
    7. '=count' → logprob: -6.537147521972656
    8. ',' → logprob: -7.787147521972656
    9. ' (' → logprob: -8.162147521972656
    10. '   ' → logprob: -8.412147521972656

Token 422: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7006281614303589
    2. '       ' → logprob: -0.8256281614303589
    3. ' count' → logprob: -3.3256282806396484
    4. '(count' → logprob: -3.8256282806396484
    5. ' (' → logprob: -5.200628280639648
    6. '(' → logprob: -6.950628280639648
    7. 'b' → logprob: -8.200628280639648
    8. '   ' → logprob: -8.200628280639648
    9. '((' → logprob: -8.825628280639648
    10. '           ' → logprob: -8.950628280639648

Token 423: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00502845598384738
    2. 'import' → logprob: -5.755028247833252
    3. '       ' → logprob: -6.380028247833252
    4. ' count' → logprob: -9.38002872467041
    5. 'b' → logprob: -10.13002872467041
    6. 'from' → logprob: -11.38002872467041
    7. '   ' → logprob: -11.63002872467041
    8. '           ' → logprob: -13.13002872467041
    9. 'num' → logprob: -13.25502872467041
    10. ' import' → logprob: -13.50502872467041

Token 424: ' Chaque' (ID: 94758)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.004179902374744415
    2. 'import' → logprob: -6.379179954528809
    3. 'b' → logprob: -6.754179954528809
    4. '       ' → logprob: -7.129179954528809
    5. 'num' → logprob: -8.879179954528809
    6. ' count' → logprob: -9.129179954528809
    7. '           ' → logprob: -9.629179954528809
    8. 'half' → logprob: -10.004179954528809
    9. 'from' → logprob: -10.254179954528809
    10. 'needed' → logprob: -10.504179954528809

Token 425: ' bouteille' (ID: 161126)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3182428479194641
    2. 'count' → logprob: -2.0682427883148193
    3. '0' → logprob: -2.3182427883148193
    4. 'half' → logprob: -4.193243026733398
    5. ' count' → logprob: -5.193243026733398
    6. ' half' → logprob: -5.318243026733398
    7. ' ' → logprob: -5.443243026733398
    8. ' bottle' → logprob: -5.568243026733398
    9. 'B' → logprob: -5.693243026733398
    10. '_b' → logprob: -6.568243026733398

Token 426: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34093576669692993
    2. '0' → logprob: -1.7159357070922852
    3. ' de' → logprob: -2.715935707092285
    4. 'de' → logprob: -3.965935707092285
    5. ' ' → logprob: -5.590935707092285
    6. '       ' → logprob: -5.715935707092285
    7. '500' → logprob: -5.715935707092285
    8. '   ' → logprob: -6.090935707092285
    9. 'B' → logprob: -6.215935707092285
    10. '(' → logprob: -6.715935707092285

Token 427: '0' (ID: 15)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4005378186702728
    2. '_' → logprob: -1.5255378484725952
    3. '0' → logprob: -2.4005377292633057
    4. ' de' → logprob: -4.150537967681885
    5. 'of' → logprob: -6.150537967681885
    6. '500' → logprob: -6.150537967681885
    7. '#' → logprob: -7.275537967681885
    8. ' ' → logprob: -8.400537490844727
    9. 'cont' → logprob: -8.775537490844727
    10. '   ' → logprob: -9.400537490844727

Token 428: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005817521829158068
    2. '500' → logprob: -5.505817413330078
    3. ':' → logprob: -7.380817413330078
    4. '_' → logprob: -8.005817413330078
    5. '=' → logprob: -8.630817413330078
    6. 'of' → logprob: -9.255817413330078
    7. '5' → logprob: -10.005817413330078
    8. ',' → logprob: -10.005817413330078
    9. ' de' → logprob: -10.255817413330078
    10. 'de' → logprob: -10.380817413330078

Token 429: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02806740812957287
    2. '500' → logprob: -3.6530673503875732
    3. '.' → logprob: -7.028067588806152
    4. 'is' → logprob: -8.778067588806152
    5. '50' → logprob: -8.778067588806152
    6. '2' → logprob: -9.028067588806152
    7. ' ' → logprob: -9.403067588806152
    8. '```' → logprob: -9.778067588806152
    9. '(' → logprob: -10.278067588806152
    10. '0' → logprob: -10.528067588806152

Token 430: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00689842039719224
    2. ' litre' → logprob: -6.381898403167725
    3. '*' → logprob: -6.506898403167725
    4. '_L' → logprob: -6.881898403167725
    5. 'lit' → logprob: -7.756898403167725
    6. 'l' → logprob: -7.881898403167725
    7. '_l' → logprob: -7.881898403167725
    8. '   ' → logprob: -8.006898880004883
    9. ' L' → logprob: -8.131898880004883
    10. '_' → logprob: -9.131898880004883

Token 431: ' couvre' (ID: 137218)
  Prédit: '_needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_needed' → logprob: -1.279571533203125
    2. 'count' → logprob: -1.404571533203125
    3. 'needed' → logprob: -2.029571533203125
    4. 'required' → logprob: -3.029571533203125
    5. ':' → logprob: -3.779571533203125
    6. '_count' → logprob: -3.779571533203125
    7. 'b' → logprob: -3.904571533203125
    8. 'num' → logprob: -4.029571533203125
    9. '500' → logprob: -4.029571533203125
    10. '_' → logprob: -4.154571533203125

Token 432: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.9707610011100769
    2. '(' → logprob: -1.3457610607147217
    3. ' (' → logprob: -1.7207610607147217
    4. '(left' → logprob: -2.5957610607147217
    5. ' ' → logprob: -2.7207610607147217
    6. 'left' → logprob: -4.595760822296143
    7. '((' → logprob: -5.220760822296143
    8. 'import' → logprob: -5.720760822296143
    9. '(count' → logprob: -6.220760822296143
    10. '   ' → logprob: -6.345760822296143

Token 433: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.32835501432418823
    2. '(' → logprob: -1.328355073928833
    3. '((' → logprob: -5.453354835510254
    4. ' ' → logprob: -5.453354835510254
    5. ' (' → logprob: -5.953354835510254
    6. '(left' → logprob: -6.203354835510254
    7. 'left' → logprob: -7.703354835510254
    8. '(max' → logprob: -8.453354835510254
    9. '(min' → logprob: -8.703354835510254
    10. 'import' → logprob: -8.828354835510254

Token 434: 'ml' (ID: 1560)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6622992157936096
    2. '+' → logprob: -2.037299156188965
    3. ' +' → logprob: -2.287299156188965
    4. '//' → logprob: -2.787299156188965
    5. '
' → logprob: -3.662299156188965
    6. ' //' → logprob: -3.787299156188965
    7. 'mill' → logprob: -3.912299156188965
    8. 'if' → logprob: -4.162299156188965
    9. '),' → logprob: -4.537299156188965
    10. '#' → logprob: -4.537299156188965

Token 435: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8273078799247742
    2. 'count' → logprob: -0.9523078799247742
    3. 'import' → logprob: -2.952307939529419
    4. ' +' → logprob: -3.327307939529419
    5. '
' → logprob: -4.20230770111084
    6. ' (' → logprob: -4.45230770111084
    7. ',' → logprob: -4.57730770111084
    8. ' count' → logprob: -4.57730770111084
    9. 'b' → logprob: -4.82730770111084
    10. '(count' → logprob: -5.45230770111084

Token 436: ' on' (ID: 402)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12501907348632812
    2. ' count' → logprob: -2.500019073486328
    3. '       ' → logprob: -3.500019073486328
    4. 'b' → logprob: -5.875019073486328
    5. 'import' → logprob: -6.875019073486328
    6. ' bottles' → logprob: -7.625019073486328
    7. '           ' → logprob: -9.000019073486328
    8. ' import' → logprob: -9.000019073486328
    9. 'num' → logprob: -9.125019073486328
    10. 'n' → logprob: -9.250019073486328

Token 437: ' div' (ID: 4223)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.216813564300537
    2. 'import' → logprob: -1.341813564300537
    3. 'count' → logprob: -2.466813564300537
    4. 'importe' → logprob: -2.466813564300537
    5. ' (' → logprob: -2.591813564300537
    6. '(count' → logprob: -2.966813564300537
    7. ' importe' → logprob: -3.216813564300537
    8. '#' → logprob: -3.591813564300537
    9. '((' → logprob: -3.841813564300537
    10. 'from' → logprob: -4.841813564300537

Token 438: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -4.084206375409849e-05
    2. 'ide' → logprob: -10.625041007995605
    3. 'iser' → logprob: -13.250041007995605
    4. 'isez' → logprob: -13.375041007995605
    5. '```' → logprob: -13.375041007995605
    6. '   ' → logprob: -13.500041007995605
    7. 'iseur' → logprob: -13.625041007995605
    8. 'isé' → logprob: -13.625041007995605
    9. 'ize' → logprob: -13.875041007995605
    10. '0' → logprob: -14.125041007995605

Token 439: ' en' (ID: 469)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.10682504624128342
    2. ' (' → logprob: -3.231825113296509
    3. ' leftover' → logprob: -3.856825113296509
    4. '(' → logprob: -4.10682487487793
    5. 'left' → logprob: -4.48182487487793
    6. '       ' → logprob: -6.48182487487793
    7. '           ' → logprob: -6.60682487487793
    8. ',' → logprob: -6.73182487487793
    9. 'par' → logprob: -6.73182487487793
    10. '(le' → logprob: -7.10682487487793

Token 440: ' arr' (ID: 1724)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.4010107517242432
    2. '-' → logprob: -1.7760107517242432
    3. ' leftover' → logprob: -1.9010107517242432
    4. '(' → logprob: -2.026010751724243
    5. '(-' → logprob: -2.901010751724243
    6. '500' → logprob: -3.026010751724243
    7. 'div' → logprob: -3.651010751724243
    8. ' -' → logprob: -3.901010751724243
    9. '```' → logprob: -4.276010513305664
    10. ' ' → logprob: -4.276010513305664

Token 441: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.9291391968727112
    2. 'ondi' → logprob: -1.3041391372680664
    3. 'ont' → logprob: -1.4291391372680664
    4. 'ivée' → logprob: -4.179139137268066
    5. 'up' → logprob: -4.554139137268066
    6. '(' → logprob: -5.304139137268066
    7. 'on' → logprob: -5.554139137268066
    8. 'êt' → logprob: -5.554139137268066
    9. 'ivant' → logprob: -5.554139137268066
    10. 'ivé' → logprob: -5.554139137268066

Token 442: 'issant' (ID: 31359)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.3748261034488678
    2. '(left' → logprob: -2.249826192855835
    3. '-up' → logprob: -2.624826192855835
    4. '(-' → logprob: -2.624826192855835
    5. '(' → logprob: -4.374825954437256
    6. '(up' → logprob: -4.499825954437256
    7. 'left' → logprob: -4.874825954437256
    8. '((' → logprob: -5.374825954437256
    9. 'away' → logprob: -5.624825954437256
    10. 'int' → logprob: -6.249825954437256

Token 443: ' vers' (ID: 3640)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.14562416076660156
    2. '-up' → logprob: -3.3956241607666016
    3. 'left' → logprob: -3.8956241607666016
    4. '(left' → logprob: -3.8956241607666016
    5. '   ' → logprob: -4.270624160766602
    6. '(-' → logprob: -4.395624160766602
    7. '(' → logprob: -5.145624160766602
    8. '(count' → logprob: -5.520624160766602
    9. ' (' → logprob: -5.645624160766602
    10. '-' → logprob: -5.645624160766602

Token 444: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.00763703603297472
    2. 'l' → logprob: -5.632637023925781
    3. '-' → logprob: -6.257637023925781
    4. 'haut' → logprob: -7.382637023925781
    5. '   ' → logprob: -7.757637023925781
    6. '+' → logprob: -8.757637023925781
    7. '0' → logprob: -8.882637023925781
    8. '1' → logprob: -9.007637023925781
    9. '_le' → logprob: -9.007637023925781
    10. '           ' → logprob: -9.257637023925781

Token 445: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.0018565307836979628
    2. 'ha' → logprob: -6.376856327056885
    3. '+' → logprob: -10.501856803894043
    4. '```' → logprob: -11.001856803894043
    5. 'sup' → logprob: -11.126856803894043
    6. '0' → logprob: -11.126856803894043
    7. '   ' → logprob: -11.126856803894043
    8. '1' → logprob: -11.501856803894043
    9. 'up' → logprob: -11.626856803894043
    10. '           ' → logprob: -12.376856803894043

Token 446: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5900739431381226
    2. '(count' → logprob: -1.9650739431381226
    3. '((' → logprob: -2.215074062347412
    4. ' (' → logprob: -2.840074062347412
    5. 'count' → logprob: -2.840074062347412
    6. '(' → logprob: -3.465074062347412
    7. '(left' → logprob: -4.465074062347412
    8. ',' → logprob: -4.715074062347412
    9. ' ((' → logprob: -4.840074062347412
    10. 'left' → logprob: -4.965074062347412

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0105997323989868
    2. 'count' → logprob: -1.2605997323989868
    3. '(count' → logprob: -1.7605997323989868
    4. ' (' → logprob: -2.5105996131896973
    5. ' count' → logprob: -2.5105996131896973
    6. '(' → logprob: -4.635599613189697
    7. '((' → logprob: -5.635599613189697
    8. ' ((' → logprob: -7.010599613189697
    9. '0' → logprob: -7.260599613189697
    10. 'import' → logprob: -7.635599613189697

Token 448: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.011330267414450645
    2. 'import' → logprob: -5.3863301277160645
    3. '       ' → logprob: -5.7613301277160645
    4. 'b' → logprob: -6.0113301277160645
    5. 'num' → logprob: -7.3863301277160645
    6. ' count' → logprob: -8.636330604553223
    7. 'n' → logprob: -9.886330604553223
    8. 'from' → logprob: -10.261330604553223
    9. 'half' → logprob: -10.261330604553223
    10. '           ' → logprob: -10.386330604553223

Token 449: '_half' (ID: 105284)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002356264041736722
    2. '_half' → logprob: -6.127356052398682
    3. '_b' → logprob: -9.50235652923584
    4. '0' → logprob: -10.12735652923584
    5. '=' → logprob: -11.37735652923584
    6. '_small' → logprob: -11.62735652923584
    7. ' =' → logprob: -11.62735652923584
    8. '_zero' → logprob: -12.25235652923584
    9. 'half' → logprob: -12.25235652923584
    10. '_B' → logprob: -13.00235652923584

Token 450: 'L' (ID: 43)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4933153986930847
    2. '=' → logprob: -0.9933153986930847
    3. '_' → logprob: -3.9933154582977295
    4. 'L' → logprob: -7.99331521987915
    5. '_L' → logprob: -8.993315696716309
    6. '_l' → logprob: -10.243315696716309
    7. '   ' → logprob: -10.743315696716309
    8. ' ' → logprob: -10.868315696716309
    9. ')' → logprob: -11.118315696716309
    10. '  ' → logprob: -11.368315696716309

Token 451: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889331132173538
    2. '=' → logprob: -2.5788934230804443
    3. '=(' → logprob: -13.078893661499023
    4. ' =(' → logprob: -13.703893661499023
    5. ' ' → logprob: -15.703893661499023
    6. ',' → logprob: -16.953893661499023
    7. '   ' → logprob: -17.203893661499023
    8. '=int' → logprob: -17.328893661499023
    9. '=((' → logprob: -17.578893661499023
    10. ' ' → logprob: -17.703893661499023

Token 452: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.05641994997859001
    2. ' (' → logprob: -2.931419849395752
    3. ' ' → logprob: -7.681419849395752
    4. '   ' → logprob: -8.05642032623291
    5. '(l' → logprob: -8.80642032623291
    6. ' -' → logprob: -8.93142032623291
    7. ' leftover' → logprob: -8.93142032623291
    8. '(' → logprob: -8.93142032623291
    9. '  ' → logprob: -9.80642032623291
    10. '-' → logprob: -10.80642032623291

Token 453: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0025817241985350847
    2. '(left' → logprob: -6.502581596374512
    3. ' leftover' → logprob: -6.877581596374512
    4. ' left' → logprob: -10.877581596374512
    5. '   ' → logprob: -11.377581596374512
    6. '[left' → logprob: -11.502581596374512
    7. '	left' → logprob: -13.502581596374512
    8. ',left' → logprob: -13.627581596374512
    9. '(' → logprob: -13.877581596374512
    10. ' ' → logprob: -14.252581596374512

Token 454: 'over' (ID: 2898)
  Prédit: 'over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -7.76759916334413e-05
    2. 'off' → logprob: -9.875077247619629
    3. 'left' → logprob: -11.750077247619629
    4. 'overs' → logprob: -12.375077247619629
    5. '_over' → logprob: -12.625077247619629
    6. '+' → logprob: -13.250077247619629
    7. 'out' → logprob: -13.250077247619629
    8. '_' → logprob: -13.625077247619629
    9. 'o' → logprob: -13.625077247619629
    10. ' leftover' → logprob: -13.625077247619629

Token 455: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.02975071594119072
    2. '+' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.52975082397461
    4. '   ' → logprob: -17.27975082397461
    5. '  ' → logprob: -17.90475082397461
    6. ' ' → logprob: -18.27975082397461
    7. '＋' → logprob: -19.77975082397461
    8. '+(' → logprob: -20.40475082397461
    9. '```' → logprob: -20.40475082397461
    10. '    ' → logprob: -20.90475082397461

Token 456: ' ' (ID: 220)
  Prédit: '499'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '499' → logprob: -0.018151111900806427
    2. '500' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.01815128326416
    4. '   ' → logprob: -15.14315128326416
    5. '  ' → logprob: -17.143150329589844
    6. '```' → logprob: -17.768150329589844
    7. '
' → logprob: -17.893150329589844
    8. '498' → logprob: -18.268150329589844
    9. '     ' → logprob: -18.518150329589844
    10. '501' → logprob: -18.893150329589844

Token 457: '499' (ID: 29483)
  Prédit: '499'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '499' → logprob: -0.0017025562701746821
    2. '500' → logprob: -6.376702785491943
    3. ' ' → logprob: -15.376702308654785
    4. '   ' → logprob: -17.1267032623291
    5. '```' → logprob: -17.3767032623291
    6. '999' → logprob: -17.6267032623291
    7. '498' → logprob: -17.8767032623291
    8. '399' → logprob: -18.3767032623291
    9. '  ' → logprob: -18.5017032623291
    10. '4' → logprob: -18.8767032623291

Token 458: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019833561964333057
    2. ')//' → logprob: -6.251983165740967
    3. ' )' → logprob: -9.876983642578125
    4. '//' → logprob: -12.751983642578125
    5. ' //' → logprob: -15.376983642578125
    6. '   ' → logprob: -15.501983642578125
    7. '）' → logprob: -16.376983642578125
    8. '```' → logprob: -17.376983642578125
    9. '       ' → logprob: -17.751983642578125
    10. '	' → logprob: -17.751983642578125

Token 459: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.02359495498239994
    2. ' //' → logprob: -3.773594856262207
    3. ')' → logprob: -8.648594856262207
    4. '       ' → logprob: -9.023594856262207
    5. '   ' → logprob: -10.398594856262207
    6. '```' → logprob: -11.398594856262207
    7. '           ' → logprob: -12.273594856262207
    8. '	' → logprob: -13.648594856262207
    9. '500' → logprob: -13.648594856262207
    10. ')//' → logprob: -13.773594856262207

Token 460: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.750001907348633
    4. '```' → logprob: -21.125001907348633
    5. '  ' → logprob: -21.500001907348633
    6. '5' → logprob: -23.125001907348633
    7. '    ' → logprob: -23.750001907348633
    8. '`' → logprob: -23.875001907348633
    9. '499' → logprob: -23.875001907348633
    10. '501' → logprob: -24.125001907348633

Token 461: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -20.5
    5. '  ' → logprob: -21.125
    6. '499' → logprob: -23.125
    7. '5' → logprob: -23.5
    8. '    ' → logprob: -23.625
    9. '50' → logprob: -23.875
    10. '
' → logprob: -23.875

Token 462: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011994586326181889
    2. '
' → logprob: -5.511994361877441
    3. '        
' → logprob: -5.511994361877441
    4. '<|end|>' → logprob: -5.761994361877441
    5. '<|end|>' → logprob: -8.386994361877441
    6. '   ' → logprob: -8.636994361877441
    7. ')' → logprob: -9.511994361877441
    8. '    
' → logprob: -9.886994361877441
    9. 'cost' → logprob: -10.511994361877441
    10. '  
' → logprob: -10.636994361877441

Token 463: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06920807808637619
    2. '        
' → logprob: -3.1942081451416016
    3. '<|end|>' → logprob: -4.194208145141602
    4. '   ' → logprob: -5.819208145141602
    5. '
' → logprob: -5.944208145141602
    6. '    
' → logprob: -7.069208145141602
    7. ')' → logprob: -7.069208145141602
    8. '  
' → logprob: -7.194208145141602
    9. '<|end|>' → logprob: -7.444208145141602
    10. '       
' → logprob: -8.194208145141602

Token 464: ' Technique' (ID: 122314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ''arr' (ID: 49695)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'division' → logprob: -1.1236810684204102
    2. 'ceil' → logprob: -1.2486810684204102
    3. 'integer' → logprob: -1.4986810684204102
    4. 'div' → logprob: -2.74868106842041
    5. 'arr' → logprob: -2.87368106842041
    6. 'int' → logprob: -3.99868106842041
    7. 'ent' → logprob: -4.37368106842041
    8. 'ce' → logprob: -5.99868106842041
    9. 'pl' → logprob: -5.99868106842041
    10. 'floor' → logprob: -6.49868106842041

Token 467: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.10193482786417007
    2. 'ond' → logprob: -2.4769349098205566
    3. 'ondissement' → logprob: -4.351934909820557
    4. 'ont' → logprob: -11.601934432983398
    5. '```' → logprob: -12.226934432983398
    6. '>' → logprob: -13.226934432983398
    7. 'ound' → logprob: -13.726934432983398
    8. '

' → logprob: -13.726934432983398
    9. 'od' → logprob: -13.851934432983398
    10. 'on' → logprob: -14.226934432983398

Token 468: ' supérieur' (ID: 98491)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017002059146761894
    2. '        
' → logprob: -4.517002105712891
    3. 'cost' → logprob: -6.267002105712891
    4. '   ' → logprob: -6.392002105712891
    5. ' cost' → logprob: -7.142002105712891
    6. 'total' → logprob: -7.517002105712891
    7. '    
' → logprob: -8.14200210571289
    8. '
' → logprob: -8.14200210571289
    9. ' total' → logprob: -8.89200210571289
    10. '  
' → logprob: -9.76700210571289

Token 471: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6115744113922119
    2. 'total' → logprob: -1.236574411392212
    3. '#' (adapté à ' #') → logprob: -2.111574411392212
    4. '       ' → logprob: -3.111574411392212
    5. ' cost' → logprob: -7.486574172973633
    6. 'current' → logprob: -7.986574172973633
    7. ' total' → logprob: -8.486574172973633
    8. 'price' → logprob: -8.486574172973633
    9. ' #' → logprob: -9.236574172973633
    10. '   ' → logprob: -9.611574172973633

Token 472: ' Calcul' (ID: 57243)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3499855697154999
    2. 'total' → logprob: -1.2249855995178223
    3. 'current' → logprob: -7.474985599517822
    4. ' cost' → logprob: -7.474985599517822
    5. ' total' → logprob: -8.599985122680664
    6. 'co' → logprob: -9.474985122680664
    7. 'price' → logprob: -9.599985122680664
    8. '#' → logprob: -9.849985122680664
    9. '   ' → logprob: -11.724985122680664
    10. 'cout' → logprob: -12.849985122680664

Token 473: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.6537874341011047
    2. '       ' → logprob: -1.15378737449646
    3. ' total' → logprob: -2.02878737449646
    4. 'total' → logprob: -4.153787612915039
    5. '_total' → logprob: -4.778787612915039
    6. '   ' → logprob: -5.028787612915039
    7. 'du' → logprob: -6.403787612915039
    8. '           ' → logprob: -8.403787612915039
    9. '_du' → logprob: -9.028787612915039
    10. '(total' → logprob: -9.528787612915039

Token 474: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.35504862666130066
    2. 'total' → logprob: -1.855048656463623
    3. 'co' → logprob: -1.980048656463623
    4. ' cost' → logprob: -6.480048656463623
    5. ' total' → logprob: -6.730048656463623
    6. '   ' → logprob: -7.980048656463623
    7. 'cout' → logprob: -8.105048179626465
    8. ' coût' → logprob: -8.105048179626465
    9. 'prix' → logprob: -8.355048179626465
    10. 'c' → logprob: -8.605048179626465

Token 475: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0297613143920898
    2. 'total' → logprob: -1.0297613143920898
    3. ' total' → logprob: -1.5297613143920898
    4. ' =' → logprob: -3.15476131439209
    5. ' cost' → logprob: -4.65476131439209
    6. '=' → logprob: -4.90476131439209
    7. 'cost' → logprob: -5.15476131439209
    8. '   ' → logprob: -5.90476131439209
    9. '           ' → logprob: -7.90476131439209
    10. '_total' → logprob: -8.02976131439209

Token 476: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7265110015869141
    2. 'total' → logprob: -1.101511001586914
    3. ' total' → logprob: -2.226511001586914
    4. ' cost' → logprob: -3.226511001586914
    5. 'cost' → logprob: -3.351511001586914
    6. ' =' → logprob: -7.226511001586914
    7. '   ' → logprob: -8.476511001586914
    8. 'current' → logprob: -9.226511001586914
    9. '=' → logprob: -9.476511001586914
    10. '        
' → logprob: -9.851511001586914

Token 477: ' cette' (ID: 7696)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5789593458175659
    2. ' count' → logprob: -0.8289593458175659
    3. '   ' → logprob: -6.8289594650268555
    4. ' cost' → logprob: -7.4539594650268555
    5. 'cost' → logprob: -7.4539594650268555
    6. 'A' → logprob: -7.8289594650268555
    7. ' A' → logprob: -8.703959465026855
    8. '       ' → logprob: -9.078959465026855
    9. ' ' → logprob: -10.703959465026855
    10. '(count' → logprob: -10.828959465026855

Token 478: ' combinaison' (ID: 165933)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.22401151061058044
    2. ' combinaison' → logprob: -1.8490115404129028
    3. ' combination' → logprob: -3.7240114212036133
    4. 'count' → logprob: -4.974011421203613
    5. 'combo' → logprob: -5.849011421203613
    6. ' comb' → logprob: -6.349011421203613
    7. 'com' → logprob: -6.474011421203613
    8. ' ' → logprob: -6.474011421203613
    9. ' combo' → logprob: -6.974011421203613
    10. ' count' → logprob: -7.349011421203613

Token 479: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3982192575931549
    2. ' cost' → logprob: -1.7732192277908325
    3. ' total' → logprob: -2.523219347000122
    4. 'total' → logprob: -3.023219347000122
    5. 'cost' → logprob: -3.648219347000122
    6. '        
' → logprob: -6.148219108581543
    7. '   ' → logprob: -7.148219108581543
    8. '
' → logprob: -7.523219108581543
    9. '           ' → logprob: -9.273219108581543
    10. '    
' → logprob: -10.398219108581543

Token 480: '       ' (ID: 309)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.4277385175228119
    2. 'cost' → logprob: -1.8027385473251343
    3. '       ' → logprob: -2.3027384281158447
    4. ' total' → logprob: -3.3027384281158447
    5. 'total' → logprob: -3.4277384281158447
    6. '   ' → logprob: -4.302738666534424
    7. 'current' → logprob: -9.052738189697266
    8. ' current' → logprob: -9.302738189697266
    9. '        
' → logprob: -10.677738189697266
    10. ' costo' → logprob: -10.677738189697266

Token 481: ' total' (ID: 3609)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.09995386004447937
    2. 'total' (adapté à ' total') → logprob: -2.7249538898468018
    3. ' cost' → logprob: -3.5999538898468018
    4. ' total' → logprob: -6.599953651428223
    5. '       ' → logprob: -7.224953651428223
    6. 'current' → logprob: -9.099953651428223
    7. '   ' → logprob: -10.474953651428223
    8. 'price' → logprob: -11.349953651428223
    9. 'co' → logprob: -13.349953651428223
    10. ' current' → logprob: -13.724953651428223

Token 482: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.337598592042923
    2. ' =' → logprob: -1.8375985622406006
    3. '_' → logprob: -2.0875985622406006
    4. '=' → logprob: -6.58759880065918
    5. '_co' → logprob: -6.58759880065918
    6. '_c' → logprob: -8.71259880065918
    7. 'cost' → logprob: -9.08759880065918
    8. '_price' → logprob: -9.08759880065918
    9. ' _' → logprob: -9.33759880065918
    10. '   ' → logprob: -10.83759880065918

Token 483: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141363143920898
    2. '=' → logprob: -1.701413631439209
    3. '   ' → logprob: -15.201414108276367
    4. ' ' → logprob: -16.951414108276367
    5. '       ' → logprob: -17.326414108276367
    6. '=A' → logprob: -17.326414108276367
    7. '```' → logprob: -17.701414108276367
    8. '=count' → logprob: -18.201414108276367
    9. '＝' → logprob: -18.701414108276367
    10. '    ' → logprob: -18.701414108276367

Token 484: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.14304758608341217
    2. ' count' → logprob: -2.018047571182251
    3. 'A' → logprob: -8.768047332763672
    4. ' A' → logprob: -9.143047332763672
    5. '   ' → logprob: -9.268047332763672
    6. 'cost' → logprob: -11.768047332763672
    7. '(count' → logprob: -12.893047332763672
    8. ' ' → logprob: -13.518047332763672
    9. ' cost' → logprob: -13.518047332763672
    10. '       ' → logprob: -14.393047332763672

Token 485: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.253090865968261e-06
    2. '_A' → logprob: -11.750009536743164
    3. 'A' → logprob: -14.250009536743164
    4. ' _' → logprob: -15.250009536743164
    5. '1' → logprob: -15.750009536743164
    6. ')' → logprob: -17.875009536743164
    7. '_a' → logprob: -18.000009536743164
    8. '_cost' → logprob: -18.000009536743164
    9. '[' → logprob: -18.250009536743164
    10. '.' → logprob: -18.375009536743164

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.090760431718081e-05
    2. '_' → logprob: -9.375090599060059
    3. 'A' → logprob: -12.250090599060059
    4. 'count' → logprob: -15.125090599060059
    5. ' ' → logprob: -15.125090599060059
    6. '```' → logprob: -15.250090599060059
    7. '100' → logprob: -16.000091552734375
    8. 'cost' → logprob: -17.250091552734375
    9. 'half' → logprob: -17.250091552734375
    10. '-' → logprob: -17.750091552734375

Token 487: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -7.584239938296378e-06
    2. '1' → logprob: -11.875007629394531
    3. '_' → logprob: -15.750007629394531
    4. 'A' → logprob: -15.875007629394531
    5. '*' → logprob: -16.25000762939453
    6. '_L' → logprob: -16.62500762939453
    7. '```' → logprob: -17.00000762939453
    8. ' L' → logprob: -17.87500762939453
    9. '+' → logprob: -18.25000762939453
    10. ' ' → logprob: -18.25000762939453

Token 488: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018177449703216553
    2. '*' → logprob: -4.018177509307861
    3. '*A' → logprob: -10.518177032470703
    4. ' ' → logprob: -15.268177032470703
    5. '   ' → logprob: -16.393177032470703
    6. '**' → logprob: -16.643177032470703
    7. ' ' → logprob: -16.893177032470703
    8. '```' → logprob: -17.143177032470703
    9. '#' → logprob: -17.768177032470703
    10. 'A' → logprob: -18.143177032470703

Token 489: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00861468818038702
    2. ' A' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.508615493774414
    4. '	A' → logprob: -17.383615493774414
    5. ' ' → logprob: -17.508615493774414
    6. '  ' → logprob: -18.883615493774414
    7. '```' → logprob: -20.133615493774414
    8. '    ' → logprob: -20.383615493774414
    9. '*A' → logprob: -20.758615493774414
    10. '_A' → logprob: -20.883615493774414

Token 490: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023245826363563538
    2. '+' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.02324676513672
    4. ' ' → logprob: -16.27324676513672
    5. ' plus' → logprob: -16.64824676513672
    6. ' +
' → logprob: -17.77324676513672
    7. '```' → logprob: -18.02324676513672
    8. '＋' → logprob: -19.14824676513672
    9. '+B' → logprob: -19.52324676513672
    10. '+
' → logprob: -19.89824676513672

Token 491: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001170225441455841
    2. ' count' → logprob: -6.7511701583862305
    3. '   ' → logprob: -20.251171112060547
    4. '	count' → logprob: -20.626171112060547
    5. '(count' → logprob: -20.751171112060547
    6. ' ' → logprob: -22.501171112060547
    7. 'B' → logprob: -23.126171112060547
    8. '[count' → logprob: -23.501171112060547
    9. '       ' → logprob: -23.626171112060547
    10. 'cost' → logprob: -23.751171112060547

Token 492: '_half' (ID: 105284)
  Prédit: '_half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -0.08925755321979523
    2. '_' → logprob: -2.4642574787139893
    3. '_B' → logprob: -8.96425724029541
    4. '_HALF' → logprob: -10.33925724029541
    5. '_hal' → logprob: -10.33925724029541
    6. ' _' → logprob: -10.71425724029541
    7. ' ' → logprob: -10.83925724029541
    8. 'half' → logprob: -11.08925724029541
    9. 'B' → logprob: -11.21425724029541
    10. '   ' → logprob: -12.08925724029541

Token 493: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00862143188714981
    2. 'B' → logprob: -4.7586212158203125
    3. '0' → logprob: -13.758621215820312
    4. '1' → logprob: -13.883621215820312
    5. 'count' → logprob: -14.008621215820312
    6. '2' → logprob: -14.258621215820312
    7. '500' → logprob: -14.383621215820312
    8. 'LB' → logprob: -14.883621215820312
    9. '(B' → logprob: -15.258621215820312
    10. 'half' → logprob: -15.383621215820312

Token 494: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.048593729734420776
    2. ' *' → logprob: -3.048593759536743
    3. 'B' → logprob: -12.298593521118164
    4. '`' → logprob: -14.798593521118164
    5. ' B' → logprob: -14.798593521118164
    6. ' ' → logprob: -14.923593521118164
    7. '```' → logprob: -14.923593521118164
    8. '**' → logprob: -15.298593521118164
    9. '   ' → logprob: -17.173593521118164
    10. ')' → logprob: -18.048593521118164

Token 495: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00861456897109747
    2. ' B' → logprob: -4.758614540100098
    3. '	B' → logprob: -18.508615493774414
    4. ' ' → logprob: -19.133615493774414
    5. '(B' → logprob: -20.258615493774414
    6. '   ' → logprob: -20.258615493774414
    7. '```' → logprob: -20.883615493774414
    8. '_B' → logprob: -21.008615493774414
    9. '"B' → logprob: -21.633615493774414
    10. '>B' → logprob: -21.633615493774414

Token 496: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5358542799949646
    2. '       ' → logprob: -1.0358543395996094
    3. ' if' → logprob: -3.7858543395996094
    4. 'if' → logprob: -4.285854339599609
    5. '
' → logprob: -4.660854339599609
    6. '<|end|>' → logprob: -4.660854339599609
    7. '    
' → logprob: -6.785854339599609
    8. '        
' → logprob: -7.285854339599609
    9. ')' → logprob: -7.410854339599609
    10. '  
' → logprob: -7.535854339599609

Token 497: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6118395924568176
    2. '       ' → logprob: -1.3618395328521729
    3. 'if' → logprob: -1.8618395328521729
    4. ' if' → logprob: -3.486839532852173
    5. '   ' → logprob: -4.486839771270752
    6. '
' → logprob: -6.236839771270752
    7. '        
' → logprob: -6.986839771270752
    8. '```' → logprob: -7.736839771270752
    9. '  
' → logprob: -7.861839771270752
    10. '    
' → logprob: -8.111839294433594

Token 498: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009880274534225464
    2. '   ' → logprob: -4.759880065917969
    3. ' if' → logprob: -6.759880065917969
    4. '       ' → logprob: -9.634880065917969
    5. 'cost' → logprob: -10.134880065917969
    6. '	if' → logprob: -15.259880065917969
    7. ' cost' → logprob: -15.884880065917969
    8. '
' → logprob: -16.38488006591797
    9. '```' → logprob: -17.38488006591797
    10. '  ' → logprob: -17.38488006591797

Token 499: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000693016336299479
    2. '       ' → logprob: -7.875692844390869
    3. '   ' → logprob: -8.500693321228027
    4. ' if' → logprob: -9.125693321228027
    5. 'cost' → logprob: -14.375693321228027
    6. '	if' → logprob: -16.12569236755371
    7. 'If' → logprob: -17.00069236755371
    8. '           ' → logprob: -17.87569236755371
    9. '  ' → logprob: -18.00069236755371
    10. '    ' → logprob: -18.37569236755371

Token 500: ' met' (ID: 1421)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.045659665018320084
    2. ' if' → logprob: -3.1706597805023193
    3. '       ' → logprob: -6.04565954208374
    4. 'cost' → logprob: -9.170660018920898
    5. '=' → logprob: -9.420660018920898
    6. '   ' → logprob: -10.170660018920898
    7. ' =' → logprob: -10.795660018920898
    8. '           ' → logprob: -10.920660018920898
    9. ' cost' → logprob: -12.545660018920898
    10. 'update' → logprob: -13.045660018920898

Token 501: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.024239545688033104
    2. ' à' → logprob: -3.7742395401000977
    3. ' ' → logprob: -7.649239540100098
    4. ' ' → logprob: -9.024239540100098
    5. '-à' → logprob: -9.149239540100098
    6. '```' → logprob: -9.399239540100098
    7. 'À' → logprob: -10.149239540100098
    8. ''à' → logprob: -10.274239540100098
    9. 'cost' → logprob: -10.649239540100098
    10. 'a' → logprob: -10.649239540100098

Token 502: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.00010008628305513412
    2. ' jour' → logprob: -9.750100135803223
    3. 'jours' → logprob: -10.500100135803223
    4. '```' → logprob: -12.375100135803223
    5. 'j' → logprob: -12.625100135803223
    6. 'jou' → logprob: -13.125100135803223
    7. 'day' → logprob: -13.375100135803223
    8. 'journ' → logprob: -14.125100135803223
    9. 'Jour' → logprob: -14.625100135803223
    10. 'jourd' → logprob: -14.875100135803223

Token 503: ' la' (ID: 557)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.48627769947052
    2. 'cost' → logprob: -0.98627769947052
    3. 'if' → logprob: -4.6112775802612305
    4. ' if' → logprob: -6.4862775802612305
    5. ' le' → logprob: -8.11127758026123
    6. 'le' → logprob: -9.36127758026123
    7. ' la' → logprob: -9.36127758026123
    8. '   ' → logprob: -9.48627758026123
    9. '       ' → logprob: -9.98627758026123
    10. ' si' → logprob: -11.11127758026123

Token 504: ' solution' (ID: 7578)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.03823404014110565
    2. 'if' → logprob: -3.288233995437622
    3. ' cost' → logprob: -9.038233757019043
    4. ' if' → logprob: -9.538233757019043
    5. '   ' → logprob: -14.538233757019043
    6. 'best' → logprob: -15.038233757019043
    7. '_cost' → logprob: -15.413233757019043
    8. 'co' → logprob: -15.538233757019043
    9. '```' → logprob: -15.788233757019043
    10. '(cost' → logprob: -16.16323471069336

Token 505: ' minimale' (ID: 143217)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7737462520599365
    2. ' if' → logprob: -0.7737462520599365
    3. '   ' → logprob: -2.8987462520599365
    4. '       ' → logprob: -4.523746490478516
    5. 'cost' → logprob: -5.523746490478516
    6. ' si' → logprob: -5.648746490478516
    7. 'si' → logprob: -6.648746490478516
    8. ' cost' → logprob: -6.648746490478516
    9. '           ' → logprob: -7.523746490478516
    10. '	if' → logprob: -8.023746490478516

Token 506: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3456345200538635
    2. ' if' → logprob: -1.3456344604492188
    3. 'if' → logprob: -3.4706344604492188
    4. '   ' → logprob: -7.220634460449219
    5. ',' → logprob: -11.845634460449219
    6. '	if' → logprob: -12.095634460449219
    7. ' si' → logprob: -12.220634460449219
    8. '           ' → logprob: -12.595634460449219
    9. '      ' → logprob: -14.095634460449219
    10. '    ' → logprob: -14.345634460449219

Token 507: ' meilleur' (ID: 37552)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.12693576514720917
    2. 'total' → logprob: -2.1269357204437256
    3. '   ' → logprob: -13.376935958862305
    4. '	total' → logprob: -13.376935958862305
    5. ' ' → logprob: -13.501935958862305
    6. '(total' → logprob: -13.626935958862305
    7. ' cost' → logprob: -14.126935958862305
    8. ' ' → logprob: -14.751935958862305
    9. 'cost' → logprob: -15.126935958862305
    10. '$total' → logprob: -15.876935958862305

Token 508: ' coût' (ID: 73109)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5431110858917236
    2. ' if' → logprob: -1.5431110858917236
    3. 'total' → logprob: -1.6681110858917236
    4. 'if' → logprob: -1.6681110858917236
    5. ' total' → logprob: -1.7931110858917236
    6. '           ' → logprob: -4.6681108474731445
    7. '   ' → logprob: -5.5431108474731445
    8. '        ' → logprob: -5.6681108474731445
    9. 'cost' → logprob: -5.7931108474731445
    10. ' si' → logprob: -6.2931108474731445

Token 509: ' trouvé' (ID: 60081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034288892056792974
    2. ' if' → logprob: -5.753428936004639
    3. 'if' → logprob: -9.00342845916748
    4. ',' → logprob: -9.25342845916748
    5. '   ' → logprob: -10.87842845916748
    6. '	if' → logprob: -12.75342845916748
    7. '	' → logprob: -13.37842845916748
    8. '<|end|>' → logprob: -13.37842845916748
    9. '	   ' → logprob: -14.12842845916748
    10. ' =' → logprob: -14.12842845916748

Token 510: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010094137862324715
    2. ' if' → logprob: -4.760094165802002
    3. '   ' → logprob: -6.760094165802002
    4. 'if' → logprob: -8.635093688964844
    5. ',' → logprob: -9.760093688964844
    6. '```' → logprob: -10.510093688964844
    7. '        
' → logprob: -10.760093688964844
    8. '           ' → logprob: -12.135093688964844
    9. '<|end|>' → logprob: -12.385093688964844
    10. '	if' → logprob: -12.385093688964844

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001830410328693688
    2. ' if' → logprob: -8.87518310546875
    3. '   ' → logprob: -10.62518310546875
    4. ',' → logprob: -12.12518310546875
    5. 'if' → logprob: -12.12518310546875
    6. '```' → logprob: -12.37518310546875
    7. '<|end|>' → logprob: -13.37518310546875
    8. '           ' → logprob: -14.25018310546875
    9. '        
' → logprob: -14.50018310546875
    10. '
' → logprob: -15.25018310546875

Token 512: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.043567124754190445
    2. ' if' → logprob: -3.543567180633545
    3. '       ' → logprob: -4.293567180633545
    4. '   ' → logprob: -9.668566703796387
    5. 'cost' → logprob: -13.168566703796387
    6. '	if' → logprob: -15.668566703796387
    7. ' cost' → logprob: -16.168567657470703
    8. '```' → logprob: -16.293567657470703
    9. '           ' → logprob: -17.418567657470703
    10. ' ' → logprob: -17.918567657470703

Token 513: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3868728280067444
    2. 'total' → logprob: -1.1368727684020996
    3. '   ' → logprob: -13.636873245239258
    4. '(total' → logprob: -15.636873245239258
    5. '	total' → logprob: -15.886873245239258
    6. ' cost' → logprob: -16.386873245239258
    7. 'cost' → logprob: -16.386873245239258
    8. '       ' → logprob: -16.636873245239258
    9. ' ' → logprob: -16.636873245239258
    10. 'Total' → logprob: -18.261873245239258

Token 514: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.334622859954834
    2. '_' → logprob: -1.834622859954834
    3. 'cost' → logprob: -2.584622859954834
    4. '_min' → logprob: -3.459622859954834
    5. '   ' → logprob: -5.709622859954834
    6. 'min' → logprob: -5.959622859954834
    7. '_total' → logprob: -6.084622859954834
    8. '_co' → logprob: -6.084622859954834
    9. ' cost' → logprob: -6.584622859954834
    10. '_best' → logprob: -6.834622859954834

Token 515: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03804229199886322
    2. '<' → logprob: -3.2880423069000244
    3. '   ' → logprob: -15.913042068481445
    4. ' ' → logprob: -16.038042068481445
    5. '[' → logprob: -16.413042068481445
    6. '<com' → logprob: -16.413042068481445
    7. ' ' → logprob: -16.663042068481445
    8. '<num' → logprob: -17.163042068481445
    9. ' <",' → logprob: -17.288042068481445
    10. '<int' → logprob: -17.288042068481445

Token 516: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0004306692280806601
    2. ' cost' → logprob: -7.750430583953857
    3. '_cost' → logprob: -21.750431060791016
    4. '   ' → logprob: -21.750431060791016
    5. '(cost' → logprob: -22.375431060791016
    6. 'Cost' → logprob: -22.625431060791016
    7. 'co' → logprob: -24.125431060791016
    8. 'price' → logprob: -24.375431060791016
    9. 'cout' → logprob: -24.625431060791016
    10. 'code' → logprob: -25.250431060791016

Token 517: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.9361264946837764e-07
    2. '_max' → logprob: -16.75
    3. '_' → logprob: -18.5
    4. '_cost' → logprob: -18.5
    5. 'min' → logprob: -19.25
    6. '_MIN' → logprob: -19.375
    7. '_Min' → logprob: -19.625
    8. '_m' → logprob: -20.375
    9. ' _' → logprob: -20.625
    10. 'Min' → logprob: -21.25

Token 518: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06250355392694473
    2. ':
' → logprob: -2.8125035762786865
    3. '       ' → logprob: -7.562503337860107
    4. '):
' → logprob: -12.187503814697266
    5. '   ' → logprob: -12.687503814697266
    6. ':
' → logprob: -13.062503814697266
    7. '):' → logprob: -13.687503814697266
    8. '           ' → logprob: -13.937503814697266
    9. ' :
' → logprob: -13.937503814697266
    10. ' :' → logprob: -14.187503814697266

Token 519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007509502582252026
    2. '       ' → logprob: -5.132509708404541
    3. ' cost' → logprob: -7.132509708404541
    4. 'cost' → logprob: -7.382509708404541
    5. '	       ' → logprob: -10.007509231567383
    6. ':' → logprob: -10.257509231567383
    7. '            
' → logprob: -10.757509231567383
    8. '        
' → logprob: -11.757509231567383
    9. '               ' → logprob: -11.882509231567383
    10. ':
' → logprob: -11.882509231567383

Token 520: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.2529093325138092
    2. ' cost' → logprob: -1.6279093027114868
    3. '           ' → logprob: -3.7529094219207764
    4. '               ' → logprob: -5.752909183502197
    5. '       ' → logprob: -7.627909183502197
    6. '   ' → logprob: -12.127909660339355
    7. '_cost' → logprob: -13.252909660339355
    8. '```' → logprob: -13.252909660339355
    9. '            ' → logprob: -14.252909660339355
    10. '(cost' → logprob: -14.377909660339355

Token 521: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -12.75000286102295
    3. 'min' → logprob: -17.625003814697266
    4. '_MIN' → logprob: -17.875003814697266
    5. '_max' → logprob: -17.875003814697266
    6. '_m' → logprob: -18.000003814697266
    7. '_Min' → logprob: -18.500003814697266
    8. '_cost' → logprob: -19.125003814697266
    9. '=' → logprob: -19.125003814697266
    10. '_val' → logprob: -19.375003814697266

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575942873954773
    2. '=' → logprob: -0.825942873954773
    3. '＝' → logprob: -12.575942993164062
    4. '.=' → logprob: -17.950942993164062
    5. ')' → logprob: -18.075942993164062
    6. '=

' → logprob: -18.450942993164062
    7. '=int' → logprob: -19.075942993164062
    8. ' ' → logprob: -19.200942993164062
    9. ')=' → logprob: -19.200942993164062
    10. '=cut' → logprob: -19.200942993164062

Token 523: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00020354038861114532
    2. ' total' → logprob: -8.500203132629395
    3. '	total' → logprob: -19.37520408630371
    4. '   ' → logprob: -20.00020408630371
    5. '_total' → logprob: -20.25020408630371
    6. 'Total' → logprob: -20.37520408630371
    7. 'tot' → logprob: -21.00020408630371
    8. '$total' → logprob: -21.25020408630371
    9. '(total' → logprob: -21.50020408630371
    10. 't' → logprob: -23.00020408630371

Token 524: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0063232360407710075
    2. '_total' → logprob: -5.256323337554932
    3. 'total' → logprob: -7.256323337554932
    4. '_' → logprob: -8.756322860717773
    5. 'cost' → logprob: -8.756322860717773
    6. 'Cost' → logprob: -10.256322860717773
    7. '_min' → logprob: -11.006322860717773
    8. '(total' → logprob: -12.631322860717773
    9. '_co' → logprob: -13.131322860717773
    10. ' cost' → logprob: -13.381322860717773

Token 525: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04388114809989929
    2. 'print' → logprob: -3.4188811779022217
    3. '
' → logprob: -5.293880939483643
    4. '    
' → logprob: -5.668880939483643
    5. ' print' → logprob: -6.793880939483643
    6. 'return' → logprob: -8.6688814163208
    7. '```' → logprob: -8.7938814163208
    8. '           ' → logprob: -9.2938814163208
    9. ' return' → logprob: -10.0438814163208
    10. '       ' → logprob: -10.1688814163208

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06204947084188461
    2. 'print' → logprob: -2.812049388885498
    3. '```' → logprob: -10.437049865722656
    4. '
' → logprob: -10.562049865722656
    5. '    
' → logprob: -10.812049865722656
    6. ' print' → logprob: -12.062049865722656
    7. '       ' → logprob: -15.687049865722656
    8. '        
' → logprob: -16.187049865722656
    9. '
' → logprob: -16.562049865722656
    10. '   ' → logprob: -16.687049865722656

Token 527: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002577797742560506
    2. '   ' → logprob: -6.002577781677246
    3. '```' → logprob: -9.502577781677246
    4. ' print' → logprob: -10.502577781677246
    5. '
' → logprob: -17.752578735351562
    6. '	print' → logprob: -18.377578735351562
    7. '``' → logprob: -18.627578735351562
    8. '#print' → logprob: -19.002578735351562
    9. 'return' → logprob: -19.252578735351562
    10. '    
' → logprob: -19.377578735351562

Token 528: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -2.8444881536415778e-05
    2. '(' → logprob: -10.500028610229492
    3. '(int' → logprob: -14.375028610229492
    4. '(f' → logprob: -17.250028610229492
    5. 'cost' → logprob: -17.250028610229492
    6. ' (' → logprob: -17.375028610229492
    7. '()' → logprob: -17.500028610229492
    8. '(price' → logprob: -17.625028610229492
    9. '((' → logprob: -17.750028610229492
    10. '(count' → logprob: -18.125028610229492

Token 529: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -5.676981345459353e-06
    2. 'min' → logprob: -12.125005722045898
    3. 'Min' → logprob: -16.5000057220459
    4. ')' → logprob: -17.1250057220459
    5. '_MIN' → logprob: -18.7500057220459
    6. '(min' → logprob: -18.7500057220459
    7. '_' → logprob: -18.8750057220459
    8. ' min' → logprob: -19.7500057220459
    9. '_m' → logprob: -20.3750057220459
    10. '_val' → logprob: -20.5000057220459

Token 530: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -16.75
    4. '())' → logprob: -17.75
    5. ')`' → logprob: -19.25
    6. '()' → logprob: -19.375
    7. '')' → logprob: -19.875
    8. '))' → logprob: -20.0
    9. '）' → logprob: -20.375
    10. '}' → logprob: -20.625

Token 531: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.28194501996040344
    2. '__' → logprob: -1.406944990158081
    3. '_name' → logprob: -7.65694522857666
    4. 'name' → logprob: -8.90694522857666
    5. ' ' → logprob: -9.28194522857666
    6. '_' → logprob: -9.78194522857666
    7. ' name' → logprob: -11.90694522857666
    8. '___' → logprob: -11.90694522857666
    9. '202' → logprob: -12.40694522857666
    10. ' True' → logprob: -12.53194522857666

Token 533: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.46512269973754883
    2. '__' → logprob: -1.4651226997375488
    3. 'name' → logprob: -2.090122699737549
    4. '==' → logprob: -4.465122699737549
    5. ' __' → logprob: -5.465122699737549
    6. '=="' → logprob: -7.215122699737549
    7. '.name' → logprob: -9.34012222290039
    8. '=='' → logprob: -9.46512222290039
    9. ' =="' → logprob: -9.59012222290039
    10. 'main' → logprob: -9.59012222290039

Token 534: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.4121114822482923e-06
    2. '==' → logprob: -13.000003814697266
    3. '__.__' → logprob: -14.625003814697266
    4. '_' → logprob: -15.625003814697266
    5. 'name' → logprob: -16.125003814697266
    6. ' ==' → logprob: -16.250003814697266
    7. '____' → logprob: -17.000003814697266
    8. '___' → logprob: -17.125003814697266
    9. '```' → logprob: -17.375003814697266
    10. '__('' → logprob: -17.875003814697266

Token 535: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4421224892139435
    2. '__' → logprob: -1.442122459411621
    3. ' ==' → logprob: -2.192122459411621
    4. '=="' → logprob: -4.817122459411621
    5. '=='' → logprob: -6.817122459411621
    6. '_' → logprob: -11.692122459411621
    7. '===' → logprob: -12.192122459411621
    8. '__.__' → logprob: -12.192122459411621
    9. '___' → logprob: -12.317122459411621
    10. '=' → logprob: -12.567122459411621

Token 536: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.030007103458046913
    2. ''' → logprob: -3.5300071239471436
    3. '__' → logprob: -8.280007362365723
    4. 'main' → logprob: -12.905007362365723
    5. ' "__' → logprob: -14.530007362365723
    6. ' '__' → logprob: -17.155006408691406
    7. '"name' → logprob: -18.030006408691406
    8. '"user' → logprob: -18.405006408691406
    9. '___' → logprob: -18.530006408691406
    10. ' ' → logprob: -19.155006408691406

Token 537: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.012243673205375671
    2. '__' → logprob: -4.512243747711182
    3. '"' → logprob: -6.762243747711182
    4. ''' → logprob: -10.887243270874023
    5. 'name' → logprob: -11.012243270874023
    6. '__":
' → logprob: -13.512243270874023
    7. ' "__' → logprob: -14.762243270874023
    8. 'python' → logprob: -15.512243270874023
    9. '_main' → logprob: -15.762243270874023
    10. ' main' → logprob: -15.762243270874023

Token 538: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.023858288303017616
    2. '__' → logprob: -3.7738583087921143
    3. '__':
' → logprob: -7.398858070373535
    4. '__["' → logprob: -15.398858070373535
    5. '__:' → logprob: -16.02385902404785
    6. '__.' → logprob: -16.52385902404785
    7. '_' → logprob: -16.64885902404785
    8. '__.__' → logprob: -16.77385902404785
    9. '__",' → logprob: -17.02385902404785
    10. '__("' → logprob: -17.14885902404785

Token 539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7057654857635498
    2. 'main' → logprob: -0.7057654857635498
    3. ' main' → logprob: -4.955765724182129
    4. '	main' → logprob: -5.205765724182129
    5. '_main' → logprob: -12.080765724182129
    6. ' ' → logprob: -13.455765724182129
    7. '   ' → logprob: -13.705765724182129
    8. '  ' → logprob: -14.205765724182129
    9. '(main' → logprob: -14.580765724182129
    10. '_MAIN' → logprob: -14.830765724182129

Token 540: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -22.375
    4. '   ' → logprob: -26.25
    5. '.main' → logprob: -26.5
    6. '(main' → logprob: -27.0
    7. '_main' → logprob: -27.125
    8. 'import' → logprob: -28.125
    9. 'Main' → logprob: -28.25
    10. 'mainwindow' → logprob: -29.5

Token 541: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 539
Tokens correctement prédits (1ère position, stricte): 196
Tokens correctement prédits (1ère position, avec adaptation): 203
Tokens correctement prédits (top 10): 391
Précision stricte (1ère position): 36.36%
Précision adaptée (1ère position): 37.66%
Précision (top 10): 72.54%
================================================================================
