================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    arr = [int(input()) for _ in range(n)]
    max_ending_here = max_so_far = arr[0]
    for x in arr[1:]:
        max_ending_here = max(x, max_ending_here + x)
        max_so_far = max(max_so_far, max_ending_here)
    print(max_so_far)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06445569545030594
    2. '\n' → logprob: -4.314455509185791
    3. ' ' → logprob: -4.689455509185791
    4. '```' → logprob: -4.814455509185791
    5. '    
' → logprob: -4.939455509185791
    6. ' 
' → logprob: -5.189455509185791
    7. '\' → logprob: -5.314455509185791
    8. '    ' → logprob: -5.439455509185791
    9. ':' → logprob: -5.939455509185791
    10. '<|end|>' → logprob: -6.189455509185791

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24830885231494904
    2. '    ' → logprob: -1.8733088970184326
    3. '```' → logprob: -3.9983088970184326
    4. ' ' → logprob: -4.1233086585998535
    5. '       ' → logprob: -4.1233086585998535
    6. '    
' → logprob: -5.9983086585998535
    7. '  ' → logprob: -6.3733086585998535
    8. '\' → logprob: -6.4983086585998535
    9. '\t' → logprob: -6.7483086585998535
    10. '\n' → logprob: -6.7483086585998535

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8705378770828247
    2. '=' → logprob: -1.4955378770828247
    3. 'u' → logprob: -1.9955378770828247
    4. '   ' → logprob: -2.745537757873535
    5. 'o' → logprob: -3.245537757873535
    6. '+' → logprob: -3.745537757873535
    7. '_' → logprob: -4.245537757873535
    8. '>' → logprob: -4.245537757873535
    9. ' =' → logprob: -4.370537757873535
    10. '  ' → logprob: -4.620537757873535

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09274124354124069
    2. ' input' → logprob: -2.5927412509918213
    3. 'int' → logprob: -4.592741012573242
    4. 'input' → logprob: -5.717741012573242
    5. ' n' → logprob: -8.467741012573242
    6. ' ' → logprob: -9.717741012573242
    7. ' randint' → logprob: -10.842741012573242
    8. 'n' → logprob: -11.717741012573242
    9. ' eval' → logprob: -12.217741012573242
    10. ' i' → logprob: -12.217741012573242

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07894101738929749
    2. '(input' → logprob: -2.5789411067962646
    3. '(n' → logprob: -10.703941345214844
    4. '()' → logprob: -11.953941345214844
    5. '(
' → logprob: -12.203941345214844
    6. '('' → logprob: -12.328941345214844
    7. '(user' → logprob: -13.203941345214844
    8. 'input' → logprob: -13.453941345214844
    9. '(range' → logprob: -13.703941345214844
    10. ' (' → logprob: -14.078941345214844

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12421323359012604
    2. ')' → logprob: -2.499213218688965
    3. '()' → logprob: -3.624213218688965
    4. '())' → logprob: -5.124213218688965
    5. '))' → logprob: -6.999213218688965
    6. '(
' → logprob: -8.249213218688965
    7. '('' → logprob: -8.749213218688965
    8. '()))' → logprob: -8.749213218688965
    9. ' ' → logprob: -9.249213218688965
    10. '```' → logprob: -9.749213218688965

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39138108491897583
    2. ' if' → logprob: -2.016381025314331
    3. '   ' → logprob: -2.641381025314331
    4. ')' → logprob: -3.641381025314331
    5. ':' → logprob: -3.641381025314331
    6. '  ' → logprob: -3.891381025314331
    7. '<|end|>' → logprob: -4.26638126373291
    8. 'if' → logprob: -4.64138126373291
    9. '    ' → logprob: -5.39138126373291
    10. ',' → logprob: -5.64138126373291

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5625182390213013
    2. ' if' → logprob: -1.1875182390213013
    3. '<|end|>' → logprob: -3.4375181198120117
    4. ')' → logprob: -3.8125181198120117
    5. ' ' → logprob: -3.9375181198120117
    6. '```' → logprob: -4.187518119812012
    7. '    ' → logprob: -4.437518119812012
    8. 'if' (adapté à ' if') → logprob: -5.437518119812012
    9. '\n' → logprob: -5.937518119812012
    10. '  ' → logprob: -6.062518119812012

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0035694229882210493
    2. ' ' → logprob: -6.003569602966309
    3. ' not' → logprob: -7.253569602966309
    4. 'n' → logprob: -7.878569602966309
    5. ' ' → logprob: -12.378569602966309
    6. 'not' → logprob: -13.628569602966309
    7. '  ' → logprob: -15.003569602966309
    8. ' (' → logprob: -15.753569602966309
    9. '(n' → logprob: -15.878569602966309
    10. '<|end|>' → logprob: -16.128568649291992

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.275851309299469
    2. ' >' → logprob: -2.025851249694824
    3. ' <=' → logprob: -3.025851249694824
    4. ' <' → logprob: -3.775851249694824
    5. '==' → logprob: -3.775851249694824
    6. '>' → logprob: -4.900851249694824
    7. ' ' → logprob: -5.400851249694824
    8. '<' → logprob: -7.400851249694824
    9. '<=' → logprob: -7.650851249694824
    10. ' >=' → logprob: -7.775851249694824

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20143009722232819
    2. '0' → logprob: -1.701430082321167
    3. '1' → logprob: -12.826430320739746
    4. ' ' → logprob: -13.076430320739746
    5. '32' → logprob: -13.451430320739746
    6. '10' → logprob: -13.451430320739746
    7. ' -' → logprob: -13.951430320739746
    8. '100' → logprob: -13.951430320739746
    9. '  ' → logprob: -14.138930320739746
    10. '20' → logprob: -14.451430320739746

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006742842961102724
    2. ' ' → logprob: -5.00674295425415
    3. '-' → logprob: -11.131742477416992
    4. '1' → logprob: -12.631742477416992
    5. ' -' → logprob: -12.631742477416992
    6. '42' → logprob: -13.006742477416992
    7. '4' → logprob: -14.631742477416992
    8. '   ' → logprob: -14.631742477416992
    9. '    ' → logprob: -14.756742477416992
    10. 's' → logprob: -15.256742477416992

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010902655776590109
    2. ':
' → logprob: -9.87510871887207
    3. ' :' → logprob: -10.50010871887207
    4. '   ' → logprob: -11.25010871887207
    5. '):' → logprob: -12.12510871887207
    6. '       ' → logprob: -12.62510871887207
    7. ':\' → logprob: -13.25010871887207
    8. ':return' → logprob: -13.25010871887207
    9. '    ' → logprob: -13.62510871887207
    10. '():' → logprob: -14.00010871887207

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003570343542378396
    2. '   ' → logprob: -8.750356674194336
    3. ' break' → logprob: -9.500356674194336
    4. '    ' → logprob: -10.000356674194336
    5. '\n' → logprob: -10.625356674194336
    6. '      ' → logprob: -11.500356674194336
    7. '        ' → logprob: -11.750356674194336
    8. '	break' → logprob: -12.250356674194336
    9. '<|end|>' → logprob: -12.375356674194336
    10. '     ' → logprob: -12.500356674194336

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0031932818237692118
    2. '       ' → logprob: -6.628193378448486
    3. 'break' (adapté à ' break') → logprob: -7.503193378448486
    4. '\n' → logprob: -8.003192901611328
    5. ' 
' → logprob: -8.253192901611328
    6. ' \' → logprob: -8.753192901611328
    7. '    ' → logprob: -9.253192901611328
    8. '	break' → logprob: -9.503192901611328
    9. '_break' → logprob: -9.503192901611328
    10. '```' → logprob: -9.503192901611328

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6997508406639099
    2. '\n' → logprob: -1.5747509002685547
    3. '    
' → logprob: -2.1997509002685547
    4. '```' → logprob: -2.5747509002685547
    5. '\' → logprob: -2.6997509002685547
    6. '
' → logprob: -4.199750900268555
    7. '  
' → logprob: -4.824750900268555
    8. 'n' → logprob: -5.574750900268555
    9. '\r' → logprob: -5.824750900268555
    10. ' 
' → logprob: -6.074750900268555

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17229793965816498
    2. '    
' → logprob: -3.297297954559326
    3. '<|end|>' → logprob: -3.297297954559326
    4. '\n' → logprob: -3.547297954559326
    5. '
' → logprob: -3.797297954559326
    6. '```' → logprob: -4.297297954559326
    7. 'n' → logprob: -5.547297954559326
    8. '\' → logprob: -5.547297954559326
    9. '#' → logprob: -5.797297954559326
    10. ')' → logprob: -6.422297954559326

Token 20: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5532042980194092
    2. '\n' → logprob: -1.9282042980194092
    3. '\' → logprob: -2.428204298019409
    4. ':' → logprob: -3.053204298019409
    5. ' ' → logprob: -3.178204298019409
    6. ')' → logprob: -3.428204298019409
    7. '    ' → logprob: -4.053204536437988
    8. '       ' → logprob: -4.803204536437988
    9. 'print' → logprob: -4.928204536437988
    10. '#' → logprob: -5.428204536437988

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028174038976430893
    2. ' =' → logprob: -4.153173923492432
    3. '.' → logprob: -5.528173923492432
    4. '=' → logprob: -5.903173923492432
    5. '.append' → logprob: -6.278173923492432
    6. '[:]' → logprob: -6.528173923492432
    7. '[]' → logprob: -7.153173923492432
    8. '_' → logprob: -8.77817440032959
    9. '.setdefault' → logprob: -8.90317440032959
    10. '   ' → logprob: -8.90317440032959

Token 22: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.19493086636066437
    2. ' [' → logprob: -2.0699307918548584
    3. ' list' → logprob: -3.1949307918548584
    4. '[]' → logprob: -4.9449310302734375
    5. '[' → logprob: -6.4449310302734375
    6. 'list' → logprob: -7.3199310302734375
    7. '[list' → logprob: -8.444931030273438
    8. '[input' → logprob: -8.819931030273438
    9. ' ' → logprob: -9.569931030273438
    10. '[int' → logprob: -10.069931030273438

Token 23: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14531362056732178
    2. '0' → logprob: -2.3953137397766113
    3. ' int' → logprob: -3.2703137397766113
    4. ']' → logprob: -6.395313739776611
    5. ']int' → logprob: -6.770313739776611
    6. 'n' → logprob: -6.895313739776611
    7. ' ]' → logprob: -7.145313739776611
    8. ' n' → logprob: -7.395313739776611
    9. 'i' → logprob: -7.395313739776611
    10. ' ' → logprob: -9.520313262939453

Token 24: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6955752372741699
    2. '(input' → logprob: -0.6955752372741699
    3. '()' → logprob: -6.82057523727417
    4. '(x' → logprob: -6.82057523727417
    5. '(i' → logprob: -9.070575714111328
    6. ')' → logprob: -10.070575714111328
    7. 'input' → logprob: -10.070575714111328
    8. '(

' → logprob: -11.820575714111328
    9. ']' → logprob: -11.945575714111328
    10. '(
' → logprob: -11.945575714111328

Token 25: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007859219331294298
    2. '()' → logprob: -7.250785827636719
    3. '()]' → logprob: -9.875785827636719
    4. '()),' → logprob: -11.125785827636719
    5. '()))' → logprob: -12.625785827636719
    6. ' ())' → logprob: -12.625785827636719
    7. '(' → logprob: -13.875785827636719
    8. '())
' → logprob: -14.625785827636719
    9. '());' → logprob: -14.625785827636719
    10. ')' → logprob: -15.250785827636719

Token 26: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5493175983428955
    2. ')' → logprob: -0.9243175983428955
    3. 'for' → logprob: -4.299317359924316
    4. ' for' → logprob: -5.049317359924316
    5. ')]' → logprob: -6.674317359924316
    6. '   ' → logprob: -6.924317359924316
    7. '())' → logprob: -6.924317359924316
    8. '(' → logprob: -7.674317359924316
    9. ' ()' → logprob: -8.049317359924316
    10. ' )' → logprob: -8.049317359924316

Token 27: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03253936395049095
    2. ' ' → logprob: -3.5325393676757812
    3. ' _' → logprob: -6.907539367675781
    4. '_' → logprob: -7.282539367675781
    5. ' i' → logprob: -7.282539367675781
    6. ' xrange' → logprob: -8.907539367675781
    7. 'range' → logprob: -9.282539367675781
    8. '	range' → logprob: -9.657539367675781
    9. ' in' → logprob: -10.157539367675781
    10. '(range' → logprob: -10.782539367675781

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4376896917819977
    2. ' range' → logprob: -1.3126896619796753
    3. 'range' → logprob: -2.812689781188965
    4. 'in' → logprob: -4.062689781188965
    5. ' ' → logprob: -4.937689781188965
    6. '  ' → logprob: -8.312689781188965
    7. ' i' → logprob: -9.187689781188965
    8. '(range' → logprob: -9.312689781188965
    9. ' r' → logprob: -9.562689781188965
    10. ' ran' → logprob: -9.687689781188965

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2812640964984894
    2. 'range' → logprob: -1.406264066696167
    3. ' ' → logprob: -10.156264305114746
    4. 'rang' → logprob: -11.281264305114746
    5. 'arr' → logprob: -11.531264305114746
    6. '	range' → logprob: -11.656264305114746
    7. ' rang' → logprob: -12.281264305114746
    8. '(range' → logprob: -12.406264305114746
    9. ' ran' → logprob: -12.656264305114746
    10. 'r' → logprob: -12.781264305114746

Token 30: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02265549823641777
    2. '(' → logprob: -3.897655487060547
    3. ' n' → logprob: -6.397655487060547
    4. ' (' → logprob: -7.772655487060547
    5. 'n' → logprob: -10.897655487060547
    6. ')n' → logprob: -13.397655487060547
    7. ' )' → logprob: -13.647655487060547
    8. '(
' → logprob: -13.897655487060547
    9. ' ' → logprob: -13.897655487060547
    10. ')' → logprob: -14.022655487060547

Token 31: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004343645414337516
    2. ']' → logprob: -8.250433921813965
    3. ')' → logprob: -8.750433921813965
    4. ' )' → logprob: -12.500433921813965
    5. '])]' → logprob: -13.000433921813965
    6. ')])' → logprob: -13.125433921813965
    7. '))' → logprob: -13.625433921813965
    8. '   ' → logprob: -13.750433921813965
    9. ')]
' → logprob: -13.875433921813965
    10. '])' → logprob: -13.875433921813965

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17491412162780762
    2. '[' → logprob: -3.0499141216278076
    3. ' ' → logprob: -3.4249141216278076
    4. '\' → logprob: -4.049914360046387
    5. '\n' → logprob: -4.299914360046387
    6. '    
' → logprob: -4.299914360046387
    7. ' 
' → logprob: -4.674914360046387
    8. '<|end|>' → logprob: -4.799914360046387
    9. '
' → logprob: -5.674914360046387
    10. '    ' → logprob: -5.924914360046387

Token 33: ' max' (ID: 2999)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -1.2665055990219116
    2. 'sum' → logprob: -2.016505718231201
    3. 'arr' → logprob: -2.266505718231201
    4. 's' → logprob: -2.641505718231201
    5. ' ' → logprob: -2.641505718231201
    6. ' max' → logprob: -2.891505718231201
    7. ' if' → logprob: -3.141505718231201
    8. 'max' (adapté à ' max') → logprob: -3.141505718231201
    9. ' sum' → logprob: -3.141505718231201
    10. '   ' → logprob: -3.766505718231201

Token 34: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18139517307281494
    2. '_val' → logprob: -1.931395173072815
    3. '_value' → logprob: -4.181395053863525
    4. '_v' → logprob: -6.306395053863525
    5. '_arr' → logprob: -6.431395053863525
    6. '_sum' → logprob: -7.306395053863525
    7. '_num' → logprob: -8.056395530700684
    8. '_len' → logprob: -8.431395530700684
    9. '_index' → logprob: -8.556395530700684
    10. '_idx' → logprob: -8.806395530700684

Token 35: 'ending' (ID: 3258)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.598426342010498
    2. 'diff' → logprob: -2.223426342010498
    3. 'val' → logprob: -2.348426342010498
    4. 'arr' → logprob: -2.723426342010498
    5. 'sub' → logprob: -2.848426342010498
    6. 'so' → logprob: -3.723426342010498
    7. 'value' → logprob: -3.973426342010498
    8. 'num' → logprob: -3.973426342010498
    9. 'height' → logprob: -4.348426342010498
    10. 'v' → logprob: -4.848426342010498

Token 36: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -0.0007086210534907877
    2. 'Here' → logprob: -7.62570858001709
    3. '_' → logprob: -8.87570858001709
    4. '=' → logprob: -10.00070858001709
    5. ' =' → logprob: -11.00070858001709
    6. '_at' → logprob: -11.50070858001709
    7. ' Here' → logprob: -12.25070858001709
    8. 'here' → logprob: -13.12570858001709
    9. ' here' → logprob: -14.62570858001709
    10. ' ' → logprob: -15.12570858001709

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004101908300071955
    2. '=' → logprob: -5.879101753234863
    3. ' ' → logprob: -6.754101753234863
    4. ',' → logprob: -9.754101753234863
    5. ' ,' → logprob: -10.004101753234863
    6. ' +=' → logprob: -11.129101753234863
    7. '_' → logprob: -12.629101753234863
    8. '  ' → logprob: -12.879101753234863
    9. '[' → logprob: -13.754101753234863
    10. 's' → logprob: -14.004101753234863

Token 38: ' max' (ID: 2999)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6829758286476135
    2. '0' → logprob: -0.8079758286476135
    3. ' ' → logprob: -3.3079757690429688
    4. ' arr' → logprob: -4.807975769042969
    5. 'max' → logprob: -5.682975769042969
    6. ' max' → logprob: -7.057975769042969
    7. '	arr' → logprob: -10.432975769042969
    8. '   ' → logprob: -11.057975769042969
    9. '  ' → logprob: -11.807975769042969
    10. '[arr' → logprob: -11.807975769042969

Token 39: '_so' (ID: 98189)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1380544900894165
    2. '_' → logprob: -1.1380544900894165
    3. '(arr' → logprob: -1.1380544900894165
    4. '(max' → logprob: -3.513054370880127
    5. ' ' → logprob: -6.638054370880127
    6. ' _' → logprob: -6.638054370880127
    7. ')' → logprob: -6.638054370880127
    8. '(_' → logprob: -7.013054370880127
    9. 'arr' → logprob: -7.513054370880127
    10. '_max' → logprob: -7.638054370880127

Token 40: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.013857292011380196
    2. 'far' → logprob: -4.763857364654541
    3. '_' → logprob: -5.638857364654541
    4. '_f' → logprob: -7.138857364654541
    5. 'ftware' → logprob: -8.513856887817383
    6. ' far' → logprob: -9.013856887817383
    7. 'f' → logprob: -9.138856887817383
    8. 'Far' → logprob: -9.263856887817383
    9. 'r' → logprob: -9.888856887817383
    10. 'ing' → logprob: -10.513856887817383

Token 41: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.002977464348077774
    2. ' arr' → logprob: -6.25297737121582
    3. '0' → logprob: -6.87797737121582
    4. ' ' → logprob: -11.50297737121582
    5. '-arr' → logprob: -12.62797737121582
    6. '	arr' → logprob: -12.87797737121582
    7. '-' → logprob: -14.62797737121582
    8. '_arr' → logprob: -15.12797737121582
    9. '[arr' → logprob: -15.12797737121582
    10. '   ' → logprob: -15.12797737121582

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '0' → logprob: -14.12500286102295
    3. '[
' → logprob: -14.25000286102295
    4. '\[' → logprob: -15.00000286102295
    5. ' [' → logprob: -15.12500286102295
    6. '[i' → logprob: -15.12500286102295
    7. '[-' → logprob: -15.12500286102295
    8. '[n' → logprob: -16.000003814697266
    9. '```' → logprob: -16.000003814697266
    10. ' ' → logprob: -16.750003814697266

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '[' → logprob: -16.375011444091797
    4. '۰' → logprob: -17.125011444091797
    5. '   ' → logprob: -17.500011444091797
    6. '00' → logprob: -18.500011444091797
    7. '０' → logprob: -19.125011444091797
    8. '<|end|>' → logprob: -19.187511444091797
    9. '```' → logprob: -19.625011444091797
    10. '٠' → logprob: -20.187511444091797

Token 45: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035288019571453333
    2. ' ]' → logprob: -5.753528594970703
    3. ')' → logprob: -8.128528594970703
    4. ')]' → logprob: -10.753528594970703
    5. ']
' → logprob: -11.378528594970703
    6. '<|end|>' → logprob: -12.253528594970703
    7. '   ' → logprob: -12.378528594970703
    8. ' ' → logprob: -13.003528594970703
    9. '}' → logprob: -13.128528594970703
    10. '']' → logprob: -13.253528594970703

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4375583827495575
    2. '
' → logprob: -1.1875584125518799
    3. ' 
' → logprob: -4.312558174133301
    4. '    
' → logprob: -4.437558174133301
    5. '\n' → logprob: -4.812558174133301
    6. ' for' → logprob: -5.187558174133301
    7. 'for' → logprob: -5.437558174133301
    8. '  
' → logprob: -6.562558174133301
    9. '   
' → logprob: -6.937558174133301
    10. '  ' → logprob: -7.312558174133301

Token 47: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6645728945732117
    2. ' for' → logprob: -1.1645729541778564
    3. '
' → logprob: -2.9145729541778564
    4. '\n' → logprob: -3.0395729541778564
    5. '   ' → logprob: -3.5395729541778564
    6. ' 
' → logprob: -4.164572715759277
    7. '    
' → logprob: -4.789572715759277
    8. ' ' → logprob: -5.164572715759277
    9. '' → logprob: -6.039572715759277
    10. '\' → logprob: -6.664572715759277

Token 48: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0032330902758985758
    2. 'i' → logprob: -6.003232955932617
    3. ' x' → logprob: -7.253232955932617
    4. ' ' → logprob: -10.503232955932617
    5. '   ' → logprob: -11.378232955932617
    6. '	i' → logprob: -12.878232955932617
    7. ' num' → logprob: -13.128232955932617
    8. 'x' → logprob: -13.253232955932617
    9. ' ' → logprob: -13.253232955932617
    10. '  ' → logprob: -14.128232955932617

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006010921206325293
    2. 'in' → logprob: -5.131011009216309
    3. ' ' → logprob: -9.756011009216309
    4. '	in' → logprob: -11.131011009216309
    5. '  ' → logprob: -12.631011009216309
    6. '<|end|>' → logprob: -13.506011009216309
    7. '   ' → logprob: -14.006011009216309
    8. ' i' → logprob: -14.006011009216309
    9. ' ' → logprob: -14.256011009216309
    10. 's' → logprob: -14.631011009216309

Token 50: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.06198785454034805
    2. 'arr' → logprob: -2.81198787689209
    3. '	arr' → logprob: -11.56198787689209
    4. '(arr' → logprob: -12.68698787689209
    5. ' ' → logprob: -12.93698787689209
    6. '_arr' → logprob: -13.18698787689209
    7. '<arr' → logprob: -13.68698787689209
    8. '$arr' → logprob: -14.43698787689209
    9. '[arr' → logprob: -14.93698787689209
    10. ' ' → logprob: -15.43698787689209

Token 51: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28915920853614807
    2. ':' → logprob: -1.4141591787338257
    3. '   ' → logprob: -5.664159297943115
    4. ' :' → logprob: -5.914159297943115
    5. '<|end|>' → logprob: -7.414159297943115
    6. '>' → logprob: -8.539158821105957
    7. ' ' → logprob: -8.664158821105957
    8. '  ' → logprob: -8.914158821105957
    9. '    ' → logprob: -9.039158821105957
    10. '[i' → logprob: -9.664158821105957

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014478032244369388
    2. ' ' → logprob: -9.500144958496094
    3. ':' → logprob: -10.625144958496094
    4. '):' → logprob: -10.625144958496094
    5. ']:' → logprob: -11.375144958496094
    6. '   ' → logprob: -12.875144958496094
    7. ']):' → logprob: -13.000144958496094
    8. ']' → logprob: -13.625144958496094
    9. '):
' → logprob: -14.375144958496094
    10. ')' → logprob: -14.500144958496094

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004325076472014189
    2. ']:' → logprob: -5.504324913024902
    3. ':]' → logprob: -9.004324913024902
    4. ' :' → logprob: -9.129324913024902
    5. '():' → logprob: -12.129324913024902
    6. '>:' → logprob: -12.504324913024902
    7. ':],' → logprob: -13.754324913024902
    8. '：' → logprob: -13.879324913024902
    9. '):' → logprob: -13.879324913024902
    10. '}:' → logprob: -14.004324913024902

Token 54: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.08854851871728897
    2. ']:
' → logprob: -2.588548421859741
    3. ']' → logprob: -5.08854866027832
    4. '   ' → logprob: -6.71354866027832
    5. ' ]' → logprob: -6.71354866027832
    6. ':' → logprob: -7.46354866027832
    7. ']:
' → logprob: -8.71354866027832
    8. '):' → logprob: -9.46354866027832
    9. '):
' → logprob: -9.96354866027832
    10. ' ' → logprob: -10.21354866027832

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10574062168598175
    2. '   ' → logprob: -3.605740547180176
    3. '<|end|>' → logprob: -3.730740547180176
    4. ' 
' → logprob: -3.980740547180176
    5. '    ' → logprob: -4.230740547180176
    6. '    
' → logprob: -4.980740547180176
    7. '        
' → logprob: -5.605740547180176
    8. ' ' → logprob: -5.855740547180176
    9. '
' → logprob: -6.980740547180176
    10. '     
' → logprob: -7.605740547180176

Token 56: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0018664064118638635
    2. 'max' (adapté à ' max') → logprob: -6.376866340637207
    3. ' 
' → logprob: -10.001866340637207
    4. '    ' → logprob: -10.251866340637207
    5. ' if' → logprob: -10.626866340637207
    6. '        
' → logprob: -11.501866340637207
    7. '    
' → logprob: -11.626866340637207
    8. '
' → logprob: -12.001866340637207
    9. '	max' → logprob: -12.126866340637207
    10. '   ' → logprob: -12.251866340637207

Token 57: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.5776860184123507e-06
    2. '(max' → logprob: -13.50000286102295
    3. '(' → logprob: -14.75000286102295
    4. '_here' → logprob: -15.75000286102295
    5. 'ending' → logprob: -15.87500286102295
    6. '_so' → logprob: -16.125001907348633
    7. '(_' → logprob: -16.250001907348633
    8. '  ' → logprob: -17.000001907348633
    9. '```' → logprob: -17.125001907348633
    10. 'max' → logprob: -17.250001907348633

Token 58: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -4.36574100604048e-06
    2. 'max' → logprob: -12.500004768371582
    3. 'of' → logprob: -14.750004768371582
    4. '0' → logprob: -16.250003814697266
    5. 'continu' → logprob: -17.125003814697266
    6. '```' → logprob: -17.250003814697266
    7. 'ended' → logprob: -17.750003814697266
    8. 'here' → logprob: -17.875003814697266
    9. '_' → logprob: -18.375003814697266
    10. 'Ending' → logprob: -18.500003814697266

Token 59: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -12.87500286102295
    3. 'here' → logprob: -15.87500286102295
    4. ' _' → logprob: -16.625001907348633
    5. 'Here' → logprob: -18.000001907348633
    6. '_you' → logprob: -18.500001907348633
    7. '_go' → logprob: -19.375001907348633
    8. '_before' → logprob: -19.625001907348633
    9. '_this' → logprob: -19.750001907348633
    10. '_else' → logprob: -19.875001907348633

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25196048617362976
    2. '=' → logprob: -1.5019605159759521
    3. '=max' → logprob: -10.376960754394531
    4. ' ' → logprob: -16.25196075439453
    5. '＝' → logprob: -16.87696075439453
    6. '=Math' → logprob: -17.25196075439453
    7. '=

' → logprob: -17.25196075439453
    8. '	' → logprob: -17.75196075439453
    9. '_=' → logprob: -18.75196075439453
    10. 'max' → logprob: -19.00196075439453

Token 61: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1269282102584839
    2. 'max' → logprob: -2.1269283294677734
    3. '	max' → logprob: -16.251928329467773
    4. ' ' → logprob: -17.251928329467773
    5. ' ' → logprob: -17.751928329467773
    6. '(max' → logprob: -18.501928329467773
    7. '   ' → logprob: -19.251928329467773
    8. ' min' → logprob: -19.251928329467773
    9. '[max' → logprob: -20.001928329467773
    10. 'min' → logprob: -20.251928329467773

Token 62: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04249217361211777
    2. '(' → logprob: -3.292492151260376
    3. '(max' → logprob: -5.417492389678955
    4. 'x' → logprob: -13.542491912841797
    5. '(
' → logprob: -14.167491912841797
    6. 'max' → logprob: -15.417491912841797
    7. ' (' → logprob: -15.917491912841797
    8. '(

' → logprob: -17.542491912841797
    9. '((' → logprob: -17.792491912841797
    10. '(Max' → logprob: -17.792491912841797

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006503634504042566
    2. ',max' → logprob: -7.625650405883789
    3. ' ,' → logprob: -8.750650405883789
    4. 'max' → logprob: -12.625650405883789
    5. ' max' → logprob: -14.625650405883789
    6. ',
' → logprob: -16.62565040588379
    7. ' ' → logprob: -17.00065040588379
    8. '   ' → logprob: -17.12565040588379
    9. '),' → logprob: -18.12565040588379
    10. '+' → logprob: -18.25065040588379

Token 64: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0031817557755857706
    2. 'max' → logprob: -5.7531819343566895
    3. ' ' → logprob: -13.128181457519531
    4. '(max' → logprob: -13.878181457519531
    5. '[max' → logprob: -15.003181457519531
    6. ' ' → logprob: -15.378181457519531
    7. '	max' → logprob: -15.503181457519531
    8. ',max' → logprob: -16.25318145751953
    9. ')' → logprob: -16.50318145751953
    10. '=max' → logprob: -16.50318145751953

Token 65: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0280383548888494e-06
    2. ')' → logprob: -14.500000953674316
    3. 'ending' → logprob: -16.625001907348633
    4. '_max' → logprob: -16.750001907348633
    5. '_here' → logprob: -17.250001907348633
    6. '```' → logprob: -17.375001907348633
    7. '_)' → logprob: -17.500001907348633
    8. '_

' → logprob: -17.625001907348633
    9. ')_' → logprob: -17.875001907348633
    10. '_so' → logprob: -17.875001907348633

Token 66: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.0003519086167216301
    2. '_' → logprob: -8.000351905822754
    3. 'ended' → logprob: -12.000351905822754
    4. 'max' → logprob: -13.000351905822754
    5. '-ending' → logprob: -13.125351905822754
    6. ' ending' → logprob: -13.375351905822754
    7. 'Ending' → logprob: -13.500351905822754
    8. 'ENDING' → logprob: -14.125351905822754
    9. '```' → logprob: -14.250351905822754
    10. '-' → logprob: -15.500351905822754

Token 67: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -9.126521035796031e-05
    2. 'here' → logprob: -9.375091552734375
    3. 'Here' → logprob: -12.375091552734375
    4. '_' → logprob: -13.125091552734375
    5. '   ' → logprob: -16.875091552734375
    6. ' _' → logprob: -17.500091552734375
    7. '_help' → logprob: -17.625091552734375
    8. '_where' → logprob: -17.750091552734375
    9. '_else' → logprob: -17.750091552734375
    10. '_s' → logprob: -17.750091552734375

Token 68: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.012738721445202827
    2. '+' → logprob: -4.3877387046813965
    3. '+x' → logprob: -8.387739181518555
    4. ' ' → logprob: -14.637739181518555
    5. ' ' → logprob: -14.887739181518555
    6. ')' → logprob: -15.012739181518555
    7. ' x' → logprob: -16.762739181518555
    8. ' plus' → logprob: -17.137739181518555
    9. '   ' → logprob: -17.262739181518555
    10. ' +
' → logprob: -17.387739181518555

Token 69: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.011049943044781685
    2. 'x' → logprob: -4.511049747467041
    3. ')' → logprob: -13.8860502243042
    4. ' ' → logprob: -14.1360502243042
    5. ' )' → logprob: -15.1360502243042
    6. ')x' → logprob: -15.3860502243042
    7. '	x' → logprob: -17.011049270629883
    8. ' ' → logprob: -18.136049270629883
    9. '<|end|>' → logprob: -19.761049270629883
    10. ',' → logprob: -21.136049270629883

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.225939872208983e-05
    2. ')
' → logprob: -10.375032424926758
    3. ' )' → logprob: -14.500032424926758
    4. '   ' → logprob: -14.625032424926758
    5. '       ' → logprob: -17.875032424926758
    6. ')

' → logprob: -18.125032424926758
    7. ')`' → logprob: -18.375032424926758
    8. ')
' → logprob: -18.625032424926758
    9. '<|end|>' → logprob: -18.625032424926758
    10. '))' → logprob: -18.625032424926758

Token 71: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.414498895406723
    2. '
' → logprob: -1.2894989252090454
    3. '       ' → logprob: -2.789498805999756
    4. '    
' → logprob: -6.664498805999756
    5. 'max' → logprob: -8.039499282836914
    6. '```' → logprob: -8.164499282836914
    7. '        
' → logprob: -8.539499282836914
    8. '
' → logprob: -8.914499282836914
    9. '<|end|>' → logprob: -10.039499282836914
    10. ' max' → logprob: -10.039499282836914

Token 72: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.7231451869010925
    2. ' if' → logprob: -1.4731452465057373
    3. ' max' → logprob: -1.5981452465057373
    4. 'if' → logprob: -2.7231452465057373
    5. '
' → logprob: -4.223145008087158
    6. '       ' → logprob: -6.598145008087158
    7. '   ' → logprob: -6.723145008087158
    8. '        
' → logprob: -8.973145484924316
    9. '    
' → logprob: -9.348145484924316
    10. ' 
' → logprob: -9.723145484924316

Token 73: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.375000953674316
    3. '_s' → logprob: -16.750001907348633
    4. '_soft' → logprob: -16.875001907348633
    5. '_SO' → logprob: -17.750001907348633
    6. 'So' → logprob: -18.250001907348633
    7. '_max' → logprob: -18.375001907348633
    8. '__' → logprob: -18.375001907348633
    9. '_to' → logprob: -18.750001907348633
    10. '```' → logprob: -18.750001907348633

Token 74: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.16023924946784973
    2. 'far' → logprob: -1.9102392196655273
    3. 'Far' → logprob: -11.785239219665527
    4. ' far' → logprob: -13.160239219665527
    5. 'ar' → logprob: -13.535239219665527
    6. 'f' → logprob: -13.785239219665527
    7. 'ofar' → logprob: -13.910239219665527
    8. 'фар' → logprob: -14.160239219665527
    9. '	f' → logprob: -14.785239219665527
    10. '_f' → logprob: -15.160239219665527

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759450793266296
    2. ' =' → logprob: -0.8259450793266296
    3. '=max' → logprob: -12.700944900512695
    4. '    ' → logprob: -13.825944900512695
    5. '   ' → logprob: -13.825944900512695
    6. 'max' → logprob: -15.700944900512695
    7. ' ' → logprob: -16.325944900512695
    8. '```' → logprob: -16.575944900512695
    9. '>' → logprob: -16.950944900512695
    10. 's' → logprob: -17.450944900512695

Token 76: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3868711292743683
    2. ' max' → logprob: -1.136871099472046
    3. '	max' → logprob: -17.011871337890625
    4. '(max' → logprob: -18.011871337890625
    5. '=max' → logprob: -18.636871337890625
    6. '[max' → logprob: -19.261871337890625
    7. ' ' → logprob: -19.511871337890625
    8. '   ' → logprob: -20.261871337890625
    9. ' ' → logprob: -20.636871337890625
    10. '```' → logprob: -20.761871337890625

Token 77: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0002060436672763899
    2. '(' → logprob: -8.500205993652344
    3. 'max' → logprob: -13.000205993652344
    4. ' max' → logprob: -15.750205993652344
    5. ' (' → logprob: -17.125205993652344
    6. ',max' → logprob: -17.875205993652344
    7. '_max' → logprob: -18.000205993652344
    8. '[max' → logprob: -18.125205993652344
    9. '=max' → logprob: -18.500205993652344
    10. '	max' → logprob: -18.750205993652344

Token 78: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -1.2471589798224159e-05
    2. '_' → logprob: -11.875012397766113
    3. '```' → logprob: -14.125012397766113
    4. '_here' → logprob: -14.250012397766113
    5. '_to' → logprob: -14.500012397766113
    6. '_SO' → logprob: -14.500012397766113
    7. 'So' → logprob: -15.000012397766113
    8. ')' → logprob: -15.250012397766113
    9. 'max' → logprob: -15.500012397766113
    10. 'so' → logprob: -15.625012397766113

Token 79: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -0.043010830879211426
    2. 'far' → logprob: -3.168010711669922
    3. 'ar' → logprob: -12.293010711669922
    4. 'Far' → logprob: -12.418010711669922
    5. 'ofar' → logprob: -14.543010711669922
    6. ' far' → logprob: -14.668010711669922
    7. '   ' → logprob: -14.668010711669922
    8. 'f' → logprob: -15.293010711669922
    9. '```' → logprob: -15.293010711669922
    10. '_f' → logprob: -15.418010711669922

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003297489834949374
    2. ',max' → logprob: -5.753297328948975
    3. ' ,' → logprob: -9.128297805786133
    4. 'max' → logprob: -11.503297805786133
    5. ' max' → logprob: -14.378297805786133
    6. '   ' → logprob: -15.128297805786133
    7. ' ' → logprob: -16.628297805786133
    8. '```' → logprob: -17.003297805786133
    9. '|max' → logprob: -17.378297805786133
    10. ')' → logprob: -17.378297805786133

Token 81: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.018150178715586662
    2. 'max' → logprob: -4.018150329589844
    3. '(max' → logprob: -16.518150329589844
    4. '	max' → logprob: -16.518150329589844
    5. '[max' → logprob: -16.643150329589844
    6. '_max' → logprob: -16.893150329589844
    7. ',max' → logprob: -17.268150329589844
    8. '=max' → logprob: -17.768150329589844
    9. ' ' → logprob: -18.268150329589844
    10. '.max' → logprob: -19.143150329589844

Token 82: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.512236498361744e-07
    2. '_so' → logprob: -14.875000953674316
    3. ')_' → logprob: -16.875
    4. '_here' → logprob: -17.125
    5. '```' → logprob: -17.875
    6. ')' → logprob: -18.875
    7. 'ending' → logprob: -19.5
    8. ' _' → logprob: -19.625
    9. '`' → logprob: -20.25
    10. '_-' → logprob: -20.625

Token 83: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.0004985823179595172
    2. '_' → logprob: -7.6254987716674805
    3. '_so' → logprob: -13.12549877166748
    4. 'Ending' → logprob: -13.12549877166748
    5. '_here' → logprob: -13.62549877166748
    6. ' ending' → logprob: -13.87549877166748
    7. 'so' → logprob: -14.00049877166748
    8. 'ENDING' → logprob: -14.12549877166748
    9. '-ending' → logprob: -14.12549877166748
    10. 'ended' → logprob: -14.12549877166748

Token 84: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -1.5048530030981055e-06
    2. 'here' → logprob: -13.750001907348633
    3. 'Here' → logprob: -15.500001907348633
    4. '_' → logprob: -16.625001907348633
    5. '_so' → logprob: -16.750001907348633
    6. '_where' → logprob: -18.250001907348633
    7. '_else' → logprob: -18.750001907348633
    8. '_help' → logprob: -19.375001907348633
    9. ')' → logprob: -19.500001907348633
    10. '_now' → logprob: -19.625001907348633

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018448634073138237
    2. ')
' → logprob: -6.376844882965088
    3. '   ' → logprob: -8.87684440612793
    4. ' )' → logprob: -13.25184440612793
    5. ')
' → logprob: -14.50184440612793
    6. ')

' → logprob: -14.50184440612793
    7. '```' → logprob: -16.37684440612793
    8. ')}' → logprob: -16.75184440612793
    9. ')return' → logprob: -17.00184440612793
    10. '}' → logprob: -17.12684440612793

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08657363057136536
    2. '
' → logprob: -3.211573600769043
    3. 'print' → logprob: -3.211573600769043
    4. '    
' → logprob: -6.211573600769043
    5. '```' → logprob: -8.461573600769043
    6. '  
' → logprob: -10.211573600769043
    7. ' print' → logprob: -10.461573600769043
    8. '
' → logprob: -10.586573600769043
    9. '<|end|>' → logprob: -11.211573600769043
    10. '        
' → logprob: -11.961573600769043

Token 87: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.36707887053489685
    2. '   ' → logprob: -1.2420789003372192
    3. ' print' → logprob: -4.11707878112793
    4. '
' → logprob: -6.36707878112793
    5. '    
' → logprob: -8.24207878112793
    6. '```' → logprob: -8.74207878112793
    7. ' 
' → logprob: -11.74207878112793
    8. '  
' → logprob: -12.11707878112793
    9. '	print' → logprob: -12.61707878112793
    10. '
' → logprob: -12.99207878112793

Token 88: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.014165272004902363
    2. '(' → logprob: -4.26416540145874
    3. '()' → logprob: -14.264164924621582
    4. 'max' → logprob: -14.639164924621582
    5. ' (' → logprob: -15.014164924621582
    6. '('' → logprob: -15.514164924621582
    7. '(f' → logprob: -16.5141658782959
    8. '("' → logprob: -16.7641658782959
    9. ' max' → logprob: -17.2641658782959
    10. '(Max' → logprob: -17.6391658782959

Token 89: '_so' (ID: 98189)
  Prédit: '_so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_so' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -14.00000286102295
    3. ')_' → logprob: -14.37500286102295
    4. ')' → logprob: -15.00000286102295
    5. '_soft' → logprob: -15.87500286102295
    6. '\' → logprob: -16.125001907348633
    7. '(_' → logprob: -16.125001907348633
    8. ' _' → logprob: -16.500001907348633
    9. '_SO' → logprob: -16.625001907348633
    10. '_s' → logprob: -17.125001907348633

Token 90: '_far' (ID: 170374)
  Prédit: '_far'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_far' → logprob: -4.739826181321405e-05
    2. '_f' → logprob: -10.50004768371582
    3. 'far' → logprob: -10.87504768371582
    4. '_' → logprob: -14.12504768371582
    5. ' far' → logprob: -17.62504768371582
    6. 'f' → logprob: -17.75004768371582
    7. '_for' → logprob: -18.50004768371582
    8. '_fast' → logprob: -18.75004768371582
    9. 'Far' → logprob: -18.75004768371582
    10. '__' → logprob: -19.00004768371582

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -14.375001907348633
    4. '))' → logprob: -17.125001907348633
    5. ')`' → logprob: -17.750001907348633
    6. '`)' → logprob: -18.500001907348633
    7. '')' → logprob: -19.375001907348633
    8. ')}' → logprob: -19.875001907348633
    9. '）' → logprob: -20.125001907348633
    10. '()' → logprob: -20.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 64.04%
Précision adaptée (1ère position): 67.42%
Précision (top 10): 93.26%
================================================================================
