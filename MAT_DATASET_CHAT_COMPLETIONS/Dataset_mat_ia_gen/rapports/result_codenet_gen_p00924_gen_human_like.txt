================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from itertools import accumulate

def min_swaps(initial, target):
    # initial and target are lists of positions of bits '1'
    # compute minimum adjacent swaps to transform initial into target
    # Since only adjacent swaps allowed, the minimal number of swaps is sum of absolute displacement
    return sum(abs(i - j) for i, j in zip(sorted(initial), sorted(target)))

def solve():
    input = stdin.readline
    N, M = map(int, input().split())
    bits = list(map(int, input().split()))
    runs = list(map(int, input().split()))
    
    # We have two possible target bitstrings according to runs:
    # One starting with 0, another starting with 1
    # First, sum of runs is N
    # So build two possible bitstrings that fit runs (lengths in runs)
    # First possible start bit:
    start0 = 0
    start1 = 1
    
    # build target bitstrings
    def build_target(start_bit):
        res = []
        cur = start_bit
        for length in runs:
            res.extend([cur]*length)
            cur = 1 - cur
        return res

    target0 = build_target(start0)
    target1 = build_target(start1)
    
    # We want to reorder bits (initial) to one of these targets
    # They have the same run-length code but different start bit
    # The problem states that initial can become either target0 or target1,
    # possibly only one is valid (but problem states can become one of these two)
    
    # The minimal number of swaps is minimized when the ordered positions of ones in initial and target match best
    
    # Get positions of ones in initial and in targets
    ones_init = [i for i, b in enumerate(bits) if b == 1]
    
    ones_target0 = [i for i,b in enumerate(target0) if b ==1]
    ones_target1 = [i for i,b in enumerate(target1) if b ==1]
    
    # Compute minimal swaps for both targets
    swaps0 = min_swaps(ones_init, ones_target0)
    swaps1 = min_swaps(ones_init, ones_target1)
    
    # Output minimum
    print(min(swaps0, swaps1))

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.4016507863998413
    2. 'exit' → logprob: -1.7766507863998413
    3. ' exit' → logprob: -2.401650905609131
    4. ' argv' → logprob: -2.901650905609131
    5. 'import' → logprob: -4.526650905609131
    6. 'stdout' → logprob: -5.901650905609131
    7. 'path' → logprob: -7.026650905609131
    8. ' import' → logprob: -7.401650905609131
    9. 'stdin' → logprob: -7.776650905609131
    10. 'version' → logprob: -8.526650428771973

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011461924761533737
    2. '.readline' → logprob: -4.8864617347717285
    3. '\n' → logprob: -6.3864617347717285
    4. '.read' → logprob: -7.6364617347717285
    5. 'import' → logprob: -8.011462211608887
    6. '
' → logprob: -8.261462211608887
    7. '```' → logprob: -8.386462211608887
    8. 'newline' → logprob: -8.636462211608887
    9. ',' → logprob: -8.761462211608887
    10. '.
' → logprob: -9.011462211608887

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10680919140577316
    2. 'for' → logprob: -3.481809139251709
    3. 'import' → logprob: -3.856809139251709
    4. '.readline' → logprob: -4.106809139251709
    5. '\n' → logprob: -4.356809139251709
    6. 'print' → logprob: -5.356809139251709
    7. '' → logprob: -5.856809139251709
    8. '```' → logprob: -5.981809139251709
    9. '
' → logprob: -6.481809139251709
    10. '\' → logprob: -6.606809139251709

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0207197405397892
    2. ' sys' → logprob: -4.145719528198242
    3. ' io' → logprob: -5.770719528198242
    4. 'os' → logprob: -6.895719528198242
    5. ' typing' → logprob: -8.270719528198242
    6. ' math' → logprob: -9.770719528198242
    7. ' space' → logprob: -9.895719528198242
    8. 'sys' → logprob: -10.395719528198242
    9. ' stdout' → logprob: -10.520719528198242
    10. ' string' → logprob: -10.770719528198242

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.016088098287582397
    2. 'import' → logprob: -4.141088008880615
    3. '	import' → logprob: -10.766088485717773
    4. ' ' → logprob: -11.016088485717773
    5. '_import' → logprob: -11.891088485717773
    6. '<|end|>' → logprob: -13.141088485717773
    7. ' itertools' → logprob: -13.641088485717773
    8. '.' → logprob: -13.766088485717773
    9. '.import' → logprob: -14.141088485717773
    10. ' im' → logprob: -14.641088485717773

Token 8: ' accumulate' (ID: 74226)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6360689997673035
    2. 'count' → logprob: -1.8860690593719482
    3. 'per' → logprob: -2.0110690593719482
    4. 'product' → logprob: -3.0110690593719482
    5. 'group' → logprob: -3.3860690593719482
    6. ' permutations' → logprob: -3.5110690593719482
    7. 'chain' → logprob: -3.8860690593719482
    8. 'import' → logprob: -4.386068820953369
    9. 'cycle' → logprob: -4.386068820953369
    10. 'com' → logprob: -4.511068820953369

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5158010721206665
    2. '\n' → logprob: -1.5158010721206665
    3. 'for' → logprob: -3.265800952911377
    4. '
' → logprob: -3.265800952911377
    5. ',' → logprob: -3.390800952911377
    6. '(
' → logprob: -3.515800952911377
    7. '\' → logprob: -4.515800952911377
    8. 'def' → logprob: -4.890800952911377
    9. 'import' → logprob: -5.515800952911377
    10. 'newline' → logprob: -5.640800952911377

Token 10: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.32071414589881897
    2. '\' → logprob: -2.320714235305786
    3. 'for' → logprob: -2.695714235305786
    4. '(' → logprob: -3.070714235305786
    5. '
' → logprob: -4.320713996887207
    6. ',' → logprob: -4.445713996887207
    7. 'def' → logprob: -5.320713996887207
    8. 'newline' → logprob: -5.320713996887207
    9. 'import' → logprob: -5.445713996887207
    10. '(
' → logprob: -5.570713996887207

Token 11: ' min' (ID: 1349)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004125299863517284
    2. '_' → logprob: -6.629125118255615
    3. ' process' → logprob: -6.879125118255615
    4. ' f' → logprob: -8.004125595092773
    5. ' read' → logprob: -8.004125595092773
    6. ' factorial' → logprob: -8.379125595092773
    7. ' ' → logprob: -8.504125595092773
    8. ' calculate' → logprob: -9.129125595092773
    9. ' factor' → logprob: -9.629125595092773
    10. ' main' → logprob: -9.754125595092773

Token 12: '_sw' (ID: 84453)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009291441179811954
    2. 'imum' → logprob: -5.134291648864746
    3. '_sum' → logprob: -7.009291648864746
    4. '(' → logprob: -8.009291648864746
    5. '_val' → logprob: -8.134291648864746
    6. '_cost' → logprob: -8.634291648864746
    7. '_distance' → logprob: -8.634291648864746
    8. '_path' → logprob: -8.759291648864746
    9. '_depth' → logprob: -9.259291648864746
    10. '_diff' → logprob: -9.509291648864746

Token 13: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.014293497428297997
    2. 'ap' → logprob: -4.264293670654297
    3. 'apping' → logprob: -9.514293670654297
    4. 'itch' → logprob: -11.139293670654297
    5. 'apse' → logprob: -12.389293670654297
    6. 'app' → logprob: -12.639293670654297
    7. 'itches' → logprob: -12.639293670654297
    8. 'appings' → logprob: -12.764293670654297
    9. 'a' → logprob: -13.014293670654297
    10. 'apped' → logprob: -13.139293670654297

Token 14: '(initial' (ID: 63456)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06312309950590134
    2. '_to' → logprob: -3.3131229877471924
    3. '_' → logprob: -3.8131229877471924
    4. '(_' → logprob: -7.1881232261657715
    5. '_for' → logprob: -7.9381232261657715
    6. '_between' → logprob: -8.438122749328613
    7. '():' → logprob: -8.688122749328613
    8. '_(' → logprob: -9.063122749328613
    9. ' (' → logprob: -9.438122749328613
    10. '(n' → logprob: -9.563122749328613

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7242282032966614
    2. '_' → logprob: -1.3492281436920166
    3. '):' → logprob: -1.9742281436920166
    4. ')' → logprob: -3.0992281436920166
    5. '_,' → logprob: -3.8492281436920166
    6. '_positions' → logprob: -4.599228382110596
    7. '_)' → logprob: -4.974228382110596
    8. '_state' → logprob: -5.474228382110596
    9. '_states' → logprob: -5.474228382110596
    10. '_array' → logprob: -5.724228382110596

Token 16: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.43231451511383057
    2. 'target' → logprob: -1.6823145151138306
    3. ' final' → logprob: -2.307314395904541
    4. 'final' → logprob: -2.807314395904541
    5. ' desired' → logprob: -6.057314395904541
    6. 'desired' → logprob: -6.432314395904541
    7. '   ' → logprob: -8.3073148727417
    8. ' sorted' → logprob: -8.3073148727417
    9. ' goal' → logprob: -8.8073148727417
    10. ' ' → logprob: -9.1823148727417

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008578622946515679
    2. ')' → logprob: -7.125857830047607
    3. ':' → logprob: -10.875858306884766
    4. ',' → logprob: -11.125858306884766
    5. ' ):' → logprob: -11.250858306884766
    6. ''):' → logprob: -13.250858306884766
    7. '   ' → logprob: -14.000858306884766
    8. '):
' → logprob: -14.375858306884766
    9. ']:' → logprob: -14.625858306884766
    10. '[]):' → logprob: -14.750858306884766

Token 18: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2754601538181305
    2. '   ' → logprob: -1.650460124015808
    3. '(' → logprob: -3.7754602432250977
    4. ':
' → logprob: -5.275460243225098
    5. '```' → logprob: -5.400460243225098
    6. '    
' → logprob: -6.525460243225098
    7. '(
' → logprob: -6.525460243225098
    8. '  
' → logprob: -6.775460243225098
    9. ' :' → logprob: -6.775460243225098
    10. '\' → logprob: -6.775460243225098

Token 19: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3980785608291626
    2. '    
' → logprob: -2.023078441619873
    3. '   ' → logprob: -2.398078441619873
    4. '
' → logprob: -3.773078441619873
    5. 'n' → logprob: -4.273078441619873
    6. '     
' → logprob: -4.523078441619873
    7. '   
' → logprob: -4.773078441619873
    8. '    ' → logprob: -4.773078441619873
    9. '\' → logprob: -4.898078441619873
    10. '  
' → logprob: -5.148078441619873

Token 20: ' initial' (ID: 4871)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6631336212158203
    2. '   ' → logprob: -1.9131336212158203
    3. '    ' → logprob: -2.7881336212158203
    4. ' return' → logprob: -3.2881336212158203
    5. ' if' → logprob: -3.6631336212158203
    6. 'n' → logprob: -3.7881336212158203
    7. ' def' → logprob: -4.03813362121582
    8. ' sorted' → logprob: -4.16313362121582
    9. ' pass' → logprob: -4.28813362121582
    10. ' initial' → logprob: -4.41313362121582

Token 21: ' and' (ID: 326)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.4388074576854706
    2. ' =' → logprob: -1.938807487487793
    3. '_indices' → logprob: -3.063807487487793
    4. '_' → logprob: -3.188807487487793
    5. '_list' → logprob: -3.313807487487793
    6. '_counts' → logprob: -3.688807487487793
    7. '_set' → logprob: -4.188807487487793
    8. '_pos' → logprob: -4.313807487487793
    9. '_sorted' → logprob: -4.938807487487793
    10. '_map' → logprob: -5.438807487487793

Token 22: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.03541368991136551
    2. 'target' → logprob: -3.4104137420654297
    3. '   ' → logprob: -7.16041374206543
    4. ' ' → logprob: -7.53541374206543
    5. ' final' → logprob: -8.16041374206543
    6. 'final' → logprob: -9.78541374206543
    7. '    ' → logprob: -9.91041374206543
    8. '  ' → logprob: -10.28541374206543
    9. '	target' → logprob: -11.28541374206543
    10. '_target' → logprob: -12.03541374206543

Token 23: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.23250903189182281
    2. ' =' → logprob: -2.357509136199951
    3. '_positions' → logprob: -3.232509136199951
    4. '):' → logprob: -3.357509136199951
    5. '_lengths' → logprob: -4.982509136199951
    6. '=' → logprob: -5.357509136199951
    7. '_are' → logprob: -5.607509136199951
    8. ':' → logprob: -5.732509136199951
    9. ')' → logprob: -6.232509136199951
    10. ' have' → logprob: -6.357509136199951

Token 24: ' lists' (ID: 19471)
  Prédit: ' lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.026071753352880478
    2. ' both' → logprob: -5.026071548461914
    3. ' sequences' → logprob: -5.151071548461914
    4. ' sorted' → logprob: -5.526071548461914
    5. ' arrays' → logprob: -5.776071548461914
    6. ' permutations' → logprob: -5.776071548461914
    7. ' equal' → logprob: -7.276071548461914
    8. ' list' → logprob: -7.526071548461914
    9. 'lists' → logprob: -7.901071548461914
    10. ' strings' → logprob: -7.901071548461914

Token 25: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0145550966262817
    2. ' of' → logprob: -1.0145550966262817
    3. ',' → logprob: -1.7645550966262817
    4. '<|end|>' → logprob: -2.639554977416992
    5. '<|end|>' → logprob: -4.514554977416992
    6. ':' → logprob: -5.014554977416992
    7. 'def' → logprob: -5.639554977416992
    8. ' ,' → logprob: -6.139554977416992
    9. ' with' → logprob: -6.639554977416992
    10. '
' → logprob: -6.764554977416992

Token 26: ' positions' (ID: 15897)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.011671196669340134
    2. ' int' → logprob: -4.76167106628418
    3. ' equal' → logprob: -7.13667106628418
    4. 'inte' → logprob: -7.26167106628418
    5. 'int' → logprob: -7.88667106628418
    6. ' numbers' → logprob: -8.13667106628418
    7. ' ints' → logprob: -8.13667106628418
    8. ' positions' → logprob: -8.63667106628418
    9. ' elements' → logprob: -9.01167106628418
    10. ' ' → logprob: -10.01167106628418

Token 27: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3114807903766632
    2. '   ' → logprob: -1.4364807605743408
    3. '
' → logprob: -5.06148099899292
    4. ':
' → logprob: -5.31148099899292
    5. ' :' → logprob: -5.81148099899292
    6. ' ' → logprob: -6.18648099899292
    7. '[' → logprob: -6.18648099899292
    8. ',' → logprob: -6.68648099899292
    9. '):' → logprob: -6.81148099899292
    10. '    
' → logprob: -6.93648099899292

Token 28: ' bits' (ID: 18189)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.8460081815719604
    2. 'elements' → logprob: -1.0960081815719604
    3. ' the' → logprob: -2.47100830078125
    4. 'the' → logprob: -3.09600830078125
    5. ''' → logprob: -3.72100830078125
    6. 'items' → logprob: -4.09600830078125
    7. 'tokens' → logprob: -4.22100830078125
    8. ' ' → logprob: -4.59600830078125
    9. ' items' → logprob: -5.09600830078125
    10. ' tokens' → logprob: -5.22100830078125

Token 29: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47533613443374634
    2. ':' → logprob: -1.1003360748291016
    3. ',' → logprob: -4.975336074829102
    4. '```' → logprob: -5.100336074829102
    5. ' ' → logprob: -5.350336074829102
    6. '
' → logprob: -5.350336074829102
    7. '):' → logprob: -5.475336074829102
    8. ' :' → logprob: -5.725336074829102
    9. '[' → logprob: -5.725336074829102
    10. '    ' → logprob: -6.350336074829102

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009243228123523295
    2. ''' → logprob: -7.125924110412598
    3. '0' → logprob: -9.375924110412598
    4. ' ' → logprob: -11.625924110412598
    5. '`' → logprob: -12.625924110412598
    6. 'set' → logprob: -12.625924110412598
    7. ''s' → logprob: -12.625924110412598
    8. 'on' → logprob: -12.875924110412598
    9. ' '' → logprob: -13.125924110412598
    10. ' set' → logprob: -13.313424110412598

Token 31: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5816615223884583
    2. ''s' → logprob: -1.2066614627838135
    3. 's' → logprob: -1.9566614627838135
    4. '')' → logprob: -8.456661224365234
    5. ' in' → logprob: -9.581661224365234
    6. ' '' → logprob: -10.206661224365234
    7. ')'' → logprob: -10.581661224365234
    8. '',' → logprob: -10.581661224365234
    9. ')' → logprob: -10.706661224365234
    10. 'def' → logprob: -10.706661224365234

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48549938201904297
    2. '   ' → logprob: -1.110499382019043
    3. '
' → logprob: -3.610499382019043
    4. ',' → logprob: -4.485499382019043
    5. '    
' → logprob: -5.485499382019043
    6. '):' → logprob: -5.860499382019043
    7. ' ' → logprob: -6.110499382019043
    8. ':
' → logprob: -6.485499382019043
    9. '```' → logprob: -6.860499382019043
    10. ' :' → logprob: -7.110499382019043

Token 33: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46442949771881104
    2. ' initial' → logprob: -2.4644293785095215
    3. ' if' → logprob: -2.5894293785095215
    4. 'initial' → logprob: -3.0894293785095215
    5. 'n' → logprob: -3.3394293785095215
    6. ' n' → logprob: -3.4644293785095215
    7. '
' → logprob: -4.2144293785095215
    8. 'def' → logprob: -4.3394293785095215
    9. 'if' → logprob: -4.4644293785095215
    10. '```' → logprob: -4.8394293785095215

Token 34: ' compute' (ID: 23864)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5212860703468323
    2. 'n' → logprob: -2.1462860107421875
    3. ' if' → logprob: -2.3962860107421875
    4. '   ' → logprob: -2.6462860107421875
    5. ' initial' → logprob: -2.7712860107421875
    6. 'initial' → logprob: -4.6462860107421875
    7. ' pos' → logprob: -4.8962860107421875
    8. 'pos' → logprob: -5.1462860107421875
    9. ' count' → logprob: -5.1462860107421875
    10. 'if' → logprob: -5.3962860107421875

Token 35: ' minimum' (ID: 11085)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.49563106894493103
    2. '(' → logprob: -1.9956310987472534
    3. '   ' → logprob: -2.370630979537964
    4. 'the' → logprob: -2.995630979537964
    5. ' swaps' → logprob: -3.245630979537964
    6. ' minimal' → logprob: -4.370631217956543
    7. ' ' → logprob: -4.745631217956543
    8. 'diff' → logprob: -4.995631217956543
    9. '    ' → logprob: -5.370631217956543
    10. ' their' → logprob: -5.870631217956543

Token 36: ' adjacent' (ID: 39069)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02856963500380516
    2. ' _' → logprob: -4.15356969833374
    3. ' ' → logprob: -5.02856969833374
    4. '_sw' → logprob: -5.90356969833374
    5. 'def' → logprob: -7.40356969833374
    6. '   ' → logprob: -7.77856969833374
    7. ' =' → logprob: -8.028569221496582
    8. '_distance' → logprob: -8.153569221496582
    9. '_swap' → logprob: -8.403569221496582
    10. '_space' → logprob: -8.903569221496582

Token 37: ' swaps' (ID: 150699)
  Prédit: ' swaps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' swaps' → logprob: -0.016775965690612793
    2. ' ' → logprob: -4.766776084899902
    3. ' swap' → logprob: -5.766776084899902
    4. '_swap' → logprob: -6.266776084899902
    5. '_' → logprob: -6.766776084899902
    6. ' space' → logprob: -7.641776084899902
    7. ' _' → logprob: -7.766776084899902
    8. ' swapping' → logprob: -8.391776084899902
    9. '_sw' → logprob: -8.516776084899902
    10. '<|end|>' → logprob: -8.766776084899902

Token 38: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5035057067871094
    2. '   ' → logprob: -1.1285057067871094
    3. '(' → logprob: -3.3785057067871094
    4. 'def' → logprob: -4.128505706787109
    5. '():' → logprob: -5.253505706787109
    6. '):' → logprob: -6.003505706787109
    7. '```' → logprob: -6.128505706787109
    8. ' :' → logprob: -6.128505706787109
    9. '
' → logprob: -6.503505706787109
    10. ':
' → logprob: -6.878505706787109

Token 39: ' transform' (ID: 7118)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.5708091259002686
    2. ' transform' → logprob: -0.9458091259002686
    3. ' reorder' → logprob: -4.695809364318848
    4. ' align' → logprob: -5.070809364318848
    5. 'bring' → logprob: -5.570809364318848
    6. ' bring' → logprob: -5.695809364318848
    7. 'convert' → logprob: -5.945809364318848
    8. ' convert' → logprob: -6.070809364318848
    9. 'align' → logprob: -6.070809364318848
    10. ' rearr' → logprob: -6.070809364318848

Token 40: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.060397617518901825
    2. 'initial' → logprob: -2.9353976249694824
    3. '(initial' → logprob: -5.435397624969482
    4. ' the' → logprob: -7.685397624969482
    5. ' ' → logprob: -8.435397148132324
    6. ' `' → logprob: -8.935397148132324
    7. '(' → logprob: -9.310397148132324
    8. ' one' → logprob: -9.935397148132324
    9. '   ' → logprob: -10.310397148132324
    10. ' (' → logprob: -10.810397148132324

Token 41: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.2669403851032257
    2. ' ' → logprob: -2.6419403553009033
    3. ' to' → logprob: -2.8919403553009033
    4. '_' → logprob: -3.3919403553009033
    5. '_positions' → logprob: -3.3919403553009033
    6. '```' → logprob: -4.016940593719482
    7. ' _' → logprob: -5.516940593719482
    8. '_to' → logprob: -5.641940593719482
    9. '   ' → logprob: -6.266940593719482
    10. '_into' → logprob: -6.391940593719482

Token 42: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.17979271709918976
    2. 'target' → logprob: -1.8047927618026733
    3. ' ' → logprob: -10.429792404174805
    4. '   ' → logprob: -12.554792404174805
    5. ' the' → logprob: -12.804792404174805
    6. ' `' → logprob: -13.054792404174805
    7. '`' → logprob: -13.179792404174805
    8. '    ' → logprob: -13.554792404174805
    9. ' a' → logprob: -13.679792404174805
    10. '```' → logprob: -14.054792404174805

Token 43: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6927492022514343
    2. ':' → logprob: -0.8177492022514343
    3. '
' → logprob: -3.317749261856079
    4. ':
' → logprob: -4.6927490234375
    5. 'def' → logprob: -5.8177490234375
    6. '    
' → logprob: -5.9427490234375
    7. '```' → logprob: -6.0677490234375
    8. ' :' → logprob: -6.9427490234375
    9. ',' → logprob: -7.5677490234375
    10. 'positions' → logprob: -8.0677490234375

Token 44: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21106263995170593
    2. '   ' → logprob: -1.8360626697540283
    3. ':
' → logprob: -3.9610626697540283
    4. ',' → logprob: -5.836062431335449
    5. '```' → logprob: -6.086062431335449
    6. '
' → logprob: -6.211062431335449
    7. 'n' → logprob: -7.211062431335449
    8. '    
' → logprob: -7.711062431335449
    9. ' 
' → logprob: -7.961062431335449
    10. ' ' → logprob: -8.08606243133545

Token 45: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43387219309806824
    2. '
' → logprob: -1.5588722229003906
    3. 'n' → logprob: -3.0588722229003906
    4. 'pos' → logprob: -3.5588722229003906
    5. 'positions' → logprob: -4.308872222900391
    6. ':' → logprob: -4.683872222900391
    7. '    
' → logprob: -5.308872222900391
    8. 'dp' → logprob: -5.433872222900391
    9. '```' → logprob: -5.683872222900391
    10. ' n' → logprob: -5.933872222900391

Token 46: ' Since' (ID: 12265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0327417850494385
    2. '   ' → logprob: -1.1577417850494385
    3. ' n' → logprob: -2.5327417850494385
    4. ' if' → logprob: -3.0327417850494385
    5. ' initial' → logprob: -3.1577417850494385
    6. ' positions' → logprob: -3.4077417850494385
    7. 'pos' → logprob: -3.9077417850494385
    8. 'initial' → logprob: -4.032741546630859
    9. 'positions' → logprob: -4.032741546630859
    10. ' distances' → logprob: -4.532741546630859

Token 47: ' only' (ID: 1606)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5966362953186035
    2. ' sorted' → logprob: -1.2216362953186035
    3. 'len' → logprob: -2.9716362953186035
    4. ' initial' → logprob: -3.2216362953186035
    5. ' the' → logprob: -3.5966362953186035
    6. 'sorted' → logprob: -4.2216362953186035
    7. ' sum' → logprob: -4.7216362953186035
    8. ' all' → logprob: -5.3466362953186035
    9. 'sum' → logprob: -6.3466362953186035
    10. 'initial' → logprob: -6.7216362953186035

Token 48: ' adjacent' (ID: 39069)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8105378746986389
    2. ' positions' → logprob: -1.0605378150939941
    3. ' adjacent' → logprob: -2.185537815093994
    4. 'positions' → logprob: -3.435537815093994
    5. 'the' → logprob: -3.810537815093994
    6. ' elements' → logprob: -4.685537815093994
    7. 'adj' → logprob: -4.810537815093994
    8. ' swapping' → logprob: -5.310537815093994
    9. ' difference' → logprob: -5.935537815093994
    10. ' equal' → logprob: -5.935537815093994

Token 49: ' swaps' (ID: 150699)
  Prédit: ' swaps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' swaps' → logprob: -0.002764579374343157
    2. ' ' → logprob: -6.252764701843262
    3. ' moves' → logprob: -8.002764701843262
    4. 'sw' → logprob: -8.252764701843262
    5. ' tokens' → logprob: -10.252764701843262
    6. ' exchanges' → logprob: -10.627764701843262
    7. ' swapping' → logprob: -10.627764701843262
    8. '_sw' → logprob: -10.752764701843262
    9. ' swap' → logprob: -11.002764701843262
    10. ' sw' → logprob: -11.002764701843262

Token 50: ' allowed' (ID: 9279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06657304614782333
    2. ' ,' → logprob: -3.316573143005371
    3. ' are' → logprob: -4.441573143005371
    4. ' ' → logprob: -4.816573143005371
    5. ' is' → logprob: -5.816573143005371
    6. '   ' → logprob: -6.941573143005371
    7. 'def' → logprob: -6.941573143005371
    8. ' can' → logprob: -6.941573143005371
    9. ',
' → logprob: -7.441573143005371
    10. ')' → logprob: -7.941573143005371

Token 51: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39253219962120056
    2. '
' → logprob: -1.517532229423523
    3. ',' → logprob: -2.5175321102142334
    4. 'def' → logprob: -4.3925323486328125
    5. 'n' → logprob: -6.6425323486328125
    6. ',
' → logprob: -6.7675323486328125
    7. '    
' → logprob: -6.7675323486328125
    8. ' ,' → logprob: -6.7675323486328125
    9. 'positions' → logprob: -6.8925323486328125
    10. ':' → logprob: -7.0175323486328125

Token 52: ' the' (ID: 290)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.37148749828338623
    2. ' n' → logprob: -1.8714874982833862
    3. ' the' → logprob: -2.496487617492676
    4. 'return' → logprob: -4.371487617492676
    5. ' distances' → logprob: -4.871487617492676
    6. 'n' → logprob: -4.996487617492676
    7. ' def' → logprob: -4.996487617492676
    8. ' diff' → logprob: -5.496487617492676
    9. ' positions' → logprob: -5.621487617492676
    10. ' dp' → logprob: -5.746487617492676

Token 53: ' minimal' (ID: 19957)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.6494894027709961
    2. 'def' → logprob: -2.274489402770996
    3. ' next' → logprob: -2.899489402770996
    4. 'distance' → logprob: -3.024489402770996
    5. ' distance' → logprob: -3.149489402770996
    6. '#' → logprob: -3.649489402770996
    7. 'problem' → logprob: -3.774489402770996
    8. ' minimal' → logprob: -3.774489402770996
    9. ' minimum' → logprob: -4.024489402770996
    10. ' def' → logprob: -4.274489402770996

Token 54: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.03791042044758797
    2. ' ' → logprob: -3.6629104614257812
    3. 'number' → logprob: -5.287910461425781
    4. ' distance' → logprob: -5.912910461425781
    5. '_' → logprob: -6.912910461425781
    6. 'distance' → logprob: -7.037910461425781
    7. '_number' → logprob: -7.787910461425781
    8. '  ' → logprob: -8.287910461425781
    9. '   ' → logprob: -8.787910461425781
    10. ' edit' → logprob: -8.912910461425781

Token 55: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.31353557109832764
    2. ' ' → logprob: -2.063535690307617
    3. '_' → logprob: -3.188535690307617
    4. ' =' → logprob: -3.563535690307617
    5. 'of' → logprob: -3.813535690307617
    6. '<|end|>' → logprob: -4.188535690307617
    7. '_of' → logprob: -4.688535690307617
    8. '=' → logprob: -4.938535690307617
    9. ' is' → logprob: -5.063535690307617
    10. '   ' → logprob: -5.938535690307617

Token 56: ' swaps' (ID: 150699)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5455147624015808
    2. ' invers' → logprob: -1.4205148220062256
    3. ' swaps' → logprob: -1.7955148220062256
    4. ' moves' → logprob: -6.0455145835876465
    5. ' ' → logprob: -6.2955145835876465
    6. 's' → logprob: -6.7955145835876465
    7. 'moves' → logprob: -6.9205145835876465
    8. ' adjacent' → logprob: -7.0455145835876465
    9. '_in' → logprob: -7.0455145835876465
    10. 'sw' → logprob: -7.4205145835876465

Token 57: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08052179217338562
    2. ' equals' → logprob: -3.080521821975708
    3. ' =' → logprob: -3.830521821975708
    4. '=' → logprob: -5.580521583557129
    5. 'is' → logprob: -6.205521583557129
    6. ' corresponds' → logprob: -6.330521583557129
    7. ' to' → logprob: -6.705521583557129
    8. 'equals' → logprob: -8.205521583557129
    9. ' can' → logprob: -8.330521583557129
    10. '<|end|>' → logprob: -9.705521583557129

Token 58: ' sum' (ID: 4215)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6252589821815491
    2. ' abs' → logprob: -1.0002589225769043
    3. 'abs' → logprob: -2.5002589225769043
    4. 'the' → logprob: -4.750258922576904
    5. ' equal' → logprob: -5.500258922576904
    6. '   ' → logprob: -7.000258922576904
    7. ' sum' → logprob: -7.375258922576904
    8. 'sum' → logprob: -8.125259399414062
    9. ' equivalent' → logprob: -9.125259399414062
    10. 'equal' → logprob: -9.125259399414062

Token 59: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1845426857471466
    2. '(abs' → logprob: -1.8095426559448242
    3. 'abs' → logprob: -5.809542655944824
    4. '((' → logprob: -7.059542655944824
    5. '(
' → logprob: -7.684542655944824
    6. '([' → logprob: -8.559542655944824
    7. ' of' → logprob: -9.309542655944824
    8. '([(' → logprob: -10.059542655944824
    9. '(len' → logprob: -10.184542655944824
    10. '(sum' → logprob: -10.934542655944824

Token 60: ' absolute' (ID: 17786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.02818678505718708
    2. ' abs' → logprob: -3.653186798095703
    3. '(abs' → logprob: -6.903186798095703
    4. '|' → logprob: -8.153186798095703
    5. ' absolute' → logprob: -8.153186798095703
    6. 'absolute' → logprob: -8.278186798095703
    7. '   ' → logprob: -10.653186798095703
    8. ' |' → logprob: -11.403186798095703
    9. ' ' → logprob: -11.903186798095703
    10. '[' → logprob: -12.903186798095703

Token 61: ' displacement' (ID: 81657)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45946407318115234
    2. ' differences' → logprob: -1.8344640731811523
    3. 'dif' → logprob: -1.8344640731811523
    4. '(initial' → logprob: -3.0844640731811523
    5. ' ' → logprob: -6.959464073181152
    6. 'diff' → logprob: -7.334464073181152
    7. '(i' → logprob: -7.459464073181152
    8. '(
' → logprob: -7.584464073181152
    9. ' initial' → logprob: -9.459464073181152
    10. 'difference' → logprob: -9.584464073181152

Token 62: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07831698656082153
    2. 's' → logprob: -2.7033169269561768
    3. '(
' → logprob: -5.078317165374756
    4. '(s' → logprob: -7.578317165374756
    5. ')' → logprob: -7.703317165374756
    6. ' (' → logprob: -8.078316688537598
    7. ' ' → logprob: -8.453316688537598
    8. '[' → logprob: -8.828316688537598
    9. '   ' → logprob: -9.078316688537598
    10. ',' → logprob: -9.828316688537598

Token 63: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06788637489080429
    2. 's' → logprob: -3.5678863525390625
    3. '(
' → logprob: -4.3178863525390625
    4. '   ' → logprob: -4.4428863525390625
    5. ':' → logprob: -4.9428863525390625
    6. '(s' → logprob: -6.3178863525390625
    7. ')' → logprob: -7.4428863525390625
    8. '=' → logprob: -7.6928863525390625
    9. ' ' → logprob: -7.8178863525390625
    10. 'def' → logprob: -7.8178863525390625

Token 64: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022592563182115555
    2. '
' → logprob: -4.772592544555664
    3. ':' → logprob: -4.897592544555664
    4. 'return' (adapté à ' return') → logprob: -6.897592544555664
    5. ' return' → logprob: -7.022592544555664
    6. '\n' → logprob: -7.397592544555664
    7. '    ' → logprob: -7.647592544555664
    8. '    
' → logprob: -7.647592544555664
    9. '\' → logprob: -8.022592544555664
    10. ' ' → logprob: -8.272592544555664

Token 65: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.24434810876846313
    2. 'sum' → logprob: -1.9943480491638184
    3. ' abs' → logprob: -2.6193480491638184
    4. 'abs' → logprob: -4.869348049163818
    5. ' ' → logprob: -10.119348526000977
    6. '   ' → logprob: -10.119348526000977
    7. '(sum' → logprob: -10.619348526000977
    8. '0' → logprob: -11.119348526000977
    9. '  ' → logprob: -11.744348526000977
    10. '	sum' → logprob: -12.244348526000977

Token 66: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.009201682172715664
    2. '(' → logprob: -4.759201526641846
    3. 'abs' → logprob: -7.884201526641846
    4. '([' → logprob: -9.009202003479004
    5. '((' → logprob: -10.384202003479004
    6. '(|' → logprob: -10.884202003479004
    7. ' abs' → logprob: -11.009202003479004
    8. '[' → logprob: -11.759202003479004
    9. '(map' → logprob: -12.884202003479004
    10. '(
' → logprob: -12.884202003479004

Token 67: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.011853814125061035
    2. '(x' → logprob: -4.8868536949157715
    3. '(a' → logprob: -5.5118536949157715
    4. '(s' → logprob: -9.63685417175293
    5. '(initial' → logprob: -9.88685417175293
    6. '(u' → logprob: -10.63685417175293
    7. '(p' → logprob: -11.13685417175293
    8. '(o' → logprob: -11.26185417175293
    9. '(' → logprob: -11.38685417175293
    10. '(ii' → logprob: -12.01185417175293

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.021790383383631706
    2. '-' → logprob: -3.8967902660369873
    3. '[i' → logprob: -7.271790504455566
    4. '-i' → logprob: -8.396790504455566
    5. ' ' → logprob: -10.021790504455566
    6. '[' → logprob: -10.396790504455566
    7. '1' → logprob: -10.396790504455566
    8. 't' → logprob: -10.771790504455566
    9. 'x' → logprob: -10.771790504455566
    10. '_i' → logprob: -10.896790504455566

Token 69: ' j' (ID: 441)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17980757355690002
    2. 'j' → logprob: -1.8048075437545776
    3. ' t' → logprob: -10.429807662963867
    4. ' j' → logprob: -12.054807662963867
    5. '   ' → logprob: -12.304807662963867
    6. 'p' → logprob: -12.429807662963867
    7. 'ti' → logprob: -12.679807662963867
    8. 'target' → logprob: -12.804807662963867
    9. ' ' → logprob: -13.554807662963867
    10. '```' → logprob: -13.554807662963867

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.97155623533763e-05
    2. ' )' → logprob: -9.375089645385742
    3. '))' → logprob: -13.500089645385742
    4. '   ' → logprob: -14.000089645385742
    5. 'for' → logprob: -14.125089645385742
    6. ' for' → logprob: -14.375089645385742
    7. ' ' → logprob: -15.250089645385742
    8. ')
' → logprob: -15.375089645385742
    9. '  ' → logprob: -15.875089645385742
    10. '2' → logprob: -16.125089645385742

Token 71: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41388818621635437
    2. ' for' → logprob: -1.1638882160186768
    3. 'for' → logprob: -3.6638882160186768
    4. '   ' → logprob: -7.913887977600098
    5. ' )' → logprob: -8.038887977600098
    6. ' ' → logprob: -8.163887977600098
    7. '  ' → logprob: -10.538887977600098
    8. '    ' → logprob: -11.163887977600098
    9. ']' → logprob: -13.288887977600098
    10. ',' → logprob: -13.913887977600098

Token 72: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006128933746367693
    2. 'i' → logprob: -5.131128787994385
    3. ' initial' → logprob: -9.631129264831543
    4. ' range' → logprob: -9.881129264831543
    5. ' zip' → logprob: -10.506129264831543
    6. ' ' → logprob: -11.131129264831543
    7. '  ' → logprob: -11.506129264831543
    8. '	i' → logprob: -11.506129264831543
    9. 'initial' → logprob: -11.881129264831543
    10. 'range' → logprob: -12.631129264831543

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02355908788740635
    2. ',j' → logprob: -3.898559093475342
    3. ',i' → logprob: -6.148559093475342
    4. ' ,' → logprob: -7.398559093475342
    5. ' in' → logprob: -9.273558616638184
    6. ',t' → logprob: -10.148558616638184
    7. 'i' → logprob: -10.398558616638184
    8. ' j' → logprob: -11.023558616638184
    9. ' i' → logprob: -11.023558616638184
    10. 'initial' → logprob: -11.648558616638184

Token 74: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3023526966571808
    2. 'j' → logprob: -1.4273526668548584
    3. ' zip' → logprob: -4.3023529052734375
    4. 'zip' → logprob: -5.1773529052734375
    5. '<|end|>' → logprob: -7.0523529052734375
    6. ' (' → logprob: -8.177352905273438
    7. ' ' → logprob: -8.677352905273438
    8. ' z' → logprob: -8.677352905273438
    9. '_j' → logprob: -9.177352905273438
    10. '  ' → logprob: -9.677352905273438

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004215162713080645
    2. 'in' → logprob: -5.504215240478516
    3. ' zip' → logprob: -9.379215240478516
    4. 'zip' → logprob: -10.754215240478516
    5. ')' → logprob: -11.754215240478516
    6. ',' → logprob: -11.754215240478516
    7. '(zip' → logprob: -12.129215240478516
    8. '<|end|>' → logprob: -12.629215240478516
    9. ' ' → logprob: -13.004215240478516
    10. '.zip' → logprob: -14.004215240478516

Token 76: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.5759416818618774
    2. 'zip' → logprob: -0.8259416818618774
    3. '(zip' → logprob: -13.200942039489746
    4. '.zip' → logprob: -15.450942039489746
    5. '_zip' → logprob: -16.07594108581543
    6. ' ' → logprob: -17.45094108581543
    7. 'z' → logprob: -18.45094108581543
    8. 'Zip' → logprob: -18.82594108581543
    9. 'pair' → logprob: -19.20094108581543
    10. ')' → logprob: -19.32594108581543

Token 77: '(sorted' (ID: 92488)
  Prédit: '(initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(initial' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -10.750021934509277
    3. 'initial' → logprob: -15.500021934509277
    4. ' (' → logprob: -18.75002098083496
    5. ' initial' → logprob: -18.75002098083496
    6. '(original' → logprob: -19.00002098083496
    7. ')' → logprob: -19.50002098083496
    8. '(
' → logprob: -19.62502098083496
    9. '(min' → logprob: -19.62502098083496
    10. '(in' → logprob: -19.87502098083496

Token 78: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -1.664371848164592e-05
    2. 'initial' → logprob: -11.250016212463379
    3. '(' → logprob: -12.625016212463379
    4. ' initial' → logprob: -16.375017166137695
    5. '(
' → logprob: -16.750017166137695
    6. '	initial' → logprob: -16.750017166137695
    7. '(min' → logprob: -17.750017166137695
    8. '(in' → logprob: -18.375017166137695
    9. '.initial' → logprob: -18.500017166137695
    10. ' (' → logprob: -18.500017166137695

Token 79: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06950327754020691
    2. '),' → logprob: -2.9445033073425293
    3. ' ,' → logprob: -4.694503307342529
    4. ',target' → logprob: -5.569503307342529
    5. '   ' → logprob: -7.194503307342529
    6. '(),' → logprob: -8.194502830505371
    7. ',),' → logprob: -8.694502830505371
    8. ' ),' → logprob: -9.944502830505371
    9. '(target' → logprob: -10.069502830505371
    10. 'sorted' → logprob: -10.069502830505371

Token 80: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.1822645366191864
    2. ' sorted' → logprob: -1.8072645664215088
    3. 'target' → logprob: -6.30726432800293
    4. ' target' → logprob: -7.55726432800293
    5. '(sorted' → logprob: -9.30726432800293
    6. '   ' → logprob: -9.93226432800293
    7. ' ' → logprob: -11.18226432800293
    8. '.sorted' → logprob: -11.55726432800293
    9. '    ' → logprob: -13.05726432800293
    10. '  ' → logprob: -13.68226432800293

Token 81: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -8.137130498653278e-05
    2. 'target' → logprob: -9.500081062316895
    3. '(' → logprob: -12.125081062316895
    4. ' target' → logprob: -14.125081062316895
    5. ' (' → logprob: -15.750081062316895
    6. ',target' → logprob: -16.75008201599121
    7. '[target' → logprob: -17.12508201599121
    8. '(initial' → logprob: -17.62508201599121
    9. '	target' → logprob: -17.75008201599121
    10. '(t' → logprob: -18.25008201599121

Token 82: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.018600542098283768
    2. '))' → logprob: -4.0186004638671875
    3. ')' → logprob: -8.018600463867188
    4. ' ' → logprob: -9.768600463867188
    5. '))))' → logprob: -10.268600463867188
    6. '   ' → logprob: -11.518600463867188
    7. ')));' → logprob: -11.768600463867188
    8. ')))
' → logprob: -12.268600463867188
    9. ' ))' → logprob: -13.268600463867188
    10. ')))

' → logprob: -13.768600463867188

Token 83: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06568696349859238
    2. '
' → logprob: -2.9406869411468506
    3. '\n' → logprob: -5.06568717956543
    4. '

' → logprob: -6.69068717956543
    5. '<|end|>' → logprob: -6.94068717956543
    6. '\' → logprob: -7.31568717956543
    7. '```' → logprob: -7.31568717956543
    8. 'newline' → logprob: -8.31568717956543
    9. '[' → logprob: -8.81568717956543
    10. '    
' → logprob: -9.81568717956543

Token 84: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.013010449707508087
    2. ' solve' → logprob: -4.513010501861572
    3. ' min' → logprob: -8.013010025024414
    4. ' count' → logprob: -8.263010025024414
    5. ' process' → logprob: -8.638010025024414
    6. ' ' → logprob: -8.763010025024414
    7. ' find' → logprob: -8.763010025024414
    8. ' bit' → logprob: -9.138010025024414
    9. ' calculate' → logprob: -9.263010025024414
    10. ' solution' → logprob: -9.388010025024414

Token 85: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06372614204883575
    2. '(' → logprob: -2.8137261867523193
    3. '(initial' → logprob: -7.68872594833374
    4. '(stdin' → logprob: -8.688726425170898
    5. '()' → logprob: -8.938726425170898
    6. '(args' → logprob: -9.063726425170898
    7. '(line' → logprob: -9.188726425170898
    8. '(input' → logprob: -9.563726425170898
    9. ':' → logprob: -9.813726425170898
    10. ' ():' → logprob: -9.938726425170898

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06470859795808792
    2. '(stdin' → logprob: -3.439708709716797
    3. '    
' → logprob: -4.564708709716797
    4. ' stdin' → logprob: -5.189708709716797
    5. ' readline' → logprob: -5.689708709716797
    6. '```' → logprob: -5.939708709716797
    7. '
' → logprob: -6.314708709716797
    8. 'stdin' → logprob: -6.314708709716797
    9. ' input' → logprob: -7.064708709716797
    10. '\' → logprob: -7.064708709716797

Token 87: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.35594189167022705
    2. '   ' → logprob: -1.480941891670227
    3. 'n' → logprob: -2.7309417724609375
    4. ' input' → logprob: -5.4809417724609375
    5. 'import' → logprob: -6.9809417724609375
    6. 'input' (adapté à ' input') → logprob: -7.3559417724609375
    7. ' import' → logprob: -7.6059417724609375
    8. '	n' → logprob: -8.980941772460938
    9. ' N' → logprob: -9.105941772460938
    10. ' t' → logprob: -9.230941772460938

Token 88: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8242884278297424
    2. '_line' → logprob: -2.0742883682250977
    3. '_data' → logprob: -2.0742883682250977
    4. '_lines' → logprob: -2.1992883682250977
    5. '=' → logprob: -2.3242883682250977
    6. ' =' → logprob: -2.4492883682250977
    7. '_' → logprob: -4.324288368225098
    8. 'data' → logprob: -7.699288368225098
    9. '_text' → logprob: -8.699288368225098
    10. '_list' → logprob: -8.699288368225098

Token 89: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.2646929621696472
    2. ' stdin' → logprob: -1.514693021774292
    3. '(stdin' → logprob: -4.389692783355713
    4. 'input' → logprob: -9.014693260192871
    5. '.stdin' → logprob: -9.639693260192871
    6. ' input' → logprob: -9.889693260192871
    7. 'std' → logprob: -11.014693260192871
    8. ' std' → logprob: -12.014693260192871
    9. 'int' → logprob: -12.514693260192871
    10. 'st' → logprob: -12.514693260192871

Token 90: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0017094480572268367
    2. '.read' → logprob: -6.751709461212158
    3. '.' → logprob: -7.751709461212158
    4. '.readlines' → logprob: -9.126708984375
    5. 'read' → logprob: -15.876708984375
    6. ' .' → logprob: -16.501708984375
    7. ' readline' → logprob: -16.626708984375
    8. '.Read' → logprob: -17.501708984375
    9. '.rstrip' → logprob: -17.501708984375
    10. '.reader' → logprob: -17.751708984375

Token 91: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39791375398635864
    2. '().' → logprob: -1.1479136943817139
    3. '()
' → logprob: -4.522913932800293
    4. '()\' → logprob: -9.647913932800293
    5. '()

' → logprob: -10.147913932800293
    6. '()
' → logprob: -11.772913932800293
    7. '
' → logprob: -12.772913932800293
    8. '()<' → logprob: -13.022913932800293
    9. '(' → logprob: -13.397913932800293
    10. '()`' → logprob: -13.772913932800293

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16023144125938416
    2. '()' → logprob: -2.660231351852417
    3. '
' → logprob: -3.285231351852417
    4. '()
' → logprob: -4.035231590270996
    5. '(n' → logprob: -4.410231590270996
    6. '    
' → logprob: -5.160231590270996
    7. 'n' → logprob: -6.410231590270996
    8. 'def' → logprob: -6.660231590270996
    9. '(' → logprob: -7.285231590270996
    10. '()\' → logprob: -7.410231590270996

Token 93: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1655481606721878
    2. ' n' → logprob: -2.290548086166382
    3. '   ' → logprob: -3.915548086166382
    4. 't' → logprob: -4.290548324584961
    5. '
' → logprob: -4.540548324584961
    6. ' t' → logprob: -5.540548324584961
    7. '	n' → logprob: -7.040548324584961
    8. ' T' → logprob: -7.165548324584961
    9. 'T' → logprob: -8.540548324584961
    10. '(n' → logprob: -8.665548324584961

Token 94: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06407751888036728
    2. ',' → logprob: -3.439077615737915
    3. '=' → logprob: -3.564077615737915
    4. ' ,' → logprob: -6.814077377319336
    5. ' ' → logprob: -7.689077377319336
    6. '=int' → logprob: -10.189077377319336
    7. ')' → logprob: -10.814077377319336
    8. '  ' → logprob: -11.439077377319336
    9. '    ' → logprob: -12.189077377319336
    10. ' =
' → logprob: -12.314077377319336

Token 95: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.40639597177505493
    2. 'K' → logprob: -1.2813959121704102
    3. ' M' → logprob: -3.40639591217041
    4. 'M' → logprob: -4.03139591217041
    5. ' ' → logprob: -6.28139591217041
    6. 'Q' → logprob: -6.53139591217041
    7. ' Q' → logprob: -7.15639591217041
    8. 'k' → logprob: -8.40639591217041
    9. '_' → logprob: -8.40639591217041
    10. '  ' → logprob: -8.40639591217041

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894187211990356
    2. '=' → logprob: -2.463941812515259
    3. '=input' → logprob: -14.21394157409668
    4. '    ' → logprob: -14.46394157409668
    5. ' ' → logprob: -14.83894157409668
    6. ')' → logprob: -14.96394157409668
    7. ',' → logprob: -15.21394157409668
    8. '=line' → logprob: -15.83894157409668
    9. '   ' → logprob: -17.08894157409668
    10. '=int' → logprob: -17.58894157409668

Token 97: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.048588961362838745
    2. 'map' → logprob: -3.048588991165161
    3. ' ' → logprob: -14.048588752746582
    4. '	map' → logprob: -14.923588752746582
    5. 'input' → logprob: -16.0485897064209
    6. ' list' → logprob: -16.1735897064209
    7. '   ' → logprob: -16.4235897064209
    8. ' input' → logprob: -16.6735897064209
    9. 'list' → logprob: -16.6735897064209
    10. '(map' → logprob: -17.5485897064209

Token 98: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005889333784580231
    2. '(' → logprob: -5.380889415740967
    3. '(str' → logprob: -7.505889415740967
    4. '(lambda' → logprob: -7.755889415740967
    5. '(input' → logprob: -8.505888938903809
    6. '(stdin' → logprob: -10.630888938903809
    7. '(map' → logprob: -10.880888938903809
    8. '(list' → logprob: -10.880888938903809
    9. '(tuple' → logprob: -11.130888938903809
    10. 'int' → logprob: -13.130888938903809

Token 99: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5633859634399414
    2. ',' → logprob: -0.9383859634399414
    3. '(stdin' → logprob: -3.8133859634399414
    4. '(input' → logprob: -4.188385963439941
    5. '(' → logprob: -6.563385963439941
    6. ' ,' → logprob: -8.313385963439941
    7. 'input' → logprob: -8.563385963439941
    8. 'stdin' → logprob: -8.688385963439941
    9. ',int' → logprob: -10.188385963439941
    10. '   ' → logprob: -10.438385963439941

Token 100: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602867692708969
    2. ' input' → logprob: -1.910286784172058
    3. 'stdin' → logprob: -9.910286903381348
    4. ')' → logprob: -12.285286903381348
    5. ' stdin' → logprob: -12.535286903381348
    6. 'str' → logprob: -13.035286903381348
    7. '   ' → logprob: -14.660286903381348
    8. ' ' → logprob: -14.785286903381348
    9. '=input' → logprob: -14.785286903381348
    10. ',input' → logprob: -14.910286903381348

Token 101: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004931025905534625
    2. '()' → logprob: -7.625493049621582
    3. '())' → logprob: -13.000493049621582
    4. '('' → logprob: -13.500493049621582
    5. ' ().' → logprob: -14.500493049621582
    6. '().'' → logprob: -14.875493049621582
    7. ')' → logprob: -15.875493049621582
    8. '(' → logprob: -15.875493049621582
    9. '('').' → logprob: -16.5004940032959
    10. '()
' → logprob: -16.8754940032959

Token 102: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2548961639404297
    2. 'split' → logprob: -1.5048961639404297
    3. 'rstrip' → logprob: -6.00489616394043
    4. 'read' → logprob: -7.62989616394043
    5. ' strip' → logprob: -13.00489616394043
    6. ')' → logprob: -13.25489616394043
    7. '(split' → logprob: -13.25489616394043
    8. '(strip' → logprob: -13.37989616394043
    9. ' split' → logprob: -14.00489616394043
    10. 'plit' → logprob: -14.37989616394043

Token 103: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6270328760147095
    2. ')' → logprob: -0.8770328760147095
    3. '()' → logprob: -3.00203275680542
    4. '(' → logprob: -10.127033233642578
    5. '())
' → logprob: -10.252033233642578
    6. '))' → logprob: -11.002033233642578
    7. '('' → logprob: -12.002033233642578
    8. '()))' → logprob: -12.502033233642578
    9. ' ())' → logprob: -12.877033233642578
    10. ')")' → logprob: -12.877033233642578

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39386114478111267
    2. '```' → logprob: -2.2688610553741455
    3. '    
' → logprob: -3.0188610553741455
    4. 'positions' → logprob: -3.2688610553741455
    5. '<|end|>' → logprob: -3.6438610553741455
    6. '
' → logprob: -4.143861293792725
    7. 'bits' → logprob: -4.393861293792725
    8. 'initial' → logprob: -4.643861293792725
    9. 's' → logprob: -4.643861293792725
    10. ' positions' → logprob: -5.018861293792725

Token 105: ' bits' (ID: 18189)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9344701766967773
    2. 'A' → logprob: -1.1844701766967773
    3. 'initial' → logprob: -1.8094701766967773
    4. 'grid' → logprob: -3.5594701766967773
    5. 's' → logprob: -3.8094701766967773
    6. 'bits' (adapté à ' bits') → logprob: -4.184470176696777
    7. 'arr' → logprob: -4.809470176696777
    8. ' S' → logprob: -5.059470176696777
    9. ' initial' → logprob: -5.184470176696777
    10. 'a' → logprob: -5.309470176696777

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07975950837135315
    2. '=' → logprob: -2.9547595977783203
    3. '_positions' → logprob: -4.07975959777832
    4. '_' → logprob: -5.20475959777832
    5. '_pos' → logprob: -7.20475959777832
    6. 's' → logprob: -7.70475959777832
    7. '   ' → logprob: -7.82975959777832
    8. '1' → logprob: -9.45475959777832
    9. 'positions' → logprob: -9.45475959777832
    10. '_set' → logprob: -9.82975959777832

Token 107: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6325080990791321
    2. ' list' → logprob: -1.2575080394744873
    3. 'input' → logprob: -2.3825080394744873
    4. ' input' → logprob: -2.5075080394744873
    5. '[input' → logprob: -5.132508277893066
    6. ' [' → logprob: -5.757508277893066
    7. '[' → logprob: -6.757508277893066
    8. '[list' → logprob: -9.257508277893066
    9. 'stdin' → logprob: -9.382508277893066
    10. ' stdin' → logprob: -9.632508277893066

Token 108: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.010890178382396698
    2. '(' → logprob: -5.135890007019043
    3. '(int' → logprob: -5.510890007019043
    4. '(input' → logprob: -7.385890007019043
    5. '(bin' → logprob: -9.135890007019043
    6. '(stdin' → logprob: -9.260890007019043
    7. '()' → logprob: -10.385890007019043
    8. '(range' → logprob: -10.885890007019043
    9. '(str' → logprob: -10.885890007019043
    10. 'map' → logprob: -11.760890007019043

Token 109: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002261854097014293
    2. '(' → logprob: -8.500226020812988
    3. 'int' → logprob: -11.750226020812988
    4. '[int' → logprob: -12.375226020812988
    5. '<int' → logprob: -12.375226020812988
    6. ',int' → logprob: -12.750226020812988
    7. '(str' → logprob: -14.000226020812988
    8. ']int' → logprob: -14.000226020812988
    9. '=int' → logprob: -14.250226020812988
    10. ')(' → logprob: -15.500226020812988

Token 110: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.7182514667510986
    2. ',' → logprob: -1.2182514667510986
    3. '(input' → logprob: -1.5932514667510986
    4. '(stdin' → logprob: -4.3432512283325195
    5. '(' → logprob: -9.09325122833252
    6. '=input' → logprob: -9.34325122833252
    7. ' ,' → logprob: -9.59325122833252
    8. 'input' → logprob: -10.71825122833252
    9. 'stdin' → logprob: -11.09325122833252
    10. ',(' → logprob: -11.34325122833252

Token 111: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011049585416913033
    2. ' input' → logprob: -4.511049747467041
    3. '(input' → logprob: -14.011049270629883
    4. 'stdin' → logprob: -14.636049270629883
    5. '=input' → logprob: -15.761049270629883
    6. ',input' → logprob: -16.011049270629883
    7. ')' → logprob: -16.761049270629883
    8. '	input' → logprob: -17.261049270629883
    9. '[input' → logprob: -17.261049270629883
    10. ' stdin' → logprob: -17.636049270629883

Token 112: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1994775377388578e-05
    2. '()' → logprob: -11.375012397766113
    3. '.readline' → logprob: -15.250012397766113
    4. ' ().' → logprob: -16.500011444091797
    5. '()))' → logprob: -18.125011444091797
    6. '())' → logprob: -18.625011444091797
    7. '.split' → logprob: -18.750011444091797
    8. '().__' → logprob: -18.875011444091797
    9. '().'' → logprob: -19.000011444091797
    10. '()-' → logprob: -19.000011444091797

Token 113: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00025037277373485267
    2. 'strip' → logprob: -8.500250816345215
    3. 'read' → logprob: -10.000250816345215
    4. 'rstrip' → logprob: -14.000250816345215
    5. ' split' → logprob: -15.000250816345215
    6. '(split' → logprob: -15.375250816345215
    7. ')' → logprob: -17.5002498626709
    8. 'decode' → logprob: -17.6252498626709
    9. ' readline' → logprob: -18.3752498626709
    10. 'spl' → logprob: -18.3752498626709

Token 114: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04674893245100975
    2. '()' → logprob: -3.6717488765716553
    3. '))' → logprob: -3.9217488765716553
    4. '())' → logprob: -8.046749114990234
    5. '()))
' → logprob: -10.296749114990234
    6. '()));' → logprob: -10.421749114990234
    7. '(' → logprob: -11.046749114990234
    8. ')' → logprob: -11.671749114990234
    9. '()))

' → logprob: -11.671749114990234
    10. '().' → logprob: -11.671749114990234

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029526203870773315
    2. '    
' → logprob: -6.627952575683594
    3. 'positions' → logprob: -7.877952575683594
    4. '```' → logprob: -8.377952575683594
    5. 'indices' → logprob: -8.752952575683594
    6. '
' → logprob: -8.877952575683594
    7. 'ones' → logprob: -9.002952575683594
    8. 'count' → logprob: -9.502952575683594
    9. 'def' → logprob: -9.627952575683594
    10. '    ' → logprob: -9.877952575683594

Token 116: ' runs' (ID: 13719)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.11712291836738586
    2. '   ' → logprob: -3.2421228885650635
    3. 'one' → logprob: -3.7421228885650635
    4. 'positions' → logprob: -3.7421228885650635
    5. 'if' → logprob: -4.242123126983643
    6. 'indices' → logprob: -5.867123126983643
    7. 'count' → logprob: -6.492123126983643
    8. 'pos' → logprob: -6.492123126983643
    9. ' ones' → logprob: -7.117123126983643
    10. 'total' → logprob: -7.742123126983643

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009096754365600646
    2. '=' → logprob: -7.125909805297852
    3. '=[]' → logprob: -9.250909805297852
    4. '_' → logprob: -13.000909805297852
    5. ',' → logprob: -13.250909805297852
    6. ' =[' → logprob: -13.500909805297852
    7. 's' → logprob: -13.875909805297852
    8. ' ' → logprob: -14.000909805297852
    9. '=[]
' → logprob: -15.125909805297852
    10. '	' → logprob: -15.125909805297852

Token 118: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.030019832774996758
    2. '[]
' → logprob: -3.530019760131836
    3. ' []' → logprob: -8.655019760131836
    4. '[' → logprob: -9.530019760131836
    5. ' []
' → logprob: -11.655019760131836
    6. '[]

' → logprob: -12.155019760131836
    7. '[]}' → logprob: -13.280019760131836
    8. '([]' → logprob: -13.405019760131836
    9. '[(' → logprob: -13.655019760131836
    10. ' ' → logprob: -13.905019760131836

Token 119: '(map' (ID: 16946)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.008967067115008831
    2. '()' → logprob: -4.88396692276001
    3. '(' → logprob: -6.75896692276001
    4. '([]' → logprob: -9.758967399597168
    5. '(filter' → logprob: -9.883967399597168
    6. '(t' → logprob: -11.383967399597168
    7. 'acc' → logprob: -11.508967399597168
    8. '(ac' → logprob: -12.008967399597168
    9. '(com' → logprob: -12.258967399597168
    10. '(abs' → logprob: -12.258967399597168

Token 120: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.240481914370321e-05
    2. ',int' → logprob: -11.375052452087402
    3. ')(' → logprob: -11.625052452087402
    4. ']int' → logprob: -11.750052452087402
    5. '=int' → logprob: -11.875052452087402
    6. '(' → logprob: -11.875052452087402
    7. '[int' → logprob: -12.500052452087402
    8. '<int' → logprob: -13.000052452087402
    9. ')' → logprob: -13.250052452087402
    10. 'int' → logprob: -13.500052452087402

Token 121: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.9834116697311401
    2. ',' → logprob: -1.1084116697311401
    3. ',input' → logprob: -1.2334116697311401
    4. '(' → logprob: -5.98341178894043
    5. '=input' → logprob: -6.98341178894043
    6. '(int' → logprob: -7.98341178894043
    7. ' (' → logprob: -8.73341178894043
    8. ',(' → logprob: -8.73341178894043
    9. ',int' → logprob: -8.98341178894043
    10. ' ,' → logprob: -9.48341178894043

Token 122: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03806019574403763
    2. ' input' → logprob: -3.288060188293457
    3. 'stdin' → logprob: -11.663060188293457
    4. '(input' → logprob: -12.038060188293457
    5. ',input' → logprob: -13.163060188293457
    6. '   ' → logprob: -14.163060188293457
    7. '=input' → logprob: -14.663060188293457
    8. '	input' → logprob: -15.413060188293457
    9. ' stdin' → logprob: -15.538060188293457
    10. ' ' → logprob: -15.538060188293457

Token 123: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011772842844948173
    2. '()))' → logprob: -9.625117301940918
    3. '()' → logprob: -10.125117301940918
    4. '())' → logprob: -12.375117301940918
    5. '(' → logprob: -12.750117301940918
    6. '.readline' → logprob: -13.500117301940918
    7. '))' → logprob: -14.125117301940918
    8. '.' → logprob: -14.500117301940918
    9. '.split' → logprob: -14.500117301940918
    10. ')' → logprob: -15.500117301940918

Token 124: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1756367712223437e-05
    2. 'strip' → logprob: -11.625011444091797
    3. ')' → logprob: -13.750011444091797
    4. '().' → logprob: -14.375011444091797
    5. ' split' → logprob: -14.500011444091797
    6. 'read' → logprob: -15.500011444091797
    7. '.split' → logprob: -15.875011444091797
    8. '())' → logprob: -16.625011444091797
    9. '(split' → logprob: -17.000011444091797
    10. 'plit' → logprob: -17.250011444091797

Token 125: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2580900192260742
    2. '))' → logprob: -1.5080900192260742
    3. '()' → logprob: -5.258090019226074
    4. '())' → logprob: -7.633090019226074
    5. '()))
' → logprob: -8.133090019226074
    6. ')' → logprob: -9.383090019226074
    7. '(' → logprob: -10.633090019226074
    8. '()))

' → logprob: -11.008090019226074
    9. '()));' → logprob: -11.008090019226074
    10. '))
' → logprob: -12.258090019226074

Token 126: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30512735247612
    2. '
' → logprob: -1.5551273822784424
    3. '    
' → logprob: -3.1801273822784424
    4. '```' → logprob: -5.305127143859863
    5. 'indices' → logprob: -6.555127143859863
    6. 'positions' → logprob: -6.680127143859863
    7. 'def' → logprob: -7.555127143859863
    8. 'pos' → logprob: -8.305127143859863
    9. '   
' → logprob: -8.555127143859863
    10. ' positions' → logprob: -8.680127143859863

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9882245063781738
    2. 'ones' → logprob: -0.9882245063781738
    3. 'pos' → logprob: -2.863224506378174
    4. 'positions' → logprob: -3.238224506378174
    5. 'one' → logprob: -3.363224506378174
    6. 'total' → logprob: -3.863224506378174
    7. 'result' → logprob: -4.363224506378174
    8. 'prefix' → logprob: -4.488224506378174
    9. ' ones' → logprob: -4.863224506378174
    10. 'res' → logprob: -4.863224506378174

Token 128: ' #' (ID: 1069)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.604946494102478
    2. 'positions' → logprob: -1.729946494102478
    3. 'prefix' → logprob: -2.4799466133117676
    4. 'one' → logprob: -2.6049466133117676
    5. 'total' → logprob: -3.2299466133117676
    6. 'pos' → logprob: -3.4799466133117676
    7. 'if' → logprob: -4.479946613311768
    8. 'indices' → logprob: -4.979946613311768
    9. '#' (adapté à ' #') → logprob: -5.229946613311768
    10. 'target' → logprob: -5.854946613311768

Token 129: ' We' (ID: 1416)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.5822941064834595
    2. ' ones' → logprob: -1.2072941064834595
    3. 'one' → logprob: -3.33229398727417
    4. ' positions' → logprob: -4.08229398727417
    5. ' one' → logprob: -4.20729398727417
    6. 'positions' → logprob: -4.20729398727417
    7. '#' → logprob: -4.33229398727417
    8. 'pos' → logprob: -4.95729398727417
    9. 'prefix' → logprob: -5.58229398727417
    10. 'total' → logprob: -5.83229398727417

Token 130: ' have' (ID: 679)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7354998588562012
    2. ' need' → logprob: -1.8604998588562012
    3. 'need' → logprob: -1.9854998588562012
    4. '   ' → logprob: -2.235499858856201
    5. ' =' → logprob: -2.360499858856201
    6. 'have' → logprob: -2.485499858856201
    7. '=' → logprob: -2.985499858856201
    8. 'def' → logprob: -3.110499858856201
    9. ' have' → logprob: -3.360499858856201
    10. ' want' → logprob: -4.485499858856201

Token 131: ' two' (ID: 1920)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9468342065811157
    2. 'to' → logprob: -1.3218342065811157
    3. 'positions' → logprob: -2.571834087371826
    4. ' M' → logprob: -2.946834087371826
    5. 'M' → logprob: -3.321834087371826
    6. 'total' → logprob: -3.446834087371826
    7. ' positions' → logprob: -3.571834087371826
    8. ' total' → logprob: -3.946834087371826
    9. ' ones' → logprob: -4.446834087371826
    10. 'a' → logprob: -4.446834087371826

Token 132: ' possible' (ID: 4149)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.30175870656967163
    2. 'lists' → logprob: -2.6767587661743164
    3. ' arrays' → logprob: -3.0517587661743164
    4. ' pointers' → logprob: -3.3017587661743164
    5. 'types' → logprob: -3.4267587661743164
    6. 'arrays' → logprob: -4.426758766174316
    7. ' types' → logprob: -4.676758766174316
    8. ' options' → logprob: -5.176758766174316
    9. ' lines' → logprob: -5.301758766174316
    10. ' sequences' → logprob: -5.426758766174316

Token 133: ' target' (ID: 3783)
  Prédit: ' scenarios'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' scenarios' → logprob: -1.5359930992126465
    2. ' ways' → logprob: -1.7859930992126465
    3. ' approaches' → logprob: -2.4109930992126465
    4. ' options' → logprob: -2.7859930992126465
    5. 'options' → logprob: -2.7859930992126465
    6. 'strateg' → logprob: -2.7859930992126465
    7. ' choices' → logprob: -3.2859930992126465
    8. 'positions' → logprob: -3.4109930992126465
    9. 'patterns' → logprob: -3.4109930992126465
    10. 'targets' → logprob: -3.4109930992126465

Token 134: ' bit' (ID: 3546)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49309155344963074
    2. ' lists' → logprob: -1.9930915832519531
    3. ' arrangements' → logprob: -2.493091583251953
    4. ' arrays' → logprob: -3.118091583251953
    5. ' positions' → logprob: -3.493091583251953
    6. ' patterns' → logprob: -3.618091583251953
    7. 'positions' → logprob: -3.993091583251953
    8. ' sequences' → logprob: -4.118091583251953
    9. 'lists' → logprob: -4.743091583251953
    10. ' configurations' → logprob: -5.368091583251953

Token 135: 'strings' (ID: 41195)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7625097632408142
    2. ' positions' → logprob: -1.637509822845459
    3. 's' → logprob: -2.012509822845459
    4. '_positions' → logprob: -3.387509822845459
    5. 'strings' → logprob: -3.512509822845459
    6. ' sequences' → logprob: -3.512509822845459
    7. ' arrays' → logprob: -3.762509822845459
    8. 'arrays' → logprob: -3.762509822845459
    9. 'sets' → logprob: -4.137509822845459
    10. 'lists' → logprob: -4.387509822845459

Token 136: ' according' (ID: 7065)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21702107787132263
    2. 's' → logprob: -2.3420209884643555
    3. ':' → logprob: -3.2170209884643555
    4. '0' → logprob: -3.9670209884643555
    5. '=' → logprob: -4.0920209884643555
    6. ',' → logprob: -5.4670209884643555
    7. '#' → logprob: -5.4670209884643555
    8. '_' → logprob: -5.5920209884643555
    9. '   ' → logprob: -6.0920209884643555
    10. '1' → logprob: -6.3420209884643555

Token 137: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6395326256752014
    2. 'to' → logprob: -0.7645326256752014
    3. '<|end|>' → logprob: -5.139532566070557
    4. '_to' → logprob: -7.014532566070557
    5. '<|end|>' → logprob: -9.764533042907715
    6. ' ' → logprob: -10.389533042907715
    7. '_' → logprob: -11.764533042907715
    8. ')' → logprob: -12.014533042907715
    9. '   ' → logprob: -12.139533042907715
    10. '[to' → logprob: -12.514533042907715

Token 138: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.7919888496398926
    2. '[' → logprob: -0.9169888496398926
    3. ' runs' → logprob: -2.4169888496398926
    4. ' the' → logprob: -4.291988849639893
    5. 'bits' → logprob: -4.666988849639893
    6. 'the' → logprob: -4.916988849639893
    7. '#' → logprob: -5.416988849639893
    8. ' [' → logprob: -5.666988849639893
    9. ' parity' → logprob: -6.041988849639893
    10. ' bits' → logprob: -6.166988849639893

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5110265016555786
    2. '0' → logprob: -2.136026382446289
    3. ' =' → logprob: -2.386026382446289
    4. '_' → logprob: -2.886026382446289
    5. '=' → logprob: -3.636026382446289
    6. '
' → logprob: -3.761026382446289
    7. ',' → logprob: -4.261026382446289
    8. '[' → logprob: -4.636026382446289
    9. ':
' → logprob: -4.636026382446289
    10. 'def' → logprob: -5.136026382446289

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3147733807563782
    2. '    
' → logprob: -2.3147733211517334
    3. '
' → logprob: -2.6897733211517334
    4. ' 
' → logprob: -3.3147733211517334
    5. ' target' → logprob: -4.1897735595703125
    6. 'target' → logprob: -4.4397735595703125
    7. '[' → logprob: -5.0647735595703125
    8. '  
' → logprob: -5.1897735595703125
    9. ' for' → logprob: -5.4397735595703125
    10. ' possible' → logprob: -5.4397735595703125

Token 141: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.2172157764434814
    2. 'target' → logprob: -1.7172157764434814
    3. ' #' → logprob: -2.0922157764434814
    4. ' target' → logprob: -2.2172157764434814
    5. ' if' → logprob: -2.4672157764434814
    6. ' for' → logprob: -3.2172157764434814
    7. 'if' → logprob: -3.3422157764434814
    8. '
' → logprob: -4.467215538024902
    9. ' possible' → logprob: -4.467215538024902
    10. 'for' → logprob: -4.467215538024902

Token 142: ' One' (ID: 5108)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.128882884979248
    2. ' target' → logprob: -1.378882884979248
    3. '#' → logprob: -2.378882884979248
    4. 'targets' → logprob: -2.503882884979248
    5. ' targets' → logprob: -3.003882884979248
    6. ' for' → logprob: -3.128882884979248
    7. '
' → logprob: -3.503882884979248
    8. 'for' → logprob: -3.753882884979248
    9. ' #' → logprob: -4.128882884979248
    10. 'def' → logprob: -5.003882884979248

Token 143: ' starting' (ID: 8601)
  Prédit: ' starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' starts' → logprob: -1.921522855758667
    2. 'target' → logprob: -2.046522855758667
    3. ':' → logprob: -2.171522855758667
    4. '#' → logprob: -2.296522855758667
    5. ' has' → logprob: -2.421522855758667
    6. ' is' → logprob: -2.671522855758667
    7. ' =' → logprob: -2.921522855758667
    8. ' option' → logprob: -3.046522855758667
    9. ' with' → logprob: -3.046522855758667
    10. 'def' → logprob: -3.421522855758667

Token 144: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.018758967518806458
    2. ' with' → logprob: -4.018758773803711
    3. 'from' → logprob: -7.518758773803711
    4. '0' → logprob: -10.643758773803711
    5. '=' → logprob: -11.643758773803711
    6. 'and' → logprob: -11.893758773803711
    7. 'at' → logprob: -12.268758773803711
    8. '#' → logprob: -12.393758773803711
    9. '[' → logprob: -12.643758773803711
    10. '<|end|>' → logprob: -12.768758773803711

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5246673226356506
    2. '1' → logprob: -0.8996673226356506
    3. ' ' → logprob: -6.774667263031006
    4. 'bits' → logprob: -8.649667739868164
    5. 'runs' → logprob: -9.399667739868164
    6. 'bit' → logprob: -9.774667739868164
    7. 'run' → logprob: -9.899667739868164
    8. ' bits' → logprob: -11.774667739868164
    9. 'def' → logprob: -12.274667739868164
    10. 'a' → logprob: -12.524667739868164

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3872392177581787
    2. '1' → logprob: -1.1372392177581787
    3. 'runs' → logprob: -8.887239456176758
    4. 'bits' → logprob: -9.137239456176758
    5. 'run' → logprob: -10.137239456176758
    6. ' ' → logprob: -10.262239456176758
    7. 'bit' → logprob: -10.887239456176758
    8. 'a' → logprob: -12.137239456176758
    9. 'def' → logprob: -12.699739456176758
    10. ''' → logprob: -13.199739456176758

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0661359503865242
    2. ' and' → logprob: -3.566135883331299
    3. '<|end|>' → logprob: -4.066135883331299
    4. ':' → logprob: -4.816135883331299
    5. ' ,' → logprob: -5.691135883331299
    6. '
' → logprob: -6.691135883331299
    7. ' ' → logprob: -6.816135883331299
    8. 'target' → logprob: -6.941135883331299
    9. ',
' → logprob: -7.816135883331299
    10. ' or' → logprob: -7.816135883331299

Token 148: ' another' (ID: 3613)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.07700738310813904
    2. 'one' → logprob: -3.327007293701172
    3. ' other' → logprob: -4.202007293701172
    4. ' and' → logprob: -4.827007293701172
    5. ' the' → logprob: -4.952007293701172
    6. ' another' → logprob: -5.952007293701172
    7. 'other' → logprob: -6.702007293701172
    8. 'and' → logprob: -6.952007293701172
    9. ' then' → logprob: -7.202007293701172
    10. ' next' → logprob: -7.702007293701172

Token 149: ' starting' (ID: 8601)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.1976829767227173
    2. 'starting' → logprob: -1.1976829767227173
    3. ' starting' → logprob: -1.3226829767227173
    4. 'with' → logprob: -2.0726828575134277
    5. '#' → logprob: -6.072682857513428
    6. ' one' → logprob: -6.947682857513428
    7. ' ' → logprob: -8.447683334350586
    8. ',' → logprob: -9.072683334350586
    9. 'start' → logprob: -10.072683334350586
    10. ':' → logprob: -10.197683334350586

Token 150: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.0336686372756958
    2. ' with' → logprob: -3.4086685180664062
    3. '0' → logprob: -10.908668518066406
    4. '#' → logprob: -13.408668518066406
    5. ' ' → logprob: -13.658668518066406
    6. '=' → logprob: -13.783668518066406
    7. '   ' → logprob: -15.408668518066406
    8. 'from' → logprob: -15.533668518066406
    9. '1' → logprob: -16.158668518066406
    10. ',' → logprob: -16.283668518066406

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011049231514334679
    2. ' ' → logprob: -4.511049270629883
    3. '0' → logprob: -14.636049270629883
    4. ' ' → logprob: -16.073549270629883
    5. 'run' → logprob: -16.386049270629883
    6. '   ' → logprob: -16.386049270629883
    7. ' run' → logprob: -16.573549270629883
    8. ' one' → logprob: -16.823549270629883
    9. '`' → logprob: -16.823549270629883
    10. '```' → logprob: -16.823549270629883

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.875001907348633
    3. '0' → logprob: -14.625001907348633
    4. 'runs' → logprob: -16.125001907348633
    5. 'bits' → logprob: -16.250001907348633
    6. 'run' → logprob: -16.250001907348633
    7. '`' → logprob: -16.750001907348633
    8. '```' → logprob: -17.000001907348633
    9. '   ' → logprob: -18.375001907348633
    10. 'bit' → logprob: -19.000001907348633

Token 153: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2684243619441986
    2. '   ' → logprob: -1.643424391746521
    3. '    
' → logprob: -3.5184242725372314
    4. '<|end|>' → logprob: -4.7684245109558105
    5. ',' → logprob: -6.8934245109558105
    6. 'def' → logprob: -7.0184245109558105
    7. '<|end|>' → logprob: -7.3934245109558105
    8. '.' → logprob: -8.893424034118652
    9. '```' → logprob: -8.893424034118652
    10. '   
' → logprob: -9.143424034118652

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14888262748718262
    2. '
' → logprob: -2.1488826274871826
    3. '    
' → logprob: -4.523882865905762
    4. '<|end|>' → logprob: -5.148882865905762
    5. 'def' → logprob: -6.023882865905762
    6. '#' → logprob: -7.648882865905762
    7. ',' → logprob: -7.898882865905762
    8. '<|end|>' → logprob: -8.398882865905762
    9. ' def' → logprob: -8.898882865905762
    10. '    ' → logprob: -9.023882865905762

Token 155: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5671319961547852
    2. 'target' → logprob: -1.8171319961547852
    3. 'possible' → logprob: -1.9421319961547852
    4. 'pos' → logprob: -2.442131996154785
    5. '#' (adapté à ' #') → logprob: -2.567131996154785
    6. 'targets' → logprob: -2.942131996154785
    7. 'positions' → logprob: -3.317131996154785
    8. 'def' → logprob: -3.317131996154785
    9. 'poss' → logprob: -3.317131996154785
    10. 'res' → logprob: -3.567131996154785

Token 156: ' First' (ID: 8338)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.4210007190704346
    2. 'for' → logprob: -2.0460007190704346
    3. 'positions' → logprob: -2.0460007190704346
    4. 'possible' → logprob: -2.6710007190704346
    5. 'def' → logprob: -2.7960007190704346
    6. '#' → logprob: -3.0460007190704346
    7. ' for' → logprob: -3.0460007190704346
    8. 'target' → logprob: -3.4210007190704346
    9. 'targets' → logprob: -3.4210007190704346
    10. ' positions' → logprob: -3.5460007190704346

Token 157: ',' (ID: 11)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.8425967693328857
    2. '_positions' → logprob: -1.7175967693328857
    3. '_pos' → logprob: -1.8425967693328857
    4. '_' → logprob: -2.7175967693328857
    5. 'target' → logprob: -3.7175967693328857
    6. 'pos' → logprob: -3.8425967693328857
    7. '_run' → logprob: -3.9675967693328857
    8. '_one' → logprob: -4.092597007751465
    9. '_bits' → logprob: -4.342597007751465
    10. ',' → logprob: -4.342597007751465

Token 158: ' sum' (ID: 4215)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.7752742171287537
    2. 'pos' → logprob: -1.6502742767333984
    3. 'positions' → logprob: -1.6502742767333984
    4. 'one' → logprob: -2.4002742767333984
    5. '#' → logprob: -4.150274276733398
    6. 'def' → logprob: -4.275274276733398
    7. ' ones' → logprob: -4.400274276733398
    8. 'target' → logprob: -4.775274276733398
    9. ' positions' → logprob: -5.525274276733398
    10. ' one' → logprob: -6.650274276733398

Token 159: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3412989377975464
    2. '_runs' → logprob: -1.8412989377975464
    3. '_bits' → logprob: -3.341299057006836
    4. '0' → logprob: -3.341299057006836
    5. '_len' → logprob: -4.716299057006836
    6. '_length' → logprob: -4.716299057006836
    7. '_positions' → logprob: -5.716299057006836
    8. '_of' → logprob: -5.841299057006836
    9. '_run' → logprob: -5.966299057006836
    10. '_sw' → logprob: -5.966299057006836

Token 160: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.06944254785776138
    2. ' runs' → logprob: -3.1944425106048584
    3. 'bits' → logprob: -4.6944427490234375
    4. 'run' → logprob: -4.8194427490234375
    5. ' bits' → logprob: -5.4444427490234375
    6. 'all' → logprob: -7.4444427490234375
    7. ' lengths' → logprob: -7.5694427490234375
    8. ' run' → logprob: -7.8194427490234375
    9. 'length' → logprob: -8.069442749023438
    10. 'positions' → logprob: -8.069442749023438

Token 161: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23173882067203522
    2. '=' → logprob: -2.231738805770874
    3. '0' → logprob: -3.231738805770874
    4. 'sum' → logprob: -3.981738805770874
    5. '=sum' → logprob: -4.231739044189453
    6. 'total' → logprob: -5.231739044189453
    7. 's' → logprob: -5.231739044189453
    8. 'runs' → logprob: -5.356739044189453
    9. 'run' → logprob: -5.981739044189453
    10. '_' → logprob: -6.606739044189453

Token 162: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.39472782611846924
    2. 'sum' → logprob: -1.6447278261184692
    3. 'M' → logprob: -2.5197277069091797
    4. ' sum' → logprob: -3.6447277069091797
    5. ' N' → logprob: -4.01972770690918
    6. ' M' → logprob: -5.26972770690918
    7. '   ' → logprob: -5.89472770690918
    8. '=sum' → logprob: -9.14472770690918
    9. ' ' → logprob: -9.26972770690918
    10. 'runs' → logprob: -9.89472770690918

Token 163: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7086585164070129
    2. 'assert' → logprob: -1.7086584568023682
    3. '=' → logprob: -1.8336584568023682
    4. '#' → logprob: -3.458658456802368
    5. ',' → logprob: -3.458658456802368
    6. '<|end|>' → logprob: -3.708658456802368
    7. '<|end|>' → logprob: -3.958658456802368
    8. ' ' → logprob: -4.208658695220947
    9. ')' → logprob: -5.083658695220947
    10. '    ' → logprob: -5.208658695220947

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10533911734819412
    2. 'assert' → logprob: -2.9803390502929688
    3. '
' → logprob: -3.7303390502929688
    4. 'total' → logprob: -4.855339050292969
    5. 'if' → logprob: -4.980339050292969
    6. '    
' → logprob: -5.605339050292969
    7. ' if' → logprob: -6.355339050292969
    8. 'sum' → logprob: -6.355339050292969
    9. '#' → logprob: -6.980339050292969
    10. ' assert' → logprob: -7.105339050292969

Token 165: ' #' (ID: 1069)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assert' → logprob: -0.1498546004295349
    2. 'if' → logprob: -2.3998546600341797
    3. 'total' → logprob: -4.02485466003418
    4. '#' (adapté à ' #') → logprob: -4.39985466003418
    5. ' assert' → logprob: -5.77485466003418
    6. 'sum' → logprob: -5.89985466003418
    7. '   ' → logprob: -6.14985466003418
    8. 's' → logprob: -6.14985466003418
    9. '
' → logprob: -6.64985466003418
    10. 'start' → logprob: -6.64985466003418

Token 166: ' So' (ID: 2632)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.2362818717956543
    2. 'assert' → logprob: -1.3612818717956543
    3. 'if' → logprob: -1.7362818717956543
    4. 'pos' → logprob: -2.2362818717956543
    5. 'start' → logprob: -3.2362818717956543
    6. 'offset' → logprob: -3.3612818717956543
    7. '#' → logprob: -3.6112818717956543
    8. 'target' → logprob: -3.7362818717956543
    9. 'prefix' → logprob: -3.9862818717956543
    10. 'for' → logprob: -5.361281871795654

Token 167: ' build' (ID: 3024)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.008641004562378
    2. ' pos' → logprob: -1.383641004562378
    3. 'pos' → logprob: -2.008641004562378
    4. ' idx' → logprob: -3.133641004562378
    5. 'positions' → logprob: -3.258641004562378
    6. ' target' → logprob: -3.758641004562378
    7. ' ones' → logprob: -3.883641004562378
    8. ' start' → logprob: -4.133641242980957
    9. ' starts' → logprob: -4.633641242980957
    10. 'target' → logprob: -4.633641242980957

Token 168: ' two' (ID: 1920)
  Prédit: 'targets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'targets' → logprob: -0.8517110347747803
    2. 'target' → logprob: -1.6017110347747803
    3. 'two' → logprob: -1.8517110347747803
    4. 'positions' → logprob: -2.4767110347747803
    5. ' two' → logprob: -3.3517110347747803
    6. 'both' → logprob: -4.101711273193359
    7. 'pos' → logprob: -4.601711273193359
    8. 'bit' → logprob: -4.726711273193359
    9. 'patterns' → logprob: -5.226711273193359
    10. 'res' → logprob: -5.351711273193359

Token 169: ' possible' (ID: 4149)
  Prédit: 'targets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'targets' → logprob: -0.21621647477149963
    2. 'target' → logprob: -2.591216564178467
    3. 'c' → logprob: -3.591216564178467
    4. 'bit' → logprob: -3.716216564178467
    5. 'patterns' → logprob: -3.716216564178467
    6. 'possible' → logprob: -4.466216564178467
    7. 'positions' → logprob: -4.591216564178467
    8. ' targets' → logprob: -5.466216564178467
    9. ' bit' → logprob: -5.716216564178467
    10. 'prefix' → logprob: -6.591216564178467

Token 170: ' bit' (ID: 3546)
  Prédit: 'targets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'targets' → logprob: -0.12567594647407532
    2. 'patterns' → logprob: -2.625675916671753
    3. 'target' → logprob: -3.625675916671753
    4. 'bit' → logprob: -4.875676155090332
    5. 'positions' → logprob: -5.250676155090332
    6. ' targets' → logprob: -6.875676155090332
    7. 'strings' → logprob: -7.000676155090332
    8. 'arr' → logprob: -7.500676155090332
    9. ' patterns' → logprob: -7.625676155090332
    10. 'se' → logprob: -7.875676155090332

Token 171: 'strings' (ID: 41195)
  Prédit: 'strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.008348258212208748
    2. '_strings' → logprob: -5.13334846496582
    3. 'string' → logprob: -6.13334846496582
    4. 'arrays' → logprob: -9.25834846496582
    5. 'lists' → logprob: -9.88334846496582
    6. ' strings' → logprob: -10.50834846496582
    7. '_string' → logprob: -10.75834846496582
    8. '_lists' → logprob: -11.38334846496582
    9. '_sequences' → logprob: -11.38334846496582
    10. 's' → logprob: -11.63334846496582

Token 172: ' that' (ID: 484)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.090592622756958
    2. '   ' → logprob: -1.840592622756958
    3. ':' → logprob: -2.090592622756958
    4. ',' → logprob: -2.215592622756958
    5. 'target' → logprob: -2.465592622756958
    6. 'def' → logprob: -2.840592622756958
    7. 'targets' → logprob: -4.215592384338379
    8. ' with' → logprob: -4.215592384338379
    9. ' target' → logprob: -4.590592384338379
    10. 'result' → logprob: -4.715592384338379

Token 173: ' fit' (ID: 5769)
  Prédit: ' alternate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' alternate' → logprob: -0.4744037389755249
    2. 'alternate' → logprob: -1.599403738975525
    3. ' start' → logprob: -2.3494038581848145
    4. 'start' → logprob: -2.7244038581848145
    5. 'bits' → logprob: -6.4744038581848145
    6. ' represent' → logprob: -6.4744038581848145
    7. 'represent' → logprob: -6.5994038581848145
    8. 'altern' → logprob: -6.5994038581848145
    9. 'positions' → logprob: -6.8494038581848145
    10. ' differ' → logprob: -7.0994038581848145

Token 174: ' runs' (ID: 13719)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.858325481414795
    2. 'bits' → logprob: -1.858325481414795
    3. 'runs' → logprob: -1.983325481414795
    4. '
' → logprob: -2.358325481414795
    5. ' runs' → logprob: -2.733325481414795
    6. 'result' → logprob: -2.858325481414795
    7. 'pos' → logprob: -3.233325481414795
    8. ' into' → logprob: -3.233325481414795
    9. 'positions' → logprob: -3.358325481414795
    10. ' bits' → logprob: -3.983325481414795

Token 175: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9920804500579834
    2. ':' → logprob: -1.9920804500579834
    3. ',' → logprob: -2.7420804500579834
    4. 'target' → logprob: -2.7420804500579834
    5. 's' → logprob: -2.8670804500579834
    6. 'def' → logprob: -2.9920804500579834
    7. 'result' → logprob: -3.1170804500579834
    8. '0' → logprob: -3.1170804500579834
    9. '   ' → logprob: -3.4920804500579834
    10. 'bit' → logprob: -3.8670804500579834

Token 176: 'length' (ID: 7914)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3945202827453613
    2. 'runs' → logprob: -1.6445202827453613
    3. '[' → logprob: -2.1445202827453613
    4. 'starting' → logprob: -2.5195202827453613
    5. 'bits' → logprob: -2.6445202827453613
    6. 'def' → logprob: -2.8945202827453613
    7. ' runs' → logprob: -3.5195202827453613
    8. ' bits' → logprob: -3.7695202827453613
    9. '):
' → logprob: -3.7695202827453613
    10. '#' → logprob: -3.8945202827453613

Token 177: 's' (ID: 82)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6020822525024414
    2. 's' → logprob: -1.6020822525024414
    3. ' =' → logprob: -2.3520822525024414
    4. '=N' → logprob: -2.6020822525024414
    5. '=[' → logprob: -3.6020822525024414
    6. '=[]' → logprob: -3.9770822525024414
    7. '[N' → logprob: -4.977082252502441
    8. 'runs' → logprob: -5.227082252502441
    9. '[' → logprob: -5.352082252502441
    10. ')' → logprob: -5.977082252502441

Token 178: ' in' (ID: 306)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[' → logprob: -1.062925934791565
    2. ' =' → logprob: -1.437925934791565
    3. '=' → logprob: -2.0629258155822754
    4. ',' → logprob: -2.9379258155822754
    5. ' of' → logprob: -2.9379258155822754
    6. ' and' → logprob: -3.3129258155822754
    7. ')' → logprob: -3.4379258155822754
    8. 'and' → logprob: -3.6879258155822754
    9. 'of' → logprob: -4.187925815582275
    10. '[' → logprob: -4.437925815582275

Token 179: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.0009414771921001375
    2. '[' → logprob: -8.000941276550293
    3. ' runs' → logprob: -8.250941276550293
    4. '[r' → logprob: -9.000941276550293
    5. 'bits' → logprob: -9.000941276550293
    6. '[]' → logprob: -11.125941276550293
    7. '
' → logprob: -11.625941276550293
    8. 'each' → logprob: -11.750941276550293
    9. '[M' → logprob: -11.875941276550293
    10. '[N' → logprob: -11.875941276550293

Token 180: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48431116342544556
    2. '):
' → logprob: -1.9843111038208008
    3. ')' → logprob: -2.234311103820801
    4. '):' → logprob: -3.109311103820801
    5. ')
' → logprob: -3.234311103820801
    6. '):

' → logprob: -4.234311103820801
    7. ' with' → logprob: -5.359311103820801
    8. 'def' → logprob: -5.484311103820801
    9. '),' → logprob: -5.609311103820801
    10. ' for' → logprob: -5.609311103820801

Token 181: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21686150133609772
    2. '   ' → logprob: -1.9668614864349365
    3. 'def' → logprob: -3.7168614864349365
    4. '    
' → logprob: -4.341861724853516
    5. 'target' → logprob: -5.341861724853516
    6. ' for' → logprob: -5.966861724853516
    7. ',' → logprob: -6.216861724853516
    8. ' 
' → logprob: -6.466861724853516
    9. ':' → logprob: -6.716861724853516
    10. '#' → logprob: -6.966861724853516

Token 182: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20479923486709595
    2. 'targets' → logprob: -2.579799175262451
    3. 'target' → logprob: -3.454799175262451
    4. '
' → logprob: -3.579799175262451
    5. '#' (adapté à ' #') → logprob: -4.329799175262451
    6. ' def' → logprob: -4.829799175262451
    7. 'possible' → logprob: -4.954799175262451
    8. 'pos' → logprob: -5.579799175262451
    9. 'for' → logprob: -5.954799175262451
    10. 'res' → logprob: -5.954799175262451

Token 183: ' First' (ID: 8338)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24541500210762024
    2. 'targets' → logprob: -2.370414972305298
    3. 'target' → logprob: -2.495414972305298
    4. 'for' → logprob: -4.370415210723877
    5. 'pos' → logprob: -4.870415210723877
    6. 'possible' → logprob: -5.245415210723877
    7. 'res' → logprob: -5.495415210723877
    8. '#' → logprob: -5.745415210723877
    9. 'zero' → logprob: -5.870415210723877
    10. 'poss' → logprob: -7.370415210723877

Token 184: ' possible' (ID: 4149)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.30846115946769714
    2. '_' → logprob: -2.8084611892700195
    3. '_bits' → logprob: -3.0584611892700195
    4. '_run' → logprob: -3.0584611892700195
    5. '_option' → logprob: -3.4334611892700195
    6. 'target' → logprob: -4.0584611892700195
    7. 'def' → logprob: -4.3084611892700195
    8. '_bit' → logprob: -4.4334611892700195
    9. '_pos' → logprob: -5.3084611892700195
    10. '_t' → logprob: -5.3084611892700195

Token 185: ' start' (ID: 1604)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.4369843602180481
    2. '_target' → logprob: -1.6869843006134033
    3. 'bit' → logprob: -3.0619843006134033
    4. ' =' → logprob: -3.3119843006134033
    5. '=' → logprob: -4.436984539031982
    6. ':' → logprob: -4.436984539031982
    7. 'def' → logprob: -4.561984539031982
    8. ' target' → logprob: -4.561984539031982
    9. '_bit' → logprob: -4.686984539031982
    10. '_bits' → logprob: -5.561984539031982

Token 186: ' bit' (ID: 3546)
  Prédit: '_bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.167123481631279
    2. ' =' → logprob: -2.417123556137085
    3. '_with' → logprob: -3.667123556137085
    4. 'with' → logprob: -4.417123317718506
    5. '_val' → logprob: -5.042123317718506
    6. 'bit' → logprob: -5.167123317718506
    7. '=' → logprob: -5.542123317718506
    8. '_' → logprob: -5.667123317718506
    9. '_char' → logprob: -6.292123317718506
    10. ' with' → logprob: -6.542123317718506

Token 187: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09864389151334763
    2. '=' → logprob: -2.4736437797546387
    3. '_val' → logprob: -5.848643779754639
    4. 'val' → logprob: -6.098643779754639
    5. '_value' → logprob: -6.223643779754639
    6. 'value' → logprob: -7.223643779754639
    7. '_bit' → logprob: -7.723643779754639
    8. ',' → logprob: -7.973643779754639
    9. '0' → logprob: -8.223644256591797
    10. 's' → logprob: -8.348644256591797

Token 188: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09947879612445831
    2. 'start' → logprob: -2.9744787216186523
    3. ' ' → logprob: -3.9744787216186523
    4. ' start' → logprob: -4.599478721618652
    5. 'first' → logprob: -5.849478721618652
    6. ' first' → logprob: -6.474478721618652
    7. '   ' → logprob: -6.474478721618652
    8. 'bit' → logprob: -6.599478721618652
    9. 's' → logprob: -7.349478721618652
    10. 'possible' → logprob: -7.349478721618652

Token 189: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08658827096223831
    2. ' ' → logprob: -2.9615883827209473
    3. 'start' (adapté à ' start') → logprob: -4.586588382720947
    4. ' start' → logprob: -5.336588382720947
    5. ' first' → logprob: -5.711588382720947
    6. ' for' → logprob: -5.961588382720947
    7. 'first' → logprob: -6.211588382720947
    8. ' possible' → logprob: -6.461588382720947
    9. 'for' → logprob: -6.461588382720947
    10. 'possible' → logprob: -6.586588382720947

Token 190: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19490067660808563
    2. '=' → logprob: -1.944900631904602
    3. '0' → logprob: -3.5699007511138916
    4. '_' → logprob: -5.4449005126953125
    5. '_bit' → logprob: -6.9449005126953125
    6. 's' → logprob: -7.5699005126953125
    7. 'bit' → logprob: -10.319900512695312
    8. '1' → logprob: -10.569900512695312
    9. '_bits' → logprob: -11.069900512695312
    10. ',' → logprob: -11.194900512695312

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12706156075000763
    2. '=' → logprob: -2.127061605453491
    3. ',' → logprob: -9.00206184387207
    4. ' ' → logprob: -13.00206184387207
    5. '_bit' → logprob: -13.12706184387207
    6. 's' → logprob: -13.75206184387207
    7. '_bits' → logprob: -14.00206184387207
    8. '0' → logprob: -14.12706184387207
    9. 'bit' → logprob: -14.12706184387207
    10. '_' → logprob: -14.12706184387207

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002271343255415559
    2. ' ' → logprob: -6.1272711753845215
    3. '[' → logprob: -9.50227165222168
    4. ' [' → logprob: -11.62727165222168
    5. '   ' → logprob: -13.87727165222168
    6. '[]' → logprob: -14.81477165222168
    7. '[]
' → logprob: -15.25227165222168
    8. '[start' → logprob: -15.68977165222168
    9. '  ' → logprob: -15.93977165222168
    10. '(' → logprob: -16.75227165222168

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026574634830467403
    2. '[' → logprob: -8.625266075134277
    3. ' ' → logprob: -9.500266075134277
    4. '(' → logprob: -12.750266075134277
    5. 'runs' → logprob: -12.875266075134277
    6. '[]' → logprob: -13.625266075134277
    7. ' [' → logprob: -14.250266075134277
    8. '1' → logprob: -14.250266075134277
    9. '[]
' → logprob: -14.812766075134277
    10. 'run' → logprob: -14.875266075134277

Token 194: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013073991984128952
    2. '   ' → logprob: -4.513073921203613
    3. '    
' → logprob: -6.888073921203613
    4. ',' → logprob: -7.888073921203613
    5. 'start' → logprob: -8.888073921203613
    6. '
' → logprob: -9.513073921203613
    7. '#' → logprob: -9.763073921203613
    8. '

' → logprob: -10.013073921203613
    9. 'positions' → logprob: -10.513073921203613
    10. ' 
' → logprob: -10.763073921203613

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1664448380470276
    2. 'start' → logprob: -1.9164447784423828
    3. '
' → logprob: -5.541444778442383
    4. ' start' → logprob: -6.666444778442383
    5. '#' → logprob: -8.541444778442383
    6. '    
' → logprob: -8.916444778442383
    7. 'target' → logprob: -9.041444778442383
    8. 'runs' → logprob: -9.041444778442383
    9. 'def' → logprob: -9.541444778442383
    10. 'end' → logprob: -9.791444778442383

Token 196: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.06505358964204788
    2. '   ' → logprob: -4.565053462982178
    3. ' start' → logprob: -4.565053462982178
    4. 'pos' → logprob: -4.690053462982178
    5. '
' → logprob: -5.065053462982178
    6. 'positions' → logprob: -5.190053462982178
    7. '#' → logprob: -5.690053462982178
    8. 'def' → logprob: -5.940053462982178
    9. 'runs' → logprob: -6.065053462982178
    10. 'for' → logprob: -6.065053462982178

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.788087010383606
    2. '=' → logprob: -1.163087010383606
    3. ' =' → logprob: -1.538087010383606
    4. '0' → logprob: -4.163086891174316
    5. '_' → logprob: -6.663086891174316
    6. ' ' → logprob: -7.288086891174316
    7. '+' → logprob: -8.538086891174316
    8. ':' → logprob: -9.663086891174316
    9. '_=' → logprob: -10.538086891174316
    10. 's' → logprob: -10.663086891174316

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132617771625519
    2. '=' → logprob: -1.3132617473602295
    3. ' ' → logprob: -17.188261032104492
    4. '＝' → logprob: -18.313261032104492
    5. ',' → logprob: -18.938261032104492
    6. '=

' → logprob: -19.563261032104492
    7. '=}' → logprob: -19.938261032104492
    8. ' =
' → logprob: -20.063261032104492
    9. ' =)' → logprob: -20.063261032104492
    10. '=
' → logprob: -20.563261032104492

Token 199: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016480287013109773
    2. ' ' → logprob: -8.750164985656738
    3. '   ' → logprob: -12.125164985656738
    4. '(' → logprob: -15.000164985656738
    5. 'start' → logprob: -15.250164985656738
    6. ' (' → logprob: -16.250164031982422
    7. 'run' → logprob: -16.625164031982422
    8. '(start' → logprob: -16.875164031982422
    9. '  ' → logprob: -17.000164031982422
    10. 'runs' → logprob: -17.250164031982422

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003370118502061814
    2. ' ' → logprob: -8.000336647033691
    3. '(' → logprob: -14.250336647033691
    4. '   ' → logprob: -14.375336647033691
    5. ' (' → logprob: -16.125337600708008
    6. 'run' → logprob: -16.750337600708008
    7. 'start' → logprob: -17.125337600708008
    8. '(run' → logprob: -17.312837600708008
    9. '
' → logprob: -17.375337600708008
    10. '  ' → logprob: -17.687837600708008

Token 201: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42121052742004395
    2. '   ' → logprob: -1.171210527420044
    3. '    
' → logprob: -3.796210527420044
    4. 'def' → logprob: -4.921210289001465
    5. '<|end|>' → logprob: -6.796210289001465
    6. 'positions' → logprob: -6.921210289001465
    7. '

' → logprob: -7.546210289001465
    8. 'indices' → logprob: -8.171210289001465
    9. '
    
' → logprob: -8.796210289001465
    10. ' positions' → logprob: -9.046210289001465

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18165099620819092
    2. 'def' → logprob: -2.6816511154174805
    3. '
' → logprob: -2.8066511154174805
    4. '#' → logprob: -4.9316511154174805
    5. '    
' → logprob: -4.9316511154174805
    6. 'pos' → logprob: -5.0566511154174805
    7. 'positions' → logprob: -5.1816511154174805
    8. 'target' → logprob: -5.4316511154174805
    9. 'targets' → logprob: -6.1816511154174805
    10. 'possible' → logprob: -6.4316511154174805

Token 203: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5355342030525208
    2. 'positions' → logprob: -1.410534143447876
    3. 'def' → logprob: -2.410534143447876
    4. 'targets' → logprob: -3.160534143447876
    5. 'target' → logprob: -3.910534143447876
    6. '#' (adapté à ' #') → logprob: -4.660534381866455
    7. 'patterns' → logprob: -6.410534381866455
    8. 'poss' → logprob: -6.535534381866455
    9. 'pattern' → logprob: -6.785534381866455
    10. 'possible' → logprob: -6.910534381866455

Token 204: ' build' (ID: 3024)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9211775064468384
    2. 'def' → logprob: -1.0461775064468384
    3. 'positions' → logprob: -1.7961775064468384
    4. 'targets' → logprob: -3.046177387237549
    5. '#' → logprob: -4.046177387237549
    6. 'target' → logprob: -4.296177387237549
    7. 'poss' → logprob: -7.296177387237549
    8. 'possible' → logprob: -7.296177387237549
    9. 'for' → logprob: -7.421177387237549
    10. 'bit' → logprob: -7.921177387237549

Token 205: ' target' (ID: 3783)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23857825994491577
    2. 'targets' → logprob: -1.7385783195495605
    3. 'target' → logprob: -4.7385783195495605
    4. ' def' → logprob: -4.8635783195495605
    5. 'res' → logprob: -5.3635783195495605
    6. 'bit' → logprob: -5.4885783195495605
    7. 'positions' → logprob: -5.8635783195495605
    8. ' targets' → logprob: -6.7385783195495605
    9. 'possible' → logprob: -6.9885783195495605
    10. 'pos' → logprob: -6.9885783195495605

Token 206: ' bit' (ID: 3546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9517327547073364
    2. '_positions' → logprob: -0.9517327547073364
    3. 'positions' → logprob: -3.076732635498047
    4. ' =' → logprob: -3.076732635498047
    5. '_' → logprob: -3.326732635498047
    6. 's' → logprob: -3.451732635498047
    7. '_bits' → logprob: -3.826732635498047
    8. 'bits' → logprob: -4.701732635498047
    9. '_targets' → logprob: -4.951732635498047
    10. '_pos' → logprob: -4.951732635498047

Token 207: 'strings' (ID: 41195)
  Prédit: 'strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.014588640071451664
    2. 'string' → logprob: -4.264588832855225
    3. '_strings' → logprob: -7.889588832855225
    4. 's' → logprob: -10.139588356018066
    5. 'str' → logprob: -12.639588356018066
    6. 'arrays' → logprob: -12.764588356018066
    7. '_string' → logprob: -13.139588356018066
    8. ' =' → logprob: -13.764588356018066
    9. 'lists' → logprob: -14.514588356018066
    10. ' strings' → logprob: -15.014588356018066

Token 208: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0002869367599487
    2. 'target' → logprob: -1.3752869367599487
    3. 'targets' → logprob: -1.6252869367599487
    4. ' targets' → logprob: -3.1252870559692383
    5. ' target' → logprob: -3.3752870559692383
    6. '   ' → logprob: -3.6252870559692383
    7. 't' → logprob: -3.6252870559692383
    8. 'def' → logprob: -3.7502870559692383
    9. ' =' → logprob: -4.500287055969238
    10. '0' → logprob: -5.250287055969238

Token 209: '   ' (ID: 271)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.4524631202220917
    2. 'targets' → logprob: -1.202463150024414
    3. '
' → logprob: -3.702463150024414
    4. ' target' → logprob: -4.452463150024414
    5. 'def' → logprob: -4.452463150024414
    6. ' targets' → logprob: -4.827463150024414
    7. 't' → logprob: -5.327463150024414
    8. '   ' → logprob: -6.452463150024414
    9. 'for' → logprob: -7.827463150024414
    10. ' for' → logprob: -8.577463150024414

Token 210: ' def' (ID: 1056)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.4539977014064789
    2. 'targets' → logprob: -1.0789977312088013
    3. 'def' (adapté à ' def') → logprob: -3.8289976119995117
    4. ' target' → logprob: -6.703997611999512
    5. ' targets' → logprob: -6.828997611999512
    6. 't' → logprob: -7.453997611999512
    7. 'res' → logprob: -8.953997611999512
    8. ' def' → logprob: -9.078997611999512
    9. 'for' → logprob: -10.328997611999512
    10. 'result' → logprob: -10.828997611999512

Token 211: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.31331557035446167
    2. ' build' → logprob: -1.3133156299591064
    3. '_build' → logprob: -9.938315391540527
    4. 'construct' → logprob: -12.813315391540527
    5. 'generate' → logprob: -14.188315391540527
    6. ' construct' → logprob: -14.313315391540527
    7. '	build' → logprob: -14.688315391540527
    8. 'make' → logprob: -14.938315391540527
    9. ' generate' → logprob: -15.438315391540527
    10. '(build' → logprob: -16.188316345214844

Token 212: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.08997553586959839
    2. 'target' → logprob: -2.839975595474243
    3. '_bit' → logprob: -3.964975595474243
    4. '(target' → logprob: -5.589975357055664
    5. '_bits' → logprob: -6.464975357055664
    6. '_targets' → logprob: -6.964975357055664
    7. '(bits' → logprob: -7.714975357055664
    8. '(bit' → logprob: -7.839975357055664
    9. 'bit' → logprob: -8.089975357055664
    10. '_list' → logprob: -8.339975357055664

Token 213: '(start' (ID: 20008)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.2446337789297104
    2. '(start' → logprob: -2.494633674621582
    3. '(run' → logprob: -2.619633674621582
    4. '(bits' → logprob: -3.494633674621582
    5. '(length' → logprob: -4.369633674621582
    6. '(' → logprob: -4.369633674621582
    7. '(bit' → logprob: -6.369633674621582
    8. '():' → logprob: -6.369633674621582
    9. '(size' → logprob: -6.994633674621582
    10. '(len' → logprob: -8.369633674621582

Token 214: '_bit' (ID: 39574)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050737734884023666
    2. '):' → logprob: -3.0507376194000244
    3. ',start' → logprob: -7.0507378578186035
    4. '_bit' → logprob: -7.5507378578186035
    5. '):
' → logprob: -7.9257378578186035
    6. 'bit' → logprob: -9.050737380981445
    7. '_bits' → logprob: -9.675737380981445
    8. 'start' → logprob: -10.675737380981445
    9. ')' → logprob: -10.675737380981445
    10. '0' → logprob: -11.050737380981445

Token 215: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008540812879800797
    2. '):' → logprob: -4.883540630340576
    3. '):
' → logprob: -7.883540630340576
    4. ' ,' → logprob: -8.758541107177734
    5. '   ' → logprob: -9.133541107177734
    6. ',length' → logprob: -9.133541107177734
    7. ',n' → logprob: -9.633541107177734
    8. ',size' → logprob: -10.883541107177734
    9. ',r' → logprob: -11.008541107177734
    10. ',start' → logprob: -11.008541107177734

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01661628670990467
    2. '   ' → logprob: -4.141616344451904
    3. 'bits' → logprob: -8.891615867614746
    4. ':' → logprob: -9.141615867614746
    5. 'tokens' → logprob: -9.641615867614746
    6. '     ' → logprob: -9.766615867614746
    7. 'target' → logprob: -10.516615867614746
    8. '    ' → logprob: -10.516615867614746
    9. '	   ' → logprob: -10.766615867614746
    10. ',' → logprob: -10.891615867614746

Token 217: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29361075162887573
    2. 'res' (adapté à ' res') → logprob: -2.5436108112335205
    3. ' res' → logprob: -2.9186108112335205
    4. 'target' → logprob: -2.9186108112335205
    5. '       ' → logprob: -3.1686108112335205
    6. ' target' → logprob: -5.043610572814941
    7. 'pos' → logprob: -5.168610572814941
    8. 'result' → logprob: -5.293610572814941
    9. 'arr' → logprob: -6.668610572814941
    10. ' pos' → logprob: -6.793610572814941

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03412440046668053
    2. '=' → logprob: -3.4091243743896484
    3. '=[]' → logprob: -7.909124374389648
    4. ' ' → logprob: -9.784124374389648
    5. '=[]
' → logprob: -10.534124374389648
    6. ',' → logprob: -11.409124374389648
    7. '   ' → logprob: -12.409124374389648
    8. '[]' → logprob: -12.909124374389648
    9. ' =[' → logprob: -13.159124374389648
    10. '=[' → logprob: -13.409124374389648

Token 219: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.062074337154626846
    2. '[]
' → logprob: -2.8120744228363037
    3. '[' → logprob: -9.562074661254883
    4. ' []' → logprob: -10.312074661254883
    5. ' []
' → logprob: -13.187074661254883
    6. '[]

' → logprob: -13.937074661254883
    7. '[]}' → logprob: -16.312074661254883
    8. '[start' → logprob: -16.562074661254883
    9. '[int' → logprob: -17.062074661254883
    10. '[]"' → logprob: -17.312074661254883

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17028586566448212
    2. 'bit' → logprob: -2.295285940170288
    3. 'for' → logprob: -3.920285940170288
    4. 'current' → logprob: -4.170285701751709
    5. '   ' → logprob: -4.920285701751709
    6. ' bit' → logprob: -5.295285701751709
    7. ' for' → logprob: -5.420285701751709
    8. 'b' → logprob: -7.045285701751709
    9. ' current' → logprob: -7.045285701751709
    10. 'curr' → logprob: -7.045285701751709

Token 221: ' cur' (ID: 4396)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.888599693775177
    2. 'bit' → logprob: -0.888599693775177
    3. 'current' → logprob: -2.5135996341705322
    4. 'curr' → logprob: -2.8885996341705322
    5. 'cur' (adapté à ' cur') → logprob: -3.2635996341705322
    6. 'val' → logprob: -6.763599872589111
    7. 'b' → logprob: -7.388599872589111
    8. '   ' → logprob: -7.763599872589111
    9. 'c' → logprob: -8.763599395751953
    10. 'color' → logprob: -9.013599395751953

Token 222: ' =' (ID: 314)
  Prédit: '_bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.08381576836109161
    2. '=' → logprob: -2.958815813064575
    3. ' =' → logprob: -4.333815574645996
    4. 'bit' → logprob: -4.583815574645996
    5. 'ent' → logprob: -5.833815574645996
    6. '=_' → logprob: -6.708815574645996
    7. 't' → logprob: -7.708815574645996
    8. '_b' → logprob: -8.833815574645996
    9. '_val' → logprob: -9.458815574645996
    10. ' ' → logprob: -9.583815574645996

Token 223: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00033558503491804004
    2. ' start' → logprob: -8.000335693359375
    3. '[start' → logprob: -16.250335693359375
    4. ' ' → logprob: -17.875335693359375
    5. '   ' → logprob: -18.000335693359375
    6. '
' → logprob: -18.000335693359375
    7. '(start' → logprob: -18.250335693359375
    8. '=start' → logprob: -18.625335693359375
    9. '	start' → logprob: -19.000335693359375
    10. 'star' → logprob: -19.125335693359375

Token 224: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -3.225939872208983e-05
    2. 'bit' → logprob: -10.500032424926758
    3. '_bits' → logprob: -13.250032424926758
    4. '_' → logprob: -13.750032424926758
    5. '=' → logprob: -14.625032424926758
    6. '_b' → logprob: -15.125032424926758
    7. ' bit' → logprob: -15.125032424926758
    8. '_BIT' → logprob: -15.500032424926758
    9. '_byte' → logprob: -16.625032424926758
    10. 'start' → logprob: -17.125032424926758

Token 225: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06829918920993805
    2. '<|end|>' → logprob: -3.0682992935180664
    3. '<|end|>' → logprob: -4.693299293518066
    4. '       ' → logprob: -4.818299293518066
    5. ' for' → logprob: -7.443299293518066
    6. '   ' → logprob: -7.693299293518066
    7. 'for' → logprob: -7.943299293518066
    8. '
' → logprob: -8.818299293518066
    9. '  
' → logprob: -8.943299293518066
    10. '        
' → logprob: -9.068299293518066

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039175148122012615
    2. '   ' → logprob: -6.628917694091797
    3. ' for' → logprob: -7.003917694091797
    4. '<|end|>' → logprob: -7.253917694091797
    5. '
' → logprob: -8.003917694091797
    6. 'for' → logprob: -9.128917694091797
    7. '        
' → logprob: -9.128917694091797
    8. '  
' → logprob: -9.503917694091797
    9. '<|end|>' → logprob: -9.753917694091797
    10. ' ' → logprob: -10.128917694091797

Token 227: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00944674201309681
    2. ' for' → logprob: -4.884446620941162
    3. '       ' → logprob: -6.509446620941162
    4. '   ' → logprob: -8.00944709777832
    5. '	for' → logprob: -11.13444709777832
    6. '
' → logprob: -13.13444709777832
    7. ' ' → logprob: -14.50944709777832
    8. '```' → logprob: -16.25944709777832
    9. '  ' → logprob: -17.13444709777832
    10. '	   ' → logprob: -17.63444709777832

Token 228: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4346409738063812
    2. 'run' → logprob: -1.9346410036087036
    3. 'r' → logprob: -2.309640884399414
    4. ' length' → logprob: -2.684640884399414
    5. 'l' → logprob: -3.809640884399414
    6. ' run' → logprob: -4.184640884399414
    7. ' r' → logprob: -6.059640884399414
    8. ' l' → logprob: -8.184640884399414
    9. 'cnt' → logprob: -8.434640884399414
    10. 'count' → logprob: -9.684640884399414

Token 229: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28125131130218506
    2. 'in' → logprob: -1.406251311302185
    3. '	in' → logprob: -10.406250953674316
    4. '_in' → logprob: -10.531250953674316
    5. ')' → logprob: -11.281250953674316
    6. ' ' → logprob: -11.781250953674316
    7. ',' → logprob: -12.281250953674316
    8. 'In' → logprob: -12.656250953674316
    9. '   ' → logprob: -13.031250953674316
    10. 's' → logprob: -13.156250953674316

Token 230: ' runs' (ID: 13719)
  Prédit: 'runs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runs' → logprob: -0.0036087436601519585
    2. ' runs' → logprob: -5.628608703613281
    3. 'run' → logprob: -11.753608703613281
    4. 'ranges' → logprob: -14.878608703613281
    5. '_runs' → logprob: -15.878608703613281
    6. 'range' → logprob: -16.12860870361328
    7. ' ' → logprob: -16.37860870361328
    8. '
' → logprob: -16.62860870361328
    9. ' run' → logprob: -17.00360870361328
    10. 'length' → logprob: -17.25360870361328

Token 231: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007868755608797073
    2. ':
' → logprob: -5.132868766784668
    3. '):' → logprob: -6.382868766784668
    4. '):
' → logprob: -8.632868766784668
    5. ' :' → logprob: -10.757868766784668
    6. '       ' → logprob: -11.132868766784668
    7. ',' → logprob: -12.007868766784668
    8. '           ' → logprob: -12.132868766784668
    9. '=' → logprob: -12.632868766784668
    10. ')' → logprob: -12.632868766784668

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020652251318097115
    2. '       ' → logprob: -4.2706522941589355
    3. '
' → logprob: -5.6456522941589355
    4. ' for' → logprob: -6.3956522941589355
    5. 'for' → logprob: -8.020651817321777
    6. '            
' → logprob: -8.145651817321777
    7. ',' → logprob: -8.770651817321777
    8. '        
' → logprob: -8.895651817321777
    9. '```' → logprob: -9.770651817321777
    10. '[' → logprob: -10.145651817321777

Token 233: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.14539732038974762
    2. ' res' → logprob: -2.645397424697876
    3. '       ' → logprob: -2.770397424697876
    4. ' for' → logprob: -7.395397186279297
    5. 'for' → logprob: -7.520397186279297
    6. '           ' → logprob: -7.770397186279297
    7. '               ' → logprob: -9.520397186279297
    8. '   ' → logprob: -10.145397186279297
    9. '```' → logprob: -12.270397186279297
    10. '	res' → logprob: -12.520397186279297

Token 234: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.0005190743831917644
    2. '+=' → logprob: -8.000518798828125
    3. '.' → logprob: -9.000518798828125
    4. ' +=' → logprob: -10.125518798828125
    5. '   ' → logprob: -11.625518798828125
    6. 'extend' → logprob: -11.625518798828125
    7. '+' → logprob: -13.125518798828125
    8. '       ' → logprob: -16.500518798828125
    9. '+.' → logprob: -17.000518798828125
    10. 'extends' → logprob: -17.125518798828125

Token 235: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.06267264485359192
    2. '[cur' → logprob: -2.8126726150512695
    3. '[' → logprob: -7.6876726150512695
    4. '[current' → logprob: -9.56267261505127
    5. '[curr' → logprob: -9.81267261505127
    6. '[str' → logprob: -10.68767261505127
    7. '(cur' → logprob: -10.93767261505127
    8. ' [' → logprob: -11.18767261505127
    9. '[count' → logprob: -11.18767261505127
    10. '[int' → logprob: -11.18767261505127

Token 236: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -6.2729995988775045e-06
    2. ' cur' → logprob: -12.000006675720215
    3. '(cur' → logprob: -17.3750057220459
    4. '	cur' → logprob: -18.6250057220459
    5. '[cur' → logprob: -18.6250057220459
    6. '   ' → logprob: -18.7500057220459
    7. '.cur' → logprob: -19.8750057220459
    8. '
' → logprob: -21.0000057220459
    9. ' ' → logprob: -22.1250057220459
    10. '-cur' → logprob: -22.3750057220459

Token 237: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10020937025547028
    2. ']*' → logprob: -2.3502094745635986
    3. ' ]' → logprob: -13.10020923614502
    4. '   ' → logprob: -15.72520923614502
    5. ']*(' → logprob: -16.100210189819336
    6. '*' → logprob: -16.475210189819336
    7. ']+' → logprob: -16.975210189819336
    8. '])' → logprob: -16.975210189819336
    9. ']]' → logprob: -16.975210189819336
    10. '])*' → logprob: -17.100210189819336

Token 238: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -2.1888679839321412e-05
    2. ' length' → logprob: -10.750021934509277
    3. '(length' → logprob: -14.750021934509277
    4. '[length' → logprob: -20.00002098083496
    5. '	length' → logprob: -21.50002098083496
    6. 'ength' → logprob: -21.50002098083496
    7. ',length' → logprob: -21.87502098083496
    8. '_length' → logprob: -22.25002098083496
    9. 'Length' → logprob: -22.62502098083496
    10. ' ' → logprob: -23.37502098083496

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5048758387565613
    2. ')
' → logprob: -1.129875898361206
    3. '           ' → logprob: -2.629875898361206
    4. '       ' → logprob: -7.254875659942627
    5. '
' → logprob: -8.129876136779785
    6. ')
' → logprob: -8.754876136779785
    7. '<|end|>' → logprob: -11.004876136779785
    8. ',' → logprob: -11.379876136779785
    9. '<|end|>' → logprob: -11.504876136779785
    10. ' )' → logprob: -12.129876136779785

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14373649656772614
    2. '       ' → logprob: -2.0187366008758545
    3. ',' → logprob: -7.393736362457275
    4. '<|end|>' → logprob: -9.143736839294434
    5. '<|end|>' → logprob: -9.268736839294434
    6. '   ' → logprob: -9.393736839294434
    7. 'cur' → logprob: -10.393736839294434
    8. '
' → logprob: -10.518736839294434
    9. '	       ' → logprob: -10.643736839294434
    10. '               ' → logprob: -11.143736839294434

Token 241: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.00021760274830739945
    2. ' cur' → logprob: -9.00021743774414
    3. '       ' → logprob: -9.62521743774414
    4. '           ' → logprob: -10.62521743774414
    5. '   ' → logprob: -13.00021743774414
    6. '	cur' → logprob: -13.50021743774414
    7. '[cur' → logprob: -16.12521743774414
    8. '(cur' → logprob: -17.75021743774414
    9. '
' → logprob: -18.12521743774414
    10. '.cur' → logprob: -18.50021743774414

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05694258585572243
    2. ' ^=' → logprob: -3.3069427013397217
    3. '^' → logprob: -4.056942462921143
    4. ' =' → logprob: -6.556942462921143
    5. '.=' → logprob: -14.9319429397583
    6. ' ' → logprob: -15.3069429397583
    7. '=!' → logprob: -15.3069429397583
    8. '   ' → logprob: -15.5569429397583
    9. ' ' → logprob: -15.6819429397583
    10. '1' → logprob: -16.181941986083984

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019705044105648994
    2. ' ' → logprob: -6.376970291137695
    3. 'cur' → logprob: -8.251970291137695
    4. ' cur' → logprob: -12.001970291137695
    5. '   ' → logprob: -14.626970291137695
    6. '(cur' → logprob: -14.876970291137695
    7. '(' → logprob: -15.501970291137695
    8. '[cur' → logprob: -15.751970291137695
    9. '```' → logprob: -15.876970291137695
    10. '  ' → logprob: -16.501970291137695

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008378617349080741
    2. 'cur' → logprob: -7.125837802886963
    3. ' ' → logprob: -10.375838279724121
    4. '(' → logprob: -13.625838279724121
    5. '(cur' → logprob: -14.750838279724121
    6. ' cur' → logprob: -15.375838279724121
    7. '0' → logprob: -16.125837326049805
    8. '```' → logprob: -16.250837326049805
    9. '   ' → logprob: -16.625837326049805
    10. '[cur' → logprob: -16.625837326049805

Token 245: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012955739162862301
    2. ' -' → logprob: -4.512955665588379
    3. '-cur' → logprob: -6.262955665588379
    4. '^' → logprob: -15.637955665588379
    5. '-c' → logprob: -16.262956619262695
    6. 'cur' → logprob: -16.387956619262695
    7. ' ' → logprob: -17.387956619262695
    8. '  ' → logprob: -17.762956619262695
    9. '   ' → logprob: -17.762956619262695
    10. '-current' → logprob: -18.387956619262695

Token 246: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -6.2729995988775045e-06
    2. ' cur' → logprob: -12.000006675720215
    3. '	cur' → logprob: -18.7500057220459
    4. '[cur' → logprob: -19.1250057220459
    5. '(cur' → logprob: -19.7500057220459
    6. '-cur' → logprob: -21.3750057220459
    7. '.cur' → logprob: -22.5000057220459
    8. '   ' → logprob: -23.1250057220459
    9. '_cur' → logprob: -23.2500057220459
    10. ' ' → logprob: -23.3750057220459

Token 247: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.056030821055173874
    2. '       ' → logprob: -3.806030750274658
    3. '<|end|>' → logprob: -4.306030750274658
    4. 'return' → logprob: -5.056030750274658
    5. '    
' → logprob: -5.806030750274658
    6. ' return' → logprob: -6.056030750274658
    7. '  
' → logprob: -6.306030750274658
    8. '   ' → logprob: -6.431030750274658
    9. '<|end|>' → logprob: -6.681030750274658
    10. '        
' → logprob: -6.681030750274658

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004605161491781473
    2. '   ' → logprob: -5.504605293273926
    3. 'return' → logprob: -8.129605293273926
    4. ' return' → logprob: -8.629605293273926
    5. ',' → logprob: -10.629605293273926
    6. '
' → logprob: -12.004605293273926
    7. '           ' → logprob: -12.379605293273926
    8. '	return' → logprob: -12.504605293273926
    9. '<|end|>' → logprob: -12.629605293273926
    10. '      ' → logprob: -12.879605293273926

Token 249: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25504276156425476
    2. '   ' → logprob: -1.8800427913665771
    3. ' return' → logprob: -2.880042791366577
    4. 'return' (adapté à ' return') → logprob: -4.130042552947998
    5. '
' → logprob: -8.880043029785156
    6. '	return' → logprob: -10.005043029785156
    7. ' ' → logprob: -10.380043029785156
    8. ',' → logprob: -10.505043029785156
    9. '    ' → logprob: -11.380043029785156
    10. '     ' → logprob: -11.505043029785156

Token 250: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0010334034450352192
    2. ' res' → logprob: -6.876033306121826
    3. 'list' → logprob: -15.126033782958984
    4. '[' → logprob: -15.626033782958984
    5. '(res' → logprob: -16.126033782958984
    6. ' ' → logprob: -17.376033782958984
    7. '	res' → logprob: -17.501033782958984
    8. 'tuple' → logprob: -17.501033782958984
    9. 're' → logprob: -18.001033782958984
    10. '   ' → logprob: -18.126033782958984

Token 251: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07179435342550278
    2. '    
' → logprob: -3.321794271469116
    3. '<|end|>' → logprob: -3.946794271469116
    4. '   ' → logprob: -5.321794509887695
    5. '

' → logprob: -5.696794509887695
    6. '  
' → logprob: -6.196794509887695
    7. 'positions' → logprob: -6.571794509887695
    8. '
    
' → logprob: -7.696794509887695
    9. '   
' → logprob: -7.946794509887695
    10. '<|end|>' → logprob: -8.071794509887695

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4300549328327179
    2. 'target' → logprob: -1.8050549030303955
    3. 'bits' → logprob: -3.3050549030303955
    4. 'initial' → logprob: -3.4300549030303955
    5. '    
' → logprob: -3.4300549030303955
    6. '
' → logprob: -3.5550549030303955
    7. ' initial' → logprob: -3.8050549030303955
    8. ' target' → logprob: -4.180055141448975
    9. ' bits' → logprob: -4.805055141448975
    10. 'current' → logprob: -5.430055141448975

Token 253: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' (adapté à ' target') → logprob: -0.09229512512683868
    2. '   ' → logprob: -2.9672951698303223
    3. 'initial' → logprob: -3.9672951698303223
    4. 'bits' → logprob: -4.717295169830322
    5. 'current' → logprob: -5.467295169830322
    6. ' target' → logprob: -6.467295169830322
    7. 't' → logprob: -7.467295169830322
    8. 'bit' → logprob: -7.592295169830322
    9. 'original' → logprob: -7.842295169830322
    10. 'targets' → logprob: -7.967295169830322

Token 254: '0' (ID: 15)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9107475876808167
    2. ' =' → logprob: -1.2857475280761719
    3. '=' → logprob: -1.6607475280761719
    4. '0' → logprob: -2.035747528076172
    5. 's' → logprob: -7.535747528076172
    6. '_=' → logprob: -8.785747528076172
    7. '=_' → logprob: -10.535747528076172
    8. '_zero' → logprob: -11.535747528076172
    9. '_start' → logprob: -12.160747528076172
    10. '_targets' → logprob: -12.285747528076172

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. ')' → logprob: -17.203889846801758
    4. ',' → logprob: -17.453889846801758
    5. '_' → logprob: -17.828889846801758
    6. ' ' → logprob: -18.078889846801758
    7. ' =[' → logprob: -18.078889846801758
    8. '＝' → logprob: -18.953889846801758
    9. '[' → logprob: -19.203889846801758
    10. ' =
' → logprob: -19.453889846801758

Token 256: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.02975129522383213
    2. ' build' → logprob: -3.5297513008117676
    3. '   ' → logprob: -14.77975082397461
    4. '(build' → logprob: -16.02975082397461
    5. '	build' → logprob: -16.02975082397461
    6. ' ' → logprob: -16.40475082397461
    7. '[' → logprob: -18.15475082397461
    8. '.build' → logprob: -18.15475082397461
    9. '_build' → logprob: -18.40475082397461
    10. 'list' → logprob: -18.52975082397461

Token 257: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -7.517272024415433e-05
    2. 'target' → logprob: -9.500075340270996
    3. '(target' → logprob: -15.625075340270996
    4. '_' → logprob: -17.25007438659668
    5. '_targets' → logprob: -17.50007438659668
    6. '```' → logprob: -17.62507438659668
    7. '(_' → logprob: -18.00007438659668
    8. 'Target' → logprob: -18.12507438659668
    9. '(' → logprob: -18.50007438659668
    10. '_Target' → logprob: -18.87507438659668

Token 258: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.038068462163209915
    2. '(' → logprob: -3.2880685329437256
    3. 'start' → logprob: -10.913068771362305
    4. '(target' → logprob: -12.413068771362305
    5. ' (' → logprob: -12.663068771362305
    6. '(
' → logprob: -14.788068771362305
    7. '0' → logprob: -15.163068771362305
    8. '((' → logprob: -15.413068771362305
    9. '_start' → logprob: -15.663068771362305
    10. '(_' → logprob: -16.038068771362305

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018339496455155313
    2. '_bit' → logprob: -9.75018310546875
    3. ')' → logprob: -10.12518310546875
    4. 'bit' → logprob: -10.25018310546875
    5. '(' → logprob: -10.75018310546875
    6. '_' → logprob: -11.50018310546875
    7. '_bits' → logprob: -12.25018310546875
    8. ' ' → logprob: -13.00018310546875
    9. '(bit' → logprob: -13.25018310546875
    10. '1' → logprob: -13.62518310546875

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07891589403152466
    2. ')
' → logprob: -2.57891583442688
    3. ' )' → logprob: -11.7039155960083
    4. ')

' → logprob: -11.8289155960083
    5. ')
' → logprob: -11.9539155960083
    6. ' )
' → logprob: -12.5789155960083
    7. '   ' → logprob: -14.5789155960083
    8. ')#' → logprob: -16.578916549682617
    9. ' ' → logprob: -16.703916549682617
    10. '),' → logprob: -16.953916549682617

Token 261: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5881321430206299
    2. '   ' → logprob: -1.0881321430206299
    3. 'target' → logprob: -2.46313214302063
    4. ' target' → logprob: -3.83813214302063
    5. '    
' → logprob: -7.213131904602051
    6. ' 
' → logprob: -9.46313190460205
    7. '[target' → logprob: -9.58813190460205
    8. ',target' → logprob: -9.71313190460205
    9. '  
' → logprob: -10.08813190460205
    10. '	target' → logprob: -10.08813190460205

Token 262: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' (adapté à ' target') → logprob: -0.06875178962945938
    2. ' target' → logprob: -3.318751811981201
    3. '   ' → logprob: -3.568751811981201
    4. '
' → logprob: -6.193751811981201
    5. '	target' → logprob: -12.818751335144043
    6. '[target' → logprob: -13.068751335144043
    7. ',target' → logprob: -13.068751335144043
    8. '    
' → logprob: -13.318751335144043
    9. '(target' → logprob: -14.318751335144043
    10. ' 
' → logprob: -14.818751335144043

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.000000953674316
    3. ' ' → logprob: -16.750001907348633
    4. '=' → logprob: -17.000001907348633
    5. ' =' → logprob: -17.125001907348633
    6. '```' → logprob: -17.625001907348633
    7. ',' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '0' → logprob: -18.250001907348633
    10. ')' → logprob: -19.750001907348633

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. ')' → logprob: -16.438261032104492
    4. ' ' → logprob: -17.563261032104492
    5. '.' → logprob: -18.813261032104492
    6. '＝' → logprob: -18.938261032104492
    7. ',' → logprob: -19.313261032104492
    8. '.=' → logprob: -19.313261032104492
    9. '=}' → logprob: -19.313261032104492
    10. '_' → logprob: -19.563261032104492

Token 265: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.011048054322600365
    2. ' build' → logprob: -4.511047840118408
    3. '(build' → logprob: -16.26104736328125
    4. '	build' → logprob: -16.51104736328125
    5. '.build' → logprob: -18.63604736328125
    6. ' ' → logprob: -18.88604736328125
    7. '   ' → logprob: -18.88604736328125
    8. 'b' → logprob: -19.51104736328125
    9. 'built' → logprob: -20.26104736328125
    10. 'building' → logprob: -20.51104736328125

Token 266: '_target' (ID: 24705)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.3871447443962097
    2. '_target' → logprob: -1.1371448040008545
    3. '1' → logprob: -8.637145042419434
    4. '(target' → logprob: -10.262145042419434
    5. 'bit' → logprob: -10.762145042419434
    6. '_bit' → logprob: -11.012145042419434
    7. '0' → logprob: -11.637145042419434
    8. '(' → logprob: -11.762145042419434
    9. 'arget' → logprob: -13.012145042419434
    10. ' target' → logprob: -13.137145042419434

Token 267: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00022046364028938115
    2. '(' → logprob: -8.50022029876709
    3. 'start' → logprob: -11.00022029876709
    4. ' (' → logprob: -16.250221252441406
    5. '[start' → logprob: -16.375221252441406
    6. '(
' → logprob: -17.500221252441406
    7. '(st' → logprob: -18.375221252441406
    8. '=start' → logprob: -18.500221252441406
    9. '```' → logprob: -18.625221252441406
    10. '(target' → logprob: -18.625221252441406

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ')' → logprob: -17.0
    3. 'start' → logprob: -18.5
    4. '```' → logprob: -18.875
    5. '<|end|>' → logprob: -19.0
    6. ' ' → logprob: -19.375
    7. '(' → logprob: -19.6875
    8. 'from' → logprob: -19.75
    9. '۱' → logprob: -19.875
    10. '১' → logprob: -20.25

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -14.250001907348633
    3. ')
' → logprob: -14.375001907348633
    4. '   ' → logprob: -14.750001907348633
    5. ')

' → logprob: -16.875001907348633
    6. ')`' → logprob: -17.000001907348633
    7. ')
' → logprob: -18.625001907348633
    8. '()' → logprob: -18.750001907348633
    9. '))' → logprob: -19.000001907348633
    10. ' ' → logprob: -19.750001907348633

Token 270: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11995552480220795
    2. '
' → logprob: -2.369955539703369
    3. '    
' → logprob: -3.994955539703369
    4. 'initial' → logprob: -7.369955539703369
    5. '#' → logprob: -9.244955062866211
    6. ' initial' → logprob: -9.494955062866211
    7. '```' → logprob: -9.494955062866211
    8. '   
' → logprob: -9.619955062866211
    9. 'positions' → logprob: -9.994955062866211
    10. '  
' → logprob: -10.744955062866211

Token 271: '   ' (ID: 271)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.7853939533233643
    2. '   ' → logprob: -1.4103939533233643
    3. 'bits' → logprob: -2.2853939533233643
    4. 'positions' → logprob: -2.4103939533233643
    5. 'pos' → logprob: -3.0353939533233643
    6. '#' → logprob: -3.4103939533233643
    7. 'ones' → logprob: -3.7853939533233643
    8. 'def' → logprob: -6.785393714904785
    9. 'current' → logprob: -7.035393714904785
    10. 'bit' → logprob: -7.160393714904785

Token 272: ' #' (ID: 1069)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.3956782817840576
    2. 'pos' → logprob: -1.7706782817840576
    3. 'ones' → logprob: -3.0206782817840576
    4. 'positions' → logprob: -3.0206782817840576
    5. 'bits' → logprob: -3.6456782817840576
    6. '#' (adapté à ' #') → logprob: -3.6456782817840576
    7. 'def' → logprob: -6.395678520202637
    8. 'init' → logprob: -6.520678520202637
    9. 'bit' → logprob: -7.520678520202637
    10. 'original' → logprob: -7.520678520202637

Token 273: ' We' (ID: 1416)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.8603046536445618
    2. 'pos' → logprob: -1.735304594039917
    3. 'ones' → logprob: -1.735304594039917
    4. '#' → logprob: -2.235304594039917
    5. 'positions' → logprob: -2.860304594039917
    6. 'bits' → logprob: -3.110304594039917
    7. 'one' → logprob: -5.485304832458496
    8. '   ' → logprob: -5.610304832458496
    9. 'def' → logprob: -5.985304832458496
    10. 'init' → logprob: -6.610304832458496

Token 274: ' want' (ID: 1682)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1458336114883423
    2. 'need' → logprob: -1.3958336114883423
    3. 'have' → logprob: -1.8958336114883423
    4. '   ' → logprob: -2.7708334922790527
    5. ' need' → logprob: -3.0208334922790527
    6. 'initial' → logprob: -3.0208334922790527
    7. ' have' → logprob: -4.020833492279053
    8. 'def' → logprob: -4.020833492279053
    9. ' want' → logprob: -4.270833492279053
    10. ' #' → logprob: -4.520833492279053

Token 275: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.45311352610588074
    2. ' to' → logprob: -1.4531135559082031
    3. '   ' → logprob: -2.078113555908203
    4. 'def' → logprob: -5.578113555908203
    5. 'positions' → logprob: -7.453113555908203
    6. '  ' → logprob: -8.453113555908203
    7. 'bits' → logprob: -8.578113555908203
    8. 'initial' → logprob: -9.078113555908203
    9. '
' → logprob: -9.828113555908203
    10. 'target' → logprob: -9.953113555908203

Token 276: ' reorder' (ID: 167322)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.504302978515625
    2. ' find' → logprob: -2.004302978515625
    3. 'min' → logprob: -2.629302978515625
    4. 'compare' → logprob: -3.004302978515625
    5. 'try' → logprob: -3.629302978515625
    6. 'compute' → logprob: -3.629302978515625
    7. 'calculate' → logprob: -4.004302978515625
    8. 'count' → logprob: -4.129302978515625
    9. 'get' → logprob: -4.379302978515625
    10. ' minimize' → logprob: -4.629302978515625

Token 277: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.6609999537467957
    2. 'initial' → logprob: -1.7860000133514404
    3. ' bits' → logprob: -2.0360000133514404
    4. ' the' → logprob: -2.9110000133514404
    5. ' initial' → logprob: -2.9110000133514404
    6. 'the' → logprob: -3.4110000133514404
    7. 'positions' → logprob: -3.9110000133514404
    8. ' positions' → logprob: -5.160999774932861
    9. ' ones' → logprob: -5.910999774932861
    10. '#' → logprob: -6.160999774932861

Token 278: ' (' (ID: 350)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.962809681892395
    2. '0' → logprob: -1.962809681892395
    3. ' to' → logprob: -2.2128095626831055
    4. 'positions' → logprob: -2.8378095626831055
    5. ' positions' → logprob: -2.9628095626831055
    6. ' of' → logprob: -3.3378095626831055
    7. '_' → logprob: -3.4628095626831055
    8. '_pos' → logprob: -3.4628095626831055
    9. '   ' → logprob: -3.5878095626831055
    10. '1' → logprob: -3.5878095626831055

Token 279: 'initial' (ID: 17493)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.6177104115486145
    2. 'positions' → logprob: -2.1177103519439697
    3. ')' → logprob: -2.6177103519439697
    4. ' bits' → logprob: -2.7427103519439697
    5. '1' → logprob: -3.2427103519439697
    6. 'initial' → logprob: -3.8677103519439697
    7. ''' → logprob: -4.117710590362549
    8. '[' → logprob: -4.117710590362549
    9. ' where' → logprob: -4.492710590362549
    10. ' positions' → logprob: -4.492710590362549

Token 280: ')' (ID: 8)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.695216715335846
    2. '_positions' → logprob: -1.8202166557312012
    3. ' positions' → logprob: -1.9452166557312012
    4. ')' → logprob: -2.195216655731201
    5. '==' → logprob: -3.570216655731201
    6. '_' → logprob: -4.195216655731201
    7. ' ==' → logprob: -5.070216655731201
    8. '1' → logprob: -5.695216655731201
    9. '   ' → logprob: -5.820216655731201
    10. 'indices' → logprob: -5.945216655731201

Token 281: ' to' (ID: 316)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.3502898216247559
    2. ' to' → logprob: -1.4752898216247559
    3. '   ' → logprob: -1.7252898216247559
    4. '_positions' → logprob: -2.225289821624756
    5. ' positions' → logprob: -2.350289821624756
    6. ' of' → logprob: -4.100289821624756
    7. '1' → logprob: -4.600289821624756
    8. ' by' → logprob: -4.600289821624756
    9. '#' → logprob: -4.725289821624756
    10. '0' → logprob: -4.850289821624756

Token 282: ' one' (ID: 1001)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.5423201322555542
    2. ' match' → logprob: -1.7923201322555542
    3. 'bits' → logprob: -2.0423202514648438
    4. 'target' → logprob: -2.5423202514648438
    5. ' bits' → logprob: -3.5423202514648438
    6. ' target' → logprob: -5.792320251464844
    7. 'positions' → logprob: -6.042320251464844
    8. 'matches' → logprob: -6.667320251464844
    9. 'min' → logprob: -6.792320251464844
    10. 'either' → logprob: -6.917320251464844

Token 283: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6961379051208496
    2. 'of' → logprob: -0.6961379051208496
    3. '   ' → logprob: -6.57113790512085
    4. ' or' → logprob: -6.82113790512085
    5. 'or' → logprob: -7.82113790512085
    6. '#' → logprob: -10.446138381958008
    7. ' ' → logprob: -11.571138381958008
    8. 'target' → logprob: -11.571138381958008
    9. '=' → logprob: -11.821138381958008
    10. ' that' → logprob: -12.071138381958008

Token 284: ' these' (ID: 1879)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.06497049331665039
    2. 'target' → logprob: -3.3149704933166504
    3. ' the' → logprob: -4.06497049331665
    4. '[target' → logprob: -5.31497049331665
    5. 'these' → logprob: -6.06497049331665
    6. ' target' → logprob: -7.68997049331665
    7. 'two' → logprob: -7.81497049331665
    8. ' these' → logprob: -7.81497049331665
    9. 'targets' → logprob: -8.439970016479492
    10. '[' → logprob: -8.689970016479492

Token 285: ' targets' (ID: 22836)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.0657213926315308
    2. 'targets' → logprob: -1.1907213926315308
    3. 'positions' → logprob: -1.5657213926315308
    4. 'bit' → logprob: -3.8157215118408203
    5. 'strings' → logprob: -4.19072151184082
    6. '   ' → logprob: -4.56572151184082
    7. ' bit' → logprob: -4.69072151184082
    8. '
' → logprob: -5.06572151184082
    9. 'possible' → logprob: -5.06572151184082
    10. ' and' → logprob: -5.19072151184082

Token 286: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7075905799865723
    2. '   ' → logprob: -0.7075905799865723
    3. '    
' → logprob: -4.457590579986572
    4. 'def' → logprob: -7.582590579986572
    5. '   
' → logprob: -7.832590579986572
    6. 'positions' → logprob: -8.082590103149414
    7. 'initial' → logprob: -8.082590103149414
    8. ',' → logprob: -8.207590103149414
    9. '  
' → logprob: -8.582590103149414
    10. 'indices' → logprob: -9.332590103149414

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16657523810863495
    2. '
' → logprob: -1.9165751934051514
    3. '    
' → logprob: -5.1665754318237305
    4. '   
' → logprob: -9.04157543182373
    5. '  
' → logprob: -9.04157543182373
    6. 'initial' → logprob: -9.41657543182373
    7. 'def' → logprob: -9.91657543182373
    8. ',' → logprob: -10.04157543182373
    9. 'positions' → logprob: -10.29157543182373
    10. '    ' → logprob: -10.41657543182373

Token 288: ' #' (ID: 1069)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -1.1141525506973267
    2. '
' → logprob: -1.2391525506973267
    3. '   ' → logprob: -1.7391525506973267
    4. 'initial' → logprob: -1.9891525506973267
    5. '    
' → logprob: -3.239152431488037
    6. ' positions' → logprob: -4.989152431488037
    7. 'def' → logprob: -5.489152431488037
    8. 'positions' → logprob: -5.614152431488037
    9. ' def' → logprob: -5.989152431488037
    10. '#' (adapté à ' #') → logprob: -6.114152431488037

Token 289: ' They' (ID: 3164)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.6666040420532227
    2. '   ' → logprob: -1.1666040420532227
    3. 'ones' → logprob: -2.9166040420532227
    4. '#' → logprob: -2.9166040420532227
    5. 'def' → logprob: -4.166604042053223
    6. 'one' → logprob: -4.291604042053223
    7. 'bits' → logprob: -4.666604042053223
    8. 'pos' → logprob: -4.666604042053223
    9. 'positions' → logprob: -4.666604042053223
    10. '
' → logprob: -5.416604042053223

Token 290: ' have' (ID: 679)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.0579533576965332
    2. ' are' → logprob: -1.8079533576965332
    3. '_bits' → logprob: -2.182953357696533
    4. ' have' → logprob: -2.932953357696533
    5. ' =' → logprob: -3.182953357696533
    6. 'have' → logprob: -3.182953357696533
    7. 'positions' → logprob: -3.432953357696533
    8. 'are' → logprob: -3.682953357696533
    9. '_pos' → logprob: -3.932953357696533
    10. 'bits' → logprob: -3.932953357696533

Token 291: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4981570243835449
    2. ' the' → logprob: -1.998157024383545
    3. 'same' → logprob: -2.248157024383545
    4. 'to' → logprob: -3.498157024383545
    5. 'different' → logprob: -3.998157024383545
    6. 'equal' → logprob: -4.123157024383545
    7. 'exact' → logprob: -4.373157024383545
    8. ' same' → logprob: -4.498157024383545
    9. ' to' → logprob: -4.623157024383545
    10. '1' → logprob: -4.873157024383545

Token 292: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.11540000140666962
    2. ' same' → logprob: -2.2404000759124756
    3. 'positions' → logprob: -6.6153998374938965
    4. ' positions' → logprob: -6.9903998374938965
    5. '#' → logprob: -8.865400314331055
    6. '1' → logprob: -9.865400314331055
    7. 's' → logprob: -9.990400314331055
    8. 'indices' → logprob: -11.115400314331055
    9. ' ' → logprob: -11.990400314331055
    10. 'next' → logprob: -12.115400314331055

Token 293: ' run' (ID: 2461)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.20613285899162292
    2. 'length' → logprob: -2.5811328887939453
    3. 'positions' → logprob: -3.2061328887939453
    4. ' number' → logprob: -3.4561328887939453
    5. 'count' → logprob: -3.7061328887939453
    6. 'amount' → logprob: -5.831132888793945
    7. ' positions' → logprob: -6.331132888793945
    8. ' length' → logprob: -6.456132888793945
    9. 'indices' → logprob: -6.456132888793945
    10. 'counts' → logprob: -6.581132888793945

Token 294: '-length' (ID: 53970)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5451124906539917
    2. 's' → logprob: -2.2951126098632812
    3. '   ' → logprob: -2.6701126098632812
    4. 'positions' → logprob: -3.0451126098632812
    5. 'bits' → logprob: -3.0451126098632812
    6. ' lengths' → logprob: -3.2951126098632812
    7. '0' → logprob: -3.2951126098632812
    8. ' positions' → logprob: -4.170112609863281
    9. ' length' → logprob: -4.670112609863281
    10. '-length' → logprob: -4.920112609863281

Token 295: ' code' (ID: 3490)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2292044162750244
    2. 'positions' → logprob: -1.7292044162750244
    3. ' positions' → logprob: -1.8542044162750244
    4. 's' → logprob: -1.9792044162750244
    5. '
' → logprob: -2.4792044162750244
    6. ' initial' → logprob: -3.1042044162750244
    7. 'initial' → logprob: -3.8542044162750244
    8. '    
' → logprob: -3.9792044162750244
    9. '#' → logprob: -4.604204177856445
    10. ' ones' → logprob: -4.604204177856445

Token 296: ' but' (ID: 889)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6716392636299133
    2. '   ' → logprob: -0.9216392636299133
    3. '    
' → logprob: -2.4216392040252686
    4. 'initial' → logprob: -6.921639442443848
    5. '   
' → logprob: -8.296639442443848
    6. ' initial' → logprob: -8.421639442443848
    7. 'positions' → logprob: -8.671639442443848
    8. '  
' → logprob: -8.796639442443848
    9. '```' → logprob: -9.046639442443848
    10. '#' → logprob: -9.171639442443848

Token 297: ' different' (ID: 2647)
  Prédit: ' different'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' different' → logprob: -1.4030200242996216
    2. 'different' → logprob: -1.4030200242996216
    3. '#' → logprob: -1.6530200242996216
    4. 'bits' → logprob: -2.528019905090332
    5. ' may' → logprob: -3.028019905090332
    6. ' the' → logprob: -3.278019905090332
    7. ' differ' → logprob: -3.528019905090332
    8. 'the' → logprob: -3.903019905090332
    9. ' bits' → logprob: -4.153019905090332
    10. ' #' → logprob: -4.653019905090332

Token 298: ' start' (ID: 1604)
  Prédit: ' starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' starting' → logprob: -1.129366397857666
    2. 'starting' → logprob: -1.504366397857666
    3. 'par' → logprob: -2.004366397857666
    4. ' parity' → logprob: -2.379366397857666
    5. ' patterns' → logprob: -3.129366397857666
    6. 'start' → logprob: -3.254366397857666
    7. 'patterns' → logprob: -3.504366397857666
    8. ' first' → logprob: -3.879366397857666
    9. ' start' → logprob: -4.004366397857666
    10. 'first' → logprob: -4.254366397857666

Token 299: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15016292035579681
    2. '
' → logprob: -2.650162935256958
    3. '    
' → logprob: -3.650162935256958
    4. 'positions' → logprob: -4.150162696838379
    5. ' positions' → logprob: -4.400162696838379
    6. 'bits' → logprob: -6.025162696838379
    7. '_positions' → logprob: -6.150162696838379
    8. '#' → logprob: -6.275162696838379
    9. ' initial' → logprob: -6.650162696838379
    10. '   
' → logprob: -6.775162696838379

Token 300: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5262908339500427
    2. '
' → logprob: -1.0262908935546875
    3. '    
' → logprob: -3.0262908935546875
    4. 'initial' → logprob: -6.5262908935546875
    5. 'def' → logprob: -8.401290893554688
    6. '   
' → logprob: -8.776290893554688
    7. '  
' → logprob: -9.151290893554688
    8. '#' → logprob: -9.401290893554688
    9. ' initial' → logprob: -9.526290893554688
    10. 'positions' → logprob: -10.151290893554688

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1873399019241333
    2. '
' → logprob: -1.9373399019241333
    3. 'initial' → logprob: -4.187339782714844
    4. '    
' → logprob: -4.562339782714844
    5. ' initial' → logprob: -8.687339782714844
    6. 'positions' → logprob: -8.687339782714844
    7. '```' → logprob: -8.812339782714844
    8. '  
' → logprob: -9.062339782714844
    9. 'def' → logprob: -9.062339782714844
    10. '   
' → logprob: -9.187339782714844

Token 302: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40029197931289673
    2. 'initial' → logprob: -1.150291919708252
    3. '
' → logprob: -5.150291919708252
    4. '    
' → logprob: -5.900291919708252
    5. 'bits' → logprob: -6.525291919708252
    6. '#' (adapté à ' #') → logprob: -6.900291919708252
    7. 'ones' → logprob: -7.275291919708252
    8. 'positions' → logprob: -7.400291919708252
    9. 'def' → logprob: -7.650291919708252
    10. ' initial' → logprob: -8.40029239654541

Token 303: ' The' (ID: 623)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.3861629068851471
    2. '   ' → logprob: -1.5111628770828247
    3. 'ones' → logprob: -3.2611629962921143
    4. 'pos' → logprob: -4.261162757873535
    5. 'bits' → logprob: -4.261162757873535
    6. 'positions' → logprob: -4.636162757873535
    7. '#' → logprob: -4.761162757873535
    8. 'def' → logprob: -5.136162757873535
    9. 'one' → logprob: -5.886162757873535
    10. '
' → logprob: -6.011162757873535

Token 304: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5442917346954346
    2. 'initial' → logprob: -1.4192917346954346
    3. 'bits' → logprob: -2.7942917346954346
    4. ' initial' → logprob: -3.0442917346954346
    5. 'def' → logprob: -3.4192917346954346
    6. ' #' → logprob: -4.5442914962768555
    7. ' bits' → logprob: -5.6692914962768555
    8. 'positions' → logprob: -5.6692914962768555
    9. 'ones' → logprob: -5.7942914962768555
    10. 'one' → logprob: -6.0442914962768555

Token 305: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.23148557543754578
    2. 'is' → logprob: -2.231485605239868
    3. ' now' → logprob: -3.356485605239868
    4. ':' → logprob: -3.856485605239868
    5. '#' → logprob: -4.106485366821289
    6. ' requires' → logprob: -4.481485366821289
    7. 'requires' → logprob: -6.106485366821289
    8. ' remains' → logprob: -6.231485366821289
    9. ' was' → logprob: -6.606485366821289
    10. ' wants' → logprob: -6.606485366821289

Token 306: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.8850664496421814
    2. '   ' → logprob: -1.2600665092468262
    3. '#' → logprob: -2.135066509246826
    4. 'that' → logprob: -2.385066509246826
    5. ':' → logprob: -3.885066509246826
    6. ' to' → logprob: -3.885066509246826
    7. 'the' → logprob: -4.760066509246826
    8. ' the' → logprob: -4.760066509246826
    9. 'bits' → logprob: -5.135066509246826
    10. 'def' → logprob: -5.260066509246826

Token 307: ' initial' (ID: 4871)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.7333056330680847
    2. '#' → logprob: -1.6083056926727295
    3. 'the' → logprob: -2.2333056926727295
    4. ' the' → logprob: -3.2333056926727295
    5. 'initial' → logprob: -3.4833056926727295
    6. ' bits' → logprob: -3.7333056926727295
    7. 'we' → logprob: -3.8583056926727295
    8. '   ' → logprob: -4.10830545425415
    9. ' we' → logprob: -4.23330545425415
    10. 'if' → logprob: -4.48330545425415

Token 308: ' can' (ID: 665)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.5674383044242859
    2. ' bits' → logprob: -1.3174383640289307
    3. '_bits' → logprob: -2.8174383640289307
    4. ' can' → logprob: -4.192438125610352
    5. 'positions' → logprob: -4.317438125610352
    6. ' bit' → logprob: -4.317438125610352
    7. 'bit' → logprob: -4.817438125610352
    8. 'and' → logprob: -4.942438125610352
    9. 'can' → logprob: -4.942438125610352
    10. ' and' → logprob: -5.192438125610352

Token 309: ' become' (ID: 5025)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.35477215051651
    2. ' be' → logprob: -1.2297720909118652
    3. 'only' → logprob: -5.979772090911865
    4. ' only' → logprob: -6.729772090911865
    5. 'always' → logprob: -7.104772090911865
    6. 'have' → logprob: -7.479772090911865
    7. ' always' → logprob: -7.979772090911865
    8. ' have' → logprob: -8.854772567749023
    9. 'change' → logprob: -8.979772567749023
    10. '   ' → logprob: -9.354772567749023

Token 310: ' either' (ID: 4784)
  Prédit: 'either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'either' → logprob: -0.8356299996376038
    2. ' either' → logprob: -1.210629940032959
    3. 'target' → logprob: -1.460629940032959
    4. ' target' → logprob: -3.960629940032959
    5. 'any' → logprob: -5.585629940032959
    6. 'both' → logprob: -5.960629940032959
    7. ' any' → logprob: -6.085629940032959
    8. 'one' → logprob: -6.210629940032959
    9. 'the' → logprob: -6.335629940032959
    10. ' one' → logprob: -6.585629940032959

Token 311: ' target' (ID: 3783)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1183611154556274
    2. ' of' → logprob: -1.3683611154556274
    3. ' by' → logprob: -2.368360996246338
    4. 'target' → logprob: -2.618360996246338
    5. '
' → logprob: -3.118360996246338
    6. ' bit' → logprob: -3.493360996246338
    7. ' target' → logprob: -3.493360996246338
    8. ' or' → logprob: -3.618360996246338
    9. ',' → logprob: -4.118360996246338
    10. '#' → logprob: -4.368360996246338

Token 312: '0' (ID: 15)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07336271554231644
    2. '   ' → logprob: -3.1983628273010254
    3. '    
' → logprob: -3.5733628273010254
    4. '   
' → logprob: -7.823362827301025
    5. '```' → logprob: -8.073362350463867
    6. '  
' → logprob: -8.323362350463867
    7. 'initial' → logprob: -8.823362350463867
    8. 'positions' → logprob: -9.198362350463867
    9. '

' → logprob: -9.323362350463867
    10. '
    
' → logprob: -9.573362350463867

Token 313: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00783634651452303
    2. 'or' → logprob: -4.88283634185791
    3. ',' → logprob: -8.50783634185791
    4. '   ' → logprob: -11.63283634185791
    5. ' ' → logprob: -12.13283634185791
    6. '.' → logprob: -12.38283634185791
    7. '#' → logprob: -13.38283634185791
    8. '```' → logprob: -13.38283634185791
    9. '	or' → logprob: -13.63283634185791
    10. '<|end|>' → logprob: -13.75783634185791

Token 314: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.029756972566246986
    2. ' target' → logprob: -3.529757022857666
    3. '   ' → logprob: -12.029756546020508
    4. '
' → logprob: -16.029756546020508
    5. '	target' → logprob: -16.029756546020508
    6. ' ' → logprob: -16.154756546020508
    7. '(target' → logprob: -16.529756546020508
    8. ' ' → logprob: -17.279756546020508
    9. '[target' → logprob: -17.404756546020508
    10. '  ' → logprob: -17.904756546020508

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '```' → logprob: -15.750000953674316
    5. '_' → logprob: -17.125001907348633
    6. '0' → logprob: -17.250001907348633
    7. ',' → logprob: -17.937501907348633
    8. '１' → logprob: -18.562501907348633
    9. '`' → logprob: -18.750001907348633
    10. '۱' → logprob: -19.062501907348633

Token 316: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19759893417358398
    2. '   ' → logprob: -1.947598934173584
    3. '    
' → logprob: -3.322598934173584
    4. 'initial' → logprob: -8.947599411010742
    5. '   
' → logprob: -9.072599411010742
    6. '  
' → logprob: -9.072599411010742
    7. '

' → logprob: -9.697599411010742
    8. '#' → logprob: -10.322599411010742
    9. 'def' → logprob: -10.322599411010742
    10. '
    
' → logprob: -10.572599411010742

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08296207338571548
    2. '#' → logprob: -3.0829620361328125
    3. ' so' → logprob: -3.9579620361328125
    4. ' but' → logprob: -4.5829620361328125
    5. 'but' → logprob: -6.0829620361328125
    6. ' and' → logprob: -7.3329620361328125
    7. 'so' → logprob: -7.4579620361328125
    8. 'and' → logprob: -7.5829620361328125
    9. ' #' → logprob: -8.707962036132812
    10. ' continue' → logprob: -9.832962036132812

Token 318: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22092469036579132
    2. '#' (adapté à ' #') → logprob: -1.720924735069275
    3. ' but' → logprob: -4.7209248542785645
    4. ' so' → logprob: -4.8459248542785645
    5. 'but' → logprob: -6.7209248542785645
    6. ' #' → logprob: -7.7209248542785645
    7. ' and' → logprob: -7.9709248542785645
    8. 'so' → logprob: -8.470924377441406
    9. 'and' → logprob: -8.720924377441406
    10. 'def' → logprob: -10.345924377441406

Token 319: ' possibly' (ID: 14836)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5615357756614685
    2. '#' → logprob: -0.9365357756614685
    3. '
' → logprob: -3.5615358352661133
    4. 'initial' → logprob: -5.061535835266113
    5. '    
' → logprob: -6.061535835266113
    6. ' #' → logprob: -8.811535835266113
    7. ' initial' → logprob: -9.436535835266113
    8. '  
' → logprob: -9.436535835266113
    9. 'if' → logprob: -9.936535835266113
    10. '  ' → logprob: -10.061535835266113

Token 320: ' only' (ID: 1606)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.712675929069519
    2. 'by' → logprob: -1.462675929069519
    3. 'after' → logprob: -2.7126760482788086
    4. ' by' → logprob: -2.9626760482788086
    5. ' with' → logprob: -3.0876760482788086
    6. 'requ' → logprob: -3.3376760482788086
    7. '   ' → logprob: -3.3376760482788086
    8. '#' → logprob: -4.087676048278809
    9. ' after' → logprob: -5.212676048278809
    10. 'sw' → logprob: -5.462676048278809

Token 321: ' one' (ID: 1001)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.9557345509529114
    2. 'with' → logprob: -1.2057344913482666
    3. ' by' → logprob: -2.3307344913482666
    4. 'after' → logprob: -2.3307344913482666
    5. ' with' → logprob: -2.9557344913482666
    6. 'one' → logprob: -3.9557344913482666
    7. 'through' → logprob: -4.205734729766846
    8. ' after' → logprob: -4.580734729766846
    9. 'if' → logprob: -4.830734729766846
    10. 'using' → logprob: -5.330734729766846

Token 322: ' is' (ID: 382)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3234492242336273
    2. '   ' → logprob: -1.5734492540359497
    3. '    
' → logprob: -2.69844913482666
    4. 'initial' → logprob: -7.94844913482666
    5. '   
' → logprob: -8.07344913482666
    6. '  
' → logprob: -8.19844913482666
    7. '
    
' → logprob: -8.94844913482666
    8. 'def' → logprob: -9.07344913482666
    9. '#' → logprob: -9.44844913482666
    10. '

' → logprob: -9.57344913482666

Token 323: ' valid' (ID: 4529)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.2641223967075348
    2. 'valid' → logprob: -1.7641223669052124
    3. 'fe' → logprob: -3.764122486114502
    4. ' possible' → logprob: -4.139122486114502
    5. ' valid' → logprob: -4.889122486114502
    6. 'reachable' → logprob: -5.264122486114502
    7. 'ach' → logprob: -5.389122486114502
    8. ' feasible' → logprob: -6.139122486114502
    9. ' achievable' → logprob: -6.889122486114502
    10. 'correct' → logprob: -7.264122486114502

Token 324: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6961581110954285
    2. '   ' → logprob: -0.8211581110954285
    3. '    
' → logprob: -2.8211581707000732
    4. 'initial' → logprob: -6.696157932281494
    5. '```' → logprob: -8.196158409118652
    6. '   
' → logprob: -9.321158409118652
    7. 'def' → logprob: -9.446158409118652
    8. '#' → logprob: -9.446158409118652
    9. '  
' → logprob: -10.071158409118652
    10. '        
' → logprob: -10.196158409118652

Token 325: 'but' (ID: 8293)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8052204847335815
    2. ')' → logprob: -1.5552204847335815
    3. '   ' → logprob: -2.555220603942871
    4. '#' → logprob: -2.680220603942871
    5. ' depending' → logprob: -2.805220603942871
    6. ' but' → logprob: -3.180220603942871
    7. ' so' → logprob: -3.555220603942871
    8. ' if' → logprob: -3.805220603942871
    9. 'def' → logprob: -5.180220603942871
    10. '),' → logprob: -5.430220603942871

Token 326: ' problem' (ID: 4792)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.8584996461868286
    2. 'not' → logprob: -1.2334996461868286
    3. ' not' → logprob: -1.7334996461868286
    4. ' both' → logprob: -2.858499526977539
    5. 'the' → logprob: -4.983499526977539
    6. 'possibly' → logprob: -5.108499526977539
    7. 'bits' → logprob: -5.608499526977539
    8. 'we' → logprob: -5.858499526977539
    9. ' may' → logprob: -5.983499526977539
    10. '
' → logprob: -6.108499526977539

Token 327: ' states' (ID: 9407)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7988474369049072
    2. ' does' → logprob: -2.1738474369049072
    3. ' states' → logprob: -2.5488474369049072
    4. ' may' → logprob: -2.9238474369049072
    5. ' statement' → logprob: -2.9238474369049072
    6. ' doesn't' → logprob: -2.9238474369049072
    7. ' continues' → logprob: -2.9238474369049072
    8. ' is' → logprob: -3.1738474369049072
    9. '#' → logprob: -3.6738474369049072
    10. 'does' → logprob: -4.548847198486328

Token 328: ' can' (ID: 665)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.6525859832763672
    2. ' both' → logprob: -1.7775859832763672
    3. 'that' → logprob: -2.777585983276367
    4. ' that' → logprob: -2.777585983276367
    5. ' at' → logprob: -3.777585983276367
    6. 'the' → logprob: -4.027585983276367
    7. 'there' → logprob: -4.277585983276367
    8. ' guaranteed' → logprob: -4.527585983276367
    9. 'always' → logprob: -4.527585983276367
    10. 'they' → logprob: -4.652585983276367

Token 329: ' become' (ID: 5025)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.2449256181716919
    2. ' be' → logprob: -1.994925618171692
    3. ' become' → logprob: -3.2449254989624023
    4. 'always' → logprob: -4.369925498962402
    5. ' always' → logprob: -4.744925498962402
    6. 'transform' → logprob: -5.619925498962402
    7. '   ' → logprob: -5.744925498962402
    8. ')' → logprob: -6.619925498962402
    9. ' transform' → logprob: -7.119925498962402
    10. 'only' → logprob: -7.119925498962402

Token 330: ' one' (ID: 1001)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -1.1116703748703003
    2. ' both' → logprob: -1.2366703748703003
    3. ' either' → logprob: -1.4866703748703003
    4. 'either' → logprob: -1.9866703748703003
    5. ' any' → logprob: -4.98667049407959
    6. 'any' → logprob: -5.36167049407959
    7. ' one' → logprob: -6.11167049407959
    8. 'one' → logprob: -6.98667049407959
    9. ' valid' → logprob: -7.86167049407959
    10. ' the' → logprob: -8.23667049407959

Token 331: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.8351448774337769
    2. ')' → logprob: -1.4601448774337769
    3. ' of' → logprob: -1.7101448774337769
    4. ' or' → logprob: -2.7101449966430664
    5. 'or' → logprob: -3.2101449966430664
    6. '),' → logprob: -3.5851449966430664
    7. ')
' → logprob: -5.085144996643066
    8. ').' → logprob: -5.210144996643066
    9. 'target' → logprob: -5.710144996643066
    10. 'possible' → logprob: -7.085144996643066

Token 332: ' these' (ID: 1879)
  Prédit: 'them'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'them' → logprob: -0.2884395718574524
    2. ' them' → logprob: -2.1634395122528076
    3. 'the' → logprob: -2.2884395122528076
    4. 'either' → logprob: -4.163439750671387
    5. 'two' → logprob: -4.538439750671387
    6. ' the' → logprob: -5.538439750671387
    7. ' two' → logprob: -6.663439750671387
    8. ' either' → logprob: -6.913439750671387
    9. 'both' → logprob: -7.663439750671387
    10. 'these' → logprob: -7.788439750671387

Token 333: ' two' (ID: 1920)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05881768465042114
    2. '   ' → logprob: -3.6838176250457764
    3. ')
' → logprob: -4.3088178634643555
    4. ').' → logprob: -5.0588178634643555
    5. '#' → logprob: -5.6838178634643555
    6. ',' → logprob: -5.9338178634643555
    7. '),' → logprob: -6.8088178634643555
    8. ' or' → logprob: -7.1838178634643555
    9. 'def' → logprob: -7.3088178634643555
    10. ')

' → logprob: -7.4338178634643555

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029370876029133797
    2. ')
' → logprob: -3.7793707847595215
    3. ').' → logprob: -6.1543707847595215
    4. '):
' → logprob: -6.6543707847595215
    5. ',' → logprob: -7.6543707847595215
    6. ')

' → logprob: -7.9043707847595215
    7. ' states' → logprob: -8.02937126159668
    8. '),' → logprob: -8.27937126159668
    9. 'def' → logprob: -8.65437126159668
    10. 's' → logprob: -9.02937126159668

Token 335: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5790771842002869
    2. '
' → logprob: -0.9540771842002869
    3. '    
' → logprob: -3.5790772438049316
    4. 'initial' → logprob: -3.7040772438049316
    5. '```' → logprob: -7.079077243804932
    6. ' initial' → logprob: -8.329076766967773
    7. 'bits' → logprob: -8.454076766967773
    8. '  
' → logprob: -9.329076766967773
    9. 'positions' → logprob: -9.579076766967773
    10. '   
' → logprob: -9.579076766967773

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.074390709400177
    2. 'initial' → logprob: -2.6993906497955322
    3. '
' → logprob: -6.199390888214111
    4. '    
' → logprob: -6.949390888214111
    5. '#' → logprob: -7.199390888214111
    6. 'bits' → logprob: -8.324390411376953
    7. ' initial' → logprob: -8.699390411376953
    8. 'def' → logprob: -9.449390411376953
    9. 'ones' → logprob: -9.699390411376953
    10. '```' → logprob: -10.074390411376953

Token 337: ' #' (ID: 1069)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.9900069236755371
    2. 'ones' → logprob: -1.490006923675537
    3. '   ' → logprob: -1.865006923675537
    4. '#' (adapté à ' #') → logprob: -2.740006923675537
    5. 'positions' → logprob: -2.740006923675537
    6. 'pos' → logprob: -3.115006923675537
    7. 'one' → logprob: -3.365006923675537
    8. 'bits' → logprob: -3.865006923675537
    9. 'def' → logprob: -4.365006923675537
    10. 'indices' → logprob: -5.865006923675537

Token 338: ' The' (ID: 623)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.6629879474639893
    2. '   ' → logprob: -1.6629879474639893
    3. 'ones' → logprob: -2.0379879474639893
    4. '#' → logprob: -2.4129879474639893
    5. 'one' → logprob: -3.1629879474639893
    6. 'positions' → logprob: -4.41298770904541
    7. 'pos' → logprob: -4.78798770904541
    8. 'bits' → logprob: -5.16298770904541
    9. 'def' → logprob: -5.78798770904541
    10. 'indices' → logprob: -6.41298770904541

Token 339: ' minimal' (ID: 19957)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.5542240738868713
    2. '#' → logprob: -1.3042240142822266
    3. 'ones' → logprob: -3.1792240142822266
    4. 'bits' → logprob: -3.4292240142822266
    5. 'positions' → logprob: -3.5542240142822266
    6. 'def' → logprob: -3.8042240142822266
    7. 'one' → logprob: -4.054224014282227
    8. 'pos' → logprob: -5.054224014282227
    9. 'bit' → logprob: -6.179224014282227
    10. 'for' → logprob: -6.429224014282227

Token 340: ' number' (ID: 2086)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.1535799503326416
    2. 'positions' → logprob: -1.2785799503326416
    3. '#' → logprob: -2.0285799503326416
    4. 'bits' → logprob: -2.1535799503326416
    5. ' initial' → logprob: -2.5285799503326416
    6. ' positions' → logprob: -4.0285797119140625
    7. 'ones' → logprob: -4.5285797119140625
    8. ' #' → logprob: -4.9035797119140625
    9. '1' → logprob: -5.4035797119140625
    10. '_' → logprob: -5.5285797119140625

Token 341: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.48200100660324097
    2. 'of' → logprob: -1.2320010662078857
    3. '   ' → logprob: -2.9820010662078857
    4. '_of' → logprob: -3.2320010662078857
    5. '_tokens' → logprob: -8.482001304626465
    6. ' ' → logprob: -9.357001304626465
    7. '	of' → logprob: -9.357001304626465
    8. '_' → logprob: -9.857001304626465
    9. '  ' → logprob: -10.107001304626465
    10. '
' → logprob: -10.857001304626465

Token 342: ' swaps' (ID: 150699)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.02863370254635811
    2. ' swaps' → logprob: -3.6536335945129395
    3. 'adj' → logprob: -6.1536335945129395
    4. 'moves' → logprob: -9.528634071350098
    5. 'swap' → logprob: -10.153634071350098
    6. '_sw' → logprob: -10.528634071350098
    7. '#' → logprob: -11.028634071350098
    8. ' adjacent' → logprob: -11.528634071350098
    9. 'bits' → logprob: -11.778634071350098
    10. '```' → logprob: -11.778634071350098

Token 343: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8289419412612915
    2. '   ' → logprob: -1.8289419412612915
    3. 'needed' → logprob: -1.9539419412612915
    4. ' needed' → logprob: -2.578941822052002
    5. ' is' → logprob: -2.828941822052002
    6. '=' → logprob: -3.078941822052002
    7. ' to' → logprob: -4.203941822052002
    8. ' required' → logprob: -4.328941822052002
    9. '_needed' → logprob: -4.453941822052002
    10. 'required' → logprob: -4.703941822052002

Token 344: ' minimized' (ID: 150477)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.043995000422000885
    2. ' min' → logprob: -3.793994903564453
    3. '   ' → logprob: -4.043994903564453
    4. 'float' → logprob: -6.668994903564453
    5. '0' → logprob: -6.918994903564453
    6. ' float' → logprob: -8.793994903564453
    7. '=min' → logprob: -9.543994903564453
    8. '```' → logprob: -9.543994903564453
    9. 'None' → logprob: -9.668994903564453
    10. 'minimum' → logprob: -9.793994903564453

Token 345: ' when' (ID: 1261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23354163765907288
    2. ' by' → logprob: -1.8585416078567505
    3. 'by' → logprob: -3.98354172706604
    4. ' for' → logprob: -4.983541488647461
    5. ' between' → logprob: -4.983541488647461
    6. 'def' → logprob: -4.983541488647461
    7. 'for' → logprob: -5.733541488647461
    8. 'between' → logprob: -6.733541488647461
    9. 'bits' → logprob: -6.983541488647461
    10. ' when' → logprob: -6.983541488647461

Token 346: ' the' (ID: 290)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.3082106113433838
    2. 'bits' → logprob: -2.058210611343384
    3. 'positions' → logprob: -2.433210611343384
    4. 'ones' → logprob: -4.558210372924805
    5. '1' → logprob: -4.683210372924805
    6. 'the' → logprob: -4.683210372924805
    7. '   ' → logprob: -5.058210372924805
    8. 'one' → logprob: -5.308210372924805
    9. 'all' → logprob: -6.183210372924805
    10. '#' → logprob: -6.308210372924805

Token 347: ' ordered' (ID: 17889)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.21686016023159027
    2. 'initial' → logprob: -2.341860055923462
    3. 'bits' → logprob: -3.341860055923462
    4. 'ones' → logprob: -3.591860055923462
    5. '1' → logprob: -4.716860294342041
    6. 'one' → logprob: -5.091860294342041
    7. 'indices' → logprob: -5.216860294342041
    8. '#' → logprob: -5.466860294342041
    9. 'target' → logprob: -5.591860294342041
    10. ' positions' → logprob: -6.091860294342041

Token 348: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.09780676662921906
    2. ' positions' → logprob: -2.472806692123413
    3. 'indices' → logprob: -5.847806930541992
    4. 'initial' → logprob: -6.097806930541992
    5. ' initial' → logprob: -6.847806930541992
    6. '_positions' → logprob: -6.972806930541992
    7. '1' → logprob: -8.222806930541992
    8. 'ones' → logprob: -8.472806930541992
    9. 'position' → logprob: -8.472806930541992
    10. ' indices' → logprob: -8.472806930541992

Token 349: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.39936599135398865
    2. ' of' → logprob: -1.149366021156311
    3. '_of' → logprob: -5.0243659019470215
    4. '_' → logprob: -5.7743659019470215
    5. '   ' → logprob: -6.6493659019470215
    6. '=' → logprob: -8.39936637878418
    7. '[' → logprob: -8.52436637878418
    8. 'for' → logprob: -8.52436637878418
    9. '(' → logprob: -9.27436637878418
    10. '#' → logprob: -9.27436637878418

Token 350: ' ones' (ID: 8104)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09074399620294571
    2. ' ones' → logprob: -3.2157440185546875
    3. 'ones' → logprob: -3.9657440185546875
    4. ' ' → logprob: -4.8407440185546875
    5. 'bits' → logprob: -4.9657440185546875
    6. ' bits' → logprob: -5.2157440185546875
    7. 'initial' → logprob: -5.8407440185546875
    8. ' initial' → logprob: -6.4657440185546875
    9. 'one' → logprob: -7.4657440185546875
    10. 'bit' → logprob: -7.7157440185546875

Token 351: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4507819414138794
    2. 'in' → logprob: -1.7007819414138794
    3. '   ' → logprob: -2.57578182220459
    4. ' are' → logprob: -2.70078182220459
    5. 'initial' → logprob: -4.82578182220459
    6. ' of' → logprob: -5.07578182220459
    7. ' initial' → logprob: -5.32578182220459
    8. '#' → logprob: -5.57578182220459
    9. ' matches' → logprob: -6.32578182220459
    10. ' positions' → logprob: -6.45078182220459

Token 352: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.29388177394866943
    2. 'bits' → logprob: -1.4188817739486694
    3. ' initial' → logprob: -5.043881893157959
    4. ' bits' → logprob: -5.168881893157959
    5. '   ' → logprob: -8.2938814163208
    6. 'target' → logprob: -8.4188814163208
    7. '
' → logprob: -11.6688814163208
    8. 'bit' → logprob: -12.1688814163208
    9. '	initial' → logprob: -12.2938814163208
    10. ' target' → logprob: -13.1688814163208

Token 353: ' and' (ID: 326)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.872031569480896
    2. 'are' → logprob: -1.747031569480896
    3. 'and' → logprob: -2.2470316886901855
    4. 'matches' → logprob: -2.4970316886901855
    5. ' and' → logprob: -2.7470316886901855
    6. 'positions' → logprob: -2.9970316886901855
    7. ' matches' → logprob: -3.4970316886901855
    8. ' match' → logprob: -4.1220316886901855
    9. '   ' → logprob: -4.3720316886901855
    10. 'match' → logprob: -4.4970316886901855

Token 354: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.006248476915061474
    2. ' target' → logprob: -5.506248474121094
    3. '   ' → logprob: -6.506248474121094
    4. '#' → logprob: -7.631248474121094
    5. '
' → logprob: -9.631248474121094
    6. 'the' → logprob: -9.881248474121094
    7. 'either' → logprob: -11.381248474121094
    8. 'sorted' → logprob: -11.881248474121094
    9. '[target' → logprob: -12.006248474121094
    10. ' #' → logprob: -12.006248474121094

Token 355: ' match' (ID: 3981)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.49688097834587097
    2. ' match' → logprob: -1.9968810081481934
    3. '   ' → logprob: -2.4968810081481934
    4. '0' → logprob: -2.9968810081481934
    5. 'are' → logprob: -3.1218810081481934
    6. 'match' → logprob: -3.7468810081481934
    7. 'positions' → logprob: -3.8718810081481934
    8. 'initial' → logprob: -4.996881008148193
    9. ' positions' → logprob: -5.621881008148193
    10. ' lists' → logprob: -5.996881008148193

Token 356: ' best' (ID: 1636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05401729792356491
    2. '    
' → logprob: -3.4290173053741455
    3. '
' → logprob: -4.054017066955566
    4. 'initial' → logprob: -6.054017066955566
    5. 'positions' → logprob: -8.929017066955566
    6. '#' → logprob: -10.179017066955566
    7. ' initial' → logprob: -10.304017066955566
    8. '```' → logprob: -10.304017066955566
    9. 'def' → logprob: -10.429017066955566
    10. '        
' → logprob: -10.429017066955566

Token 357: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30786409974098206
    2. '
' → logprob: -1.6828640699386597
    3. '    
' → logprob: -2.557864189147949
    4. 'initial' → logprob: -6.807864189147949
    5. 'positions' → logprob: -9.43286418914795
    6. '   
' → logprob: -9.55786418914795
    7. '  
' → logprob: -9.93286418914795
    8. ' initial' → logprob: -9.93286418914795
    9. '_initial' → logprob: -10.18286418914795
    10. '        
' → logprob: -10.30786418914795

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12470164149999619
    2. '
' → logprob: -2.499701738357544
    3. '    
' → logprob: -3.749701738357544
    4. 'initial' → logprob: -4.499701499938965
    5. '```' → logprob: -8.749701499938965
    6. 'positions' → logprob: -9.374701499938965
    7. 'ones' → logprob: -10.124701499938965
    8. '  
' → logprob: -10.374701499938965
    9. ' initial' → logprob: -10.374701499938965
    10. '	initial' → logprob: -10.874701499938965

Token 359: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1771266609430313
    2. 'initial' → logprob: -1.9271266460418701
    3. 'ones' → logprob: -4.802126884460449
    4. '#' (adapté à ' #') → logprob: -6.302126884460449
    5. '    
' → logprob: -6.302126884460449
    6. 'positions' → logprob: -6.552126884460449
    7. 'def' → logprob: -6.677126884460449
    8. '
' → logprob: -7.427126884460449
    9. ' initial' → logprob: -7.427126884460449
    10. 'pos' → logprob: -7.677126884460449

Token 360: ' Get' (ID: 2942)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.6572794318199158
    2. 'initial' → logprob: -1.2822794914245605
    3. '   ' → logprob: -1.7822794914245605
    4. '#' → logprob: -4.0322794914245605
    5. 'pos' → logprob: -4.6572794914245605
    6. 'positions' → logprob: -5.1572794914245605
    7. 'one' → logprob: -6.2822794914245605
    8. 'def' → logprob: -7.5322794914245605
    9. '    
' → logprob: -8.407279014587402
    10. ' ones' → logprob: -9.157279014587402

Token 361: ' positions' (ID: 15897)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.3291763663291931
    2. ' initial' → logprob: -1.454176425933838
    3. 'positions' → logprob: -3.704176425933838
    4. 'pos' → logprob: -4.329176425933838
    5. ' positions' → logprob: -4.954176425933838
    6. ' ones' → logprob: -7.454176425933838
    7. ' pos' → logprob: -7.579176425933838
    8. 'ones' → logprob: -7.829176425933838
    9. '   ' → logprob: -7.954176425933838
    10. '#' → logprob: -9.57917594909668

Token 362: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.49422797560691833
    2. '_' → logprob: -1.1192280054092407
    3. 'of' → logprob: -3.494227886199951
    4. '_initial' → logprob: -3.744227886199951
    5. ' =' → logprob: -5.869227886199951
    6. ' of' → logprob: -6.244227886199951
    7. 'initial' → logprob: -6.494227886199951
    8. '   ' → logprob: -6.744227886199951
    9. '_one' → logprob: -7.494227886199951
    10. '0' → logprob: -8.24422836303711

Token 363: ' ones' (ID: 8104)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38460108637809753
    2. 'ones' → logprob: -1.25960111618042
    3. 'one' → logprob: -3.75960111618042
    4. ' ones' → logprob: -5.50960111618042
    5. 'i' → logprob: -5.88460111618042
    6. 'bit' → logprob: -6.13460111618042
    7. 'bits' → logprob: -6.25960111618042
    8. ' ' → logprob: -8.009600639343262
    9. '[' → logprob: -8.384600639343262
    10. ' one' → logprob: -9.009600639343262

Token 364: ' in' (ID: 306)
  Prédit: '_initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.300417423248291
    2. 'initial' → logprob: -1.550417423248291
    3. '(initial' → logprob: -4.425417423248291
    4. '_in' → logprob: -4.425417423248291
    5. ' in' → logprob: -4.800417423248291
    6. 'in' → logprob: -5.425417423248291
    7. ' =' → logprob: -6.050417423248291
    8. '
' → logprob: -6.550417423248291
    9. '_' → logprob: -6.675417423248291
    10. '_positions' → logprob: -6.675417423248291

Token 365: ' initial' (ID: 4871)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.1384737491607666
    2. 'initial' → logprob: -3.0134737491607666
    3. '[' → logprob: -3.3884737491607666
    4. ' bits' → logprob: -3.7634737491607666
    5. '[i' → logprob: -4.0134735107421875
    6. ' initial' → logprob: -6.6384735107421875
    7. ' [' → logprob: -6.7634735107421875
    8. '[b' → logprob: -7.6384735107421875
    9. '(bits' → logprob: -7.8884735107421875
    10. 'range' → logprob: -8.013473510742188

Token 366: ' and' (ID: 326)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.19748808443546295
    2. '(initial' → logprob: -2.9474880695343018
    3. '   ' → logprob: -3.3224880695343018
    4. 'positions' → logprob: -3.5724880695343018
    5. ' =' → logprob: -4.072488307952881
    6. '_initial' → logprob: -4.322488307952881
    7. '
' → logprob: -4.572488307952881
    8. ':' → logprob: -5.197488307952881
    9. ' initial' → logprob: -5.447488307952881
    10. '=' → logprob: -6.072488307952881

Token 367: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1922855377197266
    2. 'bits' → logprob: -1.3172855377197266
    3. 'initial' → logprob: -1.5672855377197266
    4. '[i' → logprob: -1.6922855377197266
    5. 'range' → logprob: -3.6922855377197266
    6. 'enumer' → logprob: -6.192285537719727
    7. ' [' → logprob: -6.317285537719727
    8. ' bits' → logprob: -6.817285537719727
    9. ' initial' → logprob: -7.442285537719727
    10. '[b' → logprob: -7.442285537719727

Token 368: ' targets' (ID: 22836)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.013470898382365704
    2. ' bits' → logprob: -5.2634711265563965
    3. 'initial' → logprob: -5.3884711265563965
    4. '[' → logprob: -5.8884711265563965
    5. 'range' → logprob: -8.513470649719238
    6. '[i' → logprob: -8.763470649719238
    7. '(bits' → logprob: -9.263470649719238
    8. ' [' → logprob: -9.513470649719238
    9. ' initial' → logprob: -9.638470649719238
    10. '   ' → logprob: -9.638470649719238

Token 369: '
' (ID: 198)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.1959441751241684
    2. '   ' → logprob: -1.8209441900253296
    3. '
' → logprob: -4.570944309234619
    4. 'pos' → logprob: -6.070944309234619
    5. '    
' → logprob: -6.570944309234619
    6. 'positions' → logprob: -7.070944309234619
    7. ' initial' → logprob: -7.070944309234619
    8. 'init' → logprob: -9.195943832397461
    9. 'ones' → logprob: -9.820943832397461
    10. '	initial' → logprob: -10.320943832397461

Token 370: '   ' (ID: 271)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.01960049383342266
    2. '
' → logprob: -4.1446003913879395
    3. '   ' → logprob: -6.3946003913879395
    4. ' initial' → logprob: -7.0196003913879395
    5. '(initial' → logprob: -7.7696003913879395
    6. '    
' → logprob: -8.144600868225098
    7. 'positions' → logprob: -9.394600868225098
    8. '_initial' → logprob: -10.269600868225098
    9. 'ones' → logprob: -10.644600868225098
    10. '```' → logprob: -10.894600868225098

Token 371: ' ones' (ID: 8104)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.24405238032341003
    2. '   ' → logprob: -1.6190524101257324
    3. ' initial' → logprob: -4.994052410125732
    4. 'pos' → logprob: -4.994052410125732
    5. '
' → logprob: -6.119052410125732
    6. '    
' → logprob: -6.494052410125732
    7. 'positions' → logprob: -7.119052410125732
    8. 'ones' (adapté à ' ones') → logprob: -8.744051933288574
    9. 'init' → logprob: -10.119051933288574
    10. ' pos' → logprob: -10.119051933288574

Token 372: '_init' (ID: 13909)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47035253047943115
    2. '_initial' → logprob: -1.4703525304794312
    3. '_positions' → logprob: -2.4703526496887207
    4. '_pos' → logprob: -3.2203526496887207
    5. '_in' → logprob: -4.095352649688721
    6. '_init' → logprob: -5.970352649688721
    7. '=' → logprob: -7.095352649688721
    8. '_' → logprob: -7.595352649688721
    9. '_indices' → logprob: -8.345352172851562
    10. '   ' → logprob: -9.970352172851562

Token 373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869492709636688
    2. '=' → logprob: -1.1369493007659912
    3. '=[' → logprob: -10.26194953918457
    4. '   ' → logprob: -10.51194953918457
    5. '=[]' → logprob: -12.26194953918457
    6. '_positions' → logprob: -12.38694953918457
    7. ' =[' → logprob: -12.38694953918457
    8. ' ' → logprob: -14.88694953918457
    9. '  ' → logprob: -14.88694953918457
    10. '=[]
' → logprob: -15.13694953918457

Token 374: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002529952325858176
    2. ' [' → logprob: -8.500252723693848
    3. '[' → logprob: -10.500252723693848
    4. '[x' → logprob: -11.750252723693848
    5. '[pos' → logprob: -12.125252723693848
    6. '[idx' → logprob: -12.625252723693848
    7. '[k' → logprob: -13.125252723693848
    8. '[j' → logprob: -14.125252723693848
    9. '   ' → logprob: -14.250252723693848
    10. '[index' → logprob: -14.250252723693848

Token 375: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007105246186256409
    2. 'idx' → logprob: -7.250710487365723
    3. ' i' → logprob: -15.250710487365723
    4. 'index' → logprob: -15.625710487365723
    5. ' idx' → logprob: -16.62571144104004
    6. '   ' → logprob: -16.75071144104004
    7. '(i' → logprob: -17.00071144104004
    8. 'k' → logprob: -18.00071144104004
    9. 'ix' → logprob: -18.25071144104004
    10. '[i' → logprob: -18.75071144104004

Token 376: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01831897534430027
    2. 'for' → logprob: -4.018319129943848
    3. 'i' → logprob: -9.018319129943848
    4. '
' → logprob: -10.893319129943848
    5. '   ' → logprob: -11.393319129943848
    6. ' ' → logprob: -12.018319129943848
    7. '	for' → logprob: -12.518319129943848
    8. ' 
' → logprob: -13.393319129943848
    9. ' i' → logprob: -13.518319129943848
    10. '(i' → logprob: -13.768319129943848

Token 377: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013062113896012306
    2. ',' → logprob: -5.263062000274658
    3. ' i' → logprob: -5.263062000274658
    4. 'range' → logprob: -6.263062000274658
    5. ' range' → logprob: -7.263062000274658
    6. ',i' → logprob: -11.888062477111816
    7. 'enumer' → logprob: -13.263062477111816
    8. ' ' → logprob: -14.263062477111816
    9. 'idx' → logprob: -14.388062477111816
    10. ' in' → logprob: -14.513062477111816

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.134509021649137e-05
    2. ',i' → logprob: -10.62506103515625
    3. 'i' → logprob: -11.12506103515625
    4. ',b' → logprob: -11.87506103515625
    5. ',e' → logprob: -12.25006103515625
    6. 'enumer' → logprob: -12.87506103515625
    7. ',v' → logprob: -13.25006103515625
    8. ',d' → logprob: -13.50006103515625
    9. ',x' → logprob: -13.62506103515625
    10. 'in' → logprob: -14.00006103515625

Token 379: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01110500656068325
    2. 'bit' → logprob: -4.511105060577393
    3. ' b' → logprob: -10.261104583740234
    4. 'x' → logprob: -11.636104583740234
    5. ' bit' → logprob: -11.761104583740234
    6. 'v' → logprob: -12.136104583740234
    7. '(bit' → logprob: -15.886104583740234
    8. '(b' → logprob: -16.636104583740234
    9. 'val' → logprob: -17.886104583740234
    10. 'bits' → logprob: -18.761104583740234

Token 380: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3407849967479706
    2. 'in' → logprob: -1.590785026550293
    3. ',' → logprob: -2.465785026550293
    4. 'enumer' → logprob: -10.340785026550293
    5. ',b' → logprob: -11.090785026550293
    6. ' ,' → logprob: -11.340785026550293
    7. 'b' → logprob: -11.715785026550293
    8. ',e' → logprob: -12.715785026550293
    9. ' ' → logprob: -13.090785026550293
    10. '	in' → logprob: -13.465785026550293

Token 381: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.011047935113310814
    2. ' enumerate' → logprob: -4.511047840118408
    3. 'en' → logprob: -17.26104736328125
    4. 'range' → logprob: -18.63604736328125
    5. 'enqueue' → logprob: -18.76104736328125
    6. '```' → logprob: -18.76104736328125
    7. 'Enumer' → logprob: -18.88604736328125
    8. 'bits' → logprob: -18.88604736328125
    9. 'enum' → logprob: -19.13604736328125
    10. 'in' → logprob: -19.26104736328125

Token 382: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.029911313205957413
    2. 'bits' → logprob: -3.5299112796783447
    3. ' bits' → logprob: -8.779911041259766
    4. '(bit' → logprob: -12.779911041259766
    5. ' (' → logprob: -13.654911041259766
    6. '_bits' → logprob: -14.154911041259766
    7. '(b' → logprob: -14.529911041259766
    8. '.bits' → logprob: -14.779911041259766
    9. '(' → logprob: -15.404911041259766
    10. 'bit' → logprob: -15.529911041259766

Token 383: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002146226615877822
    2. ' if' → logprob: -9.125214576721191
    3. 'if' → logprob: -9.500214576721191
    4. ' )' → logprob: -10.500214576721191
    5. '   ' → logprob: -13.000214576721191
    6. ',' → logprob: -15.125214576721191
    7. '1' → logprob: -15.750214576721191
    8. '()' → logprob: -15.875214576721191
    9. '0' → logprob: -16.000215530395508
    10. '")' → logprob: -16.750215530395508

Token 384: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023254329338669777
    2. 'if' → logprob: -3.77325439453125
    3. '   ' → logprob: -11.77325439453125
    4. ' ' → logprob: -14.52325439453125
    5. '	if' → logprob: -15.27325439453125
    6. '  ' → logprob: -15.52325439453125
    7. '    ' → logprob: -16.39825439453125
    8. '()' → logprob: -16.89825439453125
    9. '       ' → logprob: -17.39825439453125
    10. ')' → logprob: -17.39825439453125

Token 385: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. '	b' → logprob: -19.375261306762695
    4. 'bit' → logprob: -19.750261306762695
    5. '   ' → logprob: -20.000261306762695
    6. 'bits' → logprob: -20.625261306762695
    7. ' ' → logprob: -20.750261306762695
    8. '_b' → logprob: -21.375261306762695
    9. '
' → logprob: -22.250261306762695
    10. ')b' → logprob: -22.250261306762695

Token 386: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.201472207903862
    2. ' ==' → logprob: -1.7014721632003784
    3. ']==' → logprob: -9.951472282409668
    4. ']' → logprob: -12.826472282409668
    5. '=' → logprob: -12.951472282409668
    6. ')==' → logprob: -13.076472282409668
    7. ' ' → logprob: -13.576472282409668
    8. '1' → logprob: -14.576472282409668
    9. '()==' → logprob: -14.576472282409668
    10. ')' → logprob: -14.701472282409668

Token 387: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.50001335144043
    4. '
' → logprob: -19.12501335144043
    5. '```' → logprob: -19.62501335144043
    6. '0' → logprob: -19.87501335144043
    7. '`' → logprob: -20.25001335144043
    8. '  ' → logprob: -20.87501335144043
    9. '=' → logprob: -21.06251335144043
    10. '۱' → logprob: -21.37501335144043

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '0' → logprob: -19.0
    4. '```' → logprob: -19.75
    5. '   ' → logprob: -20.0
    6. '
' → logprob: -20.625
    7. '`' → logprob: -20.8125
    8. '=' → logprob: -20.8125
    9. '۱' → logprob: -21.0625
    10. '১' → logprob: -21.375

Token 389: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026884564431384206
    2. ']
' → logprob: -8.250268936157227
    3. ' ]' → logprob: -12.125268936157227
    4. ']

' → logprob: -14.125268936157227
    5. ']
' → logprob: -14.250268936157227
    6. '   ' → logprob: -14.375268936157227
    7. '']' → logprob: -16.750268936157227
    8. '`]' → logprob: -18.250268936157227
    9. '"]' → logprob: -18.375268936157227
    10. ')' → logprob: -18.625268936157227

Token 390: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4203205704689026
    2. 'ones' → logprob: -1.2953205108642578
    3. ' ones' → logprob: -3.545320510864258
    4. '
' → logprob: -3.670320510864258
    5. '    
' → logprob: -4.295320510864258
    6. '  
' → logprob: -7.795320510864258
    7. '```' → logprob: -8.545320510864258
    8. '   
' → logprob: -8.795320510864258
    9. ')
' → logprob: -9.170320510864258
    10. 'target' → logprob: -9.795320510864258

Token 391: '   ' (ID: 271)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.009174980223178864
    2. '   ' → logprob: -5.134174823760986
    3. ' ones' → logprob: -5.759174823760986
    4. 'target' → logprob: -10.509175300598145
    5. 'positions' → logprob: -10.884175300598145
    6. 'zeros' → logprob: -11.259175300598145
    7. 'def' → logprob: -11.884175300598145
    8. '#' → logprob: -12.009175300598145
    9. 'pos' → logprob: -12.259175300598145
    10. 'one' → logprob: -12.509175300598145

Token 392: ' ones' (ID: 8104)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' (adapté à ' ones') → logprob: -0.0003977800370194018
    2. 'def' → logprob: -8.625397682189941
    3. 'pos' → logprob: -9.500397682189941
    4. 'positions' → logprob: -9.625397682189941
    5. ' ones' → logprob: -10.625397682189941
    6. '#' → logprob: -10.750397682189941
    7. 'target' → logprob: -11.000397682189941
    8. 'zeros' → logprob: -12.125397682189941
    9. 'one' → logprob: -12.625397682189941
    10. '   ' → logprob: -13.000397682189941

Token 393: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.23234973847866058
    2. '_init' → logprob: -1.7323497533798218
    3. '0' → logprob: -4.107349872589111
    4. '_' → logprob: -4.482349872589111
    5. 'target' → logprob: -6.982349872589111
    6. '_t' → logprob: -7.607349872589111
    7. ' =' → logprob: -7.732349872589111
    8. '_targets' → logprob: -7.857349872589111
    9. '=' → logprob: -8.857349395751953
    10. '_tar' → logprob: -9.232349395751953

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6047891974449158
    2. '=' → logprob: -1.1047892570495605
    3. ' =' → logprob: -2.1047892570495605
    4. '_' → logprob: -7.3547892570495605
    5. '=[' → logprob: -11.354788780212402
    6. '[' → logprob: -13.604788780212402
    7. '```' → logprob: -13.604788780212402
    8. ' ' → logprob: -14.104788780212402
    9. '=[]' → logprob: -14.104788780212402
    10. ' =[' → logprob: -14.229788780212402

Token 395: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602257490158081
    2. '=' → logprob: -1.910225749015808
    3. ' =[' → logprob: -14.035225868225098
    4. '=[' → logprob: -14.160225868225098
    5. '[' → logprob: -17.16022491455078
    6. '=[]' → logprob: -17.41022491455078
    7. ',' → logprob: -19.03522491455078
    8. ' ' → logprob: -19.16022491455078
    9. '＝' → logprob: -19.16022491455078
    10. ')' → logprob: -19.16022491455078

Token 396: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0031840058509260416
    2. ' [' → logprob: -5.753183841705322
    3. '[' → logprob: -12.00318431854248
    4. ' ' → logprob: -16.378183364868164
    5. '[a' → logprob: -16.878183364868164
    6. '[j' → logprob: -17.253183364868164
    7. '[k' → logprob: -17.253183364868164
    8. '[x' → logprob: -17.253183364868164
    9. '[b' → logprob: -17.253183364868164
    10. '[e' → logprob: -18.003183364868164

Token 397: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4498052223643754e-05
    2. 'idx' → logprob: -11.250014305114746
    3. ' i' → logprob: -13.875014305114746
    4. '   ' → logprob: -15.500014305114746
    5. 'index' → logprob: -16.000015258789062
    6. 'j' → logprob: -16.750015258789062
    7. '(i' → logprob: -16.875015258789062
    8. 'pos' → logprob: -17.250015258789062
    9. '	i' → logprob: -17.375015258789062
    10. '[i' → logprob: -17.875015258789062

Token 398: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4740888178348541
    2. 'for' → logprob: -0.9740887880325317
    3. 'i' → logprob: -11.974088668823242
    4. ' ' → logprob: -13.349088668823242
    5. '
' → logprob: -13.849088668823242
    6. 'b' → logprob: -13.974088668823242
    7. '(i' → logprob: -14.599088668823242
    8. '	for' → logprob: -14.974088668823242
    9. '[i' → logprob: -15.474088668823242
    10. ' i' → logprob: -15.599088668823242

Token 399: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03009074740111828
    2. ',' → logprob: -3.530090808868408
    3. ' i' → logprob: -8.28009033203125
    4. 'range' → logprob: -10.15509033203125
    5. ',i' → logprob: -10.40509033203125
    6. 'enumer' → logprob: -11.28009033203125
    7. ' range' → logprob: -13.03009033203125
    8. ' ,' → logprob: -14.40509033203125
    9. ' ' → logprob: -14.78009033203125
    10. '_,' → logprob: -14.90509033203125

Token 400: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005261272192001343
    2. 'enumer' → logprob: -5.255261421203613
    3. 'in' → logprob: -11.630261421203613
    4. ' ,' → logprob: -12.130261421203613
    5. 'range' → logprob: -12.130261421203613
    6. ' enumerate' → logprob: -12.880261421203613
    7. ' in' → logprob: -13.380261421203613
    8. ',b' → logprob: -14.005261421203613
    9. ',en' → logprob: -14.630261421203613
    10. '0' → logprob: -14.880261421203613

Token 401: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8165819644927979
    2. ' in' → logprob: -0.8165819644927979
    3. 'in' → logprob: -2.316581964492798
    4. 'enumer' → logprob: -4.066581726074219
    5. ' ,' → logprob: -8.941581726074219
    6. ',i' → logprob: -9.941581726074219
    7. ',b' → logprob: -10.441581726074219
    8. ' enumerate' → logprob: -10.691581726074219
    9. ',e' → logprob: -10.816581726074219
    10. ',in' → logprob: -10.816581726074219

Token 402: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0013278567930683494
    2. ' enumerate' → logprob: -6.626327991485596
    3. '(' → logprob: -14.376327514648438
    4. 'enum' → logprob: -14.876327514648438
    5. 'in' → logprob: -15.376327514648438
    6. '[' → logprob: -15.876327514648438
    7. 'range' → logprob: -16.001327514648438
    8. '
' → logprob: -16.376327514648438
    9. ',' → logprob: -16.376327514648438
    10. '.enumer' → logprob: -16.501327514648438

Token 403: '(target' (ID: 16247)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.4744165241718292
    2. '(target' → logprob: -0.9744164943695068
    3. ' target' → logprob: -8.474416732788086
    4. 'enumer' → logprob: -9.849416732788086
    5. 'range' → logprob: -9.974416732788086
    6. '(range' → logprob: -10.974416732788086
    7. ',target' → logprob: -12.474416732788086
    8. '(' → logprob: -12.599416732788086
    9. '(bits' → logprob: -13.099416732788086
    10. ' (' → logprob: -13.224416732788086

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13389624655246735
    2. 'target' → logprob: -2.2588963508605957
    3. '1' → logprob: -4.258896350860596
    4. ')' → logprob: -6.258896350860596
    5. '(target' → logprob: -6.258896350860596
    6. '   ' → logprob: -6.883896350860596
    7. ' target' → logprob: -7.633896350860596
    8. 'bits' → logprob: -7.883896350860596
    9. '_target' → logprob: -8.758895874023438
    10. ' ' → logprob: -9.133895874023438

Token 405: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6112805008888245
    2. ' if' → logprob: -0.8612805008888245
    3. 'if' → logprob: -3.3612804412841797
    4. '   ' → logprob: -11.11128044128418
    5. ' )' → logprob: -11.11128044128418
    6. '()' → logprob: -14.23628044128418
    7. ' ' → logprob: -14.48628044128418
    8. '    ' → logprob: -14.73628044128418
    9. '1' → logprob: -14.86128044128418
    10. '0' → logprob: -15.48628044128418

Token 406: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.251930296421051
    2. 'if' → logprob: -1.5019302368164062
    3. '   ' → logprob: -14.126930236816406
    4. ' ' → logprob: -15.251930236816406
    5. '    ' → logprob: -16.626930236816406
    6. '  ' → logprob: -16.751930236816406
    7. '        ' → logprob: -17.376930236816406
    8. '       ' → logprob: -18.251930236816406
    9. '==' → logprob: -18.501930236816406
    10. '     ' → logprob: -19.126930236816406

Token 407: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02630215883255005
    2. ' b' → logprob: -3.6513020992279053
    3. '   ' → logprob: -14.276302337646484
    4. '1' → logprob: -14.276302337646484
    5. ' ' → logprob: -14.651302337646484
    6. '	b' → logprob: -16.401302337646484
    7. '    ' → logprob: -17.026302337646484
    8. '  ' → logprob: -17.151302337646484
    9. '(b' → logprob: -17.901302337646484
    10. ' ' → logprob: -19.088802337646484

Token 408: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47407984733581543
    2. ' ==' → logprob: -0.9740798473358154
    3. ']==' → logprob: -13.349080085754395
    4. ' ' → logprob: -14.974080085754395
    5. '=' → logprob: -15.474080085754395
    6. '==
' → logprob: -15.599080085754395
    7. ']' → logprob: -15.849080085754395
    8. ' ' → logprob: -16.349079132080078
    9. ')==' → logprob: -16.724079132080078
    10. '[' → logprob: -16.724079132080078

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.500261306762695
    4. '  ' → logprob: -19.125261306762695
    5. '0' → logprob: -19.750261306762695
    6. '
' → logprob: -20.125261306762695
    7. '```' → logprob: -20.937761306762695
    8. '=' → logprob: -21.000261306762695
    9. '<|end|>' → logprob: -21.625261306762695
    10. '`' → logprob: -21.937761306762695

Token 410: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011080598458647728
    2. ']
' → logprob: -4.511080741882324
    3. ']
' → logprob: -11.261080741882324
    4. ' ]' → logprob: -11.511080741882324
    5. ']

' → logprob: -11.886080741882324
    6. '   ' → logprob: -13.011080741882324
    7. ' ]
' → logprob: -14.886080741882324
    8. '']' → logprob: -15.636080741882324
    9. '"]' → logprob: -16.886079788208008
    10. ']

' → logprob: -17.761079788208008

Token 411: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07901790738105774
    2. 'ones' → logprob: -3.2040178775787354
    3. '    
' → logprob: -3.7040178775787354
    4. '  
' → logprob: -5.2040181159973145
    5. ' ones' → logprob: -5.8290181159973145
    6. '
' → logprob: -7.4540181159973145
    7. '<|end|>' → logprob: -7.4540181159973145
    8. '

' → logprob: -7.9540181159973145
    9. '   ' → logprob: -8.079017639160156
    10. '   
' → logprob: -8.454017639160156

Token 412: ' ones' (ID: 8104)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' (adapté à ' ones') → logprob: -0.002310953801497817
    2. ' ones' → logprob: -6.127310752868652
    3. '
' → logprob: -9.252310752868652
    4. '    
' → logprob: -11.002310752868652
    5. '  
' → logprob: -12.502310752868652
    6. '.ones' → logprob: -12.627310752868652
    7. '
' → logprob: -14.002310752868652
    8. '[]
' → logprob: -14.002310752868652
    9. '        
' → logprob: -14.502310752868652
    10. '

' → logprob: -14.502310752868652

Token 413: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.00014334988372866064
    2. '_targets' → logprob: -9.375143051147461
    3. 'target' → logprob: -10.500143051147461
    4. '_' → logprob: -11.000143051147461
    5. ' =' → logprob: -12.125143051147461
    6. ' _' → logprob: -13.250143051147461
    7. '=' → logprob: -13.875143051147461
    8. '
' → logprob: -14.375143051147461
    9. ']_' → logprob: -14.375143051147461
    10. 'for' → logprob: -14.625143051147461

Token 414: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20154549181461334
    2. '1' → logprob: -1.7015454769134521
    3. '[' → logprob: -8.951545715332031
    4. '```' → logprob: -13.826545715332031
    5. '   ' → logprob: -14.576545715332031
    6. '=' → logprob: -14.826545715332031
    7. '_' → logprob: -14.826545715332031
    8. ' ' → logprob: -15.201545715332031
    9. '
' → logprob: -16.57654571533203
    10. ' =' → logprob: -16.82654571533203

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759621858596802
    2. '=' → logprob: -0.8259621858596802
    3. '=[' → logprob: -11.07596206665039
    4. '   ' → logprob: -12.82596206665039
    5. ' =[' → logprob: -12.82596206665039
    6. ' ' → logprob: -13.57596206665039
    7. '[' → logprob: -14.57596206665039
    8. ' [' → logprob: -16.32596206665039
    9. '  ' → logprob: -16.57596206665039
    10. '=[]' → logprob: -17.07596206665039

Token 416: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07889717072248459
    2. ' [' → logprob: -2.57889723777771
    3. '[' → logprob: -11.953897476196289
    4. '[b' → logprob: -15.203897476196289
    5. '[a' → logprob: -15.578897476196289
    6. '[int' → logprob: -16.20389747619629
    7. ' ' → logprob: -16.20389747619629
    8. '[j' → logprob: -16.82889747619629
    9. '   ' → logprob: -17.07889747619629
    10. '[u' → logprob: -17.32889747619629

Token 417: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0022998936474323273
    2. '[i' → logprob: -6.127299785614014
    3. ' i' → logprob: -9.127300262451172
    4. ' [' → logprob: -12.502300262451172
    5. '   ' → logprob: -13.752300262451172
    6. ' ' → logprob: -15.502300262451172
    7. '(i' → logprob: -15.502300262451172
    8. '{i' → logprob: -15.502300262451172
    9. '[' → logprob: -15.752300262451172
    10. 'b' → logprob: -16.502300262451172

Token 418: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10021411627531052
    2. 'for' → logprob: -2.3502140045166016
    3. '(i' → logprob: -12.350214004516602
    4. '[i' → logprob: -13.850214004516602
    5. 'i' → logprob: -14.100214004516602
    6. '	for' → logprob: -14.725214004516602
    7. '   ' → logprob: -15.350214004516602
    8. ' i' → logprob: -15.725214004516602
    9. '
' → logprob: -15.725214004516602
    10. ' in' → logprob: -15.725214004516602

Token 419: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021740570664405823
    2. ' i' → logprob: -4.771740436553955
    3. '1' → logprob: -5.396740436553955
    4. '[i' → logprob: -5.896740436553955
    5. 'enumer' → logprob: -5.896740436553955
    6. 'b' → logprob: -6.146740436553955
    7. ' enumerate' → logprob: -8.021740913391113
    8. ' b' → logprob: -8.521740913391113
    9. ' [' → logprob: -8.771740913391113
    10. 'range' → logprob: -10.271740913391113

Token 420: ',b' (ID: 17568)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.40741223096847534
    2. 'for' → logprob: -1.7824122905731201
    3. 'enumer' → logprob: -2.40741229057312
    4. ' for' → logprob: -3.28241229057312
    5. '[' → logprob: -3.78241229057312
    6. ' enumerate' → logprob: -5.157412052154541
    7. '==' → logprob: -5.657412052154541
    8. ' [' → logprob: -6.157412052154541
    9. ' ' → logprob: -6.282412052154541
    10. 'if' → logprob: -6.532412052154541

Token 421: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0635429173707962
    2. 'in' → logprob: -2.8135428428649902
    3. '==' → logprob: -7.31354284286499
    4. 'for' → logprob: -8.063543319702148
    5. ',' → logprob: -8.313543319702148
    6. ' for' → logprob: -8.438543319702148
    7. '=' → logprob: -9.813543319702148
    8. ' ==' → logprob: -10.063543319702148
    9. ')' → logprob: -11.188543319702148
    10. '
' → logprob: -12.188543319702148

Token 422: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -3.547789674485102e-05
    2. ' enumerate' → logprob: -10.250035285949707
    3. '.enumer' → logprob: -17.875036239624023
    4. 'enum' → logprob: -18.125036239624023
    5. 'range' → logprob: -18.125036239624023
    6. '
' → logprob: -18.250036239624023
    7. '1' → logprob: -18.625036239624023
    8. '   ' → logprob: -19.375036239624023
    9. '[' → logprob: -20.625036239624023
    10. 'evaluate' → logprob: -20.750036239624023

Token 423: '(target' (ID: 16247)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.1602678894996643
    2. '(target' → logprob: -1.9102678298950195
    3. ' target' → logprob: -10.16026782989502
    4. '[target' → logprob: -12.41026782989502
    5. 'enumer' → logprob: -15.03526782989502
    6. ',target' → logprob: -15.03526782989502
    7. '	target' → logprob: -16.160268783569336
    8. '(' → logprob: -16.285268783569336
    9. ' (' → logprob: -16.785268783569336
    10. 'range' → logprob: -16.910268783569336

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028386167832650244
    2. 'target' → logprob: -8.375284194946289
    3. '0' → logprob: -10.875284194946289
    4. '   ' → logprob: -11.500284194946289
    5. '
' → logprob: -11.875284194946289
    6. ' ' → logprob: -12.375284194946289
    7. ')' → logprob: -13.250284194946289
    8. '=' → logprob: -13.375284194946289
    9. ' target' → logprob: -13.750284194946289
    10. '       ' → logprob: -13.750284194946289

Token 425: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.081512950360775
    2. 'if' → logprob: -2.581512928009033
    3. ')' → logprob: -5.956512928009033
    4. '   ' → logprob: -10.456513404846191
    5. ']' → logprob: -13.706513404846191
    6. '    ' → logprob: -15.456513404846191
    7. ')]' → logprob: -15.706513404846191
    8. ' ' → logprob: -15.831513404846191
    9. '==' → logprob: -16.081512451171875
    10. '  ' → logprob: -16.206512451171875

Token 426: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38687145709991455
    2. 'if' → logprob: -1.1368714570999146
    3. '==' → logprob: -15.011871337890625
    4. ']' → logprob: -17.886871337890625
    5. ' ' → logprob: -18.386871337890625
    6. ')' → logprob: -18.386871337890625
    7. '	if' → logprob: -18.511871337890625
    8. '   ' → logprob: -18.761871337890625
    9. ' ==' → logprob: -19.011871337890625
    10. 'If' → logprob: -19.761871337890625

Token 427: ' b' (ID: 287)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031985383247956634
    2. ' ' → logprob: -8.125319480895996
    3. 'b' → logprob: -10.750319480895996
    4. ' b' → logprob: -13.375319480895996
    5. '==' → logprob: -14.875319480895996
    6. '   ' → logprob: -16.125320434570312
    7. '
' → logprob: -16.625320434570312
    8. '=' → logprob: -16.750320434570312
    9. ' ==' → logprob: -16.750320434570312
    10. '  ' → logprob: -17.625320434570312

Token 428: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.048590775579214096
    2. ' ==' → logprob: -3.048590660095215
    3. '=' → logprob: -13.548590660095215
    4. '1' → logprob: -13.923590660095215
    5. ']==' → logprob: -14.423590660095215
    6. ' ' → logprob: -15.423590660095215
    7. '==
' → logprob: -15.673590660095215
    8. '[' → logprob: -16.67359161376953
    9. ')==' → logprob: -16.92359161376953
    10. '```' → logprob: -16.92359161376953

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -19.750001907348633
    4. '0' → logprob: -20.000001907348633
    5. '   ' → logprob: -20.500001907348633
    6. '=' → logprob: -20.625001907348633
    7. '
' → logprob: -21.000001907348633
    8. '۱' → logprob: -21.937501907348633
    9. '  ' → logprob: -22.000001907348633
    10. '１' → logprob: -22.250001907348633

Token 430: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010759611177491024
    2. ')]' → logprob: -9.500107765197754
    3. ')' → logprob: -11.250107765197754
    4. ']
' → logprob: -11.375107765197754
    5. ' ]' → logprob: -12.500107765197754
    6. '   ' → logprob: -13.125107765197754
    7. ']

' → logprob: -13.500107765197754
    8. 'if' → logprob: -15.250107765197754
    9. '])' → logprob: -15.375107765197754
    10. ']
' → logprob: -15.750107765197754

Token 431: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6683487892150879
    2. 'cost' → logprob: -1.793348789215088
    3. 'sw' → logprob: -2.668348789215088
    4. 'result' → logprob: -2.793348789215088
    5. 'swap' → logprob: -2.793348789215088
    6. 'res' → logprob: -3.293348789215088
    7. '```' → logprob: -3.918348789215088
    8. 'min' → logprob: -4.043348789215088
    9. '
' → logprob: -4.043348789215088
    10. 'ans' → logprob: -4.668348789215088

Token 432: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.09304574131965637
    2. 'sw' → logprob: -3.593045711517334
    3. 'ans' → logprob: -4.093045711517334
    4. 'cost' → logprob: -4.093045711517334
    5. 'result' → logprob: -4.343045711517334
    6. 'swap' → logprob: -5.093045711517334
    7. '   ' → logprob: -5.718045711517334
    8. 'answer' → logprob: -6.093045711517334
    9. 'print' → logprob: -6.343045711517334
    10. '```' → logprob: -7.218045711517334

Token 433: ' #' (ID: 1069)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.5237614512443542
    2. 'res' → logprob: -1.023761510848999
    3. 'ans' → logprob: -3.523761510848999
    4. 'cost' → logprob: -4.39876127243042
    5. 'swap' → logprob: -5.14876127243042
    6. 'answer' → logprob: -8.023761749267578
    7. '```' → logprob: -8.773761749267578
    8. 'result' → logprob: -8.898761749267578
    9. '
' → logprob: -9.273761749267578
    10. ' swaps' → logprob: -10.398761749267578

Token 434: ' Compute' (ID: 45438)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.5871031284332275
    2. 'res' → logprob: -1.0871031284332275
    3. 'ans' → logprob: -2.5871031284332275
    4. 'swap' → logprob: -4.087102890014648
    5. 'cost' → logprob: -4.837102890014648
    6. 'answer' → logprob: -5.962102890014648
    7. 'result' → logprob: -5.962102890014648
    8. 'print' → logprob: -6.587102890014648
    9. 'if' → logprob: -9.087102890014648
    10. ' swaps' → logprob: -9.712102890014648

Token 435: ' minimal' (ID: 19957)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.16745364665985107
    2. 'res' → logprob: -2.5424537658691406
    3. 'ans' → logprob: -2.7924537658691406
    4. 'swap' → logprob: -4.917453765869141
    5. 'cost' → logprob: -5.542453765869141
    6. 'min' → logprob: -6.667453765869141
    7. '   ' → logprob: -7.542453765869141
    8. 'result' → logprob: -8.04245376586914
    9. ' swaps' → logprob: -8.04245376586914
    10. 'answer' → logprob: -8.54245376586914

Token 436: ' swaps' (ID: 150699)
  Prédit: '_sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sw' → logprob: -0.2542608976364136
    2. 'sw' → logprob: -1.5042608976364136
    3. ' swaps' → logprob: -7.004261016845703
    4. 'swap' → logprob: -7.129261016845703
    5. 'cost' → logprob: -8.379261016845703
    6. '(sw' → logprob: -8.879261016845703
    7. '_swap' → logprob: -9.254261016845703
    8. 'Sw' → logprob: -9.754261016845703
    9. '   ' → logprob: -9.879261016845703
    10. 'moves' → logprob: -11.879261016845703

Token 437: ' for' (ID: 395)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.12012193351984024
    2. '   ' → logprob: -2.620121955871582
    3. 'res' → logprob: -3.870121955871582
    4. 'ans' → logprob: -4.370121955871582
    5. 'swap' → logprob: -5.370121955871582
    6. 'result' → logprob: -7.245121955871582
    7. 's' → logprob: -8.120121955871582
    8. '```' → logprob: -8.120121955871582
    9. '_sw' → logprob: -8.120121955871582
    10. 'answer' → logprob: -8.370121955871582

Token 438: ' both' (ID: 2973)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.32271137833595276
    2. 'min' → logprob: -1.4477113485336304
    3. 'both' → logprob: -3.69771146774292
    4. '0' → logprob: -4.82271146774292
    5. ' target' → logprob: -5.69771146774292
    6. ' min' → logprob: -6.32271146774292
    7. 'initial' → logprob: -6.32271146774292
    8. ' both' → logprob: -7.44771146774292
    9. '_target' → logprob: -9.697710990905762
    10. 'ones' → logprob: -9.697710990905762

Token 439: ' targets' (ID: 22836)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.041437096893787384
    2. '   ' → logprob: -3.4164371490478516
    3. 'swap' → logprob: -5.541437149047852
    4. ' swaps' → logprob: -6.291437149047852
    5. 'res' → logprob: -6.791437149047852
    6. 'ans' → logprob: -8.291437149047852
    7. 'result' → logprob: -8.416437149047852
    8. 's' → logprob: -9.291437149047852
    9. '_sw' → logprob: -9.666437149047852
    10. '```' → logprob: -9.916437149047852

Token 440: '
' (ID: 198)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.0837760865688324
    2. '   ' → logprob: -2.8337759971618652
    3. 'res' → logprob: -4.458775997161865
    4. 'swap' → logprob: -4.958775997161865
    5. ' swaps' → logprob: -7.208775997161865
    6. 'ans' → logprob: -7.458775997161865
    7. 'result' → logprob: -7.458775997161865
    8. '
' → logprob: -8.083776473999023
    9. '```' → logprob: -8.083776473999023
    10. '    
' → logprob: -8.708776473999023

Token 441: '   ' (ID: 271)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.05421379581093788
    2. '   ' → logprob: -3.304213762283325
    3. 'res' → logprob: -4.929214000701904
    4. 'swap' → logprob: -5.054214000701904
    5. '```' → logprob: -7.054214000701904
    6. ' swaps' → logprob: -7.554214000701904
    7. 'ans' → logprob: -7.804214000701904
    8. 'result' → logprob: -8.179213523864746
    9. '
' → logprob: -9.054213523864746
    10. '    
' → logprob: -9.304213523864746

Token 442: ' swaps' (ID: 150699)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.010155864991247654
    2. 'res' → logprob: -5.01015567779541
    3. 'swap' → logprob: -6.01015567779541
    4. 'ans' → logprob: -7.01015567779541
    5. '   ' → logprob: -10.88515567779541
    6. '```' → logprob: -11.13515567779541
    7. 'cost' → logprob: -11.26015567779541
    8. ' swaps' → logprob: -11.38515567779541
    9. 'result' → logprob: -12.01015567779541
    10. 'min' → logprob: -12.26015567779541

Token 443: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48754921555519104
    2. '_' → logprob: -1.4875491857528687
    3. '_min' → logprob: -2.612549304962158
    4. ' =' → logprob: -2.737549304962158
    5. '=' → logprob: -4.112549304962158
    6. '_to' → logprob: -5.737549304962158
    7. '_target' → logprob: -6.862549304962158
    8. '_zero' → logprob: -7.987549304962158
    9. '_for' → logprob: -7.987549304962158
    10. '=min' → logprob: -9.487548828125

Token 444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759445428848267
    2. ' =' → logprob: -0.8259445428848267
    3. '=min' → logprob: -12.825944900512695
    4. '   ' → logprob: -13.450944900512695
    5. ')' → logprob: -14.450944900512695
    6. ')=' → logprob: -16.200944900512695
    7. '=sum' → logprob: -16.450944900512695
    8. ',' → logprob: -17.325944900512695
    9. '(' → logprob: -17.450944900512695
    10. ' ' → logprob: -17.575944900512695

Token 445: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.627176768844947e-05
    2. ' min' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.25009536743164
    4. '	min' → logprob: -19.50009536743164
    5. '  ' → logprob: -20.62509536743164
    6. '(min' → logprob: -20.75009536743164
    7. ' ' → logprob: -20.87509536743164
    8. 'max' → logprob: -21.87509536743164
    9. 'minimum' → logprob: -22.00009536743164
    10. '    ' → logprob: -22.50009536743164

Token 446: '_sw' (ID: 84453)
  Prédit: '_sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sw' → logprob: -5.319370302458992e-06
    2. 'sw' → logprob: -12.250005722045898
    3. '_swap' → logprob: -15.125005722045898
    4. ' swaps' → logprob: -16.1250057220459
    5. 'swap' → logprob: -16.5000057220459
    6. '(' → logprob: -17.0000057220459
    7. 'Sw' → logprob: -17.2500057220459
    8. '   ' → logprob: -17.2500057220459
    9. '```' → logprob: -17.6250057220459
    10. '\' → logprob: -17.6250057220459

Token 447: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -6.392202976712724e-06
    2. 'ap' → logprob: -13.000006675720215
    3. 'ps' → logprob: -14.000006675720215
    4. '   ' → logprob: -14.125006675720215
    5. '_' → logprob: -14.375006675720215
    6. '
' → logprob: -15.125006675720215
    7. '[' → logprob: -15.625006675720215
    8. '\' → logprob: -15.750006675720215
    9. '```' → logprob: -15.750006675720215
    10. 'apses' → logprob: -15.875006675720215

Token 448: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -17.25
    3. '   ' → logprob: -17.5
    4. '(one' → logprob: -19.375
    5. '(
' → logprob: -19.75
    6. 'ones' → logprob: -20.375
    7. '```' → logprob: -20.375
    8. '((' → logprob: -21.125
    9. ')' → logprob: -21.375
    10. ' ' → logprob: -21.75

Token 449: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -2.236549335066229e-05
    2. '(' → logprob: -11.250021934509277
    3. ' ones' → logprob: -11.875021934509277
    4. '   ' → logprob: -13.375021934509277
    5. ')' → logprob: -14.125021934509277
    6. 'ONES' → logprob: -18.125022888183594
    7. '.ones' → logprob: -18.250022888183594
    8. '       ' → logprob: -18.625022888183594
    9. '```' → logprob: -19.125022888183594
    10. 'ons' → logprob: -19.125022888183594

Token 450: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.012834406457841396
    2. '_initial' → logprob: -5.137834548950195
    3. 'initial' → logprob: -5.637834548950195
    4. 'init' → logprob: -5.887834548950195
    5. 'bits' → logprob: -8.387834548950195
    6. '(bits' → logprob: -9.387834548950195
    7. '(initial' → logprob: -9.637834548950195
    8. '_bits' → logprob: -10.137834548950195
    9. '_ini' → logprob: -10.262834548950195
    10. '_' → logprob: -10.887834548950195

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1041145626222715e-05
    2. ' ,' → logprob: -11.500011444091797
    3. ',
' → logprob: -14.500011444091797
    4. '   ' → logprob: -15.000011444091797
    5. ')' → logprob: -18.125011444091797
    6. ',
' → logprob: -18.375011444091797
    7. '(' → logprob: -18.375011444091797
    8. ',

' → logprob: -18.625011444091797
    9. '),' → logprob: -19.625011444091797
    10. '       ' → logprob: -19.750011444091797

Token 452: ' ones' (ID: 8104)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.0005530327325686812
    2. ' ones' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.875553131103516
    4. ')' → logprob: -18.375553131103516
    5. '.ones' → logprob: -18.875553131103516
    6. 'one' → logprob: -19.625553131103516
    7. 'ONES' → logprob: -19.875553131103516
    8. '[' → logprob: -20.500553131103516
    9. '```' → logprob: -21.000553131103516
    10. '       ' → logprob: -21.125553131103516

Token 453: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.5759429931640625
    2. 'target' → logprob: -0.8259429931640625
    3. '0' → logprob: -12.950942993164062
    4. 'arget' → logprob: -14.200942993164062
    5. 'Target' → logprob: -15.325942993164062
    6. 'TARGET' → logprob: -16.700942993164062
    7. '(target' → logprob: -16.700942993164062
    8. ' target' → logprob: -16.700942993164062
    9. 't' → logprob: -17.200942993164062
    10. '	target' → logprob: -17.825942993164062

Token 454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019341122824698687
    2. '1' → logprob: -6.251934051513672
    3. '[' → logprob: -12.626934051513672
    4. ' ' → logprob: -13.376934051513672
    5. ')' → logprob: -15.126934051513672
    6. '   ' → logprob: -15.626934051513672
    7. '```' → logprob: -16.501934051513672
    8. '01' → logprob: -17.001934051513672
    9. 'ones' → logprob: -17.376934051513672
    10. '_' → logprob: -17.376934051513672

Token 455: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931524872779846
    2. ')
' → logprob: -0.6931524872779846
    3. ')
' → logprob: -12.81815242767334
    4. '   ' → logprob: -13.56815242767334
    5. ')

' → logprob: -13.81815242767334
    6. ' )
' → logprob: -15.69315242767334
    7. '),' → logprob: -17.068153381347656
    8. ' )' → logprob: -17.068153381347656
    9. ')`
' → logprob: -17.318153381347656
    10. ')
/' → logprob: -18.443153381347656

Token 456: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005890041124075651
    2. '  
' → logprob: -5.880889892578125
    3. 'sw' → logprob: -6.255889892578125
    4. ' 
' → logprob: -8.505889892578125
    5. '    
' → logprob: -8.630889892578125
    6. '
' → logprob: -8.755889892578125
    7. ' swaps' → logprob: -8.755889892578125
    8. '\n' → logprob: -9.255889892578125
    9. '```' → logprob: -9.380889892578125
    10. ')
' → logprob: -10.005889892578125

Token 457: ' swaps' (ID: 150699)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.004908296745270491
    2. '
' → logprob: -5.754908084869385
    3. ' swaps' → logprob: -6.879908084869385
    4. '   ' → logprob: -7.379908084869385
    5. '    
' → logprob: -9.879908561706543
    6. 'swap' → logprob: -11.629908561706543
    7. '_sw' → logprob: -12.879908561706543
    8. '```' → logprob: -13.004908561706543
    9. '  
' → logprob: -13.129908561706543
    10. '-sw' → logprob: -13.629908561706543

Token 458: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23023061454296112
    2. '_' → logprob: -1.6052305698394775
    3. '=' → logprob: -5.480230808258057
    4. '1' → logprob: -8.480230331420898
    5. ' =' → logprob: -8.980230331420898
    6. '_=' → logprob: -9.230230331420898
    7. '```' → logprob: -9.355230331420898
    8. '(' → logprob: -9.855230331420898
    9. ')' → logprob: -11.605230331420898
    10. '=_' → logprob: -11.855230331420898

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021486133337021
    2. '=' → logprob: -2.350214958190918
    3. ')' → logprob: -11.975214958190918
    4. '(' → logprob: -14.350214958190918
    5. ',' → logprob: -14.850214958190918
    6. ' ' → logprob: -15.600214958190918
    7. ' =)' → logprob: -15.600214958190918
    8. '=min' → logprob: -15.725214958190918
    9. ')=' → logprob: -16.3502140045166
    10. '<|end|>' → logprob: -16.4752140045166

Token 460: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004078401252627373
    2. ' min' → logprob: -5.504078388214111
    3. '(min' → logprob: -19.379077911376953
    4. '   ' → logprob: -19.879077911376953
    5. '	min' → logprob: -20.254077911376953
    6. '[min' → logprob: -21.004077911376953
    7. 'm' → logprob: -21.129077911376953
    8. 'max' → logprob: -21.379077911376953
    9. '  ' → logprob: -22.254077911376953
    10. ' ' → logprob: -22.254077911376953

Token 461: '_sw' (ID: 84453)
  Prédit: '_sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sw' → logprob: -1.1041145626222715e-05
    2. 'sw' → logprob: -11.500011444091797
    3. 'Sw' → logprob: -14.875011444091797
    4. 'swap' → logprob: -15.625011444091797
    5. '_swap' → logprob: -15.625011444091797
    6. '0' → logprob: -16.125011444091797
    7. '(' → logprob: -17.500011444091797
    8. 's' → logprob: -17.750011444091797
    9. ' swaps' → logprob: -17.750011444091797
    10. '	sw' → logprob: -17.750011444091797

Token 462: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.2555924355983734
    2. '_sw' → logprob: -1.5055924654006958
    3. 'sw' → logprob: -5.880592346191406
    4. 'ap' → logprob: -7.130592346191406
    5. 'Sw' → logprob: -11.255592346191406
    6. 'apped' → logprob: -11.880592346191406
    7. 'w' → logprob: -12.005592346191406
    8. 'ips' → logprob: -12.255592346191406
    9. ' swaps' → logprob: -12.255592346191406
    10. '_swap' → logprob: -12.630592346191406

Token 463: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(
' → logprob: -20.75
    3. '```' → logprob: -21.5
    4. '(one' → logprob: -21.875
    5. ' (' → logprob: -22.375
    6. '(`' → logprob: -22.875
    7. '[' → logprob: -23.125
    8. 'ones' → logprob: -23.5
    9. '()' → logprob: -23.875
    10. '`' → logprob: -23.875

Token 464: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.00027813989436253905
    2. '(' → logprob: -8.25027847290039
    3. ' ones' → logprob: -11.00027847290039
    4. '[' → logprob: -15.75027847290039
    5. '.ones' → logprob: -17.50027847290039
    6. ')' → logprob: -18.50027847290039
    7. 'one' → logprob: -20.00027847290039
    8. '(
' → logprob: -20.12527847290039
    9. '```' → logprob: -20.37527847290039
    10. 'ONES' → logprob: -20.62527847290039

Token 465: '_init' (ID: 13909)
  Prédit: '_init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_init' → logprob: -0.00023441045777872205
    2. 'init' → logprob: -8.375234603881836
    3. '[' → logprob: -13.375234603881836
    4. '_initial' → logprob: -13.875234603881836
    5. '_ini' → logprob: -15.125234603881836
    6. '(' → logprob: -15.500234603881836
    7. 'ones' → logprob: -15.500234603881836
    8. '```' → logprob: -15.750234603881836
    9. '1' → logprob: -16.500234603881836
    10. '(init' → logprob: -16.500234603881836

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. '(' → logprob: -10.500032424926758
    3. ' ,' → logprob: -12.375032424926758
    4. ',
' → logprob: -16.250032424926758
    5. '(),' → logprob: -16.375032424926758
    6. ')' → logprob: -18.000032424926758
    7. ' (' → logprob: -18.375032424926758
    8. '[' → logprob: -19.250032424926758
    9. '   ' → logprob: -19.625032424926758
    10. '),' → logprob: -19.750032424926758

Token 467: ' ones' (ID: 8104)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.00020354038861114532
    2. ' ones' → logprob: -8.500203132629395
    3. '.ones' → logprob: -19.25020408630371
    4. '   ' → logprob: -20.12520408630371
    5. '[' → logprob: -20.62520408630371
    6. 'one' → logprob: -21.00020408630371
    7. 'ONES' → logprob: -21.12520408630371
    8. '```' → logprob: -21.75020408630371
    9. ')' → logprob: -22.50020408630371
    10. 'ons' → logprob: -22.87520408630371

Token 468: '_target' (ID: 24705)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5759803652763367
    2. '_target' → logprob: -0.8259803652763367
    3. '1' → logprob: -10.950980186462402
    4. 'arget' → logprob: -11.825980186462402
    5. '[target' → logprob: -11.825980186462402
    6. '[' → logprob: -12.950980186462402
    7. '-target' → logprob: -13.075980186462402
    8. '(target' → logprob: -14.075980186462402
    9. ',target' → logprob: -14.075980186462402
    10. ' target' → logprob: -14.075980186462402

Token 469: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. ')' → logprob: -12.125007629394531
    3. 'target' → logprob: -13.750007629394531
    4. '_' → logprob: -15.375007629394531
    5. ' ' → logprob: -15.500007629394531
    6. '```' → logprob: -15.500007629394531
    7. ']' → logprob: -16.37500762939453
    8. '-' → logprob: -16.62500762939453
    9. '_target' → logprob: -16.75000762939453
    10. '[' → logprob: -16.87500762939453

Token 470: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21307432651519775
    2. ')
' → logprob: -1.7130743265151978
    3. '   ' → logprob: -4.463074207305908
    4. '    
' → logprob: -10.338074684143066
    5. ')
' → logprob: -11.463074684143066
    6. '
' → logprob: -11.713074684143066
    7. ')

' → logprob: -11.713074684143066
    8. ' )' → logprob: -13.838074684143066
    9. '  
' → logprob: -14.088074684143066
    10. ' )
' → logprob: -14.588074684143066

Token 471: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4960521161556244
    2. '
' → logprob: -0.9960521459579468
    3. 'return' → logprob: -4.496052265167236
    4. 'print' → logprob: -5.246052265167236
    5. '```' → logprob: -5.996052265167236
    6. '    
' → logprob: -6.621052265167236
    7. 'result' → logprob: -6.871052265167236
    8. ' return' → logprob: -8.496051788330078
    9. '  
' → logprob: -9.496051788330078
    10. '`
' → logprob: -10.496051788330078

Token 472: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12965978682041168
    2. '   ' → logprob: -2.12965989112854
    3. '```' → logprob: -6.129659652709961
    4. '
' → logprob: -7.629659652709961
    5. 'return' → logprob: -10.754659652709961
    6. 'result' → logprob: -10.754659652709961
    7. '    
' → logprob: -11.754659652709961
    8. '``' → logprob: -11.879659652709961
    9. ' print' → logprob: -12.129659652709961
    10. 'answer' → logprob: -13.754659652709961

Token 473: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000719222822226584
    2. '```' → logprob: -8.00071907043457
    3. 'result' → logprob: -8.62571907043457
    4. 'return' → logprob: -9.00071907043457
    5. '   ' → logprob: -10.12571907043457
    6. '
' → logprob: -10.50071907043457
    7. 'answer' → logprob: -12.12571907043457
    8. '``' → logprob: -13.37571907043457
    9. 'res' → logprob: -13.50071907043457
    10. ' print' → logprob: -13.50071907043457

Token 474: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003112711710855365
    2. 'return' → logprob: -8.500310897827148
    3. 'result' → logprob: -9.500310897827148
    4. '   ' → logprob: -10.625310897827148
    5. 'answer' → logprob: -12.375310897827148
    6. ' print' → logprob: -13.375310897827148
    7. '
' → logprob: -13.500310897827148
    8. '```' → logprob: -14.375310897827148
    9. 'ans' → logprob: -15.000310897827148
    10. 'if' → logprob: -15.375310897827148

Token 475: ' minimum' (ID: 11085)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06266189366579056
    2. '   ' → logprob: -2.81266188621521
    3. '```' → logprob: -7.312662124633789
    4. '
' → logprob: -10.812662124633789
    5. '    
' → logprob: -12.812662124633789
    6. '``' → logprob: -13.062662124633789
    7. ' print' → logprob: -13.312662124633789
    8. '	print' → logprob: -16.43766212463379
    9. '
' → logprob: -16.56266212463379
    10. '`' → logprob: -16.81266212463379

Token 476: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05198385566473007
    2. '   ' → logprob: -3.0519838333129883
    3. '(min' → logprob: -6.051983833312988
    4. '
' → logprob: -8.801983833312988
    5. 'min' → logprob: -8.801983833312988
    6. '()
' → logprob: -8.801983833312988
    7. '(' → logprob: -9.051983833312988
    8. '()' → logprob: -9.426983833312988
    9. ' print' → logprob: -9.426983833312988
    10. '```' → logprob: -9.426983833312988

Token 477: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08423499763011932
    2. '   ' → logprob: -2.5842349529266357
    3. '```' → logprob: -5.834235191345215
    4. '
' → logprob: -6.084235191345215
    5. '``' → logprob: -9.459235191345215
    6. '    
' → logprob: -10.209235191345215
    7. ' print' → logprob: -11.709235191345215
    8. '`' → logprob: -13.584235191345215
    9. 'import' → logprob: -14.584235191345215
    10. '`
' → logprob: -14.709235191345215

Token 478: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00011105302110081539
    2. '```' → logprob: -9.500110626220703
    3. '   ' → logprob: -10.250110626220703
    4. '``' → logprob: -15.000110626220703
    5. ' print' → logprob: -15.000110626220703
    6. '
' → logprob: -16.250110626220703
    7. '`' → logprob: -18.000110626220703
    8. '    
' → logprob: -19.875110626220703
    9. '`
' → logprob: -21.250110626220703
    10. 'import' → logprob: -22.000110626220703

Token 479: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.500001907348633
    3. 'min' → logprob: -14.000001907348633
    4. '(m' → logprob: -19.500001907348633
    5. '(
' → logprob: -19.625001907348633
    6. ' min' → logprob: -19.625001907348633
    7. '=min' → logprob: -19.625001907348633
    8. '(max' → logprob: -20.000001907348633
    9. '[min' → logprob: -20.000001907348633
    10. '	min' → logprob: -21.625001907348633

Token 480: '(sw' (ID: 132758)
  Prédit: '(sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sw' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.500000953674316
    3. ')' → logprob: -16.25
    4. '(s' → logprob: -16.375
    5. '	sw' → logprob: -16.5
    6. 'sw' → logprob: -17.25
    7. '/sw' → logprob: -18.375
    8. ' (' → logprob: -18.5
    9. '(
' → logprob: -18.5
    10. '_sw' → logprob: -18.875

Token 481: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -1.8193366486229934e-05
    2. '(' → logprob: -11.375018119812012
    3. 'ap' → logprob: -13.250018119812012
    4. '(sw' → logprob: -13.375018119812012
    5. '[' → logprob: -13.500018119812012
    6. '{' → logprob: -14.125018119812012
    7. '
' → logprob: -14.250018119812012
    8. '(
' → logprob: -16.375019073486328
    9. '{
' → logprob: -16.375019073486328
    10. '2' → logprob: -16.500019073486328

Token 482: '0' (ID: 15)
  Prédit: '(sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sw' → logprob: -0.4743642807006836
    2. '0' → logprob: -0.9743642807006836
    3. 'sw' → logprob: -8.974364280700684
    4. '(s' → logprob: -9.224364280700684
    5. '(' → logprob: -10.599364280700684
    6. '1' → logprob: -11.224364280700684
    7. ' swaps' → logprob: -11.724364280700684
    8. ')' → logprob: -12.849364280700684
    9. '	sw' → logprob: -12.974364280700684
    10. '{' → logprob: -13.224364280700684

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ' ,' → logprob: -12.000007629394531
    3. '(sw' → logprob: -14.000007629394531
    4. ',
' → logprob: -16.62500762939453
    5. '   ' → logprob: -16.87500762939453
    6. ' swaps' → logprob: -18.75000762939453
    7. 'sw' → logprob: -19.62500762939453
    8. ')' → logprob: -20.00000762939453
    9. ',min' → logprob: -20.00000762939453
    10. ',s' → logprob: -20.00000762939453

Token 484: ' swaps' (ID: 150699)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sw' → logprob: -5.080963092041202e-06
    2. ' swaps' → logprob: -12.250004768371582
    3. 'swap' → logprob: -16.1250057220459
    4. 'Sw' → logprob: -17.0000057220459
    5. '(sw' → logprob: -17.5000057220459
    6. '_sw' → logprob: -18.1250057220459
    7. '-sw' → logprob: -18.3750057220459
    8. '	sw' → logprob: -18.7500057220459
    9. '   ' → logprob: -20.5000057220459
    10. '/sw' → logprob: -20.8750057220459

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. 'sw' → logprob: -12.125006675720215
    3. '(sw' → logprob: -14.500006675720215
    4. 's' → logprob: -15.500006675720215
    5. ' swaps' → logprob: -15.875006675720215
    6. '   ' → logprob: -16.00000762939453
    7. ')' → logprob: -16.12500762939453
    8. '
' → logprob: -16.12500762939453
    9. 'aps' → logprob: -16.37500762939453
    10. ',' → logprob: -16.37500762939453

Token 486: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008615635335445404
    2. ')' → logprob: -4.758615493774414
    3. ')))' → logprob: -14.383615493774414
    4. '))
' → logprob: -15.383615493774414
    5. '()))' → logprob: -16.133615493774414
    6. '   ' → logprob: -16.883615493774414
    7. ' ))' → logprob: -17.258615493774414
    8. '})' → logprob: -17.508615493774414
    9. '()' → logprob: -17.883615493774414
    10. ')}' → logprob: -17.883615493774414

Token 487: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.048711929470300674
    2. '__' → logprob: -3.0487120151519775
    3. '_name' → logprob: -9.298711776733398
    4. '_' → logprob: -11.048711776733398
    5. 'name' → logprob: -11.298711776733398
    6. '___' → logprob: -12.798711776733398
    7. ' _' → logprob: -14.923711776733398
    8. ' ' → logprob: -14.923711776733398
    9. 'Name' → logprob: -15.423711776733398
    10. '/__' → logprob: -15.423711776733398

Token 489: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.023233598098158836
    2. ' ==' → logprob: -4.398233413696289
    3. '==' → logprob: -5.273233413696289
    4. 'name' → logprob: -5.273233413696289
    5. ' __' → logprob: -8.648233413696289
    6. '=="' → logprob: -9.023233413696289
    7. 'if' → logprob: -10.273233413696289
    8. 'main' → logprob: -10.398233413696289
    9. '```' → logprob: -11.023233413696289
    10. '=='' → logprob: -11.648233413696289

Token 490: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.534558552724775e-05
    2. '__.__' → logprob: -11.125025749206543
    3. '==' → logprob: -12.625025749206543
    4. '___' → logprob: -13.375025749206543
    5. '=="' → logprob: -13.625025749206543
    6. '__('' → logprob: -13.750025749206543
    7. '```' → logprob: -14.250025749206543
    8. '____' → logprob: -14.375025749206543
    9. ' ==' → logprob: -14.625025749206543
    10. '__["' → logprob: -14.750025749206543

Token 491: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3471893072128296
    2. '==' → logprob: -1.7221893072128296
    3. '=="' → logprob: -2.847189426422119
    4. ' ==' → logprob: -3.097189426422119
    5. '=='' → logprob: -4.472189426422119
    6. '___' → logprob: -11.097188949584961
    7. '===' → logprob: -11.847188949584961
    8. '=' → logprob: -12.347188949584961
    9. '__.__' → logprob: -12.472188949584961
    10. '==='' → logprob: -12.597188949584961

Token 492: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014167269691824913
    2. ''' → logprob: -4.264167308807373
    3. '__' → logprob: -13.264166831970215
    4. ' "__' → logprob: -13.264166831970215
    5. '"user' → logprob: -16.13916778564453
    6. '"name' → logprob: -16.76416778564453
    7. ' '__' → logprob: -17.51416778564453
    8. '("__' → logprob: -18.01416778564453
    9. '   ' → logprob: -18.38916778564453
    10. '"class' → logprob: -18.51416778564453

Token 493: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.697387966094539e-05
    2. '"' → logprob: -10.000086784362793
    3. '__' → logprob: -10.125086784362793
    4. ''' → logprob: -13.875086784362793
    5. 'name' → logprob: -15.000086784362793
    6. ' main' → logprob: -16.75008773803711
    7. '_main' → logprob: -17.87508773803711
    8. '	main' → logprob: -19.00008773803711
    9. '=="' → logprob: -19.12508773803711
    10. '__":
' → logprob: -19.37508773803711

Token 494: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.014511113055050373
    2. '__' → logprob: -4.2645111083984375
    3. '__':
' → logprob: -8.014511108398438
    4. '__:' → logprob: -11.389511108398438
    5. '__.' → logprob: -13.014511108398438
    6. '__["' → logprob: -13.264511108398438
    7. '__.__' → logprob: -14.389511108398438
    8. '__
' → logprob: -15.764511108398438
    9. '__
' → logprob: -15.889511108398438
    10. '__",' → logprob: -15.889511108398438

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02372814156115055
    2. 'solve' → logprob: -3.773728132247925
    3. ' solve' → logprob: -8.023728370666504
    4. '	s' → logprob: -8.898728370666504
    5. '.solve' → logprob: -11.523728370666504
    6. '```' → logprob: -12.273728370666504
    7. ' ' → logprob: -13.398728370666504
    8. '   ' → logprob: -14.273728370666504
    9. '\t' → logprob: -14.398728370666504
    10. '\' → logprob: -15.273728370666504

Token 496: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -9.088346359931165e-07
    2. ' solve' → logprob: -14.250000953674316
    3. '   ' → logprob: -15.375000953674316
    4. '.solve' → logprob: -17.875
    5. 'resolve' → logprob: -18.375
    6. 'import' → logprob: -19.625
    7. '```' → logprob: -21.375
    8. 'read' → logprob: -21.625
    9. 'simulate' → logprob: -21.875
    10. 'save' → logprob: -22.125

Token 497: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 495
Tokens correctement prédits (1ère position, stricte): 158
Tokens correctement prédits (1ère position, avec adaptation): 169
Tokens correctement prédits (top 10): 381
Précision stricte (1ère position): 31.92%
Précision adaptée (1ère position): 34.14%
Précision (top 10): 76.97%
================================================================================
