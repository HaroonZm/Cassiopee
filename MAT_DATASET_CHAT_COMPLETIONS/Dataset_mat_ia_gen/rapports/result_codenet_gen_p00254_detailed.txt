================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def kaprekar_routine(n_str):
    """
    Fonction qui calcule le nombre d'itérations pour atteindre 6174 à partir du nombre à 4 chiffres n_str
    en appliquant la routine de Kaprekar.
    Si tous les chiffres sont identiques, retourne None indiquant NA.
    """
    # Vérification si tous les chiffres sont identiques -> retourner None
    if len(set(n_str)) == 1:
        return None

    count = 0
    current = n_str

    while current != "6174":
        # Trier les chiffres de current dans l'ordre décroissant (L)
        L = "".join(sorted(current, reverse=True))
        # Trier les chiffres de current dans l'ordre croissant (S)
        S = "".join(sorted(current))
        # Calculer la différence L - S (en nombre entier)
        diff = int(L) - int(S)
        # Former la nouvelle chaîne de 4 chiffres, en ajoutant des zéros à gauche si nécessaire
        current = f"{diff:04d}"
        count += 1

    return count


def main():
    import sys

    for line in sys.stdin:
        n_str = line.strip()
        if n_str == "0000":
            break

        # Si la chaîne est plus courte que 4, on la remplit avec des 0 à gauche (cas prévu)
        n_str = n_str.zfill(4)

        result = kaprekar_routine(n_str)
        if result is None:
            print("NA")
        else:
            print(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' kap' (ID: 10806)
  → Token d'amorce (pas de prédiction)

Token 2: 're' (ID: 264)
  → Token d'amorce (pas de prédiction)

Token 3: 'kar' (ID: 10428)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2732408940792084
    2. 't' → logprob: -2.523240804672241
    3. 'ton' → logprob: -3.773240804672241
    4. '```' → logprob: -3.773240804672241
    5. '__' → logprob: -4.14824104309082
    6. 'l' → logprob: -4.77324104309082
    7. 'v' → logprob: -5.02324104309082
    8. 'e' → logprob: -5.39824104309082
    9. 'etha' → logprob: -5.52324104309082
    10. 'h' → logprob: -5.52324104309082

Token 4: '_r' (ID: 3442)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10353724658489227
    2. '_' → logprob: -2.3535373210906982
    3. '():' → logprob: -6.978537082672119
    4. '```' → logprob: -7.353537082672119
    5. '_:' → logprob: -8.103537559509277
    6. '(
' → logprob: -8.353537559509277
    7. '(:' → logprob: -8.978537559509277
    8. '_function' → logprob: -9.103537559509277
    9. '(_' → logprob: -9.228537559509277
    10. ''s' → logprob: -9.478537559509277

Token 5: 'outine' (ID: 25038)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017540793865919113
    2. '_' → logprob: -4.39254093170166
    3. '(a' → logprob: -6.14254093170166
    4. 'a' → logprob: -7.01754093170166
    5. '(_' → logprob: -7.76754093170166
    6. 'e' → logprob: -8.01754093170166
    7. '_a' → logprob: -8.14254093170166
    8. '```' → logprob: -8.51754093170166
    9. '(_)' → logprob: -8.76754093170166
    10. '(
' → logprob: -9.76754093170166

Token 6: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005573928821831942
    2. '_' → logprob: -5.255573749542236
    3. '(:' → logprob: -8.755574226379395
    4. ':' → logprob: -10.005574226379395
    5. '```' → logprob: -10.755574226379395
    6. '_:' → logprob: -10.880574226379395
    7. '(_:' → logprob: -10.880574226379395
    8. ' (' → logprob: -11.005574226379395
    9. '():' → logprob: -11.255574226379395
    10. '(_' → logprob: -11.505574226379395

Token 7: '_str' (ID: 6182)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1131160706281662
    2. ')' → logprob: -2.2381160259246826
    3. ':' → logprob: -8.488116264343262
    4. '(' → logprob: -10.613116264343262
    5. '_' → logprob: -11.238116264343262
    6. ',' → logprob: -11.613116264343262
    7. '):
' → logprob: -11.988116264343262
    8. '```' → logprob: -11.988116264343262
    9. '():' → logprob: -12.488116264343262
    10. '=' → logprob: -12.613116264343262

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014397254213690758
    2. ')' → logprob: -4.264397144317627
    3. ':' → logprob: -8.764397621154785
    4. '):
' → logprob: -10.889397621154785
    5. ''):' → logprob: -11.014397621154785
    6. ',' → logprob: -12.264397621154785
    7. '[' → logprob: -12.264397621154785
    8. '```' → logprob: -12.264397621154785
    9. '"):' → logprob: -12.764397621154785
    10. '**' → logprob: -12.764397621154785

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13286805152893066
    2. ':' → logprob: -2.1328680515289307
    3. '```' → logprob: -5.882867813110352
    4. ':
' → logprob: -6.507867813110352
    5. '    
' → logprob: -7.007867813110352
    6. ':\' → logprob: -9.007867813110352
    7. ' :' → logprob: -9.632867813110352
    8. '):' → logprob: -9.632867813110352
    9. '"' → logprob: -10.007867813110352
    10. '  
' → logprob: -10.257867813110352

Token 10: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4600638747215271
    2. '```' → logprob: -1.8350639343261719
    3. 'n' → logprob: -2.335063934326172
    4. '``' → logprob: -2.710063934326172
    5. '    
' → logprob: -3.710063934326172
    6. '\n' → logprob: -4.835063934326172
    7. '`' → logprob: -5.585063934326172
    8. '   
' → logprob: -6.710063934326172
    9. '\' → logprob: -6.710063934326172
    10. '
' → logprob: -7.085063934326172

Token 11: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12751099467277527
    2. '   ' → logprob: -2.7525110244750977
    3. ' """' → logprob: -4.627511024475098
    4. '"""' → logprob: -4.752511024475098
    5. '\n' → logprob: -4.877511024475098
    6. '#' → logprob: -5.377511024475098
    7. 'r' → logprob: -5.502511024475098
    8. ' n' → logprob: -5.752511024475098
    9. 'd' → logprob: -5.877511024475098
    10. ' """
' → logprob: -6.127511024475098

Token 12: ' Fonction' (ID: 189149)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7754892706871033
    2. '   ' → logprob: -1.525489330291748
    3. 'Calculate' → logprob: -2.400489330291748
    4. ' """' → logprob: -3.025489330291748
    5. 'Generate' → logprob: -3.150489330291748
    6. '"""
' → logprob: -4.150489330291748
    7. 'Perform' → logprob: -4.150489330291748
    8. 'Calcul' → logprob: -4.400489330291748
    9. 'C' → logprob: -4.525489330291748
    10. ' ' → logprob: -4.650489330291748

Token 13: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21799635887145996
    2. '   ' → logprob: -2.46799635887146
    3. ' de' → logprob: -3.09299635887146
    4. ')' → logprob: -5.342996597290039
    5. '<|end|>' → logprob: -5.342996597290039
    6. ' )' → logprob: -5.467996597290039
    7. '```' → logprob: -5.467996597290039
    8. ' ```' → logprob: -5.467996597290039
    9. '  ' → logprob: -5.592996597290039
    10. '<|end|>' → logprob: -5.842996597290039

Token 14: ' calc' (ID: 25691)
  Prédit: ' réalise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réalise' → logprob: -0.8713362812995911
    2. ' effect' → logprob: -1.8713362216949463
    3. ' prend' → logprob: -2.1213362216949463
    4. ' calc' → logprob: -2.2463362216949463
    5. ' ' → logprob: -2.7463362216949463
    6. ' transforme' → logprob: -3.1213362216949463
    7. '   ' → logprob: -3.9963362216949463
    8. ' continue' → logprob: -3.9963362216949463
    9. ' retourne' → logprob: -4.496336460113525
    10. ' impl' → logprob: -4.996336460113525

Token 15: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.03717983886599541
    2. 't' → logprob: -4.412179946899414
    3. 'é' → logprob: -4.787179946899414
    4. 'ique' → logprob: -5.412179946899414
    5. 'it' → logprob: -5.537179946899414
    6. 'ue' → logprob: -6.662179946899414
    7. 'ult' → logprob: -6.912179946899414
    8. 'ère' → logprob: -6.912179946899414
    9. 'él' → logprob: -7.537179946899414
    10. 'cule' → logprob: -7.662179946899414

Token 16: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18926846981048584
    2. ' la' → logprob: -2.8142685890197754
    3. 's' → logprob: -3.0642685890197754
    4. ' le' → logprob: -3.5642685890197754
    5. ' l' → logprob: -4.314268589019775
    6. 'e' → logprob: -4.939268589019775
    7. ' the' → logprob: -5.939268589019775
    8. '<|end|>' → logprob: -5.939268589019775
    9. '  ' → logprob: -6.564268589019775
    10. '```' → logprob: -6.689268589019775

Token 17: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45150187611579895
    2. ' nombre' → logprob: -1.3265018463134766
    3. ' prochain' → logprob: -2.9515018463134766
    4. '   ' → logprob: -3.7015018463134766
    5. '  ' → logprob: -4.826501846313477
    6. ' suivant' → logprob: -5.326501846313477
    7. ' résultat' → logprob: -5.576501846313477
    8. 'nombre' → logprob: -7.076501846313477
    9. ' reste' → logprob: -8.201501846313477
    10. ' next' → logprob: -8.201501846313477

Token 18: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00491386977955699
    2. ' de' → logprob: -6.504913806915283
    3. '  ' → logprob: -7.129913806915283
    4. 's' → logprob: -7.879913806915283
    5. ' d' → logprob: -8.004914283752441
    6. ' suivant' → logprob: -8.004914283752441
    7. ''' → logprob: -8.629914283752441
    8. 'r' → logprob: -8.879914283752441
    9. 'd' → logprob: -9.129914283752441
    10. '   ' → logprob: -9.379914283752441

Token 19: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.33874422311782837
    2. ' it' → logprob: -2.2137441635131836
    3. 'e' → logprob: -3.3387441635131836
    4. '_iterations' → logprob: -3.5887441635131836
    5. ''é' → logprob: -3.9637441635131836
    6. 'é' → logprob: -4.088744163513184
    7. ' espaces' → logprob: -4.213744163513184
    8. ''espace' → logprob: -4.463744163513184
    9. ''ét' → logprob: -4.963744163513184
    10. ' iterations' → logprob: -5.088744163513184

Token 20: 'it' (ID: 278)
  Prédit: ' it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -1.337881088256836
    2. 'iterations' → logprob: -1.837881088256836
    3. '_iterations' → logprob: -1.962881088256836
    4. ' étapes' → logprob: -2.462881088256836
    5. 'é' → logprob: -2.587881088256836
    6. 'ét' → logprob: -2.837881088256836
    7. ''ét' → logprob: -2.837881088256836
    8. 'it' → logprob: -3.087881088256836
    9. ' ' → logprob: -3.462881088256836
    10. ''' → logprob: -3.712881088256836

Token 21: 'érations' (ID: 152860)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0022895447909832
    2. 'érations' → logprob: -6.377289772033691
    3. 'e' → logprob: -7.627289772033691
    4. 'ér' → logprob: -10.377289772033691
    5. 'ération' → logprob: -10.502289772033691
    6. '\' → logprob: -11.752289772033691
    7. '#' → logprob: -12.252289772033691
    8. 'éra' → logprob: -12.377289772033691
    9. '```' → logprob: -12.502289772033691
    10. '"' → logprob: -12.877289772033691

Token 22: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.264727920293808
    2. '   ' → logprob: -1.6397279500961304
    3. '    ' → logprob: -4.63972806930542
    4. '  ' → logprob: -4.63972806930542
    5. ' avant' → logprob: -5.76472806930542
    6. ' nécessaire' → logprob: -5.88972806930542
    7. ' nécessaires' → logprob: -6.13972806930542
    8. ' needed' → logprob: -6.88972806930542
    9. 's' → logprob: -7.13972806930542
    10. ' ,' → logprob: -7.13972806930542

Token 23: ' atteindre' (ID: 95734)
  Prédit: ' atteindre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' atteindre' → logprob: -0.4469853937625885
    2. ' que' → logprob: -1.4469853639602661
    3. '   ' → logprob: -2.5719854831695557
    4. ' parvenir' → logprob: -4.696985244750977
    5. ' accompl' → logprob: -4.821985244750977
    6. ' arriver' → logprob: -5.071985244750977
    7. ' ' → logprob: -5.196985244750977
    8. ' obtenir' → logprob: -5.446985244750977
    9. ' effectuer' → logprob: -5.821985244750977
    10. ' réaliser' → logprob: -6.196985244750977

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1261434555053711
    2. ''' → logprob: -2.751143455505371
    3. ' le' → logprob: -4.126143455505371
    4. ' la' → logprob: -4.501143455505371
    5. '"' → logprob: -5.126143455505371
    6. ' l' → logprob: -5.126143455505371
    7. ' '' → logprob: -6.001143455505371
    8. '   ' → logprob: -6.126143455505371
    9. ' un' → logprob: -6.251143455505371
    10. ' a' → logprob: -6.501143455505371

Token 25: '617' (ID: 40657)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0632461309432983
    2. ' ' → logprob: -1.5632461309432983
    3. '"' → logprob: -1.6882461309432983
    4. 'le' → logprob: -2.813246250152588
    5. 'l' → logprob: -2.938246250152588
    6. ' la' → logprob: -3.313246250152588
    7. ' '' → logprob: -3.563246250152588
    8. '"K' → logprob: -3.938246250152588
    9. ' "' → logprob: -4.063246250152588
    10. '   ' → logprob: -4.313246250152588

Token 26: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.000614028365816921
    2. '"""' → logprob: -8.625614166259766
    3. '444' → logprob: -9.875614166259766
    4. '_' → logprob: -10.125614166259766
    5. '```' → logprob: -10.500614166259766
    6. ' ' → logprob: -10.875614166259766
    7. '49' → logprob: -10.875614166259766
    8. '46' → logprob: -11.000614166259766
    9. 'def' → logprob: -11.250614166259766
    10. '494' → logprob: -11.313114166259766

Token 27: ' à' (ID: 1221)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.14895813167095184
    2. '   ' → logprob: -2.773958206176758
    3. '
' → logprob: -3.273958206176758
    4. '  
' → logprob: -4.273958206176758
    5. ':' → logprob: -4.898958206176758
    6. '    
' → logprob: -5.773958206176758
    7. ':
' → logprob: -6.148958206176758
    8. '```' → logprob: -6.148958206176758
    9. ' 
' → logprob: -6.523958206176758
    10. '"""' → logprob: -6.773958206176758

Token 28: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.20192575454711914
    2. ' ' → logprob: -2.576925754547119
    3. '<|end|>' → logprob: -3.826925754547119
    4. '   ' → logprob: -4.201925754547119
    5. ' chaque' → logprob: -4.326925754547119
    6. 'return' → logprob: -4.326925754547119
    7. ' return' → logprob: -4.701925754547119
    8. '```' → logprob: -5.326925754547119
    9. ' n' → logprob: -5.451925754547119
    10. 'n' → logprob: -5.826925754547119

Token 29: ' du' (ID: 1462)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1095944344997406
    2. ' de' → logprob: -2.9845943450927734
    3. '   ' → logprob: -3.6095943450927734
    4. ' ' → logprob: -4.359594345092773
    5. 'd' → logprob: -5.484594345092773
    6. '    ' → logprob: -6.109594345092773
    7. ' du' → logprob: -6.109594345092773
    8. ' of' → logprob: -6.984594345092773
    9. 'de' → logprob: -7.109594345092773
    10. '  ' → logprob: -7.109594345092773

Token 30: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6158493757247925
    2. ' n' → logprob: -1.2408493757247925
    3. ' ' → logprob: -1.8658493757247925
    4. '   ' → logprob: -4.490849494934082
    5. '  ' → logprob: -7.240849494934082
    6. ' code' → logprob: -7.490849494934082
    7. '    ' → logprob: -7.740849494934082
    8. 'def' → logprob: -8.240849494934082
    9. ' given' → logprob: -8.240849494934082
    10. ' input' → logprob: -8.240849494934082

Token 31: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015218610875308514
    2. '  ' → logprob: -4.765218734741211
    3. ' "' → logprob: -6.515218734741211
    4. ' n' → logprob: -6.890218734741211
    5. ' '' → logprob: -7.015218734741211
    6. ' ,' → logprob: -7.640218734741211
    7. '"' → logprob: -7.640218734741211
    8. ''' → logprob: -8.265218734741211
    9. '  
' → logprob: -8.640218734741211
    10. ' s' → logprob: -8.765218734741211

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07589731365442276
    2. ' quatre' → logprob: -3.075897216796875
    3. '4' → logprob: -3.825897216796875
    4. '_' → logprob: -6.450897216796875
    5. '```' → logprob: -7.075897216796875
    6. '  ' → logprob: -7.575897216796875
    7. 'n' → logprob: -7.575897216796875
    8. '>' → logprob: -7.950897216796875
    9. '   ' → logprob: -8.450897216796875
    10. ' partir' → logprob: -8.700897216796875

Token 33: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0035732227843254805
    2. 'qu' → logprob: -6.003573417663574
    3. ' ' → logprob: -7.003573417663574
    4. ' quatre' → logprob: -9.253573417663574
    5. '```' → logprob: -9.878573417663574
    6. '   ' → logprob: -11.503573417663574
    7. 'ch' → logprob: -12.253573417663574
    8. '3' → logprob: -12.878573417663574
    9. '>' → logprob: -13.128573417663574
    10. 'part' → logprob: -13.253573417663574

Token 34: ' chiffres' (ID: 105565)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2230907678604126
    2. 'c' → logprob: -1.4730907678604126
    3. 's' → logprob: -1.8480907678604126
    4. 'ch' → logprob: -1.9730907678604126
    5. ' chiffres' → logprob: -2.473090648651123
    6. 'digits' → logprob: -4.098090648651123
    7. ' digits' → logprob: -4.348090648651123
    8. ' caractères' → logprob: -4.473090648651123
    9. 'd' → logprob: -4.723090648651123
    10. ' c' → logprob: -4.848090648651123

Token 35: ' n' (ID: 297)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2216318845748901
    2. '.' → logprob: -1.4716318845748901
    3. ' ' → logprob: -1.8466318845748901
    4. ' (' → logprob: -2.5966320037841797
    5. '   ' → logprob: -2.7216320037841797
    6. ' ,' → logprob: -2.8466320037841797
    7. '\n' → logprob: -3.8466320037841797
    8. '"""' → logprob: -4.22163200378418
    9. ':' → logprob: -4.59663200378418
    10. '\' → logprob: -4.72163200378418

Token 36: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04219701886177063
    2. ' ' → logprob: -3.6671969890594482
    3. '   ' → logprob: -5.417197227478027
    4. 'u' → logprob: -6.292197227478027
    5. '<|end|>' → logprob: -6.792197227478027
    6. ''' → logprob: -6.917197227478027
    7. ' _' → logprob: -6.917197227478027
    8. 'e' → logprob: -7.042197227478027
    9. '```' → logprob: -7.167197227478027
    10. ',' → logprob: -7.417197227478027

Token 37: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1657562255859375
    2. '   ' → logprob: -1.4157562255859375
    3. '\n' → logprob: -2.1657562255859375
    4. ' :' → logprob: -2.4157562255859375
    5. '
' → logprob: -2.7907562255859375
    6. ' 
' → logprob: -2.9157562255859375
    7. '  
' → logprob: -3.7907562255859375
    8. '\' → logprob: -3.9157562255859375
    9. ' ' → logprob: -4.0407562255859375
    10. ':
' → logprob: -4.1657562255859375

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0642920732498169
    2. '"""' → logprob: -3.8142919540405273
    3. ' ' → logprob: -4.814291954040527
    4. ')' → logprob: -4.939291954040527
    5. ':' → logprob: -5.189291954040527
    6. '\n' → logprob: -5.689291954040527
    7. '"""
' → logprob: -5.939291954040527
    8. '```' → logprob: -6.064291954040527
    9. '"' → logprob: -6.564291954040527
    10. ' :' → logprob: -6.814291954040527

Token 39: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11147885769605637
    2. '"""' → logprob: -3.361478805541992
    3. '\n' → logprob: -3.611478805541992
    4. ':' → logprob: -3.861478805541992
    5. '```' → logprob: -5.611478805541992
    6. ' :' → logprob: -5.736478805541992
    7. ' ' → logprob: -5.861478805541992
    8. '"""
' → logprob: -6.236478805541992
    9. '"' → logprob: -6.361478805541992
    10. '
' → logprob: -6.861478805541992

Token 40: ' appli' (ID: 25550)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9725089073181152
    2. ' respect' → logprob: -1.2225089073181152
    3. ' utilisant' → logprob: -1.9725089073181152
    4. ' space' → logprob: -2.8475089073181152
    5. ' effect' → logprob: -4.222508907318115
    6. ' suivant' → logprob: -4.597508907318115
    7. 's' → logprob: -4.722508907318115
    8. ' espace' → logprob: -5.097508907318115
    9. '_' → logprob: -5.222508907318115
    10. ' a' → logprob: -5.347508907318115

Token 41: 'quant' (ID: 39719)
  Prédit: 'quant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.12442093342542648
    2. 'que' → logprob: -2.3744208812713623
    3. 'q' → logprob: -4.374421119689941
    4. 'qu' → logprob: -5.124421119689941
    5. 'quent' → logprob: -5.999421119689941
    6. '#' → logprob: -7.874421119689941
    7. 'cant' → logprob: -7.874421119689941
    8. '```' → logprob: -8.499421119689941
    9. '   ' → logprob: -8.749421119689941
    10. '>' → logprob: -8.874421119689941

Token 42: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1799570471048355
    2. ' ' → logprob: -2.179957151412964
    3. ' l' → logprob: -3.554957151412964
    4. ' le' → logprob: -4.679956912994385
    5. ' les' → logprob: -5.304956912994385
    6. '   ' → logprob: -6.429956912994385
    7. ' the' → logprob: -6.554956912994385
    8. '  ' → logprob: -6.679956912994385
    9. 'l' → logprob: -7.429956912994385
    10. ' une' → logprob: -7.429956912994385

Token 43: ' routine' (ID: 19995)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5557731986045837
    2. ' méthode' → logprob: -1.6807732582092285
    3. ' routine' → logprob: -2.1807732582092285
    4. ' ' → logprob: -3.1807732582092285
    5. ' procédure' → logprob: -4.0557732582092285
    6. '  ' → logprob: -4.4307732582092285
    7. '   ' → logprob: -4.6807732582092285
    8. ' fonction' → logprob: -4.9307732582092285
    9. ' même' → logprob: -5.3057732582092285
    10. ' process' → logprob: -5.6807732582092285

Token 44: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08097736537456512
    2. '_' → logprob: -3.330977439880371
    3. ' de' → logprob: -3.580977439880371
    4. '  ' → logprob: -6.330977439880371
    5. ' Kap' → logprob: -6.580977439880371
    6. ' _' → logprob: -6.830977439880371
    7. '\' → logprob: -6.955977439880371
    8. '.' → logprob: -7.330977439880371
    9. '   ' → logprob: -7.580977439880371
    10. ' \' → logprob: -7.705977439880371

Token 45: ' Kap' (ID: 24651)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.0964632034301758
    2. ' ' → logprob: -1.3464632034301758
    3. ' la' → logprob: -2.096463203430176
    4. ' Kap' → logprob: -2.346463203430176
    5. ' kap' → logprob: -3.221463203430176
    6. 'K' → logprob: -3.221463203430176
    7. 'Kap' → logprob: -3.221463203430176
    8. 'kap' → logprob: -3.721463203430176
    9. ' k' → logprob: -4.471463203430176
    10. ' l' → logprob: -4.596463203430176

Token 46: 're' (ID: 264)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.002182738156989217
    2. 'a' → logprob: -7.377182960510254
    3. 'r' → logprob: -7.627182960510254
    4. 'é' → logprob: -8.377182960510254
    5. 'er' → logprob: -8.502182960510254
    6. '_' → logprob: -9.377182960510254
    7. 'ar' → logprob: -9.627182960510254
    8. 'ek' → logprob: -10.002182960510254
    9. 'el' → logprob: -10.252182960510254
    10. '_e' → logprob: -10.252182960510254

Token 47: 'kar' (ID: 10428)
  Prédit: 'kar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kar' → logprob: -0.00016837897419463843
    2. 'k' → logprob: -9.000168800354004
    3. 'ka' → logprob: -10.500168800354004
    4. 'ker' → logprob: -11.750168800354004
    5. ' kar' → logprob: -13.375168800354004
    6. 'akar' → logprob: -13.750168800354004
    7. 'kal' → logprob: -13.875168800354004
    8. '-kar' → logprob: -14.000168800354004
    9. 'kaar' → logprob: -14.250168800354004
    10. 'Kar' → logprob: -14.375168800354004

Token 48: '.
' (ID: 558)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7086588740348816
    2. '   ' → logprob: -0.8336588740348816
    3. ':' → logprob: -3.7086589336395264
    4. '
' → logprob: -4.208658695220947
    5. '    
' → logprob: -4.583658695220947
    6. '  
' → logprob: -5.208658695220947
    7. '\' → logprob: -5.208658695220947
    8. ':
' → logprob: -5.333658695220947
    9. ' 
' → logprob: -6.333658695220947
    10. '```' → logprob: -6.458658695220947

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014909426681697369
    2. '"""' → logprob: -4.764909267425537
    3. '    
' → logprob: -6.264909267425537
    4. '```' → logprob: -6.514909267425537
    5. '\n' → logprob: -6.889909267425537
    6. '"""
' → logprob: -7.389909267425537
    7. '
' → logprob: -7.514909267425537
    8. '"' → logprob: -8.139909744262695
    9. '""' → logprob: -9.389909744262695
    10. 'n' → logprob: -10.014909744262695

Token 50: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029256852343678474
    2. '"""' → logprob: -4.529256820678711
    3. '\n' → logprob: -4.779256820678711
    4. '
' → logprob: -5.779256820678711
    5. '```' → logprob: -6.654256820678711
    6. ' ' → logprob: -6.779256820678711
    7. 'n' → logprob: -6.904256820678711
    8. '"' → logprob: -7.154256820678711
    9. '    
' → logprob: -7.654256820678711
    10. ' 
' → logprob: -7.904256820678711

Token 51: ' tous' (ID: 10688)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0097581148147583
    2. ' ' → logprob: -1.1347581148147583
    3. ' len' → logprob: -1.3847581148147583
    4. 'n' → logprob: -3.1347579956054688
    5. ' not' → logprob: -4.384757995605469
    6. 'len' → logprob: -5.759757995605469
    7. ' "' → logprob: -6.634757995605469
    8. ' '' → logprob: -7.259757995605469
    9. ''' → logprob: -7.384757995605469
    10. ' le' → logprob: -7.509757995605469

Token 52: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4126844108104706
    2. 'les' → logprob: -1.162684440612793
    3. ' ' → logprob: -4.412684440612793
    4. 's' → logprob: -5.662684440612793
    5. '(' → logprob: -5.912684440612793
    6. ' digits' → logprob: -6.287684440612793
    7. '_' → logprob: -6.412684440612793
    8. 'digits' → logprob: -7.162684440612793
    9. 'd' → logprob: -7.787684440612793
    10. '(n' → logprob: -7.912684440612793

Token 53: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.03970780223608017
    2. ' chiffres' → logprob: -4.039707660675049
    3. 'digits' → logprob: -4.289707660675049
    4. 'car' → logprob: -5.164707660675049
    5. 'd' → logprob: -6.789707660675049
    6. ' digits' → logprob: -7.664707660675049
    7. 'c' → logprob: -9.539708137512207
    8. ' ' → logprob: -10.039708137512207
    9. '```' → logprob: -10.039708137512207
    10. 'chars' → logprob: -11.039708137512207

Token 54: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3200546205043793
    2. ' sont' → logprob: -1.3200546503067017
    3. ' de' → logprob: -5.445054531097412
    4. 'de' → logprob: -6.945054531097412
    5. 'd' → logprob: -7.820054531097412
    6. '   ' → logprob: -7.945054531097412
    7. 'ont' → logprob: -8.94505500793457
    8. ' n' → logprob: -9.44505500793457
    9. 'n' → logprob: -9.44505500793457
    10. ' are' → logprob: -9.57005500793457

Token 55: ' ident' (ID: 3951)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.35587114095687866
    2. ' ident' → logprob: -1.2308712005615234
    3. 'les' → logprob: -6.105871200561523
    4. ' ég' → logprob: -6.230871200561523
    5. 'ég' → logprob: -7.105871200561523
    6. ' les' → logprob: -7.230871200561523
    7. '   ' → logprob: -7.730871200561523
    8. '_ident' → logprob: -8.230871200561523
    9. ' identical' → logprob: -8.355871200561523
    10. 's' → logprob: -8.980871200561523

Token 56: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.045139532536268234
    2. 'ques' → logprob: -3.6701395511627197
    3. 'ique' → logprob: -4.170139312744141
    4. 'q' → logprob: -5.920139312744141
    5. 'que' → logprob: -8.17013931274414
    6. 'f' → logprob: -9.79513931274414
    7. 'iqu' → logprob: -10.04513931274414
    8. 'qu' → logprob: -10.17013931274414
    9. 'iq' → logprob: -10.17013931274414
    10. '```' → logprob: -11.29513931274414

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32706665992736816
    2. ':' → logprob: -1.8270666599273682
    3. ' :' → logprob: -2.327066659927368
    4. ' ,' → logprob: -4.702066421508789
    5. '   ' → logprob: -4.827066421508789
    6. ' ' → logprob: -6.202066421508789
    7. ' :
' → logprob: -7.827066421508789
    8. ':
' → logprob: -8.077066421508789
    9. 'n' → logprob: -8.577066421508789
    10. '  ' → logprob: -9.452066421508789

Token 58: ' retourne' (ID: 178818)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10023471713066101
    2. ' 
' → logprob: -2.8502347469329834
    3. '    ' → logprob: -4.100234508514404
    4. ' return' → logprob: -4.975234508514404
    5. '   ' → logprob: -5.100234508514404
    6. ' ' → logprob: -5.475234508514404
    7. '  ' → logprob: -6.975234508514404
    8. ' :' → logprob: -7.475234508514404
    9. ' :
' → logprob: -8.225234985351562
    10. '     
' → logprob: -8.225234985351562

Token 59: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6305962800979614
    2. ' ' → logprob: -0.8805962800979614
    3. ' -' → logprob: -3.255596160888672
    4. 'None' → logprob: -4.880596160888672
    5. '0' → logprob: -5.130596160888672
    6. ' ' → logprob: -7.130596160888672
    7. ' False' → logprob: -9.630596160888672
    8. '-' → logprob: -9.880596160888672
    9. '(None' → logprob: -10.130596160888672
    10. 'n' → logprob: -10.755596160888672

Token 60: ' indiqu' (ID: 100773)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03068673238158226
    2. '\n' → logprob: -4.280686855316162
    3. '
' → logprob: -4.905686855316162
    4. '    
' → logprob: -6.030686855316162
    5. ' ' → logprob: -6.780686855316162
    6. ':' → logprob: -6.780686855316162
    7. 'n' → logprob: -6.905686855316162
    8. '   
' → logprob: -7.280686855316162
    9. '\' → logprob: -7.655686855316162
    10. ')' → logprob: -8.155686378479004

Token 61: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.023840945214033127
    2. 'ant' → logprob: -3.77384090423584
    3. 'er' → logprob: -7.89884090423584
    4. 'é' → logprob: -8.77384090423584
    5. 'ent' → logprob: -10.14884090423584
    6. 'a' → logprob: -11.64884090423584
    7. '```' → logprob: -11.77384090423584
    8. '#' → logprob: -12.64884090423584
    9. 'е' → logprob: -13.14884090423584
    10. 'ue' → logprob: -13.27384090423584

Token 62: ' NA' (ID: 24259)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8047035932540894
    2. ' ' → logprob: -0.9297035932540894
    3. ' que' → logprob: -2.679703712463379
    4. ' qu' → logprob: -2.929703712463379
    5. ' None' → logprob: -4.554703712463379
    6. ' ' → logprob: -5.054703712463379
    7. '    ' → logprob: -5.304703712463379
    8. ' that' → logprob: -5.929703712463379
    9. '  ' → logprob: -6.179703712463379
    10. ' un' → logprob: -6.179703712463379

Token 63: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2799372673034668
    2. '
' → logprob: -1.7799372673034668
    3. '  
' → logprob: -4.154937267303467
    4. '"""
' → logprob: -4.404937267303467
    5. '    
' → logprob: -4.779937267303467
    6. '   
' → logprob: -5.279937267303467
    7. '```' → logprob: -5.279937267303467
    8. 'n' → logprob: -5.404937267303467
    9. ' 
' → logprob: -5.529937267303467
    10. '\n' → logprob: -5.529937267303467

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38129544258117676
    2. '"""' → logprob: -1.2562954425811768
    3. '"' → logprob: -4.256295204162598
    4. '"""
' → logprob: -4.756295204162598
    5. ')' → logprob: -5.256295204162598
    6. ' ' → logprob: -6.756295204162598
    7. ' """' → logprob: -7.256295204162598
    8. '""' → logprob: -7.256295204162598
    9. '```' → logprob: -7.256295204162598
    10. ' """
' → logprob: -7.756295204162598

Token 65: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010478081181645393
    2. '"""' → logprob: -5.8854780197143555
    3. 'n' → logprob: -6.3854780197143555
    4. '"' → logprob: -6.6354780197143555
    5. '```' → logprob: -6.8854780197143555
    6. '
' → logprob: -7.1354780197143555
    7. '    
' → logprob: -7.2604780197143555
    8. ')' → logprob: -7.7604780197143555
    9. '"""
' (adapté à ' """
') → logprob: -8.135478019714355
    10. '\n' → logprob: -8.260478019714355

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04350469261407852
    2. 'n' → logprob: -3.1685047149658203
    3. ' n' → logprob: -8.41850471496582
    4. '    
' → logprob: -8.54350471496582
    5. '
' → logprob: -10.91850471496582
    6. 'digits' → logprob: -10.91850471496582
    7. '    ' → logprob: -11.41850471496582
    8. '```' → logprob: -11.79350471496582
    9. 'd' → logprob: -12.66850471496582
    10. '#' → logprob: -12.91850471496582

Token 67: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5965197682380676
    2. 'n' → logprob: -0.8465197682380676
    3. ' n' → logprob: -5.096519947052002
    4. '    
' → logprob: -5.221519947052002
    5. '#' (adapté à ' #') → logprob: -5.596519947052002
    6. ' 
' → logprob: -6.846519947052002
    7. ' #' → logprob: -6.971519947052002
    8. 'digits' → logprob: -7.096519947052002
    9. 'if' → logprob: -7.846519947052002
    10. 'd' → logprob: -8.096519470214844

Token 68: ' Vér' (ID: 159169)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.34432172775268555
    2. 'n' → logprob: -2.3443217277526855
    3. '   ' → logprob: -2.7193217277526855
    4. 'if' → logprob: -2.8443217277526855
    5. ' if' → logprob: -3.3443217277526855
    6. ' digits' → logprob: -3.5943217277526855
    7. '#' → logprob: -5.7193217277526855
    8. 'd' → logprob: -6.4693217277526855
    9. ' n' → logprob: -6.7193217277526855
    10. ' #' → logprob: -7.2193217277526855

Token 69: 'ification' (ID: 3166)
  Prédit: 'ifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.11809905618429184
    2. 'ifier' → logprob: -2.3680989742279053
    3. 'ification' → logprob: -4.368099212646484
    4. 'if' → logprob: -5.368099212646484
    5. 'ifiez' → logprob: -8.618099212646484
    6. 'ifi' → logprob: -8.618099212646484
    7. 'i' → logprob: -10.993099212646484
    8. 'ify' → logprob: -12.368099212646484
    9. 'ifié' → logprob: -12.368099212646484
    10. 'ifications' → logprob: -12.993099212646484

Token 70: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45866772532463074
    2. ' ' → logprob: -1.0836677551269531
    3. ' if' → logprob: -4.083667755126953
    4. '  ' → logprob: -5.083667755126953
    5. '    ' → logprob: -5.458667755126953
    6. ' des' → logprob: -7.083667755126953
    7. ' d' → logprob: -8.333667755126953
    8. ' ' → logprob: -8.708667755126953
    9. 's' → logprob: -8.833667755126953
    10. '  ' → logprob: -8.958667755126953

Token 71: ' tous' (ID: 10688)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.010220755822956562
    2. 'len' → logprob: -4.760220527648926
    3. ' ' → logprob: -6.760220527648926
    4. ' all' → logprob: -8.635220527648926
    5. ' n' → logprob: -8.635220527648926
    6. ' l' → logprob: -10.135220527648926
    7. ' le' → logprob: -10.635220527648926
    8. 'n' → logprob: -11.260220527648926
    9. 'l' → logprob: -12.010220527648926
    10. '	len' → logprob: -12.885220527648926

Token 72: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.22910822927951813
    2. 'les' → logprob: -2.1041083335876465
    3. 's' → logprob: -3.2291083335876465
    4. '(c' → logprob: -3.6041083335876465
    5. 'digits' → logprob: -5.2291083335876465
    6. '(n' → logprob: -6.3541083335876465
    7. '(car' → logprob: -6.6041083335876465
    8. 'c' → logprob: -6.7291083335876465
    9. ' i' → logprob: -7.1041083335876465
    10. 'i' → logprob: -7.1041083335876465

Token 73: ' chiffres' (ID: 105565)
  Prédit: ' chiffres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffres' → logprob: -0.598182201385498
    2. 'ch' → logprob: -1.348182201385498
    3. 'c' → logprob: -2.348182201385498
    4. ' digits' → logprob: -3.598182201385498
    5. 'car' → logprob: -3.598182201385498
    6. 'digits' → logprob: -4.348182201385498
    7. ' caractères' → logprob: -4.723182201385498
    8. ' ' → logprob: -5.473182201385498
    9. 'd' → logprob: -5.473182201385498
    10. 's' → logprob: -6.098182201385498

Token 74: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05712522938847542
    2. ' sont' → logprob: -2.9321253299713135
    3. ' de' → logprob: -7.057125091552734
    4. ' n' → logprob: -7.932125091552734
    5. ' are' → logprob: -8.057125091552734
    6. 'd' → logprob: -8.307125091552734
    7. 'n' → logprob: -8.682125091552734
    8. '_' → logprob: -9.057125091552734
    9. 'de' → logprob: -10.057125091552734
    10. ' ' → logprob: -10.682125091552734

Token 75: ' ident' (ID: 3951)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.6379601359367371
    2. ' ident' → logprob: -0.7629601359367371
    3. ' ég' → logprob: -5.637959957122803
    4. 'ég' → logprob: -7.887959957122803
    5. ' la' → logprob: -8.137960433959961
    6. ' identical' → logprob: -8.262960433959961
    7. ' the' → logprob: -8.387960433959961
    8. 'la' → logprob: -8.887960433959961
    9. ' les' → logprob: -9.012960433959961
    10. '   ' → logprob: -9.762960433959961

Token 76: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.0001899511698866263
    2. 'ique' → logprob: -8.875189781188965
    3. 'ic' → logprob: -11.125189781188965
    4. 'iqu' → logprob: -11.375189781188965
    5. 'iq' → logprob: -11.625189781188965
    6. 'ques' → logprob: -11.625189781188965
    7. 'i' → logprob: -12.250189781188965
    8. 'if' → logprob: -14.875189781188965
    9. 'ical' → logprob: -15.500189781188965
    10. 'ifiques' → logprob: -15.500189781188965

Token 77: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041463072411715984
    2. ' if' → logprob: -6.629146099090576
    3. '    
' → logprob: -6.754146099090576
    4. 'n' → logprob: -7.254146099090576
    5. 'if' → logprob: -7.504146099090576
    6. '
' → logprob: -8.879146575927734
    7. '    ' → logprob: -9.629146575927734
    8. '   
' → logprob: -10.004146575927734
    9. ' 
' → logprob: -10.129146575927734
    10. 's' → logprob: -10.754146575927734

Token 78: ' retourner' (ID: 116656)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.013435970060527325
    2. 'if' → logprob: -4.5134358406066895
    3. '   ' → logprob: -6.3884358406066895
    4. ' n' → logprob: -8.013436317443848
    5. ' return' → logprob: -9.013436317443848
    6. 'n' → logprob: -9.388436317443848
    7. ' len' → logprob: -9.638436317443848
    8. 'len' → logprob: -10.138436317443848
    9. 's' → logprob: -10.638436317443848
    10. ' ' → logprob: -11.638436317443848

Token 79: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0011892797192558646
    2. 'None' → logprob: -7.001189231872559
    3. ' n' → logprob: -8.876189231872559
    4. ' ' → logprob: -9.626189231872559
    5. '   ' → logprob: -10.251189231872559
    6. ' N' → logprob: -11.251189231872559
    7. ' none' → logprob: -11.876189231872559
    8. ' if' → logprob: -12.251189231872559
    9. '    ' → logprob: -12.376189231872559
    10. ' return' → logprob: -12.751189231872559

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030540041625499725
    2. '    
' → logprob: -6.878054141998291
    3. ' if' → logprob: -6.878054141998291
    4. 'if' → logprob: -7.378054141998291
    5. '
' → logprob: -8.503053665161133
    6. 'n' → logprob: -9.878053665161133
    7. '   
' → logprob: -10.003053665161133
    8. '    ' → logprob: -10.378053665161133
    9. '  ' → logprob: -11.128053665161133
    10. '     
' → logprob: -12.253053665161133

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003317449940368533
    2. ' if' → logprob: -6.253317356109619
    3. 'if' → logprob: -6.878317356109619
    4. '    
' → logprob: -8.503317832946777
    5. '
' → logprob: -9.378317832946777
    6. 'n' → logprob: -10.003317832946777
    7. '   
' → logprob: -12.003317832946777
    8. '```' → logprob: -12.003317832946777
    9. '    ' → logprob: -12.503317832946777
    10. '  ' → logprob: -12.628317832946777

Token 82: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.51368248462677
    2. ' if' → logprob: -1.01368248462677
    3. 'if' (adapté à ' if') → logprob: -3.2636823654174805
    4. 'n' → logprob: -8.26368236541748
    5. 'digits' → logprob: -9.38868236541748
    6. '
' → logprob: -9.51368236541748
    7. '    
' → logprob: -9.63868236541748
    8. '```' → logprob: -10.88868236541748
    9. ' digits' → logprob: -11.01368236541748
    10. '    ' → logprob: -11.51368236541748

Token 83: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.10710997134447098
    2. ' n' → logprob: -2.357110023498535
    3. 'len' → logprob: -5.107110023498535
    4. 'n' → logprob: -7.482110023498535
    5. ' all' → logprob: -8.357110023498535
    6. ' ' → logprob: -10.982110023498535
    7. '   ' → logprob: -12.982110023498535
    8. '	len' → logprob: -13.107110023498535
    9. ' l' → logprob: -13.357110023498535
    10. '    ' → logprob: -13.732110023498535

Token 84: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.006749716121703386
    2. '(' → logprob: -5.006749629974365
    3. '(s' → logprob: -10.881750106811523
    4. 'set' → logprob: -11.756750106811523
    5. ' (' → logprob: -13.131750106811523
    6. '(se' → logprob: -13.131750106811523
    7. '({' → logprob: -13.631750106811523
    8. '(n' → logprob: -13.881750106811523
    9. 's' → logprob: -14.631750106811523
    10. '(
' → logprob: -15.256750106811523

Token 85: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010381679749116302
    2. '(' → logprob: -6.876038074493408
    3. ' (' → logprob: -12.376038551330566
    4. ')' → logprob: -14.376038551330566
    5. '(
' → logprob: -14.751038551330566
    6. ')n' → logprob: -17.50103759765625
    7. ' )' → logprob: -17.62603759765625
    8. '()' → logprob: -18.00103759765625
    9. '(s' → logprob: -18.25103759765625
    10. 'n' → logprob: -18.75103759765625

Token 86: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -3.249780638725497e-05
    2. '_' → logprob: -10.750032424926758
    3. ' _' → logprob: -12.250032424926758
    4. '_s' → logprob: -13.000032424926758
    5. '_st' → logprob: -13.750032424926758
    6. 'str' → logprob: -13.875032424926758
    7. '(_' → logprob: -14.625032424926758
    8. ')' → logprob: -14.750032424926758
    9. '_STR' → logprob: -15.625032424926758
    10. '(str' → logprob: -15.625032424926758

Token 87: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.015036839991807938
    2. ')' → logprob: -4.6400370597839355
    3. ' ))' → logprob: -5.2650370597839355
    4. ' )' → logprob: -9.890036582946777
    5. '()))' → logprob: -11.140036582946777
    6. '   ' → logprob: -11.390036582946777
    7. ' ' → logprob: -12.265036582946777
    8. ''))' → logprob: -12.515036582946777
    9. ')))' → logprob: -12.890036582946777
    10. '(n' → logprob: -13.140036582946777

Token 88: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05546078085899353
    2. '==' → logprob: -3.5554606914520264
    3. ')' → logprob: -3.8054606914520264
    4. ' ' → logprob: -6.8054609298706055
    5. ' )' → logprob: -6.9304609298706055
    6. ' <' → logprob: -8.055460929870605
    7. ')==' → logprob: -8.055460929870605
    8. '=' → logprob: -9.055460929870605
    9. '   ' → logprob: -9.930460929870605
    10. ' !=' → logprob: -10.055460929870605

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20141714811325073
    2. ' ' → logprob: -1.7014172077178955
    3. ' ' → logprob: -12.951416969299316
    4. '<|end|>' → logprob: -14.576416969299316
    5. '4' → logprob: -14.951416969299316
    6. '   ' → logprob: -16.013917922973633
    7. '  ' → logprob: -16.013917922973633
    8. '```' → logprob: -16.326417922973633
    9. '۱' → logprob: -16.888917922973633
    10. '	' → logprob: -17.638917922973633

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.868328920158092e-05
    2. ' ' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.250028610229492
    4. '' → logprob: -15.375028610229492
    5. '```' → logprob: -16.250028610229492
    6. '4' → logprob: -16.312528610229492
    7. '۱' → logprob: -16.812528610229492
    8. '  ' → logprob: -16.875028610229492
    9. ' ' → logprob: -17.000028610229492
    10. '१' → logprob: -17.187528610229492

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.721228368813172e-05
    2. ':return' → logprob: -10.125086784362793
    3. ':
' → logprob: -10.250086784362793
    4. ' :' → logprob: -11.500086784362793
    5. '):' → logprob: -13.875086784362793
    6. ':**' → logprob: -15.250086784362793
    7. '   ' → logprob: -15.500086784362793
    8. '.' → logprob: -16.75008773803711
    9. ',' → logprob: -17.00008773803711
    10. ')' → logprob: -17.50008773803711

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023676680400967598
    2. '
' → logprob: -4.273676872253418
    3. ':' → logprob: -5.648676872253418
    4. ' 
' → logprob: -6.148676872253418
    5. ':return' → logprob: -7.148676872253418
    6. '        
' → logprob: -7.273676872253418
    7. '   ' → logprob: -7.523676872253418
    8. ' return' → logprob: -7.773676872253418
    9. 'return' → logprob: -8.023676872253418
    10. ' :' → logprob: -8.398676872253418

Token 93: ' return' (ID: 622)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9929646849632263
    2. ' return' → logprob: -1.117964744567871
    3. '   ' → logprob: -1.742964744567871
    4. 'return' (adapté à ' return') → logprob: -2.367964744567871
    5. ' ' → logprob: -4.367964744567871
    6. '       ' → logprob: -4.492964744567871
    7. ' None' → logprob: -6.242964744567871
    8. '    ' → logprob: -6.242964744567871
    9. '	return' → logprob: -6.492964744567871
    10. '    
' → logprob: -6.617964744567871

Token 94: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.01416350994259119
    2. 'None' → logprob: -4.264163494110107
    3. '_None' → logprob: -17.389163970947266
    4. ' ' → logprob: -19.139163970947266
    5. ',None' → logprob: -19.889163970947266
    6. '(None' → logprob: -20.264163970947266
    7. ' none' → logprob: -20.639163970947266
    8. ' N' → logprob: -20.764163970947266
    9. ' ' → logprob: -21.514163970947266
    10. '.None' → logprob: -21.639163970947266

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10832366347312927
    2. '    
' → logprob: -2.608323574066162
    3. '   ' → logprob: -4.483323574066162
    4. '  
' → logprob: -5.233323574066162
    5. '\n' → logprob: -5.233323574066162
    6. ' 
' → logprob: -5.858323574066162
    7. 'n' → logprob: -6.233323574066162
    8. '   
' → logprob: -6.358323574066162
    9. '
    
' → logprob: -9.23332405090332
    10. '

' → logprob: -9.73332405090332

Token 96: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8543030619621277
    2. '    
' → logprob: -1.1043031215667725
    3. '   ' → logprob: -1.9793031215667725
    4. ' 
' → logprob: -2.7293031215667725
    5. 'n' → logprob: -3.6043031215667725
    6. '   
' → logprob: -5.104302883148193
    7. '  
' → logprob: -5.729302883148193
    8. '\n' → logprob: -6.729302883148193
    9. '     
' → logprob: -7.229302883148193
    10. '4' → logprob: -8.479303359985352

Token 97: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.383017897605896
    2. 'n' → logprob: -1.383017897605896
    3. '    
' → logprob: -2.8830180168151855
    4. '
' → logprob: -5.8830180168151855
    5. ' n' → logprob: -6.0080180168151855
    6. '#' → logprob: -6.8830180168151855
    7. '   
' → logprob: -7.0080180168151855
    8. ' 
' → logprob: -7.1330180168151855
    9. 'num' → logprob: -7.2580180168151855
    10. 'while' → logprob: -7.3830180168151855

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009102715412154794
    2. '=' → logprob: -7.12591028213501
    3. ' ' → logprob: -9.375909805297852
    4. ' +=' → logprob: -10.875909805297852
    5. '_' → logprob: -13.750909805297852
    6. '  ' → logprob: -15.625909805297852
    7. '_space' → logprob: -15.625909805297852
    8. 'space' → logprob: -15.875909805297852
    9. ' =
' → logprob: -15.875909805297852
    10. ')' → logprob: -16.50090980529785

Token 99: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08895822614431381
    2. ' ' → logprob: -2.463958263397217
    3. '1' → logprob: -10.963957786560059
    4. '   ' → logprob: -13.463957786560059
    5. '```' → logprob: -17.963958740234375
    6. ' ' → logprob: -18.026458740234375
    7. '۰' → logprob: -18.651458740234375
    8. '  ' → logprob: -18.713958740234375
    9. '    ' → logprob: -19.026458740234375
    10. '	' → logprob: -19.463958740234375

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.000003814697266
    4. '1' → logprob: -17.750003814697266
    5. '```' → logprob: -19.250003814697266
    6. '۰' → logprob: -20.000003814697266
    7. '  ' → logprob: -20.750003814697266
    8. '000' → logprob: -21.500003814697266
    9. '=' → logprob: -21.750003814697266
    10. 'int' → logprob: -21.937503814697266

Token 101: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18175457417964935
    2. ' 
' → logprob: -2.4317545890808105
    3. '   ' → logprob: -3.3067545890808105
    4. '    
' → logprob: -3.8067545890808105
    5. '<|end|>' → logprob: -4.5567545890808105
    6. '  
' → logprob: -5.9317545890808105
    7. ' while' → logprob: -6.4317545890808105
    8. '\n' → logprob: -6.9317545890808105
    9. 'n' → logprob: -6.9317545890808105
    10. '<|end|>' → logprob: -7.5567545890808105

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05105937644839287
    2. '
' → logprob: -3.8010594844818115
    3. ' while' → logprob: -3.9260594844818115
    4. 'while' → logprob: -5.176059246063232
    5. '    
' → logprob: -6.676059246063232
    6. 'n' → logprob: -8.17605972290039
    7. '<|end|>' → logprob: -8.30105972290039
    8. '```' → logprob: -9.17605972290039
    9. ' 
' → logprob: -9.80105972290039
    10. '	while' → logprob: -10.55105972290039

Token 103: ' current' (ID: 2208)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06091167405247688
    2. ' while' → logprob: -3.1859116554260254
    3. '   ' → logprob: -4.185911655426025
    4. 'n' → logprob: -6.310911655426025
    5. '    
' → logprob: -7.810911655426025
    6. 'wh' → logprob: -9.310912132263184
    7. 'w' → logprob: -9.435912132263184
    8. 'num' → logprob: -9.685912132263184
    9. ' n' → logprob: -10.935912132263184
    10. '	while' → logprob: -10.935912132263184

Token 104: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23353199660778046
    2. ' =' → logprob: -1.6085319519042969
    3. '_str' → logprob: -5.483531951904297
    4. ' ' → logprob: -6.733531951904297
    5. '_n' → logprob: -6.983531951904297
    6. '_num' → logprob: -7.233531951904297
    7. ' _' → logprob: -7.858531951904297
    8. '=' → logprob: -8.108531951904297
    9. '_val' → logprob: -8.483531951904297
    10. '_number' → logprob: -9.358531951904297

Token 105: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0502810962498188
    2. 'n' → logprob: -3.050281047821045
    3. ' int' → logprob: -6.800281047821045
    4. 'int' → logprob: -7.550281047821045
    5. '   ' → logprob: -10.050281524658203
    6. ' ' → logprob: -12.675281524658203
    7. '    ' → logprob: -12.925281524658203
    8. '	n' → logprob: -13.550281524658203
    9. ' `' → logprob: -15.050281524658203
    10. '```' → logprob: -15.112781524658203

Token 106: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -6.32523515378125e-05
    2. '_' → logprob: -9.875062942504883
    3. 'str' → logprob: -11.500062942504883
    4. ' _' → logprob: -14.500062942504883
    5. '_st' → logprob: -15.125062942504883
    6. '_STR' → logprob: -15.625062942504883
    7. '_s' → logprob: -15.875062942504883
    8. 'Str' → logprob: -15.875062942504883
    9. '_Str' → logprob: -16.125062942504883
    10. '_current' → logprob: -16.375062942504883

Token 107: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14172430336475372
    2. ' 
' → logprob: -2.8917243480682373
    3. '    
' → logprob: -3.2667243480682373
    4. '   ' → logprob: -3.7667243480682373
    5. '\n' → logprob: -5.141724109649658
    6. ' while' → logprob: -6.266724109649658
    7. '  
' → logprob: -6.391724109649658
    8. 'while' → logprob: -6.891724109649658
    9. '<|end|>' → logprob: -7.016724109649658
    10. '\' → logprob: -7.516724109649658

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5281043648719788
    2. '
' → logprob: -1.028104305267334
    3. '    
' → logprob: -3.528104305267334
    4. ' 
' → logprob: -4.528104305267334
    5. '<|end|>' → logprob: -5.028104305267334
    6. '  
' → logprob: -6.778104305267334
    7. 'while' → logprob: -6.903104305267334
    8. ' while' → logprob: -7.153104305267334
    9. '\n' → logprob: -7.653104305267334
    10. ':' → logprob: -7.778104305267334

Token 109: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1453854739665985
    2. ' while' → logprob: -2.395385503768921
    3. '   ' → logprob: -3.145385503768921
    4. 'w' → logprob: -7.145385265350342
    5. '    
' → logprob: -8.8953857421875
    6. '
' → logprob: -9.5203857421875
    7. ' 
' → logprob: -9.6453857421875
    8. 'wh' → logprob: -10.1453857421875
    9. '   
' → logprob: -12.2703857421875
    10. '	while' → logprob: -12.6453857421875

Token 110: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.04845381900668144
    2. ' True' → logprob: -3.4234538078308105
    3. ' len' → logprob: -4.6734538078308105
    4. 'current' → logprob: -5.4234538078308105
    5. 'True' → logprob: -7.9234538078308105
    6. ' int' → logprob: -8.298454284667969
    7. ' count' → logprob: -8.548454284667969
    8. ' ' → logprob: -9.798454284667969
    9. '(current' → logprob: -10.548454284667969
    10. 'len' → logprob: -11.173454284667969

Token 111: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5233363509178162
    2. ' !=' → logprob: -0.8983363509178162
    3. '!="' → logprob: -9.523336410522461
    4. ')!=' → logprob: -9.648336410522461
    5. '!='' → logprob: -9.898336410522461
    6. '()!=' → logprob: -12.023336410522461
    7. ']!=' → logprob: -12.398336410522461
    8. '   ' → logprob: -12.898336410522461
    9. ' ' → logprob: -13.023336410522461
    10. '!==' → logprob: -13.023336410522461

Token 112: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.23356042802333832
    2. ''' → logprob: -1.6085604429244995
    3. ' "' → logprob: -5.358560562133789
    4. ' '' → logprob: -5.733560562133789
    5. '   ' → logprob: -8.858560562133789
    6. ' ' → logprob: -11.108560562133789
    7. '617' → logprob: -11.983560562133789
    8. '`' → logprob: -14.233560562133789
    9. '647' → logprob: -14.608560562133789
    10. '    ' → logprob: -14.671060562133789

Token 113: '617' (ID: 40657)
  Prédit: '617'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '617' → logprob: -0.00022237090161070228
    2. '61' → logprob: -9.500222206115723
    3. '6' → logprob: -9.750222206115723
    4. '"' → logprob: -10.500222206115723
    5. '616' → logprob: -10.500222206115723
    6. '061' → logprob: -10.625222206115723
    7. '614' → logprob: -12.625222206115723
    8. '761' → logprob: -13.750222206115723
    9. '618' → logprob: -13.875222206115723
    10. ''' → logprob: -14.000222206115723

Token 114: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '৪' → logprob: -18.0
    3. '४' → logprob: -18.125
    4. '٤' → logprob: -18.875
    5. '۴' → logprob: -19.25
    6. '' → logprob: -19.5625
    7. '<|end|>' → logprob: -20.3125
    8. ' ' → logprob: -20.375
    9. '```' → logprob: -21.0
    10. '４' → logprob: -21.375

Token 115: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5558281540870667
    2. '":
' → logprob: -1.4308280944824219
    3. '"' → logprob: -1.6808280944824219
    4. '":

' → logprob: -7.555828094482422
    5. '":
' → logprob: -7.930828094482422
    6. '   ' → logprob: -9.930828094482422
    7. ' "' → logprob: -10.055828094482422
    8. '"):
' → logprob: -10.055828094482422
    9. '```' → logprob: -11.555828094482422
    10. ':
' → logprob: -11.805828094482422

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014093573205173016
    2. ':' → logprob: -4.764093399047852
    3. '        
' → logprob: -5.889093399047852
    4. '
' → logprob: -7.264093399047852
    5. '   ' → logprob: -7.764093399047852
    6. '      ' → logprob: -8.639093399047852
    7. '        ' → logprob: -8.639093399047852
    8. '```' → logprob: -8.889093399047852
    9. '       
' → logprob: -9.014093399047852
    10. ' :' → logprob: -9.014093399047852

Token 117: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8148755431175232
    2. '#' (adapté à ' #') → logprob: -0.9398755431175232
    3. 'digits' → logprob: -2.439875602722168
    4. 'sorted' → logprob: -3.439875602722168
    5. 'asc' → logprob: -4.064875602722168
    6. 'num' → logprob: -5.064875602722168
    7. ' #' → logprob: -5.439875602722168
    8. 'ascending' → logprob: -5.689875602722168
    9. 'desc' → logprob: -5.814875602722168
    10. '   ' → logprob: -5.939875602722168

Token 118: ' Trier' (ID: 191551)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.43193909525871277
    2. '#' → logprob: -1.3069391250610352
    3. 'asc' → logprob: -3.681939125061035
    4. 'desc' → logprob: -4.181939125061035
    5. '       ' → logprob: -4.181939125061035
    6. 'sorted' → logprob: -4.556939125061035
    7. ' #' → logprob: -5.431939125061035
    8. ' digits' → logprob: -5.806939125061035
    9. '   ' → logprob: -6.556939125061035
    10. 'num' → logprob: -6.681939125061035

Token 119: ' les' (ID: 1341)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.5756787657737732
    2. 'asc' → logprob: -2.075678825378418
    3. '_digits' → logprob: -2.325678825378418
    4. ' digits' → logprob: -3.075678825378418
    5. '_desc' → logprob: -3.450678825378418
    6. '       ' → logprob: -4.325678825378418
    7. 'sorted' → logprob: -4.325678825378418
    8. 'desc' → logprob: -4.575678825378418
    9. 's' → logprob: -4.575678825378418
    10. 'chars' → logprob: -4.700678825378418

Token 120: ' chiffres' (ID: 105565)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.5546746253967285
    2. ' digits' → logprob: -1.3046746253967285
    3. ' chiffres' → logprob: -1.9296746253967285
    4. 'ch' → logprob: -5.1796746253967285
    5. 'chars' → logprob: -6.4296746253967285
    6. 'car' → logprob: -7.0546746253967285
    7. 'd' → logprob: -8.05467414855957
    8. ' caractères' → logprob: -8.30467414855957
    9. ' caracteres' → logprob: -9.30467414855957
    10. ' chars' → logprob: -9.42967414855957

Token 121: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4901891350746155
    2. '=' → logprob: -2.4901890754699707
    3. '       ' → logprob: -2.7401890754699707
    4. '_sorted' → logprob: -2.8651890754699707
    5. 'asc' → logprob: -2.9901890754699707
    6. 's' → logprob: -3.4901890754699707
    7. '_' → logprob: -3.8651890754699707
    8. '   ' → logprob: -3.9901890754699707
    9. ',' → logprob: -4.490189075469971
    10. 'd' → logprob: -4.615189075469971

Token 122: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0794108510017395
    2. ' current' → logprob: -2.5794107913970947
    3. ' ' → logprob: -8.954410552978516
    4. 'str' → logprob: -9.454410552978516
    5. '(current' → logprob: -9.579410552978516
    6. '[current' → logprob: -9.954410552978516
    7. ' courant' → logprob: -10.204410552978516
    8. 'sorted' → logprob: -10.329410552978516
    9. '	current' → logprob: -11.079410552978516
    10. 'l' → logprob: -11.204410552978516

Token 123: ' dans' (ID: 2671)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.9581471085548401
    2. ' =' → logprob: -1.3331470489501953
    3. 'sorted' → logprob: -2.4581470489501953
    4. '=' → logprob: -2.7081470489501953
    5. 's' → logprob: -2.9581470489501953
    6. 'asc' → logprob: -3.4581470489501953
    7. 'd' → logprob: -4.083147048950195
    8. ',' → logprob: -4.458147048950195
    9. '_down' → logprob: -4.583147048950195
    10. '_digits' → logprob: -4.708147048950195

Token 124: ' l' (ID: 305)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4175777733325958
    2. 'ordre' → logprob: -1.5425777435302734
    3. 'l' → logprob: -2.4175777435302734
    4. 'les' → logprob: -4.167577743530273
    5. 'ascending' → logprob: -5.292577743530273
    6. ' sorted' → logprob: -5.792577743530273
    7. ''ordre' → logprob: -5.917577743530273
    8. 'reverse' → logprob: -6.042577743530273
    9. 'list' → logprob: -6.417577743530273
    10. 'asc' → logprob: -7.042577743530273

Token 125: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.002499205991625786
    2. 'ordre' → logprob: -6.377499103546143
    3. '’ordre' → logprob: -7.252499103546143
    4. 'sorted' → logprob: -10.7524995803833
    5. 'e' → logprob: -11.0024995803833
    6. ''ex' → logprob: -11.6274995803833
    7. 'current' → logprob: -11.7524995803833
    8. '[::-' → logprob: -12.2524995803833
    9. 'reverse' → logprob: -12.3774995803833
    10. 'es' → logprob: -12.5024995803833

Token 126: ' décro' (ID: 176854)
  Prédit: ' décro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' décro' → logprob: -0.4384813606739044
    2. 'cro' → logprob: -1.938481330871582
    3. '=' → logprob: -3.063481330871582
    4. 'asc' → logprob: -3.188481330871582
    5. ' =' → logprob: -3.313481330871582
    6. ' cro' → logprob: -3.688481330871582
    7. 'd' → logprob: -4.313481330871582
    8. 'desc' → logprob: -4.438481330871582
    9. 'sorted' → logprob: -4.688481330871582
    10. ' asc' → logprob: -5.313481330871582

Token 127: 'issant' (ID: 31359)
  Prédit: 'dent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dent' → logprob: -0.7887387275695801
    2. 'd' → logprob: -1.41373872756958
    3. 'nd' → logprob: -1.41373872756958
    4. 'nt' → logprob: -3.78873872756958
    5. 'issant' → logprob: -3.78873872756958
    6. 'ss' → logprob: -5.03873872756958
    7. 'de' → logprob: -6.03873872756958
    8. 'nant' → logprob: -7.16373872756958
    9. 'desc' → logprob: -7.16373872756958
    10. 'dr' → logprob: -7.91373872756958

Token 128: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2953745424747467
    2. ',' → logprob: -2.670374631881714
    3. '<|end|>' → logprob: -3.170374631881714
    4. '   ' → logprob: -3.420374631881714
    5. ')' → logprob: -4.170374393463135
    6. 'digits' → logprob: -4.295374393463135
    7. 'd' → logprob: -4.420374393463135
    8. '        ' → logprob: -4.670374393463135
    9. 's' → logprob: -5.045374393463135
    10. '<|end|>' → logprob: -5.170374393463135

Token 129: 'L' (ID: 43)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23406851291656494
    2. 'sorted' → logprob: -2.7340683937072754
    3. 'desc' → logprob: -2.8590683937072754
    4. 'descending' → logprob: -3.4840683937072754
    5. 'current' → logprob: -3.9840683937072754
    6. ' sorted' → logprob: -5.359068393707275
    7. ' descending' → logprob: -5.359068393707275
    8. ' desc' → logprob: -5.359068393707275
    9. ' current' → logprob: -5.484068393707275
    10. ',' → logprob: -5.609068393707275

Token 130: ')
' (ID: 446)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.31571558117866516
    2. 'isted' → logprob: -2.3157155513763428
    3. 'current' → logprob: -3.5657155513763428
    4. ')' → logprob: -3.5657155513763428
    5. 'iste' → logprob: -4.065715789794922
    6. ' =' → logprob: -4.065715789794922
    7. 'ambda' → logprob: -4.190715789794922
    8. 'st' → logprob: -4.815715789794922
    9. 'sorted' → logprob: -4.940715789794922
    10. '=current' → logprob: -5.315715789794922

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2415028214454651
    2. ')' → logprob: -1.8665027618408203
    3. ',' → logprob: -3.8665027618408203
    4. 'desc' → logprob: -4.99150276184082
    5. ' desc' → logprob: -5.74150276184082
    6. '_desc' → logprob: -5.86650276184082
    7. ' and' → logprob: -5.99150276184082
    8. ' )' → logprob: -5.99150276184082
    9. 'sorted' → logprob: -6.11650276184082
    10. ' ,' → logprob: -6.24150276184082

Token 132: ' L' (ID: 451)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.7270766496658325
    2. 'L' (adapté à ' L') → logprob: -1.1020766496658325
    3. 'desc' → logprob: -1.9770766496658325
    4. ' digits' → logprob: -3.727076530456543
    5. ' L' → logprob: -4.727076530456543
    6. 'descending' → logprob: -5.477076530456543
    7. 'l' → logprob: -5.977076530456543
    8. '   ' → logprob: -6.102076530456543
    9. 'sorted' → logprob: -6.477076530456543
    10. ' desc' → logprob: -6.977076530456543

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032692146487534046
    2. '=' → logprob: -6.878269195556641
    3. '_desc' → logprob: -6.878269195556641
    4. 'ist' → logprob: -7.628269195556641
    5. '_digits' → logprob: -8.12826919555664
    6. '_sorted' → logprob: -8.75326919555664
    7. '_str' → logprob: -9.37826919555664
    8. 'arge' → logprob: -10.00326919555664
    9. 'argest' → logprob: -10.25326919555664
    10. '_list' → logprob: -10.62826919555664

Token 134: ' "".' (ID: 94734)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.6783211827278137
    2. 'sorted' → logprob: -1.178321123123169
    3. '"' → logprob: -2.303321123123169
    4. ' ''.' → logprob: -2.803321123123169
    5. ' sorted' → logprob: -4.428321361541748
    6. ' "".' → logprob: -4.553321361541748
    7. 'int' → logprob: -6.678321361541748
    8. ''' → logprob: -9.05332088470459
    9. '   ' → logprob: -9.17832088470459
    10. '''' → logprob: -9.80332088470459

Token 135: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: 0.0
    2. ' join' → logprob: -16.875
    3. 'jo' → logprob: -17.5
    4. 'joined' → logprob: -18.75
    5. '.join' → logprob: -18.875
    6. 'sorted' → logprob: -19.125
    7. '(join' → logprob: -19.375
    8. 'j' → logprob: -19.375
    9. 'joins' → logprob: -19.875
    10. '/j' → logprob: -20.625

Token 136: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.0031942317727953196
    2. 'sorted' → logprob: -5.753194332122803
    3. '(' → logprob: -11.128193855285645
    4. ' sorted' → logprob: -13.253193855285645
    5. '(sort' → logprob: -17.00319480895996
    6. 'Sorted' → logprob: -17.50319480895996
    7. '(
' → logprob: -17.87819480895996
    8. '_sorted' → logprob: -18.50319480895996
    9. '.sorted' → logprob: -19.25319480895996
    10. '(

' → logprob: -20.12819480895996

Token 137: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0006313055637292564
    2. '(' → logprob: -7.500631332397461
    3. 'current' → logprob: -9.500631332397461
    4. ' current' → logprob: -13.875631332397461
    5. '<|end|>' → logprob: -14.000631332397461
    6. ' (' → logprob: -14.250631332397461
    7. '(
' → logprob: -15.125631332397461
    8. ')' → logprob: -15.250631332397461
    9. '[current' → logprob: -15.500631332397461
    10. ',current' → logprob: -16.12563133239746

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044258590787649155
    2. ' ,' → logprob: -7.7504425048828125
    3. 'reverse' → logprob: -11.625442504882812
    4. '(reverse' → logprob: -14.375442504882812
    5. '[::-' → logprob: -14.500442504882812
    6. '(),' → logprob: -14.500442504882812
    7. ',re' → logprob: -14.875442504882812
    8. ' reverse' → logprob: -15.125442504882812
    9. ',key' → logprob: -15.250442504882812
    10. ',de' → logprob: -15.375442504882812

Token 139: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.10020861029624939
    2. ' reverse' → logprob: -2.3502085208892822
    3. '(reverse' → logprob: -13.350208282470703
    4. ' ' → logprob: -15.600208282470703
    5. '   ' → logprob: -16.475208282470703
    6. '.reverse' → logprob: -16.850208282470703
    7. '_reverse' → logprob: -16.850208282470703
    8. '  ' → logprob: -19.100208282470703
    9. 're' → logprob: -19.225208282470703
    10. '	re' → logprob: -19.350208282470703

Token 140: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -5.5577775128767826e-06
    2. 'True' → logprob: -12.375005722045898
    3. '(True' → logprob: -14.375005722045898
    4. '=' → logprob: -14.500005722045898
    5. '=False' → logprob: -17.2500057220459
    6. ' =' → logprob: -17.3750057220459
    7. '   ' → logprob: -17.6250057220459
    8. '-' → logprob: -17.6250057220459
    9. ' True' → logprob: -17.7500057220459
    10. 'd' → logprob: -19.0000057220459

Token 141: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003079334564972669
    2. '))
' → logprob: -8.1253080368042
    3. ' ))' → logprob: -12.0003080368042
    4. '       ' → logprob: -13.1253080368042
    5. ')))' → logprob: -13.6253080368042
    6. '"))' → logprob: -13.6253080368042
    7. ')' → logprob: -15.1253080368042
    8. '));' → logprob: -15.2503080368042
    9. '))

' → logprob: -15.6253080368042
    10. '   ' → logprob: -15.6253080368042

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23174193501472473
    2. '
' → logprob: -2.2317419052124023
    3. ' 
' → logprob: -3.4817419052124023
    4. '        
' → logprob: -3.6067419052124023
    5. '\n' → logprob: -3.6067419052124023
    6. ' ' → logprob: -6.106741905212402
    7. '  
' → logprob: -6.356741905212402
    8. ')' → logprob: -6.731741905212402
    9. '\' → logprob: -6.856741905212402
    10. '' → logprob: -6.981741905212402

Token 143: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1466793566942215
    2. '<|end|>' → logprob: -2.396679401397705
    3. ' ' → logprob: -3.646679401397705
    4. ')' → logprob: -5.771679401397705
    5. '   ' → logprob: -5.771679401397705
    6. '#' (adapté à ' #') → logprob: -5.771679401397705
    7. ' 
' → logprob: -6.271679401397705
    8. ' #' → logprob: -6.771679401397705
    9. '        
' → logprob: -6.771679401397705
    10. '        ' → logprob: -7.021679401397705

Token 144: ' Trier' (ID: 191551)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07748871296644211
    2. 'R' → logprob: -2.952488660812378
    3. 'M' → logprob: -4.577488899230957
    4. ' S' → logprob: -5.077488899230957
    5. '#' → logprob: -5.577488899230957
    6. ' R' → logprob: -7.452488899230957
    7. '       ' → logprob: -7.702488899230957
    8. '   ' → logprob: -8.202488899230957
    9. 's' → logprob: -8.577488899230957
    10. ' M' → logprob: -8.952488899230957

Token 145: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7374497652053833
    2. ' les' → logprob: -0.7374497652053833
    3. '(current' → logprob: -3.4874496459960938
    4. 'current' → logprob: -4.862449645996094
    5. '(' → logprob: -6.612449645996094
    6. 's' → logprob: -6.737449645996094
    7. ' current' → logprob: -6.987449645996094
    8. 'the' → logprob: -8.112449645996094
    9. 'es' → logprob: -8.487449645996094
    10. '   ' → logprob: -8.862449645996094

Token 146: ' chiffres' (ID: 105565)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011535219848155975
    2. '(current' → logprob: -4.761535167694092
    3. ' current' → logprob: -5.886535167694092
    4. '[current' → logprob: -9.26153564453125
    5. 'digits' → logprob: -10.88653564453125
    6. '$current' → logprob: -11.88653564453125
    7. ',current' → logprob: -12.38653564453125
    8. 'sorted' → logprob: -12.38653564453125
    9. '=current' → logprob: -13.13653564453125
    10. 'str' → logprob: -13.76153564453125

Token 147: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.34733647108078003
    2. '   ' → logprob: -1.7223365306854248
    3. 'de' → logprob: -2.722336530685425
    4. '=' → logprob: -4.597336292266846
    5. ' current' → logprob: -4.972336292266846
    6. '    ' → logprob: -5.097336292266846
    7. '       ' → logprob: -5.222336292266846
    8. ' of' → logprob: -5.347336292266846
    9. 'def' → logprob: -5.472336292266846
    10. 'current' → logprob: -5.972336292266846

Token 148: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3491401970386505
    2. ' current' → logprob: -1.2241401672363281
    3. '(current' → logprob: -7.349140167236328
    4. '[current' → logprob: -10.974140167236328
    5. '$current' → logprob: -11.724140167236328
    6. 'sorted' → logprob: -11.974140167236328
    7. '	current' → logprob: -12.224140167236328
    8. '=current' → logprob: -12.849140167236328
    9. 'urrent' → logprob: -12.974140167236328
    10. '"' → logprob: -12.974140167236328

Token 149: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028906812891364098
    2. '       ' → logprob: -4.52890682220459
    3. ' dans' → logprob: -4.77890682220459
    4. ' =' → logprob: -5.90390682220459
    5. '=' → logprob: -6.27890682220459
    6. ' ,' → logprob: -6.52890682220459
    7. 'dans' → logprob: -7.02890682220459
    8. ' current' → logprob: -7.65390682220459
    9. ' in' → logprob: -7.77890682220459
    10. '(sorted' → logprob: -8.02890682220459

Token 150: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01647922396659851
    2. ' l' → logprob: -4.266479015350342
    3. 'ordre' → logprob: -6.891479015350342
    4. ''ordre' → logprob: -7.766479015350342
    5. '"' → logprob: -8.2664794921875
    6. 'current' → logprob: -8.6414794921875
    7. '(current' → logprob: -9.1414794921875
    8. 'order' → logprob: -9.3914794921875
    9. '(l' → logprob: -9.5164794921875
    10. ''l' → logprob: -10.6414794921875

Token 151: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.005361348390579224
    2. 'ordre' → logprob: -5.255361557006836
    3. '’ordre' → logprob: -9.255361557006836
    4. ''' → logprob: -10.880361557006836
    5. 'order' → logprob: -12.130361557006836
    6. '"' → logprob: -12.755361557006836
    7. ' ordre' → logprob: -12.880361557006836
    8. '_order' → logprob: -13.880361557006836
    9. 'ordine' → logprob: -14.380361557006836
    10. ' order' → logprob: -14.630361557006836

Token 152: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.021541202440857887
    2. 'asc' → logprob: -4.146541118621826
    3. 'sorted' → logprob: -6.146541118621826
    4. '()' → logprob: -6.896541118621826
    5. 'c' → logprob: -7.021541118621826
    6. '(' → logprob: -7.771541118621826
    7. 'ascending' → logprob: -8.521541595458984
    8. '(sorted' → logprob: -8.771541595458984
    9. ' cro' → logprob: -9.271541595458984
    10. ')' → logprob: -9.271541595458984

Token 153: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.0001625379954930395
    2. 'issante' → logprob: -9.125162124633789
    3. 'issent' → logprob: -10.125162124633789
    4. 'iss' → logprob: -12.375162124633789
    5. 'isant' → logprob: -12.875162124633789
    6. 'issants' → logprob: -13.500162124633789
    7. 'issance' → logprob: -13.750162124633789
    8. 'ss' → logprob: -13.750162124633789
    9. 'is' → logprob: -14.375162124633789
    10. 'issing' → logprob: -14.875162124633789

Token 154: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.022642673924565315
    2. '       ' → logprob: -3.8976426124572754
    3. '(' → logprob: -7.022642612457275
    4. '(current' → logprob: -7.272642612457275
    5. '(C' → logprob: -9.397643089294434
    6. '(s' → logprob: -9.897643089294434
    7. '(I' → logprob: -10.147643089294434
    8. ')' → logprob: -10.397643089294434
    9. '(S' → logprob: -10.522643089294434
    10. '(A' → logprob: -10.522643089294434

Token 155: 'S' (ID: 50)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.05509981885552406
    2. ')' → logprob: -3.9300997257232666
    3. '"' → logprob: -5.055099964141846
    4. 'sorted' → logprob: -5.180099964141846
    5. 'asc' → logprob: -5.305099964141846
    6. '(current' → logprob: -5.680099964141846
    7. 'ascending' → logprob: -5.930099964141846
    8. '))' → logprob: -5.930099964141846
    9. ' current' → logprob: -6.555099964141846
    10. '))
' → logprob: -6.555099964141846

Token 156: ')
' (ID: 446)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09502965211868286
    2. '       ' → logprob: -2.970029592514038
    3. '))
' → logprob: -3.345029592514038
    4. ')' → logprob: -5.845029830932617
    5. '"))' → logprob: -8.095029830932617
    6. ' ))' → logprob: -8.345029830932617
    7. '))
' → logprob: -8.595029830932617
    8. '   ' → logprob: -8.845029830932617
    9. '        ' → logprob: -9.970029830932617
    10. '      ' → logprob: -10.220029830932617

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008758509648032486
    2. '<|end|>' → logprob: -7.875875949859619
    3. ')' → logprob: -9.125875473022461
    4. '        ' → logprob: -9.250875473022461
    5. ',' → logprob: -9.875875473022461
    6. ' ' → logprob: -10.000875473022461
    7. ':' → logprob: -10.375875473022461
    8. ' =' → logprob: -10.625875473022461
    9. '      ' → logprob: -10.625875473022461
    10. '   ' → logprob: -10.625875473022461

Token 158: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.03859459608793259
    2. ' S' → logprob: -3.2885944843292236
    3. '       ' → logprob: -7.538594722747803
    4. '        
' → logprob: -12.163594245910645
    5. '        ' → logprob: -12.288594245910645
    6. 's' → logprob: -13.288594245910645
    7. ' ' → logprob: -13.413594245910645
    8. '   ' → logprob: -13.413594245910645
    9. '"S' → logprob: -13.663594245910645
    10. ' 
' → logprob: -13.663594245910645

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014147937297821
    2. '=' → logprob: -1.7014148235321045
    3. ' ' → logprob: -14.576415061950684
    4. '   ' → logprob: -14.826415061950684
    5. ' ="' → logprob: -14.951415061950684
    6. '    ' → logprob: -16.326414108276367
    7. ' =
' → logprob: -16.326414108276367
    8. ')' → logprob: -16.826414108276367
    9. '="' → logprob: -17.201414108276367
    10. '"' → logprob: -17.451414108276367

Token 160: ' "".' (ID: 94734)
  Prédit: ' "".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "".' → logprob: -0.5760449767112732
    2. '"' → logprob: -0.8260449767112732
    3. '""' → logprob: -10.076045036315918
    4. ' "' → logprob: -10.326045036315918
    5. '''.' → logprob: -10.826045036315918
    6. ' ''.' → logprob: -11.951045036315918
    7. '   ' → logprob: -13.451045036315918
    8. ' ' → logprob: -13.576045036315918
    9. ' ""' → logprob: -14.826045036315918
    10. '    ' → logprob: -15.076045036315918

Token 161: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.676981345459353e-06
    2. '"' → logprob: -12.500005722045898
    3. '".' → logprob: -13.875005722045898
    4. ' join' → logprob: -14.625005722045898
    5. 'jo' → logprob: -15.000005722045898
    6. 'j' → logprob: -17.0000057220459
    7. '.join' → logprob: -17.2500057220459
    8. '(join' → logprob: -18.6250057220459
    9. '```' → logprob: -19.1250057220459
    10. '''.' → logprob: -19.3750057220459

Token 162: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.001502598519437015
    2. 'sorted' → logprob: -6.501502513885498
    3. ' sorted' → logprob: -15.501502990722656
    4. '(' → logprob: -17.751502990722656
    5. '.sorted' → logprob: -19.126502990722656
    6. '_sorted' → logprob: -19.626502990722656
    7. 'Sorted' → logprob: -19.876502990722656
    8. '(s' → logprob: -21.251502990722656
    9. '(
' → logprob: -21.751502990722656
    10. '(sort' → logprob: -22.501502990722656

Token 163: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.00012844942102674395
    2. 'current' → logprob: -9.125128746032715
    3. '(' → logprob: -11.000128746032715
    4. ' current' → logprob: -13.375128746032715
    5. ' (' → logprob: -14.500128746032715
    6. '[current' → logprob: -15.125128746032715
    7. ',current' → logprob: -15.625128746032715
    8. ')' → logprob: -15.875128746032715
    9. '(
' → logprob: -16.2501277923584
    10. '=current' → logprob: -16.8751277923584

Token 164: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.026978416368365288
    2. '(current' → logprob: -4.276978492736816
    3. ',' → logprob: -5.276978492736816
    4. 'current' → logprob: -5.401978492736816
    5. '()))' → logprob: -6.776978492736816
    6. ',current' → logprob: -7.276978492736816
    7. '   ' → logprob: -8.151978492736816
    8. ')' → logprob: -8.151978492736816
    9. ' ))' → logprob: -8.651978492736816
    10. '))
' → logprob: -8.776978492736816

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021829694509506226
    2. '        
' → logprob: -5.021829605102539
    3. '
' → logprob: -5.146829605102539
    4. ' 
' → logprob: -6.396829605102539
    5. 'n' → logprob: -6.646829605102539
    6. ')' → logprob: -7.146829605102539
    7. '   ' → logprob: -7.521829605102539
    8. '    
' → logprob: -7.521829605102539
    9. 'diff' → logprob: -7.521829605102539
    10. '  
' → logprob: -7.771829605102539

Token 166: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07113032788038254
    2. 'diff' → logprob: -4.321130275726318
    3. ' current' → logprob: -4.821130275726318
    4. 'current' → logprob: -4.946130275726318
    5. '        
' → logprob: -4.946130275726318
    6. 'n' → logprob: -4.946130275726318
    7. 'num' → logprob: -5.071130275726318
    8. '
' → logprob: -5.321130275726318
    9. ' 
' → logprob: -5.696130275726318
    10. ' n' → logprob: -6.696130275726318

Token 167: ' Calcul' (ID: 57243)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5276252627372742
    2. 'num' → logprob: -2.152625322341919
    3. '       ' → logprob: -2.277625322341919
    4. 'result' → logprob: -2.902625322341919
    5. 'difference' → logprob: -3.277625322341919
    6. 'current' → logprob: -3.277625322341919
    7. 'val' → logprob: -4.40262508392334
    8. ' diff' → logprob: -4.65262508392334
    9. 'next' → logprob: -4.90262508392334
    10. 'n' → logprob: -5.27762508392334

Token 168: 'er' (ID: 259)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3483518660068512
    2. 'er' → logprob: -2.0983519554138184
    3. ' =' → logprob: -2.4733519554138184
    4. '=' → logprob: -3.4733519554138184
    5. 'diff' → logprob: -4.223351955413818
    6. 'result' → logprob: -4.973351955413818
    7. 'num' → logprob: -4.973351955413818
    8. 'n' → logprob: -5.348351955413818
    9. ' n' → logprob: -5.848351955413818
    10. ' current' → logprob: -6.348351955413818

Token 169: ' la' (ID: 557)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.767990231513977
    2. 'num' → logprob: -1.642990231513977
    3. 'val' → logprob: -2.6429901123046875
    4. 'result' → logprob: -2.8929901123046875
    5. 'next' → logprob: -3.5179901123046875
    6. 'str' → logprob: -3.5179901123046875
    7. 'int' → logprob: -3.6429901123046875
    8. '   ' → logprob: -3.8929901123046875
    9. ' next' → logprob: -3.8929901123046875
    10. ' =' → logprob: -4.6429901123046875

Token 170: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.09997629374265671
    2. 'difference' → logprob: -2.9749763011932373
    3. 'result' → logprob: -3.9749763011932373
    4. 'val' → logprob: -5.224976062774658
    5. 'res' → logprob: -5.599976062774658
    6. 'num' → logprob: -5.724976062774658
    7. 'next' → logprob: -5.849976062774658
    8. 'L' → logprob: -5.974976062774658
    9. 'k' → logprob: -6.224976062774658
    10. 'r' → logprob: -6.974976062774658

Token 171: ' L' (ID: 451)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7646498680114746
    2. ' =' → logprob: -1.3896498680114746
    3. '=' → logprob: -1.7646498680114746
    4. '       ' → logprob: -2.6396498680114746
    5. 'd' → logprob: -3.7646498680114746
    6. ' diff' → logprob: -5.139649868011475
    7. 'result' → logprob: -5.514649868011475
    8. 'num' → logprob: -6.014649868011475
    9. ' d' → logprob: -6.764649868011475
    10. 'difference' → logprob: -6.889649868011475

Token 172: ' -' (ID: 533)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.8095543384552002
    2. 'int' → logprob: -0.9345543384552002
    3. ' =' → logprob: -2.8095543384552
    4. '-' → logprob: -3.0595543384552
    5. '=' → logprob: -4.059554100036621
    6. ' -' → logprob: -4.809554100036621
    7. '_val' → logprob: -5.184554100036621
    8. '-int' → logprob: -5.309554100036621
    9. '_num' → logprob: -5.434554100036621
    10. 'Int' → logprob: -5.434554100036621

Token 173: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.04624325409531593
    2. 'int' → logprob: -3.296243190765381
    3. ' S' → logprob: -4.921243190765381
    4. ' int' → logprob: -7.046243190765381
    5. ' ' → logprob: -12.921243667602539
    6. '   ' → logprob: -13.046243667602539
    7. 'str' → logprob: -14.046243667602539
    8. 's' → logprob: -14.546243667602539
    9. '(int' → logprob: -14.546243667602539
    10. '```' → logprob: -15.421243667602539

Token 174: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45735669136047363
    2. '
' → logprob: -1.7073566913604736
    3. ' =' → logprob: -1.8323566913604736
    4. '=' → logprob: -4.4573564529418945
    5. ' 
' → logprob: -5.2073564529418945
    6. '        
' → logprob: -5.8323564529418945
    7. ')' → logprob: -6.9573564529418945
    8. ',' → logprob: -7.0823564529418945
    9. '   ' → logprob: -7.7073564529418945
    10. '	' → logprob: -7.9573564529418945

Token 175: 'en' (ID: 262)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.632124125957489
    2. 'str' → logprob: -1.2571241855621338
    3. 'result' → logprob: -2.757124185562134
    4. ' str' → logprob: -2.882124185562134
    5. ' diff' → logprob: -4.257123947143555
    6. ' result' → logprob: -4.632123947143555
    7. 'int' → logprob: -5.382123947143555
    8. 'current' → logprob: -5.382123947143555
    9. 'difference' → logprob: -5.507123947143555
    10. 'count' → logprob: -5.507123947143555

Token 176: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02538429945707321
    2. ' int' → logprob: -4.275384426116943
    3. 'ent' → logprob: -5.775384426116943
    4. 'val' → logprob: -6.525384426116943
    5. 'num' → logprob: -6.775384426116943
    6. ')' → logprob: -6.775384426116943
    7. 'base' → logprob: -7.025384426116943
    8. 't' → logprob: -7.900384426116943
    9. 'nombre' → logprob: -7.900384426116943
    10. 'integer' → logprob: -8.025383949279785

Token 177: ' entier' (ID: 80473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009911793284118176
    2. ' )' → logprob: -4.759912014007568
    3. '))' → logprob: -7.384912014007568
    4. ')
' → logprob: -7.634912014007568
    5. 'int' → logprob: -9.25991153717041
    6. '
' → logprob: -10.75991153717041
    7. ' )
' → logprob: -11.13491153717041
    8. ' ' → logprob: -11.88491153717041
    9. '))
' → logprob: -12.13491153717041
    10. '),' → logprob: -12.25991153717041

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11727844923734665
    2. ')
' → logprob: -2.2422783374786377
    3. '       ' → logprob: -5.617278575897217
    4. ' )' → logprob: -7.992278575897217
    5. '   ' → logprob: -8.617278099060059
    6. ' )
' → logprob: -9.117278099060059
    7. ')
' → logprob: -9.742278099060059
    8. '
' → logprob: -9.867278099060059
    9. ')

' → logprob: -10.992278099060059
    10. '     ' → logprob: -11.617278099060059

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10802120715379715
    2. '
' → logprob: -2.4830212593078613
    3. 'diff' → logprob: -4.608021259307861
    4. '        
' → logprob: -6.483021259307861
    5. 'n' → logprob: -6.733021259307861
    6. ' 
' → logprob: -6.858021259307861
    7. ' diff' → logprob: -7.233021259307861
    8. 'result' → logprob: -7.483021259307861
    9. ' result' → logprob: -7.983021259307861
    10. '    
' → logprob: -7.983021259307861

Token 180: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' (adapté à ' diff') → logprob: -0.0881982296705246
    2. 'num' → logprob: -3.588198184967041
    3. 'result' → logprob: -4.463198184967041
    4. '       ' → logprob: -4.588198184967041
    5. 'difference' → logprob: -4.588198184967041
    6. ' diff' → logprob: -5.338198184967041
    7. 'current' → logprob: -5.338198184967041
    8. 'd' → logprob: -5.588198184967041
    9. 'val' → logprob: -5.963198184967041
    10. 'count' → logprob: -6.338198184967041

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234713666141033
    2. '=' → logprob: -5.255234718322754
    3. '=int' → logprob: -14.380234718322754
    4. ' ' → logprob: -15.005234718322754
    5. ' ' → logprob: -16.880233764648438
    6. '   ' → logprob: -17.130233764648438
    7. '  ' → logprob: -17.380233764648438
    8. ')' → logprob: -18.005233764648438
    9. 'int' → logprob: -18.630233764648438
    10. 's' → logprob: -18.630233764648438

Token 182: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3446377217769623
    2. ' int' → logprob: -2.094637632369995
    3. 'str' → logprob: -2.094637632369995
    4. ' str' → logprob: -3.094637632369995
    5. '   ' → logprob: -13.469637870788574
    6. '    ' → logprob: -15.219637870788574
    7. 'abs' → logprob: -15.969637870788574
    8. ' ' → logprob: -16.594636917114258
    9. '(int' → logprob: -16.969636917114258
    10. '	int' → logprob: -17.719636917114258

Token 183: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -4.620622712536715e-05
    2. 'L' → logprob: -10.000045776367188
    3. '(' → logprob: -14.125045776367188
    4. '[L' → logprob: -17.750045776367188
    5. '(
' → logprob: -18.125045776367188
    6. ')' → logprob: -18.250045776367188
    7. ' (' → logprob: -18.750045776367188
    8. ')L' → logprob: -19.625045776367188
    9. '	L' → logprob: -19.625045776367188
    10. '((' → logprob: -20.125045776367188

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002084277366520837
    2. ' )' → logprob: -9.125208854675293
    3. '-' → logprob: -9.750208854675293
    4. ' -' → logprob: -10.250208854675293
    5. '-)' → logprob: -12.500208854675293
    6. ')-' → logprob: -13.750208854675293
    7. '")' → logprob: -14.750208854675293
    8. '   ' → logprob: -15.750208854675293
    9. ' ' → logprob: -16.125207901000977
    10. '"' → logprob: -16.250207901000977

Token 185: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759401917457581
    2. ' -' → logprob: -0.8259401917457581
    3. ' ' → logprob: -15.200940132141113
    4. '-int' → logprob: -15.700940132141113
    5. ' ' → logprob: -16.07594108581543
    6. '   ' → logprob: -16.70094108581543
    7. ')' → logprob: -16.95094108581543
    8. '-
' → logprob: -17.07594108581543
    9. ' -
' → logprob: -18.07594108581543
    10. '
' → logprob: -18.57594108581543

Token 186: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.7610454708337784e-05
    2. ' int' → logprob: -10.500027656555176
    3. '<int' → logprob: -21.50002670288086
    4. '(int' → logprob: -21.75002670288086
    5. '   ' → logprob: -21.87502670288086
    6. '	int' → logprob: -22.75002670288086
    7. '[int' → logprob: -22.87502670288086
    8. '=int' → logprob: -23.00002670288086
    9. ':int' → logprob: -24.12502670288086
    10. '
' → logprob: -24.62502670288086

Token 187: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0006311862962320447
    2. '(' → logprob: -7.375631332397461
    3. 'S' → logprob: -12.500631332397461
    4. '(s' → logprob: -15.250631332397461
    5. '(
' → logprob: -15.250631332397461
    6. '('' → logprob: -15.875631332397461
    7. ' (' → logprob: -16.37563133239746
    8. '("("' → logprob: -17.00063133239746
    9. ')' → logprob: -17.12563133239746
    10. 's' → logprob: -18.12563133239746

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007617983501404524
    2. ')
' → logprob: -4.882617950439453
    3. ')
' → logprob: -12.507617950439453
    4. ')

' → logprob: -12.632617950439453
    5. '<|end|>' → logprob: -13.757617950439453
    6. '       ' → logprob: -13.882617950439453
    7. '   ' → logprob: -14.007617950439453
    8. ' )' → logprob: -14.132617950439453
    9. '
' → logprob: -15.132617950439453
    10. ' ' → logprob: -15.632617950439453

Token 189: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31765374541282654
    2. '       ' → logprob: -1.317653775215149
    3. 'current' → logprob: -6.567653656005859
    4. '        
' → logprob: -7.067653656005859
    5. '   ' → logprob: -7.817653656005859
    6. ' current' → logprob: -7.942653656005859
    7. '\n' → logprob: -8.06765365600586
    8. '
' → logprob: -8.56765365600586
    9. '  
' → logprob: -8.94265365600586
    10. ' 
' → logprob: -8.94265365600586

Token 190: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.581020176410675
    2. 'current' → logprob: -1.5810201168060303
    3. ' current' → logprob: -1.9560201168060303
    4. '
' → logprob: -2.7060201168060303
    5. '   ' → logprob: -3.7060201168060303
    6. '        
' → logprob: -7.081020355224609
    7. '	current' → logprob: -7.706020355224609
    8. 'count' → logprob: -8.45602035522461
    9. '    
' → logprob: -9.08102035522461
    10. ' 
' → logprob: -9.20602035522461

Token 191: ' Former' (ID: 67449)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011160066351294518
    2. ' current' → logprob: -4.636159896850586
    3. 'count' → logprob: -6.761159896850586
    4. '
' → logprob: -8.636159896850586
    5. '   ' → logprob: -10.386159896850586
    6. 'Current' → logprob: -10.761159896850586
    7. '#' → logprob: -11.761159896850586
    8. '       ' → logprob: -12.386159896850586
    9. ' count' → logprob: -13.636159896850586
    10. '	current' → logprob: -14.886159896850586

Token 192: ' la' (ID: 557)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.4747130274772644
    2. 'current' → logprob: -0.9747130274772644
    3. '   ' → logprob: -9.099713325500488
    4. ' the' → logprob: -9.099713325500488
    5. '	current' → logprob: -9.349713325500488
    6. '_current' → logprob: -9.349713325500488
    7. ' le' → logprob: -9.599713325500488
    8. '
' → logprob: -10.099713325500488
    9. 'le' → logprob: -10.849713325500488
    10. '=current' → logprob: -11.349713325500488

Token 193: ' nouvelle' (ID: 24562)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0015203376533463597
    2. ' current' → logprob: -6.501520156860352
    3. 'next' → logprob: -11.751520156860352
    4. 'str' → logprob: -12.376520156860352
    5. 'new' → logprob: -12.501520156860352
    6. '   ' → logprob: -13.876520156860352
    7. '
' → logprob: -15.001520156860352
    8. 'diff' → logprob: -15.751520156860352
    9. '"' → logprob: -16.25152015686035
    10. 'string' → logprob: -16.37652015686035

Token 194: ' chaîne' (ID: 89288)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.009897632524371147
    2. ' current' → logprob: -4.634897708892822
    3. '
' → logprob: -10.134897232055664
    4. '_current' → logprob: -10.384897232055664
    5. '   ' → logprob: -10.509897232055664
    6. 'str' → logprob: -11.134897232055664
    7. 'n' → logprob: -11.634897232055664
    8. ' ' → logprob: -13.259897232055664
    9. '`' → logprob: -13.384897232055664
    10. '[current' → logprob: -13.634897232055664

Token 195: ' de' (ID: 334)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.02332514151930809
    2. ' current' → logprob: -3.773325204849243
    3. '       ' → logprob: -9.898324966430664
    4. '
' → logprob: -11.648324966430664
    5. '   ' → logprob: -12.523324966430664
    6. ' =' → logprob: -12.898324966430664
    7. '        
' → logprob: -13.148324966430664
    8. ',' → logprob: -13.398324966430664
    9. '	current' → logprob: -13.398324966430664
    10. '=' → logprob: -13.398324966430664

Token 196: ' ' (ID: 220)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.32571306824684143
    2. 'str' → logprob: -1.700713038444519
    3. 'car' → logprob: -2.8257131576538086
    4. ' current' → logprob: -4.700713157653809
    5. 'diff' → logprob: -4.700713157653809
    6. 'f' → logprob: -5.075713157653809
    7. 'n' → logprob: -5.450713157653809
    8. 'chaine' → logprob: -6.450713157653809
    9. 'num' → logprob: -6.700713157653809
    10. ' caractères' → logprob: -7.200713157653809

Token 197: '4' (ID: 19)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.18337954580783844
    2. 'current' → logprob: -2.308379650115967
    3. 'diff' → logprob: -2.933379650115967
    4. 'car' → logprob: -4.933379650115967
    5. 'f' → logprob: -5.058379650115967
    6. 'chaine' → logprob: -8.183379173278809
    7. 'n' → logprob: -8.308379173278809
    8. '"{' → logprob: -8.433379173278809
    9. 'chars' → logprob: -9.308379173278809
    10. 'num' → logprob: -9.808379173278809

Token 198: ' chiffres' (ID: 105565)
  Prédit: ' chiffres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffres' → logprob: -1.0205358266830444
    2. ' digits' → logprob: -1.5205358266830444
    3. 'f' → logprob: -1.6455358266830444
    4. 'digits' → logprob: -1.7705358266830444
    5. 'd' → logprob: -4.145535945892334
    6. 'z' → logprob: -4.270535945892334
    7. ' f' → logprob: -4.395535945892334
    8. ' z' → logprob: -5.645535945892334
    9. '0' → logprob: -5.770535945892334
    10. ' caractères' → logprob: -5.770535945892334

Token 199: ',' (ID: 11)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.12660203874111176
    2. ' current' → logprob: -2.3766019344329834
    3. '       ' → logprob: -4.2516021728515625
    4. '
' → logprob: -4.7516021728515625
    5. '   ' → logprob: -6.8766021728515625
    6. '        
' → logprob: -7.3766021728515625
    7. ' =' → logprob: -7.7516021728515625
    8. ',' → logprob: -8.626602172851562
    9. '_current' → logprob: -9.126602172851562
    10. ' 
' → logprob: -9.126602172851562

Token 200: ' en' (ID: 469)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07893352210521698
    2. ' current' → logprob: -2.5789334774017334
    3. '       ' → logprob: -10.203933715820312
    4. '   ' → logprob: -12.703933715820312
    5. '	current' → logprob: -13.203933715820312
    6. '
' → logprob: -14.953933715820312
    7. '$current' → logprob: -15.203933715820312
    8. '[current' → logprob: -15.453933715820312
    9. '.current' → logprob: -15.578933715820312
    10. ',current' → logprob: -15.828933715820312

Token 201: ' ajout' (ID: 64605)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.9691482782363892
    2. 'f' → logprob: -1.7191482782363892
    3. 'current' → logprob: -1.8441482782363892
    4. '{' → logprob: -2.4691481590270996
    5. ' current' → logprob: -2.9691481590270996
    6. ' f' → logprob: -3.0941481590270996
    7. 'format' → logprob: -3.3441481590270996
    8. '"{' → logprob: -4.0941481590271
    9. ' str' → logprob: -4.7191481590271
    10. 'form' → logprob: -4.9691481590271

Token 202: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0012740427628159523
    2. 'ent' → logprob: -7.876274108886719
    3. '   ' → logprob: -8.001274108886719
    4. 'ing' → logprob: -8.501274108886719
    5. 'out' → logprob: -9.376274108886719
    6. 'nant' → logprob: -9.376274108886719
    7. 'oint' → logprob: -10.751274108886719
    8. 'nt' → logprob: -10.876274108886719
    9. 'ont' → logprob: -11.001274108886719
    10. 'e' → logprob: -11.001274108886719

Token 203: ' des' (ID: 731)
  Prédit: ' leading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leading' → logprob: -0.29426440596580505
    2. ' f' → logprob: -2.544264316558838
    3. 'leading' → logprob: -2.794264316558838
    4. 'f' → logprob: -3.169264316558838
    5. ' des' → logprob: -3.294264316558838
    6. ' ' → logprob: -4.169264316558838
    7. '0' → logprob: -4.794264316558838
    8. ' zeros' → logprob: -5.544264316558838
    9. 'str' → logprob: -6.294264316558838
    10. '"' → logprob: -6.794264316558838

Token 204: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.662697970867157
    2. ' zeros' → logprob: -1.6626980304718018
    3. 'z' → logprob: -2.2876980304718018
    4. '0' → logprob: -2.4126980304718018
    5. 'zeros' → logprob: -2.7876980304718018
    6. ' leading' → logprob: -3.7876980304718018
    7. ' ' → logprob: -4.662697792053223
    8. '000' → logprob: -4.912697792053223
    9. 'leading' → logprob: -6.787697792053223
    10. '"' → logprob: -7.287697792053223

Token 205: 'éros' (ID: 120888)
  Prédit: 'eros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eros' → logprob: -0.08005038648843765
    2. 'éros' → logprob: -2.580050468444824
    3. 'ero' → logprob: -6.955050468444824
    4. 'éro' → logprob: -9.205050468444824
    5. 'er' → logprob: -9.330050468444824
    6. '"' → logprob: -12.205050468444824
    7. 'e' → logprob: -12.830050468444824
    8. '0' → logprob: -13.205050468444824
    9. 'erp' → logprob: -13.455050468444824
    10. 'erro' → logprob: -13.580050468444824

Token 206: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.42686858773231506
    2. 'str' → logprob: -2.0518686771392822
    3. ' devant' → logprob: -2.8018686771392822
    4. 'à' → logprob: -3.1768686771392822
    5. ' leading' → logprob: -4.051868438720703
    6. '0' → logprob: -4.301868438720703
    7. 'f' → logprob: -4.301868438720703
    8. '<|end|>' → logprob: -4.301868438720703
    9. '000' → logprob: -5.301868438720703
    10. ' en' → logprob: -5.426868438720703

Token 207: ' gauche' (ID: 58367)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3932954668998718
    2. 'g' → logprob: -1.8932955265045166
    3. ' gauche' → logprob: -2.3932955265045166
    4. '   ' → logprob: -3.1432955265045166
    5. ' l' → logprob: -4.2682952880859375
    6. ''' → logprob: -5.1432952880859375
    7. '`' → logprob: -5.3932952880859375
    8. '```' → logprob: -5.7682952880859375
    9. 'len' → logprob: -6.2682952880859375
    10. '"' → logprob: -6.3932952880859375

Token 208: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.889808177947998
    2. 'current' → logprob: -0.889808177947998
    3. 'str' → logprob: -2.764808177947998
    4. '{' → logprob: -3.389808177947998
    5. '
' → logprob: -3.389808177947998
    6. ',' → logprob: -4.014808177947998
    7. 'f' → logprob: -4.889808177947998
    8. ' current' → logprob: -5.014808177947998
    9. '        
' → logprob: -6.264808177947998
    10. ' str' → logprob: -6.389808177947998

Token 209: ' nécessaire' (ID: 43098)
  Prédit: ' nécessaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaire' → logprob: -0.34084367752075195
    2. 'needed' → logprob: -1.965843677520752
    3. 'diff' → logprob: -3.590843677520752
    4. 'necessary' → logprob: -3.715843677520752
    5. ' besoin' → logprob: -3.715843677520752
    6. ' needed' → logprob: -3.840843677520752
    7. 'né' → logprob: -3.840843677520752
    8. 'necess' → logprob: -4.840843677520752
    9. ' necessary' → logprob: -5.590843677520752
    10. '_needed' → logprob: -5.715843677520752

Token 210: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18674835562705994
    2. '
' → logprob: -2.3117482662200928
    3. 'current' → logprob: -2.8117482662200928
    4. ' current' → logprob: -4.936748504638672
    5. '        
' → logprob: -6.186748504638672
    6. ',' → logprob: -7.186748504638672
    7. ' 
' → logprob: -8.561748504638672
    8. ':' → logprob: -8.811748504638672
    9. '(current' → logprob: -9.311748504638672
    10. '{' → logprob: -9.311748504638672

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38546645641326904
    2. ' current' → logprob: -1.885466456413269
    3. 'current' → logprob: -2.1354665756225586
    4. '
' → logprob: -3.0104665756225586
    5. ' 
' → logprob: -8.885466575622559
    6. '        
' → logprob: -9.010466575622559
    7. ',' → logprob: -9.760466575622559
    8. ',current' → logprob: -9.760466575622559
    9. '   ' → logprob: -9.885466575622559
    10. '$current' → logprob: -10.010466575622559

Token 212: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.2014182209968567
    2. ' current' → logprob: -1.701418161392212
    3. '       ' → logprob: -12.826417922973633
    4. '   ' → logprob: -13.576417922973633
    5. 'new' → logprob: -15.076417922973633
    6. '
' → logprob: -15.326417922973633
    7. '	current' → logprob: -15.826417922973633
    8. 'Current' → logprob: -16.201417922973633
    9. 'next' → logprob: -16.701417922973633
    10. ' new' → logprob: -17.076417922973633

Token 213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '＝' → logprob: -17.78522491455078
    4. ' ="' → logprob: -18.66022491455078
    5. '=str' → logprob: -18.66022491455078
    6. 'f' → logprob: -19.03522491455078
    7. '=

' → logprob: -19.03522491455078
    8. ' ' → logprob: -19.28522491455078
    9. '=}' → logprob: -19.28522491455078
    10. ' ' → logprob: -19.28522491455078

Token 214: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.7874181270599365
    2. 'str' → logprob: -1.2874181270599365
    3. 'f' → logprob: -1.7874181270599365
    4. ' str' → logprob: -2.2874181270599365
    5. '"{' → logprob: -9.662418365478516
    6. ' "{' → logprob: -11.662418365478516
    7. ' ' → logprob: -13.037418365478516
    8. '   ' → logprob: -13.412418365478516
    9. 'format' → logprob: -13.412418365478516
    10. '	str' → logprob: -14.662418365478516

Token 215: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.0002819544170051813
    2. ''{' → logprob: -8.250282287597656
    3. '{' → logprob: -10.875282287597656
    4. 'f' → logprob: -13.750282287597656
    5. '"' → logprob: -14.750282287597656
    6. ' f' → logprob: -15.375282287597656
    7. 'str' → logprob: -17.375282287597656
    8. ' "{' → logprob: -17.375282287597656
    9. '0' → logprob: -18.750282287597656
    10. '("{' → logprob: -18.875282287597656

Token 216: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -4.320199877838604e-07
    2. ' diff' → logprob: -14.75
    3. '	diff' → logprob: -17.5
    4. '0' → logprob: -19.875
    5. '   ' → logprob: -19.875
    6. 'int' → logprob: -20.0
    7. '(diff' → logprob: -20.375
    8. 'dif' → logprob: -21.0
    9. ':' → logprob: -21.875
    10. '  ' → logprob: -22.375

Token 217: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.320199877838604e-07
    2. '04' → logprob: -14.875
    3. '0' → logprob: -17.25
    4. '03' → logprob: -19.875
    5. '   ' → logprob: -20.125
    6. '：' → logprob: -20.125
    7. '4' → logprob: -20.125
    8. ' :' → logprob: -20.5
    9. '02' → logprob: -20.875
    10. '06' → logprob: -20.875

Token 218: '04' (ID: 3000)
  Prédit: '04'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '04' → logprob: -0.00012511172099038959
    2. '0' → logprob: -9.00012493133545
    3. '004' → logprob: -13.37512493133545
    4. '>' → logprob: -17.375125885009766
    5. '040' → logprob: -17.500125885009766
    6. '044' → logprob: -18.875125885009766
    7. '041' → logprob: -19.375125885009766
    8. '000' → logprob: -19.500125885009766
    9. ' ' → logprob: -19.875125885009766
    10. '"' → logprob: -20.500125885009766

Token 219: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.15310683415737e-05
    2. '}"' → logprob: -10.750021934509277
    3. '0' → logprob: -17.50002098083496
    4. '}"
' → logprob: -17.75002098083496
    5. '}' → logprob: -19.00002098083496
    6. '}")' → logprob: -19.25002098083496
    7. ' d' → logprob: -19.87502098083496
    8. '}}"' → logprob: -21.25002098083496
    9. '}".' → logprob: -21.75002098083496
    10. '}">
' → logprob: -22.75002098083496

Token 220: '}"
' (ID: 26189)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -4.961759259458631e-06
    2. '}"
' → logprob: -13.250004768371582
    3. '"}' → logprob: -13.750004768371582
    4. '"' → logprob: -13.875004768371582
    5. ' }' → logprob: -15.000004768371582
    6. '}' → logprob: -15.000004768371582
    7. ')"' → logprob: -15.500004768371582
    8. '}")' → logprob: -15.625004768371582
    9. '}"

' → logprob: -17.2500057220459
    10. '}}"' → logprob: -17.5000057220459

Token 221: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1317608654499054
    2. '       ' → logprob: -2.131760835647583
    3. '        
' → logprob: -6.256761074066162
    4. '   ' → logprob: -6.756761074066162
    5. 'count' → logprob: -7.756761074066162
    6. '    
' → logprob: -8.006760597229004
    7. '  
' → logprob: -8.256760597229004
    8. ' 
' → logprob: -8.256760597229004
    9. '\n' → logprob: -8.631760597229004
    10. '<|end|>' → logprob: -9.006760597229004

Token 222: ' count' (ID: 3605)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.817828357219696
    2. '       ' → logprob: -1.0678284168243408
    3. 'count' (adapté à ' count') → logprob: -1.5678284168243408
    4. '   ' → logprob: -5.567828178405762
    5. ' count' → logprob: -6.317828178405762
    6. '        
' → logprob: -7.692828178405762
    7. '    
' → logprob: -9.192828178405762
    8. ' 
' → logprob: -10.067828178405762
    9. '
' → logprob: -10.192828178405762
    10. '  
' → logprob: -10.442828178405762

Token 223: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.160283625125885
    2. '+=' → logprob: -1.9102835655212402
    3. '=' → logprob: -10.160284042358398
    4. '+' → logprob: -11.160284042358398
    5. '<|end|>' → logprob: -13.035284042358398
    6. ']+=' → logprob: -13.660284042358398
    7. ' =' → logprob: -14.035284042358398
    8. '   ' → logprob: -14.285284042358398
    9. '```' → logprob: -14.660284042358398
    10. ' ' → logprob: -15.035284042358398

Token 224: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -19.126502990722656
    4. '```' → logprob: -21.001502990722656
    5. ' ' → logprob: -21.501502990722656
    6. '  ' → logprob: -22.001502990722656
    7. '    ' → logprob: -22.376502990722656
    8. '۱' → logprob: -22.876502990722656
    9. '１' → logprob: -23.251502990722656
    10. '+' → logprob: -23.251502990722656

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.375
    4. '```' → logprob: -19.875
    5. '
' → logprob: -21.375
    6. '+' → logprob: -22.875
    7. 'def' → logprob: -22.875
    8. '１' → logprob: -22.875
    9. '  ' → logprob: -23.0
    10. '۱' → logprob: -23.125

Token 226: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48669758439064026
    2. '
' → logprob: -0.9866975545883179
    3. '    
' → logprob: -4.861697673797607
    4. 'return' → logprob: -5.736697673797607
    5. ' return' → logprob: -7.361697673797607
    6. '<|end|>' → logprob: -8.11169719696045
    7. '	return' → logprob: -8.61169719696045
    8. '  
' → logprob: -8.61169719696045
    9. ' 
' → logprob: -8.98669719696045
    10. '        
' → logprob: -10.48669719696045

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16046924889087677
    2. 'return' → logprob: -1.9104692935943604
    3. ' return' → logprob: -8.410469055175781
    4. '
' → logprob: -11.535469055175781
    5. '	return' → logprob: -12.160469055175781
    6. '    
' → logprob: -12.285469055175781
    7. '```' → logprob: -13.285469055175781
    8. '       ' → logprob: -14.785469055175781
    9. '{return' → logprob: -15.160469055175781
    10. ':return' → logprob: -15.160469055175781

Token 228: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007379194721579552
    2. '   ' → logprob: -7.250738143920898
    3. ' return' → logprob: -10.500738143920898
    4. '	return' → logprob: -15.000738143920898
    5. '```' → logprob: -16.1257381439209
    6. '
' → logprob: -17.5007381439209
    7. '{return' → logprob: -17.8757381439209
    8. '    
' → logprob: -18.5007381439209
    9. ':return' → logprob: -18.5007381439209
    10. '       ' → logprob: -18.5007381439209

Token 229: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16022422909736633
    2. ' count' → logprob: -1.910224199295044
    3. '	count' → logprob: -18.41022491455078
    4. '(count' → logprob: -18.78522491455078
    5. '$count' → logprob: -20.16022491455078
    6. '[count' → logprob: -20.41022491455078
    7. '_count' → logprob: -20.91022491455078
    8. 'Count' → logprob: -21.16022491455078
    9. '<count' → logprob: -21.16022491455078
    10. ' ' → logprob: -21.91022491455078

Token 230: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: ' main' (ID: 2758)
  Prédit: ' kap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' kap' → logprob: -0.16549411416053772
    2. ' main' → logprob: -2.165494203567505
    3. 'kap' → logprob: -4.165493965148926
    4. ' is' → logprob: -4.415493965148926
    5. ' test' → logprob: -5.540493965148926
    6. 'main' → logprob: -6.540493965148926
    7. ' sum' → logprob: -7.415493965148926
    8. ' factorial' → logprob: -7.415493965148926
    9. ' check' → logprob: -8.290493965148926
    10. 'is' → logprob: -8.290493965148926

Token 233: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0007354161934927106
    2. ' ():' → logprob: -7.875735282897949
    3. '():
' → logprob: -8.62573528289795
    4. '_' → logprob: -8.87573528289795
    5. '()' → logprob: -10.87573528289795
    6. '(' → logprob: -11.62573528289795
    7. '_:' → logprob: -12.50073528289795
    8. '()>' → logprob: -13.25073528289795
    9. '():
' → logprob: -13.75073528289795
    10. ' ()' → logprob: -14.87573528289795

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9079185724258423
    2. ' n' → logprob: -0.9079185724258423
    3. 'n' → logprob: -1.6579185724258423
    4. ' input' → logprob: -6.907918453216553
    5. ' user' → logprob: -7.282918453216553
    6. ' number' → logprob: -8.032918930053711
    7. 'input' → logprob: -8.907918930053711
    8. ' for' → logprob: -9.032918930053711
    9. ' while' → logprob: -9.532918930053711
    10. 'user' → logprob: -9.782918930053711

Token 235: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.42981892824172974
    2. 'n' → logprob: -1.179818868637085
    3. '   ' → logprob: -4.179819107055664
    4. ' for' → logprob: -4.554819107055664
    5. ' while' → logprob: -5.054819107055664
    6. ' numbers' → logprob: -5.804819107055664
    7. ' number' → logprob: -6.679819107055664
    8. ' input' → logprob: -6.679819107055664
    9. ' user' → logprob: -6.929819107055664
    10. 'for' → logprob: -7.054819107055664

Token 236: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00018244501552544534
    2. ' sys' → logprob: -8.625182151794434
    3. 'random' → logprob: -13.375182151794434
    4. 'os' → logprob: -14.500182151794434
    5. 'math' → logprob: -15.125182151794434
    6. 'built' → logprob: -15.625182151794434
    7. 'csv' → logprob: -16.00018310546875
    8. 're' → logprob: -17.00018310546875
    9. 'arg' → logprob: -17.12518310546875
    10. '```' → logprob: -17.50018310546875

Token 237: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2638150453567505
    2. '
' → logprob: -1.5138150453567505
    3. '    
' → logprob: -4.763814926147461
    4. 'input' → logprob: -7.638814926147461
    5. '(n' → logprob: -8.138814926147461
    6. ' 
' → logprob: -8.138814926147461
    7. 'n' → logprob: -8.263814926147461
    8. '  
' → logprob: -8.388814926147461
    9. '	
' → logprob: -8.513814926147461
    10. '     
' → logprob: -8.763814926147461

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04501624032855034
    2. ' for' → logprob: -4.795016288757324
    3. 'for' → logprob: -4.795016288757324
    4. 'input' → logprob: -4.920016288757324
    5. 'n' → logprob: -5.170016288757324
    6. ' n' → logprob: -5.420016288757324
    7. ' input' → logprob: -5.670016288757324
    8. ' if' → logprob: -6.170016288757324
    9. 'if' → logprob: -6.170016288757324
    10. ' lines' → logprob: -7.545016288757324

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09975157678127289
    2. 'if' → logprob: -2.7247514724731445
    3. 'input' → logprob: -4.4747514724731445
    4. 'args' → logprob: -4.8497514724731445
    5. 'n' → logprob: -4.9747514724731445
    6. 'lines' → logprob: -6.0997514724731445
    7. ' for' → logprob: -8.349751472473145
    8. '   ' → logprob: -8.724751472473145
    9. 'inputs' → logprob: -8.724751472473145
    10. 'arg' → logprob: -9.224751472473145

Token 240: ' line' (ID: 2543)
  Prédit: ' arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arg' → logprob: -0.29363590478897095
    2. ' line' → logprob: -1.4186358451843262
    3. ' ' → logprob: -4.918635845184326
    4. ' n' → logprob: -6.168635845184326
    5. ' ligne' → logprob: -6.668635845184326
    6. ' num' → logprob: -7.293635845184326
    7. 'arg' → logprob: -8.418636322021484
    8. ' number' → logprob: -8.543636322021484
    9. '	arg' → logprob: -8.918636322021484
    10. ' i' → logprob: -9.543636322021484

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015092701651155949
    2. 'in' → logprob: -6.501509189605713
    3. ' ' → logprob: -13.626509666442871
    4. 's' → logprob: -14.001509666442871
    5. 'import' → logprob: -14.001509666442871
    6. 'line' → logprob: -14.751509666442871
    7. '	in' → logprob: -14.876509666442871
    8. '   ' → logprob: -15.001509666442871
    9. 'a' → logprob: -15.126509666442871
    10. '_' → logprob: -15.251509666442871

Token 242: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.31326615810394287
    2. 'sys' → logprob: -1.3132661581039429
    3. '=sys' → logprob: -12.938265800476074
    4. '	sys' → logprob: -13.313265800476074
    5. '(sys' → logprob: -14.813265800476074
    6. 'import' → logprob: -17.81326675415039
    7. 'stdin' → logprob: -18.68826675415039
    8. 'Sys' → logprob: -18.68826675415039
    9. '```' → logprob: -18.68826675415039
    10. '_sys' → logprob: -19.06326675415039

Token 243: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007504248642362654
    2. 'stdin' → logprob: -7.750750541687012
    3. '.' → logprob: -8.250750541687012
    4. '.readline' → logprob: -10.375750541687012
    5. ' stdin' → logprob: -11.375750541687012
    6. '.stdout' → logprob: -11.875750541687012
    7. '(stdin' → logprob: -12.375750541687012
    8. '.argv' → logprob: -13.000750541687012
    9. '   ' → logprob: -14.000750541687012
    10. 'in' → logprob: -14.125750541687012

Token 244: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9826493263244629
    2. '.readline' → logprob: -1.107649326324463
    3. ' in' → logprob: -2.107649326324463
    4. ':
' → logprob: -3.107649326324463
    5. '.rstrip' → logprob: -3.107649326324463
    6. '.strip' → logprob: -3.232649326324463
    7. '.readlines' → logprob: -4.107649326324463
    8. '.' → logprob: -4.357649326324463
    9. 'rstrip' → logprob: -4.857649326324463
    10. '   ' → logprob: -5.982649326324463

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004846538067795336
    2. ' line' → logprob: -8.250484466552734
    3. '        
' → logprob: -9.625484466552734
    4. '   ' → logprob: -10.000484466552734
    5. '.rstrip' → logprob: -10.625484466552734
    6. ' n' → logprob: -11.125484466552734
    7. ' readline' → logprob: -11.375484466552734
    8. '.strip' → logprob: -11.500484466552734
    9. '<|end|>' → logprob: -12.000484466552734
    10. 'rstrip' → logprob: -12.125484466552734

Token 246: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2640898823738098
    2. 'n' (adapté à ' n') → logprob: -2.014089822769165
    3. '       ' → logprob: -2.389089822769165
    4. ' number' → logprob: -5.264090061187744
    5. ' line' → logprob: -7.389090061187744
    6. 'number' → logprob: -8.264089584350586
    7. '   ' → logprob: -8.389089584350586
    8. 'num' → logprob: -8.514089584350586
    9. ' num' → logprob: -8.514089584350586
    10. ' s' → logprob: -9.514089584350586

Token 247: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0001354824344161898
    2. ' =' → logprob: -9.25013542175293
    3. '=' → logprob: -11.12513542175293
    4. '_' → logprob: -11.62513542175293
    5. '=_' → logprob: -11.87513542175293
    6. 'str' → logprob: -12.50013542175293
    7. '_input' → logprob: -13.37513542175293
    8. '=str' → logprob: -14.37513542175293
    9. '_=' → logprob: -14.37513542175293
    10. '_s' → logprob: -14.62513542175293

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741545021533966
    2. ' =' → logprob: -0.9741544723510742
    3. '=line' → logprob: -9.474154472351074
    4. '=n' → logprob: -14.474154472351074
    5. '=input' → logprob: -16.22415542602539
    6. '＝' → logprob: -16.72415542602539
    7. '=
' → logprob: -17.34915542602539
    8. ')' → logprob: -17.72415542602539
    9. '=

' → logprob: -17.72415542602539
    10. '=int' → logprob: -17.97415542602539

Token 249: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.7610454708337784e-05
    2. ' line' → logprob: -10.500027656555176
    3. '=line' → logprob: -19.37502670288086
    4. '(line' → logprob: -19.75002670288086
    5. '	line' → logprob: -20.75002670288086
    6. '#line' → logprob: -20.87502670288086
    7. ' ' → logprob: -22.75002670288086
    8. 'ligne' → logprob: -22.75002670288086
    9. '[line' → logprob: -23.12502670288086
    10. '   ' → logprob: -23.12502670288086

Token 250: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0158593337982893
    2. '.rstrip' → logprob: -4.265859127044678
    3. '.' → logprob: -6.390859127044678
    4. 'strip' → logprob: -11.390859603881836
    5. 'rstrip' → logprob: -12.765859603881836
    6. '.chomp' → logprob: -13.390859603881836
    7. '[:-' → logprob: -13.890859603881836
    8. '.readline' → logprob: -14.515859603881836
    9. '_strip' → logprob: -15.890859603881836
    10. ' strip' → logprob: -16.015859603881836

Token 251: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003005464968737215
    2. '()
' → logprob: -8.125300407409668
    3. '())' → logprob: -13.500300407409668
    4. '()\' → logprob: -14.125300407409668
    5. '()

' → logprob: -14.250300407409668
    6. '()
' → logprob: -14.250300407409668
    7. '()]' → logprob: -15.000300407409668
    8. '()`' → logprob: -15.375300407409668
    9. '()<' → logprob: -15.750300407409668
    10. '()>' → logprob: -15.875300407409668

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004790853708982468
    2. '        
' → logprob: -6.629790782928467
    3. '<|end|>' → logprob: -6.629790782928467
    4. ' if' → logprob: -6.754790782928467
    5. '   ' → logprob: -7.754790782928467
    6. '
' → logprob: -8.004791259765625
    7. 'if' → logprob: -9.254791259765625
    8. '    
' → logprob: -10.504791259765625
    9. ' 
' → logprob: -10.879791259765625
    10. '<|end|>' → logprob: -11.004791259765625

Token 253: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09988836944103241
    2. 'result' → logprob: -2.599888324737549
    3. '       ' → logprob: -4.349888324737549
    4. ' if' → logprob: -4.974888324737549
    5. 'res' → logprob: -7.224888324737549
    6. '   ' → logprob: -9.474888801574707
    7. ' result' → logprob: -9.474888801574707
    8. 'count' → logprob: -9.849888801574707
    9. '        
' → logprob: -11.724888801574707
    10. 'r' → logprob: -12.599888801574707

Token 254: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.13173891603946686
    2. ' n' → logprob: -2.3817389011383057
    3. 'n' → logprob: -3.7567389011383057
    4. 'not' → logprob: -4.881739139556885
    5. ' len' → logprob: -9.631738662719727
    6. 'n't' → logprob: -11.256738662719727
    7. 'len' → logprob: -11.506738662719727
    8. ' ' → logprob: -12.881738662719727
    9. '	n' → logprob: -13.194238662719727
    10. '	not' → logprob: -13.694238662719727

Token 255: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0006967080407775939
    2. '_' → logprob: -7.500696659088135
    3. ' not' → logprob: -10.750697135925293
    4. 'ot' → logprob: -10.750697135925293
    5. '_strlen' → logprob: -11.000697135925293
    6. '==' → logprob: -11.125697135925293
    7. ' ==' → logprob: -11.375697135925293
    8. '```' → logprob: -11.625697135925293
    9. 'not' → logprob: -11.750697135925293
    10. '_not' → logprob: -12.000697135925293

Token 256: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02986087277531624
    2. '==' → logprob: -3.5298609733581543
    3. ':' → logprob: -9.529860496520996
    4. ' !=' → logprob: -11.029860496520996
    5. '.startswith' → logprob: -12.029860496520996
    6. ' =="' → logprob: -12.279860496520996
    7. ' :' → logprob: -12.904860496520996
    8. ')==' → logprob: -13.404860496520996
    9. '.strip' → logprob: -13.529860496520996
    10. ' =' → logprob: -14.404860496520996

Token 257: ' "' (ID: 392)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.6660143136978149
    2. '"' → logprob: -0.9160143136978149
    3. '''' → logprob: -2.9160141944885254
    4. '"":' → logprob: -3.6660141944885254
    5. ''' → logprob: -5.166014194488525
    6. ''ex' → logprob: -7.291014194488525
    7. ''end' → logprob: -11.416014671325684
    8. '"#' → logprob: -13.416014671325684
    9. ' ""' → logprob: -13.416014671325684
    10. ''q' → logprob: -14.166014671325684

Token 258: '000' (ID: 1302)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.24917316436767578
    2. '"' → logprob: -1.6241731643676758
    3. 'END' → logprob: -4.374173164367676
    4. '"":' → logprob: -5.499173164367676
    5. '""' → logprob: -5.874173164367676
    6. 'exit' → logprob: -7.249173164367676
    7. '":
' → logprob: -7.374173164367676
    8. '0' → logprob: -7.624173164367676
    9. 'EXIT' → logprob: -7.624173164367676
    10. 'STOP' → logprob: -7.874173164367676

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2113979209971149e-05
    2. '"' → logprob: -11.500012397766113
    3. '":' → logprob: -13.750012397766113
    4. '":
' → logprob: -15.875012397766113
    5. '00' → logprob: -16.125011444091797
    6. '
' → logprob: -16.250011444091797
    7. '"):
' → logprob: -16.375011444091797
    8. '\n' → logprob: -16.375011444091797
    9. '"):' → logprob: -16.500011444091797
    10. '1' → logprob: -16.750011444091797

Token 260: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.07686499506235123
    2. '":' → logprob: -2.7018649578094482
    3. ':
' → logprob: -5.701865196228027
    4. ':' → logprob: -6.701865196228027
    5. '"' → logprob: -7.076865196228027
    6. '       ' → logprob: -7.201865196228027
    7. '":
' → logprob: -7.451865196228027
    8. '"):
' → logprob: -9.951865196228027
    9. '):
' → logprob: -10.451865196228027
    10. '           ' → logprob: -10.576865196228027

Token 261: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013378625735640526
    2. '       ' → logprob: -6.626338005065918
    3. 'break' → logprob: -11.501338005065918
    4. ' break' → logprob: -14.501338005065918
    5. '   ' → logprob: -14.626338005065918
    6. '               ' → logprob: -15.376338005065918
    7. '
' → logprob: -15.376338005065918
    8. '		' → logprob: -15.876338005065918
    9. '	       ' → logprob: -16.2513370513916
    10. '```' → logprob: -16.3763370513916

Token 262: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2606986165046692
    2. '           ' → logprob: -2.0106985569000244
    3. ' break' → logprob: -2.5106985569000244
    4. '       ' → logprob: -4.2606987953186035
    5. 'return' → logprob: -8.760698318481445
    6. '	break' → logprob: -9.510698318481445
    7. '               ' → logprob: -11.010698318481445
    8. '
' → logprob: -11.260698318481445
    9. '_break' → logprob: -13.010698318481445
    10. ' return' → logprob: -13.385698318481445

Token 263: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47588586807250977
    2. '
' → logprob: -1.2258858680725098
    3. '        
' → logprob: -2.4758858680725098
    4. '    
' → logprob: -7.97588586807251
    5. '            
' → logprob: -8.350885391235352
    6. '<|end|>' → logprob: -8.350885391235352
    7. '
' → logprob: -9.225885391235352
    8. '  
' → logprob: -9.350885391235352
    9. '		
' → logprob: -11.350885391235352
    10. '       
' → logprob: -11.475885391235352

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019069778500124812
    2. '   ' → logprob: -6.876906871795654
    3. '        
' → logprob: -7.376906871795654
    4. '    
' → logprob: -8.626907348632812
    5. 'print' → logprob: -10.751907348632812
    6. '<|end|>' → logprob: -10.751907348632812
    7. '
' → logprob: -11.501907348632812
    8. '    ' → logprob: -13.126907348632812
    9. '  
' → logprob: -13.251907348632812
    10. 'result' → logprob: -13.376907348632812

Token 265: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.002600268693640828
    2. 'res' → logprob: -6.252600193023682
    3. '       ' → logprob: -8.12760066986084
    4. 'iterations' → logprob: -8.75260066986084
    5. 'count' → logprob: -8.87760066986084
    6. ' result' → logprob: -10.25260066986084
    7. 'results' → logprob: -11.50260066986084
    8. 'r' → logprob: -11.87760066986084
    9. '   ' → logprob: -12.00260066986084
    10. 'steps' → logprob: -12.75260066986084

Token 266: ' Si' (ID: 7832)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00630072271451354
    2. 'res' → logprob: -5.131300926208496
    3. 'iterations' → logprob: -8.631300926208496
    4. '       ' → logprob: -9.631300926208496
    5. 'count' → logprob: -9.756300926208496
    6. ' result' → logprob: -10.881300926208496
    7. 'steps' → logprob: -11.006300926208496
    8. 'r' → logprob: -11.756300926208496
    9. 'rés' → logprob: -12.131300926208496
    10. 'results' → logprob: -12.256300926208496

Token 267: ' la' (ID: 557)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.06718672811985016
    2. 'len' → logprob: -2.9421868324279785
    3. ' kap' → logprob: -5.1921868324279785
    4. ' not' → logprob: -5.9421868324279785
    5. ' n' → logprob: -6.4421868324279785
    6. ' all' → logprob: -6.5671868324279785
    7. 'kap' → logprob: -8.06718635559082
    8. 'n' → logprob: -8.06718635559082
    9. 'not' → logprob: -9.19218635559082
    10. 'all' → logprob: -9.31718635559082

Token 268: ' chaîne' (ID: 89288)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.013965686783194542
    2. ' len' → logprob: -5.138965606689453
    3. 'n' → logprob: -5.888965606689453
    4. 'kap' → logprob: -6.263965606689453
    5. 'all' → logprob: -6.638965606689453
    6. 'def' → logprob: -8.138965606689453
    7. '#' → logprob: -8.388965606689453
    8. ' all' → logprob: -8.638965606689453
    9. 'length' → logprob: -9.013965606689453
    10. ' ' → logprob: -9.576465606689453

Token 269: ' est' (ID: 893)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5599262118339539
    2. ' len' → logprob: -1.6849262714385986
    3. ' n' → logprob: -1.8099262714385986
    4. ' a' → logprob: -3.6849262714385986
    5. ' est' → logprob: -4.0599260330200195
    6. '   ' → logprob: -4.5599260330200195
    7. ' ==' → logprob: -5.4349260330200195
    8. 'est' → logprob: -5.5599260330200195
    9. 'n' → logprob: -5.6849260330200195
    10. '       ' → logprob: -5.8099260330200195

Token 270: ' plus' (ID: 2932)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6690051555633545
    2. 'len' → logprob: -1.2940051555633545
    3. ' None' → logprob: -1.9190051555633545
    4. 'vide' → logprob: -3.6690051555633545
    5. '""' → logprob: -4.044005393981934
    6. 'not' → logprob: -5.419005393981934
    7. ' not' → logprob: -5.544005393981934
    8. '   ' → logprob: -5.794005393981934
    9. ' vide' → logprob: -5.794005393981934
    10. ' len' → logprob: -5.919005393981934

Token 271: ' courte' (ID: 130258)
  Prédit: 'court'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'court' → logprob: -1.3817497491836548
    2. '   ' → logprob: -1.5067497491836548
    3. ' courte' → logprob: -1.6317497491836548
    4. 'cour' → logprob: -1.7567497491836548
    5. 'long' → logprob: -2.8817496299743652
    6. '       ' → logprob: -3.5067496299743652
    7. ' longue' → logprob: -3.8817496299743652
    8. '  ' → logprob: -4.256749629974365
    9. ' court' → logprob: -4.506749629974365
    10. ' long' → logprob: -4.631749629974365

Token 272: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7432758212089539
    2. ' que' → logprob: -0.9932758212089539
    3. ' ou' → logprob: -3.1182758808135986
    4. '<' → logprob: -3.4932758808135986
    5. ' <' → logprob: -3.6182758808135986
    6. ' than' → logprob: -3.7432758808135986
    7. '           ' → logprob: -5.3682756423950195
    8. '   ' → logprob: -5.7432756423950195
    9. ',' → logprob: -5.7432756423950195
    10. '        ' → logprob: -5.8682756423950195

Token 273: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.000915039679966867
    2. ' ' → logprob: -7.000915050506592
    3. '   ' → logprob: -12.625914573669434
    4. ' four' → logprob: -16.37591552734375
    5. '"' → logprob: -17.00091552734375
    6. 'len' → logprob: -17.75091552734375
    7. '  ' → logprob: -17.87591552734375
    8. ' ' → logprob: -18.25091552734375
    9. ' quatre' → logprob: -18.25091552734375
    10. '5' → logprob: -18.62591552734375

Token 274: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.375059127807617
    4. 'len' → logprob: -17.000059127807617
    5. '"' → logprob: -17.125059127807617
    6. ' four' → logprob: -17.875059127807617
    7. '```' → logprob: -18.000059127807617
    8. 'four' → logprob: -18.500059127807617
    9. '٤' → logprob: -18.562559127807617
    10. ' quatre' → logprob: -18.687559127807617

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4615165591239929
    2. ':' → logprob: -1.0865166187286377
    3. ' ,' → logprob: -4.711516380310059
    4. '   ' → logprob: -4.961516380310059
    5. ' or' → logprob: -5.086516380310059
    6. ':
' → logprob: -5.461516380310059
    7. ' :' → logprob: -5.711516380310059
    8. '  ' → logprob: -7.086516380310059
    9. ' ' → logprob: -7.211516380310059
    10. '       ' → logprob: -8.836516380310059

Token 276: ' on' (ID: 402)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.050628386437892914
    2. '       ' → logprob: -3.675628423690796
    3. 'n' → logprob: -3.800628423690796
    4. ' continue' → logprob: -6.550628185272217
    5. 'continue' → logprob: -9.425628662109375
    6. '   ' → logprob: -9.675628662109375
    7. ' continuer' → logprob: -9.800628662109375
    8. '    ' → logprob: -11.425628662109375
    9. '        ' → logprob: -12.425628662109375
    10. ' s' → logprob: -12.550628662109375

Token 277: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30751216411590576
    2. ' continue' → logprob: -2.3075122833251953
    3. ' n' → logprob: -2.5575122833251953
    4. 'n' → logprob: -2.8075122833251953
    5. 'continue' → logprob: -3.6825122833251953
    6. 'contin' → logprob: -7.432512283325195
    7. '   ' → logprob: -8.182512283325195
    8. ' continues' → logprob: -8.307512283325195
    9. ' continuer' → logprob: -8.807512283325195
    10. '           ' → logprob: -9.057512283325195

Token 278: ' rem' (ID: 1662)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.765654981136322
    2. 'rem' → logprob: -1.8906550407409668
    3. 'pad' → logprob: -2.015655040740967
    4. 'l' → logprob: -2.515655040740967
    5. 'r' → logprob: -3.140655040740967
    6. 'n' → logprob: -3.640655040740967
    7. ' complète' → logprob: -3.765655040740967
    8. ' continue' → logprob: -4.015655040740967
    9. 'complete' → logprob: -4.390655040740967
    10. 'compl' → logprob: -4.890655040740967

Token 279: 'plit' (ID: 4059)
  Prédit: 'plit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plit' → logprob: -0.023339582607150078
    2. 'pl' → logprob: -3.7733395099639893
    3. 'pli' → logprob: -10.39833927154541
    4. 'place' → logprob: -10.52333927154541
    5. 'p' → logprob: -11.02333927154541
    6. 'plet' → logprob: -11.39833927154541
    7. 'plt' → logprob: -12.52333927154541
    8. 'ple' → logprob: -13.89833927154541
    9. 'et' → logprob: -14.27333927154541
    10. 'onte' → logprob: -14.39833927154541

Token 280: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.7169198989868164
    2. '   ' → logprob: -1.3419198989868164
    3. ' with' → logprob: -1.4669198989868164
    4. '    ' → logprob: -5.341919898986816
    5. 'with' → logprob: -5.466919898986816
    6. ' à' → logprob: -5.716919898986816
    7. '       ' → logprob: -5.716919898986816
    8. 'avec' → logprob: -6.091919898986816
    9. '	with' → logprob: -8.216919898986816
    10. 'def' → logprob: -8.466919898986816

Token 281: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1130772829055786
    2. '0' → logprob: -1.2380772829055786
    3. 'des' → logprob: -1.6130772829055786
    4. ''' → logprob: -2.863077163696289
    5. ' leading' → logprob: -3.363077163696289
    6. '   ' → logprob: -3.488077163696289
    7. ' zeros' → logprob: -3.613077163696289
    8. '"' → logprob: -4.363077163696289
    9. ' ' → logprob: -4.738077163696289
    10. 'zeros' → logprob: -5.238077163696289

Token 282: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12257153540849686
    2. ' z' → logprob: -2.6225714683532715
    3. ' zeros' → logprob: -3.4975714683532715
    4. 'z' → logprob: -5.3725714683532715
    5. 'zeros' → logprob: -5.4975714683532715
    6. ' ' → logprob: -6.3725714683532715
    7. '000' → logprob: -6.9975714683532715
    8. ' leading' → logprob: -7.3725714683532715
    9. ''' → logprob: -9.24757194519043
    10. ' espaces' → logprob: -9.49757194519043

Token 283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07356108725070953
    2. 'z' → logprob: -3.198561191558838
    3. ' z' → logprob: -3.698561191558838
    4. 'zeros' → logprob: -5.948561191558838
    5. ' zeros' → logprob: -6.573561191558838
    6. ' ' → logprob: -7.823561191558838
    7. '000' → logprob: -7.823561191558838
    8. ''' → logprob: -8.19856071472168
    9. ''z' → logprob: -9.32356071472168
    10. '   ' → logprob: -9.82356071472168

Token 284: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2866486608982086
    2. '   ' → logprob: -2.036648750305176
    3. '       ' → logprob: -3.661648750305176
    4. ' à' → logprob: -3.661648750305176
    5. ' on' → logprob: -4.161648750305176
    6. ' to' → logprob: -4.286648750305176
    7. '<|end|>' → logprob: -4.286648750305176
    8. ' at' → logprob: -5.911648750305176
    9. ',' → logprob: -6.161648750305176
    10. '    ' → logprob: -6.161648750305176

Token 285: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.023631513118743896
    2. ' gauche' → logprob: -3.7736315727233887
    3. 'dro' → logprob: -8.39863109588623
    4. 'l' → logprob: -9.39863109588623
    5. 'gau' → logprob: -10.27363109588623
    6. '   ' → logprob: -11.77363109588623
    7. '_g' → logprob: -11.77363109588623
    8. '	g' → logprob: -12.39863109588623
    9. '```' → logprob: -12.39863109588623
    10. 'gua' → logprob: -12.64863109588623

Token 286: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00884406827390194
    2. ',' → logprob: -4.758843898773193
    3. '           ' → logprob: -10.258844375610352
    4. 's' → logprob: -10.258844375610352
    5. 'n' → logprob: -10.383844375610352
    6. '        
' → logprob: -10.633844375610352
    7. '      ' → logprob: -10.883844375610352
    8. ' n' → logprob: -11.133844375610352
    9. ':' → logprob: -11.258844375610352
    10. '(n' → logprob: -11.758844375610352

Token 287: 'cas' (ID: 14617)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6169297099113464
    2. ' n' → logprob: -1.1169297695159912
    3. ')' → logprob: -2.366929769515991
    4. '       ' → logprob: -4.241929531097412
    5. ')n' → logprob: -4.241929531097412
    6. ')
' → logprob: -4.866929531097412
    7. ' )' → logprob: -6.491929531097412
    8. ' )
' → logprob: -7.866929531097412
    9. ' continue' → logprob: -7.866929531097412
    10. '           ' → logprob: -8.36693000793457

Token 288: ' prévu' (ID: 90687)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9631873369216919
    2. '   ' → logprob: -1.088187336921692
    3. '    ' → logprob: -2.7131872177124023
    4. ' de' → logprob: -3.0881872177124023
    5. '           ' → logprob: -3.7131872177124023
    6. '     ' → logprob: -3.8381872177124023
    7. ' complet' → logprob: -3.9631872177124023
    8. ' où' → logprob: -4.213187217712402
    9. ' of' → logprob: -4.588187217712402
    10. ' where' → logprob: -4.713187217712402

Token 289: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30455732345581055
    2. ')' → logprob: -1.5545573234558105
    3. '   ' → logprob: -3.3045573234558105
    4. ' )' → logprob: -5.5545573234558105
    5. '           ' → logprob: -5.5545573234558105
    6. ' pour' → logprob: -6.0545573234558105
    7. '):' → logprob: -7.1795573234558105
    8. ')
' → logprob: -7.1795573234558105
    9. '    ' → logprob: -7.3045573234558105
    10. '):
' → logprob: -7.6795573234558105

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001477963523939252
    2. 'n' → logprob: -6.87647819519043
    3. '        
' → logprob: -8.12647819519043
    4. ' n' → logprob: -9.12647819519043
    5. ',' → logprob: -10.62647819519043
    6. 's' → logprob: -12.87647819519043
    7. ',n' → logprob: -13.12647819519043
    8. '      ' → logprob: -13.25147819519043
    9. '           ' → logprob: -13.75147819519043
    10. '(n' → logprob: -13.87647819519043

Token 291: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5911325216293335
    2. '       ' → logprob: -1.0911325216293335
    3. ' n' → logprob: -2.591132640838623
    4. ' if' → logprob: -3.591132640838623
    5. 'if' → logprob: -4.841132640838623
    6. '        
' → logprob: -10.466132164001465
    7. '   ' → logprob: -11.466132164001465
    8. ' while' → logprob: -12.466132164001465
    9. 's' → logprob: -12.966132164001465
    10. '           ' → logprob: -13.091132164001465

Token 292: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -6.630610641877865e-06
    2. '_' → logprob: -12.000006675720215
    3. 'str' → logprob: -15.750006675720215
    4. '   ' → logprob: -15.875006675720215
    5. '_s' → logprob: -17.0000057220459
    6. '_st' → logprob: -17.3750057220459
    7. '_STR' → logprob: -17.6250057220459
    8. '_Str' → logprob: -18.6250057220459
    9. '```' → logprob: -18.7500057220459
    10. '    ' → logprob: -19.1250057220459

Token 293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '＝' → logprob: -16.773244857788086
    4. '.=' → logprob: -18.648244857788086
    5. '+=' → logprob: -18.648244857788086
    6. '   ' → logprob: -19.273244857788086
    7. '=n' → logprob: -19.398244857788086
    8. '=}' → logprob: -19.398244857788086
    9. '=

' → logprob: -19.773244857788086
    10. ')' → logprob: -19.898244857788086

Token 294: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20165258646011353
    2. ' n' → logprob: -1.7016525268554688
    3. 'f' → logprob: -8.826652526855469
    4. ' f' → logprob: -10.076652526855469
    5. '"' → logprob: -10.326652526855469
    6. ' ' → logprob: -11.326652526855469
    7. '   ' → logprob: -13.201652526855469
    8. ''' → logprob: -13.576652526855469
    9. ' "' → logprob: -14.326652526855469
    10. '  ' → logprob: -14.576652526855469

Token 295: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -6.337155355140567e-05
    2. 'str' → logprob: -9.750062942504883
    3. '"' → logprob: -13.375062942504883
    4. '_STR' → logprob: -14.375062942504883
    5. 'Str' → logprob: -15.250062942504883
    6. '   ' → logprob: -15.375062942504883
    7. 'z' → logprob: -15.500062942504883
    8. '```' → logprob: -15.500062942504883
    9. '_Str' → logprob: -15.750062942504883
    10. 'o' → logprob: -15.750062942504883

Token 296: '.z' (ID: 9161)
  Prédit: '.z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.0005538671393878758
    2. '.r' → logprob: -7.500554084777832
    3. 'z' → logprob: -14.500554084777832
    4. 'r' → logprob: -15.625554084777832
    5. '.' → logprob: -16.000553131103516
    6. ' z' → logprob: -16.750553131103516
    7. '.l' → logprob: -18.000553131103516
    8. ' .' → logprob: -19.250553131103516
    9. '	z' → logprob: -21.000553131103516
    10. '   ' → logprob: -21.375553131103516

Token 297: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -3.128163257315464e-07
    2. '_fill' → logprob: -16.5
    3. '-fill' → logprob: -16.75
    4. '```' → logprob: -17.125
    5. 'f' → logprob: -17.625
    6. '.fill' → logprob: -17.75
    7. 'pad' → logprob: -18.25
    8. 'filled' → logprob: -18.625
    9. '"' → logprob: -18.625
    10. '=' → logprob: -18.875

Token 298: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '4' → logprob: -15.125
    3. ' (' → logprob: -17.75
    4. '(
' → logprob: -17.875
    5. '```' → logprob: -20.875
    6. 'def' → logprob: -23.0
    7. '('' → logprob: -23.25
    8. '((' → logprob: -23.25
    9. '   ' → logprob: -23.375
    10. '("' → logprob: -23.875

Token 299: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.250001907348633
    4. ')' → logprob: -16.625001907348633
    5. '```' → logprob: -16.875001907348633
    6. '' → logprob: -18.250001907348633
    7. '"' → logprob: -18.625001907348633
    8. '٤' → logprob: -19.000001907348633
    9. '۴' → logprob: -19.125001907348633
    10. '       ' → logprob: -19.312501907348633

Token 300: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.455048449221067e-05
    2. ')
' → logprob: -9.875054359436035
    3. '       ' → logprob: -13.125054359436035
    4. '   ' → logprob: -15.375054359436035
    5. '")' → logprob: -15.500054359436035
    6. ' )' → logprob: -15.625054359436035
    7. ')`' → logprob: -15.875054359436035
    8. ')

' → logprob: -15.875054359436035
    9. ')
' → logprob: -17.00005531311035
    10. '<|end|>' → logprob: -17.25005531311035

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14403803646564484
    2. 'result' → logprob: -2.269037961959839
    3. 'count' → logprob: -3.769037961959839
    4. '   ' → logprob: -5.019038200378418
    5. '        
' → logprob: -7.644038200378418
    6. '    
' → logprob: -8.644038200378418
    7. ' result' → logprob: -9.144038200378418
    8. '```' → logprob: -9.394038200378418
    9. 'if' → logprob: -9.644038200378418
    10. '
' → logprob: -10.644038200378418

Token 302: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.00070397206582129
    2. 'res' → logprob: -7.500703811645508
    3. 'count' → logprob: -9.375703811645508
    4. 'iterations' → logprob: -10.250703811645508
    5. ' result' → logprob: -11.250703811645508
    6. '       ' → logprob: -11.500703811645508
    7. 'results' → logprob: -12.750703811645508
    8. 'resultado' → logprob: -14.125703811645508
    9. '```' → logprob: -14.125703811645508
    10. 'steps' → logprob: -14.250703811645508

Token 303: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193047523498535
    2. ' =' → logprob: -1.5019304752349854
    3. '_' → logprob: -14.501930236816406
    4. ')' → logprob: -15.501930236816406
    5. '＝' → logprob: -15.501930236816406
    6. ' =)' → logprob: -16.251930236816406
    7. '_=' → logprob: -16.876930236816406
    8. '=}' → logprob: -16.876930236816406
    9. '<|end|>' → logprob: -16.876930236816406
    10. ',' → logprob: -17.751930236816406

Token 304: ' kap' (ID: 10806)
  Prédit: 'kap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kap' → logprob: -0.01815064437687397
    2. ' kap' → logprob: -4.018150806427002
    3. '   ' → logprob: -15.268150329589844
    4. 'cap' → logprob: -16.018150329589844
    5. 'Kap' → logprob: -16.393150329589844
    6. ' kapt' → logprob: -16.643150329589844
    7. 'k' → logprob: -17.143150329589844
    8. 'kan' → logprob: -17.393150329589844
    9. 'kat' → logprob: -18.268150329589844
    10. ' kapit' → logprob: -18.393150329589844

Token 305: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00014203863975126296
    2. 'rek' → logprob: -9.125142097473145
    3. 'pre' → logprob: -10.625142097473145
    4. 'rep' → logprob: -13.125142097473145
    5. 'pe' → logprob: -13.500142097473145
    6. 'reak' → logprob: -13.625142097473145
    7. 'regar' → logprob: -13.750142097473145
    8. 'per' → logprob: -14.000142097473145
    9. ' re' → logprob: -14.375142097473145
    10. '	re' → logprob: -14.875142097473145

Token 306: 'kar' (ID: 10428)
  Prédit: 'kar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kar' → logprob: -3.650518920039758e-06
    2. 'kap' → logprob: -13.375003814697266
    3. 'ka' → logprob: -14.250003814697266
    4. ' kar' → logprob: -15.250003814697266
    5. 'skar' → logprob: -15.500003814697266
    6. '_' → logprob: -15.625003814697266
    7. 'ker' → logprob: -16.000003814697266
    8. 'kal' → logprob: -16.000003814697266
    9. 'akar' → logprob: -16.125003814697266
    10. 'Kar' → logprob: -16.125003814697266

Token 307: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.375
    3. '"_' → logprob: -17.125
    4. '\' → logprob: -17.875
    5. ' _' → logprob: -18.125
    6. '_t' → logprob: -18.875
    7. '_result' → logprob: -19.0
    8. '_s' → logprob: -19.625
    9. '_n' → logprob: -19.75
    10. ''_' → logprob: -20.0

Token 308: 'outine' (ID: 25038)
  Prédit: 'outine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outine' → logprob: -0.00030316898482851684
    2. '_' → logprob: -8.250303268432617
    3. 'routine' → logprob: -11.000303268432617
    4. 'out' → logprob: -11.750303268432617
    5. '_out' → logprob: -12.625303268432617
    6. 'oute' → logprob: -13.250303268432617
    7. '```' → logprob: -13.250303268432617
    8. 'otine' → logprob: -13.500303268432617
    9. 'outines' → logprob: -13.625303268432617
    10. 'outin' → logprob: -13.625303268432617

Token 309: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.0590548703912646e-05
    2. '(' → logprob: -11.000030517578125
    3. '(result' → logprob: -11.250030517578125
    4. ' (' → logprob: -15.125030517578125
    5. '(
' → logprob: -15.750030517578125
    6. '(k' → logprob: -16.125030517578125
    7. '```' → logprob: -16.500030517578125
    8. '(noun' → logprob: -17.000030517578125
    9. '_result' → logprob: -17.500030517578125
    10. 'result' → logprob: -17.625030517578125

Token 310: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00018387178715784103
    2. 'str' → logprob: -8.625184059143066
    3. '_' → logprob: -13.750184059143066
    4. '(str' → logprob: -14.000184059143066
    5. ')' → logprob: -14.125184059143066
    6. 'Str' → logprob: -14.875184059143066
    7. '```' → logprob: -15.000184059143066
    8. ')_' → logprob: -15.625184059143066
    9. '(n' → logprob: -16.00018310546875
    10. '   ' → logprob: -16.12518310546875

Token 311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02996499091386795
    2. ')
' → logprob: -3.6549649238586426
    3. '   ' → logprob: -6.529964923858643
    4. '       ' → logprob: -7.154964923858643
    5. '()
' → logprob: -7.529964923858643
    6. '()' → logprob: -7.779964923858643
    7. 'if' → logprob: -8.9049654006958
    8. '(n' → logprob: -9.1549654006958
    9. ' if' → logprob: -10.2799654006958
    10. 'result' → logprob: -10.7799654006958

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00695891585201025
    2. 'if' → logprob: -5.506958961486816
    3. '
' → logprob: -6.381958961486816
    4. '   ' → logprob: -7.506958961486816
    5. ' if' → logprob: -8.131958961486816
    6. '<|end|>' → logprob: -8.506958961486816
    7. '```' → logprob: -9.756958961486816
    8. '        
' → logprob: -10.131958961486816
    9. 'print' → logprob: -10.506958961486816
    10. '    
' → logprob: -12.881958961486816

Token 313: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.015110697597265244
    2. ' if' → logprob: -4.515110492706299
    3. '       ' → logprob: -5.515110492706299
    4. '   ' → logprob: -11.015110969543457
    5. 'print' → logprob: -11.640110969543457
    6. '```' → logprob: -13.140110969543457
    7. '	if' → logprob: -13.890110969543457
    8. '        
' → logprob: -14.390110969543457
    9. '
' → logprob: -15.015110969543457
    10. '    
' → logprob: -17.14011001586914

Token 314: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.20141352713108063
    2. 'result' → logprob: -1.7014135122299194
    3. '(result' → logprob: -16.451414108276367
    4. 'Result' → logprob: -17.326414108276367
    5. '_result' → logprob: -17.701414108276367
    6. ' ' → logprob: -18.076414108276367
    7. 'r' → logprob: -19.076414108276367
    8. 'res' → logprob: -19.326414108276367
    9. '	result' → logprob: -19.326414108276367
    10. '$result' → logprob: -20.201414108276367

Token 315: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.001544141792692244
    2. 'is' → logprob: -6.626543998718262
    3. ' ==' → logprob: -8.751543998718262
    4. '==' → logprob: -9.876543998718262
    5. '	is' → logprob: -12.001543998718262
    6. ' ' → logprob: -14.251543998718262
    7. '===' → logprob: -14.751543998718262
    8. ')' → logprob: -15.251543998718262
    9. ' ===' → logprob: -15.376543998718262
    10. '<|end|>' → logprob: -15.626543998718262

Token 316: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16033054888248444
    2. ' None' → logprob: -1.9103305339813232
    3. ' not' → logprob: -9.410330772399902
    4. 'not' → logprob: -10.785330772399902
    5. '   ' → logprob: -12.910330772399902
    6. 'Not' → logprob: -14.660330772399902
    7. '_None' → logprob: -14.660330772399902
    8. '(None' → logprob: -15.785330772399902
    9. '    ' → logprob: -16.285329818725586
    10. '=None' → logprob: -16.785329818725586

Token 317: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16558149456977844
    2. ':
' → logprob: -1.915581464767456
    3. '           ' → logprob: -5.415581703186035
    4. '       ' → logprob: -7.415581703186035
    5. 'print' → logprob: -8.665581703186035
    6. ' print' → logprob: -9.790581703186035
    7. '   ' → logprob: -11.290581703186035
    8. '=' → logprob: -12.165581703186035
    9. ':
' → logprob: -12.290581703186035
    10. '():
' → logprob: -12.290581703186035

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12192001193761826
    2. 'print' → logprob: -2.621920108795166
    3. '       ' → logprob: -3.246920108795166
    4. ' print' → logprob: -5.746920108795166
    5. '	       ' → logprob: -11.746919631958008
    6. '	print' → logprob: -12.246919631958008
    7. '   ' → logprob: -12.496919631958008
    8. '               ' → logprob: -12.996919631958008
    9. '        
' → logprob: -13.121919631958008
    10. '```' → logprob: -13.371919631958008

Token 319: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.070866160094738
    2. '       ' → logprob: -3.070866107940674
    3. ' print' → logprob: -3.945866107940674
    4. '           ' → logprob: -5.945866107940674
    5. '   ' → logprob: -9.945866584777832
    6. '	print' → logprob: -10.570866584777832
    7. '               ' → logprob: -12.570866584777832
    8. '```' → logprob: -13.570866584777832
    9. ' ' → logprob: -14.695866584777832
    10. '	       ' → logprob: -14.695866584777832

Token 320: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00351335690356791
    2. '('' → logprob: -6.003513336181641
    3. '(' → logprob: -7.253513336181641
    4. '"' → logprob: -8.37851333618164
    5. 'NA' → logprob: -10.12851333618164
    6. ' ("' → logprob: -10.62851333618164
    7. '("-' → logprob: -11.75351333618164
    8. '   ' → logprob: -12.12851333618164
    9. '"N' → logprob: -12.12851333618164
    10. 'na' → logprob: -13.37851333618164

Token 321: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.0004143456753809005
    2. ' NA' → logprob: -8.62541389465332
    3. 'N' → logprob: -8.87541389465332
    4. '   ' → logprob: -9.87541389465332
    5. '  ' → logprob: -11.12541389465332
    6. ' ' → logprob: -11.25041389465332
    7. 'None' → logprob: -11.62541389465332
    8. 'na' → logprob: -13.87541389465332
    9. 'Na' → logprob: -14.12541389465332
    10. 'NE' → logprob: -14.62541389465332

Token 322: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.12700402736663818
    2. '")' → logprob: -2.1270041465759277
    3. '")
' → logprob: -9.75200366973877
    4. ')' → logprob: -12.12700366973877
    5. ')
' → logprob: -12.12700366973877
    6. '   ' → logprob: -13.75200366973877
    7. '"' → logprob: -14.12700366973877
    8. '')
' → logprob: -14.37700366973877
    9. ' ")
' → logprob: -14.37700366973877
    10. '")

' → logprob: -14.50200366973877

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007924345321953297
    2. 'else' → logprob: -5.007924556732178
    3. ' else' → logprob: -6.757924556732178
    4. '<|end|>' → logprob: -10.38292407989502
    5. '```' → logprob: -12.13292407989502
    6. 'elif' → logprob: -12.38292407989502
    7. '   ' → logprob: -13.38292407989502
    8. ')' → logprob: -14.38292407989502
    9. '           ' → logprob: -14.38292407989502
    10. '	else' → logprob: -14.50792407989502

Token 324: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3063819110393524
    2. '       ' → logprob: -1.8063819408416748
    3. ' else' → logprob: -2.306381940841675
    4. 'elif' → logprob: -11.556382179260254
    5. '   ' → logprob: -11.806382179260254
    6. '	else' → logprob: -11.931382179260254
    7. '_else' → logprob: -14.806382179260254
    8. '```' → logprob: -14.806382179260254
    9. '      ' → logprob: -15.056382179260254
    10. '<|end|>' → logprob: -15.056382179260254

Token 325: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3523646891117096
    2. '           ' → logprob: -1.6023646593093872
    3. ':
' → logprob: -2.3523647785186768
    4. ' :' → logprob: -8.477364540100098
    5. ' :
' → logprob: -9.602364540100098
    6. '       ' → logprob: -9.727364540100098
    7. ' print' → logprob: -10.727364540100098
    8. 'print' → logprob: -10.852364540100098
    9. '{' → logprob: -11.102364540100098
    10. '          ' → logprob: -12.102364540100098

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3307378590106964
    2. 'print' → logprob: -1.580737829208374
    3. ' print' → logprob: -2.580737829208374
    4. '       ' → logprob: -9.705738067626953
    5. '   ' → logprob: -13.205738067626953
    6. '```' → logprob: -13.580738067626953
    7. '(print' → logprob: -15.330738067626953
    8. '{' → logprob: -15.455738067626953
    9. '         ' → logprob: -15.705738067626953
    10. '	print' → logprob: -15.955738067626953

Token 327: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0206720617134124e-05
    2. ' print' → logprob: -11.50001049041748
    3. '       ' → logprob: -18.250009536743164
    4. '           ' → logprob: -20.500009536743164
    5. '   ' → logprob: -20.625009536743164
    6. '	print' → logprob: -22.875009536743164
    7. 'printf' → logprob: -24.500009536743164
    8. '```' → logprob: -24.750009536743164
    9. '(print' → logprob: -24.875009536743164
    10. '.print' → logprob: -25.375009536743164

Token 328: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -13.00000286102295
    3. '(f' → logprob: -14.25000286102295
    4. 'result' → logprob: -15.37500286102295
    5. '(results' → logprob: -17.500003814697266
    6. '(res' → logprob: -18.750003814697266
    7. '=result' → logprob: -20.500003814697266
    8. ',result' → logprob: -20.500003814697266
    9. '(
' → logprob: -21.000003814697266
    10. '(resultado' → logprob: -21.250003814697266

Token 329: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. '())' → logprob: -12.625009536743164
    3. '()' → logprob: -12.875009536743164
    4. ')
' → logprob: -13.250009536743164
    5. ' )' → logprob: -14.500009536743164
    6. '   ' → logprob: -14.875009536743164
    7. '")' → logprob: -15.750009536743164
    8. '))' → logprob: -15.875009536743164
    9. '       ' → logprob: -16.125009536743164
    10. ')}' → logprob: -16.500009536743164

Token 330: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0683535037969705e-05
    2. ' if' → logprob: -12.37501049041748
    3. 'main' → logprob: -12.62501049041748
    4. '```' → logprob: -13.50001049041748
    5. '#' → logprob: -14.00001049041748
    6. '<|end|>' → logprob: -14.62501049041748
    7. '
' → logprob: -15.25001049041748
    8. 'print' → logprob: -17.125011444091797
    9. '\n' → logprob: -17.125011444091797
    10. 'If' → logprob: -17.500011444091797

Token 331: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5761493444442749
    2. '__' → logprob: -0.8261493444442749
    3. 'name' → logprob: -9.201148986816406
    4. '_' → logprob: -10.076148986816406
    5. '_name' → logprob: -10.201148986816406
    6. ' ' → logprob: -11.076148986816406
    7. '___' → logprob: -11.451148986816406
    8. ' ' → logprob: -13.326148986816406
    9. ' ' → logprob: -14.826148986816406
    10. 'Name' → logprob: -15.076148986816406

Token 332: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0059557026252150536
    2. '==' → logprob: -5.380955696105957
    3. ' ==' → logprob: -6.755955696105957
    4. '=="' → logprob: -9.130955696105957
    5. ' __' → logprob: -10.755955696105957
    6. '_' → logprob: -11.505955696105957
    7. '__.__' → logprob: -11.880955696105957
    8. 'name' → logprob: -12.130955696105957
    9. '___' → logprob: -12.630955696105957
    10. '=' → logprob: -12.630955696105957

Token 333: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.3915141355246305e-05
    2. '==' → logprob: -11.12502384185791
    3. '__.__' → logprob: -12.25002384185791
    4. '=="' → logprob: -12.62502384185791
    5. '__["' → logprob: -15.00002384185791
    6. '____' → logprob: -16.250024795532227
    7. '___' → logprob: -16.250024795532227
    8. '__("' → logprob: -16.250024795532227
    9. ' ==' → logprob: -16.375024795532227
    10. '__*/' → logprob: -17.125024795532227

Token 334: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.48415225744247437
    2. '__' → logprob: -1.1091523170471191
    3. ' ==' → logprob: -3.234152317047119
    4. '=="' → logprob: -4.234152317047119
    5. '=='' → logprob: -10.484151840209961
    6. '===' → logprob: -11.734151840209961
    7. '"' → logprob: -12.234151840209961
    8. '=' → logprob: -12.359151840209961
    9. ' =="' → logprob: -13.109151840209961
    10. '___' → logprob: -13.234151840209961

Token 335: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005298146512359381
    2. ''' → logprob: -5.255298137664795
    3. ' "__' → logprob: -9.755298614501953
    4. '__' → logprob: -12.755298614501953
    5. '"user' → logprob: -13.005298614501953
    6. ''"' → logprob: -15.130298614501953
    7. '"name' → logprob: -15.255298614501953
    8. ' '__' → logprob: -15.255298614501953
    9. '"default' → logprob: -16.005298614501953
    10. '"_' → logprob: -16.380298614501953

Token 336: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0367407500743866
    2. '__' → logprob: -3.911740779876709
    3. '"' → logprob: -4.161740779876709
    4. ''' → logprob: -8.03674030303955
    5. 'name' → logprob: -8.78674030303955
    6. '==' → logprob: -13.03674030303955
    7. '_main' → logprob: -13.41174030303955
    8. '"name' → logprob: -13.53674030303955
    9. '主' → logprob: -13.91174030303955
    10. ' main' → logprob: -14.03674030303955

Token 337: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018326926976442337
    2. '__' → logprob: -4.018326759338379
    3. '__':
' → logprob: -8.643326759338379
    4. '__["' → logprob: -15.143326759338379
    5. '__.__' → logprob: -15.518326759338379
    6. '__.' → logprob: -16.143327713012695
    7. '__:' → logprob: -16.893327713012695
    8. '__",' → logprob: -17.143327713012695
    9. '__
' → logprob: -17.268327713012695
    10. '__("' → logprob: -17.393327713012695

Token 338: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00017231269157491624
    2. ' main' → logprob: -9.37517261505127
    3. '   ' → logprob: -9.75017261505127
    4. '	main' → logprob: -10.50017261505127
    5. '__' → logprob: -13.37517261505127
    6. '_main' → logprob: -17.000171661376953
    7. ' ' → logprob: -17.875171661376953
    8. '(main' → logprob: -19.375171661376953
    9. 'amain' → logprob: -19.625171661376953
    10. '.main' → logprob: -20.250171661376953

Token 339: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. 'import' → logprob: -21.75
    4. '	main' → logprob: -21.75
    5. '   ' → logprob: -24.5
    6. '.main' → logprob: -26.375
    7. '(main' → logprob: -26.5
    8. '_main' → logprob: -27.375
    9. 'Main' → logprob: -29.0
    10. 'mainwindow' → logprob: -29.75

Token 340: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 338
Tokens correctement prédits (1ère position, stricte): 137
Tokens correctement prédits (1ère position, avec adaptation): 152
Tokens correctement prédits (top 10): 252
Précision stricte (1ère position): 40.53%
Précision adaptée (1ère position): 44.97%
Précision (top 10): 74.56%
================================================================================
