================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def main():
    input = sys.stdin.readline  # Lecture rapide des entrées

    while True:
        n, U = map(int, input().split())
        if n == 0 and U == 0:
            break

        credits = [0] * n       # Liste des crédits de chaque cours
        prereqs = [0] * n       # Prérequis sous forme de bitmask

        for i in range(n):
            data = list(map(int, input().split()))
            c = data[0]
            k = data[1]
            prereq_list = data[2:] if k > 0 else []

            credits[i] = c
            # Construire un bitmask des prérequis
            mask = 0
            for p in prereq_list:
                mask |= (1 << p)
            prereqs[i] = mask

        # On va tester toutes les combinaisons possibles de cours (jusqu'à 2^n)
        # et vérifier pour chacune :
        #  - si tous les prérequis des cours choisis sont aussi dans la sélection
        #  - si la somme des crédits >= U
        # Parmi celles qui satisfont les conditions, on garde la taille minimale
        ans = n  # maximum n cours

        # Parcours de tous les sous-ensembles possibles
        # Pour chaque sous-ensemble S, on vérifie :
        #  - pour chaque cours i dans S, prereqs[i] subset de S
        #  - somme credits dans S >= U
        # On cherche la taille minimale de S qui satisfait
        for subset in range(1 << n):
            total_credits = 0
            valid = True
            for i in range(n):
                if (subset & (1 << i)) != 0:
                    # Le cours i est choisi, vérifier prérequis
                    # prereqs[i] doit être inclus dans subset
                    if (prereqs[i] & subset) != prereqs[i]:
                        valid = False
                        break
                    total_credits += credits[i]
            if valid and total_credits >= U:
                # compter le nombre de cours dans subset
                count = bin(subset).count('1')
                if count < ans:
                    ans = count

        print(ans)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03585657849907875
    2. '\n' → logprob: -4.0358567237854
    3. 'import' → logprob: -4.7858567237854
    4. '<|end|>' → logprob: -5.2858567237854
    5. '\' → logprob: -7.0358567237854
    6. '<|end|>' → logprob: -7.5358567237854
    7. 'newline' → logprob: -7.9108567237854
    8. ',' → logprob: -8.160856246948242
    9. '[' → logprob: -8.285856246948242
    10. '' → logprob: -8.285856246948242

Token 4: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015260044485330582
    2. ' space' → logprob: -5.765260219573975
    3. '  ' → logprob: -6.390260219573975
    4. ' a' → logprob: -6.390260219573975
    5. ' ' → logprob: -6.515260219573975
    6. '<|end|>' → logprob: -7.015260219573975
    7. ' def' → logprob: -7.515260219573975
    8. ' process' → logprob: -7.765260219573975
    9. '_' → logprob: -7.765260219573975
    10. ' os' → logprob: -8.140259742736816

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024202194064855576
    2. '():' → logprob: -4.024202346801758
    3. '(:' → logprob: -5.649202346801758
    4. ':' → logprob: -6.149202346801758
    5. ' (' → logprob: -9.899202346801758
    6. '):' → logprob: -9.899202346801758
    7. '(`' → logprob: -10.024202346801758
    8. '(
' → logprob: -10.024202346801758
    9. '```' → logprob: -10.149202346801758
    10. '(":' → logprob: -10.274202346801758

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18230357766151428
    2. '(' → logprob: -2.3073036670684814
    3. '():' → logprob: -3.5573036670684814
    4. 'print' → logprob: -4.682303428649902
    5. ':' → logprob: -4.932303428649902
    6. '    ' → logprob: -5.307303428649902
    7. '\' → logprob: -5.432303428649902
    8. '()' → logprob: -5.682303428649902
    9. '(sys' → logprob: -6.182303428649902
    10. '(print' → logprob: -6.557303428649902

Token 7: ' input' (ID: 3422)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.299076646566391
    2. 'print' → logprob: -2.174076557159424
    3. '   ' → logprob: -2.299076557159424
    4. ' ' → logprob: -3.674076557159424
    5. 'pass' → logprob: -5.174076557159424
    6. ' print' → logprob: -5.299076557159424
    7. ' pass' → logprob: -5.299076557159424
    8. '  ' → logprob: -7.424076557159424
    9. '_' → logprob: -7.924076557159424
    10. '     ' → logprob: -8.424077033996582

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09582046419382095
    2. '()' → logprob: -2.470820426940918
    3. '_' → logprob: -5.970820426940918
    4. '_data' → logprob: -6.845820426940918
    5. '.' → logprob: -7.470820426940918
    6. '().' → logprob: -7.845820426940918
    7. '("' → logprob: -8.095820426940918
    8. '('' → logprob: -8.220820426940918
    9. '_line' → logprob: -8.220820426940918
    10. '("")' → logprob: -8.220820426940918

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.03509318828582764
    2. ' input' → logprob: -3.660093307495117
    3. 'sys' → logprob: -5.035093307495117
    4. 'input' → logprob: -6.160093307495117
    5. ' ' → logprob: -9.035093307495117
    6. '	sys' → logprob: -11.910093307495117
    7. '   ' → logprob: -12.535093307495117
    8. '=sys' → logprob: -12.910093307495117
    9. '(sys' → logprob: -13.410093307495117
    10. ' open' → logprob: -14.785093307495117

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005182054825127125
    2. '.stdin' → logprob: -5.380182266235352
    3. ' .' → logprob: -8.005182266235352
    4. '.input' → logprob: -9.505182266235352
    5. '.readline' → logprob: -9.880182266235352
    6. '.argv' → logprob: -10.005182266235352
    7. '.stdout' → logprob: -10.630182266235352
    8. '.import' → logprob: -10.880182266235352
    9. '.user' → logprob: -13.380182266235352
    10. '.get' → logprob: -13.380182266235352

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.24632273614406586
    2. '.' → logprob: -1.871322751045227
    3. '.read' → logprob: -2.7463226318359375
    4. '.Read' → logprob: -8.996322631835938
    5. '.readlines' → logprob: -9.871322631835938
    6. 'read' → logprob: -10.621322631835938
    7. ' .' → logprob: -11.371322631835938
    8. ')' → logprob: -11.496322631835938
    9. '.READ' → logprob: -12.371322631835938
    10. '```' → logprob: -12.496322631835938

Token 12: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5923430323600769
    2. '(' → logprob: -0.8423430323600769
    3. '(
' → logprob: -4.592342853546143
    4. '('' → logprob: -6.967342853546143
    5. '().' → logprob: -7.342342853546143
    6. '`' → logprob: -7.342342853546143
    7. ')' → logprob: -7.592342853546143
    8. ' ' → logprob: -7.717342853546143
    9. '```' → logprob: -7.842342853546143
    10. '()
' → logprob: -8.2173433303833

Token 13: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1348986029624939
    2. '(' → logprob: -2.1348986625671387
    3. '(
' → logprob: -5.259898662567139
    4. '()
' → logprob: -6.259898662567139
    5. '()\' → logprob: -9.00989818572998
    6. ')' → logprob: -9.13489818572998
    7. ' ' → logprob: -9.25989818572998
    8. '   ' → logprob: -9.38489818572998
    9. '()

' → logprob: -9.75989818572998
    10. '(

' → logprob: -10.00989818572998

Token 14: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23417294025421143
    2. '<|end|>' → logprob: -1.9841729402542114
    3. '<|end|>' → logprob: -3.859172821044922
    4. '()' → logprob: -4.359172821044922
    5. '  ' → logprob: -4.734172821044922
    6. ')' → logprob: -5.359172821044922
    7. ' )' → logprob: -5.734172821044922
    8. ' readline' → logprob: -5.859172821044922
    9. '    ' → logprob: -5.984172821044922
    10. 'input' → logprob: -6.234172821044922

Token 15: ' rapide' (ID: 44887)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5768856406211853
    2. '()' → logprob: -1.45188570022583
    3. '(' → logprob: -3.20188570022583
    4. 's' → logprob: -3.32688570022583
    5. '  ' → logprob: -3.70188570022583
    6. '_' → logprob: -4.07688570022583
    7. ''s' → logprob: -4.20188570022583
    8. '<|end|>' → logprob: -4.45188570022583
    9. ' (' → logprob: -4.82688570022583
    10. ')' → logprob: -4.82688570022583

Token 16: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4664170742034912
    2. '    
' → logprob: -1.4664170742034912
    3. '\' → logprob: -3.341417074203491
    4. '(' → logprob: -3.341417074203491
    5. '\n' → logprob: -3.966417074203491
    6. '()' → logprob: -4.34141731262207
    7. '  
' → logprob: -4.71641731262207
    8. ' ' → logprob: -4.96641731262207
    9. '    ' → logprob: -5.34141731262207
    10. ')' → logprob: -5.71641731262207

Token 17: ' entr' (ID: 7072)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.44709858298301697
    2. ' lignes' → logprob: -1.6970986127853394
    3. ' ' → logprob: -3.07209849357605
    4. 'l' → logprob: -3.32209849357605
    5. ' entr' → logprob: -3.32209849357605
    6. ' input' → logprob: -4.072098731994629
    7. ' l' → logprob: -5.197098731994629
    8. 'input' → logprob: -5.322098731994629
    9. 'entrée' → logprob: -5.322098731994629
    10. ' lines' → logprob: -5.822098731994629

Token 18: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0005386164411902428
    2. 'ée' → logprob: -8.12553882598877
    3. 'é' → logprob: -8.87553882598877
    4. 'ees' → logprob: -9.25053882598877
    5. 'e' → logprob: -13.12553882598877
    6. 'és' → logprob: -13.62553882598877
    7. 'ê' → logprob: -14.12553882598877
    8. 'ó' → logprob: -14.75053882598877
    9. '�' → logprob: -14.75053882598877
    10. 'ee' → logprob: -14.87553882598877

Token 19: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5467810034751892
    2. '    
' → logprob: -1.171781063079834
    3. ')' → logprob: -3.796781063079834
    4. '()' → logprob: -3.921781063079834
    5. '\' → logprob: -4.171781063079834
    6. '  
' → logprob: -4.296781063079834
    7. '\n' → logprob: -4.546781063079834
    8. ' ' → logprob: -5.171781063079834
    9. '(' → logprob: -5.296781063079834
    10. '   
' → logprob: -5.421781063079834

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022499775514006615
    2. '    
' → logprob: -4.0224995613098145
    3. ' ' → logprob: -7.1474995613098145
    4. 'n' → logprob: -7.3974995613098145
    5. '    ' → logprob: -7.5224995613098145
    6. '  ' → logprob: -7.6474995613098145
    7. '(' → logprob: -7.7724995613098145
    8. 'data' → logprob: -7.8974995613098145
    9. '()' → logprob: -9.022500038146973
    10. '   
' → logprob: -9.022500038146973

Token 21: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3312492370605469
    2. 'data' → logprob: -2.206249237060547
    3. 'user' → logprob: -2.456249237060547
    4. 'name' → logprob: -3.706249237060547
    5. 'x' → logprob: -4.081249237060547
    6. 'line' → logprob: -4.331249237060547
    7. '   ' → logprob: -4.831249237060547
    8. 'value' → logprob: -4.956249237060547
    9. 'text' → logprob: -5.956249237060547
    10. 'for' → logprob: -6.206249237060547

Token 22: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0005349211278371513
    2. 'True' → logprob: -7.625535011291504
    3. ' ' → logprob: -10.375535011291504
    4. '(True' → logprob: -11.375535011291504
    5. ' not' → logprob: -12.625535011291504
    6. '  ' → logprob: -15.375535011291504
    7. ' (' → logprob: -15.500535011291504
    8. ' true' → logprob: -15.625535011291504
    9. '    ' → logprob: -15.750535011291504
    10. ' input' → logprob: -16.625534057617188

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009554093703627586
    2. '():' → logprob: -8.125955581665039
    3. ' :' → logprob: -8.250955581665039
    4. ':
' → logprob: -8.375955581665039
    5. '):' → logprob: -9.250955581665039
    6. '       ' → logprob: -10.875955581665039
    7. '   ' → logprob: -11.000955581665039
    8. ':**' → logprob: -11.375955581665039
    9. ',' → logprob: -11.500955581665039
    10. '<|end|>' → logprob: -12.750955581665039

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1540505588054657
    2. '    ' → logprob: -2.154050588607788
    3. ' ' → logprob: -4.529050350189209
    4. '        
' → logprob: -4.779050350189209
    5. '        ' → logprob: -5.654050350189209
    6. '   ' → logprob: -6.654050350189209
    7. '     
' → logprob: -7.154050350189209
    8. '      ' → logprob: -7.654050350189209
    9. '    
' → logprob: -8.029050827026367
    10. '     ' → logprob: -8.279050827026367

Token 25: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.38170742988586426
    2. 'line' → logprob: -1.8817074298858643
    3. '       ' → logprob: -2.3817074298858643
    4. ' ligne' → logprob: -3.5067074298858643
    5. 'data' → logprob: -4.256707191467285
    6. '   ' → logprob: -4.381707191467285
    7. ' data' → logprob: -4.881707191467285
    8. 'ligne' → logprob: -5.631707191467285
    9. 's' → logprob: -7.006707191467285
    10. 'user' → logprob: -7.006707191467285

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0182053092867136
    2. '=' → logprob: -4.018205165863037
    3. ' ' → logprob: -10.018205642700195
    4. '=int' → logprob: -12.393205642700195
    5. ' >' → logprob: -13.143205642700195
    6. '>' → logprob: -14.143205642700195
    7. ',' → logprob: -14.518205642700195
    8. ')' → logprob: -14.518205642700195
    9. '=input' → logprob: -14.768205642700195
    10. ' ==' → logprob: -14.768205642700195

Token 27: ' U' (ID: 601)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2814021110534668
    2. ' m' → logprob: -2.656402111053467
    3. ' input' → logprob: -2.906402111053467
    4. ' =' → logprob: -3.031402111053467
    5. 'm' → logprob: -4.031402111053467
    6. 'input' → logprob: -4.156402111053467
    7. '    ' → logprob: -4.406402111053467
    8. ' s' → logprob: -4.781402111053467
    9. '=' → logprob: -5.281402111053467
    10. ' n' → logprob: -6.031402111053467

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3344608247280121
    2. '=' → logprob: -1.3344608545303345
    3. ',' → logprob: -3.959460735321045
    4. 'n' → logprob: -7.209460735321045
    5. 'p' → logprob: -7.209460735321045
    6. ' ' → logprob: -9.084461212158203
    7. ')' → logprob: -9.709461212158203
    8. '   ' → logprob: -9.959461212158203
    9. 's' → logprob: -10.334461212158203
    10. 'ser' → logprob: -10.959461212158203

Token 29: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3594582974910736
    2. ' map' → logprob: -1.359458327293396
    3. 'input' → logprob: -3.3594582080841064
    4. 'map' → logprob: -4.6094584465026855
    5. ' ' → logprob: -8.734457969665527
    6. ' sys' → logprob: -8.734457969665527
    7. ' int' → logprob: -10.484457969665527
    8. 'int' → logprob: -10.984457969665527
    9. ' list' → logprob: -11.484457969665527
    10. '   ' → logprob: -11.609457969665527

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3957100510597229
    2. '(' → logprob: -1.5207099914550781
    3. '(str' → logprob: -2.270709991455078
    4. '(lambda' → logprob: -6.020709991455078
    5. '(input' → logprob: -6.020709991455078
    6. '(
' → logprob: -9.895709991455078
    7. '(eval' → logprob: -10.770709991455078
    8. '(list' → logprob: -11.145709991455078
    9. 'int' → logprob: -11.770709991455078
    10. ' (' → logprob: -12.270709991455078

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37455156445503235
    2. ')' → logprob: -2.12455153465271
    3. '(input' → logprob: -2.12455153465271
    4. ',input' → logprob: -2.87455153465271
    5. '(' → logprob: -4.749551773071289
    6. '(sys' → logprob: -5.249551773071289
    7. '(),' → logprob: -6.624551773071289
    8. 'input' → logprob: -6.999551773071289
    9. ' ,' → logprob: -8.499551773071289
    10. ' input' → logprob: -8.749551773071289

Token 32: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25193464756011963
    2. 'input' → logprob: -1.5019346475601196
    3. ')' → logprob: -12.501935005187988
    4. '(input' → logprob: -14.751935005187988
    5. ',input' → logprob: -14.876935005187988
    6. '=input' → logprob: -15.001935005187988
    7. '	input' → logprob: -15.501935005187988
    8. ' sys' → logprob: -15.751935005187988
    9. '_input' → logprob: -16.126934051513672
    10. 'sys' → logprob: -16.126934051513672

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001197966979816556
    2. '()' → logprob: -6.751197814941406
    3. '())' → logprob: -10.626197814941406
    4. ')' → logprob: -13.876197814941406
    5. ' ().' → logprob: -14.376197814941406
    6. '()))' → logprob: -14.501197814941406
    7. '()
' → logprob: -14.626197814941406
    8. '(' → logprob: -14.626197814941406
    9. '   ' → logprob: -16.126197814941406
    10. '().'' → logprob: -17.001197814941406

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.47606146335601807
    2. 'strip' → logprob: -0.9760614633560181
    3. 'rstrip' → logprob: -6.2260613441467285
    4. ' split' → logprob: -12.976061820983887
    5. ' strip' → logprob: -14.101061820983887
    6. ')' → logprob: -14.476061820983887
    7. 'rs' → logprob: -14.851061820983887
    8. 'read' → logprob: -14.976061820983887
    9. '```' → logprob: -15.101061820983887
    10. '(split' → logprob: -15.351061820983887

Token 35: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011175924446433783
    2. ')' → logprob: -7.501117706298828
    3. '()' → logprob: -7.501117706298828
    4. '())
' → logprob: -11.751117706298828
    5. '()))' → logprob: -12.751117706298828
    6. '(' → logprob: -14.626117706298828
    7. ' ())' → logprob: -15.001117706298828
    8. '())

' → logprob: -16.001117706298828
    9. '))' → logprob: -16.001117706298828
    10. '(),' → logprob: -16.376117706298828

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1438976526260376
    2. '<|end|>' → logprob: -2.143897533416748
    3. ')' → logprob: -4.643897533416748
    4. '<|end|>' → logprob: -5.768897533416748
    5. '
' → logprob: -6.643897533416748
    6. '        
' → logprob: -7.268897533416748
    7. ':' → logprob: -8.143898010253906
    8. ' ' → logprob: -8.143898010253906
    9. ' if' → logprob: -8.268898010253906
    10. '   ' → logprob: -8.518898010253906

Token 37: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5842163562774658
    2. '<|end|>' → logprob: -1.4592163562774658
    3. '
' → logprob: -2.584216356277466
    4. ' if' → logprob: -2.834216356277466
    5. ' ' → logprob: -4.209216117858887
    6. '        ' → logprob: -4.584216117858887
    7. 'if' (adapté à ' if') → logprob: -4.584216117858887
    8. '        
' → logprob: -4.834216117858887
    9. ')' → logprob: -5.209216117858887
    10. '\n' → logprob: -5.334216117858887

Token 38: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01486891321837902
    2. 'n' → logprob: -4.26486873626709
    3. ' not' → logprob: -7.26486873626709
    4. 'not' → logprob: -12.38986873626709
    5. '	n' → logprob: -14.38986873626709
    6. ' ' → logprob: -14.76486873626709
    7. '(n' → logprob: -16.014869689941406
    8. ' ' → logprob: -16.139869689941406
    9. ' (' → logprob: -16.389869689941406
    10. ' н' → logprob: -17.889869689941406

Token 39: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5233443975448608
    2. '==' → logprob: -0.8983443975448608
    3. ' <=' → logprob: -9.523344039916992
    4. '<=' → logprob: -9.648344039916992
    5. '=' → logprob: -10.023344039916992
    6. '<' → logprob: -11.273344039916992
    7. ' <' → logprob: -11.773344039916992
    8. ' ' → logprob: -12.273344039916992
    9. ')' → logprob: -12.398344039916992
    10. '0' → logprob: -13.273344039916992

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06994321197271347
    2. ' ' → logprob: -2.6949431896209717
    3. '  ' → logprob: -13.19494342803955
    4. '-' → logprob: -13.88244342803955
    5. ' ' → logprob: -14.38244342803955
    6. '```' → logprob: -14.56994342803955
    7. '   ' → logprob: -14.69494342803955
    8. '    ' → logprob: -14.88244342803955
    9. '=' → logprob: -14.88244342803955
    10. ' -' → logprob: -15.31994342803955

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005699523026123643
    2. ' ' → logprob: -7.500569820404053
    3. '-' → logprob: -11.375570297241211
    4. ' -' → logprob: -13.250570297241211
    5. '```' → logprob: -13.813070297241211
    6. '  ' → logprob: -14.938070297241211
    7. '   ' → logprob: -15.063070297241211
    8. '=' → logprob: -15.750570297241211
    9. '    ' → logprob: -15.938070297241211
    10. '۰' → logprob: -15.938070297241211

Token 42: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026692578569054604
    2. 'and' → logprob: -3.6516926288604736
    3. ':' → logprob: -8.026692390441895
    4. ' ' → logprob: -10.276692390441895
    5. ' or' → logprob: -10.526692390441895
    6. '	and' → logprob: -13.651692390441895
    7. '  ' → logprob: -14.151692390441895
    8. ' :' → logprob: -14.526692390441895
    9. ' ' → logprob: -14.776692390441895
    10. '   ' → logprob: -15.026692390441895

Token 43: ' U' (ID: 601)
  Prédit: ' U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.0430021695792675
    2. 'U' → logprob: -3.168002128601074
    3. '	U' → logprob: -13.293002128601074
    4. ' ' → logprob: -13.918002128601074
    5. ' ' → logprob: -15.293002128601074
    6. '  ' → logprob: -16.54300308227539
    7. '   ' → logprob: -16.79300308227539
    8. '    ' → logprob: -17.16800308227539
    9. '<U' → logprob: -17.66800308227539
    10. ''U' → logprob: -18.66800308227539

Token 44: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08895353227853775
    2. '==' → logprob: -2.4639534950256348
    3. '=' → logprob: -11.588953971862793
    4. ' ' → logprob: -13.088953971862793
    5. ' =' → logprob: -13.713953971862793
    6. '  ' → logprob: -15.338953971862793
    7. '0' → logprob: -15.338953971862793
    8. '==-' → logprob: -15.338953971862793
    9. ')' → logprob: -15.463953971862793
    10. '	' → logprob: -16.213953018188477

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889143377542496
    2. ' ' → logprob: -2.5788915157318115
    3. '  ' → logprob: -14.07889175415039
    4. '   ' → logprob: -15.01639175415039
    5. ' ' → logprob: -15.51639175415039
    6. ' -' → logprob: -16.32889175415039
    7. '```' → logprob: -16.95389175415039
    8. '-' → logprob: -17.01639175415039
    9. '=' → logprob: -17.39139175415039
    10. '00' → logprob: -17.64139175415039

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005929743405431509
    2. ' ' → logprob: -5.130929946899414
    3. '-' → logprob: -15.068429946899414
    4. '  ' → logprob: -15.130929946899414
    5. '   ' → logprob: -15.755929946899414
    6. ' -' → logprob: -16.005929946899414
    7. ' ' → logprob: -17.130929946899414
    8. 'n' → logprob: -17.193429946899414
    9. 'o' → logprob: -17.318429946899414
    10. '00' → logprob: -17.318429946899414

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004919105558656156
    2. ':
' → logprob: -7.625492095947266
    3. ' :' → logprob: -13.500492095947266
    4. ':return' → logprob: -13.500492095947266
    5. '):' → logprob: -14.375492095947266
    6. '       ' → logprob: -15.750492095947266
    7. '   ' → logprob: -16.000492095947266
    8. '.' → logprob: -16.375492095947266
    9. ':
' → logprob: -16.625492095947266
    10. ',' → logprob: -17.750492095947266

Token 48: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22855053842067719
    2. '       ' → logprob: -1.9785505533218384
    3. ':' → logprob: -2.728550434112549
    4. ':
' → logprob: -8.103550910949707
    5. '   ' → logprob: -8.353550910949707
    6. ' break' → logprob: -10.103550910949707
    7. '.' → logprob: -10.978550910949707
    8. '<|end|>' → logprob: -11.103550910949707
    9. '	       ' → logprob: -11.228550910949707
    10. '	break' → logprob: -11.478550910949707

Token 49: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.43045568466186523
    2. '           ' → logprob: -1.4304556846618652
    3. 'break' (adapté à ' break') → logprob: -2.3054556846618652
    4. '       ' → logprob: -4.555455684661865
    5. '	break' → logprob: -9.180456161499023
    6. 'return' → logprob: -9.305456161499023
    7. '               ' → logprob: -9.680456161499023
    8. '   ' → logprob: -10.055456161499023
    9. ' return' → logprob: -10.180456161499023
    10. '_break' → logprob: -12.055456161499023

Token 50: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37415361404418945
    2. '       ' → logprob: -1.4991536140441895
    3. '<|end|>' → logprob: -2.4991536140441895
    4. '        
' → logprob: -5.6241536140441895
    5. '<|end|>' → logprob: -7.1241536140441895
    6. '\n' → logprob: -7.1241536140441895
    7. '' → logprob: -8.499153137207031
    8. ')' → logprob: -8.499153137207031
    9. '        ' → logprob: -8.499153137207031
    10. '
' → logprob: -8.999153137207031

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024654269218444824
    2. '<|end|>' → logprob: -4.649654388427734
    3. '
' → logprob: -4.899654388427734
    4. '        
' → logprob: -5.774654388427734
    5. '   ' → logprob: -6.274654388427734
    6. '<|end|>' → logprob: -7.024654388427734
    7. '    ' → logprob: -8.149654388427734
    8. '        ' → logprob: -8.399654388427734
    9. '\n' → logprob: -8.899654388427734
    10. ')' → logprob: -9.024654388427734

Token 52: ' credits' (ID: 30198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8413807153701782
    2. ' distances' → logprob: -2.2163805961608887
    3. 'prices' → logprob: -2.7163805961608887
    4. ' prices' → logprob: -3.0913805961608887
    5. 'values' → logprob: -3.4663805961608887
    6. ' data' → logprob: -3.4663805961608887
    7. 'points' → logprob: -3.4663805961608887
    8. 'weights' → logprob: -3.5913805961608887
    9. ' points' → logprob: -3.7163805961608887
    10. ' values' → logprob: -3.8413805961608887

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026544345542788506
    2. '=' → logprob: -3.7765443325042725
    3. ',' → logprob: -6.401544570922852
    4. 's' → logprob: -7.151544570922852
    5. '_per' → logprob: -8.901544570922852
    6. '   ' → logprob: -8.901544570922852
    7. '_' → logprob: -9.276544570922852
    8. '_values' → logprob: -9.776544570922852
    9. ' ' → logprob: -10.026544570922852
    10. '[]' → logprob: -10.276544570922852

Token 54: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6953985691070557
    2. ' []' → logprob: -1.0703985691070557
    3. ' [' → logprob: -2.1953985691070557
    4. ' list' → logprob: -3.6953985691070557
    5. '[' → logprob: -4.445398330688477
    6. '[list' → logprob: -4.945398330688477
    7. 'list' → logprob: -6.195398330688477
    8. '[int' → logprob: -7.820398330688477
    9. '[input' → logprob: -7.820398330688477
    10. '[n' → logprob: -9.070398330688477

Token 55: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2262297123670578
    2. '0' → logprob: -1.7262296676635742
    3. ' int' → logprob: -3.976229667663574
    4. 'float' → logprob: -6.351229667663574
    5. ']' → logprob: -6.476229667663574
    6. 'map' → logprob: -6.976229667663574
    7. 'list' → logprob: -7.851229667663574
    8. ']int' → logprob: -8.601229667663574
    9. ')' → logprob: -8.726229667663574
    10. ' map' → logprob: -8.851229667663574

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019983025267720222
    2. ' for' → logprob: -4.519982814788818
    3. ' ]' → logprob: -5.394982814788818
    4. ']*' → logprob: -5.894982814788818
    5. ',' → logprob: -7.144982814788818
    6. 'for' → logprob: -7.394982814788818
    7. '()]' → logprob: -9.769983291625977
    8. ')' → logprob: -10.144983291625977
    9. ']*(' → logprob: -10.269983291625977
    10. ')]' → logprob: -10.269983291625977

Token 57: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.052886903285980225
    2. ']*' → logprob: -3.177886962890625
    3. ']*(' → logprob: -5.177886962890625
    4. ' for' → logprob: -6.302886962890625
    5. 'for' → logprob: -6.552886962890625
    6. '*' → logprob: -7.177886962890625
    7. ']+' → logprob: -9.302886962890625
    8. ' ]' → logprob: -10.177886962890625
    9. '+' → logprob: -11.052886962890625
    10. '0' → logprob: -11.427886962890625

Token 58: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6038824319839478
    2. 'n' → logprob: -0.8538824319839478
    3. '(' → logprob: -3.853882312774658
    4. '101' → logprob: -6.478882312774658
    5. '(U' → logprob: -6.478882312774658
    6. '100' → logprob: -6.603882312774658
    7. ' (' → logprob: -7.603882312774658
    8. ' n' → logprob: -8.353882789611816
    9. '10' → logprob: -8.728882789611816
    10. '51' → logprob: -9.603882789611816

Token 59: '      ' (ID: 1699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' Liste' (ID: 61030)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4621516466140747
    2. 'credits' → logprob: -2.337151527404785
    3. ' #' → logprob: -2.962151527404785
    4. '<|end|>' → logprob: -2.962151527404785
    5. '[' → logprob: -4.087151527404785
    6. 'Credits' → logprob: -4.337151527404785
    7. ' crédits' → logprob: -4.587151527404785
    8. ' credits' → logprob: -4.837151527404785
    9. ' for' → logprob: -4.837151527404785
    10. '       ' → logprob: -4.962151527404785

Token 62: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' crédits' (ID: 187186)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.6222003698348999
    2. 'credits' → logprob: -1.9972003698349
    3. ' crédits' → logprob: -2.1222004890441895
    4. 'notes' → logprob: -2.8722004890441895
    5. 'scores' → logprob: -3.4972004890441895
    6. 'd' → logprob: -4.1222004890441895
    7. 'points' → logprob: -4.3722004890441895
    8. ' cr' → logprob: -4.8097004890441895
    9. 'n' → logprob: -4.8722004890441895
    10. ' notes' → logprob: -4.9972004890441895

Token 64: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.891811728477478
    2. ' chaque' → logprob: -1.641811728477478
    3. 'l' → logprob: -2.0168118476867676
    4. 'ch' → logprob: -2.1418118476867676
    5. 'cours' → logprob: -3.8918118476867676
    6. 't' → logprob: -4.016811847686768
    7. ' l' → logprob: -4.516811847686768
    8. 'each' → logprob: -5.141811847686768
    9. 'students' → logprob: -5.141811847686768
    10. 'él' → logprob: -5.141811847686768

Token 66: ' cours' (ID: 10138)
  Prédit: 'él'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'él' → logprob: -1.271168828010559
    2. ' étudiant' → logprob: -1.271168828010559
    3. 'ét' → logprob: -2.0211687088012695
    4. 'mati' → logprob: -2.8961687088012695
    5. 'cours' → logprob: -3.5211687088012695
    6. 'module' → logprob: -3.7711687088012695
    7. 'é' → logprob: -4.1461687088012695
    8. 'jou' → logprob: -4.3336687088012695
    9. ' joueur' → logprob: -4.5836687088012695
    10. 'élé' → logprob: -4.6461687088012695

Token 67: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' prere' (ID: 55794)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12307781726121902
    2. ' for' → logprob: -2.998077869415283
    3. 'grades' → logprob: -4.123077869415283
    4. '       ' → logprob: -4.873077869415283
    5. 'scores' → logprob: -5.498077869415283
    6. 'levels' → logprob: -5.998077869415283
    7. 'points' → logprob: -5.998077869415283
    8. 'hours' → logprob: -6.123077869415283
    9. 'coeff' → logprob: -6.373077869415283
    10. '   ' → logprob: -6.373077869415283

Token 70: 'qs' (ID: 31847)
  Prédit: 'quis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quis' → logprob: -0.6496462821960449
    2. 'quisites' → logprob: -1.149646282196045
    3. 'qs' → logprob: -3.149646282196045
    4. 'q' → logprob: -3.274646282196045
    5. 'quests' → logprob: -3.399646282196045
    6. 're' → logprob: -3.774646282196045
    7. 'quisitos' → logprob: -5.274646282196045
    8. 'qu' → logprob: -5.524646282196045
    9. 'ques' → logprob: -5.524646282196045
    10. '```' → logprob: -6.024646282196045

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10040745139122009
    2. '=' → logprob: -2.350407361984253
    3. ' ' → logprob: -9.100407600402832
    4. 's' → logprob: -9.975407600402832
    5. '  ' → logprob: -11.350407600402832
    6. '   ' → logprob: -11.475407600402832
    7. '=[]' → logprob: -11.975407600402832
    8. '_' → logprob: -12.725407600402832
    9. '    ' → logprob: -12.975407600402832
    10. ',' → logprob: -13.225407600402832

Token 72: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9029089212417603
    2. ' [[]' → logprob: -1.1529089212417603
    3. '[' → logprob: -1.2779089212417603
    4. '[]' → logprob: -9.027909278869629
    5. ' []' → logprob: -10.152909278869629
    6. '{}' → logprob: -10.402909278869629
    7. ' {}' → logprob: -10.777909278869629
    8. ' {' → logprob: -11.527909278869629
    9. ' ' → logprob: -11.527909278869629
    10. '   ' → logprob: -11.652909278869629

Token 73: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00032950565218925476
    2. 'set' → logprob: -9.375329971313477
    3. ' []' → logprob: -9.500329971313477
    4. '[' → logprob: -9.625329971313477
    5. '[]
' → logprob: -9.625329971313477
    6. ']' → logprob: -10.875329971313477
    7. '0' → logprob: -11.625329971313477
    8. '[]

' → logprob: -12.375329971313477
    9. '[]}' → logprob: -12.625329971313477
    10. '   ' → logprob: -14.500329971313477

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012872596271336079
    2. ' ]' → logprob: -7.126287460327148
    3. '   ' → logprob: -8.876287460327148
    4. ' *' → logprob: -9.376287460327148
    5. ')' → logprob: -9.501287460327148
    6. ']*' → logprob: -9.876287460327148
    7. '<|end|>' → logprob: -10.626287460327148
    8. '[' → logprob: -10.876287460327148
    9. '<|end|>' → logprob: -11.126287460327148
    10. '[n' → logprob: -11.626287460327148

Token 75: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.24011601507663727
    2. ']' → logprob: -1.865116000175476
    3. '*' → logprob: -3.2401161193847656
    4. ']*' → logprob: -4.740116119384766
    5. '*n' → logprob: -5.365116119384766
    6. '<|end|>' → logprob: -6.240116119384766
    7. ' ' → logprob: -6.740116119384766
    8. ' for' → logprob: -7.365116119384766
    9. ')' → logprob: -7.615116119384766
    10. ' ]' → logprob: -7.615116119384766

Token 76: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008243953343480825
    2. ' n' → logprob: -7.125824451446533
    3. '(n' → logprob: -11.375823974609375
    4. ' ' → logprob: -12.625823974609375
    5. '	n' → logprob: -13.125823974609375
    6. '   ' → logprob: -13.500823974609375
    7. '(' → logprob: -14.625823974609375
    8. 'u' → logprob: -15.500823974609375
    9. '  ' → logprob: -15.500823974609375
    10. 'U' → logprob: -15.563323974609375

Token 77: '      ' (ID: 1699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' Pr' (ID: 2284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0704129934310913
    2. 'int' → logprob: -2.070413112640381
    3. '[int' → logprob: -2.195413112640381
    4. '[n' → logprob: -2.320413112640381
    5. '[' → logprob: -2.445413112640381
    6. ' n' → logprob: -2.570413112640381
    7. '[]' → logprob: -3.570413112640381
    8. 'range' → logprob: -3.570413112640381
    9. 'pr' → logprob: -3.695413112640381
    10. '(n' → logprob: -4.320413112640381

Token 80: 'ére' (ID: 47405)
  Prédit: 'ere'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ere' → logprob: -0.09610443562269211
    2. 'ére' → logprob: -2.971104383468628
    3. 'e' → logprob: -4.221104621887207
    4. 'er' → logprob: -4.471104621887207
    5. 'é' → logprob: -4.596104621887207
    6. 're' → logprob: -6.971104621887207
    7. 'ré' → logprob: -7.221104621887207
    8. 'ér' → logprob: -7.721104621887207
    9. 'ère' → logprob: -7.846104621887207
    10. 'eres' → logprob: -7.971104621887207

Token 81: 'quis' (ID: 9867)
  Prédit: 'quis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quis' → logprob: -0.005821314174681902
    2. 're' → logprob: -6.380821228027344
    3. 'qs' → logprob: -6.505821228027344
    4. 'quisites' → logprob: -6.630821228027344
    5. 'qu' → logprob: -8.255821228027344
    6. 'q' → logprob: -8.380821228027344
    7. 'quisitos' → logprob: -8.755821228027344
    8. ' requis' → logprob: -9.130821228027344
    9. 'quests' → logprob: -9.380821228027344
    10. '#' → logprob: -9.630821228027344

Token 82: ' sous' (ID: 14487)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.13069723546504974
    2. ' forme' → logprob: -2.255697250366211
    3. 'form' → logprob: -4.130697250366211
    4. 'formes' → logprob: -6.630697250366211
    5. ' form' → logprob: -9.630697250366211
    6. 'format' → logprob: -9.755697250366211
    7. 'forma' → logprob: -10.005697250366211
    8. 'bit' → logprob: -10.380697250366211
    9. 'la' → logprob: -10.630697250366211
    10. ' formes' → logprob: -10.755697250366211

Token 84: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.21718111634254456
    2. ' d' → logprob: -2.0921812057495117
    3. 'de' → logprob: -3.3421812057495117
    4. 'b' → logprob: -3.4671812057495117
    5. ' de' → logprob: -6.342181205749512
    6. 'bit' → logprob: -6.342181205749512
    7. ' b' → logprob: -6.842181205749512
    8. ' bit' → logprob: -8.217181205749512
    9. '#' → logprob: -9.342181205749512
    10. ' ' → logprob: -10.092181205749512

Token 85: ' bit' (ID: 3546)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.3210037052631378
    2. 'bit' → logprob: -2.4460036754608154
    3. 'liste' → logprob: -2.5710036754608154
    4. 'ent' → logprob: -2.8210036754608154
    5. 'mas' → logprob: -3.3210036754608154
    6. 'b' → logprob: -5.1960039138793945
    7. 'list' → logprob: -5.9460039138793945
    8. 'int' → logprob: -6.0710039138793945
    9. 'bitmap' → logprob: -6.6960039138793945
    10. 'bytes' → logprob: -7.5710039138793945

Token 86: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.24695365130901337
    2. 'm' → logprob: -1.8719536066055298
    3. 's' → logprob: -2.8719537258148193
    4. 'set' → logprob: -5.24695348739624
    5. 'mas' → logprob: -6.24695348739624
    6. 'sets' → logprob: -8.246953964233398
    7. 'vector' → logprob: -9.246953964233398
    8. '```' → logprob: -9.246953964233398
    9. ' mask' → logprob: -9.496953964233398
    10. 'e' → logprob: -9.496953964233398

Token 87: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011704419739544392
    2. ' for' → logprob: -4.511704444885254
    3. '   ' → logprob: -7.511704444885254
    4. '       ' → logprob: -9.511704444885254
    5. '	for' → logprob: -10.386704444885254
    6. ' ' → logprob: -13.636704444885254
    7. '  ' → logprob: -13.761704444885254
    8. '    ' → logprob: -14.261704444885254
    9. '```' → logprob: -14.261704444885254
    10. '    
' → logprob: -15.511704444885254

Token 90: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00025287605240009725
    2. 'i' → logprob: -9.000252723693848
    3. ' ' → logprob: -9.250252723693848
    4. ' _' → logprob: -10.625252723693848
    5. '_' → logprob: -12.875252723693848
    6. '	i' → logprob: -12.875252723693848
    7. ' course' → logprob: -13.875252723693848
    8. '  ' → logprob: -14.250252723693848
    9. ' ' → logprob: -14.625252723693848
    10. ' u' → logprob: -14.750252723693848

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008659843355417252
    2. 'in' → logprob: -4.758659839630127
    3. ' ' → logprob: -10.758660316467285
    4. '  ' → logprob: -11.508660316467285
    5. 's' → logprob: -12.508660316467285
    6. 'range' → logprob: -13.008660316467285
    7. '```' → logprob: -13.133660316467285
    8. ',' → logprob: -14.008660316467285
    9. '	in' → logprob: -14.008660316467285
    10. ' i' → logprob: -14.258660316467285

Token 92: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026305874809622765
    2. 'range' → logprob: -3.651305913925171
    3. ' xrange' → logprob: -13.27630615234375
    4. '	range' → logprob: -13.52630615234375
    5. 'rang' → logprob: -14.40130615234375
    6. 'ange' → logprob: -14.40130615234375
    7. ' ' → logprob: -14.52630615234375
    8. ' rang' → logprob: -14.77630615234375
    9. '(range' → logprob: -15.02630615234375
    10. ' rango' → logprob: -16.15130615234375

Token 93: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.013217531144618988
    2. '(' → logprob: -4.513217449188232
    3. ' (' → logprob: -6.138217449188232
    4. ' n' → logprob: -12.01321792602539
    5. '(
' → logprob: -14.13821792602539
    6. '(i' → logprob: -14.51321792602539
    7. '	n' → logprob: -15.26321792602539
    8. ' ' → logprob: -15.38821792602539
    9. '<|end|>' → logprob: -15.51321792602539
    10. '(len' → logprob: -15.51321792602539

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00473734550178051
    2. '):
' → logprob: -5.379737377166748
    3. ' ):' → logprob: -9.50473690032959
    4. '   ' → logprob: -11.62973690032959
    5. '):
' → logprob: -11.62973690032959
    6. '       ' → logprob: -11.75473690032959
    7. '():' → logprob: -12.00473690032959
    8. ')' → logprob: -12.62973690032959
    9. ':' → logprob: -12.62973690032959
    10. '+' → logprob: -13.75473690032959

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4622986912727356
    2. ' line' → logprob: -1.9622986316680908
    3. ' parts' → logprob: -2.337298631668091
    4. '       ' → logprob: -2.837298631668091
    5. ' tokens' → logprob: -3.712298631668091
    6. '   ' → logprob: -4.58729887008667
    7. ' u' → logprob: -5.08729887008667
    8. ' ' → logprob: -5.71229887008667
    9. '        ' → logprob: -5.83729887008667
    10. ',' → logprob: -5.83729887008667

Token 96: ' data' (ID: 1238)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4739536941051483
    2. ' data' → logprob: -1.8489537239074707
    3. ' parts' → logprob: -2.0989537239074707
    4. 'data' (adapté à ' data') → logprob: -3.0989537239074707
    5. 'line' → logprob: -3.2239537239074707
    6. 'parts' → logprob: -5.098953723907471
    7. ' info' → logprob: -7.098953723907471
    8. 'arr' → logprob: -7.598953723907471
    9. ' values' → logprob: -7.848953723907471
    10. '   ' → logprob: -7.848953723907471

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931532025337219
    2. ' =' → logprob: -0.6931532025337219
    3. '   ' → logprob: -14.068153381347656
    4. '=line' → logprob: -14.068153381347656
    5. 'line' → logprob: -14.693153381347656
    6. '=input' → logprob: -14.693153381347656
    7. ' ' → logprob: -14.693153381347656
    8. ')' → logprob: -15.068153381347656
    9. ' =
' → logprob: -15.068153381347656
    10. '=
' → logprob: -15.193153381347656

Token 98: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.49011722207069397
    2. 'list' → logprob: -0.9901171922683716
    3. 'input' → logprob: -4.615117073059082
    4. ' input' → logprob: -5.115117073059082
    5. ' ' → logprob: -13.865117073059082
    6. 'map' → logprob: -14.115117073059082
    7. '   ' → logprob: -14.490117073059082
    8. '[' → logprob: -14.490117073059082
    9. '	list' → logprob: -14.490117073059082
    10. ' map' → logprob: -14.740117073059082

Token 99: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005570820067077875
    2. '(' → logprob: -7.500556945800781
    3. '(input' → logprob: -12.625556945800781
    4. 'map' → logprob: -14.625556945800781
    5. '(int' → logprob: -15.125556945800781
    6. '()' → logprob: -17.12555694580078
    7. '(
' → logprob: -17.25055694580078
    8. ' (' → logprob: -17.62555694580078
    9. '(m' → logprob: -18.37555694580078
    10. ' map' → logprob: -18.62555694580078

Token 100: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.180879816180095e-05
    2. '(' → logprob: -10.625051498413086
    3. 'int' → logprob: -11.000051498413086
    4. ',int' → logprob: -11.875051498413086
    5. '[int' → logprob: -13.500051498413086
    6. '<int' → logprob: -14.375051498413086
    7. '=int' → logprob: -14.750051498413086
    8. ' (' → logprob: -15.000051498413086
    9. ']int' → logprob: -15.125051498413086
    10. ' int' → logprob: -15.250051498413086

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06206829100847244
    2. ',input' → logprob: -2.812068223953247
    3. '(input' → logprob: -9.437067985534668
    4. ' ,' → logprob: -11.562067985534668
    5. 'input' → logprob: -12.187067985534668
    6. '(' → logprob: -12.562067985534668
    7. '(),' → logprob: -13.312067985534668
    8. ' input' → logprob: -14.562067985534668
    9. ',
' → logprob: -15.187067985534668
    10. ' (' → logprob: -16.062068939208984

Token 102: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22542870044708252
    2. ' input' → logprob: -1.6004287004470825
    3. ')' → logprob: -11.975428581237793
    4. '	input' → logprob: -12.725428581237793
    5. ',input' → logprob: -13.225428581237793
    6. '(input' → logprob: -13.600428581237793
    7. '[input' → logprob: -14.350428581237793
    8. 'sys' → logprob: -14.350428581237793
    9. '=input' → logprob: -14.725428581237793
    10. '_input' → logprob: -15.225428581237793

Token 103: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '()' → logprob: -12.87500286102295
    3. ' ().' → logprob: -16.500001907348633
    4. '.' → logprob: -18.500001907348633
    5. '(' → logprob: -19.250001907348633
    6. '()))' → logprob: -19.375001907348633
    7. ')' → logprob: -20.250001907348633
    8. '()).' → logprob: -20.250001907348633
    9. '().__' → logprob: -20.250001907348633
    10. '())' → logprob: -20.625001907348633

Token 104: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.599403423024341e-05
    2. 'strip' → logprob: -9.750065803527832
    3. ' split' → logprob: -12.375065803527832
    4. 'rstrip' → logprob: -13.125065803527832
    5. '(split' → logprob: -14.125065803527832
    6. ')' → logprob: -14.750065803527832
    7. 'read' → logprob: -16.12506675720215
    8. 'spl' → logprob: -16.50006675720215
    9. '   ' → logprob: -17.87506675720215
    10. 'decode' → logprob: -18.00006675720215

Token 105: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.010665285401046276
    2. '()))
' → logprob: -5.010665416717529
    3. '()' → logprob: -5.760665416717529
    4. '))' → logprob: -7.385665416717529
    5. '(' → logprob: -9.510664939880371
    6. '())' → logprob: -9.635664939880371
    7. '()));' → logprob: -11.385664939880371
    8. '()
' → logprob: -11.760664939880371
    9. '()))

' → logprob: -12.260664939880371
    10. '()))
' → logprob: -12.885664939880371

Token 106: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3943052291870117
    2. '<|end|>' → logprob: -2.2693052291870117
    3. ')' → logprob: -2.7693052291870117
    4. '        
' → logprob: -3.7693052291870117
    5. '           ' → logprob: -4.019305229187012
    6. '   ' → logprob: -4.019305229187012
    7. '    ' → logprob: -4.019305229187012
    8. ' ' → logprob: -4.394305229187012
    9. '        ' → logprob: -4.394305229187012
    10. ',' → logprob: -4.644305229187012

Token 107: ' c' (ID: 274)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7848525643348694
    2. 'credits' → logprob: -1.2848525047302246
    3. ' k' → logprob: -2.0348525047302246
    4. ' credits' → logprob: -2.2848525047302246
    5. 'u' → logprob: -4.909852504730225
    6. 'm' → logprob: -5.159852504730225
    7. 'c' (adapté à ' c') → logprob: -5.284852504730225
    8. ' u' → logprob: -5.784852504730225
    9. '           ' → logprob: -5.909852504730225
    10. ' c' → logprob: -6.159852504730225

Token 108: ' =' (ID: 314)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.012156168930232525
    2. 'reds' → logprob: -4.637156009674072
    3. '[' → logprob: -7.137156009674072
    4. 'redit' → logprob: -7.637156009674072
    5. 'r' → logprob: -8.76215648651123
    6. '[i' → logprob: -8.76215648651123
    7. 'redi' → logprob: -9.01215648651123
    8. '=' → logprob: -9.01215648651123
    9. 'credits' → logprob: -9.01215648651123
    10. 'redis' → logprob: -9.38715648651123

Token 109: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.2519298195838928
    2. ' data' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.626930236816406
    4. '	data' → logprob: -15.751930236816406
    5. '(data' → logprob: -16.001930236816406
    6. '[data' → logprob: -16.751930236816406
    7. '=data' → logprob: -16.876930236816406
    8. 'dat' → logprob: -17.751930236816406
    9. ')data' → logprob: -18.001930236816406
    10. '<data' → logprob: -18.126930236816406

Token 110: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001733855315251276
    2. '(' → logprob: -9.125173568725586
    3. '[i' → logprob: -10.250173568725586
    4. '()[' → logprob: -11.750173568725586
    5. '[
' → logprob: -12.375173568725586
    6. '0' → logprob: -12.375173568725586
    7. '[-' → logprob: -12.750173568725586
    8. '.pop' → logprob: -12.875173568725586
    9. '[len' → logprob: -13.250173568725586
    10. ' [' → logprob: -14.125173568725586

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.0020742492051795e-05
    2. '[' → logprob: -10.000049591064453
    3. '1' → logprob: -12.500049591064453
    4. ' ' → logprob: -14.875049591064453
    5. '           ' → logprob: -15.750049591064453
    6. '
' → logprob: -17.000049591064453
    7. '```' → logprob: -17.000049591064453
    8. '][' → logprob: -17.125049591064453
    9. '۰' → logprob: -17.250049591064453
    10. '   ' → logprob: -17.250049591064453

Token 112: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024251991882920265
    2. ')
' → logprob: -4.274251937866211
    3. ']' → logprob: -4.774251937866211
    4. '])' → logprob: -6.649251937866211
    5. '<|end|>' → logprob: -9.149251937866211
    6. ']
' → logprob: -9.399251937866211
    7. '<|end|>' → logprob: -10.524251937866211
    8. ')]' → logprob: -10.899251937866211
    9. ' )' → logprob: -11.274251937866211
    10. ',' → logprob: -11.399251937866211

Token 113: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' k' (ID: 372)
  Prédit: 'credits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'credits' → logprob: -0.032559096813201904
    2. ' credits' → logprob: -4.032558917999268
    3. 'pr' → logprob: -4.907558917999268
    4. 'u' → logprob: -5.157558917999268
    5. 'U' → logprob: -8.032559394836426
    6. ' prerequisites' → logprob: -8.282559394836426
    7. 'p' → logprob: -8.657559394836426
    8. ' prere' → logprob: -9.282559394836426
    9. '       ' → logprob: -9.657559394836426
    10. '           ' → logprob: -10.032559394836426

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02983495220541954
    2. '=' → logprob: -3.5298349857330322
    3. '=data' → logprob: -9.654834747314453
    4. ' ' → logprob: -11.404834747314453
    5. '  ' → logprob: -12.779834747314453
    6. '    ' → logprob: -13.029834747314453
    7. '   ' → logprob: -13.654834747314453
    8. '=int' → logprob: -13.779834747314453
    9. '=k' → logprob: -14.529834747314453
    10. '=len' → logprob: -14.904834747314453

Token 116: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5759496688842773
    2. ' data' → logprob: -0.8259496688842773
    3. ' ' → logprob: -12.575949668884277
    4. 'len' → logprob: -12.950949668884277
    5. '0' → logprob: -13.200949668884277
    6. ' len' → logprob: -13.700949668884277
    7. '(data' → logprob: -14.825949668884277
    8. '	data' → logprob: -15.200949668884277
    9. 'int' → logprob: -15.450949668884277
    10. 'c' → logprob: -15.825949668884277

Token 117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011249648407101631
    2. '1' → logprob: -4.511249542236328
    3. '][' → logprob: -8.886249542236328
    4. ' [' → logprob: -10.261249542236328
    5. ']' → logprob: -11.886249542236328
    6. '```' → logprob: -12.261249542236328
    7. '           ' → logprob: -12.386249542236328
    8. '       ' → logprob: -12.886249542236328
    9. ' ' → logprob: -12.886249542236328
    10. '2' → logprob: -13.261249542236328

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.526570384972729e-05
    2. ' ' → logprob: -10.250055313110352
    3. ']' → logprob: -12.250055313110352
    4. '2' → logprob: -12.375055313110352
    5. '```' → logprob: -13.500055313110352
    6. '   ' → logprob: -13.687555313110352
    7. '[' → logprob: -13.875055313110352
    8. '0' → logprob: -13.937555313110352
    9. '-' → logprob: -13.937555313110352
    10. '  ' → logprob: -14.187555313110352

Token 119: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05496646463871002
    2. ']
' → logprob: -2.929966449737549
    3. '           ' → logprob: -10.179966926574707
    4. ']
' → logprob: -11.429966926574707
    5. ']

' → logprob: -11.429966926574707
    6. ')' → logprob: -11.804966926574707
    7. '       ' → logprob: -12.679966926574707
    8. ' ]' → logprob: -12.804966926574707
    9. '])' → logprob: -13.179966926574707
    10. ']int' → logprob: -13.304966926574707

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05654376372694969
    2. '
' → logprob: -3.5565438270568848
    3. '       ' → logprob: -4.681543827056885
    4. '            
' → logprob: -5.556543827056885
    5. 'credits' → logprob: -5.681543827056885
    6. '<|end|>' → logprob: -5.681543827056885
    7. ' credits' → logprob: -6.306543827056885
    8. ' for' → logprob: -6.431543827056885
    9. '   ' → logprob: -7.306543827056885
    10. '        
' → logprob: -7.556543827056885

Token 121: ' prere' (ID: 55794)
  Prédit: 'credits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'credits' → logprob: -0.26400017738342285
    2. ' credits' → logprob: -1.5140001773834229
    3. '           ' → logprob: -4.888999938964844
    4. '       ' → logprob: -5.888999938964844
    5. 'pr' → logprob: -7.888999938964844
    6. 'for' → logprob: -8.138999938964844
    7. '   ' → logprob: -8.138999938964844
    8. ' for' → logprob: -8.263999938964844
    9. '            
' → logprob: -9.763999938964844
    10. ' crédits' → logprob: -9.888999938964844

Token 122: 'q' (ID: 80)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -2.47495681833243e-05
    2. 's' → logprob: -10.875024795532227
    3. 'q' → logprob: -12.250024795532227
    4. 'qus' → logprob: -15.500024795532227
    5. 'req' → logprob: -15.750024795532227
    6. 'js' → logprob: -15.875024795532227
    7. 'quisites' → logprob: -16.125024795532227
    8. 'efs' → logprob: -16.625024795532227
    9. ' qs' → logprob: -16.875024795532227
    10. '```' → logprob: -16.875024795532227

Token 123: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0037183654494583607
    2. ' =' → logprob: -6.378718376159668
    3. '=' → logprob: -6.503718376159668
    4. 'q' → logprob: -8.628718376159668
    5. '_mask' → logprob: -9.628718376159668
    6. 'is' → logprob: -9.878718376159668
    7. 'uis' → logprob: -10.003718376159668
    8. '_courses' → logprob: -10.628718376159668
    9. '_list' → logprob: -10.753718376159668
    10. '```' → logprob: -10.878718376159668

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602533757686615
    2. '=' → logprob: -1.9102534055709839
    3. '=data' → logprob: -10.910253524780273
    4. 's' → logprob: -11.785253524780273
    5. '=[]' → logprob: -13.535253524780273
    6. ' ' → logprob: -13.785253524780273
    7. '=[]
' → logprob: -15.410253524780273
    8. ' =
' → logprob: -16.160253524780273
    9. '<|end|>' → logprob: -16.160253524780273
    10. ' ' → logprob: -16.535253524780273

Token 125: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.22541557252407074
    2. ' data' → logprob: -1.600415587425232
    3. '   ' → logprob: -14.350415229797363
    4. ' ' → logprob: -14.350415229797363
    5. '	data' → logprob: -14.350415229797363
    6. 'set' → logprob: -14.475415229797363
    7. '(data' → logprob: -15.600415229797363
    8. '[data' → logprob: -15.850415229797363
    9. '0' → logprob: -16.47541618347168
    10. ' set' → logprob: -16.60041618347168

Token 126: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.580929347255733e-05
    2. '2' → logprob: -11.125016212463379
    3. '=' → logprob: -14.625016212463379
    4. 's' → logprob: -16.250015258789062
    5. ' [' → logprob: -16.250015258789062
    6. ' =' → logprob: -16.875015258789062
    7. 'from' → logprob: -17.000015258789062
    8. '(' → logprob: -17.375015258789062
    9. '```' → logprob: -17.375015258789062
    10. '3' → logprob: -17.500015258789062

Token 127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010831133840838447
    2. '[' → logprob: -9.75010871887207
    3. ' ' → logprob: -10.12510871887207
    4. '   ' → logprob: -12.12510871887207
    5. ':' → logprob: -13.62510871887207
    6. '```' → logprob: -13.87510871887207
    7. ']' → logprob: -15.00010871887207
    8. '           ' → logprob: -15.12510871887207
    9. '       ' → logprob: -15.25010871887207
    10. '(' → logprob: -15.37510871887207

Token 128: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.13125459849834442
    2. ':' → logprob: -2.1312546730041504
    3. ':k' → logprob: -5.50625467300415
    4. ']' → logprob: -9.006254196166992
    5. ':i' → logprob: -10.381254196166992
    6. ':]
' → logprob: -10.506254196166992
    7. ' :' → logprob: -10.631254196166992
    8. ' :]' → logprob: -10.631254196166992
    9. ':]

' → logprob: -11.756254196166992
    10. 'k' → logprob: -12.131254196166992

Token 129: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6773980259895325
    2. '<|end|>' → logprob: -1.6773979663848877
    3. '
' → logprob: -1.9273979663848877
    4. '           ' → logprob: -2.0523979663848877
    5. '        
' → logprob: -4.552398204803467
    6. '            
' → logprob: -5.177398204803467
    7. '<|end|>' → logprob: -5.302398204803467
    8. '   ' → logprob: -6.302398204803467
    9. ')' → logprob: -6.427398204803467
    10. '    
' → logprob: -7.052398204803467

Token 130: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008976402692496777
    2. ' k' → logprob: -5.133976459503174
    3. 'len' → logprob: -5.883976459503174
    4. ' len' → logprob: -8.258975982666016
    5. ' ' → logprob: -15.508975982666016
    6. '	k' → logprob: -16.633975982666016
    7. '  ' → logprob: -18.008975982666016
    8. 'length' → logprob: -18.133975982666016
    9. ' ' → logprob: -18.258975982666016
    10. '(len' → logprob: -18.383975982666016

Token 131: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.050593700259923935
    2. 'else' → logprob: -3.175593614578247
    3. ' >' → logprob: -5.675593852996826
    4. ' else' → logprob: -5.800593852996826
    5. '<|end|>' → logprob: -7.675593852996826
    6. 'k' → logprob: -8.175593376159668
    7. '!=' → logprob: -8.550593376159668
    8. '<|end|>' → logprob: -9.800593376159668
    9. '>=' → logprob: -10.675593376159668
    10. '()>' → logprob: -11.800593376159668

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017029138980433345
    2. ' ' → logprob: -6.376702785491943
    3. 'k' → logprob: -15.626703262329102
    4. '  ' → logprob: -15.751703262329102
    5. '   ' → logprob: -16.1267032623291
    6. '```' → logprob: -16.1267032623291
    7. '<|end|>' → logprob: -16.8142032623291
    8. '>' → logprob: -16.8142032623291
    9. ' ' → logprob: -17.2517032623291
    10. '=' → logprob: -17.3767032623291

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '   ' → logprob: -16.500158309936523
    4. '```' → logprob: -16.875158309936523
    5. '  ' → logprob: -17.000158309936523
    6. 'k' → logprob: -17.500158309936523
    7. '1' → logprob: -18.000158309936523
    8. '۰' → logprob: -18.812658309936523
    9. '    ' → logprob: -18.875158309936523
    10. '00' → logprob: -18.937658309936523

Token 134: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04625554382801056
    2. 'else' → logprob: -3.171255588531494
    3. '           ' → logprob: -5.796255588531494
    4. ' ' → logprob: -8.921255111694336
    5. '            ' → logprob: -10.796255111694336
    6. '               ' → logprob: -11.046255111694336
    7. '       ' → logprob: -12.046255111694336
    8. '	else' → logprob: -12.296255111694336
    9. '          ' → logprob: -12.421255111694336
    10. '            
' → logprob: -12.421255111694336

Token 135: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0002636006975080818
    2. ' []' → logprob: -8.250263214111328
    3. '[]
' → logprob: -13.500263214111328
    4. '[]}' → logprob: -14.250263214111328
    5. '[' → logprob: -16.000263214111328
    6. '[]

' → logprob: -16.625263214111328
    7. '[]>' → logprob: -17.000263214111328
    8. '[])' → logprob: -17.125263214111328
    9. ' ' → logprob: -19.000263214111328
    10. '[]"' → logprob: -19.250263214111328

Token 136: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7601872682571411
    2. '
' → logprob: -0.8851872682571411
    3. '           ' → logprob: -2.6351871490478516
    4. '            
' → logprob: -4.135187149047852
    5. '<|end|>' → logprob: -4.260187149047852
    6. '        
' → logprob: -4.635187149047852
    7. ' 
' → logprob: -6.260187149047852
    8. '   ' → logprob: -6.885187149047852
    9. '    
' → logprob: -7.010187149047852
    10. '  
' → logprob: -7.010187149047852

Token 137: ' credits' (ID: 30198)
  Prédit: 'credits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'credits' (adapté à ' credits') → logprob: -0.0004025481757707894
    2. 'for' → logprob: -8.250402450561523
    3. '           ' → logprob: -9.500402450561523
    4. ' credits' → logprob: -10.750402450561523
    5. '       ' → logprob: -11.000402450561523
    6. 'credit' → logprob: -11.500402450561523
    7. 'pr' → logprob: -11.875402450561523
    8. '   ' → logprob: -12.500402450561523
    9. '            
' → logprob: -13.250402450561523
    10. 'import' → logprob: -14.125402450561523

Token 138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.250005722045898
    3. ' [' → logprob: -14.250005722045898
    4. '[n' → logprob: -15.000005722045898
    5. '[I' → logprob: -17.3750057220459
    6. '```' → logprob: -18.0000057220459
    7. '

' → logprob: -18.1250057220459
    8. '[c' → logprob: -18.3750057220459
    9. '\[' → logprob: -18.7500057220459
    10. '[j' → logprob: -19.3750057220459

Token 139: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7015204429626465
    2. ' =' → logprob: -0.7015204429626465
    3. ']' → logprob: -4.9515204429626465
    4. ']=' → logprob: -6.8265204429626465
    5. '=c' → logprob: -9.201520919799805
    6. ')' → logprob: -10.201520919799805
    7. ')=' → logprob: -10.951520919799805
    8. ' ]' → logprob: -11.201520919799805
    9. ' ' → logprob: -12.576520919799805
    10. ']+=' → logprob: -13.326520919799805

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741041660308838
    2. '=' → logprob: -0.9741041660308838
    3. '=c' → logprob: -10.724103927612305
    4. ' +=' → logprob: -13.599103927612305
    5. ' ' → logprob: -14.099103927612305
    6. '+=' → logprob: -14.349103927612305
    7. ',' → logprob: -14.349103927612305
    8. '=int' → logprob: -14.849103927612305
    9. '=i' → logprob: -15.224103927612305
    10. 'c' → logprob: -15.724103927612305

Token 141: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10020720958709717
    2. ' c' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.475207328796387
    4. '	c' → logprob: -15.975207328796387
    5. ' ' → logprob: -16.10020637512207
    6. '   ' → logprob: -17.22520637512207
    7. ')c' → logprob: -18.35020637512207
    8. '  ' → logprob: -18.85020637512207
    9. 'data' → logprob: -19.10020637512207
    10. '​' → logprob: -19.22520637512207

Token 142: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9211262464523315
    2. '
' → logprob: -1.2961262464523315
    3. '       ' → logprob: -1.7961262464523315
    4. ' for' → logprob: -2.171126365661621
    5. 'for' → logprob: -3.546126365661621
    6. 'pr' → logprob: -4.921126365661621
    7. '<|end|>' → logprob: -6.046126365661621
    8. '            
' → logprob: -6.171126365661621
    9. '        
' → logprob: -6.546126365661621
    10. '   ' → logprob: -6.796126365661621

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20260022580623627
    2. ' for' → logprob: -2.0776002407073975
    3. 'for' → logprob: -3.5776002407073975
    4. '       ' → logprob: -4.577600002288818
    5. 'pr' → logprob: -4.952600002288818
    6. '   ' → logprob: -5.577600002288818
    7. '            
' → logprob: -5.827600002288818
    8. '
' → logprob: -5.952600002288818
    9. ' prere' → logprob: -6.827600002288818
    10. '    
' → logprob: -7.827600002288818

Token 144: ' #' (ID: 1069)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.6240366697311401
    2. 'for' → logprob: -1.1240366697311401
    3. 'pr' → logprob: -2.1240367889404297
    4. 'bit' → logprob: -4.49903678894043
    5. 'pm' → logprob: -5.49903678894043
    6. 'p' → logprob: -6.12403678894043
    7. ' for' → logprob: -7.12403678894043
    8. ' mask' → logprob: -7.87403678894043
    9. 'bits' → logprob: -8.12403678894043
    10. '           ' → logprob: -8.49903678894043

Token 145: ' Constru' (ID: 98396)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.5072169303894043
    2. 'for' → logprob: -1.2572169303894043
    3. 'pr' → logprob: -2.3822169303894043
    4. 'bit' → logprob: -4.257216930389404
    5. ' for' → logprob: -5.757216930389404
    6. ' mask' → logprob: -6.632216930389404
    7. 'bits' → logprob: -7.382216930389404
    8. 'pm' → logprob: -7.632216930389404
    9. 'bm' → logprob: -7.632216930389404
    10. 'p' → logprob: -8.507217407226562

Token 146: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.024796508252620697
    2. 'ire' → logprob: -4.524796485900879
    3. 'ction' → logprob: -4.774796485900879
    4. 'cter' → logprob: -7.149796485900879
    5. '       ' → logprob: -7.524796485900879
    6. 'ctor' → logprob: -7.649796485900879
    7. 'cts' → logprob: -7.649796485900879
    8. 'pr' → logprob: -7.774796485900879
    9. 'r' → logprob: -8.024796485900879
    10. '   ' → logprob: -8.024796485900879

Token 147: ' un' (ID: 537)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.43862512707710266
    2. 'for' → logprob: -2.1886250972747803
    3. 'mask' → logprob: -2.4386250972747803
    4. ' for' → logprob: -2.8136250972747803
    5. '           ' → logprob: -3.0636250972747803
    6. ' prere' → logprob: -3.5636250972747803
    7. ' mask' → logprob: -4.688625335693359
    8. '(pr' → logprob: -6.313625335693359
    9. '       ' → logprob: -6.563625335693359
    10. ' bit' → logprob: -6.688625335693359

Token 148: ' bit' (ID: 3546)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.2998620867729187
    2. 'bit' → logprob: -1.6748621463775635
    3. ' bit' → logprob: -3.6748621463775635
    4. 'pr' → logprob: -4.049861907958984
    5. ' mask' → logprob: -4.549861907958984
    6. 'mas' → logprob: -4.549861907958984
    7. ' masque' → logprob: -5.049861907958984
    8. 'for' → logprob: -7.799861907958984
    9. ' mas' → logprob: -8.674861907958984
    10. 'm' → logprob: -9.174861907958984

Token 149: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.07976070791482925
    2. '_mask' → logprob: -2.579760789871216
    3. ' mask' → logprob: -8.204760551452637
    4. 'm' → logprob: -9.079760551452637
    5. '_m' → logprob: -9.454760551452637
    6. '   ' → logprob: -9.829760551452637
    7. ' _' → logprob: -9.954760551452637
    8. '```' → logprob: -10.204760551452637
    9. '_pr' → logprob: -10.329760551452637
    10. '_' → logprob: -10.329760551452637

Token 150: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9303981065750122
    2. ' for' → logprob: -1.1803981065750122
    3. '           ' → logprob: -1.4303981065750122
    4. '=' → logprob: -3.8053979873657227
    5. ' =' → logprob: -4.305397987365723
    6. '0' → logprob: -4.305397987365723
    7. 'pr' → logprob: -5.430397987365723
    8. 'mask' → logprob: -5.805397987365723
    9. ':' → logprob: -7.555397987365723
    10. ' prere' → logprob: -7.680397987365723

Token 151: ' pré' (ID: 9424)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.13475088775157928
    2. ' prere' → logprob: -3.0097508430480957
    3. 'cours' → logprob: -3.3847508430480957
    4. ' cours' → logprob: -3.8847508430480957
    5. ' prerequisites' → logprob: -5.009750843048096
    6. 'courses' → logprob: -5.509750843048096
    7. 'pré' → logprob: -5.509750843048096
    8. ' pré' → logprob: -6.134750843048096
    9. ' courses' → logprob: -6.384750843048096
    10. 'pre' → logprob: -8.072251319885254

Token 152: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.06760206818580627
    2. 'req' → logprob: -2.8176021575927734
    3. 'requ' → logprob: -5.692602157592773
    4. ' requis' → logprob: -7.067602157592773
    5. 'quis' → logprob: -7.942602157592773
    6. 'r' → logprob: -8.067602157592773
    7. '_re' → logprob: -9.692602157592773
    8. '-re' → logprob: -9.817602157592773
    9. 'requests' → logprob: -9.817602157592773
    10. 'reu' → logprob: -9.817602157592773

Token 153: 'quis' (ID: 9867)
  Prédit: 'quis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quis' → logprob: -0.011469691060483456
    2. 'qs' → logprob: -5.261469841003418
    3. 'quisites' → logprob: -6.386469841003418
    4. 'qus' → logprob: -6.636469841003418
    5. 'q' → logprob: -6.886469841003418
    6. 'qu' → logprob: -7.011469841003418
    7. 'quisitos' → logprob: -8.136469841003418
    8. 'qui' → logprob: -8.761469841003418
    9. 'quests' → logprob: -8.761469841003418
    10. '#' → logprob: -9.386469841003418

Token 154: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5787063241004944
    2. 'for' → logprob: -1.2037062644958496
    3. '           ' → logprob: -2.4537062644958496
    4. ':' → logprob: -4.07870626449585
    5. '=' → logprob: -4.82870626449585
    6. ' =' → logprob: -5.07870626449585
    7. 'pr' → logprob: -5.45370626449585
    8. '<|end|>' → logprob: -5.70370626449585
    9. 'mask' → logprob: -6.07870626449585
    10. '
' → logprob: -6.32870626449585

Token 155: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5513830780982971
    2. 'for' → logprob: -1.8013830184936523
    3. '           ' → logprob: -1.8013830184936523
    4. 'pr' → logprob: -3.4263830184936523
    5. 'mask' → logprob: -4.301383018493652
    6. ' =' → logprob: -4.426383018493652
    7. '=' → logprob: -4.801383018493652
    8. '            
' → logprob: -5.176383018493652
    9. ' prere' → logprob: -5.301383018493652
    10. ':' → logprob: -5.426383018493652

Token 156: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' (adapté à ' mask') → logprob: -0.1256931722164154
    2. 'pr' → logprob: -3.0006930828094482
    3. ' mask' → logprob: -3.5006930828094482
    4. 'for' → logprob: -3.8756930828094482
    5. 'bit' → logprob: -5.125693321228027
    6. 'pm' → logprob: -5.500693321228027
    7. ' for' → logprob: -5.500693321228027
    8. ' bit' → logprob: -6.750693321228027
    9. 'p' → logprob: -6.875693321228027
    10. 'bm' → logprob: -7.750693321228027

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198617070913315
    2. '=' → logprob: -2.811986207962036
    3. 's' → logprob: -12.186985969543457
    4. ' ' → logprob: -12.186985969543457
    5. ' |=' → logprob: -12.311985969543457
    6. ' ' → logprob: -13.686985969543457
    7. '   ' → logprob: -14.561985969543457
    8. ')' → logprob: -14.811985969543457
    9. '[i' → logprob: -15.436985969543457
    10. '  ' → logprob: -15.436985969543457

Token 158: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014132341311778873
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.250141143798828
    4. '(' → logprob: -15.875141143798828
    5. '```' → logprob: -16.000141143798828
    6. 'sum' → logprob: -16.250141143798828
    7. '           ' → logprob: -16.562641143798828
    8. '  ' → logprob: -16.625141143798828
    9. '1' → logprob: -17.000141143798828
    10. '000' → logprob: -17.125141143798828

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. 'sum' → logprob: -15.125007629394531
    4. '   ' → logprob: -16.75000762939453
    5. '000' → logprob: -16.75000762939453
    6. '(' → logprob: -17.50000762939453
    7. '1' → logprob: -18.18750762939453
    8. '```' → logprob: -18.81250762939453
    9. '۰' → logprob: -19.18750762939453
    10. '  ' → logprob: -19.25000762939453

Token 160: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7536295056343079
    2. ' for' → logprob: -1.253629446029663
    3. '<|end|>' → logprob: -1.503629446029663
    4. '           ' → logprob: -4.503629684448242
    5. '<|end|>' → logprob: -5.503629684448242
    6. '       ' → logprob: -6.003629684448242
    7. ')' → logprob: -6.628629684448242
    8. ' ' → logprob: -7.128629684448242
    9. ' 
' → logprob: -8.128629684448242
    10. '        ' → logprob: -8.378629684448242

Token 162: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5762560367584229
    2. 'for' (adapté à ' for') → logprob: -0.8262560367584229
    3. '           ' → logprob: -8.076255798339844
    4. '	for' → logprob: -13.076255798339844
    5. '   ' → logprob: -13.701255798339844
    6. ' ' → logprob: -14.076255798339844
    7. '       ' → logprob: -14.451255798339844
    8. ' 
' → logprob: -15.076255798339844
    9. '               ' → logprob: -15.951255798339844
    10. '    ' → logprob: -16.076255798339844

Token 163: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06952852010726929
    2. ' p' → logprob: -2.819528579711914
    3. 'j' → logprob: -6.069528579711914
    4. ' prere' → logprob: -6.444528579711914
    5. 'x' → logprob: -6.944528579711914
    6. 'pre' → logprob: -7.319528579711914
    7. ' pre' → logprob: -7.319528579711914
    8. 'pr' → logprob: -7.319528579711914
    9. 'course' → logprob: -8.194528579711914
    10. ' j' → logprob: -9.194528579711914

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002792753279209137
    2. 'in' → logprob: -6.002792835235596
    3. 'r' → logprob: -8.377792358398438
    4. 'p' → logprob: -9.877792358398438
    5. ' ' → logprob: -11.502792358398438
    6. ' p' → logprob: -12.127792358398438
    7. 're' → logprob: -13.127792358398438
    8. '   ' → logprob: -13.252792358398438
    9. 'n' → logprob: -13.377792358398438
    10. '  ' → logprob: -13.627792358398438

Token 165: ' prere' (ID: 55794)
  Prédit: ' prere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prere' → logprob: -0.5759895443916321
    2. 'pr' → logprob: -0.8259895443916321
    3. ' pr' → logprob: -10.700989723205566
    4. '(pr' → logprob: -11.950989723205566
    5. 'pre' → logprob: -12.075989723205566
    6. 'req' → logprob: -12.450989723205566
    7. 're' → logprob: -12.825989723205566
    8. ' prer' → logprob: -12.950989723205566
    9. '	pr' → logprob: -13.325989723205566
    10. 'range' → logprob: -13.825989723205566

Token 166: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.576012372970581
    2. 'qs' → logprob: -0.826012372970581
    3. 'f' → logprob: -10.07601261138916
    4. 's' → logprob: -10.95101261138916
    5. 'req' → logprob: -11.70101261138916
    6. 'r' → logprob: -14.32601261138916
    7. 'quis' → logprob: -14.57601261138916
    8. 'rs' → logprob: -14.70101261138916
    9. 'c' → logprob: -14.70101261138916
    10. 'fs' → logprob: -14.82601261138916

Token 167: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.030027704313397408
    2. 's' → logprob: -3.5300276279449463
    3. '_' → logprob: -8.530027389526367
    4. 'ist' → logprob: -10.530027389526367
    5. 'for' → logprob: -12.155027389526367
    6. ' in' → logprob: -12.155027389526367
    7. 'list' → logprob: -12.280027389526367
    8. 'es' → logprob: -12.530027389526367
    9. 'is' → logprob: -12.780027389526367
    10. '_LIST' → logprob: -12.780027389526367

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04477245733141899
    2. ':
' → logprob: -3.1697723865509033
    3. ' <<=' → logprob: -6.919772624969482
    4. '<<' → logprob: -7.919772624969482
    5. ' :' → logprob: -8.544772148132324
    6. ' in' → logprob: -10.169772148132324
    7. '           ' → logprob: -10.419772148132324
    8. ' :
' → logprob: -10.419772148132324
    9. '               ' → logprob: -10.544772148132324
    10. ' <<' → logprob: -11.044772148132324

Token 169: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009583894861862063
    2. '           ' → logprob: -7.375958442687988
    3. '<|end|>' → logprob: -10.125958442687988
    4. '1' → logprob: -10.250958442687988
    5. ' mask' → logprob: -10.375958442687988
    6. '                ' → logprob: -10.625958442687988
    7. '                   ' → logprob: -10.750958442687988
    8. ' ' → logprob: -10.875958442687988
    9. ',' → logprob: -10.875958442687988
    10. '              ' → logprob: -11.000958442687988

Token 170: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.01860779896378517
    2. 'mask' (adapté à ' mask') → logprob: -4.0186076164245605
    3. '	mask' → logprob: -8.018608093261719
    4. '               ' → logprob: -10.143608093261719
    5. '(mask' → logprob: -10.143608093261719
    6. '_mask' → logprob: -10.893608093261719
    7. '                   ' → logprob: -11.893608093261719
    8. ' p' → logprob: -12.143608093261719
    9. '1' → logprob: -12.893608093261719
    10. '-mask' → logprob: -13.018608093261719

Token 171: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.04859168455004692
    2. ' |=' → logprob: -3.0485916137695312
    3. ' |' → logprob: -12.548591613769531
    4. ' ' → logprob: -15.673591613769531
    5. ' ' → logprob: -15.673591613769531
    6. ' <<=' → logprob: -15.798591613769531
    7. '=' → logprob: -16.67359161376953
    8. '+=' → logprob: -17.29859161376953
    9. '|=
' → logprob: -17.29859161376953
    10. '   ' → logprob: -17.29859161376953

Token 172: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09457002580165863
    2. '(' → logprob: -3.3445699214935303
    3. ' ' → logprob: -3.5945699214935303
    4. ' (' → logprob: -3.5945699214935303
    5. '   ' → logprob: -12.71957015991211
    6. '```' → logprob: -13.21957015991211
    7. ' ' → logprob: -13.21957015991211
    8. '[' → logprob: -13.34457015991211
    9. '(p' → logprob: -13.34457015991211
    10. 'p' → logprob: -13.59457015991211

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011129142512800172
    2. '(' → logprob: -9.25011157989502
    3. ' ' → logprob: -11.12511157989502
    4. ' (' → logprob: -15.12511157989502
    5. '   ' → logprob: -17.625110626220703
    6. '```' → logprob: -17.625110626220703
    7. '(p' → logprob: -18.500110626220703
    8. '0' → logprob: -18.812610626220703
    9. ')' → logprob: -18.875110626220703
    10. '
' → logprob: -19.125110626220703

Token 174: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.017336836084723473
    2. '<<' → logprob: -4.142336845397949
    3. '<<(' → logprob: -7.392336845397949
    4. '<' → logprob: -7.517336845397949
    5. ' <' → logprob: -9.01733684539795
    6. ' ' → logprob: -12.01733684539795
    7. ' <<
' → logprob: -12.64233684539795
    8. ')' → logprob: -13.01733684539795
    9. '<p' → logprob: -13.26733684539795
    10. ' ' → logprob: -13.51733684539795

Token 175: ' p' (ID: 275)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.004330660216510296
    2. ' (' → logprob: -5.504330635070801
    3. 'p' → logprob: -9.0043306350708
    4. '(' → logprob: -9.0043306350708
    5. ' p' → logprob: -12.8793306350708
    6. ')' → logprob: -13.7543306350708
    7. ')p' → logprob: -14.5043306350708
    8. '(
' → logprob: -14.8793306350708
    9. ')(' → logprob: -15.2543306350708
    10. '(int' → logprob: -15.3793306350708

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056417468935251236
    2. '-' → logprob: -3.056417465209961
    3. ' )' → logprob: -5.181417465209961
    4. ' -' → logprob: -6.306417465209961
    5. ')
' → logprob: -8.306417465209961
    6. '-)' → logprob: -9.556417465209961
    7. ' )
' → logprob: -12.181417465209961
    8. '<|end|>' → logprob: -12.431417465209961
    9. '0' → logprob: -12.806417465209961
    10. ' ' → logprob: -12.806417465209961

Token 177: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3663308620452881
    2. '<|end|>' → logprob: -1.241330862045288
    3. '           ' → logprob: -4.991331100463867
    4. '<|end|>' → logprob: -5.366331100463867
    5. ')' → logprob: -6.491331100463867
    6. '.' → logprob: -7.366331100463867
    7. '        
' → logprob: -7.366331100463867
    8. '
' → logprob: -7.866331100463867
    9. '#' → logprob: -7.991331100463867
    10. '   ' → logprob: -8.366331100463867

Token 178: ' prere' (ID: 55794)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07040740549564362
    2. '<|end|>' → logprob: -3.0704073905944824
    3. ')' → logprob: -4.445407390594482
    4. '        
' → logprob: -5.945407390594482
    5. '   ' → logprob: -6.570407390594482
    6. '\n' → logprob: -7.070407390594482
    7. ' ' → logprob: -7.195407390594482
    8. '.' → logprob: -7.695407390594482
    9. '' → logprob: -7.820407390594482
    10. '           ' → logprob: -8.07040786743164

Token 179: 'qs' (ID: 31847)
  Prédit: 'qs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.00039647609810344875
    2. 'q' → logprob: -7.875396251678467
    3. 's' → logprob: -11.375396728515625
    4. 'req' → logprob: -12.500396728515625
    5. 'qus' → logprob: -14.500396728515625
    6. 'js' → logprob: -16.250396728515625
    7. 'fs' → logprob: -16.375396728515625
    8. 'efs' → logprob: -16.750396728515625
    9. ' qs' → logprob: -16.750396728515625
    10. 'cs' → logprob: -16.875396728515625

Token 180: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016539888747502118
    2. '[' → logprob: -8.750164985656738
    3. '[I' → logprob: -12.125164985656738
    4. '```' → logprob: -14.375164985656738
    5. '\[' → logprob: -14.625164985656738
    6. '[
' → logprob: -16.125165939331055
    7. ' [' → logprob: -16.375165939331055
    8. '[user' → logprob: -17.250165939331055
    9. '[s' → logprob: -17.375165939331055
    10. ')[' → logprob: -17.500165939331055

Token 181: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04748857393860817
    2. '=' → logprob: -3.4224886894226074
    3. ')' → logprob: -4.547488689422607
    4. ']=' → logprob: -6.047488689422607
    5. ' =' → logprob: -7.297488689422607
    6. ')=' → logprob: -9.92248821258545
    7. ' ]' → logprob: -10.17248821258545
    8. '[' → logprob: -12.04748821258545
    9. '])' → logprob: -12.67248821258545
    10. ' |=' → logprob: -13.04748821258545

Token 182: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. ' |=' → logprob: -15.913042068481445
    4. '.=' → logprob: -16.413042068481445
    5. '＝' → logprob: -18.163042068481445
    6. '=

' → logprob: -18.163042068481445
    7. ')=' → logprob: -18.413042068481445
    8. ')' → logprob: -18.663042068481445
    9. '=}' → logprob: -18.663042068481445
    10. '=s' → logprob: -18.663042068481445

Token 183: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.01604316756129265
    2. ' mask' → logprob: -4.141043186187744
    3. '(mask' → logprob: -12.141042709350586
    4. '	mask' → logprob: -13.641042709350586
    5. 'm' → logprob: -13.766042709350586
    6. 'mas' → logprob: -14.141042709350586
    7. 'ma' → logprob: -15.766042709350586
    8. 'masked' → logprob: -16.016042709350586
    9. ' ' → logprob: -16.141042709350586
    10. '   ' → logprob: -16.391042709350586

Token 184: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.056340061128139496
    2. 'max' → logprob: -3.306339979171753
    3. '#' (adapté à ' #') → logprob: -4.681340217590332
    4. 'best' → logprob: -5.556340217590332
    5. 'possible' → logprob: -7.056340217590332
    6. 'def' → logprob: -7.681340217590332
    7. 'visited' → logprob: -7.931340217590332
    8. 'results' → logprob: -7.931340217590332
    9. ' dp' → logprob: -8.181340217590332
    10. 'from' → logprob: -8.181340217590332

Token 187: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3210194408893585
    2. 'max' → logprob: -2.196019411087036
    3. ' max' → logprob: -2.821019411087036
    4. ' dp' → logprob: -3.571019411087036
    5. 'best' → logprob: -3.946019411087036
    6. '#' → logprob: -4.571019649505615
    7. 'def' → logprob: -4.696019649505615
    8. ' best' → logprob: -4.696019649505615
    9. 'result' → logprob: -4.946019649505615
    10. 'visited' → logprob: -5.821019649505615

Token 188: ' va' (ID: 3423)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.8705942630767822
    2. 'def' → logprob: -1.9955942630767822
    3. ' max' → logprob: -2.1205942630767822
    4. '       ' → logprob: -2.6205942630767822
    5. ' continue' → logprob: -2.8705942630767822
    6. 'continue' → logprob: -2.8705942630767822
    7. '#' → logprob: -2.9955942630767822
    8. ' best' → logprob: -3.2455942630767822
    9. 'visited' → logprob: -3.2455942630767822
    10. 'dp' → logprob: -3.3705942630767822

Token 189: ' tester' (ID: 51819)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.3301787376403809
    2. ' utiliser' → logprob: -1.5801787376403809
    3. 'import' → logprob: -1.9551787376403809
    4. 'contin' → logprob: -2.330178737640381
    5. 'chercher' → logprob: -2.830178737640381
    6. ' chercher' → logprob: -3.330178737640381
    7. 'max' → logprob: -3.705178737640381
    8. 'f' → logprob: -3.830178737640381
    9. ' continuer' → logprob: -4.330178737640381
    10. ' essayer' → logprob: -4.330178737640381

Token 190: ' toutes' (ID: 17502)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -1.2714372873306274
    2. 'all' → logprob: -1.3964372873306274
    3. 'for' → logprob: -2.521437168121338
    4. ' for' → logprob: -2.646437168121338
    5. ' all' → logprob: -3.271437168121338
    6. 'possible' → logprob: -3.396437168121338
    7. ' if' → logprob: -4.021437168121338
    8. '   ' → logprob: -4.021437168121338
    9. 'dp' → logprob: -4.021437168121338
    10. ' toutes' → logprob: -4.271437168121338

Token 191: ' les' (ID: 1341)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.016585685312747955
    2. ' subset' → logprob: -4.891585826873779
    3. ' possible' → logprob: -5.516585826873779
    4. 'subset' → logprob: -6.516585826873779
    5. ' (' → logprob: -7.391585826873779
    6. ' combinations' → logprob: -7.766585826873779
    7. 'sub' → logprob: -7.891585826873779
    8. '(' → logprob: -8.016585350036621
    9. ' sub' → logprob: -8.016585350036621
    10. ' s' → logprob: -8.016585350036621

Token 192: ' comb' (ID: 4134)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.051768235862255096
    2. 'subset' → logprob: -3.9267683029174805
    3. 'sub' → logprob: -4.0517683029174805
    4. ' comb' → logprob: -5.5517683029174805
    5. ' subset' → logprob: -5.9267683029174805
    6. 's' → logprob: -6.4267683029174805
    7. 'comb' → logprob: -6.6767683029174805
    8. 'com' → logprob: -6.6767683029174805
    9. ' subse' → logprob: -7.1767683029174805
    10. 'poss' → logprob: -7.3017683029174805

Token 193: 'inais' (ID: 42744)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.9581766724586487
    2. 'i' → logprob: -2.333176612854004
    3. 'in' → logprob: -2.333176612854004
    4. 'binations' → logprob: -2.333176612854004
    5. 'inais' → logprob: -2.333176612854004
    6. 'ination' → logprob: -2.833176612854004
    7. 'b' → logprob: -3.083176612854004
    8. 'ina' → logprob: -3.083176612854004
    9. '```' → logprob: -3.208176612854004
    10. 'inas' → logprob: -5.208176612854004

Token 194: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.4126691222190857
    2. 'sons' → logprob: -1.2876691818237305
    3. 's' → logprob: -3.4126691818237305
    4. 't' → logprob: -3.7876691818237305
    5. 'son' → logprob: -6.4126691818237305
    6. 'tons' → logprob: -6.5376691818237305
    7. 'es' → logprob: -8.03766918182373
    8. '(' → logprob: -8.16266918182373
    9. 'ais' → logprob: -8.41266918182373
    10. 'isons' → logprob: -8.53766918182373

Token 195: ' possibles' (ID: 97753)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12318648397922516
    2. '   ' → logprob: -3.2481865882873535
    3. '<|end|>' → logprob: -4.2481865882873535
    4. '    ' → logprob: -4.6231865882873535
    5. ' ' → logprob: -4.6231865882873535
    6. ' for' → logprob: -4.8731865882873535
    7. '.' → logprob: -5.2481865882873535
    8. ',' → logprob: -5.4981865882873535
    9. ' possible' → logprob: -5.6231865882873535
    10. ' ' → logprob: -5.7481865882873535

Token 196: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11884662508964539
    2. '   ' → logprob: -3.4938466548919678
    3. ' ' → logprob: -3.8688466548919678
    4. '<|end|>' → logprob: -3.9938466548919678
    5. '    ' → logprob: -4.368846416473389
    6. ',' → logprob: -5.118846416473389
    7. ' for' → logprob: -5.493846416473389
    8. '.' → logprob: -5.618846416473389
    9. '        ' → logprob: -6.243846416473389
    10. ' 
' → logprob: -6.368846416473389

Token 197: ' cours' (ID: 10138)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.3521987795829773
    2. ' cours' → logprob: -1.602198839187622
    3. 'courses' → logprob: -2.477198839187622
    4. ' courses' → logprob: -5.477198600769043
    5. 'c' → logprob: -5.602198600769043
    6. 'cour' → logprob: -6.977198600769043
    7. '```' → logprob: -7.602198600769043
    8. 'i' → logprob: -8.102198600769043
    9. 'classes' → logprob: -8.477198600769043
    10. 's' → logprob: -8.977198600769043

Token 198: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47597599029541016
    2. '       ' → logprob: -2.10097599029541
    3. 'for' → logprob: -2.72597599029541
    4. '   ' → logprob: -2.85097599029541
    5. '
' → logprob: -3.35097599029541
    6. '<|end|>' → logprob: -3.35097599029541
    7. ' ' → logprob: -3.47597599029541
    8. '    ' → logprob: -4.72597599029541
    9. ',' → logprob: -5.35097599029541
    10. ' 
' → logprob: -5.72597599029541

Token 199: 'jus' (ID: 56271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5655195116996765
    2. ' for' → logprob: -2.1905195713043213
    3. ')' → logprob: -2.3155195713043213
    4. 'for' → logprob: -2.8155195713043213
    5. '(' → logprob: -3.0655195713043213
    6. ' (' → logprob: -3.4405195713043213
    7. ' ' → logprob: -3.5655195713043213
    8. ' )' → logprob: -4.190519332885742
    9. ' range' → logprob: -4.315519332885742
    10. 'range' → logprob: -4.690519332885742

Token 200: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.18960630893707275
    2. 'ques' → logprob: -2.939606189727783
    3. 'q' → logprob: -3.314606189727783
    4. 'que' → logprob: -3.564606189727783
    5. 't' → logprob: -4.689606189727783
    6. 'bit' → logprob: -5.189606189727783
    7. 'u' → logprob: -5.689606189727783
    8. '#' → logprob: -5.814606189727783
    9. 'd' → logprob: -5.814606189727783
    10. 'c' → logprob: -5.939606189727783

Token 201: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.35272595286369324
    2. '=' → logprob: -2.3527259826660156
    3. ' au' → logprob: -2.6027259826660156
    4. '   ' → logprob: -2.9777259826660156
    5. '       ' → logprob: -3.3527259826660156
    6. 'à' → logprob: -4.227725982666016
    7. 'au' → logprob: -5.227725982666016
    8. ''à' → logprob: -5.352725982666016
    9. ' =' → logprob: -5.477725982666016
    10. ' aux' → logprob: -6.102725982666016

Token 202: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007494816090911627
    2. '1' → logprob: -5.007494926452637
    3. 'n' → logprob: -7.882494926452637
    4. ' (' → logprob: -8.382494926452637
    5. '(n' → logprob: -9.632494926452637
    6. ')' → logprob: -9.882494926452637
    7. 'U' → logprob: -10.757494926452637
    8. '(U' → logprob: -11.507494926452637
    9. ' ' → logprob: -12.007494926452637
    10. '```' → logprob: -12.382494926452637

Token 203: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01151589397341013
    2. '1' → logprob: -4.636516094207764
    3. 'n' → logprob: -6.761516094207764
    4. '(n' → logprob: -7.511516094207764
    5. ')' → logprob: -10.886515617370605
    6. '```' → logprob: -11.386515617370605
    7. ' (' → logprob: -11.886515617370605
    8. 'U' → logprob: -12.511515617370605
    9. '(U' → logprob: -12.636515617370605
    10. '2' → logprob: -13.136515617370605

Token 204: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.508362352848053
    2. '^' → logprob: -1.5083622932434082
    3. ' **' → logprob: -1.7583622932434082
    4. ' ^' → logprob: -5.508362293243408
    5. ' ' → logprob: -7.758362293243408
    6. ')' → logprob: -9.258362770080566
    7. ' ' → logprob: -9.883362770080566
    8. ' **)' → logprob: -10.383362770080566
    9. ' )' → logprob: -10.383362770080566
    10. '*' → logprob: -10.633362770080566

Token 205: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004909569397568703
    2. ' n' → logprob: -7.625491142272949
    3. '```' → logprob: -13.75049114227295
    4. ')n' → logprob: -14.87549114227295
    5. '   ' → logprob: -15.00049114227295
    6. '	n' → logprob: -15.37549114227295
    7. '(n' → logprob: -15.37549114227295
    8. ')' → logprob: -15.50049114227295
    9. ' ' → logprob: -16.000490188598633
    10. '[n' → logprob: -16.750490188598633

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0756382867693901
    2. '):' → logprob: -2.7006382942199707
    3. ' )' → logprob: -6.075638294219971
    4. '):
' → logprob: -6.075638294219971
    5. ')
' → logprob: -7.700638294219971
    6. ' ):' → logprob: -8.450637817382812
    7. '   ' → logprob: -9.450637817382812
    8. ').' → logprob: -9.450637817382812
    9. '):
' → logprob: -9.700637817382812
    10. '):

' → logprob: -10.075637817382812

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35245001316070557
    2. '   ' → logprob: -1.8524500131607056
    3. '
' → logprob: -2.227449893951416
    4. ' for' → logprob: -4.477449893951416
    5. 'for' → logprob: -5.352449893951416
    6. '<|end|>' → logprob: -5.852449893951416
    7. '    
' → logprob: -6.227449893951416
    8. ' 
' → logprob: -6.352449893951416
    9. '\n' → logprob: -6.352449893951416
    10. '    ' → logprob: -6.727449893951416

Token 208: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.7039918899536133
    2. ' for' → logprob: -1.8289918899536133
    3. 'for' → logprob: -2.2039918899536133
    4. 'dp' → logprob: -2.2039918899536133
    5. 'best' → logprob: -2.4539918899536133
    6. '   ' → logprob: -2.4539918899536133
    7. ' max' → logprob: -2.7039918899536133
    8. ' best' → logprob: -2.8289918899536133
    9. 'result' → logprob: -2.9539918899536133
    10. 'min' → logprob: -3.8289918899536133

Token 209: ' et' (ID: 859)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3142060041427612
    2. 'best' → logprob: -1.4392060041427612
    3. 'result' → logprob: -2.314206123352051
    4. 'dp' → logprob: -2.814206123352051
    5. ' max' → logprob: -2.939206123352051
    6. ' best' → logprob: -3.189206123352051
    7. 'res' → logprob: -3.439206123352051
    8. 'min' → logprob: -3.439206123352051
    9. 'for' → logprob: -3.439206123352051
    10. ' for' → logprob: -3.564206123352051

Token 210: ' vérifier' (ID: 93671)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.8392142057418823
    2. ' best' → logprob: -1.0892142057418823
    3. 'max' → logprob: -2.839214324951172
    4. ' max' → logprob: -3.464214324951172
    5. ' for' → logprob: -3.839214324951172
    6. 'for' → logprob: -4.214214324951172
    7. '       ' → logprob: -4.339214324951172
    8. ' ans' → logprob: -4.339214324951172
    9. 'min' → logprob: -4.464214324951172
    10. 'valid' → logprob: -4.839214324951172

Token 211: ' pour' (ID: 1930)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.2799203097820282
    2. ' if' → logprob: -1.5299203395843506
    3. ' celles' → logprob: -4.6549201011657715
    4. 'si' → logprob: -5.2799201011657715
    5. '       ' → logprob: -5.7799201011657715
    6. '   ' → logprob: -6.5299201011657715
    7. ' quelles' → logprob: -6.5299201011657715
    8. 'if' → logprob: -6.7799201011657715
    9. ' s' → logprob: -6.9049201011657715
    10. ' que' → logprob: -7.4049201011657715

Token 212: ' chacune' (ID: 127465)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.03654342517256737
    2. ' each' → logprob: -4.286543369293213
    3. 'each' → logprob: -5.411543369293213
    4. ' chacune' → logprob: -5.661543369293213
    5. '(' → logprob: -6.036543369293213
    6. 't' → logprob: -6.536543369293213
    7. ' ' → logprob: -6.661543369293213
    8. ' val' → logprob: -6.661543369293213
    9. ' all' → logprob: -7.036543369293213
    10. ' toutes' → logprob: -7.286543369293213

Token 213: ' :
' (ID: 10039)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.45458412170410156
    2. ' if' → logprob: -1.3295841217041016
    3. '       ' → logprob: -2.4545841217041016
    4. 'si' → logprob: -5.454584121704102
    5. 'if' → logprob: -5.704584121704102
    6. ' s' → logprob: -5.954584121704102
    7. '   ' → logprob: -6.079584121704102
    8. '    ' → logprob: -8.079584121704102
    9. ')' → logprob: -8.329584121704102
    10. ' ' → logprob: -8.454584121704102

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016660606488585472
    2. ' for' → logprob: -5.266660690307617
    3. '   ' → logprob: -6.391660690307617
    4. '        ' → logprob: -6.516660690307617
    5. 'for' → logprob: -6.766660690307617
    6. ' ' → logprob: -6.891660690307617
    7. '    ' → logprob: -7.141660690307617
    8. '        
' → logprob: -7.141660690307617
    9. '```' → logprob: -7.266660690307617
    10. '<|end|>' → logprob: -7.516660690307617

Token 215: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8126683831214905
    2. ' for' → logprob: -0.9376683831214905
    3. ' if' → logprob: -2.4376683235168457
    4. 'for' → logprob: -3.1876683235168457
    5. '   ' → logprob: -4.687668323516846
    6. ' valid' → logprob: -5.687668323516846
    7. 'if' → logprob: -5.812668323516846
    8. ' ' → logprob: -6.062668323516846
    9. ' possible' → logprob: -6.187668323516846
    10. '        ' → logprob: -6.312668323516846

Token 216: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6318938136100769
    2. ' if' → logprob: -1.3818938732147217
    3. ' for' → logprob: -2.7568938732147217
    4. ' valid' → logprob: -3.3818938732147217
    5. 'for' → logprob: -4.131893634796143
    6. 'valid' → logprob: -4.131893634796143
    7. ' selected' → logprob: -4.256893634796143
    8. 'selected' → logprob: -4.381893634796143
    9. 'if' → logprob: -4.631893634796143
    10. '   ' → logprob: -5.006893634796143

Token 217: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6979700326919556
    2. 'valid' → logprob: -1.8229700326919556
    3. 'best' → logprob: -2.322969913482666
    4. ' for' → logprob: -2.447969913482666
    5. 'max' → logprob: -3.197969913482666
    6. 'if' → logprob: -3.572969913482666
    7. '       ' → logprob: -4.072969913482666
    8. '   ' → logprob: -4.447969913482666
    9. ' valid' → logprob: -4.572969913482666
    10. ' if' → logprob: -4.697969913482666

Token 218: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9786379933357239
    2. ' if' → logprob: -1.103637933731079
    3. 'for' → logprob: -2.228637933731079
    4. 'mask' → logprob: -3.228637933731079
    5. 'credits' → logprob: -3.603637933731079
    6. ' for' → logprob: -3.978637933731079
    7. 'selected' → logprob: -4.478638172149658
    8. 'total' → logprob: -4.978638172149658
    9. 'sum' → logprob: -4.978638172149658
    10. 'cr' → logprob: -4.978638172149658

Token 219: ' tous' (ID: 10688)
  Prédit: '(pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.7009851932525635
    2. ' (' → logprob: -1.7009851932525635
    3. '(mask' → logprob: -1.7009851932525635
    4. '(' → logprob: -3.2009851932525635
    5. '((' → logprob: -3.7009851932525635
    6. 'pr' → logprob: -4.075984954833984
    7. 'all' → logprob: -4.700984954833984
    8. 'mask' → logprob: -5.200984954833984
    9. '(sum' → logprob: -5.200984954833984
    10. ' all' → logprob: -5.325984954833984

Token 220: ' les' (ID: 1341)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6696293950080872
    2. '(' → logprob: -1.7946293354034424
    3. '((' → logprob: -2.4196293354034424
    4. ' les' → logprob: -2.5446293354034424
    5. '(i' → logprob: -3.0446293354034424
    6. '(mask' → logprob: -3.9196293354034424
    7. '(selected' → logprob: -4.2946295738220215
    8. 'les' → logprob: -4.5446295738220215
    9. ' ((' → logprob: -4.9196295738220215
    10. '(course' → logprob: -5.1696295738220215

Token 221: ' pré' (ID: 9424)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9404139518737793
    2. ' (' → logprob: -0.9404139518737793
    3. '(i' → logprob: -2.5654139518737793
    4. '(mask' → logprob: -3.3154139518737793
    5. '((' → logprob: -4.065413951873779
    6. '(pr' → logprob: -4.190413951873779
    7. '(course' → logprob: -4.190413951873779
    8. '(c' → logprob: -4.315413951873779
    9. 'courses' → logprob: -5.065413951873779
    10. '(selected' → logprob: -5.190413951873779

Token 222: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.09089422225952148
    2. ' requis' → logprob: -3.3408942222595215
    3. 'requ' → logprob: -3.4658942222595215
    4. 'req' → logprob: -4.2158942222595215
    5. '       ' → logprob: -6.5908942222595215
    6. 'quisites' → logprob: -7.2158942222595215
    7. 'quis' → logprob: -7.2158942222595215
    8. '   ' → logprob: -7.8408942222595215
    9. '-re' → logprob: -7.8408942222595215
    10. 'requirements' → logprob: -7.9658942222595215

Token 223: 'quis' (ID: 9867)
  Prédit: 'quis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quis' → logprob: -0.0024774393532425165
    2. 'qs' → logprob: -6.877477645874023
    3. 'q' → logprob: -7.252477645874023
    4. 'qus' → logprob: -8.127477645874023
    5. 'quisites' → logprob: -9.252477645874023
    6. 'qu' → logprob: -9.502477645874023
    7. 're' → logprob: -9.627477645874023
    8. 'uis' → logprob: -10.752477645874023
    9. 'quisitos' → logprob: -10.752477645874023
    10. '#' → logprob: -11.002477645874023

Token 224: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7680156826972961
    2. ' sont' → logprob: -1.0180156230926514
    3. ' ont' → logprob: -2.6430156230926514
    4. 'ont' → logprob: -2.6430156230926514
    5. ' des' → logprob: -4.0180158615112305
    6. 'des' → logprob: -5.3930158615112305
    7. '<|end|>' → logprob: -6.3930158615112305
    8. ' ' → logprob: -6.5180158615112305
    9. 'd' → logprob: -7.0180158615112305
    10. '.' → logprob: -7.2680158615112305

Token 225: ' cours' (ID: 10138)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.6142942905426025
    2. '(' → logprob: -1.7392942905426025
    3. '(i' → logprob: -2.2392942905426025
    4. 'i' → logprob: -3.2392942905426025
    5. ' cours' → logprob: -3.7392942905426025
    6. ' (' → logprob: -3.8642942905426025
    7. '((' → logprob: -3.8642942905426025
    8. 'courses' → logprob: -4.114294052124023
    9. 'course' → logprob: -4.614294052124023
    10. ' i' → logprob: -4.864294052124023

Token 226: ' cho' (ID: 2552)
  Prédit: ' cho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cho' → logprob: -1.5338438749313354
    2. ' sont' → logprob: -1.6588438749313354
    3. 's' → logprob: -2.158843994140625
    4. ' pris' → logprob: -2.408843994140625
    5. ' suivants' → logprob: -3.033843994140625
    6. ' sélection' → logprob: -3.158843994140625
    7. ' inclus' → logprob: -3.158843994140625
    8. ' présents' → logprob: -3.658843994140625
    9. ' ont' → logprob: -4.033843994140625
    10. ' que' → logprob: -4.033843994140625

Token 227: 'isis' (ID: 11352)
  Prédit: 'isis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isis' → logprob: -0.06279658526182175
    2. 'sis' → logprob: -3.0627965927124023
    3. 'is' → logprob: -4.437796592712402
    4. '``' → logprob: -7.312796592712402
    5. '```' → logprob: -7.812796592712402
    6. '   ' → logprob: -7.812796592712402
    7. 's' → logprob: -8.812796592712402
    8. '#' → logprob: -8.812796592712402
    9. '       ' → logprob: -9.562796592712402
    10. '     ' → logprob: -9.562796592712402

Token 228: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.2572530210018158
    2. 's' → logprob: -1.6322530508041382
    3. ' ont' → logprob: -4.382253170013428
    4. ' are' → logprob: -4.882253170013428
    5. 'ont' → logprob: -5.257253170013428
    6. ')' → logprob: -6.507253170013428
    7. ',' → logprob: -6.882253170013428
    8. '<|end|>' → logprob: -7.507253170013428
    9. ' have' → logprob: -7.757253170013428
    10. 'selected' → logprob: -8.00725269317627

Token 229: ' aussi' (ID: 9894)
  Prédit: ' respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' respect' → logprob: -0.90444415807724
    2. 's' → logprob: -1.4044442176818848
    3. ' satisf' → logprob: -1.5294442176818848
    4. ' inclus' → logprob: -2.7794442176818848
    5. 'respect' → logprob: -4.154444217681885
    6. 'v' → logprob: -4.404444217681885
    7. ' valid' → logprob: -4.404444217681885
    8. ' présents' → logprob: -4.654444217681885
    9. 'valid' → logprob: -4.779444217681885
    10. ' vér' → logprob: -6.654444217681885

Token 230: ' dans' (ID: 2671)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cho' → logprob: -1.2888360023498535
    2. ' inclus' → logprob: -1.6638360023498535
    3. 'dans' → logprob: -1.6638360023498535
    4. ' présents' → logprob: -1.6638360023498535
    5. 'prés' → logprob: -2.9138360023498535
    6. 'in' → logprob: -2.9138360023498535
    7. 'pris' → logprob: -4.4138360023498535
    8. 'prises' → logprob: -5.0388360023498535
    9. ' cho' → logprob: -5.1638360023498535
    10. 'chosen' → logprob: -5.6638360023498535

Token 231: ' la' (ID: 557)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.505449652671814
    2. ' la' → logprob: -1.630449652671814
    3. 'la' → logprob: -1.755449652671814
    4. 'the' → logprob: -1.880449652671814
    5. ' the' → logprob: -2.5054497718811035
    6. 'l' → logprob: -3.5054497718811035
    7. ' mask' → logprob: -3.6304497718811035
    8. 'le' → logprob: -3.7554497718811035
    9. '   ' → logprob: -4.3804497718811035
    10. ' (' → logprob: -4.7554497718811035

Token 232: ' sélection' (ID: 43472)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.5319966673851013
    2. 'comb' → logprob: -1.906996726989746
    3. 'chosen' → logprob: -2.656996726989746
    4. '(' → logprob: -3.156996726989746
    5. 'subset' → logprob: -3.656996726989746
    6. 'cho' → logprob: -3.781996726989746
    7. '(mask' → logprob: -3.906996726989746
    8. ' mask' → logprob: -4.531996726989746
    9. ')' → logprob: -4.781996726989746
    10. ' (' → logprob: -5.031996726989746

Token 233: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03399362415075302
    2. '<|end|>' → logprob: -3.783993721008301
    3. ',' → logprob: -5.783993721008301
    4. '        
' → logprob: -5.908993721008301
    5. '   ' → logprob: -7.283993721008301
    6. '<|end|>' → logprob: -7.533993721008301
    7. '           ' → logprob: -7.658993721008301
    8. '
' → logprob: -7.658993721008301
    9. '        ' → logprob: -7.908993721008301
    10. '\n' → logprob: -8.1589937210083

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018064597621560097
    2. '\n' → logprob: -4.768064498901367
    3. '        
' → logprob: -6.268064498901367
    4. '   ' → logprob: -6.268064498901367
    5. '<|end|>' → logprob: -6.518064498901367
    6. '           ' → logprob: -7.018064498901367
    7. ',' → logprob: -7.393064498901367
    8. '\' → logprob: -7.893064498901367
    9. '    
' → logprob: -8.018064498901367
    10. '  
' → logprob: -8.143064498901367

Token 235: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007215660531073809
    2. '   ' → logprob: -5.88221549987793
    3. '<|end|>' → logprob: -6.13221549987793
    4. ' ' → logprob: -7.38221549987793
    5. '        
' → logprob: -8.00721549987793
    6. '\n' → logprob: -8.38221549987793
    7. '    ' → logprob: -8.75721549987793
    8. '           ' → logprob: -9.00721549987793
    9. '      ' → logprob: -9.38221549987793
    10. '  ' → logprob: -9.38221549987793

Token 236: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009046218357980251
    2. '#' → logprob: -5.6340460777282715
    3. '   ' → logprob: -6.0090460777282715
    4. '           ' → logprob: -7.5090460777282715
    5. '        
' → logprob: -7.5090460777282715
    6. '<|end|>' → logprob: -7.6340460777282715
    7. '
' → logprob: -7.8840460777282715
    8. ' for' → logprob: -8.63404655456543
    9. ',' → logprob: -8.88404655456543
    10. ' #' → logprob: -9.13404655456543

Token 237: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1334175318479538
    2. '   ' → logprob: -2.6334176063537598
    3. '#' → logprob: -4.38341760635376
    4. ' ' → logprob: -4.38341760635376
    5. 'for' → logprob: -4.50841760635376
    6. ' for' → logprob: -5.50841760635376
    7. '
' → logprob: -5.75841760635376
    8. 'selected' → logprob: -5.75841760635376
    9. ' #' → logprob: -6.63341760635376
    10. 'max' → logprob: -6.88341760635376

Token 238: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0584189891815186
    2. '#' → logprob: -1.4334189891815186
    3. ' if' → logprob: -1.5584189891815186
    4. 'if' → logprob: -1.9334189891815186
    5. ' #' → logprob: -3.8084189891815186
    6. '   ' → logprob: -4.433419227600098
    7. ' si' → logprob: -4.808419227600098
    8. ' ' → logprob: -5.683419227600098
    9. '           ' → logprob: -5.683419227600098
    10. ' la' → logprob: -6.433419227600098

Token 239: ' la' (ID: 557)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.43018606305122375
    2. 'sum' → logprob: -1.3051860332489014
    3. ' credits' → logprob: -3.8051860332489014
    4. 'credits' → logprob: -4.5551862716674805
    5. ' (' → logprob: -4.6801862716674805
    6. ' mask' → logprob: -5.0551862716674805
    7. '(sum' → logprob: -5.1801862716674805
    8. '   ' → logprob: -5.9301862716674805
    9. ' len' → logprob: -6.0551862716674805
    10. 'mask' → logprob: -6.3051862716674805

Token 240: ' somme' (ID: 64484)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6077538132667542
    2. 'sum' → logprob: -0.9827538132667542
    3. 'credits' → logprob: -3.9827537536621094
    4. ' total' → logprob: -4.107753753662109
    5. ' credits' → logprob: -4.607753753662109
    6. ' somme' → logprob: -5.107753753662109
    7. ' crédits' → logprob: -5.732753753662109
    8. 'total' → logprob: -5.857753753662109
    9. '(sum' → logprob: -6.232753753662109
    10. 'len' → logprob: -6.232753753662109

Token 241: ' des' (ID: 731)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.39316076040267944
    2. ' des' → logprob: -1.6431608200073242
    3. '<=' → logprob: -3.268160820007324
    4. ' of' → logprob: -3.893160820007324
    5. ' de' → logprob: -4.018160820007324
    6. '   ' → logprob: -4.143160820007324
    7. ' ' → logprob: -4.768160820007324
    8. ' total' → logprob: -5.518160820007324
    9. '_' → logprob: -5.768160820007324
    10. '    ' → logprob: -5.893160820007324

Token 242: ' crédits' (ID: 187186)
  Prédit: 'credits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'credits' → logprob: -0.3589383363723755
    2. ' crédits' → logprob: -1.7339383363723755
    3. ' credits' → logprob: -2.483938217163086
    4. 'cr' → logprob: -3.233938217163086
    5. ' cr' → logprob: -7.733938217163086
    6. '   ' → logprob: -7.983938217163086
    7. ' créditos' → logprob: -7.983938217163086
    8. ' ' → logprob: -8.108938217163086
    9. ' crédit' → logprob: -8.858938217163086
    10. 'credit' → logprob: -9.483938217163086

Token 243: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.029042880982160568
    2. ' ' → logprob: -4.654042720794678
    3. '<=' → logprob: -4.904042720794678
    4. ' +' → logprob: -5.904042720794678
    5. '   ' → logprob: -5.904042720794678
    6. '+' → logprob: -6.029042720794678
    7. ' ≤' → logprob: -7.154042720794678
    8. '    ' → logprob: -7.654042720794678
    9. ' >=' → logprob: -7.779042720794678
    10. 'selected' → logprob: -7.904042720794678

Token 244: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.018179794773459435
    2. ' U' → logprob: -4.018179893493652
    3. '   ' → logprob: -11.393179893493652
    4. ' ' → logprob: -11.518179893493652
    5. '	U' → logprob: -13.018179893493652
    6. ' ' → logprob: -13.268179893493652
    7. '  ' → logprob: -13.893179893493652
    8. '       ' → logprob: -14.393179893493652
    9. '           ' → logprob: -14.643179893493652
    10. '    ' → logprob: -14.893179893493652

Token 245: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44505366683006287
    2. '
' → logprob: -1.0700536966323853
    3. '<|end|>' → logprob: -4.945053577423096
    4. '        
' → logprob: -5.695053577423096
    5. '   ' → logprob: -6.445053577423096
    6. '  
' → logprob: -7.820053577423096
    7. '<|end|>' → logprob: -7.820053577423096
    8. ',' → logprob: -8.195054054260254
    9. '
' → logprob: -8.320054054260254
    10. '    
' → logprob: -8.570054054260254

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04680376499891281
    2. '
' → logprob: -3.6718037128448486
    3. '<|end|>' → logprob: -4.546803951263428
    4. '        
' → logprob: -6.171803951263428
    5. '\n' → logprob: -6.171803951263428
    6. '   ' → logprob: -6.171803951263428
    7. '  
' → logprob: -7.046803951263428
    8. ' 
' → logprob: -7.921803951263428
    9. ' ' → logprob: -7.921803951263428
    10. '\' → logprob: -8.17180347442627

Token 247: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1784522980451584
    2. 'max' → logprob: -3.303452253341675
    3. '   ' → logprob: -3.428452253341675
    4. 'dp' → logprob: -3.928452253341675
    5. ' max' → logprob: -4.053452491760254
    6. 'result' → logprob: -4.553452491760254
    7. '
' → logprob: -4.803452491760254
    8. ' result' → logprob: -5.178452491760254
    9. ' dp' → logprob: -5.178452491760254
    10. 'best' → logprob: -5.553452491760254

Token 248: ' Parmi' (ID: 139624)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.416969895362854
    2. ' best' → logprob: -1.666969895362854
    3. 'result' → logprob: -2.1669697761535645
    4. '       ' → logprob: -2.4169697761535645
    5. 'best' → logprob: -2.4169697761535645
    6. ' max' → logprob: -2.5419697761535645
    7. 'max' → logprob: -2.6669697761535645
    8. ' ans' → logprob: -3.7919697761535645
    9. ' for' → logprob: -3.9169697761535645
    10. ' answer' → logprob: -3.9169697761535645

Token 249: ' celles' (ID: 57573)
  Prédit: ' celles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' celles' → logprob: -0.6371556520462036
    2. 'les' → logprob: -1.1371556520462036
    3. 't' → logprob: -2.762155532836914
    4. 'c' → logprob: -3.387155532836914
    5. ' les' → logprob: -3.762155532836914
    6. ' toutes' → logprob: -4.387155532836914
    7. ' ceux' → logprob: -4.762155532836914
    8. 'ces' → logprob: -6.012155532836914
    9. '   ' → logprob: -6.387155532836914
    10. 'cel' → logprob: -7.012155532836914

Token 250: ' qui' (ID: 2780)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2270836979150772
    2. ' celles' → logprob: -2.727083683013916
    3. ' qui' → logprob: -2.852083683013916
    4. 'des' → logprob: -3.102083683013916
    5. 'qui' → logprob: -3.602083683013916
    6. '#' → logprob: -6.227083683013916
    7. '   ' → logprob: -7.102083683013916
    8. ' de' → logprob: -7.477083683013916
    9. ')' → logprob: -7.602083683013916
    10. 'de' → logprob: -7.852083683013916

Token 251: ' satisf' (ID: 8824)
  Prédit: ' rempl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rempl' → logprob: -0.7809504270553589
    2. 's' → logprob: -1.7809504270553589
    3. ' répond' → logprob: -2.7809505462646484
    4. '   ' → logprob: -2.9059505462646484
    5. 'valid' → logprob: -2.9059505462646484
    6. 'ré' → logprob: -3.2809505462646484
    7. ' satisf' → logprob: -3.4059505462646484
    8. ' respect' → logprob: -3.4059505462646484
    9. 'respect' → logprob: -4.530950546264648
    10. ' passent' → logprob: -4.530950546264648

Token 252: 'ont' (ID: 645)
  Prédit: 'ont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.7143809199333191
    2. 'aient' → logprob: -0.9643809199333191
    3. 'a' → logprob: -2.464380979537964
    4. 'ais' → logprob: -3.714380979537964
    5. 'ait' → logprob: -5.089380741119385
    6. 'ient' → logprob: -5.339380741119385
    7. 'ent' → logprob: -6.089380741119385
    8. 'iennent' → logprob: -7.089380741119385
    9. 'ai' → logprob: -7.089380741119385
    10. '   ' → logprob: -7.464380741119385

Token 253: ' les' (ID: 1341)
  Prédit: ' celles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' celles' → logprob: -0.03141436725854874
    2. '   ' → logprob: -4.28141450881958
    3. 'les' → logprob: -5.15641450881958
    4. ' les' → logprob: -5.65641450881958
    5. 's' → logprob: -6.03141450881958
    6. '       ' → logprob: -6.15641450881958
    7. 'c' → logprob: -6.65641450881958
    8. ',' → logprob: -7.53141450881958
    9. '           ' → logprob: -8.781414031982422
    10. ' ' → logprob: -9.031414031982422

Token 254: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.32641303539276123
    2. 'crit' → logprob: -2.201413154602051
    3. ' critères' → logprob: -2.951413154602051
    4. ' crit' → logprob: -3.451413154602051
    5. ' conditions' → logprob: -3.701413154602051
    6. 'cr' → logprob: -3.951413154602051
    7. 'condition' → logprob: -4.701413154602051
    8. 'criter' → logprob: -5.201413154602051
    9. 'cond' → logprob: -5.451413154602051
    10. 'valid' → logprob: -5.701413154602051

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003710411721840501
    2. ',
' → logprob: -6.1287102699279785
    3. '       ' → logprob: -7.3787102699279785
    4. ' ,' → logprob: -7.5037102699279785
    5. '#' → logprob: -9.628710746765137
    6. '   ' → logprob: -9.878710746765137
    7. 'selected' → logprob: -10.628710746765137
    8. ':' → logprob: -10.753710746765137
    9. 'min' → logprob: -11.003710746765137
    10. '<|end|>' → logprob: -11.003710746765137

Token 256: ' on' (ID: 402)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.5265686511993408
    2. 'best' → logprob: -1.4015686511993408
    3. 'min' → logprob: -2.651568651199341
    4. ' min' → logprob: -2.651568651199341
    5. ' result' → logprob: -5.276568412780762
    6. 'result' → logprob: -5.651568412780762
    7. ' select' → logprob: -6.526568412780762
    8. '       ' → logprob: -6.651568412780762
    9. ' minimal' → logprob: -6.776568412780762
    10. 'selected' → logprob: -6.901568412780762

Token 257: ' garde' (ID: 65309)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.215437412261963
    2. ' chois' → logprob: -1.840437412261963
    3. 'cherche' → logprob: -2.090437412261963
    4. ' cherche' → logprob: -2.465437412261963
    5. ' veut' → logprob: -2.965437412261963
    6. 'ret' → logprob: -3.590437412261963
    7. ' recherche' → logprob: -3.715437412261963
    8. '       ' → logprob: -3.715437412261963
    9. ' cherch' → logprob: -3.715437412261963
    10. 'cho' → logprob: -4.340437412261963

Token 258: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5021678805351257
    2. ' la' → logprob: -2.3771679401397705
    3. 'max' → logprob: -2.7521679401397705
    4. 'len' → logprob: -3.3771679401397705
    5. 'min' → logprob: -3.5021679401397705
    6. '  ' → logprob: -3.8771679401397705
    7. '           ' → logprob: -4.127167701721191
    8. '       ' → logprob: -4.127167701721191
    9. '(' → logprob: -4.252167701721191
    10. '0' → logprob: -4.252167701721191

Token 259: ' taille' (ID: 41644)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.016092300415039
    2. 'minimum' → logprob: -1.016092300415039
    3. 'min' → logprob: -1.766092300415039
    4. 'maximum' → logprob: -4.016092300415039
    5. 'plus' → logprob: -4.391092300415039
    6. 'minimal' → logprob: -4.766092300415039
    7. ' minimal' → logprob: -4.891092300415039
    8. ' minimum' → logprob: -4.891092300415039
    9. 'nombre' → logprob: -5.141092300415039
    10. '0' → logprob: -5.266092300415039

Token 260: ' minimale' (ID: 143217)
  Prédit: ' minimale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.17913250625133514
    2. 'min' → logprob: -2.4291324615478516
    3. ' min' → logprob: -3.6791324615478516
    4. ' minimal' → logprob: -4.054132461547852
    5. ' minimum' → logprob: -4.679132461547852
    6. ' maximale' → logprob: -5.054132461547852
    7. 'minimum' → logprob: -5.554132461547852
    8. '(min' → logprob: -6.054132461547852
    9. '_min' → logprob: -6.304132461547852
    10. ' de' → logprob: -6.429132461547852

Token 261: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.061224102973938
    2. '       ' → logprob: -1.436224102973938
    3. 'min' → logprob: -2.4362239837646484
    4. '   ' → logprob: -2.4362239837646484
    5. ' min' → logprob: -2.5612239837646484
    6. ' minimum' → logprob: -3.5612239837646484
    7. 'minimum' → logprob: -3.5612239837646484
    8. 'max' → logprob: -3.8112239837646484
    9. 'best' → logprob: -4.311223983764648
    10. ' best' → logprob: -4.311223983764648

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10097269713878632
    2. '   ' → logprob: -3.1009726524353027
    3. '
' → logprob: -3.3509726524353027
    4. '        
' → logprob: -5.100972652435303
    5. '    
' → logprob: -6.225972652435303
    6. '\n' → logprob: -6.475972652435303
    7. '<|end|>' → logprob: -6.725972652435303
    8. ' ' → logprob: -6.850972652435303
    9. '  
' → logprob: -6.850972652435303
    10. '\' → logprob: -7.225972652435303

Token 263: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5518630146980286
    2. ' min' → logprob: -1.6768629550933838
    3. ' result' → logprob: -2.676862955093384
    4. 'min' → logprob: -2.926862955093384
    5. 'result' → logprob: -3.551862955093384
    6. ' best' → logprob: -4.176863193511963
    7. ' ans' → logprob: -4.301863193511963
    8. '       ' → logprob: -4.551863193511963
    9. ' max' → logprob: -4.676863193511963
    10. ' answer' → logprob: -5.051863193511963

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04303058981895447
    2. '=' → logprob: -3.1680305004119873
    3. '_' → logprob: -11.793030738830566
    4. ' ' → logprob: -12.043030738830566
    5. '_size' → logprob: -12.043030738830566
    6. ',' → logprob: -12.168030738830566
    7. ' _' → logprob: -13.168030738830566
    8. 'size' → logprob: -13.793030738830566
    9. ' ' → logprob: -14.418030738830566
    10. ')' → logprob: -14.793030738830566

Token 265: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17305141687393188
    2. 'float' → logprob: -2.048051357269287
    3. 'None' → logprob: -3.923051357269287
    4. ' n' → logprob: -5.673051357269287
    5. '10' → logprob: -5.923051357269287
    6. ' float' → logprob: -6.798051357269287
    7. 'sys' → logprob: -6.798051357269287
    8. ' None' → logprob: -6.923051357269287
    9. '-' → logprob: -7.548051357269287
    10. '100' → logprob: -9.048051834106445

Token 266: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34849676489830017
    2. ' +' → logprob: -1.2234967947006226
    3. '
' → logprob: -10.348496437072754
    4. '+
' → logprob: -11.598496437072754
    5. ' +
' → logprob: -12.223496437072754
    6. 'import' → logprob: -12.598496437072754
    7. '+n' → logprob: -13.598496437072754
    8. '<|end|>' → logprob: -15.848496437072754
    9. '+++' → logprob: -16.09849739074707
    10. '   ' → logprob: -16.22349739074707

Token 267: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014165511354804039
    2. ' +' → logprob: -4.26416540145874
    3. '
' → logprob: -13.889165878295898
    4. 'import' → logprob: -14.639165878295898
    5. '+
' → logprob: -14.889165878295898
    6. '+n' → logprob: -15.639165878295898
    7. ' ' → logprob: -17.1391658782959
    8. '＋' → logprob: -17.6391658782959
    9. '   ' → logprob: -18.0141658782959
    10. '+i' → logprob: -18.1391658782959

Token 268: ' maximum' (ID: 10562)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10059375315904617
    2. ' +' → logprob: -2.3505938053131104
    3. 'n' → logprob: -8.225593566894531
    4. '+n' → logprob: -10.225593566894531
    5. ' n' → logprob: -10.725593566894531
    6. '
' → logprob: -11.350593566894531
    7. '0' → logprob: -11.725593566894531
    8. 'import' → logprob: -12.100593566894531
    9. '<|end|>' → logprob: -12.100593566894531
    10. '1' → logprob: -12.350593566894531

Token 269: ' n' (ID: 297)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07079708576202393
    2. ' +' → logprob: -2.6957969665527344
    3. '<|end|>' → logprob: -7.695796966552734
    4. '
' → logprob: -8.195796966552734
    5. '+
' → logprob: -10.195796966552734
    6. '<|end|>' → logprob: -10.445796966552734
    7. 'import' → logprob: -10.445796966552734
    8. ' +
' → logprob: -11.695796966552734
    9. '+n' → logprob: -12.195796966552734
    10. ' ' → logprob: -12.195796966552734

Token 270: ' cours' (ID: 10138)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3495233356952667
    2. ' +' → logprob: -1.2245233058929443
    3. '
' → logprob: -7.349523544311523
    4. 'import' → logprob: -7.974523544311523
    5. '+
' → logprob: -10.599523544311523
    6. ' +
' → logprob: -11.474523544311523
    7. 'for' → logprob: -11.849523544311523
    8. '<|end|>' → logprob: -11.849523544311523
    9. '   ' → logprob: -11.974523544311523
    10. '+n' → logprob: -12.724523544311523

Token 271: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4328995645046234
    2. ' +' → logprob: -1.0578995943069458
    3. '
' → logprob: -5.682899475097656
    4. '<|end|>' → logprob: -8.307899475097656
    5. 'import' → logprob: -8.807899475097656
    6. '+
' → logprob: -9.182899475097656
    7. ' ' → logprob: -9.557899475097656
    8. ' +
' → logprob: -9.557899475097656
    9. ' 
' → logprob: -10.057899475097656
    10. '   ' → logprob: -11.307899475097656

Token 272: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3750622570514679
    2. '
' → logprob: -1.8750622272491455
    3. ' +' → logprob: -2.0000622272491455
    4. '   ' → logprob: -4.250062465667725
    5. '    
' → logprob: -5.375062465667725
    6. 'import' → logprob: -6.875062465667725
    7. ' 
' → logprob: -7.125062465667725
    8. '+
' → logprob: -7.625062465667725
    9. '  
' → logprob: -7.750062465667725
    10. '       ' → logprob: -7.750062465667725

Token 273: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030865846201777458
    2. ' for' → logprob: -3.6558659076690674
    3. 'from' → logprob: -5.530865669250488
    4. '   ' → logprob: -8.405865669250488
    5. 'import' → logprob: -8.655865669250488
    6. ' from' → logprob: -9.655865669250488
    7. 'all' → logprob: -10.155865669250488
    8. '       ' → logprob: -10.155865669250488
    9. 'selected' → logprob: -11.655865669250488
    10. ' ' → logprob: -11.905865669250488

Token 274: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1650635451078415
    2. 'from' → logprob: -2.5400636196136475
    3. ' for' → logprob: -2.6650636196136475
    4. ' from' → logprob: -5.790063381195068
    5. 'import' → logprob: -7.790063381195068
    6. '   ' → logprob: -9.290063858032227
    7. ' ' → logprob: -10.290063858032227
    8. 'range' → logprob: -11.165063858032227
    9. 'def' → logprob: -11.415063858032227
    10. 'all' → logprob: -11.665063858032227

Token 275: 'ours' (ID: 2327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09248164296150208
    2. 'our' → logprob: -3.3424816131591797
    3. ' for' → logprob: -4.59248161315918
    4. 'ourt' → logprob: -4.71748161315918
    5. 'el' → logprob: -4.96748161315918
    6. 'er' → logprob: -5.21748161315918
    7. 'ours' → logprob: -5.46748161315918
    8. 'or' → logprob: -6.09248161315918
    9. 'ount' → logprob: -6.59248161315918
    10. 'ourse' → logprob: -6.71748161315918

Token 276: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4028252959251404
    2. '(' → logprob: -1.4028253555297852
    3. 'for' → logprob: -3.027825355529785
    4. '   ' → logprob: -4.152825355529785
    5. ' in' → logprob: -4.902825355529785
    6. ' range' → logprob: -5.527825355529785
    7. ' of' → logprob: -5.902825355529785
    8. '       ' → logprob: -6.027825355529785
    9. ' (' → logprob: -6.402825355529785
    10. 'range' → logprob: -6.777825355529785

Token 277: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1089506447315216
    2. '(' → logprob: -2.358950614929199
    3. ' range' → logprob: -5.233950614929199
    4. '1' → logprob: -5.858950614929199
    5. 'subset' → logprob: -8.3589506149292
    6. 'all' → logprob: -8.8589506149292
    7. ' (' → logprob: -9.9839506149292
    8. 'mask' → logprob: -10.1089506149292
    9. '(range' → logprob: -11.6089506149292
    10. ')' → logprob: -11.6089506149292

Token 278: ' les' (ID: 1341)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.5351114273071289
    2. 'mask' → logprob: -1.910111427307129
    3. ' subset' → logprob: -2.285111427307129
    4. 'subset' → logprob: -2.535111427307129
    5. ' mask' → logprob: -3.035111427307129
    6. 'sub' → logprob: -3.910111427307129
    7. 'm' → logprob: -5.285111427307129
    8. ' masks' → logprob: -5.910111427307129
    9. ' sub' → logprob: -6.160111427307129
    10. ' s' → logprob: -6.660111427307129

Token 279: ' sous' (ID: 14487)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7515339255332947
    2. '1' → logprob: -1.3765339851379395
    3. ' subsets' → logprob: -2.2515339851379395
    4. 'subset' → logprob: -2.6265339851379395
    5. 'mask' → logprob: -3.0015339851379395
    6. 'sub' → logprob: -3.6265339851379395
    7. ' subset' → logprob: -5.0015339851379395
    8. 'm' → logprob: -5.3765339851379395
    9. ' (' → logprob: -5.8765339851379395
    10. 'range' → logprob: -5.8765339851379395

Token 280: '-' (ID: 12)
  Prédit: 'sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sets' → logprob: -0.028871383517980576
    2. 'm' → logprob: -3.9038712978363037
    3. 'set' → logprob: -5.153871536254883
    4. 'mask' → logprob: -6.028871536254883
    5. 'ense' → logprob: -10.403871536254883
    6. ' sets' → logprob: -10.903871536254883
    7. 'mas' → logprob: -11.028871536254883
    8. 's' → logprob: -11.153871536254883
    9. '   ' → logprob: -11.528871536254883
    10. '```' → logprob: -12.528871536254883

Token 281: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.6751403212547302
    2. 'sets' → logprob: -0.8001403212547302
    3. 'mask' → logprob: -3.675140380859375
    4. 'm' → logprob: -5.050140380859375
    5. 'mas' → logprob: -5.050140380859375
    6. 'ensemble' → logprob: -6.300140380859375
    7. 'set' → logprob: -6.675140380859375
    8. 'ets' → logprob: -9.425140380859375
    9. ' ensembles' → logprob: -9.675140380859375
    10. 'ens' → logprob: -9.925140380859375

Token 282: 'mbles' (ID: 60383)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.0641901046037674
    2. 't' → logprob: -3.439190149307251
    3. 'mbles' → logprob: -3.564190149307251
    4. 'mb' → logprob: -6.564189910888672
    5. 'mble' → logprob: -8.314189910888672
    6. 'ets' → logprob: -10.564189910888672
    7. 'm' → logprob: -10.939189910888672
    8. 'quences' → logprob: -11.064189910888672
    9. '```' → logprob: -11.939189910888672
    10. 'sets' → logprob: -12.064189910888672

Token 283: ' possibles' (ID: 97753)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1295214593410492
    2. 'for' → logprob: -2.754521369934082
    3. ' range' → logprob: -3.629521369934082
    4. 'range' → logprob: -4.629521369934082
    5. '   ' → logprob: -5.129521369934082
    6. ' (' → logprob: -5.129521369934082
    7. '(range' → logprob: -5.879521369934082
    8. '       ' → logprob: -6.254521369934082
    9. '(' → logprob: -6.254521369934082
    10. ' in' → logprob: -6.504521369934082

Token 284: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13619939982891083
    2. 'for' → logprob: -2.136199474334717
    3. ' range' → logprob: -5.761199474334717
    4. '   ' → logprob: -6.011199474334717
    5. 'range' → logprob: -6.386199474334717
    6. '       ' → logprob: -7.136199474334717
    7. ' in' → logprob: -7.636199474334717
    8. ' (' → logprob: -8.761198997497559
    9. '(range' → logprob: -9.136198997497559
    10. '
' → logprob: -9.386198997497559

Token 285: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18352611362934113
    2. 'for' → logprob: -1.8085261583328247
    3. '   ' → logprob: -6.183526039123535
    4. '
' → logprob: -7.058526039123535
    5. ' 
' → logprob: -7.558526039123535
    6. ' ' → logprob: -9.183526039123535
    7. 'range' → logprob: -10.058526039123535
    8. '```' → logprob: -10.558526039123535
    9. ' ' → logprob: -10.808526039123535
    10. ' range' → logprob: -10.933526039123535

Token 286: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.226117342710495
    2. 'for' → logprob: -1.6011173725128174
    3. '   ' → logprob: -7.851117134094238
    4. '       ' → logprob: -9.226117134094238
    5. ' range' → logprob: -9.351117134094238
    6. ' 
' → logprob: -10.351117134094238
    7. '
' → logprob: -10.476117134094238
    8. 'range' → logprob: -10.601117134094238
    9. ' f' → logprob: -11.351117134094238
    10. '1' → logprob: -11.601117134094238

Token 287: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.633012592792511
    2. ' for' → logprob: -0.758012592792511
    3. '   ' → logprob: -7.883012771606445
    4. '       ' → logprob: -10.633012771606445
    5. 'from' → logprob: -12.883012771606445
    6. '
' → logprob: -13.383012771606445
    7. '```' → logprob: -13.383012771606445
    8. ' ' → logprob: -13.758012771606445
    9. 'mask' → logprob: -14.008012771606445
    10. 'f' → logprob: -14.383012771606445

Token 288: ' chaque' (ID: 21194)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.6062002778053284
    2. 'subset' → logprob: -0.9812002778053284
    3. 's' → logprob: -3.2312002182006836
    4. ' subset' → logprob: -4.231200218200684
    5. ' mask' → logprob: -5.356200218200684
    6. 'state' → logprob: -5.856200218200684
    7. 'selected' → logprob: -5.981200218200684
    8. 'sel' → logprob: -6.106200218200684
    9. 'i' → logprob: -6.106200218200684
    10. 'taken' → logprob: -6.231200218200684

Token 289: ' sous' (ID: 14487)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.8427980542182922
    2. ' subset' → logprob: -1.4677979946136475
    3. 's' → logprob: -1.9677979946136475
    4. 'mask' → logprob: -1.9677979946136475
    5. ' mask' → logprob: -3.9677979946136475
    6. ' s' → logprob: -4.717798233032227
    7. 'S' → logprob: -5.092798233032227
    8. 'sel' → logprob: -5.217798233032227
    9. 'selected' → logprob: -5.342798233032227
    10. 'selection' → logprob: -5.842798233032227

Token 290: '-' (ID: 12)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.1486365795135498
    2. 'subset' → logprob: -2.52363657951355
    3. 's' → logprob: -3.64863657951355
    4. 'set' → logprob: -4.148636817932129
    5. 'ensemble' → logprob: -5.273636817932129
    6. ' mask' → logprob: -5.523636817932129
    7. ' subset' → logprob: -6.523636817932129
    8. 'mas' → logprob: -6.523636817932129
    9. 'state' → logprob: -7.398636817932129
    10. 'sel' → logprob: -7.398636817932129

Token 291: 'ensemble' (ID: 37301)
  Prédit: 'ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.21030990779399872
    2. 'subset' → logprob: -1.8353098630905151
    3. 'mask' → logprob: -4.085309982299805
    4. 'set' → logprob: -5.710309982299805
    5. 's' → logprob: -5.835309982299805
    6. 'ense' → logprob: -6.335309982299805
    7. ' subset' → logprob: -6.335309982299805
    8. 'i' → logprob: -6.585309982299805
    9. ' ensemble' → logprob: -7.085309982299805
    10. ' i' → logprob: -7.960309982299805

Token 292: ' S' (ID: 336)
  Prédit: ' subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.677574872970581
    2. 'subset' → logprob: -1.302574872970581
    3. 'mask' → logprob: -2.427574872970581
    4. ' s' → logprob: -3.302574872970581
    5. ' mask' → logprob: -3.677574872970581
    6. 's' → logprob: -3.802574872970581
    7. ' in' → logprob: -3.927574872970581
    8. 'selected' → logprob: -5.17757511138916
    9. ' selected' → logprob: -5.80257511138916
    10. 'S' → logprob: -5.92757511138916

Token 293: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02641431801021099
    2. 'in' → logprob: -3.651414394378662
    3. ' i' → logprob: -9.901413917541504
    4. 'range' → logprob: -11.026413917541504
    5. ' ' → logprob: -11.276413917541504
    6. ',' → logprob: -11.401413917541504
    7. 's' → logprob: -12.026413917541504
    8. '   ' → logprob: -12.776413917541504
    9. ' ' → logprob: -12.776413917541504
    10. 'i' → logprob: -13.151413917541504

Token 294: ' on' (ID: 402)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5811858177185059
    2. ' subset' → logprob: -2.206185817718506
    3. 'subset' → logprob: -2.331185817718506
    4. ' S' → logprob: -2.331185817718506
    5. 's' → logprob: -2.456185817718506
    6. 'mask' → logprob: -3.831185817718506
    7. ' s' → logprob: -3.956185817718506
    8. ' mask' → logprob: -4.956185817718506
    9. '   ' → logprob: -7.456185817718506
    10. 'selected' → logprob: -7.956185817718506

Token 295: ' vér' (ID: 42524)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6447787284851074
    2. 'for' → logprob: -1.2697787284851074
    3. ' in' → logprob: -2.1447787284851074
    4. ' range' → logprob: -2.7697787284851074
    5. 'range' → logprob: -4.769778728485107
    6. ' ' → logprob: -6.644778728485107
    7. 's' → logprob: -6.769778728485107
    8. 'in' → logprob: -7.144778728485107
    9. ' s' → logprob: -7.394778728485107
    10. ')' → logprob: -7.644778728485107

Token 296: 'ifie' (ID: 46409)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2309044450521469
    2. 'ifie' → logprob: -1.855904459953308
    3. 'erset' → logprob: -5.355904579162598
    4. 'if' → logprob: -5.355904579162598
    5. 'it' → logprob: -5.605904579162598
    6. 'ite' → logprob: -5.605904579162598
    7. 'ér' → logprob: -5.980904579162598
    8. 'ecute' → logprob: -5.980904579162598
    9. 'orit' → logprob: -5.980904579162598
    10. 'erit' → logprob: -6.105904579162598

Token 297: ' :
' (ID: 10039)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0085570812225342
    2. ' range' → logprob: -1.7585570812225342
    3. ' s' → logprob: -2.133557081222534
    4. ' subset' → logprob: -2.258557081222534
    5. ' if' → logprob: -2.508557081222534
    6. '   ' → logprob: -3.008557081222534
    7. '       ' → logprob: -3.508557081222534
    8. ' in' → logprob: -4.008557319641113
    9. 'range' → logprob: -4.008557319641113
    10. '    ' → logprob: -4.758557319641113

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034550249576568604
    2. ' for' → logprob: -3.534550189971924
    3. '   ' → logprob: -6.034550189971924
    4. 'for' → logprob: -7.534550189971924
    5. '        ' → logprob: -7.659550189971924
    6. '    ' → logprob: -7.909550189971924
    7. ' 
' → logprob: -7.909550189971924
    8. '        
' → logprob: -8.534550666809082
    9. '           ' → logprob: -9.284550666809082
    10. '      ' → logprob: -9.784550666809082

Token 299: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2530476152896881
    2. ' range' → logprob: -2.7530477046966553
    3. 'for' → logprob: -2.7530477046966553
    4. '       ' → logprob: -3.5030477046966553
    5. ' (' → logprob: -3.8780477046966553
    6. '1' → logprob: -4.253047466278076
    7. ' s' → logprob: -4.878047466278076
    8. 'range' → logprob: -5.128047466278076
    9. '   ' → logprob: -5.378047466278076
    10. '(' → logprob: -5.503047466278076

Token 300: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9242023825645447
    2. 'for' → logprob: -0.9242023825645447
    3. 'S' → logprob: -2.7992024421691895
    4. 's' → logprob: -2.9242024421691895
    5. ' S' → logprob: -3.6742024421691895
    6. 'subset' → logprob: -3.6742024421691895
    7. ' subset' → logprob: -4.2992024421691895
    8. ' s' → logprob: -4.6742024421691895
    9. '   ' → logprob: -5.0492024421691895
    10. 'mask' → logprob: -5.2992024421691895

Token 301: ' -' (ID: 533)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07422061264514923
    2. 'mask' → logprob: -3.699220657348633
    3. 'subset' → logprob: -3.824220657348633
    4. 's' → logprob: -4.199220657348633
    5. 'for' → logprob: -4.824220657348633
    6. ' S' → logprob: -7.074220657348633
    7. 'selected' → logprob: -8.199220657348633
    8. ' subset' → logprob: -8.449220657348633
    9. '   ' → logprob: -8.824220657348633
    10. ' for' → logprob: -9.449220657348633

Token 302: ' pour' (ID: 1930)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.91023188829422
    2. 'S' → logprob: -1.1602318286895752
    3. ' subset' → logprob: -2.035231828689575
    4. 's' → logprob: -2.410231828689575
    5. 'mask' → logprob: -3.285231828689575
    6. ' S' → logprob: -4.535232067108154
    7. ' s' → logprob: -4.910232067108154
    8. ' mask' → logprob: -5.910232067108154
    9. 'selected' → logprob: -6.285232067108154
    10. 'sub' → logprob: -7.410232067108154

Token 303: ' chaque' (ID: 21194)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.45896652340888977
    2. ' S' → logprob: -2.0839664936065674
    3. 's' → logprob: -2.2089664936065674
    4. 'subset' → logprob: -2.9589664936065674
    5. ' subset' → logprob: -3.4589664936065674
    6. ' s' → logprob: -3.5839664936065674
    7. 'mask' → logprob: -4.3339667320251465
    8. ' mask' → logprob: -4.9589667320251465
    9. 'sub' → logprob: -7.5839667320251465
    10. '   ' → logprob: -7.9589667320251465

Token 304: ' cours' (ID: 10138)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4636618196964264
    2. 'i' → logprob: -1.338661789894104
    3. ' course' → logprob: -2.5886619091033936
    4. 'course' → logprob: -3.9636619091033936
    5. 'cours' → logprob: -4.9636616706848145
    6. ' cours' → logprob: -5.5886616706848145
    7. ' subset' → logprob: -7.4636616706848145
    8. ')' → logprob: -7.5886616706848145
    9. 's' → logprob: -7.8386616706848145
    10. 'c' → logprob: -8.213662147521973

Token 305: ' i' (ID: 575)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04625747725367546
    2. ' s' → logprob: -3.921257495880127
    3. ' i' → logprob: -4.421257495880127
    4. ' selected' → logprob: -5.296257495880127
    5. 's' → logprob: -5.921257495880127
    6. 'in' → logprob: -6.796257495880127
    7. ',' → logprob: -7.046257495880127
    8. ' chosen' → logprob: -7.046257495880127
    9. 'selected' → logprob: -7.171257495880127
    10. ' dans' → logprob: -8.046257019042969

Token 306: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014874427579343319
    2. 'in' → logprob: -4.264874458312988
    3. ',' → logprob: -7.514874458312988
    4. ' ' → logprob: -9.764874458312988
    5. ' i' → logprob: -10.764874458312988
    6. ':' → logprob: -11.139874458312988
    7. 's' → logprob: -11.264874458312988
    8. ')' → logprob: -11.264874458312988
    9. ' :' → logprob: -11.639874458312988
    10. '   ' → logprob: -12.014874458312988

Token 307: ' S' (ID: 336)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018167732283473015
    2. ' range' → logprob: -4.018167495727539
    3. '   ' → logprob: -11.768167495727539
    4. ')' → logprob: -13.268167495727539
    5. '(range' → logprob: -13.393167495727539
    6. 'ans' → logprob: -13.518167495727539
    7. ' ' → logprob: -13.643167495727539
    8. 'S' → logprob: -14.268167495727539
    9. 'selected' → logprob: -14.518167495727539
    10. 'n' → logprob: -15.018167495727539

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5502129793167114
    2. ':' → logprob: -1.4252129793167114
    3. ' in' → logprob: -2.550212860107422
    4. '       ' → logprob: -2.800212860107422
    5. ':
' → logprob: -3.925212860107422
    6. ' :' → logprob: -4.925212860107422
    7. '   ' → logprob: -4.925212860107422
    8. ' ,' → logprob: -5.925212860107422
    9. ',
' → logprob: -6.425212860107422
    10. '           ' → logprob: -6.675212860107422

Token 309: ' prere' (ID: 55794)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0894569382071495
    2. 'if' → logprob: -3.2144570350646973
    3. '       ' → logprob: -3.5894570350646973
    4. '<|end|>' → logprob: -4.464457035064697
    5. ' for' → logprob: -6.464457035064697
    6. '           ' → logprob: -6.839457035064697
    7. ')' → logprob: -7.339457035064697
    8. ' ' → logprob: -7.589457035064697
    9. '        ' → logprob: -7.839457035064697
    10. '   ' → logprob: -7.839457035064697

Token 310: 'qs' (ID: 31847)
  Prédit: 'qs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.012083268724381924
    2. 's' → logprob: -5.012083053588867
    3. 'q' → logprob: -5.262083053588867
    4. 'req' → logprob: -10.137083053588867
    5. 'js' → logprob: -10.387083053588867
    6. 'fs' → logprob: -11.012083053588867
    7. ')' → logprob: -11.137083053588867
    8. 'cs' → logprob: -11.637083053588867
    9. '       ' → logprob: -11.762083053588867
    10. '   ' → logprob: -12.137083053588867

Token 311: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005062383599579334
    2. '[' → logprob: -6.755062580108643
    3. '[s' → logprob: -6.755062580108643
    4. '[S' → logprob: -7.005062580108643
    5. 'i' → logprob: -7.505062580108643
    6. ')' → logprob: -7.755062580108643
    7. 's' → logprob: -8.380062103271484
    8. 'if' → logprob: -9.255062103271484
    9. 'S' → logprob: -9.380062103271484
    10. ' i' → logprob: -9.755062103271484

Token 312: ']' (ID: 60)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.35802626609802246
    2. ' &' → logprob: -1.4830262660980225
    3. ']' → logprob: -2.7330262660980225
    4. ')' → logprob: -5.108026504516602
    5. '&s' → logprob: -7.608026504516602
    6. '&i' → logprob: -7.733026504516602
    7. ']&' → logprob: -7.733026504516602
    8. ')&' → logprob: -8.233026504516602
    9. '&amp' → logprob: -8.608026504516602
    10. ' ]' → logprob: -8.733026504516602

Token 313: ' subset' (ID: 58845)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.6991302967071533
    2. ' &' → logprob: -0.6991302967071533
    3. ')' → logprob: -5.574130058288574
    4. ' &=' → logprob: -7.699130058288574
    5. '   ' → logprob: -8.449130058288574
    6. '&s' → logprob: -8.574130058288574
    7. '<=' → logprob: -8.699130058288574
    8. ' ' → logprob: -8.824130058288574
    9. ' <=' → logprob: -8.824130058288574
    10. '==' → logprob: -8.824130058288574

Token 314: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.3411482572555542
    2. 's' → logprob: -2.0911483764648438
    3. ' &' → logprob: -2.2161483764648438
    4. '(S' → logprob: -2.5911483764648438
    5. ' S' → logprob: -2.7161483764648438
    6. ' (' → logprob: -2.9661483764648438
    7. ' ==' → logprob: -3.0911483764648438
    8. 'of' → logprob: -3.2161483764648438
    9. '==' → logprob: -3.4661483764648438
    10. ' if' → logprob: -3.8411483764648438

Token 315: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06444519013166428
    2. ' S' → logprob: -2.8144452571868896
    3. 's' → logprob: -6.0644450187683105
    4. ' s' → logprob: -9.564445495605469
    5. ')' → logprob: -10.689445495605469
    6. 'mask' → logprob: -11.439445495605469
    7. '<|end|>' → logprob: -11.564445495605469
    8. ' ' → logprob: -11.939445495605469
    9. '(S' → logprob: -11.939445495605469
    10. ' (' → logprob: -12.564445495605469

Token 316: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0720355287194252
    2. ':' → logprob: -3.572035551071167
    3. '   ' → logprob: -3.822035551071167
    4. '
' → logprob: -5.322035312652588
    5. ',' → logprob: -5.572035312652588
    6. ':
' → logprob: -6.197035312652588
    7. ' for' → logprob: -6.822035312652588
    8. '        
' → logprob: -6.822035312652588
    9. '<|end|>' → logprob: -7.197035312652588
    10. ' 
' → logprob: -7.322035312652588

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13114911317825317
    2. '   ' → logprob: -2.2561490535736084
    3. ' 
' → logprob: -5.8811492919921875
    4. '    
' → logprob: -6.1311492919921875
    5. ' for' → logprob: -6.1311492919921875
    6. '
' → logprob: -6.7561492919921875
    7. '        
' → logprob: -6.7561492919921875
    8. ')' → logprob: -6.8811492919921875
    9. '\n' → logprob: -7.0061492919921875
    10. '           ' → logprob: -7.1311492919921875

Token 318: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.563045084476471
    2. '
' → logprob: -1.3130450248718262
    3. '   ' → logprob: -2.313045024871826
    4. ' for' → logprob: -3.438045024871826
    5. 'for' → logprob: -4.313045024871826
    6. ' 
' → logprob: -5.813045024871826
    7. '    
' → logprob: -5.938045024871826
    8. ':' → logprob: -5.938045024871826
    9. '        
' → logprob: -6.438045024871826
    10. '           ' → logprob: -6.813045024871826

Token 319: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6837323904037476
    2. ' for' → logprob: -0.9337323904037476
    3. 'for' → logprob: -3.058732509613037
    4. '   ' → logprob: -3.058732509613037
    5. ' 
' → logprob: -6.058732509613037
    6. '
' → logprob: -6.558732509613037
    7. '\n' → logprob: -7.183732509613037
    8. '        
' → logprob: -7.183732509613037
    9. ' ' → logprob: -7.308732509613037
    10. ' \' → logprob: -8.058732032775879

Token 320: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24023723602294922
    2. ' for' → logprob: -1.6152372360229492
    3. '   ' → logprob: -5.365237236022949
    4. '       ' → logprob: -5.365237236022949
    5. ' ' → logprob: -6.490237236022949
    6. ')' → logprob: -6.990237236022949
    7. 'range' → logprob: -7.490237236022949
    8. ' range' → logprob: -7.615237236022949
    9. 'n' → logprob: -7.740237236022949
    10. 's' → logprob: -7.990237236022949

Token 321: ' somme' (ID: 64484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3191206455230713
    2. ' for' → logprob: -1.3191206455230713
    3. 'range' → logprob: -5.944120407104492
    4. ' range' → logprob: -6.069120407104492
    5. '   ' → logprob: -7.444120407104492
    6. '
' → logprob: -9.694120407104492
    7. ' ans' → logprob: -9.819120407104492
    8. '       ' → logprob: -9.944120407104492
    9. 'from' → logprob: -10.694120407104492
    10. ' ' → logprob: -10.694120407104492

Token 322: ' credits' (ID: 30198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9603633880615234
    2. ' =' → logprob: -1.0853633880615234
    3. 'credits' → logprob: -2.8353633880615234
    4. '=' → logprob: -3.5853633880615234
    5. '_subset' → logprob: -3.9603633880615234
    6. '       ' → logprob: -4.085363388061523
    7. ' des' → logprob: -4.085363388061523
    8. 'des' → logprob: -4.335363388061523
    9. ' crédits' → logprob: -4.335363388061523
    10. 'subset' → logprob: -4.835363388061523

Token 323: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4615660309791565
    2. '=' → logprob: -2.3365659713745117
    3. ' >=' → logprob: -2.4615659713745117
    4. 's' → logprob: -3.3365659713745117
    5. ')' → logprob: -3.5865659713745117
    6. '>=' → logprob: -3.9615659713745117
    7. '   ' → logprob: -4.336565971374512
    8. '(S' → logprob: -4.836565971374512
    9. ',' → logprob: -5.086565971374512
    10. 'for' → logprob: -5.336565971374512

Token 324: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.057585615664720535
    2. ' S' → logprob: -3.0575857162475586
    3. 'ans' → logprob: -6.432585716247559
    4. 'range' → logprob: -6.432585716247559
    5. '   ' → logprob: -6.807585716247559
    6. ' range' → logprob: -6.932585716247559
    7. ' ans' → logprob: -6.932585716247559
    8. 's' → logprob: -7.057585716247559
    9. ')' → logprob: -7.932585716247559
    10. ' la' → logprob: -8.057585716247559

Token 325: ' >=' (ID: 5064)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5085326433181763
    2. '       ' → logprob: -1.8835326433181763
    3. '   ' → logprob: -2.0085325241088867
    4. ' for' → logprob: -2.7585325241088867
    5. 'for' → logprob: -3.5085325241088867
    6. '    
' → logprob: -5.633532524108887
    7. ' 
' → logprob: -5.758532524108887
    8. '  
' → logprob: -6.133532524108887
    9. '\n' → logprob: -6.383532524108887
    10. ',
' → logprob: -6.633532524108887

Token 326: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.3870473802089691
    2. ' U' → logprob: -1.1370474100112915
    3. ' ' → logprob: -9.38704776763916
    4. ' ' → logprob: -10.13704776763916
    5. '   ' → logprob: -11.26204776763916
    6. ')' → logprob: -12.26204776763916
    7. '	U' → logprob: -12.26204776763916
    8. '    ' → logprob: -12.51204776763916
    9. '  ' → logprob: -12.63704776763916
    10. '0' → logprob: -12.82454776763916

Token 327: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07501794397830963
    2. '   ' → logprob: -2.9500179290771484
    3. '       ' → logprob: -4.950017929077148
    4. '\n' → logprob: -5.450017929077148
    5. '    
' → logprob: -5.575017929077148
    6. '  
' → logprob: -6.325017929077148
    7. ' 
' → logprob: -6.825017929077148
    8. ' for' → logprob: -7.325017929077148
    9. 'for' → logprob: -8.325017929077148
    10. '        
' → logprob: -8.450017929077148

Token 328: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.811154305934906
    2. '   ' → logprob: -0.936154305934906
    3. '       ' → logprob: -2.061154365539551
    4. '    
' → logprob: -4.186154365539551
    5. '\n' → logprob: -5.311154365539551
    6. '  
' → logprob: -5.436154365539551
    7. ' for' → logprob: -5.436154365539551
    8. ' 
' → logprob: -5.811154365539551
    9. '        
' → logprob: -6.436154365539551
    10. 'for' → logprob: -7.186154365539551

Token 329: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5552711486816406
    2. '   ' → logprob: -1.4302711486816406
    3. ' for' → logprob: -2.4302711486816406
    4. '       ' → logprob: -2.9302711486816406
    5. 'for' → logprob: -3.9302711486816406
    6. '    
' → logprob: -4.305271148681641
    7. ' 
' → logprob: -5.305271148681641
    8. '  
' → logprob: -5.930271148681641
    9. '\n' → logprob: -6.680271148681641
    10. '        
' → logprob: -6.680271148681641

Token 330: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014508172869682312
    2. ' for' → logprob: -4.389508247375488
    3. '   ' → logprob: -6.389508247375488
    4. '       ' → logprob: -8.264508247375488
    5. '
' → logprob: -9.889508247375488
    6. 'from' → logprob: -12.264508247375488
    7. ' 
' → logprob: -14.014508247375488
    8. '    
' → logprob: -14.014508247375488
    9. '        
' → logprob: -14.389508247375488
    10. ' ' → logprob: -14.639508247375488

Token 331: ' cherche' (ID: 52345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08952735364437103
    2. ' for' → logprob: -2.4645273685455322
    3. 'or' → logprob: -8.589527130126953
    4. '   ' → logprob: -8.839527130126953
    5. '       ' → logprob: -9.714527130126953
    6. ' ' → logprob: -9.839527130126953
    7. ' =' → logprob: -10.339527130126953
    8. '=' → logprob: -10.464527130126953
    9. ')' → logprob: -11.214527130126953
    10. '
' → logprob: -11.464527130126953

Token 332: ' la' (ID: 557)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22752435505390167
    2. 'for' → logprob: -1.7275243997573853
    3. '   ' → logprob: -4.977524280548096
    4. ' la' → logprob: -4.977524280548096
    5. ' ans' → logprob: -5.977524280548096
    6. 'range' → logprob: -7.102524280548096
    7. ' the' → logprob: -7.227524280548096
    8. ')' → logprob: -7.352524280548096
    9. 'def' → logprob: -7.477524280548096
    10. ' s' → logprob: -7.727524280548096

Token 333: ' taille' (ID: 41644)
  Prédit: ' subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.6736504435539246
    2. 'subset' → logprob: -1.9236505031585693
    3. 'min' → logprob: -2.5486505031585693
    4. ' minimal' → logprob: -3.1736505031585693
    5. 'for' → logprob: -3.1736505031585693
    6. ' for' → logprob: -3.6736505031585693
    7. ' minimum' → logprob: -3.7986505031585693
    8. 'minimum' → logprob: -3.7986505031585693
    9. 's' → logprob: -3.9236505031585693
    10. ' min' → logprob: -4.67365026473999

Token 334: ' minimale' (ID: 143217)
  Prédit: ' minimale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.9513832926750183
    2. '(' → logprob: -2.201383352279663
    3. '   ' → logprob: -2.201383352279663
    4. '(s' → logprob: -2.701383352279663
    5. 'min' → logprob: -2.826383352279663
    6. ' de' → logprob: -2.826383352279663
    7. ' minimal' → logprob: -3.701383352279663
    8. ' of' → logprob: -4.076383113861084
    9. ' du' → logprob: -4.076383113861084
    10. ' for' → logprob: -4.326383113861084

Token 335: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10923774540424347
    2. ' for' → logprob: -2.8592376708984375
    3. ' 
' → logprob: -3.7342376708984375
    4. '\n' → logprob: -4.6092376708984375
    5. '   ' → logprob: -5.4842376708984375
    6. 'for' → logprob: -5.8592376708984375
    7. '  
' → logprob: -6.3592376708984375
    8. '    
' → logprob: -7.2342376708984375
    9. '\' → logprob: -7.2342376708984375
    10. '       ' → logprob: -7.7342376708984375

Token 336: ' S' (ID: 336)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9748863577842712
    2. 'subset' → logprob: -1.099886417388916
    3. 'bin' → logprob: -1.974886417388916
    4. ' range' → logprob: -3.099886417388916
    5. 'S' → logprob: -3.224886417388916
    6. ' subset' → logprob: -3.849886417388916
    7. 'ans' → logprob: -4.224886417388916
    8. 's' → logprob: -4.224886417388916
    9. 'selected' → logprob: -5.974886417388916
    10. 'min' → logprob: -6.224886417388916

Token 337: ' qui' (ID: 2780)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18806327879428864
    2. '   ' → logprob: -2.188063383102417
    3. ' for' → logprob: -3.063063383102417
    4. 'for' → logprob: -5.438063144683838
    5. '       ' → logprob: -6.188063144683838
    6. '    
' → logprob: -6.313063144683838
    7. ' 
' → logprob: -6.563063144683838
    8. '  
' → logprob: -6.813063144683838
    9. '\n' → logprob: -7.563063144683838
    10. ' ' → logprob: -8.438063621520996

Token 338: ' satisfait' (ID: 174890)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26598528027534485
    2. ' satisfait' → logprob: -2.7659852504730225
    3. ' couvre' → logprob: -3.0159852504730225
    4. '   ' → logprob: -3.3909852504730225
    5. 'cover' → logprob: -4.140985488891602
    6. ' cover' → logprob: -4.640985488891602
    7. 'ach' → logprob: -5.265985488891602
    8. ' covers' → logprob: -5.265985488891602
    9. 'min' → logprob: -5.390985488891602
    10. 'covers' → logprob: -5.640985488891602

Token 339: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04898121580481529
    2. 'for' → logprob: -3.298981189727783
    3. ' range' → logprob: -5.048981189727783
    4. '   ' → logprob: -6.548981189727783
    5. ' ' → logprob: -7.298981189727783
    6. '       ' → logprob: -7.548981189727783
    7. 'range' → logprob: -7.673981189727783
    8. ' ans' → logprob: -8.548981666564941
    9. '    ' → logprob: -8.673981666564941
    10. ')' → logprob: -9.173981666564941

Token 340: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05518341809511185
    2. '   ' → logprob: -3.3051834106445312
    3. ' for' → logprob: -4.680183410644531
    4. '\n' → logprob: -5.805183410644531
    5. ' 
' → logprob: -6.055183410644531
    6. '    
' → logprob: -7.055183410644531
    7. 'for' → logprob: -7.930183410644531
    8. '       ' → logprob: -8.055183410644531
    9. '  
' → logprob: -8.055183410644531
    10. '\' → logprob: -8.555183410644531

Token 341: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30832725763320923
    2. 'for' (adapté à ' for') → logprob: -1.8083271980285645
    3. '
' → logprob: -2.8083271980285645
    4. '   ' → logprob: -3.3083271980285645
    5. '       ' → logprob: -6.1833271980285645
    6. ' 
' → logprob: -6.6833271980285645
    7. '    
' → logprob: -7.6833271980285645
    8. '\n' → logprob: -8.433327674865723
    9. '  
' → logprob: -8.558327674865723
    10. ' ' → logprob: -9.183327674865723

Token 342: ' subset' (ID: 58845)
  Prédit: ' subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subset' → logprob: -1.1280450820922852
    2. 'S' → logprob: -1.5030450820922852
    3. 'subset' → logprob: -1.6280450820922852
    4. ' mask' → logprob: -2.253045082092285
    5. 'mask' → logprob: -2.503045082092285
    6. 's' → logprob: -3.503045082092285
    7. ' S' → logprob: -3.503045082092285
    8. ' s' → logprob: -4.753045082092285
    9. 'selected' → logprob: -8.628045082092285
    10. ' state' → logprob: -8.878045082092285

Token 343: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00979162473231554
    2. 'in' → logprob: -4.634791851043701
    3. ' ' → logprob: -11.259791374206543
    4. 's' → logprob: -11.384791374206543
    5. '  ' → logprob: -13.134791374206543
    6. '   ' → logprob: -13.384791374206543
    7. '	in' → logprob: -13.759791374206543
    8. 'In' → logprob: -13.884791374206543
    9. '_' → logprob: -14.134791374206543
    10. ',' → logprob: -14.134791374206543

Token 344: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '(range' → logprob: -18.37520408630371
    4. '	range' → logprob: -21.12520408630371
    5. ' ' → logprob: -22.62520408630371
    6. '   ' → logprob: -23.00020408630371
    7. '1' → logprob: -24.12520408630371
    8. 'rang' → logprob: -24.25020408630371
    9. '```' → logprob: -24.25020408630371
    10. '  ' → logprob: -24.37520408630371

Token 345: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.000000953674316
    3. '((' → logprob: -16.875
    4. ' (' → logprob: -17.625
    5. '   ' → logprob: -19.0
    6. '(
' → logprob: -19.25
    7. ' ' → logprob: -19.5
    8. '```' → logprob: -19.5
    9. '	' → logprob: -22.25
    10. ',' → logprob: -22.25

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004901225329376757
    2. '(' → logprob: -7.625490188598633
    3. '   ' → logprob: -13.500490188598633
    4. ' ' → logprob: -14.375490188598633
    5. '```' → logprob: -17.500490188598633
    6. '0' → logprob: -18.125490188598633
    7. ')' → logprob: -18.250490188598633
    8. ' (' → logprob: -18.375490188598633
    9. '{' → logprob: -18.875490188598633
    10. '2' → logprob: -18.875490188598633

Token 347: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.5994690656661987
    2. ',' → logprob: -0.9744690656661987
    3. ' <<' → logprob: -2.7244691848754883
    4. ' ,' → logprob: -4.849469184875488
    5. '1' → logprob: -10.349469184875488
    6. '<<(' → logprob: -10.724469184875488
    7. ',n' → logprob: -11.224469184875488
    8. ' ' → logprob: -11.724469184875488
    9. '   ' → logprob: -11.724469184875488
    10. ',
' → logprob: -13.974469184875488

Token 348: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011045700375689194
    2. ' n' → logprob: -9.125110626220703
    3. '   ' → logprob: -13.625110626220703
    4. ')n' → logprob: -16.000110626220703
    5. '	n' → logprob: -16.500110626220703
    6. '```' → logprob: -17.500110626220703
    7. ')' → logprob: -17.625110626220703
    8. ' ' → logprob: -17.750110626220703
    9. '       ' → logprob: -18.250110626220703
    10. '
' → logprob: -18.375110626220703

Token 349: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017318216850981116
    2. '):
' → logprob: -6.376731872558594
    3. ' ):' → logprob: -11.001731872558594
    4. ')' → logprob: -11.876731872558594
    5. '):
' → logprob: -12.876731872558594
    6. ':' → logprob: -13.376731872558594
    7. '       ' → logprob: -14.126731872558594
    8. '   ' → logprob: -15.126731872558594
    9. '):

' → logprob: -15.126731872558594
    10. '():' → logprob: -16.376731872558594

Token 350: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32600146532058716
    2. ':' → logprob: -2.0760014057159424
    3. '           ' → logprob: -2.3260014057159424
    4. ':
' → logprob: -4.2010016441345215
    5. '   ' → logprob: -4.4510016441345215
    6. '<|end|>' → logprob: -4.7010016441345215
    7. ' if' → logprob: -5.0760016441345215
    8. '
' → logprob: -5.8260016441345215
    9. '        
' → logprob: -6.4510016441345215
    10. ' :' → logprob: -6.4510016441345215

Token 351: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.6905565857887268
    2. '           ' → logprob: -1.440556526184082
    3. 'sum' → logprob: -2.315556526184082
    4. 'if' → logprob: -3.440556526184082
    5. 'credits' → logprob: -3.440556526184082
    6. 'count' → logprob: -3.690556526184082
    7. 'selected' → logprob: -3.690556526184082
    8. ' total' → logprob: -4.315556526184082
    9. 'current' → logprob: -5.315556526184082
    10. 'size' → logprob: -5.315556526184082

Token 352: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0033349180594086647
    2. '_credit' → logprob: -6.003334999084473
    3. ' _' → logprob: -7.628334999084473
    4. '_cr' → logprob: -8.503334999084473
    5. ' =' → logprob: -9.128334999084473
    6. 'credits' → logprob: -10.878334999084473
    7. '=' → logprob: -12.003334999084473
    8. '=_' → logprob: -12.128334999084473
    9. '_sum' → logprob: -12.253334999084473
    10. 'Credits' → logprob: -12.378334999084473

Token 353: 'credits' (ID: 92810)
  Prédit: 'credits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'credits' → logprob: -0.000192812061868608
    2. 'credit' → logprob: -8.625192642211914
    3. '=' → logprob: -12.125192642211914
    4. ' credits' → logprob: -13.375192642211914
    5. 'cred' → logprob: -14.000192642211914
    6. 'c' → logprob: -14.000192642211914
    7. 'sum' → logprob: -14.000192642211914
    8. ' =' → logprob: -14.250192642211914
    9. 'size' → logprob: -14.250192642211914
    10. 'cre' → logprob: -14.625192642211914

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759397745132446
    2. '=' → logprob: -0.8259397745132446
    3. ',' → logprob: -15.450940132141113
    4. ' ' → logprob: -16.200939178466797
    5. ' +=' → logprob: -18.450939178466797
    6. '=sum' → logprob: -18.950939178466797
    7. '   ' → logprob: -19.200939178466797
    8. '+=' → logprob: -19.200939178466797
    9. '  ' → logprob: -19.200939178466797
    10. ')' → logprob: -20.075939178466797

Token 355: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. 'sum' → logprob: -15.250261306762695
    4. '   ' → logprob: -16.000261306762695
    5. '  ' → logprob: -17.875261306762695
    6. '000' → logprob: -18.375261306762695
    7. ' sum' → logprob: -19.437761306762695
    8. '00' → logprob: -19.437761306762695
    9. '۰' → logprob: -19.625261306762695
    10. '    ' → logprob: -19.625261306762695

Token 356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.500012397766113
    3. 'sum' → logprob: -13.250012397766113
    4. '   ' → logprob: -16.750011444091797
    5. '000' → logprob: -17.500011444091797
    6. 's' → logprob: -18.562511444091797
    7. '00' → logprob: -18.875011444091797
    8. '۰' → logprob: -18.937511444091797
    9. '=' → logprob: -19.000011444091797
    10. '  ' → logprob: -19.312511444091797

Token 357: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03885893523693085
    2. ' for' → logprob: -5.038858890533447
    3. ' valid' → logprob: -5.038858890533447
    4. '<|end|>' → logprob: -5.163858890533447
    5. ' subset' → logprob: -5.788858890533447
    6. ' count' → logprob: -5.913858890533447
    7. 'count' → logprob: -6.038858890533447
    8. ' ' → logprob: -6.163858890533447
    9. ' if' → logprob: -6.288858890533447
    10. '   ' → logprob: -6.413858890533447

Token 359: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' (adapté à ' valid') → logprob: -0.001639354508370161
    2. 'selected' → logprob: -7.501639366149902
    3. ' valid' → logprob: -8.251639366149902
    4. 'is' → logprob: -8.501639366149902
    5. 'subset' → logprob: -9.001639366149902
    6. 'size' → logprob: -9.251639366149902
    7. 'ok' → logprob: -9.251639366149902
    8. 'for' → logprob: -9.376639366149902
    9. '           ' → logprob: -10.126639366149902
    10. 'possible' → logprob: -10.501639366149902

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023368701338768005
    2. '=' → logprob: -3.7733685970306396
    3. '_subset' → logprob: -10.148368835449219
    4. ' ' → logprob: -10.398368835449219
    5. 'subset' → logprob: -10.898368835449219
    6. '_' → logprob: -11.023368835449219
    7. ',' → logprob: -12.273368835449219
    8. ')' → logprob: -13.148368835449219
    9. '=True' → logprob: -13.273368835449219
    10. '<|end|>' → logprob: -13.398368835449219

Token 361: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.002481842413544655
    2. ' True' → logprob: -6.002481937408447
    3. '   ' → logprob: -12.002481460571289
    4. '       ' → logprob: -17.87748146057129
    5. '(True' → logprob: -17.87748146057129
    6. '           ' → logprob: -19.25248146057129
    7. '=True' → logprob: -19.50248146057129
    8. '    ' → logprob: -20.00248146057129
    9. ' ' → logprob: -20.00248146057129
    10. 'true' → logprob: -20.25248146057129

Token 362: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049037061631679535
    2. '
' → logprob: -4.174036979675293
    3. '<|end|>' → logprob: -4.299036979675293
    4. ' for' → logprob: -4.549036979675293
    5. '            
' → logprob: -6.174036979675293
    6. 'for' → logprob: -6.924036979675293
    7. '   ' → logprob: -6.924036979675293
    8. ' 
' → logprob: -7.049036979675293
    9. '       ' → logprob: -7.174036979675293
    10. ' ' → logprob: -7.549036979675293

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06016307324171066
    2. '
' → logprob: -3.6851630210876465
    3. ' 
' → logprob: -4.1851630210876465
    4. ' for' → logprob: -4.8101630210876465
    5. '            
' → logprob: -5.3101630210876465
    6. '<|end|>' → logprob: -6.3101630210876465
    7. '  
' → logprob: -6.8101630210876465
    8. '    
' → logprob: -7.4351630210876465
    9. ' ' → logprob: -8.435163497924805
    10. '   ' → logprob: -8.560163497924805

Token 364: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47839871048927307
    2. 'for' (adapté à ' for') → logprob: -1.6033986806869507
    3. '           ' → logprob: -1.7283986806869507
    4. '   ' → logprob: -8.103398323059082
    5. 'selected' → logprob: -8.478398323059082
    6. '
' → logprob: -8.978398323059082
    7. ' ' → logprob: -9.103398323059082
    8. 'count' → logprob: -9.353398323059082
    9. ' selected' → logprob: -9.353398323059082
    10. 'mask' → logprob: -9.478398323059082

Token 365: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016436543315649033
    2. ' i' → logprob: -4.141436576843262
    3. 'course' → logprob: -8.141436576843262
    4. 'j' → logprob: -9.391436576843262
    5. ' course' → logprob: -11.266436576843262
    6. '   ' → logprob: -12.391436576843262
    7. ' j' → logprob: -12.391436576843262
    8. ' ' → logprob: -12.891436576843262
    9. '	i' → logprob: -14.016436576843262
    10. 'c' → logprob: -14.516436576843262

Token 366: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026313764974474907
    2. 'in' → logprob: -3.6513137817382812
    3. '	in' → logprob: -12.026313781738281
    4. ' ' → logprob: -12.276313781738281
    5. '<|end|>' → logprob: -14.151313781738281
    6. '  ' → logprob: -14.526313781738281
    7. '   ' → logprob: -14.776313781738281
    8. '    ' → logprob: -15.401313781738281
    9. '_in' → logprob: -16.15131378173828
    10. ')' → logprob: -16.15131378173828

Token 367: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38688457012176514
    2. ' range' → logprob: -1.1368845701217651
    3. ' ' → logprob: -12.136884689331055
    4. '   ' → logprob: -12.511884689331055
    5. '	range' → logprob: -13.386884689331055
    6. '(range' → logprob: -13.761884689331055
    7. ')' → logprob: -14.261884689331055
    8. '  ' → logprob: -14.761884689331055
    9. 'n' → logprob: -15.261884689331055
    10. '    ' → logprob: -15.761884689331055

Token 368: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011116202920675278
    2. '(n' → logprob: -4.511116027832031
    3. ' n' → logprob: -10.011116027832031
    4. '   ' → logprob: -11.511116027832031
    5. '	n' → logprob: -12.511116027832031
    6. '           ' → logprob: -12.761116027832031
    7. ')n' → logprob: -13.261116027832031
    8. '(' → logprob: -13.386116027832031
    9. '       ' → logprob: -13.636116027832031
    10. ')' → logprob: -14.386116027832031

Token 369: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18052326142787933
    2. '):' → logprob: -1.8055232763290405
    3. ')' → logprob: -7.68052339553833
    4. '):
' → logprob: -8.930522918701172
    5. '):

' → logprob: -10.180522918701172
    6. '           ' → logprob: -10.180522918701172
    7. ' ):
' → logprob: -10.430522918701172
    8. '       ' → logprob: -10.555522918701172
    9. ' ):' → logprob: -11.055522918701172
    10. '   ' → logprob: -11.805522918701172

Token 370: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7232685685157776
    2. '           ' → logprob: -1.0982685089111328
    3. '<|end|>' → logprob: -1.9732685089111328
    4. ' if' → logprob: -3.723268508911133
    5. ':' → logprob: -5.348268508911133
    6. ' ' → logprob: -5.723268508911133
    7. '            ' → logprob: -6.223268508911133
    8. '       ' → logprob: -6.348268508911133
    9. ' 
' → logprob: -6.848268508911133
    10. '<|end|>' → logprob: -6.848268508911133

Token 371: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3592468500137329
    2. ' if' → logprob: -1.484246850013733
    3. 'if' (adapté à ' if') → logprob: -2.7342467308044434
    4. ' ' → logprob: -5.484246730804443
    5. '<|end|>' → logprob: -5.734246730804443
    6. '           ' → logprob: -6.734246730804443
    7. '                               ' → logprob: -8.234247207641602
    8. '                ' → logprob: -8.484247207641602
    9. '                       ' → logprob: -8.984247207641602
    10. '	           ' → logprob: -9.109247207641602

Token 372: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6842592358589172
    2. ' subset' → logprob: -1.1842591762542725
    3. '(sub' → logprob: -1.9342591762542725
    4. 'subset' → logprob: -3.1842591762542725
    5. ' ' → logprob: -5.809259414672852
    6. '   ' → logprob: -8.934259414672852
    7. '  ' → logprob: -8.934259414672852
    8. ' ((' → logprob: -8.934259414672852
    9. '((' → logprob: -9.809259414672852
    10. '(' → logprob: -10.184259414672852

Token 373: 'subset' (ID: 163297)
  Prédit: 'subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.0067909169010818005
    2. ' subset' → logprob: -5.006791114807129
    3. '(sub' → logprob: -10.131791114807129
    4. '   ' → logprob: -11.881791114807129
    5. ' (' → logprob: -11.881791114807129
    6. 'substring' → logprob: -12.131791114807129
    7. ' ' → logprob: -12.506791114807129
    8. ')' → logprob: -12.881791114807129
    9. '_subset' → logprob: -12.881791114807129
    10. '           ' → logprob: -13.256791114807129

Token 374: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.08083333820104599
    2. '>>' → logprob: -2.9558334350585938
    3. '&' → logprob: -3.8308334350585938
    4. ' >>' → logprob: -6.205833435058594
    5. ')' → logprob: -6.330833435058594
    6. ')&' → logprob: -9.830833435058594
    7. ' ' → logprob: -10.705833435058594
    8. ' )' → logprob: -10.830833435058594
    9. '   ' → logprob: -11.455833435058594
    10. '&gt' → logprob: -12.080833435058594

Token 375: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5759490728378296
    2. '(' → logprob: -0.8259490728378296
    3. ')' → logprob: -11.575948715209961
    4. ' ' → logprob: -16.45094871520996
    5. '   ' → logprob: -17.07594871520996
    6. ')(' → logprob: -17.32594871520996
    7. '1' → logprob: -17.45094871520996
    8. ',' → logprob: -17.57594871520996
    9. '               ' → logprob: -17.95094871520996
    10. '
' → logprob: -17.95094871520996

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20160697400569916
    2. '(' → logprob: -1.7016069889068604
    3. ' (' → logprob: -8.576606750488281
    4. ' ' → logprob: -12.326606750488281
    5. ')' → logprob: -14.451606750488281
    6. '   ' → logprob: -16.45160675048828
    7. '           ' → logprob: -16.95160675048828
    8. '               ' → logprob: -17.57660675048828
    9. '{' → logprob: -17.82660675048828
    10. '```' → logprob: -17.95160675048828

Token 377: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.07001524418592453
    2. ' <<' → logprob: -2.6950151920318604
    3. '>>' → logprob: -9.945014953613281
    4. '<' → logprob: -11.445014953613281
    5. '1' → logprob: -12.320014953613281
    6. '   ' → logprob: -12.570014953613281
    7. '           ' → logprob: -12.945014953613281
    8. ' ' → logprob: -13.195014953613281
    9. '               ' → logprob: -13.570014953613281
    10. '<<<' → logprob: -13.695014953613281

Token 378: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.876193169271573e-05
    2. ' i' → logprob: -9.375088691711426
    3. '   ' → logprob: -13.000088691711426
    4. ')' → logprob: -14.375088691711426
    5. ' ' → logprob: -15.125088691711426
    6. '```' → logprob: -15.750088691711426
    7. '       ' → logprob: -15.875088691711426
    8. '
' → logprob: -16.000089645385742
    9. ')i' → logprob: -16.250089645385742
    10. '	i' → logprob: -16.500089645385742

Token 379: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.198043699143454e-05
    2. ')):' → logprob: -9.625091552734375
    3. ')):
' → logprob: -10.875091552734375
    4. ')' → logprob: -12.250091552734375
    5. ' ))' → logprob: -13.250091552734375
    6. ')):
' → logprob: -16.125091552734375
    7. '   ' → logprob: -16.875091552734375
    8. ':' → logprob: -17.000091552734375
    9. ' ' → logprob: -17.000091552734375
    10. ')))' → logprob: -17.250091552734375

Token 380: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14601115882396698
    2. ')==' → logprob: -2.3960111141204834
    3. '==' → logprob: -3.1460111141204834
    4. ' ==' → logprob: -7.2710113525390625
    5. ')!=' → logprob: -7.2710113525390625
    6. '!=' → logprob: -9.021011352539062
    7. '):
' → logprob: -9.396011352539062
    8. '):' → logprob: -9.396011352539062
    9. ':' → logprob: -10.896011352539062
    10. '0' → logprob: -11.521011352539062

Token 381: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '۰' → logprob: -20.125553131103516
    4. '   ' → logprob: -20.625553131103516
    5. ' ' → logprob: -20.750553131103516
    6. '０' → logprob: -21.250553131103516
    7. '00' → logprob: -21.375553131103516
    8. '	' → logprob: -21.500553131103516
    9. '                   ' → logprob: -22.250553131103516
    10. '  ' → logprob: -22.625553131103516

Token 382: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.750015258789062
    4. '00' → logprob: -19.875015258789062
    5. '۰' → logprob: -20.375015258789062
    6. '０' → logprob: -21.000015258789062
    7. '	' → logprob: -21.125015258789062
    8. '  ' → logprob: -21.625015258789062
    9. '  ' → logprob: -21.750015258789062
    10. '```' → logprob: -21.750015258789062

Token 383: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5803303122520447
    2. ':' → logprob: -0.8303303122520447
    3. '):
' → logprob: -5.7053303718566895
    4. '):' → logprob: -7.9553303718566895
    5. '                   ' → logprob: -8.080329895019531
    6. '               ' → logprob: -8.580329895019531
    7. ' and' → logprob: -9.705329895019531
    8. ')' → logprob: -10.205329895019531
    9. ':

' → logprob: -10.330329895019531
    10. '           ' → logprob: -11.080329895019531

Token 384: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1307118833065033
    2. '               ' → logprob: -2.630711793899536
    3. '
' → logprob: -4.755712032318115
    4. ' 
' → logprob: -4.880712032318115
    5. '                    
' → logprob: -4.880712032318115
    6. ' ' → logprob: -5.005712032318115
    7. ' total' → logprob: -5.130712032318115
    8. '           ' → logprob: -5.380712032318115
    9. '                ' → logprob: -6.255712032318115
    10. '                
' → logprob: -7.130712032318115

Token 385: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.45523348450660706
    2. 'if' → logprob: -1.4552334547042847
    3. ' total' → logprob: -2.455233573913574
    4. ' if' → logprob: -3.455233573913574
    5. '                   ' → logprob: -4.705233573913574
    6. '               ' → logprob: -5.705233573913574
    7. '#' (adapté à ' #') → logprob: -6.330233573913574
    8. '           ' → logprob: -7.955233573913574
    9. ' #' → logprob: -8.580233573913574
    10. '   ' → logprob: -9.080233573913574

Token 386: ' Le' (ID: 2018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01442733034491539
    2. '#' → logprob: -5.014427185058594
    3. 'total' → logprob: -5.514427185058594
    4. ' if' → logprob: -6.514427185058594
    5. '                   ' → logprob: -6.514427185058594
    6. '           ' → logprob: -7.764427185058594
    7. '               ' → logprob: -8.639427185058594
    8. 'If' → logprob: -10.514427185058594
    9. ' total' → logprob: -10.889427185058594
    10. ' #' → logprob: -11.139427185058594

Token 387: ' cours' (ID: 10138)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30251720547676086
    2. 'pr' → logprob: -2.5525171756744385
    3. ' if' → logprob: -2.6775171756744385
    4. 'total' → logprob: -3.3025171756744385
    5. '               ' → logprob: -4.052517414093018
    6. '           ' → logprob: -4.052517414093018
    7. ' total' → logprob: -4.427517414093018
    8. 'credits' → logprob: -4.552517414093018
    9. '                   ' → logprob: -5.552517414093018
    10. 'subset' → logprob: -5.677517414093018

Token 388: ' i' (ID: 575)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -1.0967048406600952
    2. 'i' → logprob: -1.3467048406600952
    3. ' est' → logprob: -2.3467049598693848
    4. ' i' → logprob: -2.5967049598693848
    5. 'est' → logprob: -3.2217049598693848
    6. 's' → logprob: -3.2217049598693848
    7. 'n' → logprob: -3.2217049598693848
    8. ' n' → logprob: -3.7217049598693848
    9. ' doit' → logprob: -3.7217049598693848
    10. 'a' → logprob: -4.596704959869385

Token 389: ' est' (ID: 893)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.436537265777588
    2. '               ' → logprob: -1.686537265777588
    3. '           ' → logprob: -2.561537265777588
    4. 'n' → logprob: -2.686537265777588
    5. ' n' → logprob: -3.311537265777588
    6. 'if' → logprob: -3.311537265777588
    7. 's' → logprob: -3.311537265777588
    8. 'continue' → logprob: -3.311537265777588
    9. '#' → logprob: -3.561537265777588
    10. ')' → logprob: -3.811537265777588

Token 390: ' choisi' (ID: 77245)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cho' → logprob: -1.2877711057662964
    2. 'dans' → logprob: -1.2877711057662964
    3. 'sé' → logprob: -1.9127711057662964
    4. 'in' → logprob: -1.9127711057662964
    5. 'pris' → logprob: -2.412771224975586
    6. 'prés' → logprob: -3.912771224975586
    7. ' choisi' → logprob: -4.287771224975586
    8. 'selection' → logprob: -4.287771224975586
    9. 'incl' → logprob: -5.537771224975586
    10. 's' → logprob: -6.162771224975586

Token 391: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6657530665397644
    2. '                   ' → logprob: -0.7907530665397644
    3. '                    
' → logprob: -4.04075288772583
    4. '               ' → logprob: -5.04075288772583
    5. '<|end|>' → logprob: -6.16575288772583
    6. '           ' → logprob: -6.91575288772583
    7. ',' → logprob: -7.04075288772583
    8. ' 
' → logprob: -7.66575288772583
    9. '  
' → logprob: -7.79075288772583
    10. '       ' → logprob: -7.79075288772583

Token 392: ' vérifier' (ID: 93671)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7184523344039917
    2. '                   ' → logprob: -0.8434523344039917
    3. 'if' → logprob: -2.5934524536132812
    4. '               ' → logprob: -5.718452453613281
    5. ' total' → logprob: -6.093452453613281
    6. 'total' → logprob: -7.468452453613281
    7. '                    
' → logprob: -7.593452453613281
    8. '           ' → logprob: -8.218452453613281
    9. ' for' → logprob: -8.718452453613281
    10. '#' → logprob: -8.843452453613281

Token 393: ' pré' (ID: 9424)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5928504467010498
    2. 'if' → logprob: -1.3428504467010498
    3. '(pr' → logprob: -2.71785044670105
    4. '                   ' → logprob: -2.84285044670105
    5. '               ' → logprob: -3.59285044670105
    6. 'pr' → logprob: -4.467850685119629
    7. '           ' → logprob: -4.717850685119629
    8. ' si' → logprob: -5.092850685119629
    9. ' que' → logprob: -5.967850685119629
    10. '   ' → logprob: -6.967850685119629

Token 394: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.05144115909934044
    2. 'req' → logprob: -3.051441192626953
    3. ' requis' → logprob: -6.551441192626953
    4. 'quis' → logprob: -7.301441192626953
    5. 'requ' → logprob: -7.551441192626953
    6. 'refs' → logprob: -10.301441192626953
    7. 'requirements' → logprob: -10.301441192626953
    8. '   ' → logprob: -10.801441192626953
    9. '_re' → logprob: -11.051441192626953
    10. 'r' → logprob: -11.176441192626953

Token 395: 'quis' (ID: 9867)
  Prédit: 'quis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quis' → logprob: -0.0008581006550230086
    2. 'quisites' → logprob: -8.250858306884766
    3. 'qs' → logprob: -8.375858306884766
    4. 'q' → logprob: -9.375858306884766
    5. 'qus' → logprob: -9.750858306884766
    6. 'quisitos' → logprob: -9.875858306884766
    7. 'qu' → logprob: -10.375858306884766
    8. ' requis' → logprob: -10.875858306884766
    9. 'quisite' → logprob: -11.000858306884766
    10. '   ' → logprob: -11.250858306884766

Token 396: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005292338784784079
    2. '               ' → logprob: -5.8802924156188965
    3. ' if' → logprob: -7.3802924156188965
    4. '                    
' → logprob: -8.130291938781738
    5. '<|end|>' → logprob: -8.255291938781738
    6. ',' → logprob: -8.505291938781738
    7. '           ' → logprob: -8.630291938781738
    8. '                       ' → logprob: -9.005291938781738
    9. 's' → logprob: -9.130291938781738
    10. '
' → logprob: -9.130291938781738

Token 397: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013498414307832718
    2. ' if' → logprob: -4.513498306274414
    3. 'if' → logprob: -7.513498306274414
    4. '<|end|>' → logprob: -7.763498306274414
    5. '                    
' → logprob: -7.888498306274414
    6. '               ' → logprob: -8.263498306274414
    7. '
' → logprob: -8.388498306274414
    8. ' for' → logprob: -9.138498306274414
    9. ',' → logprob: -9.263498306274414
    10. '		           ' → logprob: -9.513498306274414

Token 398: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00016229959146585315
    2. '                   ' → logprob: -8.875162124633789
    3. ' if' → logprob: -10.750162124633789
    4. '               ' → logprob: -14.375162124633789
    5. '           ' → logprob: -16.25016212463379
    6. '                    
' → logprob: -16.25016212463379
    7. '   ' → logprob: -16.37516212463379
    8. '```' → logprob: -16.87516212463379
    9. 'required' → logprob: -17.75016212463379
    10. ' ' → logprob: -18.25016212463379

Token 399: ' prere' (ID: 55794)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0017261108150705695
    2. '                   ' → logprob: -6.751726150512695
    3. ' if' → logprob: -7.501726150512695
    4. '               ' → logprob: -13.626726150512695
    5. '   ' → logprob: -13.751726150512695
    6. '           ' → logprob: -13.876726150512695
    7. '```' → logprob: -16.126726150512695
    8. '                       ' → logprob: -16.376726150512695
    9. '       ' → logprob: -16.501726150512695
    10. ' ' → logprob: -16.876726150512695

Token 400: 'qs' (ID: 31847)
  Prédit: 'qs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -3.845798710244708e-05
    2. 'q' → logprob: -10.250038146972656
    3. 'qus' → logprob: -14.000038146972656
    4. 'quis' → logprob: -14.625038146972656
    5. 'cs' → logprob: -14.750038146972656
    6. 's' → logprob: -14.875038146972656
    7. 'quisites' → logprob: -15.250038146972656
    8. '       ' → logprob: -15.875038146972656
    9. 'fs' → logprob: -16.125038146972656
    10. ' qs' → logprob: -16.250038146972656

Token 401: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.404745439183898e-05
    2. '[' → logprob: -10.62503433227539
    3. '[j' → logprob: -12.37503433227539
    4. '```' → logprob: -14.12503433227539
    5. ' [' → logprob: -14.37503433227539
    6. 's' → logprob: -14.50003433227539
    7. '[I' → logprob: -14.50003433227539
    8. 'i' → logprob: -14.75003433227539
    9. '               ' → logprob: -14.75003433227539
    10. '           ' → logprob: -14.87503433227539

Token 402: ']' (ID: 60)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.1215033084154129
    2. ' &' → logprob: -2.3715033531188965
    3. ')' → logprob: -4.6215033531188965
    4. ']' → logprob: -4.9965033531188965
    5. '&i' → logprob: -6.4965033531188965
    6. ')&' → logprob: -6.9965033531188965
    7. '&gt' → logprob: -7.2465033531188965
    8. ']&' → logprob: -7.9965033531188965
    9. '&amp' → logprob: -8.996502876281738
    10. '&s' → logprob: -8.996502876281738

Token 403: ' doit' (ID: 21822)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.009555267170071602
    2. ' &' → logprob: -4.884555339813232
    3. '&gt' → logprob: -7.384555339813232
    4. ')' → logprob: -7.759555339813232
    5. ' &=' → logprob: -8.134554862976074
    6. '&amp' → logprob: -8.134554862976074
    7. '&p' → logprob: -9.509554862976074
    8. '&i' → logprob: -10.259554862976074
    9. '&a' → logprob: -10.509554862976074
    10. '&A' → logprob: -10.759554862976074

Token 404: ' être' (ID: 9104)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.015142998658120632
    2. '(' → logprob: -4.515142917633057
    3. 'subset' → logprob: -6.640142917633057
    4. '&amp' → logprob: -7.640142917633057
    5. '(s' → logprob: -8.140143394470215
    6. 'être' → logprob: -8.140143394470215
    7. ' &' → logprob: -8.390143394470215
    8. 'be' → logprob: -8.390143394470215
    9. ' (' → logprob: -8.515143394470215
    10. '&s' → logprob: -8.515143394470215

Token 405: ' inclus' (ID: 11891)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.06834884732961655
    2. 'subset' → logprob: -2.9433488845825195
    3. '(' → logprob: -4.8183488845825195
    4. '(s' → logprob: -6.1933488845825195
    5. ' (' → logprob: -6.5683488845825195
    6. '((' → logprob: -6.6933488845825195
    7. 'sub' → logprob: -8.56834888458252
    8. '```' → logprob: -9.44334888458252
    9. 'included' → logprob: -9.56834888458252
    10. ' subset' → logprob: -9.81834888458252

Token 406: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.9682987928390503
    2. 'subset' → logprob: -1.2182987928390503
    3. 'dans' → logprob: -1.4682987928390503
    4. ' subset' → logprob: -3.21829891204834
    5. ' (' → logprob: -3.59329891204834
    6. ' in' → logprob: -5.09329891204834
    7. '&' → logprob: -5.59329891204834
    8. ')' → logprob: -5.84329891204834
    9. '                   ' → logprob: -6.09329891204834
    10. 'in' → logprob: -6.34329891204834

Token 407: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.048622336238622665
    2. ' subset' → logprob: -3.0486223697662354
    3. '(' → logprob: -11.548622131347656
    4. 'substring' → logprob: -11.923622131347656
    5. ' (' → logprob: -12.048622131347656
    6. '   ' → logprob: -12.673622131347656
    7. 'substr' → logprob: -12.673622131347656
    8. '_subset' → logprob: -13.548622131347656
    9. ' ' → logprob: -13.923622131347656
    10. 'subtotal' → logprob: -14.048622131347656

Token 408: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.043671779334545135
    2. ' and' → logprob: -3.4186718463897705
    3. '               ' → logprob: -5.418671607971191
    4. ':
' → logprob: -6.793671607971191
    5. ')' → logprob: -6.918671607971191
    6. ':' → logprob: -7.168671607971191
    7. ' if' → logprob: -7.293671607971191
    8. ',' → logprob: -7.918671607971191
    9. '           ' → logprob: -7.918671607971191
    10. 'and' → logprob: -7.918671607971191

Token 409: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005926070269197226
    2. '               ' → logprob: -6.255926132202148
    3. ' if' → logprob: -6.505926132202148
    4. '           ' → logprob: -7.505926132202148
    5. ' and' → logprob: -7.630926132202148
    6. '                    
' → logprob: -8.255926132202148
    7. ')' → logprob: -8.380926132202148
    8. '                       ' → logprob: -8.630926132202148
    9. ':
' → logprob: -8.630926132202148
    10. ',' → logprob: -9.130926132202148

Token 410: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09367412328720093
    2. 'if' (adapté à ' if') → logprob: -3.2186741828918457
    3. ' if' → logprob: -3.3436741828918457
    4. '               ' → logprob: -4.343674182891846
    5. '           ' → logprob: -7.593674182891846
    6. '
' → logprob: -8.593673706054688
    7. '   ' → logprob: -9.218673706054688
    8. '<|end|>' → logprob: -9.843673706054688
    9. '		           ' → logprob: -10.468673706054688
    10. ')' → logprob: -10.593673706054688

Token 411: ' (' (ID: 350)
  Prédit: '(pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.007694763597100973
    2. '(sub' → logprob: -5.382694721221924
    3. '(pre' → logprob: -6.257694721221924
    4. 'pr' → logprob: -7.257694721221924
    5. ' (' → logprob: -8.507695198059082
    6. 'subset' → logprob: -9.632695198059082
    7. '(req' → logprob: -10.007695198059082
    8. '(substr' → logprob: -10.132695198059082
    9. '(pref' → logprob: -11.007695198059082
    10. '   ' → logprob: -11.257695198059082

Token 412: 'pr' (ID: 638)
  Prédit: '(pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.5006377696990967
    2. 'pr' → logprob: -1.2506377696990967
    3. 'subset' → logprob: -2.5006377696990967
    4. '(sub' → logprob: -3.7506377696990967
    5. '(pre' → logprob: -6.750638008117676
    6. 'sub' → logprob: -8.375638008117676
    7. 'pre' → logprob: -9.000638008117676
    8. ' (' → logprob: -9.125638008117676
    9. ' prere' → logprob: -10.250638008117676
    10. '(' → logprob: -10.250638008117676

Token 413: 'ere' (ID: 512)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.550558865070343
    2. 'efs' → logprob: -1.5505588054656982
    3. 'ef' → logprob: -1.9255588054656982
    4. 'e' → logprob: -3.9255588054656982
    5. 'eq' → logprob: -4.300559043884277
    6. 'ere' → logprob: -4.800559043884277
    7. ' subset' → logprob: -4.925559043884277
    8. 'ep' → logprob: -5.800559043884277
    9. 'es' → logprob: -5.800559043884277
    10. 'ecs' → logprob: -6.800559043884277

Token 414: 'qs' (ID: 31847)
  Prédit: 'qs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -4.644463479053229e-05
    2. 'q' → logprob: -10.125046730041504
    3. 's' → logprob: -12.875046730041504
    4. 'quisites' → logprob: -14.125046730041504
    5. 'efs' → logprob: -14.500046730041504
    6. 'qus' → logprob: -14.875046730041504
    7. 'req' → logprob: -15.250046730041504
    8. 'fs' → logprob: -15.250046730041504
    9. '```' → logprob: -15.625046730041504
    10. '   ' → logprob: -15.625046730041504

Token 415: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -12.125007629394531
    3. 'subset' → logprob: -14.750007629394531
    4. '[sub' → logprob: -14.750007629394531
    5. 'i' → logprob: -15.125007629394531
    6. ')' → logprob: -15.625007629394531
    7. ' [' → logprob: -15.625007629394531
    8. '[s' → logprob: -16.12500762939453
    9. ')[' → logprob: -17.00000762939453
    10. '[
' → logprob: -17.25000762939453

Token 416: ']' (ID: 60)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.006100255064666271
    2. ' &' → logprob: -5.131100177764893
    3. '&i' → logprob: -9.00610065460205
    4. ')' → logprob: -11.13110065460205
    5. '[i' → logprob: -11.38110065460205
    6. 'subset' → logprob: -11.63110065460205
    7. '&amp' → logprob: -12.63110065460205
    8. '&p' → logprob: -12.88110065460205
    9. '&
' → logprob: -13.13110065460205
    10. ']' → logprob: -14.13110065460205

Token 417: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.047314293682575226
    2. ' &' → logprob: -3.172314405441284
    3. 'subset' → logprob: -6.047314167022705
    4. ' subset' → logprob: -6.672314167022705
    5. '&i' → logprob: -7.547314167022705
    6. '[i' → logprob: -9.172314643859863
    7. '&amp' → logprob: -11.672314643859863
    8. '&p' → logprob: -11.922314643859863
    9. '&
' → logprob: -11.922314643859863
    10. '_subset' → logprob: -12.422314643859863

Token 418: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.02535024657845497
    2. ' subset' → logprob: -4.275350093841553
    3. '~' → logprob: -5.025350093841553
    4. '(~' → logprob: -6.025350093841553
    5. ' ~' → logprob: -6.775350093841553
    6. '(' → logprob: -7.900350093841553
    7. ' (' → logprob: -7.900350093841553
    8. ' (~' → logprob: -8.775350570678711
    9. '(sub' → logprob: -11.025350570678711
    10. ' ' → logprob: -11.275350570678711

Token 419: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002072357019642368
    2. ')!=' → logprob: -8.50020694732666
    3. ' )' → logprob: -13.37520694732666
    4. '!=' → logprob: -13.37520694732666
    5. '）' → logprob: -15.25020694732666
    6. ')!' → logprob: -15.62520694732666
    7. ' !=' → logprob: -17.000207901000977
    8. '!' → logprob: -17.125207901000977
    9. '))' → logprob: -17.375207901000977
    10. '!)' → logprob: -17.750207901000977

Token 420: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.01670328713953495
    2. ')!=' → logprob: -4.391703128814697
    3. ' !=' → logprob: -5.766703128814697
    4. ')' → logprob: -6.891703128814697
    5. ']!=' → logprob: -10.766703605651855
    6. '()!=' → logprob: -11.641703605651855
    7. '!' → logprob: -12.641703605651855
    8. '==' → logprob: -13.016703605651855
    9. '!==' → logprob: -13.391703605651855
    10. '^' → logprob: -14.516703605651855

Token 421: ' prere' (ID: 55794)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.018179206177592278
    2. ' prere' → logprob: -4.018179416656494
    3. ' ' → logprob: -12.018178939819336
    4. 'pre' → logprob: -12.268178939819336
    5. '	pr' → logprob: -12.518178939819336
    6. ' prer' → logprob: -12.643178939819336
    7. '(pr' → logprob: -12.893178939819336
    8. ' pr' → logprob: -13.018178939819336
    9. '  ' → logprob: -13.393178939819336
    10. 'p' → logprob: -14.018178939819336

Token 422: 'qs' (ID: 31847)
  Prédit: 'qs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.0006299942615441978
    2. 'q' → logprob: -7.375629901885986
    3. 's' → logprob: -14.000630378723145
    4. 'cs' → logprob: -14.250630378723145
    5. 'qus' → logprob: -14.375630378723145
    6. 'quis' → logprob: -14.625630378723145
    7. 'quisites' → logprob: -15.500630378723145
    8. 'req' → logprob: -15.500630378723145
    9. '   ' → logprob: -15.875630378723145
    10. 'fs' → logprob: -16.875629425048828

Token 423: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.448370838072151e-05
    2. 'subset' → logprob: -10.000094413757324
    3. '[' → logprob: -10.625094413757324
    4. '```' → logprob: -11.750094413757324
    5. 's' → logprob: -12.125094413757324
    6. 'i' → logprob: -12.625094413757324
    7. ' subset' → logprob: -13.000094413757324
    8. '(i' → logprob: -13.500094413757324
    9. '_subset' → logprob: -13.750094413757324
    10. '{i' → logprob: -14.625094413757324

Token 424: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1265297681093216
    2. '):' → logprob: -2.7515296936035156
    3. '                   ' → logprob: -3.1265296936035156
    4. ':
' → logprob: -5.001529693603516
    5. ':' → logprob: -6.876529693603516
    6. '               ' → logprob: -6.876529693603516
    7. '                       ' → logprob: -7.001529693603516
    8. ')' → logprob: -7.126529693603516
    9. '):
' → logprob: -8.876529693603516
    10. ']:
' → logprob: -9.001529693603516

Token 425: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03705417364835739
    2. '                   ' → logprob: -3.4120540618896484
    3. ':
' → logprob: -6.287054061889648
    4. '               ' → logprob: -7.287054061889648
    5. '                           ' → logprob: -8.412054061889648
    6. ':' → logprob: -8.787054061889648
    7. '                        
' → logprob: -8.912054061889648
    8. '           ' → logprob: -9.537054061889648
    9. '):
' → logprob: -9.912054061889648
    10. '       ' → logprob: -9.912054061889648

Token 426: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' (adapté à ' valid') → logprob: -0.050054457038640976
    2. ' valid' → logprob: -3.0500545501708984
    3. '                   ' → logprob: -6.925054550170898
    4. '                       ' → logprob: -7.800054550170898
    5. '	valid' → logprob: -10.550054550170898
    6. '               ' → logprob: -11.300054550170898
    7. '(valid' → logprob: -11.800054550170898
    8. 'break' → logprob: -11.800054550170898
    9. 'continue' → logprob: -11.925054550170898
    10. '
' → logprob: -12.550054550170898

Token 427: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693604052066803
    2. ' =' → logprob: -0.693604052066803
    3. '=False' → logprob: -7.693603992462158
    4. '=True' → logprob: -14.943604469299316
    5. '=false' → logprob: -15.318604469299316
    6. ' ' → logprob: -15.943604469299316
    7. ')' → logprob: -16.693603515625
    8. '<|end|>' → logprob: -16.693603515625
    9. '  ' → logprob: -16.818603515625
    10. 'False' → logprob: -16.943603515625

Token 428: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01416350994259119
    2. ' False' → logprob: -4.264163494110107
    3. '(False' → logprob: -18.764163970947266
    4. '=False' → logprob: -18.889163970947266
    5. '   ' → logprob: -19.889163970947266
    6. '_false' → logprob: -21.139163970947266
    7. 'false' → logprob: -21.389163970947266
    8. '.False' → logprob: -21.764163970947266
    9. 'True' → logprob: -22.014163970947266
    10. 'F' → logprob: -22.014163970947266

Token 429: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00038384052459150553
    2. '                   ' → logprob: -8.125383377075195
    3. '               ' → logprob: -10.125383377075195
    4. '                           ' → logprob: -10.375383377075195
    5. '           ' → logprob: -12.250383377075195
    6. '                        
' → logprob: -12.500383377075195
    7. '                        ' → logprob: -12.875383377075195
    8. '                      ' → logprob: -13.625383377075195
    9. '       ' → logprob: -14.000383377075195
    10. '<|end|>' → logprob: -14.125383377075195

Token 430: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0002619318547658622
    2. '                   ' → logprob: -8.625262260437012
    3. '               ' → logprob: -10.125262260437012
    4. '                           ' → logprob: -11.250262260437012
    5. '           ' → logprob: -11.625262260437012
    6. '       ' → logprob: -12.125262260437012
    7. '                        
' → logprob: -12.375262260437012
    8. '                        ' → logprob: -12.500262260437012
    9. '<|end|>' → logprob: -13.000262260437012
    10. '                      ' → logprob: -13.750262260437012

Token 431: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0041841790080070496
    2. 'break' (adapté à ' break') → logprob: -5.504184246063232
    3. '                   ' → logprob: -9.754183769226074
    4. ' break' → logprob: -10.254183769226074
    5. '               ' → logprob: -11.629183769226074
    6. '                           ' → logprob: -14.254183769226074
    7. '                      ' → logprob: -14.254183769226074
    8. '                     ' → logprob: -14.754183769226074
    9. '           ' → logprob: -14.879183769226074
    10. '                        ' → logprob: -14.879183769226074

Token 432: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15030181407928467
    2. '           ' → logprob: -2.150301933288574
    3. '               ' → logprob: -3.900301933288574
    4. '       ' → logprob: -6.650301933288574
    5. '            ' → logprob: -7.650301933288574
    6. '
' → logprob: -8.525301933288574
    7. '                    
' → logprob: -8.900301933288574
    8. '            
' → logprob: -9.275301933288574
    9. '   ' → logprob: -9.650301933288574
    10. '                  ' → logprob: -9.650301933288574

Token 433: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22135747969150543
    2. '           ' → logprob: -1.7213574647903442
    3. '               ' → logprob: -4.346357345581055
    4. '       ' → logprob: -5.596357345581055
    5. '
' → logprob: -6.846357345581055
    6. '            
' → logprob: -8.096357345581055
    7. '  
' → logprob: -8.221357345581055
    8. '        
' → logprob: -8.346357345581055
    9. '    
' → logprob: -8.471357345581055
    10. '                    
' → logprob: -8.721357345581055

Token 434: ' total' (ID: 3609)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.022418305277824402
    2. '               ' → logprob: -4.89741849899292
    3. '           ' → logprob: -5.64741849899292
    4. '
' → logprob: -6.02241849899292
    5. '                    
' → logprob: -6.02241849899292
    6. '       ' → logprob: -6.14741849899292
    7. 'total' (adapté à ' total') → logprob: -6.39741849899292
    8. '   ' → logprob: -7.64741849899292
    9. ' total' → logprob: -7.89741849899292
    10. '    
' → logprob: -8.147418022155762

Token 435: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1398757123970427e-05
    2. ' _' → logprob: -12.625011444091797
    3. 'credits' → logprob: -13.000011444091797
    4. 'Credits' → logprob: -13.500011444091797
    5. '_credit' → logprob: -13.500011444091797
    6. ' +=' → logprob: -13.875011444091797
    7. '+' → logprob: -14.875011444091797
    8. '_tokens' → logprob: -14.875011444091797
    9. '+=' → logprob: -15.000011444091797
    10. ' credits' → logprob: -16.000011444091797

Token 436: 'credits' (ID: 92810)
  Prédit: 'credits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'credits' → logprob: -1.0683535037969705e-05
    2. ' credits' → logprob: -12.12501049041748
    3. '_' → logprob: -12.75001049041748
    4. 'credit' → logprob: -14.25001049041748
    5. '+' → logprob: -14.50001049041748
    6. 'courses' → logprob: -14.75001049041748
    7. 'Credits' → logprob: -15.12501049041748
    8. 'subset' → logprob: -16.375011444091797
    9. '+=' → logprob: -16.750011444091797
    10. ' ' → logprob: -16.750011444091797

Token 437: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12694185972213745
    2. ' +=' → logprob: -2.1269419193267822
    3. '+' → logprob: -11.626941680908203
    4. ']+=' → logprob: -13.001941680908203
    5. '   ' → logprob: -14.501941680908203
    6. '=' → logprob: -14.626941680908203
    7. '>=' → logprob: -14.751941680908203
    8. ' ' → logprob: -15.001941680908203
    9. '```' → logprob: -15.376941680908203
    10. '+=(' → logprob: -15.876941680908203

Token 438: ' credits' (ID: 30198)
  Prédit: 'credits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'credits' → logprob: -0.0019288709154352546
    2. ' credits' → logprob: -6.251928806304932
    3. 'credit' → logprob: -16.251928329467773
    4. '   ' → logprob: -16.376928329467773
    5. 'credentials' → logprob: -17.126928329467773
    6. 'Credits' → logprob: -19.376928329467773
    7. ' crédits' → logprob: -19.501928329467773
    8. ' ' → logprob: -19.751928329467773
    9. '           ' → logprob: -20.251928329467773
    10. ' créditos' → logprob: -20.501928329467773

Token 439: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.500001907348633
    3. ' [' → logprob: -17.375001907348633
    4. 'i' → logprob: -19.375001907348633
    5. '```' → logprob: -19.875001907348633
    6. '   ' → logprob: -20.250001907348633
    7. '[
' → logprob: -20.875001907348633
    8. '[I' → logprob: -21.125001907348633
    9. '[j' → logprob: -21.375001907348633
    10. '(i' → logprob: -22.125001907348633

Token 440: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005979516077786684
    2. '
' → logprob: -6.130979537963867
    3. '            
' → logprob: -7.005979537963867
    4. ' 
' → logprob: -7.130979537963867
    5. '  
' → logprob: -7.505979537963867
    6. '       ' → logprob: -7.880979537963867
    7. '<|end|>' → logprob: -8.005979537963867
    8. '    
' → logprob: -8.255979537963867
    9. '        
' → logprob: -8.630979537963867
    10. '                   ' → logprob: -9.505979537963867

Token 442: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056459832936525345
    2. '
' → logprob: -3.181459903717041
    3. '       ' → logprob: -5.181459903717041
    4. ' if' → logprob: -5.556459903717041
    5. '   ' → logprob: -6.556459903717041
    6. 'if' (adapté à ' if') → logprob: -6.931459903717041
    7. '            
' → logprob: -7.806459903717041
    8. '    
' → logprob: -8.556459426879883
    9. '<|end|>' → logprob: -8.556459426879883
    10. ' ' → logprob: -8.931459426879883

Token 443: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.018320729956030846
    2. 'valid' → logprob: -4.018320560455322
    3. ' total' → logprob: -8.76832103729248
    4. 'total' → logprob: -11.89332103729248
    5. '(valid' → logprob: -12.01832103729248
    6. '	valid' → logprob: -14.14332103729248
    7. ' ' → logprob: -14.76832103729248
    8. ' not' → logprob: -14.76832103729248
    9. '   ' → logprob: -15.39332103729248
    10. ' ' → logprob: -16.393320083618164

Token 444: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014340728521347046
    2. 'and' → logprob: -4.264340877532959
    3. '           ' → logprob: -8.7643404006958
    4. '               ' → logprob: -12.5143404006958
    5. '            ' → logprob: -12.5143404006958
    6. '          ' → logprob: -13.0143404006958
    7. ' >=' → logprob: -13.1393404006958
    8. '	and' → logprob: -13.1393404006958
    9. '<|end|>' → logprob: -13.3893404006958
    10. ' ' → logprob: -13.7643404006958

Token 445: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.018151700496673584
    2. 'total' → logprob: -4.018151760101318
    3. '(total' → logprob: -13.39315128326416
    4. '           ' → logprob: -16.393152236938477
    5. ' ' → logprob: -16.518152236938477
    6. ' ' → logprob: -17.143152236938477
    7. ' (' → logprob: -17.393152236938477
    8. '	total' → logprob: -17.768152236938477
    9. ' tot' → logprob: -17.893152236938477
    10. ' totals' → logprob: -18.518152236938477

Token 446: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.088346359931165e-07
    2. ' _' → logprob: -14.750000953674316
    3. 'credits' → logprob: -15.500000953674316
    4. 'Credits' → logprob: -16.125
    5. '_total' → logprob: -17.25
    6. '_credit' → logprob: -17.25
    7. 'total' → logprob: -18.0
    8. '\' → logprob: -18.125
    9. '>=' → logprob: -18.125
    10. '._' → logprob: -18.25

Token 447: 'credits' (ID: 92810)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018169373273849487
    2. 'credits' → logprob: -4.018169403076172
    3. 'Credits' → logprob: -11.268169403076172
    4. ' credits' → logprob: -12.018169403076172
    5. 'total' → logprob: -15.018169403076172
    6. '>=' → logprob: -16.018169403076172
    7. 'credit' → logprob: -16.143169403076172
    8. '_credit' → logprob: -16.768169403076172
    9. '=' → logprob: -17.393169403076172
    10. '_credentials' → logprob: -17.518169403076172

Token 448: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.08900774270296097
    2. ' >=' → logprob: -2.46400785446167
    3. ']>=' → logprob: -10.464007377624512
    4. ')>=' → logprob: -11.089007377624512
    5. '>' → logprob: -11.214007377624512
    6. ' ' → logprob: -12.339007377624512
    7. ')' → logprob: -12.714007377624512
    8. '   ' → logprob: -13.714007377624512
    9. ' ' → logprob: -13.964007377624512
    10. '≥' → logprob: -14.339007377624512

Token 449: ' U' (ID: 601)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.12692873179912567
    2. ' U' → logprob: -2.1269288063049316
    3. '	U' → logprob: -15.126928329467773
    4. '   ' → logprob: -15.626928329467773
    5. ' ' → logprob: -16.626928329467773
    6. '           ' → logprob: -17.251928329467773
    7. ' ' → logprob: -17.626928329467773
    8. '    ' → logprob: -18.376928329467773
    9. '       ' → logprob: -18.376928329467773
    10. '
' → logprob: -18.876928329467773

Token 450: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13164018094539642
    2. ':
' → logprob: -2.3816401958465576
    3. ' and' → logprob: -3.5066401958465576
    4. '           ' → logprob: -7.3816399574279785
    5. '               ' → logprob: -9.131640434265137
    6. 'and' → logprob: -9.131640434265137
    7. '       ' → logprob: -11.006640434265137
    8. '<|end|>' → logprob: -11.006640434265137
    9. ' :' → logprob: -11.256640434265137
    10. '):
' → logprob: -11.381640434265137

Token 451: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04707822576165199
    2. '           ' → logprob: -3.1720781326293945
    3. ' if' → logprob: -6.9220781326293945
    4. ' and' → logprob: -7.2970781326293945
    5. ':
' → logprob: -7.7970781326293945
    6. ':' → logprob: -7.9220781326293945
    7. ',' → logprob: -8.172078132629395
    8. ' ans' → logprob: -8.172078132629395
    9. '<|end|>' → logprob: -8.547078132629395
    10. '       ' → logprob: -8.672078132629395

Token 452: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3219907879829407
    2. 'ans' → logprob: -1.821990728378296
    3. ' if' → logprob: -2.821990728378296
    4. '               ' → logprob: -3.071990728378296
    5. '           ' → logprob: -5.696990966796875
    6. ' size' → logprob: -6.571990966796875
    7. 'if' → logprob: -6.571990966796875
    8. ' current' → logprob: -8.071990966796875
    9. 'size' → logprob: -8.321990966796875
    10. ' answer' → logprob: -8.321990966796875

Token 453: ' compter' (ID: 81694)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1970055103302002
    2. ' ans' → logprob: -2.8220055103302
    3. 'size' → logprob: -2.9470055103302
    4. 'count' → logprob: -3.1970055103302
    5. '               ' → logprob: -5.322005271911621
    6. ' size' → logprob: -5.322005271911621
    7. 'subset' → logprob: -5.447005271911621
    8. 'current' → logprob: -5.697005271911621
    9. 'if' → logprob: -6.322005271911621
    10. 'cnt' → logprob: -6.572005271911621

Token 454: ' le' (ID: 505)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -1.185173511505127
    2. ' bin' → logprob: -2.060173511505127
    3. ' =' → logprob: -2.560173511505127
    4. 'ans' → logprob: -2.560173511505127
    5. 'count' → logprob: -2.560173511505127
    6. ' ans' → logprob: -2.685173511505127
    7. '=' → logprob: -2.935173511505127
    8. 'subset' → logprob: -3.060173511505127
    9. 'min' → logprob: -3.310173511505127
    10. 'bits' → logprob: -3.560173511505127

Token 455: ' nombre' (ID: 9733)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.1062922477722168
    2. ' bin' → logprob: -3.106292247772217
    3. 'bit' → logprob: -3.231292247772217
    4. 'bits' → logprob: -4.606292247772217
    5. 'ans' → logprob: -5.481292247772217
    6. ' bit' → logprob: -7.356292247772217
    7. 'subset' → logprob: -7.856292247772217
    8. '(bin' → logprob: -8.106292724609375
    9. ' ans' → logprob: -8.231292724609375
    10. ' subset' → logprob: -9.356292724609375

Token 456: ' de' (ID: 334)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.6055429577827454
    2. '(bin' → logprob: -0.8555429577827454
    3. ' bin' → logprob: -4.10554313659668
    4. '   ' → logprob: -5.85554313659668
    5. ' de' → logprob: -5.85554313659668
    6. '(' → logprob: -6.73054313659668
    7. '           ' → logprob: -6.98054313659668
    8. 'de' → logprob: -7.35554313659668
    9. '(sub' → logprob: -7.48054313659668
    10. 'subset' → logprob: -7.60554313659668

Token 457: ' cours' (ID: 10138)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.0870586708188057
    2. '1' → logprob: -2.8370587825775146
    3. ' bin' → logprob: -4.2120585441589355
    4. 'bits' → logprob: -4.9620585441589355
    5. 'bit' → logprob: -6.4620585441589355
    6. 'set' → logprob: -7.4620585441589355
    7. '(bin' → logprob: -8.587059020996094
    8. 'bins' → logprob: -8.837059020996094
    9. ' ' → logprob: -9.212059020996094
    10. '   ' → logprob: -9.337059020996094

Token 458: ' dans' (ID: 2671)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -1.1920511722564697
    2. '(bin' → logprob: -1.4420511722564697
    3. ' bin' → logprob: -1.5670511722564697
    4. '(
' → logprob: -3.5670511722564697
    5. '(' → logprob: -3.6920511722564697
    6. ' =' → logprob: -3.9420511722564697
    7. 'subset' → logprob: -3.9420511722564697
    8. '(selected' → logprob: -4.067050933837891
    9. '_bits' → logprob: -4.192050933837891
    10. 'if' → logprob: -4.192050933837891

Token 459: ' subset' (ID: 58845)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.14928263425827026
    2. 'subset' → logprob: -2.024282693862915
    3. ' bin' → logprob: -5.274282455444336
    4. ' subset' → logprob: -6.649282455444336
    5. '   ' → logprob: -9.274282455444336
    6. '(bin' → logprob: -10.399282455444336
    7. ' ' → logprob: -11.899282455444336
    8. ')' → logprob: -11.899282455444336
    9. 'substr' → logprob: -12.399282455444336
    10. '  ' → logprob: -12.524282455444336

Token 460: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38758131861686707
    2. 'count' → logprob: -2.6375813484191895
    3. ' if' → logprob: -3.3875813484191895
    4. ',' → logprob: -3.3875813484191895
    5. '.count' → logprob: -3.6375813484191895
    6. ' =' → logprob: -3.6375813484191895
    7. '                   ' → logprob: -4.0125813484191895
    8. '           ' → logprob: -4.1375813484191895
    9. 'pop' → logprob: -4.1375813484191895
    10. ' ans' → logprob: -4.6375813484191895

Token 461: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5390061736106873
    2. ' if' → logprob: -1.164006233215332
    3. 'count' → logprob: -2.789006233215332
    4. ' count' → logprob: -3.539006233215332
    5. ' ans' → logprob: -5.414006233215332
    6. 'if' → logprob: -5.914006233215332
    7. ' =' → logprob: -6.289006233215332
    8. '
' → logprob: -7.164006233215332
    9. '           ' → logprob: -7.289006233215332
    10. ',' → logprob: -7.539006233215332

Token 462: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.819908082485199
    2. ' if' → logprob: -1.4449081420898438
    3. ' count' → logprob: -1.9449081420898438
    4. ' ans' → logprob: -2.6949081420898438
    5. 'ans' → logprob: -2.9449081420898438
    6. 'if' → logprob: -3.6949081420898438
    7. 'cnt' → logprob: -4.194908142089844
    8. '               ' → logprob: -5.444908142089844
    9. ' cnt' → logprob: -5.569908142089844
    10. 'pop' → logprob: -5.819908142089844

Token 463: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5242318511009216
    2. ' =' → logprob: -0.8992318511009216
    3. '(' → logprob: -7.274231910705566
    4. '=sub' → logprob: -8.399231910705566
    5. '(sub' → logprob: -9.774231910705566
    6. 'subset' → logprob: -10.024231910705566
    7. ' ' → logprob: -10.649231910705566
    8. '(
' → logprob: -11.149231910705566
    9. ')' → logprob: -11.274231910705566
    10. ' subset' → logprob: -11.399231910705566

Token 464: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.06200599670410156
    2. ' bin' → logprob: -2.8120059967041016
    3. 'subset' → logprob: -10.937005996704102
    4. '0' → logprob: -11.187005996704102
    5. '(bin' → logprob: -12.812005996704102
    6. ' subset' → logprob: -13.062005996704102
    7. ' ' → logprob: -14.062005996704102
    8. '   ' → logprob: -14.812005996704102
    9. '/bin' → logprob: -15.062005996704102
    10. '_bin' → logprob: -16.9370059967041

Token 465: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.000712074339389801
    2. 'subset' → logprob: -7.750711917877197
    3. '(count' → logprob: -8.250712394714355
    4. '(' → logprob: -11.375712394714355
    5. '(substr' → logprob: -12.375712394714355
    6. ' subset' → logprob: -13.250712394714355
    7. '(
' → logprob: -13.375712394714355
    8. 'count' → logprob: -14.000712394714355
    9. '(s' → logprob: -15.750712394714355
    10. '_subset' → logprob: -15.875712394714355

Token 466: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -7.374227425316349e-05
    2. 'subset' → logprob: -9.750073432922363
    3. '(set' → logprob: -12.500073432922363
    4. ')set' → logprob: -12.625073432922363
    5. 'erset' → logprob: -12.875073432922363
    6. 'et' → logprob: -13.000073432922363
    7. ' subset' → logprob: -13.750073432922363
    8. '_set' → logprob: -14.375073432922363
    9. '_subset' → logprob: -14.500073432922363
    10. '[' → logprob: -14.500073432922363

Token 467: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.008058808743953705
    2. '()).' → logprob: -4.883059024810791
    3. '(sub' → logprob: -8.383058547973633
    4. '()' → logprob: -9.758058547973633
    5. '().' → logprob: -9.883058547973633
    6. '   ' → logprob: -9.883058547973633
    7. '(' → logprob: -10.258058547973633
    8. ')' → logprob: -11.758058547973633
    9. '       ' → logprob: -12.383058547973633
    10. '(count' → logprob: -12.508058547973633

Token 468: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.500000953674316
    3. ' count' → logprob: -15.625000953674316
    4. '.count' → logprob: -16.875
    5. 'bit' → logprob: -17.875
    6. '	count' → logprob: -17.875
    7. '```' → logprob: -18.0
    8. ' ' → logprob: -18.625
    9. '_count' → logprob: -18.875
    10. 'c' → logprob: -19.625

Token 469: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.017028193920850754
    2. '(' → logprob: -4.517028331756592
    3. '("' → logprob: -5.517028331756592
    4. '("("' → logprob: -6.267028331756592
    5. ''' → logprob: -10.267027854919434
    6. '(
' → logprob: -12.267027854919434
    7. '('(' → logprob: -13.392027854919434
    8. '(`' → logprob: -13.642027854919434
    9. '(',' → logprob: -13.892027854919434
    10. '((' → logprob: -14.517027854919434

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -23.125
    3. ' ' → logprob: -24.125
    4. ''' → logprob: -24.125
    5. '```' → logprob: -24.375
    6. '7' → logprob: -25.125
    7. '')' → logprob: -25.125
    8. '5' → logprob: -25.25
    9. '۱' → logprob: -25.75
    10. '8' → logprob: -25.875

Token 471: '')
' (ID: 2515)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5897014141082764
    2. ')' → logprob: -0.8397014141082764
    3. '())' → logprob: -4.3397016525268555
    4. '')' → logprob: -7.8397016525268555
    5. '()
' → logprob: -8.714701652526855
    6. ')
' → logprob: -10.089701652526855
    7. '())
' → logprob: -10.964701652526855
    8. '(' → logprob: -12.589701652526855
    9. '")' → logprob: -13.464701652526855
    10. ' )' → logprob: -13.464701652526855

Token 472: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029034778475761414
    2. '           ' → logprob: -3.9040348529815674
    3. ' if' → logprob: -5.779034614562988
    4. 'if' → logprob: -5.904034614562988
    5. '
' → logprob: -6.654034614562988
    6. '                   ' → logprob: -7.529034614562988
    7. '<|end|>' → logprob: -7.904034614562988
    8. '       ' → logprob: -9.279034614562988
    9. '                
' → logprob: -9.779034614562988
    10. '```' → logprob: -10.029034614562988

Token 473: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13919050991535187
    2. ' if' → logprob: -2.389190435409546
    3. '               ' → logprob: -4.139190673828125
    4. '           ' → logprob: -4.264190673828125
    5. 'ans' → logprob: -5.014190673828125
    6. '       ' → logprob: -6.514190673828125
    7. ' ans' → logprob: -9.764190673828125
    8. '   ' → logprob: -11.139190673828125
    9. '                   ' → logprob: -11.639190673828125
    10. '```' → logprob: -12.139190673828125

Token 474: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.20141392946243286
    2. 'count' → logprob: -1.701413869857788
    3. '(count' → logprob: -14.701414108276367
    4. '	count' → logprob: -15.326414108276367
    5. '[count' → logprob: -17.326414108276367
    6. '<count' → logprob: -17.576414108276367
    7. '$count' → logprob: -18.826414108276367
    8. '   ' → logprob: -18.826414108276367
    9. '               ' → logprob: -19.076414108276367
    10. ' ' → logprob: -19.576414108276367

Token 475: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11290279775857925
    2. '<' → logprob: -2.237902879714966
    3. '<|end|>' → logprob: -10.737902641296387
    4. ' <
' → logprob: -10.987902641296387
    5. ' ' → logprob: -11.987902641296387
    6. ')' → logprob: -12.362902641296387
    7. '<size' → logprob: -12.362902641296387
    8. '   ' → logprob: -12.487902641296387
    9. '<int' → logprob: -12.862902641296387
    10. ' <=' → logprob: -12.862902641296387

Token 476: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1602318435907364
    2. ' ans' → logprob: -1.9102318286895752
    3. '	ans' → logprob: -12.535231590270996
    4. '(ans' → logprob: -12.910231590270996
    5. 'answer' → logprob: -14.285231590270996
    6. '   ' → logprob: -15.285231590270996
    7. '=' → logprob: -15.410231590270996
    8. '_ans' → logprob: -15.660231590270996
    9. ' ' → logprob: -16.035232543945312
    10. 'Ans' → logprob: -16.660232543945312

Token 477: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2536981999874115
    2. ':
' → logprob: -1.5036982297897339
    3. '                   ' → logprob: -6.878698348999023
    4. '               ' → logprob: -8.128698348999023
    5. '):
' → logprob: -8.878698348999023
    6. '           ' → logprob: -9.128698348999023
    7. '):' → logprob: -9.503698348999023
    8. '                       ' → logprob: -10.128698348999023
    9. ')' → logprob: -10.628698348999023
    10. ':
' → logprob: -11.128698348999023

Token 478: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015636618481948972
    2. '               ' → logprob: -7.626563549041748
    3. '                       ' → logprob: -7.876563549041748
    4. 'ans' → logprob: -8.001564025878906
    5. ' ans' → logprob: -8.501564025878906
    6. '                    
' → logprob: -10.126564025878906
    7. '           ' → logprob: -10.126564025878906
    8. '                           ' → logprob: -10.376564025878906
    9. '
' → logprob: -11.251564025878906
    10. '                        
' → logprob: -12.501564025878906

Token 479: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.011616185307502747
    2. ' ans' → logprob: -4.511616230010986
    3. '                   ' → logprob: -7.511616230010986
    4. '               ' → logprob: -11.386615753173828
    5. '	ans' → logprob: -12.386615753173828
    6. '(ans' → logprob: -12.636615753173828
    7. '                       ' → logprob: -13.636615753173828
    8. '_ans' → logprob: -14.511615753173828
    9. '           ' → logprob: -14.886615753173828
    10. 'answer' → logprob: -15.386615753173828

Token 480: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022443771362305
    2. '=' → logprob: -1.910224437713623
    3. '＝' → logprob: -16.41022491455078
    4. ' =
' → logprob: -16.53522491455078
    5. ' =)' → logprob: -17.53522491455078
    6. ' =
' → logprob: -17.66022491455078
    7. ' ' → logprob: -18.78522491455078
    8. '.=' → logprob: -18.78522491455078
    9. '=int' → logprob: -19.03522491455078
    10. '=
' → logprob: -19.41022491455078

Token 481: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.061967797577381134
    2. ' count' → logprob: -2.8119678497314453
    3. '	count' → logprob: -15.936967849731445
    4. '[count' → logprob: -18.686967849731445
    5. 'c' → logprob: -19.186967849731445
    6. '(count' → logprob: -19.311967849731445
    7. '$count' → logprob: -19.436967849731445
    8. '   ' → logprob: -19.436967849731445
    9. 'counts' → logprob: -20.186967849731445
    10. '_count' → logprob: -20.311967849731445

Token 482: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0475250668823719
    2. '       ' → logprob: -4.047524929046631
    3. '    
' → logprob: -4.547524929046631
    4. '<|end|>' → logprob: -4.797524929046631
    5. '   ' → logprob: -5.797524929046631
    6. '        
' → logprob: -5.922524929046631
    7. '  
' → logprob: -7.047524929046631
    8. '\n' → logprob: -7.672524929046631
    9. '<|end|>' → logprob: -7.672524929046631
    10. '            
' → logprob: -7.797524929046631

Token 483: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06747014075517654
    2. '       ' → logprob: -2.942470073699951
    3. 'print' → logprob: -4.692470073699951
    4. '    
' → logprob: -6.442470073699951
    5. '
' → logprob: -7.067470073699951
    6. '        
' → logprob: -8.06747055053711
    7. '<|end|>' → logprob: -8.44247055053711
    8. ')' → logprob: -8.56747055053711
    9. '```' → logprob: -9.44247055053711
    10. ' print' → logprob: -10.56747055053711

Token 484: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04893762990832329
    2. '   ' → logprob: -3.0489375591278076
    3. '       ' → logprob: -8.798937797546387
    4. ' print' → logprob: -9.048937797546387
    5. '```' → logprob: -9.548937797546387
    6. '
' → logprob: -11.673937797546387
    7. '    
' → logprob: -13.423937797546387
    8. '        
' → logprob: -15.423937797546387
    9. '``' → logprob: -16.54893684387207
    10. '	print' → logprob: -16.67393684387207

Token 485: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.375001907348633
    3. '()' → logprob: -17.000001907348633
    4. '(
' → logprob: -17.500001907348633
    5. '(an' → logprob: -17.500001907348633
    6. ' (' → logprob: -18.125001907348633
    7. 'ans' → logprob: -19.125001907348633
    8. '(answer' → logprob: -19.125001907348633
    9. '(a' → logprob: -19.125001907348633
    10. '(abs' → logprob: -19.250001907348633

Token 486: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. '())' → logprob: -13.500003814697266
    3. '()' → logprob: -14.000003814697266
    4. ')`' → logprob: -14.875003814697266
    5. ')
' → logprob: -15.125003814697266
    6. ' )' → logprob: -15.375003814697266
    7. ')}}' → logprob: -16.375003814697266
    8. ')}' → logprob: -16.500003814697266
    9. '))' → logprob: -16.625003814697266
    10. '   ' → logprob: -16.625003814697266

Token 487: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.013784871436655521
    2. '__' → logprob: -5.013784885406494
    3. ' main' → logprob: -5.638784885406494
    4. ' _' → logprob: -6.763784885406494
    5. '_' → logprob: -7.138784885406494
    6. ' ' → logprob: -7.388784885406494
    7. ' ' → logprob: -7.638784885406494
    8. '  ' → logprob: -8.888784408569336
    9. '<|end|>' → logprob: -9.263784408569336
    10. '_main' → logprob: -10.263784408569336

Token 489: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.15588952600955963
    2. ' ==' → logprob: -2.4058895111083984
    3. '==' → logprob: -3.0308895111083984
    4. '.__' → logprob: -5.655889511108398
    5. '__.__' → logprob: -7.280889511108398
    6. '.' → logprob: -7.780889511108398
    7. 'name' → logprob: -7.905889511108398
    8. '=="' → logprob: -7.905889511108398
    9. '__.' → logprob: -8.655889511108398
    10. ' __' → logprob: -9.030889511108398

Token 490: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02677428536117077
    2. '__.__' → logprob: -3.6517741680145264
    3. '__.' → logprob: -7.9017744064331055
    4. '==' → logprob: -9.526774406433105
    5. '__["' → logprob: -11.026774406433105
    6. '.__' → logprob: -12.526774406433105
    7. '.' → logprob: -13.151774406433105
    8. ' ==' → logprob: -13.276774406433105
    9. '__":
' → logprob: -13.276774406433105
    10. '__.'/' → logprob: -14.151774406433105

Token 491: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12572303414344788
    2. '==' → logprob: -2.250723123550415
    3. ' ==' → logprob: -4.750722885131836
    4. '=="' → logprob: -5.750722885131836
    5. '=='' → logprob: -7.250722885131836
    6. '__.__' → logprob: -8.625722885131836
    7. '[' → logprob: -10.875722885131836
    8. '['' → logprob: -10.875722885131836
    9. '.__' → logprob: -11.375722885131836
    10. '__["' → logprob: -11.500722885131836

Token 492: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005241702310740948
    2. ''' → logprob: -5.255241870880127
    3. ' "__' → logprob: -12.255241394042969
    4. '__' → logprob: -12.755241394042969
    5. '"name' → logprob: -16.38024139404297
    6. '"user' → logprob: -16.88024139404297
    7. ' '__' → logprob: -17.00524139404297
    8. '"class' → logprob: -18.38024139404297
    9. '"_' → logprob: -18.38024139404297
    10. '("__' → logprob: -18.63024139404297

Token 493: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0020194053649902344
    2. 'name' → logprob: -6.25201940536499
    3. '__' → logprob: -9.377019882202148
    4. '_main' → logprob: -12.252019882202148
    5. '__':
' → logprob: -14.127019882202148
    6. 'm' → logprob: -15.127019882202148
    7. 'ma' → logprob: -16.00201988220215
    8. ' main' → logprob: -16.37701988220215
    9. 'maine' → logprob: -17.37701988220215
    10. '(main' → logprob: -17.50201988220215

Token 494: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.02980348840355873
    2. '__' → logprob: -3.529803514480591
    3. '__":
' → logprob: -9.904803276062012
    4. '__.' → logprob: -13.654803276062012
    5. '_' → logprob: -14.029803276062012
    6. '__:' → logprob: -14.279803276062012
    7. '__.__' → logprob: -16.154804229736328
    8. '__('' → logprob: -16.529804229736328
    9. '```' → logprob: -16.654804229736328
    10. '('__' → logprob: -16.779804229736328

Token 495: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.36077016592025757
    2. '   ' → logprob: -1.2357702255249023
    3. 'main' → logprob: -4.610770225524902
    4. '	main' → logprob: -6.110770225524902
    5. ' ' → logprob: -9.860770225524902
    6. '_main' → logprob: -11.485770225524902
    7. '  ' → logprob: -12.360770225524902
    8. ' ' → logprob: -12.485770225524902
    9. '   ' → logprob: -12.485770225524902
    10. '    ' → logprob: -12.860770225524902

Token 496: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.250000953674316
    3. '	main' → logprob: -21.125
    4. '   ' → logprob: -21.75
    5. '(main' → logprob: -25.125
    6. '.main' → logprob: -25.625
    7. '_main' → logprob: -26.375
    8. ' ' → logprob: -27.25
    9. 'import' → logprob: -27.5
    10. '  ' → logprob: -28.0

Token 497: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 495
Tokens correctement prédits (1ère position, stricte): 169
Tokens correctement prédits (1ère position, avec adaptation): 180
Tokens correctement prédits (top 10): 343
Précision stricte (1ère position): 34.14%
Précision adaptée (1ère position): 36.36%
Précision (top 10): 69.29%
================================================================================
