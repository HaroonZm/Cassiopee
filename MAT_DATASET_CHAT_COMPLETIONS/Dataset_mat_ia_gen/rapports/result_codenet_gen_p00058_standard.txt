================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    if not line.strip():
        continue
    xA, yA, xB, yB, xC, yC, xD, yD = map(float, line.split())
    v1x, v1y = xB - xA, yB - yA
    v2x, v2y = xD - xC, yD - yC
    dot = v1x * v2x + v1y * v2y
    print("YES" if abs(dot) < 1e-10 else "NO")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03690023347735405
    2. '\n' → logprob: -3.661900281906128
    3. 'import' → logprob: -5.786900043487549
    4. '\' → logprob: -6.286900043487549
    5. 'newline' → logprob: -6.786900043487549
    6. '' → logprob: -7.161900043487549
    7. '```' → logprob: -7.411900043487549
    8. '<|end|>' → logprob: -7.411900043487549
    9. '[' → logprob: -7.661900043487549
    10. '
' → logprob: -7.786900043487549

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0037288223393261433
    2. '  ' → logprob: -6.253728866577148
    3. ' i' → logprob: -6.378728866577148
    4. 'i' → logprob: -11.003728866577148
    5. ' ' → logprob: -11.628728866577148
    6. ' ▁' → logprob: -12.128728866577148
    7. ' n' → logprob: -12.128728866577148
    8. '```' → logprob: -12.128728866577148
    9. ' sys' → logprob: -12.253728866577148
    10. ' )' → logprob: -12.503728866577148

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11878649145364761
    2. 'in' → logprob: -2.493786573410034
    3. '[' → logprob: -3.993786573410034
    4. ':' → logprob: -5.118786334991455
    5. ' ' → logprob: -6.493786334991455
    6. '.' → logprob: -7.493786334991455
    7. '[:]' → logprob: -7.493786334991455
    8. '(' → logprob: -7.868786334991455
    9. '[]' → logprob: -8.368786811828613
    10. '  ' → logprob: -8.493786811828613

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.17993643879890442
    2. 'sys' → logprob: -1.804936408996582
    3. '=sys' → logprob: -9.429936408996582
    4. '(sys' → logprob: -9.804936408996582
    5. '	sys' → logprob: -10.554936408996582
    6. ' iter' → logprob: -11.679936408996582
    7. '```' → logprob: -12.054936408996582
    8. 's' → logprob: -12.304936408996582
    9. ' ' → logprob: -13.429936408996582
    10. 'in' → logprob: -13.429936408996582

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004592707380652428
    2. '.readline' → logprob: -5.5045928955078125
    3. '.stdin' → logprob: -8.129592895507812
    4. ' .' → logprob: -9.754592895507812
    5. '.argv' → logprob: -10.254592895507812
    6. '.stdout' → logprob: -10.254592895507812
    7. '.readlines' → logprob: -10.879592895507812
    8. 'import' → logprob: -11.129592895507812
    9. '.`' → logprob: -11.754592895507812
    10. ':' → logprob: -12.129592895507812

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.040457421680912e-05
    2. ':
' → logprob: -11.250070571899414
    3. ':**' → logprob: -11.250070571899414
    4. ' :' → logprob: -11.375070571899414
    5. '):' → logprob: -11.750070571899414
    6. '':' → logprob: -12.125070571899414
    7. '[:]' → logprob: -12.125070571899414
    8. '>:' → logprob: -12.750070571899414
    9. '`:' → logprob: -13.375070571899414
    10. '():' → logprob: -13.375070571899414

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005228889058344066
    2. '   ' → logprob: -8.62552261352539
    3. 'print' → logprob: -9.37552261352539
    4. '    
' → logprob: -9.62552261352539
    5. ' print' → logprob: -9.87552261352539
    6. '.strip' → logprob: -10.00052261352539
    7. ':' → logprob: -10.12552261352539
    8. '```' → logprob: -11.25052261352539
    9. '\t' → logprob: -11.62552261352539
    10. '.rstrip' → logprob: -12.25052261352539

Token 10: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1665678769350052
    2. '   ' → logprob: -2.041567802429199
    3. ' print' → logprob: -3.916567802429199
    4. '    ' → logprob: -6.916567802429199
    5. 'pass' → logprob: -6.916567802429199
    6. ' line' → logprob: -7.041567802429199
    7. 'line' → logprob: -7.791567802429199
    8. ' pass' → logprob: -8.5415678024292
    9. ' if' → logprob: -9.9165678024292
    10. 'strip' → logprob: -10.0415678024292

Token 11: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06386975198984146
    2. ' not' → logprob: -2.9388697147369385
    3. ' ' → logprob: -5.563869953155518
    4. 'line' → logprob: -5.563869953155518
    5. ''' → logprob: -7.313869953155518
    6. '"' → logprob: -8.93886947631836
    7. ' '' → logprob: -8.93886947631836
    8. ' len' → logprob: -9.43886947631836
    9. 'not' → logprob: -9.56386947631836
    10. '   ' → logprob: -10.18886947631836

Token 12: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0019362468738108873
    2. 'line' → logprob: -6.251936435699463
    3. ' ' → logprob: -12.126935958862305
    4. '	line' → logprob: -13.876935958862305
    5. '(line' → logprob: -14.751935958862305
    6. '=line' → logprob: -14.876935958862305
    7. ' ' → logprob: -16.001935958862305
    8. '#line' → logprob: -16.001935958862305
    9. '[line' → logprob: -16.376935958862305
    10. ''' → logprob: -16.501935958862305

Token 13: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.5816850662231445
    2. '.' → logprob: -0.8316850662231445
    3. '.rstrip' → logprob: -5.4566850662231445
    4. '.startswith' → logprob: -6.5816850662231445
    5. ' .' → logprob: -9.831685066223145
    6. '.endswith' → logprob: -11.456685066223145
    7. '.readline' → logprob: -12.581685066223145
    8. '.chomp' → logprob: -13.081685066223145
    9. '.split' → logprob: -13.456685066223145
    10. 'rstrip' → logprob: -13.956685066223145

Token 14: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006037878338247538
    2. ':' → logprob: -7.625603675842285
    3. '():
' → logprob: -9.625603675842285
    4. ' ():' → logprob: -10.375603675842285
    5. '()' → logprob: -11.250603675842285
    6. '().' → logprob: -13.375603675842285
    7. '():
' → logprob: -14.000603675842285
    8. '(':' → logprob: -14.500603675842285
    9. '()==' → logprob: -14.625603675842285
    10. ' :' → logprob: -14.875603675842285

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009887357242405415
    2. '   ' → logprob: -4.884887218475342
    3. ' continue' → logprob: -6.259887218475342
    4. 'continue' → logprob: -8.0098876953125
    5. '```' → logprob: -11.5098876953125
    6. ' break' → logprob: -12.0098876953125
    7. '   ' → logprob: -12.2598876953125
    8. ' continues' → logprob: -12.7598876953125
    9. '	continue' → logprob: -12.8848876953125
    10. '_continue' → logprob: -13.5098876953125

Token 16: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2576638162136078
    2. 'break' → logprob: -1.5076638460159302
    3. '   ' → logprob: -5.632663726806641
    4. '       ' → logprob: -6.382663726806641
    5. 'continue' (adapté à ' continue') → logprob: -8.50766372680664
    6. ' continue' → logprob: -8.88266372680664
    7. '	break' → logprob: -9.63266372680664
    8. '    ' → logprob: -10.63266372680664
    9. '_break' → logprob: -12.63266372680664
    10. '           ' → logprob: -12.75766372680664

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018709007650613785
    2. '    
' → logprob: -4.018709182739258
    3. '        
' → logprob: -8.268709182739258
    4. '\n' → logprob: -9.768709182739258
    5. '```' → logprob: -9.768709182739258
    6. '       ' → logprob: -10.018709182739258
    7. '    ' → logprob: -10.393709182739258
    8. '
' → logprob: -10.518709182739258
    9. '     
' → logprob: -11.143709182739258
    10. '\' → logprob: -11.143709182739258

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001793457195162773
    2. 'print' → logprob: -9.000179290771484
    3. '    
' → logprob: -10.375179290771484
    4. '       ' → logprob: -11.750179290771484
    5. '```' → logprob: -11.875179290771484
    6. ' print' → logprob: -12.500179290771484
    7. '   ' → logprob: -13.375179290771484
    8. '    ' → logprob: -13.625179290771484
    9. '        
' → logprob: -14.125179290771484
    10. '
' → logprob: -14.375179290771484

Token 19: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2560746967792511
    2. 'print' → logprob: -1.5060746669769287
    3. 'data' → logprob: -6.381074905395508
    4. 'try' → logprob: -7.131074905395508
    5. ' print' → logprob: -7.631074905395508
    6. 'tokens' → logprob: -7.756074905395508
    7. 'result' → logprob: -9.006074905395508
    8. 'word' → logprob: -9.381074905395508
    9. 'words' → logprob: -9.506074905395508
    10. 'import' → logprob: -9.881074905395508

Token 20: 'A' (ID: 32)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21597819030284882
    2. '=' → logprob: -1.7159781455993652
    3. ',' → logprob: -4.590978145599365
    4. ' ' → logprob: -6.340978145599365
    5. 's' → logprob: -7.090978145599365
    6. '.' → logprob: -7.590978145599365
    7. ')' → logprob: -8.465978622436523
    8. '   ' → logprob: -8.590978622436523
    9. '.strip' → logprob: -8.715978622436523
    10. ' +=' → logprob: -9.215978622436523

Token 21: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.031267523765564
    2. '=' → logprob: -1.406267523765564
    3. 'rg' → logprob: -1.406267523765564
    4. 'r' → logprob: -2.6562676429748535
    5. ',' → logprob: -3.6562676429748535
    6. 'dd' → logprob: -4.5312676429748535
    7. 's' → logprob: -5.0312676429748535
    8. ' ' → logprob: -5.1562676429748535
    9. '.append' → logprob: -5.1562676429748535
    10. 'd' → logprob: -5.6562676429748535

Token 22: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5399749279022217
    2. 'y' → logprob: -1.0399749279022217
    3. ' y' → logprob: -3.6649749279022217
    4. ' x' → logprob: -4.039975166320801
    5. '=' → logprob: -5.039975166320801
    6. ' =' → logprob: -5.664975166320801
    7. ' ' → logprob: -5.914975166320801
    8. ' line' → logprob: -6.164975166320801
    9. 'space' → logprob: -6.539975166320801
    10. 'line' → logprob: -6.539975166320801

Token 23: 'A' (ID: 32)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3173450827598572
    2. '=' → logprob: -1.692345142364502
    3. '<|end|>' → logprob: -3.067345142364502
    4. ' =' → logprob: -3.567345142364502
    5. 'A' → logprob: -5.192345142364502
    6. '<|end|>' → logprob: -5.317345142364502
    7. ')' → logprob: -6.942345142364502
    8. 's' → logprob: -7.692345142364502
    9. '_' → logprob: -8.692344665527344
    10. ' ' → logprob: -8.692344665527344

Token 24: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8391537666320801
    2. ',' → logprob: -1.08915376663208
    3. ' =' → logprob: -1.46415376663208
    4. ' ,' → logprob: -9.214153289794922
    5. '<|end|>' → logprob: -11.089153289794922
    6. ')' → logprob: -11.214153289794922
    7. ' ' → logprob: -11.839153289794922
    8. '<|end|>' → logprob: -13.214153289794922
    9. '=line' → logprob: -13.589153289794922
    10. '.' → logprob: -13.714153289794922

Token 25: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.13197368383407593
    2. 'x' → logprob: -2.1319737434387207
    3. ' =' → logprob: -5.756973743438721
    4. ' z' → logprob: -7.256973743438721
    5. ' ' → logprob: -7.631973743438721
    6. 'z' → logprob: -8.381973266601562
    7. '=' → logprob: -8.506973266601562
    8. ',' → logprob: -10.131973266601562
    9. 'space' → logprob: -10.131973266601562
    10. '<|end|>' → logprob: -10.381973266601562

Token 26: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0023140492849051952
    2. ',' → logprob: -6.12731409072876
    3. 'A' → logprob: -9.002313613891602
    4. '<|end|>' → logprob: -13.252313613891602
    5. 'C' → logprob: -13.752313613891602
    6. ' B' → logprob: -14.252313613891602
    7. '=' → logprob: -14.752313613891602
    8. '1' → logprob: -15.377313613891602
    9. 'b' → logprob: -15.502313613891602
    10. '<|end|>' → logprob: -15.689813613891602

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00610333913937211
    2. '=' → logprob: -5.256103515625
    3. ' =' → logprob: -7.131103515625
    4. ' ,' → logprob: -9.756103515625
    5. '<|end|>' → logprob: -12.506103515625
    6. ' ' → logprob: -13.131103515625
    7. '<|end|>' → logprob: -13.506103515625
    8. ')' → logprob: -13.756103515625
    9. '```' → logprob: -15.256103515625
    10. '  ' → logprob: -15.506103515625

Token 28: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.02649257518351078
    2. 'y' → logprob: -3.6514925956726074
    3. ' ' → logprob: -9.27649211883545
    4. ',' → logprob: -10.40149211883545
    5. '<|end|>' → logprob: -10.65149211883545
    6. ' =' → logprob: -11.15149211883545
    7. '    ' → logprob: -11.90149211883545
    8. '=' → logprob: -12.02649211883545
    9. ' ,' → logprob: -12.27649211883545
    10. '  ' → logprob: -13.15149211883545

Token 29: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.13141515851020813
    2. 'A' → logprob: -2.1314151287078857
    3. '=' → logprob: -6.131415367126465
    4. ' =' → logprob: -6.256415367126465
    5. ',' → logprob: -8.631415367126465
    6. ')' → logprob: -9.881415367126465
    7. '```' → logprob: -10.256415367126465
    8. '<|end|>' → logprob: -10.256415367126465
    9. 'b' → logprob: -11.006415367126465
    10. 'C' → logprob: -11.756415367126465

Token 30: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326205730438232
    2. '=' → logprob: -0.7576205730438232
    3. ',' → logprob: -11.007620811462402
    4. ' ' → logprob: -13.257620811462402
    5. '=line' → logprob: -13.632620811462402
    6. ')' → logprob: -14.257620811462402
    7. '=

' → logprob: -16.007619857788086
    8. '   ' → logprob: -16.132619857788086
    9. '```' → logprob: -16.257619857788086
    10. ' ,' → logprob: -16.382619857788086

Token 31: ' x' (ID: 1215)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2586105465888977
    2. ' x' → logprob: -1.883610486984253
    3. 'x' → logprob: -3.508610486984253
    4. '=' → logprob: -3.758610486984253
    5. ' ' → logprob: -4.633610725402832
    6. ' line' → logprob: -5.508610725402832
    7. ',' → logprob: -6.133610725402832
    8. ' z' → logprob: -6.508610725402832
    9. 'z' → logprob: -7.883610725402832
    10. ' color' → logprob: -7.946110725402832

Token 32: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.09277394413948059
    2. ',' → logprob: -3.092773914337158
    3. 'A' → logprob: -3.717773914337158
    4. ' =' → logprob: -5.092773914337158
    5. '<|end|>' → logprob: -5.717773914337158
    6. 'B' → logprob: -5.842773914337158
    7. '1' → logprob: -5.967773914337158
    8. 'S' → logprob: -6.342773914337158
    9. '=' → logprob: -7.342773914337158
    10. 's' → logprob: -7.717773914337158

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18574607372283936
    2. '=' → logprob: -1.9357460737228394
    3. ' =' → logprob: -3.685746192932129
    4. ' ,' → logprob: -9.810746192932129
    5. '<|end|>' → logprob: -9.935746192932129
    6. ' ' → logprob: -12.310746192932129
    7. ')' → logprob: -12.810746192932129
    8. '<|end|>' → logprob: -12.935746192932129
    9. '```' → logprob: -13.435746192932129
    10. '.' → logprob: -14.248246192932129

Token 34: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.010299465619027615
    2. 'y' → logprob: -4.6352996826171875
    3. ' ' → logprob: -8.260299682617188
    4. '<|end|>' → logprob: -8.260299682617188
    5. ',' → logprob: -11.885299682617188
    6. ' ' → logprob: -12.135299682617188
    7. ' ,' → logprob: -13.010299682617188
    8. '<|end|>' → logprob: -13.135299682617188
    9. ',y' → logprob: -13.260299682617188
    10. '  ' → logprob: -13.385299682617188

Token 35: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00036406738217920065
    2. 'A' → logprob: -8.000364303588867
    3. '=' → logprob: -11.250364303588867
    4. ' =' → logprob: -12.000364303588867
    5. ',' → logprob: -12.250364303588867
    6. '<|end|>' → logprob: -12.750364303588867
    7. 'c' → logprob: -14.250364303588867
    8. 'B' → logprob: -15.000364303588867
    9. ' C' → logprob: -15.125364303588867
    10. ' ' → logprob: -15.500364303588867

Token 36: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931529641151428
    2. ' =' → logprob: -0.6931529641151428
    3. '=line' → logprob: -13.068153381347656
    4. ',' → logprob: -13.193153381347656
    5. ' ' → logprob: -13.943153381347656
    6. '   ' → logprob: -14.568153381347656
    7. ')' → logprob: -16.943153381347656
    8. '    ' → logprob: -16.943153381347656
    9. '=int' → logprob: -16.943153381347656
    10. '=

' → logprob: -16.943153381347656

Token 37: ' x' (ID: 1215)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8350450396537781
    2. ' x' → logprob: -1.0850450992584229
    3. 'x' → logprob: -2.335045099258423
    4. ' ' → logprob: -2.835045099258423
    5. '=' → logprob: -3.085045099258423
    6. ' line' → logprob: -4.210044860839844
    7. ' map' → logprob: -5.835044860839844
    8. ',' → logprob: -6.960044860839844
    9. ' A' → logprob: -7.772544860839844
    10. '  ' → logprob: -7.835044860839844

Token 38: 'D' (ID: 35)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3836612105369568
    2. 'D' → logprob: -1.2586612701416016
    3. '<|end|>' → logprob: -3.6336612701416016
    4. 'C' → logprob: -5.633661270141602
    5. ',' → logprob: -6.008661270141602
    6. 'S' → logprob: -6.883661270141602
    7. '=' → logprob: -7.758661270141602
    8. ' =' → logprob: -8.008661270141602
    9. 'B' → logprob: -9.133661270141602
    10. '<|end|>' → logprob: -9.883661270141602

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002535236766561866
    2. '=' → logprob: -6.252535343170166
    3. '<|end|>' → logprob: -7.877535343170166
    4. ' =' → logprob: -8.752534866333008
    5. ' ,' → logprob: -10.127534866333008
    6. '```' → logprob: -11.502534866333008
    7. '<|end|>' → logprob: -12.002534866333008
    8. ')' → logprob: -13.315034866333008
    9. '‌,' → logprob: -13.940034866333008
    10. ' ' → logprob: -14.065034866333008

Token 40: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04960646480321884
    2. 'y' → logprob: -3.0496065616607666
    3. '<|end|>' → logprob: -7.0496063232421875
    4. ' ' → logprob: -8.924606323242188
    5. '<|end|>' → logprob: -12.424606323242188
    6. ' ' → logprob: -12.799606323242188
    7. ',y' → logprob: -13.424606323242188
    8. '	y' → logprob: -13.549606323242188
    9. ',' → logprob: -13.924606323242188
    10. '  ' → logprob: -14.174606323242188

Token 41: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -5.633853652398102e-05
    2. 'A' → logprob: -10.625056266784668
    3. ' =' → logprob: -11.500056266784668
    4. '=' → logprob: -11.750056266784668
    5. ' D' → logprob: -12.125056266784668
    6. 'B' → logprob: -12.500056266784668
    7. '<|end|>' → logprob: -14.000056266784668
    8. ',' → logprob: -14.125056266784668
    9. 'd' → logprob: -14.500056266784668
    10. ' ' → logprob: -14.750056266784668

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17975567281246185
    2. '=' → logprob: -1.804755687713623
    3. ' ' → logprob: -12.179755210876465
    4. ',' → logprob: -12.679755210876465
    5. '=line' → logprob: -13.304755210876465
    6. '   ' → logprob: -15.304755210876465
    7. '    ' → logprob: -15.679755210876465
    8. ' ' → logprob: -16.17975616455078
    9. ' ,' → logprob: -16.42975616455078
    10. ')' → logprob: -16.42975616455078

Token 43: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.021454745903611183
    2. ' line' → logprob: -4.146454811096191
    3. 'map' → logprob: -5.271454811096191
    4. ' [' → logprob: -9.396454811096191
    5. 'line' → logprob: -9.396454811096191
    6. '[' → logprob: -10.271454811096191
    7. '   ' → logprob: -10.396454811096191
    8. '[line' → logprob: -10.896454811096191
    9. ' list' → logprob: -11.646454811096191
    10. ' ' → logprob: -12.396454811096191

Token 44: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.017681457102298737
    2. '(' → logprob: -4.14268159866333
    3. '(float' → logprob: -6.64268159866333
    4. '(lambda' → logprob: -8.267681121826172
    5. '(str' → logprob: -10.017681121826172
    6. '(
' → logprob: -11.517681121826172
    7. ' (' → logprob: -12.142681121826172
    8. '(list' → logprob: -12.142681121826172
    9. '(eval' → logprob: -12.267681121826172
    10. 'int' → logprob: -12.392681121826172

Token 45: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.24041928350925446
    2. ')' → logprob: -1.7404192686080933
    3. ',line' → logprob: -3.865419387817383
    4. ' line' → logprob: -5.240419387817383
    5. 'line' → logprob: -5.490419387817383
    6. ',' → logprob: -5.740419387817383
    7. '	line' → logprob: -6.615419387817383
    8. '[line' → logprob: -6.990419387817383
    9. '=line' → logprob: -7.365419387817383
    10. '   ' → logprob: -7.365419387817383

Token 46: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.22546152770519257
    2. 'line' → logprob: -1.600461483001709
    3. '   ' → logprob: -11.100461959838867
    4. '	line' → logprob: -11.350461959838867
    5. '(line' → logprob: -11.350461959838867
    6. '[line' → logprob: -12.100461959838867
    7. '=line' → logprob: -13.725461959838867
    8. '#line' → logprob: -13.850461959838867
    9. ' ' → logprob: -13.850461959838867
    10. ')' → logprob: -13.975461959838867

Token 47: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.06209585443139076
    2. '.split' → logprob: -2.812095880508423
    3. '.rstrip' → logprob: -9.312095642089844
    4. '().' → logprob: -10.937095642089844
    5. '.' → logprob: -11.437095642089844
    6. ' .' → logprob: -11.687095642089844
    7. 'strip' → logprob: -14.937095642089844
    8. '.readline' → logprob: -15.812095642089844
    9. '.trim' → logprob: -15.937095642089844
    10. 'split' → logprob: -16.187095642089844

Token 48: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012730603106319904
    2. '()' → logprob: -4.512730598449707
    3. '('' → logprob: -6.637730598449707
    4. ')' → logprob: -8.137730598449707
    5. '())
' → logprob: -10.637730598449707
    6. '(' → logprob: -10.637730598449707
    7. '()))' → logprob: -11.262730598449707
    8. ' ())' → logprob: -11.637730598449707
    9. '())

' → logprob: -13.262730598449707
    10. '("' → logprob: -13.512730598449707

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19436872005462646
    2. '   ' → logprob: -2.819368839263916
    3. '    
' → logprob: -2.944368839263916
    4. ':' → logprob: -3.819368839263916
    5. '<|end|>' → logprob: -3.944368839263916
    6. '  
' → logprob: -5.319368839263916
    7. '   
' → logprob: -5.569368839263916
    8. '\n' → logprob: -5.569368839263916
    9. ' 
' → logprob: -6.569368839263916
    10. '#' → logprob: -6.694368839263916

Token 50: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5391490459442139
    2. '
' → logprob: -1.7891490459442139
    3. '    
' → logprob: -2.414149045944214
    4. 'def' → logprob: -3.289149045944214
    5. '<|end|>' → logprob: -3.789149045944214
    6. 'x' → logprob: -4.414149284362793
    7. '    ' → logprob: -4.664149284362793
    8. '```' → logprob: -5.039149284362793
    9. '     
' → logprob: -5.289149284362793
    10. 'n' → logprob: -5.414149284362793

Token 51: '1' (ID: 16)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8929994702339172
    2. 'ector' → logprob: -1.7679994106292725
    3. 'ectors' → logprob: -2.1429994106292725
    4. 'x' → logprob: -2.1429994106292725
    5. 'al' → logprob: -2.6429994106292725
    6. 'AL' → logprob: -3.2679994106292725
    7. 'ec' → logprob: -4.017999649047852
    8. 'Ax' → logprob: -4.392999649047852
    9. 'AB' → logprob: -5.017999649047852
    10. '1' → logprob: -5.142999649047852

Token 52: 'x' (ID: 87)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10936342179775238
    2. '=' → logprob: -2.734363317489624
    3. 'x' → logprob: -3.984363317489624
    4. '1' → logprob: -4.734363555908203
    5. '_' → logprob: -5.609363555908203
    6. ' ' → logprob: -5.859363555908203
    7. 'A' → logprob: -5.859363555908203
    8. '0' → logprob: -7.609363555908203
    9. '_x' → logprob: -8.234363555908203
    10. ',' → logprob: -8.609363555908203

Token 53: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028653775807470083
    2. '=' → logprob: -5.877865314483643
    3. ',' → logprob: -9.7528657913208
    4. ' =)' → logprob: -14.0028657913208
    5. ' ,' → logprob: -14.1278657913208
    6. ' =
' → logprob: -15.0028657913208
    7. ' ' → logprob: -15.3778657913208
    8. ' =(' → logprob: -16.502864837646484
    9. '.' → logprob: -16.627864837646484
    10. ')' → logprob: -17.002864837646484

Token 54: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4404919743537903
    2. ' v' → logprob: -1.0654919147491455
    3. ' y' → logprob: -5.065492153167725
    4. 'y' → logprob: -5.315492153167725
    5. 'x' → logprob: -8.565491676330566
    6. ' x' → logprob: -9.190491676330566
    7. ' (' → logprob: -9.315491676330566
    8. ' ' → logprob: -10.315491676330566
    9. '   ' → logprob: -11.440491676330566
    10. '(v' → logprob: -11.877991676330566

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012073731049895287
    2. 'x' → logprob: -4.512073516845703
    3. 'y' → logprob: -6.887073516845703
    4. 'v' → logprob: -13.637073516845703
    5. '<|end|>' → logprob: -13.637073516845703
    6. 'z' → logprob: -14.637073516845703
    7. '<|end|>' → logprob: -15.887073516845703
    8. '0' → logprob: -16.137073516845703
    9. ' =' → logprob: -16.387073516845703
    10. 'ix' → logprob: -16.387073516845703

Token 56: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0507688969373703
    2. 'y' → logprob: -3.0507688522338867
    3. '<|end|>' → logprob: -6.425768852233887
    4. ' =' → logprob: -7.800768852233887
    5. '=' → logprob: -9.425768852233887
    6. '<|end|>' → logprob: -11.425768852233887
    7. ' ' → logprob: -11.550768852233887
    8. '1' → logprob: -11.925768852233887
    9. '_y' → logprob: -12.050768852233887
    10. ',' → logprob: -12.175768852233887

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0038090997841209173
    2. '=' → logprob: -5.628808975219727
    3. ',' → logprob: -8.503808975219727
    4. ' ,' → logprob: -13.253808975219727
    5. '<|end|>' → logprob: -13.503808975219727
    6. ' =)' → logprob: -13.878808975219727
    7. ')' → logprob: -14.003808975219727
    8. ' ' → logprob: -14.753808975219727
    9. ' +=' → logprob: -15.503808975219727
    10. '.' → logprob: -15.753808975219727

Token 58: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08907611668109894
    2. 'x' → logprob: -2.464076042175293
    3. ' ' → logprob: -9.464076042175293
    4. '(x' → logprob: -10.589076042175293
    5. ' (' → logprob: -11.089076042175293
    6. '	x' → logprob: -12.589076042175293
    7. ' y' → logprob: -12.839076042175293
    8. '   ' → logprob: -13.089076042175293
    9. ' float' → logprob: -13.589076042175293
    10. '1' → logprob: -13.714076042175293

Token 59: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.47212129831314087
    2. 'A' → logprob: -1.097121238708496
    3. 'C' → logprob: -3.222121238708496
    4. 'D' → logprob: -5.972121238708496
    5. 'a' → logprob: -10.784621238708496
    6. 'b' → logprob: -11.659621238708496
    7. 'А' → logprob: -12.284621238708496
    8. '_B' → logprob: -12.597121238708496
    9. ' B' → logprob: -12.722121238708496
    10. ' A' → logprob: -12.784621238708496

Token 60: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31335729360580444
    2. '-' → logprob: -1.3133573532104492
    3. '-x' → logprob: -9.43835735321045
    4. ' ' → logprob: -11.31335735321045
    5. ' ' → logprob: -13.68835735321045
    6. '<|end|>' → logprob: -14.06335735321045
    7. '   ' → logprob: -14.31335735321045
    8. ',' → logprob: -14.81335735321045
    9. '  ' → logprob: -15.93835735321045
    10. 'x' → logprob: -16.188356399536133

Token 61: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020896749570965767
    2. ' x' → logprob: -3.8958966732025146
    3. 'A' → logprob: -8.020896911621094
    4. '<|end|>' → logprob: -11.395896911621094
    5. ' A' → logprob: -11.520896911621094
    6. ' ' → logprob: -12.770896911621094
    7. '	x' → logprob: -13.270896911621094
    8. '   ' → logprob: -15.895896911621094
    9. '  ' → logprob: -16.770896911621094
    10. ')x' → logprob: -16.895896911621094

Token 62: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.704273118884885e-07
    2. '<|end|>' → logprob: -15.500000953674316
    3. ' A' → logprob: -16.0
    4. 'B' → logprob: -16.25
    5. 'C' → logprob: -16.875
    6. 'D' → logprob: -17.0
    7. 'А' → logprob: -17.25
    8. '	A' → logprob: -17.5
    9. '_A' → logprob: -17.625
    10. ',' → logprob: -17.75

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002476135268807411
    2. ' ,' → logprob: -6.377476215362549
    3. ',v' → logprob: -7.502476215362549
    4. ',
' → logprob: -9.25247573852539
    5. 'v' → logprob: -9.25247573852539
    6. ' v' → logprob: -10.87747573852539
    7. ',y' → logprob: -12.87747573852539
    8. ' ' → logprob: -13.00247573852539
    9. '   ' → logprob: -13.25247573852539
    10. ' ,
' → logprob: -13.62747573852539

Token 64: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0053957304917275906
    2. 'y' → logprob: -5.380395889282227
    3. ' ' → logprob: -7.755395889282227
    4. '<|end|>' → logprob: -8.005395889282227
    5. ' ' → logprob: -12.130395889282227
    6. '	y' → logprob: -13.005395889282227
    7. ' x' → logprob: -13.755395889282227
    8. ' "' → logprob: -14.255395889282227
    9. '"' → logprob: -14.505395889282227
    10. '<|end|>' → logprob: -14.630395889282227

Token 65: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03365042433142662
    2. 'A' → logprob: -3.4086503982543945
    3. '<|end|>' → logprob: -13.033650398254395
    4. ' B' → logprob: -13.533650398254395
    5. ' A' → logprob: -15.533650398254395
    6. ' ' → logprob: -15.971150398254395
    7. ' -' → logprob: -16.03365135192871
    8. '-' → logprob: -16.53365135192871
    9. 'b' → logprob: -16.59615135192871
    10. '[' → logprob: -16.72115135192871

Token 66: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006833771709352732
    2. '-' → logprob: -5.006833553314209
    3. '<|end|>' → logprob: -9.131834030151367
    4. 'A' → logprob: -12.381834030151367
    5. ' ' → logprob: -12.506834030151367
    6. '<|end|>' → logprob: -14.506834030151367
    7. ' A' → logprob: -14.881834030151367
    8. ' -
' → logprob: -15.256834030151367
    9. ' –' → logprob: -15.506834030151367
    10. ' -*-' → logprob: -15.881834030151367

Token 67: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6696386337280273
    2. ' x' → logprob: -1.1696386337280273
    3. '<|end|>' → logprob: -2.0446386337280273
    4. 'x' → logprob: -4.169638633728027
    5. ' A' → logprob: -4.294638633728027
    6. 'y' → logprob: -4.669638633728027
    7. 'A' → logprob: -4.919638633728027
    8. ' ' → logprob: -6.044638633728027
    9. '<|end|>' → logprob: -10.544638633728027
    10. ' ' → logprob: -12.544638633728027

Token 68: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.173704271830502e-06
    2. 'C' → logprob: -13.12500286102295
    3. 'B' → logprob: -14.00000286102295
    4. ' A' → logprob: -15.62500286102295
    5. 'D' → logprob: -16.500003814697266
    6. '<|end|>' → logprob: -16.500003814697266
    7. 'a' → logprob: -17.500003814697266
    8. 'А' → logprob: -18.125003814697266
    9. 'y' → logprob: -18.875003814697266
    10. ' ' → logprob: -18.875003814697266

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31793785095214844
    2. 'v' → logprob: -1.8179378509521484
    3. '   ' → logprob: -2.3179378509521484
    4. '<|end|>' → logprob: -4.942937850952148
    5. '    
' → logprob: -6.442937850952148
    6. ' v' → logprob: -6.817937850952148
    7. '  
' → logprob: -7.067937850952148
    8. '
' → logprob: -8.942937850952148
    9. '```' → logprob: -8.942937850952148
    10. '	v' → logprob: -9.067937850952148

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061482638120651245
    2. 'v' → logprob: -3.4364826679229736
    3. '
' → logprob: -3.8114826679229736
    4. '```' → logprob: -6.1864824295043945
    5. '    
' → logprob: -6.8114824295043945
    6. ',' → logprob: -7.4364824295043945
    7. '<|end|>' → logprob: -7.5614824295043945
    8. ' v' → logprob: -7.5614824295043945
    9. ',v' → logprob: -8.936482429504395
    10. '	v' → logprob: -9.186482429504395

Token 71: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.514410674571991
    2. '
' → logprob: -1.0144107341766357
    3. ' v' → logprob: -3.7644107341766357
    4. '   ' → logprob: -4.264410495758057
    5. '
' → logprob: -7.514410495758057
    6. '    
' → logprob: -7.514410495758057
    7. ' 
' → logprob: -7.889410495758057
    8. '  
' → logprob: -8.139410972595215
    9. '```' → logprob: -9.139410972595215
    10. '	v' → logprob: -9.514410972595215

Token 72: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10021001845598221
    2. '2' → logprob: -2.350209951400757
    3. '```' → logprob: -13.975210189819336
    4. ' ' → logprob: -14.225210189819336
    5. 'x' → logprob: -15.100210189819336
    6. '
' → logprob: -15.287710189819336
    7. 'v' → logprob: -15.350210189819336
    8. '4' → logprob: -15.725210189819336
    9. 'C' → logprob: -15.787710189819336
    10. '3' → logprob: -15.975210189819336

Token 73: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.339278580620885e-06
    2. '<|end|>' → logprob: -13.625001907348633
    3. ' =' → logprob: -14.125001907348633
    4. '=' → logprob: -15.625001907348633
    5. '<|end|>' → logprob: -17.250001907348633
    6. ' x' → logprob: -17.375001907348633
    7. ' ' → logprob: -17.500001907348633
    8. '```' → logprob: -17.500001907348633
    9. '_x' → logprob: -18.125001907348633
    10. ',' → logprob: -18.875001907348633

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4894986785948277e-05
    2. ' ,' → logprob: -10.375044822692871
    3. '<|end|>' → logprob: -11.375044822692871
    4. '=' → logprob: -13.500044822692871
    5. ',v' → logprob: -15.250044822692871
    6. ' =' → logprob: -15.500044822692871
    7. '‌,' → logprob: -16.125045776367188
    8. '<|end|>' → logprob: -16.625045776367188
    9. ',
' → logprob: -17.125045776367188
    10. ' ' → logprob: -17.750045776367188

Token 75: ' v' (ID: 323)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.633112907409668
    2. ' v' → logprob: -1.508112907409668
    3. ' ' → logprob: -1.508112907409668
    4. ' x' → logprob: -4.508112907409668
    5. ' ' → logprob: -5.383112907409668
    6. '<|end|>' → logprob: -5.383112907409668
    7. 'y' → logprob: -5.883112907409668
    8. 'v' → logprob: -6.133112907409668
    9. 'x' → logprob: -8.508112907409668
    10. 's' → logprob: -9.008112907409668

Token 76: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14275400340557098
    2. 'y' → logprob: -2.017754077911377
    3. '1' → logprob: -9.517753601074219
    4. '2' → logprob: -13.392753601074219
    5. ' y' → logprob: -13.767753601074219
    6. 'Y' → logprob: -14.767753601074219
    7. 'v' → logprob: -15.267753601074219
    8. 'yv' → logprob: -15.267753601074219
    9. 'vy' → logprob: -15.392753601074219
    10. '-' → logprob: -15.642753601074219

Token 77: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006609264761209488
    2. 'x' → logprob: -5.8816094398498535
    3. '=' → logprob: -6.1316094398498535
    4. ',' → logprob: -6.6316094398498535
    5. '<|end|>' → logprob: -8.506608963012695
    6. ' =' → logprob: -9.756608963012695
    7. '-' → logprob: -11.006608963012695
    8. ' ' → logprob: -12.131608963012695
    9. '.' → logprob: -12.131608963012695
    10. ',y' → logprob: -12.381608963012695

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02976854331791401
    2. '=' → logprob: -3.529768466949463
    3. ',' → logprob: -11.029768943786621
    4. ' ,' → logprob: -13.404768943786621
    5. ' ' → logprob: -15.529768943786621
    6. ' =)' → logprob: -16.779767990112305
    7. '＝' → logprob: -17.529767990112305
    8. ' =
' → logprob: -18.029767990112305
    9. '<|end|>' → logprob: -18.154767990112305
    10. ' ' → logprob: -18.279767990112305

Token 79: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0297732874751091
    2. 'x' → logprob: -3.529773235321045
    3. ' ' → logprob: -10.904773712158203
    4. '   ' → logprob: -12.904773712158203
    5. '	x' → logprob: -13.404773712158203
    6. ' y' → logprob: -15.529773712158203
    7. '  ' → logprob: -16.779773712158203
    8. ' -' → logprob: -17.717273712158203
    9. '0' → logprob: -17.842273712158203
    10. '<|end|>' → logprob: -18.092273712158203

Token 80: 'D' (ID: 35)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0619908832013607
    2. 'D' → logprob: -2.811990976333618
    3. 'B' → logprob: -12.061990737915039
    4. ' C' → logprob: -12.311990737915039
    5. 'A' → logprob: -13.311990737915039
    6. '
' → logprob: -13.436990737915039
    7. ' ' → logprob: -13.936990737915039
    8. '

' → logprob: -14.061990737915039
    9. '<|end|>' → logprob: -14.186990737915039
    10. '-' → logprob: -14.374490737915039

Token 81: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01112009584903717
    2. '-' → logprob: -4.511120319366455
    3. ' ' → logprob: -9.761119842529297
    4. '<|end|>' → logprob: -12.261119842529297
    5. ',' → logprob: -12.636119842529297
    6. ' ' → logprob: -12.761119842529297
    7. '   ' → logprob: -14.261119842529297
    8. 'x' → logprob: -14.511119842529297
    9. '<|end|>' → logprob: -15.261119842529297
    10. '`' → logprob: -15.261119842529297

Token 82: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.013289875350892544
    2. 'x' → logprob: -4.513289928436279
    3. '<|end|>' → logprob: -6.138289928436279
    4. ' ' → logprob: -10.263289451599121
    5. 'C' → logprob: -10.513289451599121
    6. ' C' → logprob: -11.388289451599121
    7. '	x' → logprob: -13.013289451599121
    8. ' ' → logprob: -13.263289451599121
    9. 'c' → logprob: -14.138289451599121
    10. '<|end|>' → logprob: -14.388289451599121

Token 83: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.380904672667384e-05
    2. 'x' → logprob: -11.000033378601074
    3. 'A' → logprob: -11.875033378601074
    4. 'B' → logprob: -12.625033378601074
    5. 'y' → logprob: -12.750033378601074
    6. ' C' → logprob: -13.250033378601074
    7. 'Cx' → logprob: -13.875033378601074
    8. '_C' → logprob: -14.625033378601074
    9. '```' → logprob: -16.00003433227539
    10. 'c' → logprob: -16.37503433227539

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.837811088189483e-05
    2. ' ,' → logprob: -9.625068664550781
    3. ',
' → logprob: -13.375068664550781
    4. ',y' → logprob: -15.375068664550781
    5. ',

' → logprob: -15.625068664550781
    6. '`,' → logprob: -16.12506866455078
    7. '‌,' → logprob: -16.25006866455078
    8. ',v' → logprob: -16.87506866455078
    9. '',' → logprob: -17.00006866455078
    10. ',\
' → logprob: -18.00006866455078

Token 85: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0008912135381251574
    2. 'y' → logprob: -7.125891208648682
    3. ' ' → logprob: -10.37589168548584
    4. ' x' → logprob: -10.87589168548584
    5. ' ' → logprob: -10.87589168548584
    6. ' space' → logprob: -12.25089168548584
    7. ' v' → logprob: -12.50089168548584
    8. ' `' → logprob: -13.50089168548584
    9. '`' → logprob: -13.87589168548584
    10. '"' → logprob: -13.87589168548584

Token 86: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.313273549079895
    2. 'C' → logprob: -1.313273549079895
    3. 'B' → logprob: -11.938273429870605
    4. 'A' → logprob: -12.688273429870605
    5. 'c' → logprob: -14.563273429870605
    6. '<|end|>' → logprob: -15.188273429870605
    7. '-' → logprob: -15.563273429870605
    8. 'd' → logprob: -15.688273429870605
    9. '.' → logprob: -15.813273429870605
    10. 'E' → logprob: -15.813273429870605

Token 87: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5760010480880737
    2. ' -' → logprob: -0.8260010480880737
    3. ' ' → logprob: -10.576001167297363
    4. ',' → logprob: -11.451001167297363
    5. '<|end|>' → logprob: -12.076001167297363
    6. ' ' → logprob: -12.201001167297363
    7. '-y' → logprob: -12.576001167297363
    8. 'y' → logprob: -12.951001167297363
    9. '```' → logprob: -13.076001167297363
    10. ' y' → logprob: -13.576001167297363

Token 88: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.32889774441719055
    2. 'C' → logprob: -1.4538977146148682
    3. ' y' → logprob: -3.078897714614868
    4. ' C' → logprob: -7.453897953033447
    5. '<|end|>' → logprob: -10.828897476196289
    6. 'x' → logprob: -11.828897476196289
    7. 'c' → logprob: -12.453897476196289
    8. ' ' → logprob: -13.203897476196289
    9. '1' → logprob: -13.578897476196289
    10. '	y' → logprob: -14.703897476196289

Token 89: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.45848218582978e-06
    2. ' C' → logprob: -13.75000286102295
    3. 'A' → logprob: -14.62500286102295
    4. 'B' → logprob: -15.12500286102295
    5. 'y' → logprob: -15.25000286102295
    6. ' ' → logprob: -16.000001907348633
    7. '<|end|>' → logprob: -16.375001907348633
    8. '-' → logprob: -16.750001907348633
    9. '1' → logprob: -17.500001907348633
    10. 'c' → logprob: -17.750001907348633

Token 90: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6631914973258972
    2. '   ' → logprob: -0.7881914973258972
    3. '    
' → logprob: -4.413191318511963
    4. ',' → logprob: -5.163191318511963
    5. '```' → logprob: -5.913191318511963
    6. '\n' → logprob: -6.538191318511963
    7. ',
' → logprob: -6.538191318511963
    8. '.' → logprob: -7.038191318511963
    9. '  
' → logprob: -7.038191318511963
    10. '<|end|>' → logprob: -7.163191318511963

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7166039943695068
    2. '
' → logprob: -1.4666039943695068
    3. '```' → logprob: -2.216603994369507
    4. ',' → logprob: -3.466603994369507
    5. '    
' → logprob: -3.716603994369507
    6. 'import' → logprob: -3.966603994369507
    7. '.' → logprob: -4.716604232788086
    8. 'v' → logprob: -4.841604232788086
    9. '#' → logprob: -4.841604232788086
    10. '    ' → logprob: -4.966604232788086

Token 92: ' dot' (ID: 16579)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028127562254667282
    2. '   ' → logprob: -4.528127670288086
    3. 'v' → logprob: -5.528127670288086
    4. '#' → logprob: -6.153127670288086
    5. '    
' → logprob: -6.528127670288086
    6. 'import' → logprob: -6.653127670288086
    7. '\n' → logprob: -6.778127670288086
    8. '' → logprob: -7.028127670288086
    9. 'def' → logprob: -7.403127670288086
    10. ' 
' → logprob: -7.653127670288086

Token 93: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10434062033891678
    2. '(' → logprob: -2.7293405532836914
    3. ' ' → logprob: -3.7293405532836914
    4. '<|end|>' → logprob: -5.729340553283691
    5. ' =' → logprob: -6.229340553283691
    6. '=' → logprob: -6.604340553283691
    7. ',' → logprob: -6.854340553283691
    8. '_product' → logprob: -7.104340553283691
    9. '_space' → logprob: -7.854340553283691
    10. ')' → logprob: -8.604340553283691

Token 94: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10027589648962021
    2. ' v' → logprob: -2.350275993347168
    3. '   ' → logprob: -9.600275993347168
    4. '	v' → logprob: -14.100275993347168
    5. '  ' → logprob: -14.725275993347168
    6. ' ' → logprob: -15.225275993347168
    7. '(v' → logprob: -16.10027503967285
    8. '`' → logprob: -17.22527503967285
    9. '    ' → logprob: -17.72527503967285
    10. ' (' → logprob: -17.97527503967285

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '.' → logprob: -16.125001907348633
    4. '１' → logprob: -17.000001907348633
    5. ',' → logprob: -17.625001907348633
    6. '2' → logprob: -17.875001907348633
    7. ')' → logprob: -18.312501907348633
    8. '' → logprob: -18.562501907348633
    9. 'v' → logprob: -18.812501907348633
    10. '```' → logprob: -18.812501907348633

Token 96: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.054500666621607e-06
    2. '_x' → logprob: -13.50000286102295
    3. ''x' → logprob: -14.25000286102295
    4. '1' → logprob: -14.37500286102295
    5. ' x' → logprob: -15.00000286102295
    6. '"x' → logprob: -17.250003814697266
    7. ')x' → logprob: -17.250003814697266
    8. '```' → logprob: -17.750003814697266
    9. '.x' → logprob: -18.000003814697266
    10. '.' → logprob: -18.250003814697266

Token 97: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0001589618914294988
    2. '*' → logprob: -8.75015926361084
    3. '<|end|>' → logprob: -15.12515926361084
    4. '*v' → logprob: -15.87515926361084
    5. ' ' → logprob: -17.125158309936523
    6. ' **' → logprob: -17.250158309936523
    7. ' ' → logprob: -17.750158309936523
    8. '*object' → logprob: -18.000158309936523
    9. ' *
' → logprob: -18.250158309936523
    10. '**' → logprob: -18.875158309936523

Token 98: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0031822288874536753
    2. ' v' → logprob: -5.753182411193848
    3. '<|end|>' → logprob: -12.628182411193848
    4. '	v' → logprob: -14.128182411193848
    5. ' ' → logprob: -15.503182411193848
    6. ')v' → logprob: -16.87818145751953
    7. '*v' → logprob: -16.87818145751953
    8. '_v' → logprob: -17.12818145751953
    9. '<|end|>' → logprob: -17.75318145751953
    10. '
' → logprob: -18.12818145751953

Token 99: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.62500286102295
    3. 'x' → logprob: -14.12500286102295
    4. 'ector' → logprob: -14.87500286102295
    5. 'ectors' → logprob: -15.12500286102295
    6. 'ect' → logprob: -17.312501907348633
    7. 'ecto' → logprob: -17.687501907348633
    8. '```' → logprob: -17.812501907348633
    9. '２' → logprob: -18.125001907348633
    10. '۲' → logprob: -18.750001907348633

Token 100: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5048530030981055e-06
    2. '<|end|>' → logprob: -13.875001907348633
    3. ' x' → logprob: -14.500001907348633
    4. ' ' → logprob: -17.250001907348633
    5. ''x' → logprob: -18.250001907348633
    6. ')x' → logprob: -18.500001907348633
    7. '	x' → logprob: -18.750001907348633
    8. '<|end|>' → logprob: -19.500001907348633
    9. '"x' → logprob: -19.625001907348633
    10. '  ' → logprob: -20.000001907348633

Token 101: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018163753673434258
    2. '+' → logprob: -4.018163681030273
    3. ' +
' → logprob: -11.518163681030273
    4. ' ' → logprob: -12.768163681030273
    5. ' +

' → logprob: -15.268163681030273
    6. ' ' → logprob: -15.518163681030273
    7. ' ,' → logprob: -16.268163681030273
    8. ' +
' → logprob: -16.393163681030273
    9. '+
' → logprob: -16.518163681030273
    10. ' plus' → logprob: -16.893163681030273

Token 102: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.038323063403367996
    2. 'v' → logprob: -3.288323163986206
    3. '<|end|>' → logprob: -8.913323402404785
    4. ' ' → logprob: -9.038323402404785
    5. '	v' → logprob: -11.038323402404785
    6. '    ' → logprob: -12.413323402404785
    7. ' ' → logprob: -13.413323402404785
    8. '```' → logprob: -14.038323402404785
    9. '.v' → logprob: -14.538323402404785
    10. ')v' → logprob: -14.538323402404785

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '<|end|>' → logprob: -15.625
    3. 'v' → logprob: -16.75
    4. ' ' → logprob: -17.0
    5. 'y' → logprob: -19.0
    6. '...' → logprob: -19.375
    7. '```' → logprob: -19.5
    8. '<|end|>' → logprob: -19.5
    9. '.' → logprob: -20.625
    10. '-' → logprob: -21.25

Token 104: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.6047699318733066e-05
    2. 'v' → logprob: -12.250016212463379
    3. ' ' → logprob: -12.625016212463379
    4. '<|end|>' → logprob: -12.875016212463379
    5. ' y' → logprob: -13.125016212463379
    6. 'vy' → logprob: -13.875016212463379
    7. '*y' → logprob: -14.250016212463379
    8. 'x' → logprob: -14.250016212463379
    9. ''y' → logprob: -15.250016212463379
    10. '*' → logprob: -15.625016212463379

Token 105: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0005037044174969196
    2. '*' → logprob: -7.6255035400390625
    3. ' ' → logprob: -12.000503540039062
    4. '<|end|>' → logprob: -12.125503540039062
    5. ' ' → logprob: -13.000503540039062
    6. '`' → logprob: -14.375503540039062
    7. ' **' → logprob: -14.625503540039062
    8. ' `' → logprob: -15.250503540039062
    9. ' *>' → logprob: -16.375503540039062
    10. '**' → logprob: -16.500503540039062

Token 106: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20142056047916412
    2. ' v' → logprob: -1.701420545578003
    3. '<|end|>' → logprob: -12.201420783996582
    4. '	v' → logprob: -14.201420783996582
    5. ' ' → logprob: -14.326420783996582
    6. ')v' → logprob: -14.826420783996582
    7. '*v' → logprob: -15.076420783996582
    8. 'y' → logprob: -16.076419830322266
    9. '$v' → logprob: -16.076419830322266
    10. '?v' → logprob: -16.826419830322266

Token 107: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0017619287827983499
    2. '1' → logprob: -6.3767619132995605
    3. ' y' → logprob: -10.251762390136719
    4. '2' → logprob: -11.001762390136719
    5. 'x' → logprob: -13.501762390136719
    6. '	y' → logprob: -13.751762390136719
    7. '<|end|>' → logprob: -13.751762390136719
    8. ''y' → logprob: -14.376762390136719
    9. 'yv' → logprob: -14.376762390136719
    10. 'ay' → logprob: -14.501762390136719

Token 108: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.512236498361744e-07
    2. ' y' → logprob: -15.125000953674316
    3. 'x' → logprob: -15.875000953674316
    4. '<|end|>' → logprob: -16.375
    5. ' ' → logprob: -17.5
    6. '*y' → logprob: -17.875
    7. '	y' → logprob: -18.75
    8. ''y' → logprob: -19.0
    9. '*' → logprob: -19.25
    10. '_y' → logprob: -19.375

Token 109: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10113926976919174
    2. '\n' → logprob: -3.9761393070220947
    3. '    
' → logprob: -3.9761393070220947
    4. '     
' → logprob: -3.9761393070220947
    5. ' 
' → logprob: -4.476139068603516
    6. '   ' → logprob: -4.601139068603516
    7. '  
' → logprob: -4.976139068603516
    8. '\' → logprob: -5.601139068603516
    9. '   
' → logprob: -6.101139068603516
    10. '    ' → logprob: -7.101139068603516

Token 110: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3850431442260742
    2. '   ' → logprob: -1.7600431442260742
    3. '    
' → logprob: -2.385043144226074
    4. '  
' → logprob: -4.010043144226074
    5. '\n' → logprob: -4.385043144226074
    6. ' 
' → logprob: -5.135043144226074
    7. '   
' → logprob: -5.635043144226074
    8. ' ' → logprob: -6.135043144226074
    9. '<|end|>' → logprob: -6.135043144226074
    10. ',' → logprob: -6.385043144226074

Token 111: ' print' (ID: 2123)
  Prédit: ' norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' norm' → logprob: -1.4407893419265747
    2. ' if' → logprob: -1.5657893419265747
    3. ' cross' → logprob: -1.9407893419265747
    4. '   ' → logprob: -2.565789222717285
    5. '     
' → logprob: -3.190789222717285
    6. '    ' → logprob: -3.315789222717285
    7. 'norm' → logprob: -3.440789222717285
    8. '    
' → logprob: -3.690789222717285
    9. 'if' → logprob: -4.065789222717285
    10. 'cos' → logprob: -4.190789222717285

Token 112: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5299748182296753
    2. '(dot' → logprob: -0.9049748182296753
    3. '('' → logprob: -6.029974937438965
    4. '(abs' → logprob: -6.404974937438965
    5. '("' → logprob: -6.529974937438965
    6. '(f' → logprob: -7.779974937438965
    7. '()' → logprob: -8.029974937438965
    8. '((' → logprob: -9.154974937438965
    9. '(round' → logprob: -9.154974937438965
    10. '(math' → logprob: -9.154974937438965

Token 113: 'YES' (ID: 31958)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.16203753650188446
    2. '(dot' → logprob: -2.6620376110076904
    3. 'abs' → logprob: -3.6620376110076904
    4. '{' → logprob: -3.6620376110076904
    5. '"' → logprob: -4.412037372589111
    6. ' dot' → logprob: -5.287037372589111
    7. '1' → logprob: -6.037037372589111
    8. '"{' → logprob: -6.037037372589111
    9. '.dot' → logprob: -6.912037372589111
    10. '.' → logprob: -7.037037372589111

Token 114: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0006554892170242965
    2. '")' → logprob: -7.875655651092529
    3. ' if' → logprob: -8.750655174255371
    4. 'if' → logprob: -9.500655174255371
    5. ' "' → logprob: -10.250655174255371
    6. '\n' → logprob: -13.625655174255371
    7. '```' → logprob: -13.875655174255371
    8. ''' → logprob: -14.000655174255371
    9. ' ' → logprob: -14.250655174255371
    10. ')' → logprob: -14.875655174255371

Token 115: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32637688517570496
    2. ')' → logprob: -1.3263769149780273
    3. 'if' → logprob: -4.701376914978027
    4. ',' → logprob: -5.826376914978027
    5. ' )' → logprob: -7.076376914978027
    6. ' ' → logprob: -9.701376914978027
    7. '   ' → logprob: -10.076376914978027
    8. ' ,' → logprob: -11.076376914978027
    9. '    ' → logprob: -11.951376914978027
    10. '  ' → logprob: -12.326376914978027

Token 116: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.7029851675033569
    2. ' dot' → logprob: -0.7029851675033569
    3. 'abs' → logprob: -5.2029852867126465
    4. 'dot' → logprob: -5.5779852867126465
    5. ' ' → logprob: -7.9529852867126465
    6. '(dot' → logprob: -9.327984809875488
    7. '(abs' → logprob: -11.327984809875488
    8. ' round' → logprob: -11.452984809875488
    9. '   ' → logprob: -11.577984809875488
    10. '  ' → logprob: -11.702984809875488

Token 117: '(dot' (ID: 151841)
  Prédit: '(dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.0009139667963609099
    2. '(' → logprob: -7.000914096832275
    3. '(abs' → logprob: -13.625913619995117
    4. '((' → logprob: -14.250913619995117
    5. '(
' → logprob: -14.875913619995117
    6. 'dot' → logprob: -16.625913619995117
    7. ' (' → logprob: -16.625913619995117
    8. '(round' → logprob: -17.250913619995117
    9. '(max' → logprob: -17.750913619995117
    10. '(sum' → logprob: -18.125913619995117

Token 118: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01937205158174038
    2. ' )' → logprob: -4.64437198638916
    3. ' <' → logprob: -5.39437198638916
    4. ' <=' → logprob: -6.01937198638916
    5. ')<=' → logprob: -7.14437198638916
    6. ' ==' → logprob: -7.26937198638916
    7. ')==' → logprob: -8.01937198638916
    8. ')<' → logprob: -8.14437198638916
    9. ' ' → logprob: -8.51937198638916
    10. '<' → logprob: -9.89437198638916

Token 119: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3643903136253357
    2. ' ==' → logprob: -1.6143903732299805
    3. '<' → logprob: -2.8643903732299805
    4. ' <=' → logprob: -4.1143903732299805
    5. '==' → logprob: -4.2393903732299805
    6. ' >' → logprob: -4.8643903732299805
    7. ' ' → logprob: -5.4893903732299805
    8. ')' → logprob: -5.7393903732299805
    9. '>' → logprob: -6.2393903732299805
    10. '<=' → logprob: -7.3643903732299805

Token 120: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47409120202064514
    2. '1' → logprob: -0.9740911722183228
    3. '0' → logprob: -11.599091529846191
    4. '   ' → logprob: -13.099091529846191
    5. ' ' → logprob: -13.724091529846191
    6. '  ' → logprob: -13.974091529846191
    7. '(' → logprob: -15.599091529846191
    8. '=' → logprob: -16.099090576171875
    9. '>' → logprob: -16.224090576171875
    10. '5' → logprob: -16.474090576171875

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016041290014982224
    2. ' ' → logprob: -4.141041278839111
    3. '0' → logprob: -12.26604175567627
    4. '   ' → logprob: -13.51604175567627
    5. '  ' → logprob: -15.26604175567627
    6. ' ' → logprob: -15.89104175567627
    7. '(' → logprob: -16.016040802001953
    8. '=' → logprob: -16.641040802001953
    9. '10' → logprob: -16.766040802001953
    10. '
' → logprob: -17.141040802001953

Token 122: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -5.5027299822540954e-05
    2. '0' → logprob: -10.250055313110352
    3. '-' → logprob: -10.875055313110352
    4. '-e' → logprob: -15.250055313110352
    5. '1' → logprob: -16.12505531311035
    6. 'E' → logprob: -16.37505531311035
    7. '.' → logprob: -16.62505531311035
    8. '
' → logprob: -16.87505531311035
    9. 'е' → logprob: -17.00005531311035
    10. '6' → logprob: -17.12505531311035

Token 123: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5048530030981055e-06
    2. 'e' → logprob: -14.375001907348633
    3. '9' → logprob: -15.250001907348633
    4. '```' → logprob: -16.125001907348633
    5. '0' → logprob: -16.250001907348633
    6. '6' → logprob: -16.375001907348633
    7. ' -' → logprob: -16.375001907348633
    8. '8' → logprob: -16.875001907348633
    9. '7' → logprob: -17.000001907348633
    10. '10' → logprob: -17.625001907348633

Token 124: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5620513558387756
    2. '8' → logprob: -1.3120512962341309
    3. '10' → logprob: -1.9370512962341309
    4. '12' → logprob: -4.812051296234131
    5. '7' → logprob: -5.812051296234131
    6. '-' → logprob: -5.937051296234131
    7. '6' → logprob: -6.062051296234131
    8. '09' → logprob: -8.812051773071289
    9. '15' → logprob: -9.312051773071289
    10. '14' → logprob: -9.437051773071289

Token 125: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.016072027385234833
    2. 'else' → logprob: -4.141071796417236
    3. ' and' → logprob: -10.891072273254395
    4. ' ' → logprob: -11.391072273254395
    5. ' or' → logprob: -12.516072273254395
    6. '	else' → logprob: -13.891072273254395
    7. 'and' → logprob: -13.891072273254395
    8. ')' → logprob: -14.016072273254395
    9. ',' → logprob: -15.016072273254395
    10. '   ' → logprob: -15.016072273254395

Token 126: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004099654499441385
    2. ' "' → logprob: -5.5040998458862305
    3. '"No' → logprob: -11.87909984588623
    4. ' ' → logprob: -12.25409984588623
    5. '   ' → logprob: -12.62909984588623
    6. ''' → logprob: -13.12909984588623
    7. '("' → logprob: -13.62909984588623
    8. '"N' → logprob: -14.12909984588623
    9. '"O' → logprob: -14.62909984588623
    10. '  ' → logprob: -14.75409984588623

Token 127: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.003291425062343478
    2. '"' → logprob: -5.753291606903076
    3. ' NO' → logprob: -9.628291130065918
    4. '"No' → logprob: -10.753291130065918
    5. ' ' → logprob: -11.503291130065918
    6. ' "' → logprob: -12.503291130065918
    7. '   ' → logprob: -12.878291130065918
    8. '"N' → logprob: -13.003291130065918
    9. 'N' → logprob: -13.378291130065918
    10. 'No' → logprob: -13.628291130065918

Token 128: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.008643528446555138
    2. ')' → logprob: -4.758643627166748
    3. ')")' → logprob: -10.50864315032959
    4. '")
' → logprob: -14.13364315032959
    5. '"' → logprob: -14.38364315032959
    6. ' )' → logprob: -15.50864315032959
    7. ')"' → logprob: -16.258644104003906
    8. '')' → logprob: -16.508644104003906
    9. ' ")' → logprob: -17.258644104003906
    10. ')
' → logprob: -17.383644104003906


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 126
Tokens correctement prédits (1ère position, stricte): 75
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 118
Précision stricte (1ère position): 59.52%
Précision adaptée (1ère position): 60.32%
Précision (top 10): 93.65%
================================================================================
