================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

def solve_cleaning_robot():
    # Directions for robot movement: up, down, left, right
    directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]

    while True:
        w, h = map(int, input().split())
        if w == 0 and h == 0:
            break

        room = [list(input()) for _ in range(h)]
        # List to store positions of dirty tiles and robot start position
        dirty_positions = []
        robot_pos = None

        # Parse the map, identify robot and dirty tiles
        for y in range(h):
            for x in range(w):
                if room[y][x] == 'o':
                    robot_pos = (y, x)
                elif room[y][x] == '*':
                    dirty_positions.append((y, x))

        # If no dirty tiles, 0 moves required
        if not dirty_positions:
            print(0)
            continue

        # Assign indices to dirty tiles and store positions in order:
        # index 0: robot start position, index 1..n: dirty tiles
        points = [robot_pos] + dirty_positions
        n = len(dirty_positions)

        # Precompute shortest distances between all points of interest using BFS
        dist = [[-1]*(n+1) for _ in range(n+1)]

        def bfs(start_y, start_x):
            # BFS to find minimum moves to all accessible tiles from (start_y, start_x)
            queue = deque()
            queue.append((start_y, start_x))
            visited = [[-1]*w for _ in range(h)]
            visited[start_y][start_x] = 0
            while queue:
                y, x = queue.popleft()
                for dy, dx in directions:
                    ny, nx = y + dy, x + dx
                    if 0 <= ny < h and 0 <= nx < w:
                        if room[ny][nx] != 'x' and visited[ny][nx] == -1:
                            visited[ny][nx] = visited[y][x] + 1
                            queue.append((ny, nx))
            return visited

        # For each point of interest, run BFS and store distances to others
        visited_list = []
        for i in range(n+1):
            y, x = points[i]
            visited_list.append(bfs(y, x))

        # Fill dist matrix with point-to-point distances
        possible = True
        for i in range(n+1):
            for j in range(n+1):
                if i == j:
                    dist[i][j] = 0
                else:
                    py, px = points[j]
                    dist[i][j] = visited_list[i][py][px]
                    if dist[i][j] == -1 and j != 0:
                        # If any dirty tile is unreachable from a point, problem has no solution
                        possible = False

        if not possible:
            print(-1)
            continue

        # We need to find minimum moves to cover all dirty tiles starting from robot_pos (index 0)
        # This is a Travelling Salesman Problem (TSP) variant with up to 10 dirty tiles
        # State: bitmask of visited dirty tiles and current position
        # DP to store minimal cost to cover visited tiles ending at position pos
        max_state = 1 << n  # bitmask for n dirty tiles
        dp = [[-1]*(n+1) for _ in range(max_state)]
        # Initialize dp: starting position, no dirty tiles cleaned yet
        dp[0][0] = 0

        for state in range(max_state):
            for pos in range(n+1):
                if dp[state][pos] == -1:
                    continue
                # Try to visit a new dirty tile next
                for next in range(1, n+1):
                    if not (state & (1 << (next-1))):
                        # If not visited this dirty tile yet
                        if dist[pos][next] != -1:
                            next_state = state | (1 << (next-1))
                            new_cost = dp[state][pos] + dist[pos][next]
                            if dp[next_state][next] == -1 or dp[next_state][next] > new_cost:
                                dp[next_state][next] = new_cost

        # Find minimal cost to visit all dirty tiles (all bits set)
        ans = -1
        final_state = max_state - 1
        for pos in range(1, n+1):
            if dp[final_state][pos] != -1:
                if ans == -1 or ans > dp[final_state][pos]:
                    ans = dp[final_state][pos]

        print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.944724440574646
    2. 'default' → logprob: -1.319724440574646
    3. 'deque' → logprob: -1.694724440574646
    4. ' defaultdict' → logprob: -2.5697245597839355
    5. 'Counter' → logprob: -2.8197245597839355
    6. ' abc' → logprob: -4.4447245597839355
    7. ' Counter' → logprob: -5.4447245597839355
    8. 'named' → logprob: -5.5697245597839355
    9. ' deque' → logprob: -6.5697245597839355
    10. '```' → logprob: -6.6947245597839355

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016872668638825417
    2. '\' → logprob: -5.516872882843018
    3. '\(' → logprob: -5.516872882843018
    4. '.' → logprob: -5.891872882843018
    5. '[' → logprob: -6.766872882843018
    6. '\n' → logprob: -7.141872882843018
    7. ' (' → logprob: -7.266872882843018
    8. '```' → logprob: -7.266872882843018
    9. '(
' → logprob: -7.766872882843018
    10. '\[' → logprob: -7.766872882843018

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028613658621907234
    2. '\' → logprob: -4.528613567352295
    3. '\n' → logprob: -5.403613567352295
    4. '\(' → logprob: -5.653613567352295
    5. 'a' → logprob: -6.278613567352295
    6. 'd' → logprob: -6.278613567352295
    7. '[' → logprob: -6.653613567352295
    8. 'newline' → logprob: -6.903613567352295
    9. 'import' → logprob: -7.403613567352295
    10. '.' → logprob: -7.903613567352295

Token 6: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003477359190583229
    2. ' bfs' → logprob: -6.378477573394775
    3. ' deque' → logprob: -7.753477573394775
    4. ' space' → logprob: -8.128477096557617
    5. ' process' → logprob: -8.753477096557617
    6. ' de' → logprob: -8.878477096557617
    7. ' ' → logprob: -9.003477096557617
    8. ' queue' → logprob: -9.128477096557617
    9. ' dequeue' → logprob: -9.878477096557617
    10. ' dfs' → logprob: -10.128477096557617

Token 7: '_clean' (ID: 47885)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011294436641037464
    2. '```' → logprob: -5.011294364929199
    3. '():' → logprob: -6.636294364929199
    4. '_' → logprob: -6.761294364929199
    5. ':' → logprob: -7.136294364929199
    6. '(:' → logprob: -8.3862943649292
    7. ' (' → logprob: -8.7612943649292
    8. '(
' → logprob: -9.6362943649292
    9. '<|end|>' → logprob: -9.6362943649292
    10. '((' → logprob: -9.7612943649292

Token 8: 'ing' (ID: 289)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23419474065303802
    2. '():' → logprob: -1.7341947555541992
    3. 'ing' → logprob: -4.609194755554199
    4. 'up' → logprob: -5.109194755554199
    5. '_up' → logprob: -5.734194755554199
    6. '(up' → logprob: -5.859194755554199
    7. 'liness' → logprob: -6.109194755554199
    8. '(:' → logprob: -6.234194755554199
    9. '```' → logprob: -6.734194755554199
    10. '(_:' → logprob: -7.109194755554199

Token 9: '_robot' (ID: 152478)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1565607786178589
    2. '_' → logprob: -2.0315608978271484
    3. '():' → logprob: -5.156560897827148
    4. '_:' → logprob: -5.656560897827148
    5. '_space' → logprob: -6.531560897827148
    6. '_task' → logprob: -6.656560897827148
    7. '_(' → logprob: -8.531560897827148
    8. '(_' → logprob: -8.531560897827148
    9. '```' → logprob: -8.531560897827148
    10. '(:' → logprob: -9.031560897827148

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27537116408348083
    2. '():' → logprob: -1.5253711938858032
    3. '(:' → logprob: -4.150371074676514
    4. ':' → logprob: -5.150371074676514
    5. '(":' → logprob: -7.150371074676514
    6. '(':' → logprob: -9.025371551513672
    7. '_' → logprob: -9.025371551513672
    8. '```' → logprob: -9.025371551513672
    9. '(_:' → logprob: -9.150371551513672
    10. '_:' → logprob: -9.525371551513672

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06820153445005417
    2. '```' → logprob: -2.8182015419006348
    3. '(' → logprob: -6.193201541900635
    4. '    
' → logprob: -7.068201541900635
    5. '\' → logprob: -7.193201541900635
    6. ':' → logprob: -7.193201541900635
    7. '`' → logprob: -8.318201065063477
    8. ' ' → logprob: -8.318201065063477
    9. '(n' → logprob: -8.943201065063477
    10. '
' → logprob: -8.943201065063477

Token 12: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3035268783569336
    2. 'n' → logprob: -1.6785268783569336
    3. 'q' → logprob: -2.3035268783569336
    4. ' queue' → logprob: -2.3035268783569336
    5. 'queue' → logprob: -2.3035268783569336
    6. 'r' → logprob: -3.0535268783569336
    7. ' n' → logprob: -3.5535268783569336
    8. 'd' → logprob: -3.8035268783569336
    9. 'robot' → logprob: -4.053526878356934
    10. '```' → logprob: -4.303526878356934

Token 13: ' Directions' (ID: 85422)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6410115957260132
    2. 'input' → logprob: -2.1410117149353027
    3. '   ' → logprob: -2.3910117149353027
    4. ' #' → logprob: -3.5160117149353027
    5. ' pass' → logprob: -3.5160117149353027
    6. ' n' → logprob: -3.5160117149353027
    7. ' task' → logprob: -3.5160117149353027
    8. ' queue' → logprob: -4.016011714935303
    9. 'pass' → logprob: -4.141011714935303
    10. ' robot' → logprob: -4.391011714935303

Token 14: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009885076433420181
    2. '   ' → logprob: -7.250988483428955
    3. ':' → logprob: -8.875988960266113
    4. '=' → logprob: -9.750988960266113
    5. '_d' → logprob: -10.500988960266113
    6. '```' → logprob: -11.625988960266113
    7. '_' → logprob: -11.750988960266113
    8. ' directions' → logprob: -12.250988960266113
    9. ' ' → logprob: -12.375988960266113
    10. ' =
' → logprob: -12.875988960266113

Token 15: ' robot' (ID: 20808)
  Prédit: ' moving'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moving' → logprob: -1.3102744817733765
    2. ' movement' → logprob: -1.3102744817733765
    3. ' the' → logprob: -1.4352744817733765
    4. ' robot' → logprob: -2.435274600982666
    5. ' movements' → logprob: -3.060274600982666
    6. ' ' → logprob: -3.185274600982666
    7. ' up' → logprob: -3.560274600982666
    8. ' (' → logprob: -5.685274600982666
    9. 'the' → logprob: -5.810274600982666
    10. ' moves' → logprob: -6.310274600982666

Token 16: ' movement' (ID: 12772)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.4020122289657593
    2. '   ' → logprob: -1.6520122289657593
    3. ' =' → logprob: -3.152012348175049
    4. '_d' → logprob: -3.777012348175049
    5. 'dire' → logprob: -3.902012348175049
    6. '_moves' → logprob: -4.027012348175049
    7. ' moves' → logprob: -4.402012348175049
    8. '_direction' → logprob: -5.152012348175049
    9. 's' → logprob: -5.652012348175049
    10. 'moves' → logprob: -6.152012348175049

Token 17: ':' (ID: 25)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.1447138786315918
    2. '   ' → logprob: -2.269713878631592
    3. 'dire' → logprob: -3.769713878631592
    4. ':' → logprob: -5.894713878631592
    5. '```' → logprob: -6.019713878631592
    6. ' direction' → logprob: -7.019713878631592
    7. '    ' → logprob: -7.769713878631592
    8. 'direction' → logprob: -8.14471435546875
    9. ' =' → logprob: -8.14471435546875
    10. 'd' → logprob: -8.39471435546875

Token 18: ' up' (ID: 869)
  Prédit: ' directions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.05621644854545593
    2. '   ' → logprob: -3.6812164783477783
    3. ' [(' → logprob: -4.931216239929199
    4. ' [' → logprob: -5.181216239929199
    5. 'dire' → logprob: -5.556216239929199
    6. ' ['' → logprob: -5.806216239929199
    7. '    ' → logprob: -6.431216239929199
    8. ' [
' → logprob: -6.556216239929199
    9. '```' → logprob: -6.556216239929199
    10. ' (' → logprob: -6.806216239929199

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03275211900472641
    2. ' ,' → logprob: -3.65775203704834
    3. '   ' → logprob: -5.40775203704834
    4. ' =' → logprob: -6.65775203704834
    5. ' (' → logprob: -9.03275203704834
    6. '',' → logprob: -9.53275203704834
    7. '`,' → logprob: -9.65775203704834
    8. '```' → logprob: -9.65775203704834
    9. '=' → logprob: -9.90775203704834
    10. '(' → logprob: -10.03275203704834

Token 20: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.4427965581417084
    2. 'down' → logprob: -1.0677965879440308
    3. ',' → logprob: -5.56779670715332
    4. ' ' → logprob: -5.69279670715332
    5. ' right' → logprob: -5.69279670715332
    6. ' ,' → logprob: -6.56779670715332
    7. ' (' → logprob: -7.44279670715332
    8. 'right' → logprob: -7.56779670715332
    9. '_down' → logprob: -7.69279670715332
    10. '0' → logprob: -8.44279670715332

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005527222994714975
    2. ' ,' → logprob: -5.255527019500732
    3. '`,' → logprob: -8.75552749633789
    4. '```' → logprob: -9.63052749633789
    5. '   ' → logprob: -9.88052749633789
    6. '``' → logprob: -12.25552749633789
    7. '',' → logprob: -12.50552749633789
    8. '_,' → logprob: -12.63052749633789
    9. '),' → logprob: -13.75552749633789
    10. '`' → logprob: -14.25552749633789

Token 22: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.03181109577417374
    2. 'left' → logprob: -3.531810998916626
    3. ' right' → logprob: -6.406811237335205
    4. ',' → logprob: -8.656810760498047
    5. 'right' → logprob: -9.406810760498047
    6. ',left' → logprob: -10.156810760498047
    7. '_left' → logprob: -10.406810760498047
    8. ' ' → logprob: -10.656810760498047
    9. ' ,' → logprob: -11.156810760498047
    10. '-left' → logprob: -11.531810760498047

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007011185516603291
    2. ' ,' → logprob: -8.250700950622559
    3. '_,' → logprob: -8.875700950622559
    4. '```' → logprob: -8.875700950622559
    5. '   ' → logprob: -9.875700950622559
    6. '`,' → logprob: -10.250700950622559
    7. ')' → logprob: -11.625700950622559
    8. 's' → logprob: -11.750700950622559
    9. '',' → logprob: -11.750700950622559
    10. ',
' → logprob: -12.000700950622559

Token 24: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6934536695480347
    2. 'right' → logprob: -0.6934536695480347
    3. '```' → logprob: -8.818453788757324
    4. ',right' → logprob: -9.443453788757324
    5. '_right' → logprob: -10.443453788757324
    6. ''' → logprob: -11.818453788757324
    7. 'Right' → logprob: -11.818453788757324
    8. '	right' → logprob: -12.068453788757324
    9. '/right' → logprob: -12.068453788757324
    10. '   ' → logprob: -12.568453788757324

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021811960265040398
    2. '```' → logprob: -4.6468119621276855
    3. '
' → logprob: -5.1468119621276855
    4. 'dire' → logprob: -5.5218119621276855
    5. ' directions' → logprob: -7.0218119621276855
    6. '    
' → logprob: -7.5218119621276855
    7. '``' → logprob: -8.396811485290527
    8. '\' → logprob: -9.271811485290527
    9. '\n' → logprob: -10.146811485290527
    10. 'moves' → logprob: -10.271811485290527

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006000490393489599
    2. '```' → logprob: -5.506000518798828
    3. '
' → logprob: -7.381000518798828
    4. ' directions' → logprob: -7.631000518798828
    5. 'dire' → logprob: -7.756000518798828
    6. '    
' → logprob: -8.631000518798828
    7. '``' → logprob: -9.881000518798828
    8. '\' → logprob: -10.381000518798828
    9. '    ' → logprob: -10.506000518798828
    10. 'moves' → logprob: -11.256000518798828

Token 27: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.18045160174369812
    2. 'dire' → logprob: -2.0554516315460205
    3. '   ' → logprob: -3.3054516315460205
    4. '```' → logprob: -8.930451393127441
    5. 'moves' → logprob: -9.180451393127441
    6. ' moves' → logprob: -9.430451393127441
    7. 'direction' → logprob: -11.305451393127441
    8. 'd' → logprob: -11.430451393127441
    9. 'dirs' → logprob: -11.555451393127441
    10. '[' → logprob: -11.680451393127441

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000805341056548059
    2. '=' → logprob: -7.125805377960205
    3. ' =[' → logprob: -14.875804901123047
    4. ':' → logprob: -15.500804901123047
    5. '[:]' → logprob: -16.750804901123047
    6. '=[]' → logprob: -16.750804901123047
    7. '=[' → logprob: -17.000804901123047
    8. '   ' → logprob: -17.125804901123047
    9. ' ' → logprob: -17.125804901123047
    10. '[' → logprob: -17.250804901123047

Token 29: ' [' (ID: 723)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.04595809057354927
    2. ' [' → logprob: -3.5459580421447754
    3. '[(' → logprob: -4.170958042144775
    4. '[' → logprob: -7.420958042144775
    5. ' ' → logprob: -10.920958518981934
    6. ' [
' → logprob: -11.670958518981934
    7. '   ' → logprob: -11.920958518981934
    8. ' deque' → logprob: -12.795958518981934
    9. ' [[' → logprob: -13.045958518981934
    10. '[
' → logprob: -14.170958518981934

Token 30: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6934577226638794
    2. '(-' → logprob: -0.6934577226638794
    3. '   ' → logprob: -8.81845760345459
    4. ' (' → logprob: -8.81845760345459
    5. ' (-' → logprob: -11.31845760345459
    6. '(up' → logprob: -13.31845760345459
    7. '[' → logprob: -15.44345760345459
    8. ' ' → logprob: -15.69345760345459
    9. '```' → logprob: -16.568458557128906
    10. '[-' → logprob: -16.693458557128906

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '2' → logprob: -18.625
    4. '-' → logprob: -18.75
    5. '0' → logprob: -19.0
    6. '```' → logprob: -19.8125
    7. '3' → logprob: -20.1875
    8. ')' → logprob: -20.625
    9. '4' → logprob: -21.0625
    10. '   ' → logprob: -21.1875

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. '),' → logprob: -14.12500286102295
    3. ' ,' → logprob: -14.12500286102295
    4. ',),' → logprob: -14.87500286102295
    5. '0' → logprob: -15.25000286102295
    6. '<|end|>' → logprob: -15.37500286102295
    7. '```' → logprob: -16.875001907348633
    8. '‌,' → logprob: -17.125001907348633
    9. ',)' → logprob: -17.625001907348633
    10. ')' → logprob: -17.875001907348633

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. ')' → logprob: -18.008615493774414
    4. '۰' → logprob: -20.508615493774414
    5. '   ' → logprob: -21.008615493774414
    6. '    ' → logprob: -21.133615493774414
    7. ' )' → logprob: -21.258615493774414
    8. ' ' → logprob: -21.258615493774414
    9. '  ' → logprob: -21.258615493774414
    10. '),' → logprob: -21.383615493774414

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. ')' → logprob: -18.25001335144043
    4. '۰' → logprob: -18.75001335144043
    5. '```' → logprob: -20.25001335144043
    6. '  ' → logprob: -20.37501335144043
    7. '٠' → logprob: -20.75001335144043
    8. '   ' → logprob: -20.93751335144043
    9. '),' → logprob: -21.00001335144043
    10. '

' → logprob: -21.25001335144043

Token 35: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -4.68022444692906e-05
    2. ')' → logprob: -11.125046730041504
    3. ')]' → logprob: -11.500046730041504
    4. '),(' → logprob: -11.500046730041504
    5. '),
' → logprob: -11.875046730041504
    6. ' ),' → logprob: -12.500046730041504
    7. '),

' → logprob: -14.500046730041504
    8. '],' → logprob: -15.625046730041504
    9. '   ' → logprob: -16.12504768371582
    10. ',' → logprob: -17.00004768371582

Token 36: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.693165123462677
    2. ' (' → logprob: -0.693165123462677
    3. '<|end|>' → logprob: -11.818164825439453
    4. ' ' → logprob: -12.443164825439453
    5. ')' → logprob: -12.943164825439453
    6. '1' → logprob: -12.943164825439453
    7. '0' → logprob: -14.068164825439453
    8. '  ' → logprob: -14.818164825439453
    9. '   ' → logprob: -15.318164825439453
    10. '    ' → logprob: -15.943164825439453

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '(' → logprob: -15.625109672546387
    4. '0' → logprob: -16.50010871887207
    5. '+' → logprob: -17.25010871887207
    6. ')' → logprob: -17.25010871887207
    7. '   ' → logprob: -18.12510871887207
    8. '```' → logprob: -18.62510871887207
    9. ' (' → logprob: -18.75010871887207
    10. '  ' → logprob: -19.12510871887207

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020234835392329842
    2. ' ,' → logprob: -8.875202178955078
    3. '),' → logprob: -10.250202178955078
    4. '0' → logprob: -10.750202178955078
    5. ')' → logprob: -13.000202178955078
    6. '<|end|>' → logprob: -13.625202178955078
    7. ' ' → logprob: -14.125202178955078
    8. '```' → logprob: -14.875202178955078
    9. '‌,' → logprob: -15.000202178955078
    10. '1' → logprob: -15.625202178955078

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42870402336120605
    2. ' ' → logprob: -1.053704023361206
    3. ',' → logprob: -12.928704261779785
    4. '```' → logprob: -14.678704261779785
    5. '  ' → logprob: -15.803704261779785
    6. ' ,' → logprob: -15.803704261779785
    7. ' ' → logprob: -16.42870330810547
    8. '   ' → logprob: -17.55370330810547
    9. ')' → logprob: -18.05370330810547
    10. '1' → logprob: -18.11620330810547

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '```' → logprob: -15.877184867858887
    4. '۰' → logprob: -17.689685821533203
    5. '1' → logprob: -17.814685821533203
    6. '   ' → logprob: -18.064685821533203
    7. ')' → logprob: -18.252185821533203
    8. '  ' → logprob: -18.252185821533203
    9. '-' → logprob: -18.439685821533203
    10. ',' → logprob: -18.689685821533203

Token 41: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -2.2842308680992573e-05
    2. ' ),' → logprob: -11.000022888183594
    3. ')' → logprob: -12.875022888183594
    4. '),(' → logprob: -12.875022888183594
    5. ',' → logprob: -15.125022888183594
    6. '],' → logprob: -15.500022888183594
    7. ' ' → logprob: -15.875022888183594
    8. ')]' → logprob: -16.375022888183594
    9. '   ' → logprob: -16.750022888183594
    10. '0' → logprob: -16.750022888183594

Token 42: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4776918590068817
    2. '(' → logprob: -0.9776918888092041
    3. '0' → logprob: -5.977691650390625
    4. ' ' → logprob: -6.852691650390625
    5. '<|end|>' → logprob: -12.227691650390625
    6. ' ' → logprob: -12.852691650390625
    7. '    ' → logprob: -13.102691650390625
    8. '```' → logprob: -13.352691650390625
    9. ',' → logprob: -13.477691650390625
    10. '   ' → logprob: -13.477691650390625

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '```' → logprob: -17.001928329467773
    4. ',' → logprob: -17.126928329467773
    5. '-' → logprob: -17.626928329467773
    6. '   ' → logprob: -17.751928329467773
    7. '۰' → logprob: -17.751928329467773
    8. '00' → logprob: -17.876928329467773
    9. '  ' → logprob: -18.376928329467773
    10. ')' → logprob: -18.876928329467773

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.171581091824919e-05
    2. ' ,' → logprob: -9.75007152557373
    3. '1' → logprob: -11.37507152557373
    4. '-' → logprob: -14.50007152557373
    5. ',-' → logprob: -14.75007152557373
    6. ' ' → logprob: -15.25007152557373
    7. ' -' → logprob: -15.62507152557373
    8. '<|end|>' → logprob: -16.250072479248047
    9. '```' → logprob: -16.250072479248047
    10. '‌,' → logprob: -16.500072479248047

Token 45: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000988030806183815
    2. ' -' → logprob: -7.000988006591797
    3. '1' → logprob: -9.500988006591797
    4. ' ' → logprob: -13.250988006591797
    5. '   ' → logprob: -18.375988006591797
    6. '```' → logprob: -18.750988006591797
    7. '  ' → logprob: -19.875988006591797
    8. ')' → logprob: -20.625988006591797
    9. '−' → logprob: -20.875988006591797
    10. '	' → logprob: -21.250988006591797

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. ',' → logprob: -16.3750057220459
    4. '```' → logprob: -16.7500057220459
    5. '2' → logprob: -17.1875057220459
    6. '0' → logprob: -17.8750057220459
    7. '   ' → logprob: -18.4375057220459
    8. ')' → logprob: -18.5625057220459
    9. '),' → logprob: -18.9375057220459
    10. '3' → logprob: -19.1875057220459

Token 47: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00024323153775185347
    2. '),(' → logprob: -8.750243186950684
    3. ')' → logprob: -10.375243186950684
    4. '(' → logprob: -11.000243186950684
    5. ')]' → logprob: -11.125243186950684
    6. ' ),' → logprob: -11.625243186950684
    7. ',' → logprob: -11.750243186950684
    8. '   ' → logprob: -13.000243186950684
    9. ''),' → logprob: -14.250243186950684
    10. '```' → logprob: -14.625243186950684

Token 48: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29902195930480957
    2. '0' → logprob: -1.5490219593048096
    3. '1' → logprob: -3.4240219593048096
    4. '(' → logprob: -4.7990217208862305
    5. ' (' → logprob: -5.2990217208862305
    6. ')' → logprob: -9.29902172088623
    7. '```' → logprob: -9.79902172088623
    8. '<|end|>' → logprob: -10.54902172088623
    9. '[' → logprob: -13.42402172088623
    10. ' )' → logprob: -13.54902172088623

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002887490263674408
    2. '1' → logprob: -8.625288963317871
    3. ' ' → logprob: -9.125288963317871
    4. '```' → logprob: -16.125288009643555
    5. '   ' → logprob: -16.625288009643555
    6. '  ' → logprob: -17.375288009643555
    7. '۰' → logprob: -17.812788009643555
    8. ',' → logprob: -18.500288009643555
    9. '``' → logprob: -19.125288009643555
    10. ')' → logprob: -19.250288009643555

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.452426608419046e-05
    2. '1' → logprob: -10.37503433227539
    3. ' ,' → logprob: -12.87503433227539
    4. '3' → logprob: -15.87503433227539
    5. '```' → logprob: -16.12503433227539
    6. '0' → logprob: -16.25003433227539
    7. '4' → logprob: -16.75003433227539
    8. '2' → logprob: -17.12503433227539
    9. '<|end|>' → logprob: -17.37503433227539
    10. '6' → logprob: -17.37503433227539

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04859089106321335
    2. ' ' → logprob: -3.048590898513794
    3. '0' → logprob: -12.923590660095215
    4. '```' → logprob: -14.798590660095215
    5. '+' → logprob: -15.798590660095215
    6. ')' → logprob: -16.17359161376953
    7. '   ' → logprob: -16.29859161376953
    8. '2' → logprob: -16.42359161376953
    9. '4' → logprob: -16.67359161376953
    10. '3' → logprob: -16.92359161376953

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011730826226994395
    2. ' ' → logprob: -6.75117301940918
    3. '+' → logprob: -13.62617301940918
    4. '0' → logprob: -13.87617301940918
    5. ')' → logprob: -15.12617301940918
    6. '```' → logprob: -15.50117301940918
    7. '   ' → logprob: -16.18867301940918
    8. '4' → logprob: -16.56367301940918
    9. '  ' → logprob: -17.06367301940918
    10. '2' → logprob: -17.31367301940918

Token 53: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000627610192168504
    2. ')' → logprob: -8.250627517700195
    3. ']' → logprob: -8.625627517700195
    4. '   ' → logprob: -9.750627517700195
    5. '])]' → logprob: -9.750627517700195
    6. ')])' → logprob: -9.875627517700195
    7. '),' → logprob: -11.500627517700195
    8. '')]' → logprob: -12.750627517700195
    9. ' )' → logprob: -13.375627517700195
    10. '])' → logprob: -13.625627517700195

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23508885502815247
    2. '```' → logprob: -1.86008882522583
    3. '
' → logprob: -3.61008882522583
    4. '    
' → logprob: -4.11008882522583
    5. 'n' → logprob: -6.23508882522583
    6. '\' → logprob: -6.73508882522583
    7. 'for' → logprob: -7.11008882522583
    8. 'x' → logprob: -7.23508882522583
    9. 'def' → logprob: -7.36008882522583
    10. '\n' → logprob: -7.61008882522583

Token 55: ' while' (ID: 2049)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.8414640426635742
    2. 'rows' → logprob: -1.3414640426635742
    3. 'n' → logprob: -2.091464042663574
    4. 'r' → logprob: -2.591464042663574
    5. '   ' → logprob: -2.841464042663574
    6. 'm' → logprob: -3.966464042663574
    7. 'for' → logprob: -5.091464042663574
    8. 'queue' → logprob: -5.091464042663574
    9. '```' → logprob: -5.466464042663574
    10. ' grid' → logprob: -5.966464042663574

Token 56: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.003200050676241517
    2. 'True' → logprob: -5.753200054168701
    3. ' not' → logprob: -11.503199577331543
    4. '(True' → logprob: -11.503199577331543
    5. ' ' → logprob: -14.878199577331543
    6. ' len' → logprob: -14.878199577331543
    7. ' queue' → logprob: -15.003199577331543
    8. ' input' → logprob: -15.253199577331543
    9. ' true' → logprob: -15.753199577331543
    10. ' robot' → logprob: -15.878199577331543

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000584249384701252
    2. '():' → logprob: -8.125584602355957
    3. '):' → logprob: -9.000584602355957
    4. '       ' → logprob: -9.500584602355957
    5. ':
' → logprob: -10.125584602355957
    6. '   ' → logprob: -10.625584602355957
    7. ':**' → logprob: -11.875584602355957
    8. ' :' → logprob: -12.125584602355957
    9. '<|end|>' → logprob: -12.250584602355957
    10. ',' → logprob: -14.000584602355957

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006161751225590706
    2. '<|end|>' → logprob: -6.006161689758301
    3. '   ' → logprob: -6.381161689758301
    4. '        
' → logprob: -7.006161689758301
    5. ' ' → logprob: -8.6311616897583
    6. '    
' → logprob: -8.8811616897583
    7. '
' → logprob: -8.8811616897583
    8. '```' → logprob: -9.2561616897583
    9. '    ' → logprob: -9.3811616897583
    10. '\n' → logprob: -9.7561616897583

Token 59: ' w' (ID: 286)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5943804383277893
    2. ' line' → logprob: -1.0943803787231445
    3. 'line' → logprob: -3.4693803787231445
    4. '```' → logprob: -3.4693803787231445
    5. 'n' → logprob: -3.9693803787231445
    6. '       ' → logprob: -4.5943803787231445
    7. 'row' → logprob: -5.4693803787231445
    8. 'input' → logprob: -5.5943803787231445
    9. 'try' → logprob: -5.5943803787231445
    10. 'grid' → logprob: -5.8443803787231445

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004718245472759008
    2. '=' → logprob: -6.37971830368042
    3. ' =' → logprob: -6.62971830368042
    4. ' ,' → logprob: -6.62971830368042
    5. ' ' → logprob: -8.754717826843262
    6. '   ' → logprob: -9.879717826843262
    7. '>' → logprob: -10.129717826843262
    8. ' ==' → logprob: -10.879717826843262
    9. '  ' → logprob: -11.004717826843262
    10. 'hile' → logprob: -11.129717826843262

Token 61: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.06994610279798508
    2. 'h' → logprob: -2.694946050643921
    3. ',h' → logprob: -12.4449462890625
    4. ' ' → logprob: -12.5699462890625
    5. 's' → logprob: -14.1949462890625
    6. '  ' → logprob: -14.5699462890625
    7. '	h' → logprob: -14.8199462890625
    8. '    ' → logprob: -15.3199462890625
    9. ' s' → logprob: -15.4449462890625
    10. '<|end|>' → logprob: -16.4449462890625

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.100211963057518
    2. '=' → logprob: -2.3502118587493896
    3. ',' → logprob: -12.850212097167969
    4. '=input' → logprob: -13.600212097167969
    5. ')' → logprob: -13.975212097167969
    6. ' ' → logprob: -16.10021209716797
    7. '<|end|>' → logprob: -16.10021209716797
    8. ' =
' → logprob: -16.72521209716797
    9. '=int' → logprob: -16.97521209716797
    10. ' =)' → logprob: -17.10021209716797

Token 63: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.02986341342329979
    2. 'map' → logprob: -3.5298633575439453
    3. ' input' → logprob: -10.029863357543945
    4. 'input' → logprob: -10.904863357543945
    5. ' ' → logprob: -11.029863357543945
    6. '	map' → logprob: -11.029863357543945
    7. ' list' → logprob: -12.154863357543945
    8. ' [' → logprob: -12.404863357543945
    9. '(map' → logprob: -12.779863357543945
    10. '   ' → logprob: -13.404863357543945

Token 64: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0033996712882071733
    2. '(' → logprob: -5.753399848937988
    3. '(input' → logprob: -8.628399848937988
    4. '(str' → logprob: -10.253399848937988
    5. 'int' → logprob: -12.503399848937988
    6. '=int' → logprob: -14.128399848937988
    7. '<int' → logprob: -14.378399848937988
    8. '[int' → logprob: -14.503399848937988
    9. '(
' → logprob: -14.628399848937988
    10. '(lambda' → logprob: -14.753399848937988

Token 65: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5747556090354919
    2. '(' → logprob: -1.1997556686401367
    3. '(input' → logprob: -2.3247556686401367
    4. '<|end|>' → logprob: -4.324755668640137
    5. '()' → logprob: -5.324755668640137
    6. '(token' → logprob: -5.949755668640137
    7. ',' → logprob: -5.949755668640137
    8. 'input' → logprob: -6.199755668640137
    9. '```' → logprob: -6.824755668640137
    10. '(int' → logprob: -6.949755668640137

Token 66: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740842878818512
    2. ' input' → logprob: -0.9740842580795288
    3. ')' → logprob: -12.09908390045166
    4. '(input' → logprob: -13.84908390045166
    5. '	input' → logprob: -15.34908390045166
    6. '=input' → logprob: -15.47408390045166
    7. ',input' → logprob: -16.349084854125977
    8. ' ' → logprob: -16.474084854125977
    9. ' )' → logprob: -16.474084854125977
    10. '   ' → logprob: -16.724084854125977

Token 67: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1038292869925499
    2. '()' → logprob: -2.3538293838500977
    3. '())' → logprob: -5.728829383850098
    4. '('' → logprob: -8.853829383850098
    5. '()[' → logprob: -10.353829383850098
    6. ')' → logprob: -10.478829383850098
    7. '());' → logprob: -10.853829383850098
    8. '()`' → logprob: -10.853829383850098
    9. '(()' → logprob: -10.978829383850098
    10. '()))' → logprob: -11.103829383850098

Token 68: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019376773852854967
    2. 'strip' → logprob: -6.2519378662109375
    3. 'rstrip' → logprob: -11.751937866210938
    4. '(split' → logprob: -13.876937866210938
    5. ' split' → logprob: -16.626937866210938
    6. 'spl' → logprob: -17.126937866210938
    7. 'read' → logprob: -17.251937866210938
    8. 'decode' → logprob: -18.501937866210938
    9. 'plit' → logprob: -19.251937866210938
    10. '_split' → logprob: -19.376937866210938

Token 69: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1221446543931961
    2. '))' → logprob: -2.3721446990966797
    3. '())' → logprob: -3.8721446990966797
    4. '()' → logprob: -7.49714469909668
    5. '()))' → logprob: -8.24714469909668
    6. '),' → logprob: -10.24714469909668
    7. ')
' → logprob: -11.99714469909668
    8. ')))' → logprob: -12.12214469909668
    9. '(' → logprob: -12.74714469909668
    10. ')`' → logprob: -12.74714469909668

Token 70: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18422268331050873
    2. '<|end|>' → logprob: -1.93422269821167
    3. ' if' → logprob: -4.43422269821167
    4. '   ' → logprob: -5.93422269821167
    5. 'if' (adapté à ' if') → logprob: -6.05922269821167
    6. '
' → logprob: -6.55922269821167
    7. '        ' → logprob: -6.80922269821167
    8. '\n' → logprob: -6.93422269821167
    9. ' ' → logprob: -6.93422269821167
    10. '<|end|>' → logprob: -7.30922269821167

Token 72: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0007367274374701083
    2. 'w' → logprob: -7.250736713409424
    3. ' (' → logprob: -10.750737190246582
    4. ' not' → logprob: -12.625737190246582
    5. ' ' → logprob: -13.875737190246582
    6. '(w' → logprob: -14.125737190246582
    7. '	w' → logprob: -15.625737190246582
    8. '(' → logprob: -15.750737190246582
    9. '   ' → logprob: -18.250736236572266
    10. '_w' → logprob: -18.500736236572266

Token 73: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.281559020280838
    2. '==' → logprob: -1.4065589904785156
    3. '=' → logprob: -8.156558990478516
    4. ' ' → logprob: -10.281558990478516
    5. '```' → logprob: -10.406558990478516
    6. ')' → logprob: -11.031558990478516
    7. ' =' → logprob: -11.281558990478516
    8. '0' → logprob: -11.906558990478516
    9. ']==' → logprob: -12.531558990478516
    10. ')==' → logprob: -12.656558990478516

Token 74: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231246948242188
    2. ' ' → logprob: -0.8981246948242188
    3. ' ' → logprob: -14.898124694824219
    4. '  ' → logprob: -15.085624694824219
    5. '   ' → logprob: -15.585624694824219
    6. '```' → logprob: -16.21062469482422
    7. '۰' → logprob: -16.27312469482422
    8. '<|end|>' → logprob: -16.58562469482422
    9. '<|end|>' → logprob: -17.21062469482422
    10. '=' → logprob: -17.39812469482422

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.613945101387799e-05
    2. ' ' → logprob: -9.375085830688477
    3. '```' → logprob: -14.375085830688477
    4. 'h' → logprob: -15.750085830688477
    5. 's' → logprob: -16.312585830688477
    6. '۰' → logprob: -16.500085830688477
    7. 'and' → logprob: -16.562585830688477
    8. '`' → logprob: -17.000085830688477
    9. '０' → logprob: -17.062585830688477
    10. 'b' → logprob: -17.312585830688477

Token 76: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018773240968585014
    2. 'and' → logprob: -4.018773078918457
    3. ' or' → logprob: -7.393773078918457
    4. ' ' → logprob: -12.018773078918457
    5. 'or' → logprob: -14.018773078918457
    6. '<|end|>' → logprob: -14.518773078918457
    7. '	and' → logprob: -15.018773078918457
    8. ',' → logprob: -15.393773078918457
    9. '```' → logprob: -17.018774032592773
    10. ' и' → logprob: -17.143774032592773

Token 77: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.005234475247561932
    2. 'h' → logprob: -5.255234241485596
    3. ' ' → logprob: -14.880234718322754
    4. '	h' → logprob: -15.505234718322754
    5. ' ' → logprob: -15.880234718322754
    6. '    ' → logprob: -18.880233764648438
    7. '   ' → logprob: -19.130233764648438
    8. '```' → logprob: -19.380233764648438
    9. ',h' → logprob: -19.630233764648438
    10. '  ' → logprob: -20.380233764648438

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09040525555610657
    2. '==' → logprob: -2.465405225753784
    3. ' ' → logprob: -7.215405464172363
    4. '=' → logprob: -8.340405464172363
    5. '<|end|>' → logprob: -8.465405464172363
    6. ' =' → logprob: -9.215405464172363
    7. ')' → logprob: -10.215405464172363
    8. '0' → logprob: -10.215405464172363
    9. ')==' → logprob: -10.715405464172363
    10. '  ' → logprob: -10.715405464172363

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868713676929474
    2. ' ' → logprob: -1.136871337890625
    3. ' ' → logprob: -15.511871337890625
    4. '  ' → logprob: -16.011871337890625
    5. '   ' → logprob: -17.261871337890625
    6. '۰' → logprob: -17.761871337890625
    7. '```' → logprob: -17.824371337890625
    8. '<|end|>' → logprob: -17.886871337890625
    9. '=' → logprob: -18.574371337890625
    10. ' ' → logprob: -19.199371337890625

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '۰' → logprob: -18.375709533691406
    4. '<|end|>' → logprob: -18.750709533691406
    5. '```' → logprob: -19.000709533691406
    6. '  ' → logprob: -19.500709533691406
    7. '   ' → logprob: -19.750709533691406
    8. ' ' → logprob: -19.813209533691406
    9. '<|end|>' → logprob: -20.313209533691406
    10. '०' → logprob: -20.875709533691406

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014919086243025959
    2. ':
' → logprob: -9.00014877319336
    3. ':return' → logprob: -11.12514877319336
    4. '       ' → logprob: -11.87514877319336
    5. '   ' → logprob: -13.37514877319336
    6. '):' → logprob: -13.50014877319336
    7. ' :' → logprob: -14.62514877319336
    8. '           ' → logprob: -16.12514877319336
    9. '<|end|>' → logprob: -16.12514877319336
    10. ',' → logprob: -16.37514877319336

Token 82: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024972205981612206
    2. '           ' → logprob: -3.7749722003936768
    3. ':' → logprob: -6.399972438812256
    4. '   ' → logprob: -10.899971961975098
    5. '<|end|>' → logprob: -12.024971961975098
    6. '\n' → logprob: -12.149971961975098
    7. '
' → logprob: -12.274971961975098
    8. ':
' → logprob: -12.524971961975098
    9. ',' → logprob: -12.774971961975098
    10. '      ' → logprob: -12.899971961975098

Token 83: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7620271444320679
    2. '       ' → logprob: -1.0120271444320679
    3. '           ' → logprob: -2.0120272636413574
    4. 'break' (adapté à ' break') → logprob: -3.3870272636413574
    5. ' return' → logprob: -7.137027263641357
    6. 'return' → logprob: -7.762027263641357
    7. '               ' → logprob: -8.1370267868042
    8. '	break' → logprob: -8.1370267868042
    9. '   ' → logprob: -8.2620267868042
    10. '```' → logprob: -9.1370267868042

Token 84: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15568214654922485
    2. '       ' → logprob: -2.28068208694458
    3. '<|end|>' → logprob: -3.40568208694458
    4. '```' → logprob: -5.53068208694458
    5. '        
' → logprob: -6.15568208694458
    6. '<|end|>' → logprob: -7.28068208694458
    7. '    
' → logprob: -7.40568208694458
    8. '   ' → logprob: -8.030682563781738
    9. 'newline' → logprob: -8.155682563781738
    10. '
' → logprob: -8.780682563781738

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10809782147407532
    2. '        
' → logprob: -2.733097791671753
    3. '    
' → logprob: -4.108098030090332
    4. '
' → logprob: -5.108098030090332
    5. '   ' → logprob: -5.233098030090332
    6. '```' → logprob: -5.233098030090332
    7. '<|end|>' → logprob: -5.858098030090332
    8. '  
' → logprob: -7.358098030090332
    9. '    ' → logprob: -9.358098030090332
    10. '       
' → logprob: -9.608098030090332

Token 86: ' room' (ID: 3435)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.7891815900802612
    2. ' grid' → logprob: -1.1641815900802612
    3. 'room' (adapté à ' room') → logprob: -1.6641815900802612
    4. ' room' → logprob: -4.039181709289551
    5. '       ' → logprob: -4.164181709289551
    6. 'graph' → logprob: -5.539181709289551
    7. 'house' → logprob: -6.289181709289551
    8. 'floor' → logprob: -6.414181709289551
    9. '   ' → logprob: -6.914181709289551
    10. 'map' → logprob: -7.664181709289551

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0236409492790699
    2. '=' → logprob: -4.523641109466553
    3. '_map' → logprob: -4.648641109466553
    4. '_' → logprob: -6.273641109466553
    5. '_grid' → logprob: -8.023640632629395
    6. '[' → logprob: -8.023640632629395
    7. ' ' → logprob: -8.898640632629395
    8. '   ' → logprob: -10.273640632629395
    9. '_size' → logprob: -10.273640632629395
    10. '_layout' → logprob: -10.648640632629395

Token 88: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48325875401496887
    2. ' [' → logprob: -0.9832587242126465
    3. '[input' → logprob: -5.6082587242126465
    4. ' []' → logprob: -6.7332587242126465
    5. '[int' → logprob: -7.1082587242126465
    6. '[]' → logprob: -7.2332587242126465
    7. '[str' → logprob: -7.8582587242126465
    8. '[s' → logprob: -8.358259201049805
    9. '[new' → logprob: -8.608259201049805
    10. '[line' → logprob: -8.733259201049805

Token 89: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07909026741981506
    2. ' list' → logprob: -2.5790903568267822
    3. 'input' → logprob: -8.579090118408203
    4. ' input' → logprob: -11.829090118408203
    5. '[list' → logprob: -12.454090118408203
    6. '[input' → logprob: -14.704090118408203
    7. '(list' → logprob: -15.329090118408203
    8. ' [' → logprob: -15.579090118408203
    9. '   ' → logprob: -15.829090118408203
    10. '	list' → logprob: -16.329090118408203

Token 90: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04873724654316902
    2. '(map' → logprob: -3.0487372875213623
    3. 'input' → logprob: -9.048737525939941
    4. '(' → logprob: -10.673737525939941
    5. 'map' → logprob: -11.798737525939941
    6. '()' → logprob: -14.173737525939941
    7. ' input' → logprob: -15.548737525939941
    8. ' (' → logprob: -15.673737525939941
    9. '<input' → logprob: -15.673737525939941
    10. '=input' → logprob: -15.673737525939941

Token 91: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.032921116799116135
    2. '().' → logprob: -3.657921075820923
    3. '()' → logprob: -5.032921314239502
    4. '()]' → logprob: -10.032920837402344
    5. ' ())' → logprob: -11.657920837402344
    6. ')' → logprob: -12.032920837402344
    7. '()))' → logprob: -12.282920837402344
    8. '(' → logprob: -12.282920837402344
    9. '())
' → logprob: -12.907920837402344
    10. '()
' → logprob: -13.282920837402344

Token 92: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1839875727891922
    2. 'for' → logprob: -1.8089876174926758
    3. '()' → logprob: -5.558987617492676
    4. ')' → logprob: -8.183987617492676
    5. '	for' → logprob: -9.683987617492676
    6. '   ' → logprob: -11.058987617492676
    7. ']' → logprob: -11.683987617492676
    8. ' ' → logprob: -12.433987617492676
    9. '           ' → logprob: -13.308987617492676
    10. '    ' → logprob: -13.433987617492676

Token 93: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.25994861125946045
    2. '_' → logprob: -2.00994873046875
    3. ' range' → logprob: -2.38494873046875
    4. ' ' → logprob: -6.25994873046875
    5. 'range' → logprob: -7.38494873046875
    6. '_range' → logprob: -9.38494873046875
    7. '<|end|>' → logprob: -9.88494873046875
    8. ' in' → logprob: -10.00994873046875
    9. '(range' → logprob: -10.13494873046875
    10. '<|end|>' → logprob: -11.25994873046875

Token 94: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7243944406509399
    2. 'range' → logprob: -0.7243944406509399
    3. ' in' → logprob: -3.5993943214416504
    4. '(range' → logprob: -6.22439432144165
    5. 'in' → logprob: -6.72439432144165
    6. '	range' → logprob: -9.224394798278809
    7. ' xrange' → logprob: -9.599394798278809
    8. ')' → logprob: -10.474394798278809
    9. '_range' → logprob: -11.849394798278809
    10. ' ' → logprob: -12.224394798278809

Token 95: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02975187823176384
    2. 'range' → logprob: -3.529751777648926
    3. '	range' → logprob: -14.404751777648926
    4. '(range' → logprob: -14.654751777648926
    5. ' xrange' → logprob: -15.529751777648926
    6. ' ' → logprob: -15.779751777648926
    7. '_range' → logprob: -16.904752731323242
    8. ' h' → logprob: -18.029752731323242
    9. ')' → logprob: -18.404752731323242
    10. '.range' → logprob: -18.904752731323242

Token 96: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0003890854713972658
    2. '(' → logprob: -8.250389099121094
    3. ' (' → logprob: -9.000389099121094
    4. ' h' → logprob: -12.875389099121094
    5. 'h' → logprob: -13.500389099121094
    6. '	h' → logprob: -15.000389099121094
    7. ' ' → logprob: -16.750389099121094
    8. '(height' → logprob: -17.375389099121094
    9. ')' → logprob: -17.625389099121094
    10. '(
' → logprob: -18.125389099121094

Token 97: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012740483507514
    2. ')' → logprob: -4.387740612030029
    3. ']' → logprob: -8.387740135192871
    4. '))' → logprob: -14.387740135192871
    5. ')}' → logprob: -14.512740135192871
    6. ' )' → logprob: -15.012740135192871
    7. ')
' → logprob: -15.012740135192871
    8. '   ' → logprob: -15.637740135192871
    9. ')],' → logprob: -15.637740135192871
    10. '`]' → logprob: -15.637740135192871

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15310300886631012
    2. '
' → logprob: -2.9031031131744385
    3. '        
' → logprob: -3.4031031131744385
    4. ' 
' → logprob: -4.278102874755859
    5. '    
' → logprob: -5.278102874755859
    6. '   ' → logprob: -5.278102874755859
    7. '<|end|>' → logprob: -5.403102874755859
    8. '    ' → logprob: -5.778102874755859
    9. '  
' → logprob: -5.903102874755859
    10. ' ' → logprob: -5.903102874755859

Token 99: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0447171926498413
    2. 'visited' → logprob: -1.1697171926498413
    3. '        
' → logprob: -2.294717311859131
    4. 'start' → logprob: -3.294717311859131
    5. 'positions' → logprob: -3.419717311859131
    6. ' visited' → logprob: -3.669717311859131
    7. 'targets' → logprob: -4.169717311859131
    8. 'found' → logprob: -4.294717311859131
    9. '        ' → logprob: -4.294717311859131
    10. 'pos' → logprob: -4.794717311859131

Token 100: ' List' (ID: 2655)
  Prédit: 'dust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dust' → logprob: -1.346123456954956
    2. 'dirty' → logprob: -1.846123456954956
    3. 'start' → logprob: -2.221123456954956
    4. 'pos' → logprob: -2.596123456954956
    5. 'd' → logprob: -2.721123456954956
    6. 'clean' → logprob: -2.721123456954956
    7. 'robot' → logprob: -2.846123456954956
    8. 'positions' → logprob: -3.471123456954956
    9. ' dirty' → logprob: -4.096123695373535
    10. 'robots' → logprob: -4.096123695373535

Token 101: ' to' (ID: 316)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5319823026657104
    2. '_positions' → logprob: -1.5319823026657104
    3. 'of' → logprob: -3.281982421875
    4. 'positions' → logprob: -3.531982421875
    5. '<|end|>' → logprob: -3.531982421875
    6. '_of' → logprob: -3.781982421875
    7. '       ' → logprob: -4.406982421875
    8. '_clean' → logprob: -4.906982421875
    9. '_robot' → logprob: -5.156982421875
    10. 'to' → logprob: -5.281982421875

Token 102: ' store' (ID: 4897)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.6611031889915466
    2. ' find' → logprob: -1.2861032485961914
    3. '_find' → logprob: -3.1611032485961914
    4. 'identify' → logprob: -3.6611032485961914
    5. '<|end|>' → logprob: -4.036103248596191
    6. 'positions' → logprob: -4.536103248596191
    7. '_positions' → logprob: -4.786103248596191
    8. 'deque' → logprob: -5.036103248596191
    9. ' positions' → logprob: -5.036103248596191
    10. ' identify' → logprob: -5.286103248596191

Token 103: ' positions' (ID: 15897)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5454747676849365
    2. '<|end|>' → logprob: -0.9204747676849365
    3. 'of' → logprob: -4.920475006103516
    4. '<|end|>' → logprob: -5.545475006103516
    5. ' ' → logprob: -5.670475006103516
    6. ')' → logprob: -6.795475006103516
    7. ',' → logprob: -7.045475006103516
    8. ' for' → logprob: -7.295475006103516
    9. '    ' → logprob: -7.295475006103516
    10. '[' → logprob: -7.295475006103516

Token 105: ' dirty' (ID: 32042)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.33073586225509644
    2. 'dust' → logprob: -2.455735921859741
    3. ''*' → logprob: -3.330735921859741
    4. 'the' → logprob: -3.705735921859741
    5. 'dirty' → logprob: -3.705735921859741
    6. 'targets' → logprob: -4.205735683441162
    7. 'robots' → logprob: -4.705735683441162
    8. ''' → logprob: -4.705735683441162
    9. ' dust' → logprob: -4.830735683441162
    10. ''s' → logprob: -4.830735683441162

Token 106: ' tiles' (ID: 33001)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spots' → logprob: -1.0213807821273804
    2. '_sp' → logprob: -1.6463807821273804
    3. '_positions' → logprob: -2.02138090133667
    4. '_cells' → logprob: -2.39638090133667
    5. ' spots' → logprob: -2.52138090133667
    6. 'cells' → logprob: -2.64638090133667
    7. 'positions' → logprob: -3.27138090133667
    8. 'sp' → logprob: -5.27138090133667
    9. '_tiles' → logprob: -5.27138090133667
    10. '<|end|>' → logprob: -5.27138090133667

Token 107: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0798794031143188
    2. 'd' → logprob: -1.8298794031143188
    3. '_dirty' → logprob: -1.9548794031143188
    4. 's' → logprob: -2.2048792839050293
    5. 'positions' → logprob: -2.8298792839050293
    6. 'dirty' → logprob: -3.0798792839050293
    7. ' ' → logprob: -3.3298792839050293
    8. '_positions' → logprob: -3.9548792839050293
    9. ' ,' → logprob: -4.204879283905029
    10. '_' → logprob: -4.579879283905029

Token 108: ' robot' (ID: 20808)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.33607128262519836
    2. ' robot' → logprob: -1.961071252822876
    3. 'the' → logprob: -2.586071252822876
    4. ' starting' → logprob: -4.086071491241455
    5. 'robot' → logprob: -4.336071491241455
    6. ' clean' → logprob: -4.961071491241455
    7. ' start' → logprob: -5.086071491241455
    8. ''s' → logprob: -5.336071491241455
    9. 'clean' → logprob: -5.586071491241455
    10. ''' → logprob: -5.711071491241455

Token 109: ' start' (ID: 1604)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.027131108567118645
    2. 'positions' → logprob: -4.652131080627441
    3. 's' → logprob: -4.902131080627441
    4. '_' → logprob: -5.277131080627441
    5. ',' → logprob: -6.402131080627441
    6. '_pos' → logprob: -6.652131080627441
    7. '_position' → logprob: -8.277131080627441
    8. '_points' → logprob: -8.402131080627441
    9. '_clean' → logprob: -8.652131080627441
    10. ' positions' → logprob: -8.777131080627441

Token 110: ' position' (ID: 4010)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.7098615765571594
    2. 'positions' → logprob: -1.0848615169525146
    3. ' positions' → logprob: -1.9598615169525146
    4. '_points' → logprob: -5.084861755371094
    5. ',' → logprob: -5.334861755371094
    6. 's' → logprob: -5.834861755371094
    7. 'points' → logprob: -5.834861755371094
    8. ' points' → logprob: -5.959861755371094
    9. '_pos' → logprob: -5.959861755371094
    10. '<|end|>' → logprob: -6.334861755371094

Token 111: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7939120531082153
    2. 'positions' → logprob: -1.2939120531082153
    3. 's' → logprob: -2.418911933898926
    4. ',' → logprob: -2.793911933898926
    5. ' positions' → logprob: -3.418911933898926
    6. '    ' → logprob: -3.668911933898926
    7. '_positions' → logprob: -3.918911933898926
    8. '        ' → logprob: -4.168911933898926
    9. ' ' → logprob: -5.168911933898926
    10. '   ' → logprob: -5.668911933898926

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2881157398223877
    2. 'positions' → logprob: -1.6631157398223877
    3. ' positions' → logprob: -3.5381157398223877
    4. '        ' → logprob: -4.538115501403809
    5. 'dirty' → logprob: -5.288115501403809
    6. '_positions' → logprob: -5.538115501403809
    7. ',' → logprob: -6.163115501403809
    8. ' dirty' → logprob: -6.538115501403809
    9. 's' → logprob: -6.663115501403809
    10. '_dirty' → logprob: -6.663115501403809

Token 113: ' dirty' (ID: 32042)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.45204445719718933
    2. ' dirty' → logprob: -2.2020444869995117
    3. ' spots' → logprob: -2.7020444869995117
    4. ' points' → logprob: -3.2020444869995117
    5. ' targets' → logprob: -3.2020444869995117
    6. 'positions' → logprob: -3.4520444869995117
    7. 'dirty' (adapté à ' dirty') → logprob: -3.5770444869995117
    8. ' pos' → logprob: -4.452044486999512
    9. 'targets' → logprob: -4.577044486999512
    10. 'pos' → logprob: -5.202044486999512

Token 114: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.03499213233590126
    2. '_tiles' → logprob: -3.409992218017578
    3. ' =' → logprob: -8.159992218017578
    4. 's' → logprob: -8.159992218017578
    5. '_sp' → logprob: -8.534992218017578
    6. '_points' → logprob: -8.534992218017578
    7. '_' → logprob: -8.534992218017578
    8. '_spaces' → logprob: -9.659992218017578
    9. '_places' → logprob: -10.284992218017578
    10. '_pos' → logprob: -10.909992218017578

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009777694940567017
    2. '=' → logprob: -4.634777545928955
    3. ',' → logprob: -11.634778022766113
    4. '=[]' → logprob: -11.759778022766113
    5. ')' → logprob: -13.009778022766113
    6. 's' → logprob: -14.134778022766113
    7. ' ' → logprob: -14.634778022766113
    8. '<|end|>' → logprob: -15.134778022766113
    9. ' =)' → logprob: -15.509778022766113
    10. ':' → logprob: -15.634778022766113

Token 116: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.008640216663479805
    2. ' []' → logprob: -4.758640289306641
    3. '[' → logprob: -10.75864028930664
    4. '[]
' → logprob: -12.75864028930664
    5. '[]}' → logprob: -14.50864028930664
    6. '[],' → logprob: -15.13364028930664
    7. ' [' → logprob: -15.50864028930664
    8. '[(' → logprob: -15.75864028930664
    9. '[]

' → logprob: -16.38364028930664
    10. '[]>' → logprob: -16.50864028930664

Token 117: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.043684959411621
    2. '       ' → logprob: -1.668684959411621
    3. '<|end|>' → logprob: -1.918684959411621
    4. '    ' → logprob: -2.543684959411621
    5. '   ' → logprob: -3.043684959411621
    6. '
' → logprob: -3.043684959411621
    7. '    
' → logprob: -3.543684959411621
    8. ',' → logprob: -3.793684959411621
    9. '        
' → logprob: -3.918684959411621
    10. '        ' → logprob: -4.418684959411621

Token 118: ' robot' (ID: 20808)
  Prédit: 'robot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robot' (adapté à ' robot') → logprob: -0.46597036719322205
    2. ' robot' → logprob: -1.5909703969955444
    3. 'start' → logprob: -2.465970277786255
    4. ' start' → logprob: -3.215970277786255
    5. '       ' → logprob: -3.590970277786255
    6. ' for' → logprob: -4.715970516204834
    7. 'for' → logprob: -5.215970516204834
    8. 'r' → logprob: -7.215970516204834
    9. '        ' → logprob: -8.340970039367676
    10. '        
' → logprob: -8.340970039367676

Token 119: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.26752403378486633
    2. '_x' → logprob: -1.767524003982544
    3. '_position' → logprob: -3.017524003982544
    4. '_' → logprob: -4.392524242401123
    5. '_positions' → logprob: -7.017524242401123
    6. '_row' → logprob: -7.267524242401123
    7. '_r' → logprob: -7.642524242401123
    8. '_y' → logprob: -8.517523765563965
    9. ' =' → logprob: -8.892523765563965
    10. '_i' → logprob: -9.392523765563965

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38707584142684937
    2. '=' → logprob: -1.1370759010314941
    3. ')' → logprob: -9.012075424194336
    4. ',' → logprob: -10.137075424194336
    5. '   ' → logprob: -11.387075424194336
    6. ' ' → logprob: -11.637075424194336
    7. ' =
' → logprob: -12.512075424194336
    8. 's' → logprob: -12.887075424194336
    9. '=[]' → logprob: -12.887075424194336
    10. '_idx' → logprob: -13.012075424194336

Token 121: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5361254215240479
    2. ' None' → logprob: -0.9111254215240479
    3. '(None' → logprob: -5.161125183105469
    4. '(-' → logprob: -5.911125183105469
    5. '(' → logprob: -6.411125183105469
    6. ' (' → logprob: -6.536125183105469
    7. ' (-' → logprob: -7.286125183105469
    8. '()' → logprob: -7.911125183105469
    9. ' ()' → logprob: -8.411125183105469
    10. ' ' → logprob: -9.661125183105469

Token 122: '

' (ID: 279)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9817298650741577
    2. '<|end|>' → logprob: -1.1067298650741577
    3. '       ' → logprob: -1.7317298650741577
    4. 'for' → logprob: -2.4817299842834473
    5. '
' → logprob: -3.9817299842834473
    6. '   ' → logprob: -5.106729984283447
    7. '<|end|>' → logprob: -6.231729984283447
    8. ' ' → logprob: -6.481729984283447
    9. '  
' → logprob: -6.606729984283447
    10. '        
' → logprob: -6.981729984283447

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5758265852928162
    2. '
' → logprob: -1.575826644897461
    3. '    
' → logprob: -2.700826644897461
    4. ' for' → logprob: -3.325826644897461
    5. '        
' → logprob: -3.325826644897461
    6. ' 
' → logprob: -3.325826644897461
    7. '   ' → logprob: -3.825826644897461
    8. '  
' → logprob: -4.200826644897461
    9. 'for' → logprob: -5.075826644897461
    10. '<|end|>' → logprob: -5.575826644897461

Token 124: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13168291747570038
    2. ' for' → logprob: -2.131682872772217
    3. '       ' → logprob: -5.381682872772217
    4. '        
' → logprob: -10.256683349609375
    5. '
' → logprob: -10.381683349609375
    6. '        ' → logprob: -10.631683349609375
    7. ' ' → logprob: -11.006683349609375
    8. '    ' → logprob: -11.506683349609375
    9. '   ' → logprob: -11.756683349609375
    10. '	for' → logprob: -12.131683349609375

Token 125: ' Parse' (ID: 26701)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008636554703116417
    2. ' for' → logprob: -4.758636474609375
    3. '       ' → logprob: -10.758636474609375
    4. '#' → logprob: -14.633636474609375
    5. '   ' → logprob: -15.508636474609375
    6. 'For' → logprob: -16.383636474609375
    7. '
' → logprob: -16.758636474609375
    8. '	for' → logprob: -17.258636474609375
    9. '```' → logprob: -17.883636474609375
    10. ' ' → logprob: -18.383636474609375

Token 126: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7257301211357117
    2. ' the' → logprob: -1.3507301807403564
    3. '       ' → logprob: -2.6007301807403564
    4. 'for' → logprob: -2.7257301807403564
    5. ' room' → logprob: -3.3507301807403564
    6. '        ' → logprob: -3.9757301807403564
    7. 'the' → logprob: -4.100729942321777
    8. '(room' → logprob: -4.350729942321777
    9. '<|end|>' → logprob: -4.975729942321777
    10. '	room' → logprob: -5.350729942321777

Token 127: ' map' (ID: 4014)
  Prédit: 'room'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'room' → logprob: -0.05006340891122818
    2. ' room' → logprob: -3.425063371658325
    3. 'for' → logprob: -4.550063610076904
    4. ' for' → logprob: -5.175063610076904
    5. 'grid' → logprob: -11.050063133239746
    6. 'range' → logprob: -11.300063133239746
    7. 'h' → logprob: -11.425063133239746
    8. ' ' → logprob: -12.300063133239746
    9. '(room' → logprob: -12.300063133239746
    10. ' grid' → logprob: -12.550063133239746

Token 128: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7780700922012329
    2. '       ' → logprob: -1.153070092201233
    3. '<|end|>' → logprob: -1.653070092201233
    4. 'for' → logprob: -4.028069972991943
    5. '<|end|>' → logprob: -4.653069972991943
    6. '        
' → logprob: -6.653069972991943
    7. '	for' → logprob: -7.028069972991943
    8. '
' → logprob: -7.278069972991943
    9. '  
' → logprob: -7.403069972991943
    10. ',' → logprob: -7.778069972991943

Token 129: ' identify' (ID: 11410)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2859649062156677
    2. '       ' → logprob: -2.1609649658203125
    3. 'for' → logprob: -2.2859649658203125
    4. '<|end|>' → logprob: -3.6609649658203125
    5. '        
' → logprob: -6.7859649658203125
    6. '        ' → logprob: -6.7859649658203125
    7. ' ' → logprob: -7.2859649658203125
    8. '<|end|>' → logprob: -7.4109649658203125
    9. ' ' → logprob: -7.5359649658203125
    10. ' with' → logprob: -7.6609649658203125

Token 130: ' robot' (ID: 20808)
  Prédit: ' robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robot' → logprob: -0.15934687852859497
    2. ' the' → logprob: -2.15934681892395
    3. 'robot' → logprob: -4.284347057342529
    4. ' positions' → logprob: -5.034347057342529
    5. ' for' → logprob: -5.409347057342529
    6. ' all' → logprob: -6.159347057342529
    7. '(robot' → logprob: -6.284347057342529
    8. 'the' → logprob: -6.909347057342529
    9. '       ' → logprob: -7.534347057342529
    10. '    ' → logprob: -8.034346580505371

Token 131: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05515950173139572
    2. ',' → logprob: -4.180159568786621
    3. 'and' → logprob: -4.305159568786621
    4. 'position' → logprob: -5.430159568786621
    5. '_pos' → logprob: -5.555159568786621
    6. ' position' → logprob: -5.680159568786621
    7. ' ' → logprob: -6.055159568786621
    8. 'pos' → logprob: -6.180159568786621
    9. ' positions' → logprob: -6.305159568786621
    10. '<|end|>' → logprob: -6.805159568786621

Token 132: ' dirty' (ID: 32042)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirty' → logprob: -0.25624823570251465
    2. ' dirty' → logprob: -1.5062482357025146
    3. ' dirt' → logprob: -6.006248474121094
    4. 'd' → logprob: -7.256248474121094
    5. '_dirty' → logprob: -8.006248474121094
    6. 'clean' → logprob: -8.131248474121094
    7. 'dust' → logprob: -8.256248474121094
    8. ' all' → logprob: -9.881248474121094
    9. 'all' → logprob: -9.881248474121094
    10. ' clean' → logprob: -10.381248474121094

Token 133: ' tiles' (ID: 33001)
  Prédit: ' tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tiles' → logprob: -0.36659494042396545
    2. '_tiles' → logprob: -2.1165950298309326
    3. '_positions' → logprob: -2.3665950298309326
    4. 'tiles' → logprob: -2.8665950298309326
    5. ' spots' → logprob: -4.4915947914123535
    6. 'positions' → logprob: -4.7415947914123535
    7. ' positions' → logprob: -4.9915947914123535
    8. '_' → logprob: -5.1165947914123535
    9. ' cells' → logprob: -7.6165947914123535
    10. '_cells' → logprob: -7.7415947914123535

Token 134: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21839353442192078
    2. ' for' → logprob: -2.093393564224243
    3. 'for' → logprob: -3.343393564224243
    4. '   ' → logprob: -4.468393325805664
    5. '<|end|>' → logprob: -4.843393325805664
    6. '
' → logprob: -4.968393325805664
    7. '        
' → logprob: -5.968393325805664
    8. '	for' → logprob: -6.343393325805664
    9. '    
' → logprob: -6.843393325805664
    10. '  
' → logprob: -6.968393325805664

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007921506650745869
    2. ' for' → logprob: -5.2579216957092285
    3. '   ' → logprob: -6.7579216957092285
    4. '<|end|>' → logprob: -7.0079216957092285
    5. 'for' → logprob: -8.00792121887207
    6. '        
' → logprob: -9.88292121887207
    7. '	for' → logprob: -10.25792121887207
    8. '
' → logprob: -10.25792121887207
    9. ',' → logprob: -10.38292121887207
    10. '	' → logprob: -10.75792121887207

Token 136: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5329272150993347
    2. '       ' → logprob: -1.4079272747039795
    3. 'for' (adapté à ' for') → logprob: -1.7829272747039795
    4. '   ' → logprob: -9.032927513122559
    5. ' ' → logprob: -9.407927513122559
    6. '	for' → logprob: -9.657927513122559
    7. ' ' → logprob: -10.532927513122559
    8. '
' → logprob: -11.657927513122559
    9. '    ' → logprob: -12.532927513122559
    10. '	' → logprob: -12.657927513122559

Token 137: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.037469472736120224
    2. 'i' → logprob: -3.7874693870544434
    3. ' y' → logprob: -4.287469387054443
    4. 'y' → logprob: -7.912469387054443
    5. ' row' → logprob: -11.662469863891602
    6. ' r' → logprob: -12.662469863891602
    7. ' _' → logprob: -13.287469863891602
    8. 'row' → logprob: -13.412469863891602
    9. 'r' → logprob: -14.162469863891602
    10. '	i' → logprob: -14.162469863891602

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013814153149724007
    2. 'in' → logprob: -4.3888139724731445
    3. ',' → logprob: -7.0138139724731445
    4. '<|end|>' → logprob: -8.388813972473145
    5. ' ' → logprob: -9.513813972473145
    6. ' ,' → logprob: -10.263813972473145
    7. ')' → logprob: -11.388813972473145
    8. '	in' → logprob: -11.763813972473145
    9. ' i' → logprob: -11.888813972473145
    10. ' y' → logprob: -12.013813972473145

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233882926404476
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -16.005233764648438
    4. '	range' → logprob: -18.130233764648438
    5. '   ' → logprob: -18.755233764648438
    6. '```' → logprob: -19.005233764648438
    7. ')' → logprob: -19.630233764648438
    8. 'ange' → logprob: -19.880233764648438
    9. '_range' → logprob: -20.005233764648438
    10. ' ' → logprob: -20.505233764648438

Token 140: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.7835754988482222e-05
    2. '(' → logprob: -11.000018119812012
    3. 'h' → logprob: -14.500018119812012
    4. ' (' → logprob: -14.625018119812012
    5. ' h' → logprob: -17.000017166137695
    6. '(H' → logprob: -17.750017166137695
    7. '(
' → logprob: -18.250017166137695
    8. '(len' → logprob: -18.250017166137695
    9. '(height' → logprob: -18.750017166137695
    10. '	h' → logprob: -19.125017166137695

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.054924376308918
    2. '):
' → logprob: -2.929924488067627
    3. ':' → logprob: -11.054924011230469
    4. '   ' → logprob: -11.304924011230469
    5. '):
' → logprob: -12.179924011230469
    6. '+' → logprob: -12.429924011230469
    7. '       ' → logprob: -13.179924011230469
    8. ')' → logprob: -13.929924011230469
    9. '):

' → logprob: -14.804924011230469
    10. ' ):' → logprob: -14.804924011230469

Token 142: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26545047760009766
    2. ':' → logprob: -1.5154504776000977
    3. '<|end|>' → logprob: -5.015450477600098
    4. '           ' → logprob: -5.640450477600098
    5. '   ' → logprob: -6.265450477600098
    6. ':
' → logprob: -7.515450477600098
    7. '<|end|>' → logprob: -8.140450477600098
    8. ',' → logprob: -8.640450477600098
    9. ' :' → logprob: -10.015450477600098
    10. '        ' → logprob: -10.265450477600098

Token 143: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08603758364915848
    2. '       ' → logprob: -3.3360376358032227
    3. '   ' → logprob: -3.4610376358032227
    4. 'for' (adapté à ' for') → logprob: -5.211037635803223
    5. '    ' → logprob: -5.336037635803223
    6. ' ' → logprob: -5.961037635803223
    7. '<|end|>' → logprob: -6.586037635803223
    8. '        ' → logprob: -7.711037635803223
    9. '	for' → logprob: -7.711037635803223
    10. '    
' → logprob: -10.086037635803223

Token 144: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3132631778717041
    2. 'x' → logprob: -1.313263177871704
    3. ' w' → logprob: -14.813262939453125
    4. 'w' → logprob: -14.938262939453125
    5. ' range' → logprob: -14.938262939453125
    6. '(x' → logprob: -15.688262939453125
    7. 'range' → logprob: -16.063262939453125
    8. '	x' → logprob: -16.688262939453125
    9. ' ' → logprob: -17.438262939453125
    10. ' xrange' → logprob: -17.938262939453125

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00462510297074914
    2. 'in' → logprob: -5.37962532043457
    3. ' ' → logprob: -13.87962532043457
    4. ')' → logprob: -14.12962532043457
    5. '	in' → logprob: -14.25462532043457
    6. '   ' → logprob: -15.00462532043457
    7. '(' → logprob: -15.00462532043457
    8. 'import' → logprob: -15.12962532043457
    9. 'In' → logprob: -15.12962532043457
    10. ',' → logprob: -15.37962532043457

Token 146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868730664253235
    2. ' range' → logprob: -1.1368730068206787
    3. '(range' → logprob: -13.261873245239258
    4. 'w' → logprob: -16.261873245239258
    5. ')' → logprob: -16.761873245239258
    6. '(' → logprob: -17.261873245239258
    7. '	range' → logprob: -17.761873245239258
    8. ' ' → logprob: -18.136873245239258
    9. 'h' → logprob: -18.386873245239258
    10. ' xrange' → logprob: -19.261873245239258

Token 147: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.393037885427475
    2. '(h' → logprob: -1.1430379152297974
    3. '(' → logprob: -5.143037796020508
    4. '(len' → logprob: -9.268037796020508
    5. '(s' → logprob: -9.768037796020508
    6. '(x' → logprob: -10.143037796020508
    7. '(range' → logprob: -10.143037796020508
    8. ' (' → logprob: -10.393037796020508
    9. '(width' → logprob: -10.643037796020508
    10. '(l' → logprob: -12.393037796020508

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04910890385508537
    2. '):
' → logprob: -3.0491089820861816
    3. ')' → logprob: -7.799108982086182
    4. ':' → logprob: -9.924108505249023
    5. '):
' → logprob: -10.924108505249023
    6. ' ):' → logprob: -11.174108505249023
    7. '       ' → logprob: -11.549108505249023
    8. '):

' → logprob: -11.924108505249023
    9. '           ' → logprob: -11.924108505249023
    10. 'if' → logprob: -13.799108505249023

Token 149: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017666583880782127
    2. ':' → logprob: -5.017666816711426
    3. ' if' → logprob: -5.892666816711426
    4. '           ' → logprob: -5.892666816711426
    5. ' ' → logprob: -6.642666816711426
    6. '            ' → logprob: -7.267666816711426
    7. ',' → logprob: -7.392666816711426
    8. '                
' → logprob: -7.392666816711426
    9. '<|end|>' → logprob: -7.517666816711426
    10. ' :' → logprob: -8.392666816711426

Token 150: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2721201181411743
    2. ' ' → logprob: -1.8971201181411743
    3. '               ' → logprob: -3.1471199989318848
    4. '                   ' → logprob: -3.7721199989318848
    5. '                ' → logprob: -4.647119998931885
    6. 'if' (adapté à ' if') → logprob: -5.522119998931885
    7. '           ' → logprob: -5.647119998931885
    8. ' 
' → logprob: -6.897119998931885
    9. ' ' → logprob: -7.522119998931885
    10. '            ' → logprob: -7.647119998931885

Token 151: ' room' (ID: 3435)
  Prédit: ' room'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' room' → logprob: -0.0019511326681822538
    2. 'room' → logprob: -6.251951217651367
    3. '(room' → logprob: -10.751951217651367
    4. '	room' → logprob: -14.126951217651367
    5. ' robot' → logprob: -14.876951217651367
    6. ' ' → logprob: -17.876951217651367
    7. 'robot' → logprob: -18.126951217651367
    8. '.room' → logprob: -18.126951217651367
    9. '_room' → logprob: -18.876951217651367
    10. ' (' → logprob: -18.876951217651367

Token 152: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.8624639324116288e-06
    2. '[x' → logprob: -14.500001907348633
    3. '```' → logprob: -15.125001907348633
    4. ' [' → logprob: -15.250001907348633
    5. '[' → logprob: -15.375001907348633
    6. '[Y' → logprob: -15.625001907348633
    7. '][' → logprob: -16.375001907348633
    8. ')[' → logprob: -16.750001907348633
    9. '[h' → logprob: -16.750001907348633
    10. '\[' → logprob: -17.125001907348633

Token 153: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4769192337989807
    2. '[y' → logprob: -0.9769192337989807
    3. '[x' → logprob: -6.101919174194336
    4. ']' → logprob: -7.851919174194336
    5. ']==' → logprob: -9.976919174194336
    6. ' ][' → logprob: -10.101919174194336
    7. '[' → logprob: -10.601919174194336
    8. '[z' → logprob: -11.101919174194336
    9. '```' → logprob: -11.351919174194336
    10. ' [' → logprob: -11.351919174194336

Token 154: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.36574100604048e-06
    2. ' x' → logprob: -12.625004768371582
    3. ''x' → logprob: -14.000004768371582
    4. '"x' → logprob: -16.625003814697266
    5. ')x' → logprob: -18.000003814697266
    6. '	x' → logprob: -19.000003814697266
    7. '(x' → logprob: -19.125003814697266
    8. '_x' → logprob: -19.500003814697266
    9. 'y' → logprob: -19.500003814697266
    10. '0' → logprob: -19.750003814697266

Token 155: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7613129615783691
    2. '==' → logprob: -1.0113129615783691
    3. ']' → logprob: -2.011312961578369
    4. ')' → logprob: -3.636312961578369
    5. ']==' → logprob: -5.011312961578369
    6. '=='' → logprob: -7.136312961578369
    7. ' ]' → logprob: -7.886312961578369
    8. ''' → logprob: -8.261312484741211
    9. '=' → logprob: -8.386312484741211
    10. ']=='' → logprob: -8.386312484741211

Token 156: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14335843920707703
    2. '==' → logprob: -2.0183584690093994
    3. '=='' → logprob: -7.39335823059082
    4. ' =='' → logprob: -10.26835823059082
    5. ' ' → logprob: -11.64335823059082
    6. '=' → logprob: -12.14335823059082
    7. ''' → logprob: -12.64335823059082
    8. '==
' → logprob: -12.76835823059082
    9. ']==' → logprob: -13.14335823059082
    10. '=="' → logprob: -13.14335823059082

Token 157: ' '' (ID: 461)
  Prédit: ''o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''o' → logprob: -0.7784898281097412
    2. ''O' → logprob: -1.6534898281097412
    3. ''S' → logprob: -1.7784898281097412
    4. ''L' → logprob: -2.278489828109741
    5. ''' → logprob: -2.653489828109741
    6. ''*' → logprob: -6.15349006652832
    7. 'o' → logprob: -6.15349006652832
    8. ''A' → logprob: -6.40349006652832
    9. ''s' → logprob: -7.40349006652832
    10. ''l' → logprob: -8.02849006652832

Token 158: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -4.251091377227567e-05
    2. 'r' → logprob: -11.000042915344238
    3. ' o' → logprob: -11.875042915344238
    4. 's' → logprob: -12.000042915344238
    5. ''o' → logprob: -12.250042915344238
    6. '.o' → logprob: -12.500042915344238
    7. 'x' → logprob: -13.625042915344238
    8. ''' → logprob: -14.500042915344238
    9. '*' → logprob: -14.750042915344238
    10. 'S' → logprob: -14.750042915344238

Token 159: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.052228622138500214
    2. ''):' → logprob: -3.5522286891937256
    3. ''' → logprob: -4.4272284507751465
    4. ''):
' → logprob: -5.3022284507751465
    5. '':
' → logprob: -5.6772284507751465
    6. '')' → logprob: -6.9272284507751465
    7. '):' → logprob: -7.8022284507751465
    8. ')' → logprob: -8.802228927612305
    9. ':' → logprob: -8.802228927612305
    10. ')':' → logprob: -10.302228927612305

Token 160: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11441169679164886
    2. '<|end|>' → logprob: -2.3644115924835205
    3. '<|end|>' → logprob: -5.2394118309021
    4. ':
' → logprob: -5.7394118309021
    5. '               ' → logprob: -6.1144118309021
    6. '                   ' → logprob: -6.6144118309021
    7. ' ' → logprob: -7.4894118309021
    8. '                ' → logprob: -8.489411354064941
    9. ')' → logprob: -8.614411354064941
    10. '):' → logprob: -8.989411354064941

Token 161: ' robot' (ID: 20808)
  Prédit: ' robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robot' → logprob: -0.14370746910572052
    2. 'robot' (adapté à ' robot') → logprob: -2.018707513809204
    3. ' 
' → logprob: -8.143707275390625
    4. ' r' → logprob: -8.393707275390625
    5. '_robot' → logprob: -8.768707275390625
    6. 'r' → logprob: -9.018707275390625
    7. ' rob' → logprob: -9.643707275390625
    8. '.robot' → logprob: -10.143707275390625
    9. '(robot' → logprob: -10.393707275390625
    10. ' ' → logprob: -10.768707275390625

Token 162: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.3663626305060461e-05
    2. '_' → logprob: -11.62501335144043
    3. '_positions' → logprob: -12.87501335144043
    4. 'Pos' → logprob: -14.25001335144043
    5. ' _' → logprob: -14.37501335144043
    6. 'pos' → logprob: -15.75001335144043
    7. '_p' → logprob: -15.75001335144043
    8. '_val' → logprob: -15.87501335144043
    9. '_position' → logprob: -16.25001335144043
    10. '_Pos' → logprob: -16.37501335144043

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014141082763672
    2. '=' → logprob: -1.7014141082763672
    3. ')' → logprob: -15.076414108276367
    4. ' =
' → logprob: -15.451414108276367
    5. ' =(' → logprob: -15.451414108276367
    6. ',' → logprob: -17.076414108276367
    7. '=

' → logprob: -17.326414108276367
    8. '＝' → logprob: -17.451414108276367
    9. ' ' → logprob: -17.451414108276367
    10. ' =)' → logprob: -17.576414108276367

Token 164: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.06594602763652802
    2. '(x' → logprob: -3.065946102142334
    3. ' (' → logprob: -4.065946102142334
    4. '(' → logprob: -9.690945625305176
    5. '[y' → logprob: -15.565945625305176
    6. '((' → logprob: -16.815946578979492
    7. '   ' → logprob: -17.190946578979492
    8. 'x' → logprob: -17.940946578979492
    9. 'y' → logprob: -18.815946578979492
    10. ' y' → logprob: -19.190946578979492

Token 165: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.049124907702207565
    2. 'x' → logprob: -3.0491249561309814
    3. ' y' → logprob: -7.549124717712402
    4. ' x' → logprob: -12.299124717712402
    5. ')y' → logprob: -12.674124717712402
    6. ')' → logprob: -13.299124717712402
    7. '	y' → logprob: -15.299124717712402
    8. '(y' → logprob: -15.299124717712402
    9. '   ' → logprob: -15.674124717712402
    10. ')x' → logprob: -15.799124717712402

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.268254896393046e-05
    2. ',x' → logprob: -9.875082969665527
    3. ' ,' → logprob: -10.750082969665527
    4. '<|end|>' → logprob: -12.000082969665527
    5. ',
' → logprob: -13.625082969665527
    6. '‌,' → logprob: -14.500082969665527
    7. ')' → logprob: -14.625082969665527
    8. ',y' → logprob: -15.250082969665527
    9. ' ' → logprob: -16.00008201599121
    10. ',n' → logprob: -16.12508201599121

Token 167: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029750484973192215
    2. ' x' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.90475082397461
    4. ')x' → logprob: -17.15475082397461
    5. '	x' → logprob: -17.27975082397461
    6. '0' → logprob: -18.02975082397461
    7. ')' → logprob: -18.27975082397461
    8. '
' → logprob: -18.40475082397461
    9. ',x' → logprob: -18.52975082397461
    10. ',' → logprob: -19.65475082397461

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005409015342593193
    2. ')
' → logprob: -5.255409240722656
    3. ' )' → logprob: -9.255409240722656
    4. '               ' → logprob: -10.130409240722656
    5. '                   ' → logprob: -11.755409240722656
    6. '<|end|>' → logprob: -11.880409240722656
    7. '       ' → logprob: -12.880409240722656
    8. ' )
' → logprob: -13.005409240722656
    9. '           ' → logprob: -13.005409240722656
    10. '),' → logprob: -13.255409240722656

Token 169: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.092409148812294
    2. '<|end|>' → logprob: -3.092409133911133
    3. '                ' → logprob: -3.717409133911133
    4. '                
' → logprob: -4.967409133911133
    5. 'elif' → logprob: -5.342409133911133
    6. '
' → logprob: -6.967409133911133
    7. '                    
' → logprob: -7.217409133911133
    8. ' elif' → logprob: -7.467409133911133
    9. '<|end|>' → logprob: -7.467409133911133
    10. '                   ' → logprob: -7.967409133911133

Token 170: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.5797944068908691
    2. '               ' → logprob: -1.4547944068908691
    3. 'elif' (adapté à ' elif') → logprob: -1.5797944068908691
    4. '                ' → logprob: -8.079793930053711
    5. '	elif' → logprob: -8.829793930053711
    6. '                
' → logprob: -11.579793930053711
    7. ' ' → logprob: -11.954793930053711
    8. '```' → logprob: -12.079793930053711
    9. '<|end|>' → logprob: -12.329793930053711
    10. ' else' → logprob: -12.329793930053711

Token 171: ' room' (ID: 3435)
  Prédit: ' room'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' room' → logprob: -0.05501768738031387
    2. 'room' → logprob: -2.9300177097320557
    3. ''' → logprob: -9.805017471313477
    4. '(room' → logprob: -9.930017471313477
    5. '	room' → logprob: -11.055017471313477
    6. ' '' → logprob: -11.930017471313477
    7. ' ' → logprob: -12.805017471313477
    8. ' ' → logprob: -13.305017471313477
    9. '.room' → logprob: -13.805017471313477
    10. ' space' → logprob: -14.680017471313477

Token 172: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.618001053633634e-05
    2. '[' → logprob: -11.250025749206543
    3. '[user' → logprob: -12.125025749206543
    4. '[x' → logprob: -13.625025749206543
    5. '```' → logprob: -13.750025749206543
    6. '[
' → logprob: -14.125025749206543
    7. '[w' → logprob: -14.250025749206543
    8. '<|end|>' → logprob: -14.250025749206543
    9. 'y' → logprob: -15.000025749206543
    10. '[u' → logprob: -15.250025749206543

Token 173: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16519330441951752
    2. '[y' → logprob: -2.0401933193206787
    3. '[x' → logprob: -3.9151933193206787
    4. '[' → logprob: -6.5401930809021
    5. ']' → logprob: -7.9151930809021
    6. ')[' → logprob: -9.540193557739258
    7. ''][' → logprob: -10.040193557739258
    8. '==' → logprob: -10.165193557739258
    9. '[
' → logprob: -10.415193557739258
    10. '[word' → logprob: -10.415193557739258

Token 174: 'x' (ID: 87)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.45873507857322693
    2. ''x' → logprob: -1.2087351083755493
    3. ''' → logprob: -2.9587349891662598
    4. 'x' → logprob: -4.70873498916626
    5. ''#' → logprob: -5.95873498916626
    6. ''d' → logprob: -6.58373498916626
    7. ''o' → logprob: -7.33373498916626
    8. '`' → logprob: -7.33373498916626
    9. ''s' → logprob: -7.70873498916626
    10. ''a' → logprob: -7.83373498916626

Token 175: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6378118395805359
    2. '==' → logprob: -0.7628118395805359
    3. '=='' → logprob: -6.137811660766602
    4. ']' → logprob: -6.637811660766602
    5. ')' → logprob: -6.762811660766602
    6. ']==' → logprob: -8.012811660766602
    7. ''' → logprob: -9.512811660766602
    8. '[' → logprob: -10.012811660766602
    9. '=' → logprob: -10.137811660766602
    10. ')==' → logprob: -11.012811660766602

Token 176: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25615912675857544
    2. ' ==' → logprob: -1.5061590671539307
    3. '=='' → logprob: -5.50615930557251
    4. '=' → logprob: -9.256158828735352
    5. '==
' → logprob: -10.881158828735352
    6. ''' → logprob: -11.006158828735352
    7. '[' → logprob: -11.381158828735352
    8. ' =='' → logprob: -13.006158828735352
    9. ')' → logprob: -13.131158828735352
    10. ' ' → logprob: -13.256158828735352

Token 177: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.0012090419186279178
    2. ''' → logprob: -7.751209259033203
    3. ''l' → logprob: -7.751209259033203
    4. ''d' → logprob: -8.501209259033203
    5. ''w' → logprob: -10.501209259033203
    6. ' '*'' → logprob: -10.626209259033203
    7. ''o' → logprob: -10.751209259033203
    8. ''.' → logprob: -11.251209259033203
    9. ''x' → logprob: -11.251209259033203
    10. '*' → logprob: -11.626209259033203

Token 178: '':
' (ID: 7669)
  Prédit: ''):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''):' → logprob: -0.2453709840774536
    2. '')' → logprob: -1.9953709840774536
    3. ''):
' → logprob: -2.870370864868164
    4. '':' → logprob: -4.245370864868164
    5. ')' → logprob: -5.620370864868164
    6. '):' → logprob: -5.745370864868164
    7. ''' → logprob: -5.870370864868164
    8. '',' → logprob: -8.870370864868164
    9. ''):
' → logprob: -8.995370864868164
    10. ':' → logprob: -9.120370864868164

Token 179: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7147283554077148
    2. ' dirty' → logprob: -0.9647283554077148
    3. 'dirty' → logprob: -2.089728355407715
    4. '               ' → logprob: -5.714728355407715
    5. '_dirty' → logprob: -6.464728355407715
    6. '                       ' → logprob: -7.839728355407715
    7. '<|end|>' → logprob: -8.839728355407715
    8. ' dirt' → logprob: -8.964728355407715
    9. '                ' → logprob: -9.714728355407715
    10. 'Dirty' → logprob: -9.964728355407715

Token 180: ' dirty' (ID: 32042)
  Prédit: ' dirty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dirty' → logprob: -0.2520057260990143
    2. 'dirty' (adapté à ' dirty') → logprob: -1.502005696296692
    3. 'd' → logprob: -10.002005577087402
    4. ' dirt' → logprob: -11.252005577087402
    5. '_dirty' → logprob: -11.502005577087402
    6. ' d' → logprob: -12.752005577087402
    7. 'Dirty' → logprob: -13.002005577087402
    8. '                   ' → logprob: -13.127005577087402
    9. '	d' → logprob: -15.127005577087402
    10. '                    ' → logprob: -16.25200653076172

Token 181: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -4.842555426876061e-06
    2. 'positions' → logprob: -13.250004768371582
    3. ' _' → logprob: -13.500004768371582
    4. 'Positions' → logprob: -14.125004768371582
    5. '_' → logprob: -15.000004768371582
    6. '_pos' → logprob: -15.500004768371582
    7. '```' → logprob: -16.1250057220459
    8. ' positions' → logprob: -16.6250057220459
    9. '_locations' → logprob: -17.2500057220459
    10. ''_' → logprob: -17.2500057220459

Token 182: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000555416801944375
    2. '.' → logprob: -7.500555515289307
    3. ' .' → logprob: -13.875555038452148
    4. '.app' → logprob: -14.375555038452148
    5. '.Append' → logprob: -15.375555038452148
    6. '.add' → logprob: -15.500555038452148
    7. '.ap' → logprob: -15.500555038452148
    8. '.push' → logprob: -16.12555503845215
    9. ').' → logprob: -16.50055503845215
    10. '.setdefault' → logprob: -16.62555503845215

Token 183: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.002565672155469656
    2. '(' → logprob: -6.002565860748291
    3. '(y' → logprob: -9.377565383911133
    4. ' ((' → logprob: -12.377565383911133
    5. ' (' → logprob: -14.127565383911133
    6. '(x' → logprob: -15.127565383911133
    7. '[(' → logprob: -16.752565383911133
    8. ' ' → logprob: -17.377565383911133
    9. '(
' → logprob: -17.627565383911133
    10. '()' → logprob: -18.627565383911133

Token 184: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.8312570318812504e-05
    2. ' y' → logprob: -11.125018119812012
    3. ')' → logprob: -13.500018119812012
    4. ')y' → logprob: -13.625018119812012
    5. '   ' → logprob: -15.250018119812012
    6. '(y' → logprob: -15.875018119812012
    7. ''y' → logprob: -16.250019073486328
    8. '	y' → logprob: -16.375019073486328
    9. '
' → logprob: -16.375019073486328
    10. 'x' → logprob: -17.375019073486328

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016241183038800955
    2. ',x' → logprob: -6.62662410736084
    3. ',y' → logprob: -9.00162410736084
    4. ' ,' → logprob: -9.50162410736084
    5. '<|end|>' → logprob: -10.50162410736084
    6. ',
' → logprob: -10.75162410736084
    7. '[' → logprob: -10.75162410736084
    8. ')' → logprob: -12.12662410736084
    9. 'x' → logprob: -12.12662410736084
    10. '‌,' → logprob: -13.00162410736084

Token 186: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004079470410943031
    2. ' x' → logprob: -5.504079341888428
    3. ')x' → logprob: -14.754079818725586
    4. ')' → logprob: -14.879079818725586
    5. ' ' → logprob: -16.379079818725586
    6. '	x' → logprob: -16.879079818725586
    7. ',' → logprob: -17.254079818725586
    8. '   ' → logprob: -17.754079818725586
    9. '0' → logprob: -17.754079818725586
    10. 'y' → logprob: -17.754079818725586

Token 187: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023332595825195312
    2. '))' → logprob: -3.7733325958251953
    3. ')
' → logprob: -9.898332595825195
    4. ')]' → logprob: -11.273332595825195
    5. ' )' → logprob: -12.398332595825195
    6. ')))' → logprob: -12.523332595825195
    7. ')}' → logprob: -12.648332595825195
    8. '),' → logprob: -12.898332595825195
    9. '               ' → logprob: -13.023332595825195
    10. ')`' → logprob: -13.148332595825195

Token 188: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.3667938709259033
    2. 'distance' → logprob: -1.8667938709259033
    3. '       ' → logprob: -2.1167938709259033
    4. 'n' → logprob: -2.2417938709259033
    5. 'num' → logprob: -2.3667938709259033
    6. 'dp' → logprob: -3.3667938709259033
    7. 'def' → logprob: -3.4917938709259033
    8. '        
' → logprob: -3.7417938709259033
    9. 'if' → logprob: -4.116793632507324
    10. 'm' → logprob: -4.241793632507324

Token 190: ' If' (ID: 1843)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.875145673751831
    2. 'from' → logprob: -1.875145673751831
    3. '#' → logprob: -2.500145673751831
    4. 'if' → logprob: -2.500145673751831
    5. 'n' → logprob: -2.750145673751831
    6. 'index' → logprob: -3.125145673751831
    7. 'pos' → logprob: -3.375145673751831
    8. 'dirty' → logprob: -3.750145673751831
    9. 'all' → logprob: -4.00014591217041
    10. 'positions' → logprob: -4.12514591217041

Token 191: ' no' (ID: 860)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1804353892803192
    2. 'not' → logprob: -1.8054354190826416
    3. 'len' → logprob: -7.8054351806640625
    4. ' len' → logprob: -8.430435180664062
    5. 'robot' → logprob: -10.430435180664062
    6. ' robot' → logprob: -10.930435180664062
    7. 'dirty' → logprob: -12.055435180664062
    8. ' dirty' → logprob: -12.430435180664062
    9. ' no' → logprob: -13.430435180664062
    10. 'no' → logprob: -13.680435180664062

Token 192: ' dirty' (ID: 32042)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirty' → logprob: -0.3145197927951813
    2. ' dirty' → logprob: -1.3145197629928589
    3. 'd' → logprob: -7.439519882202148
    4. '_dirty' → logprob: -8.189519882202148
    5. ' more' → logprob: -9.439519882202148
    6. ' ' → logprob: -10.064519882202148
    7. 'more' → logprob: -10.064519882202148
    8. 'def' → logprob: -10.189519882202148
    9. 'clean' → logprob: -10.314519882202148
    10. 'len' → logprob: -10.939519882202148

Token 193: ' tiles' (ID: 33001)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.01825389266014099
    2. 'positions' → logprob: -4.143253803253174
    3. ' positions' → logprob: -6.643253803253174
    4. ' tiles' → logprob: -8.268254280090332
    5. '```' → logprob: -8.518254280090332
    6. '_tiles' → logprob: -8.768254280090332
    7. 'tiles' → logprob: -9.018254280090332
    8. 'tile' → logprob: -10.518254280090332
    9. ' ' → logprob: -10.768254280090332
    10. '_spaces' → logprob: -10.893254280090332

Token 194: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001463793101720512
    2. ':
' → logprob: -7.001463890075684
    3. ',' → logprob: -7.876463890075684
    4. ':return' → logprob: -10.001463890075684
    5. '):' → logprob: -10.126463890075684
    6. '():' → logprob: -10.376463890075684
    7. ' :' → logprob: -11.001463890075684
    8. '       ' → logprob: -11.251463890075684
    9. '           ' → logprob: -12.126463890075684
    10. 'return' → logprob: -13.001463890075684

Token 195: ' ' (ID: 220)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.26131170988082886
    2. 'print' → logprob: -1.5113117694854736
    3. '           ' → logprob: -5.1363115310668945
    4. '       ' → logprob: -5.7613115310668945
    5. '```' → logprob: -9.011311531066895
    6. ' return' → logprob: -10.011311531066895
    7. '        ' → logprob: -10.386311531066895
    8. '
' → logprob: -10.386311531066895
    9. 'return' → logprob: -10.511311531066895
    10. '   ' → logprob: -10.636311531066895

Token 196: '0' (ID: 15)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005166939808987081
    2. ' print' → logprob: -7.750516891479492
    3. '       ' → logprob: -9.500516891479492
    4. '           ' → logprob: -11.625516891479492
    5. '```' → logprob: -13.750516891479492
    6. '
' → logprob: -14.000516891479492
    7. '   ' → logprob: -15.750516891479492
    8. 'return' → logprob: -16.500516891479492
    9. '        
' → logprob: -17.250516891479492
    10. '               ' → logprob: -17.250516891479492

Token 197: ' moves' (ID: 19523)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05584494024515152
    2. '<|end|>' → logprob: -3.305845022201538
    3. ' print' → logprob: -5.305844783782959
    4. '       ' → logprob: -5.555844783782959
    5. '
' → logprob: -5.930844783782959
    6. '<|end|>' → logprob: -6.555844783782959
    7. 'output' → logprob: -6.805844783782959
    8. '           ' → logprob: -6.805844783782959
    9. ')' → logprob: -7.680844783782959
    10. 'tokens' → logprob: -7.680844783782959

Token 198: ' required' (ID: 3759)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04485463723540306
    2. '
' → logprob: -3.9198546409606934
    3. ',' → logprob: -4.294854640960693
    4. '           ' → logprob: -5.419854640960693
    5. 'print' → logprob: -5.544854640960693
    6. ',
' → logprob: -7.794854640960693
    7. '   ' → logprob: -8.169854164123535
    8. ':' → logprob: -8.169854164123535
    9. '        
' → logprob: -8.169854164123535
    10. '<|end|>' → logprob: -8.169854164123535

Token 199: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13423901796340942
    2. '
' → logprob: -2.5092389583587646
    3. '\n' → logprob: -4.509239196777344
    4. '   ' → logprob: -4.759239196777344
    5. '<|end|>' → logprob: -4.759239196777344
    6. ',' → logprob: -5.009239196777344
    7. '        
' → logprob: -6.009239196777344
    8. ':' → logprob: -6.259239196777344
    9. '    
' → logprob: -6.634239196777344
    10. '           ' → logprob: -7.259239196777344

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05425162613391876
    2. ':' → logprob: -3.1792516708374023
    3. ',' → logprob: -4.929251670837402
    4. '
' → logprob: -6.679251670837402
    5. '   ' → logprob: -7.304251670837402
    6. '        
' → logprob: -7.554251670837402
    7. ':
' → logprob: -7.804251670837402
    8. '\n' → logprob: -8.179251670837402
    9. '<|end|>' → logprob: -8.429251670837402
    10. '           ' → logprob: -8.929251670837402

Token 201: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10607323795557022
    2. ' if' → logprob: -2.6060731410980225
    3. 'if' (adapté à ' if') → logprob: -3.7310731410980225
    4. 'print' → logprob: -6.106073379516602
    5. ' print' → logprob: -8.356073379516602
    6. '           ' → logprob: -8.481073379516602
    7. '   ' → logprob: -9.606073379516602
    8. '        
' → logprob: -9.981073379516602
    9. '```' → logprob: -11.481073379516602
    10. '      ' → logprob: -11.856073379516602

Token 202: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04055330157279968
    2. 'not' → logprob: -3.790553331375122
    3. ' len' → logprob: -4.165553092956543
    4. 'len' → logprob: -6.415553092956543
    5. '   ' → logprob: -14.040553092956543
    6. '(len' → logprob: -15.415553092956543
    7. '    ' → logprob: -15.665553092956543
    8. ' no' → logprob: -15.665553092956543
    9. ' robot' → logprob: -16.16555404663086
    10. 'robot' → logprob: -16.41555404663086

Token 203: ' dirty' (ID: 32042)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirty' → logprob: -0.011048528365790844
    2. ' dirty' → logprob: -4.511048316955566
    3. '_dirty' → logprob: -14.386048316955566
    4. 'dust' → logprob: -16.386049270629883
    5. 'Dirty' → logprob: -16.761049270629883
    6. 'd' → logprob: -17.261049270629883
    7. 'dry' → logprob: -17.886049270629883
    8. 'clean' → logprob: -19.011049270629883
    9. '```' → logprob: -19.136049270629883
    10. 'dir' → logprob: -19.761049270629883

Token 204: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.25
    3. 'positions' → logprob: -16.5
    4. 'Positions' → logprob: -19.5
    5. '_tiles' → logprob: -19.5
    6. '```' → logprob: -19.5
    7. ' _' → logprob: -20.5
    8. '_
' → logprob: -20.625
    9. '_pos' → logprob: -21.125
    10. '_position' → logprob: -21.25

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10031589865684509
    2. ':
' → logprob: -2.350315809249878
    3. ':return' → logprob: -9.225316047668457
    4. '):' → logprob: -12.100316047668457
    5. '):
' → logprob: -12.975316047668457
    6. ':

' → logprob: -14.100316047668457
    7. ':
' → logprob: -14.350316047668457
    8. ' :' → logprob: -14.725316047668457
    9. '():
' → logprob: -15.225316047668457
    10. '   ' → logprob: -15.850316047668457

Token 206: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3907453119754791
    2. '           ' → logprob: -1.3907452821731567
    3. 'print' → logprob: -3.0157454013824463
    4. '
' → logprob: -4.140745162963867
    5. ' print' → logprob: -5.265745162963867
    6. ':' → logprob: -6.140745162963867
    7. '```' → logprob: -7.390745162963867
    8. '   ' → logprob: -7.515745162963867
    9. ':
' → logprob: -7.765745162963867
    10. ',' → logprob: -8.390745162963867

Token 207: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3398478627204895
    2. '       ' → logprob: -1.8398478031158447
    3. ' print' → logprob: -2.0898478031158447
    4. '           ' → logprob: -5.214848041534424
    5. '   ' → logprob: -9.214847564697266
    6. '
' → logprob: -10.964847564697266
    7. '```' → logprob: -11.089847564697266
    8. '               ' → logprob: -13.089847564697266
    9. '	print' → logprob: -13.214847564697266
    10. '        
' → logprob: -14.089847564697266

Token 208: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.264322317088954e-05
    2. '0' → logprob: -11.000052452087402
    3. '("' → logprob: -11.000052452087402
    4. '('' → logprob: -11.000052452087402
    5. ' (' → logprob: -13.250052452087402
    6. '(
' → logprob: -15.000052452087402
    7. '(`' → logprob: -15.875052452087402
    8. '```' → logprob: -15.875052452087402
    9. '()' → logprob: -16.75005340576172
    10. '`' → logprob: -17.12505340576172

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '"' → logprob: -16.25
    4. '   ' → logprob: -17.25
    5. ')' → logprob: -17.75
    6. ''' → logprob: -19.25
    7. '`' → logprob: -19.5
    8. '(' → logprob: -20.25
    9. '```' → logprob: -21.0
    10. '00' → logprob: -21.375

Token 210: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5832993388175964
    2. ')' → logprob: -0.8332993388175964
    3. '           ' → logprob: -4.958299160003662
    4. '       ' → logprob: -8.95829963684082
    5. ')
' → logprob: -9.33329963684082
    6. '               ' → logprob: -9.83329963684082
    7. ')return' → logprob: -10.70829963684082
    8. ')`
' → logprob: -12.95829963684082
    9. '                   ' → logprob: -13.33329963684082
    10. '   ' → logprob: -13.45829963684082

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5237518548965454
    2. '       ' → logprob: -0.8987518548965454
    3. 'continue' → logprob: -8.523752212524414
    4. ' continue' → logprob: -8.648752212524414
    5. '   ' → logprob: -9.023752212524414
    6. '<|end|>' → logprob: -9.523752212524414
    7. ',' → logprob: -11.273752212524414
    8. '               ' → logprob: -11.523752212524414
    9. ' continues' → logprob: -11.773752212524414
    10. 'contin' → logprob: -12.648752212524414

Token 212: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.663678765296936
    2. '       ' → logprob: -1.413678765296936
    3. '           ' → logprob: -1.663678765296936
    4. ' continue' → logprob: -3.0386786460876465
    5. '   ' → logprob: -6.1636786460876465
    6. '	continue' → logprob: -6.1636786460876465
    7. '
' → logprob: -9.413679122924805
    8. 'contin' → logprob: -9.538679122924805
    9. '_continue' → logprob: -9.538679122924805
    10. '               ' → logprob: -11.788679122924805

Token 213: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32008126378059387
    2. '<|end|>' → logprob: -1.4450812339782715
    3. '        
' → logprob: -3.9450812339782715
    4. '
' → logprob: -4.9450812339782715
    5. '```' → logprob: -5.6950812339782715
    6. '   ' → logprob: -6.3200812339782715
    7. ')' → logprob: -6.4450812339782715
    8. '    
' → logprob: -7.1950812339782715
    9. '<|end|>' → logprob: -7.5700812339782715
    10. ' 
' → logprob: -7.9450812339782715

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09681789577007294
    2. 'num' → logprob: -3.846817970275879
    3. 'n' → logprob: -4.221817970275879
    4. 'dp' → logprob: -4.721817970275879
    5. ' n' → logprob: -5.096817970275879
    6. 'distance' → logprob: -5.346817970275879
    7. '        
' → logprob: -5.471817970275879
    8. 'positions' → logprob: -5.596817970275879
    9. 'index' → logprob: -5.721817970275879
    10. 'm' → logprob: -5.971817970275879

Token 215: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.5041844844818115
    2. 'from' → logprob: -1.6291844844818115
    3. 'num' → logprob: -1.8791844844818115
    4. '       ' → logprob: -2.3791844844818115
    5. 'dp' → logprob: -2.5041844844818115
    6. 'n' → logprob: -2.7541844844818115
    7. 'distance' → logprob: -2.8791844844818115
    8. 'dist' → logprob: -3.6291844844818115
    9. ' from' → logprob: -3.7541844844818115
    10. 'all' → logprob: -4.129184722900391

Token 216: ' Assign' (ID: 60840)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.0387428998947144
    2. '#' → logprob: -1.4137428998947144
    3. 'from' → logprob: -2.038743019104004
    4. 'n' → logprob: -2.163743019104004
    5. 'dirty' → logprob: -3.288743019104004
    6. 'index' → logprob: -3.663743019104004
    7. 'all' → logprob: -3.788743019104004
    8. 'def' → logprob: -4.288743019104004
    9. 'pos' → logprob: -4.663743019104004
    10. 'positions' → logprob: -5.038743019104004

Token 217: ' indices' (ID: 30378)
  Prédit: ' indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.3952934741973877
    2. 'indices' → logprob: -2.2702934741973877
    3. ' index' → logprob: -2.8952934741973877
    4. ' an' → logprob: -3.3952934741973877
    5. 'index' → logprob: -3.3952934741973877
    6. 'indexes' → logprob: -4.145293235778809
    7. ' numbers' → logprob: -4.395293235778809
    8. ' idx' → logprob: -4.520293235778809
    9. ' indexes' → logprob: -4.520293235778809
    10. ' distances' → logprob: -5.020293235778809

Token 218: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05069807171821594
    2. ' for' → logprob: -4.175698280334473
    3. '<|end|>' → logprob: -4.800698280334473
    4. ' =' → logprob: -4.925698280334473
    5. 'to' → logprob: -5.425698280334473
    6. ' ' → logprob: -5.425698280334473
    7. '<|end|>' → logprob: -6.300698280334473
    8. '       ' → logprob: -6.550698280334473
    9. ')' → logprob: -6.925698280334473
    10. '_dirty' → logprob: -7.300698280334473

Token 219: ' dirty' (ID: 32042)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirty' → logprob: -0.9271498918533325
    2. ' dirty' → logprob: -1.5521498918533325
    3. ' all' → logprob: -1.8021498918533325
    4. ' positions' → logprob: -2.177149772644043
    5. 'all' → logprob: -3.052149772644043
    6. ' each' → logprob: -3.552149772644043
    7. 'positions' → logprob: -4.302149772644043
    8. ' points' → logprob: -4.677149772644043
    9. ' the' → logprob: -5.177149772644043
    10. 'each' → logprob: -5.802149772644043

Token 220: ' tiles' (ID: 33001)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.043581392616033554
    2. '_' → logprob: -3.543581485748291
    3. '_tiles' → logprob: -4.668581485748291
    4. ' _' → logprob: -5.793581485748291
    5. ' tiles' → logprob: -8.043581008911133
    6. 'positions' → logprob: -8.043581008911133
    7. ' positions' → logprob: -8.293581008911133
    8. '_tokens' → logprob: -9.293581008911133
    9. '```' → logprob: -9.293581008911133
    10. 'tiles' → logprob: -10.043581008911133

Token 221: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8121331930160522
    2. '       ' → logprob: -1.0621331930160522
    3. ' for' → logprob: -2.812133312225342
    4. ':' → logprob: -3.062133312225342
    5. ' and' → logprob: -3.312133312225342
    6. 'indices' → logprob: -3.937133312225342
    7. 'positions' → logprob: -5.187133312225342
    8. ',
' → logprob: -5.312133312225342
    9. 'dirty' → logprob: -5.312133312225342
    10. ' positions' → logprob: -5.437133312225342

Token 222: ' store' (ID: 4897)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.3387889862060547
    2. 'all' → logprob: -1.9637889862060547
    3. 'positions' → logprob: -1.9637889862060547
    4. ' points' → logprob: -2.0887889862060547
    5. ' all' → logprob: -2.3387889862060547
    6. 'robot' → logprob: -2.7137889862060547
    7. 'points' → logprob: -2.9637889862060547
    8. ' robot' → logprob: -3.2137889862060547
    9. ' start' → logprob: -4.213788986206055
    10. 'start' → logprob: -4.338788986206055

Token 223: ' positions' (ID: 15897)
  Prédit: ' their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' their' → logprob: -0.8081582188606262
    2. 'positions' → logprob: -1.6831581592559814
    3. ' positions' → logprob: -2.0581581592559814
    4. ' the' → logprob: -3.0581581592559814
    5. 'their' → logprob: -3.0581581592559814
    6. ' distances' → logprob: -3.6831581592559814
    7. ' all' → logprob: -4.0581583976745605
    8. ' robot' → logprob: -4.0581583976745605
    9. 'indices' → logprob: -4.1831583976745605
    10. 'robot' → logprob: -4.4331583976745605

Token 224: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5608837604522705
    2. ' for' → logprob: -2.3108837604522705
    3. 'dirty' → logprob: -2.6858837604522705
    4. ' =' → logprob: -2.9358837604522705
    5. 'indices' → logprob: -3.4358837604522705
    6. ' dirty' → logprob: -3.4358837604522705
    7. ',' → logprob: -3.5608837604522705
    8. 'positions' → logprob: -3.8108837604522705
    9. ':' → logprob: -3.9358837604522705
    10. ' positions' → logprob: -4.060883522033691

Token 225: ' order' (ID: 2569)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4740378260612488
    2. 'dirty' → logprob: -1.4740378856658936
    3. ' dirty' → logprob: -3.0990378856658936
    4. ' [' → logprob: -3.2240378856658936
    5. '[d' → logprob: -3.9740378856658936
    6. 'positions' → logprob: -4.4740376472473145
    7. 'all' → logprob: -4.8490376472473145
    8. ' positions' → logprob: -4.9740376472473145
    9. '[(' → logprob: -5.9740376472473145
    10. 'order' → logprob: -6.2240376472473145

Token 226: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16724561154842377
    2. 'dirty' → logprob: -2.917245626449585
    3. ' dirty' → logprob: -3.167245626449585
    4. ' for' → logprob: -4.542245388031006
    5. '_dirty' → logprob: -4.917245388031006
    6. 'indices' → logprob: -5.042245388031006
    7. 'positions' → logprob: -5.167245388031006
    8. ',' → logprob: -5.292245388031006
    9. ' positions' → logprob: -5.542245388031006
    10. ' =' → logprob: -5.792245388031006

Token 227: '       ' (ID: 309)
  Prédit: ' dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dirty' → logprob: -0.34722837805747986
    2. '       ' → logprob: -2.2222282886505127
    3. ' positions' → logprob: -2.7222282886505127
    4. 'dirty' → logprob: -2.8472282886505127
    5. ' indices' → logprob: -4.222228527069092
    6. 'positions' → logprob: -4.722228527069092
    7. '```' → logprob: -4.722228527069092
    8. 'indices' → logprob: -5.847228527069092
    9. 'd' → logprob: -6.222228527069092
    10. ' idx' → logprob: -6.347228527069092

Token 228: ' #' (ID: 1069)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dirty' → logprob: -1.4508432149887085
    2. 'all' → logprob: -2.200843334197998
    3. ' positions' → logprob: -2.325843334197998
    4. ' dirty' → logprob: -2.325843334197998
    5. 'positions' → logprob: -2.325843334197998
    6. 'pos' → logprob: -2.575843334197998
    7. ' all' → logprob: -2.825843334197998
    8. 'indices' → logprob: -3.200843334197998
    9. 'points' → logprob: -3.575843334197998
    10. 'index' → logprob: -3.700843334197998

Token 229: ' index' (ID: 3472)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.4916298389434814
    2. 'all' → logprob: -1.7416298389434814
    3. 'points' → logprob: -1.8666298389434814
    4. 'dirty' → logprob: -1.8666298389434814
    5. ' positions' → logprob: -2.4916298389434814
    6. ' points' → logprob: -3.1166298389434814
    7. 'pos' → logprob: -3.4916298389434814
    8. ' dirty' → logprob: -3.4916298389434814
    9. ' all' → logprob: -3.4916298389434814
    10. 'indices' → logprob: -3.8666298389434814

Token 230: ' ' (ID: 220)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.9264628291130066
    2. 'ed' → logprob: -1.5514628887176514
    3. 's' → logprob: -2.1764628887176514
    4. '_positions' → logprob: -2.1764628887176514
    5. ' =' → logprob: -2.5514628887176514
    6. '_to' → logprob: -3.5514628887176514
    7. 'es' → logprob: -3.5514628887176514
    8. '_dirty' → logprob: -4.551462650299072
    9. '=' → logprob: -5.426462650299072
    10. '_mapping' → logprob: -5.551462650299072

Token 231: '0' (ID: 15)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.2863196134567261
    2. ' =' → logprob: -2.4113197326660156
    3. '_positions' → logprob: -2.7863197326660156
    4. 's' → logprob: -3.4113197326660156
    5. '_to' → logprob: -4.161319732666016
    6. '0' → logprob: -4.286319732666016
    7. 'ed' → logprob: -4.786319732666016
    8. '=' → logprob: -4.911319732666016
    9. '_dirty' → logprob: -5.286319732666016
    10. '_mapping' → logprob: -5.536319732666016

Token 232: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.134451150894165
    2. '<|end|>' → logprob: -1.134451150894165
    3. ' =' → logprob: -1.509451150894165
    4. ':' → logprob: -2.634451150894165
    5. ' is' → logprob: -3.759451150894165
    6. ' for' → logprob: -4.009450912475586
    7. '=' → logprob: -4.634450912475586
    8. '<|end|>' → logprob: -5.259450912475586
    9. ' ,' → logprob: -5.884450912475586
    10. 'for' → logprob: -7.009450912475586

Token 233: ' robot' (ID: 20808)
  Prédit: ' robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robot' → logprob: -0.34864887595176697
    2. 'robot' → logprob: -1.2236489057540894
    3. '(robot' → logprob: -8.723649024963379
    4. '.robot' → logprob: -11.098649024963379
    5. '_robot' → logprob: -11.473649024963379
    6. ' (' → logprob: -12.598649024963379
    7. ')' → logprob: -13.098649024963379
    8. '[' → logprob: -13.598649024963379
    9. '   ' → logprob: -13.598649024963379
    10. ' o' → logprob: -14.348649024963379

Token 234: ' start' (ID: 1604)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.02023235894739628
    2. '_positions' → logprob: -4.770232200622559
    3. ',' → logprob: -5.395232200622559
    4. 'pos' → logprob: -6.145232200622559
    5. '<|end|>' → logprob: -6.395232200622559
    6. ')' → logprob: -6.395232200622559
    7. '_' → logprob: -7.645232200622559
    8. '_position' → logprob: -8.395232200622559
    9. '_,' → logprob: -9.145232200622559
    10. '<|end|>' → logprob: -9.145232200622559

Token 235: ' position' (ID: 4010)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.8223143219947815
    2. ',' → logprob: -1.1973142623901367
    3. ')' → logprob: -2.4473142623901367
    4. '<|end|>' → logprob: -2.4473142623901367
    5. 'pos' → logprob: -3.4473142623901367
    6. '_position' → logprob: -4.072314262390137
    7. 'position' → logprob: -4.572314262390137
    8. '_positions' → logprob: -4.697314262390137
    9. ' position' → logprob: -5.572314262390137
    10. ' ,' → logprob: -5.572314262390137

Token 236: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37816357612609863
    2. ',' → logprob: -1.2531635761260986
    3. ',
' → logprob: -4.1281633377075195
    4. 'positions' → logprob: -5.7531633377075195
    5. ' positions' → logprob: -6.3781633377075195
    6. '
' → logprob: -6.3781633377075195
    7. ' ,' → logprob: -6.6281633377075195
    8. '_positions' → logprob: -7.1281633377075195
    9. '<|end|>' → logprob: -7.6281633377075195
    10. ' dirty' → logprob: -7.7531633377075195

Token 237: ' index' (ID: 3472)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.3550371825695038
    2. ' dirty' → logprob: -2.105037212371826
    3. 'positions' → logprob: -2.480037212371826
    4. 'dirty' → logprob: -3.230037212371826
    5. '       ' → logprob: -4.105037212371826
    6. ' indices' → logprob: -5.105037212371826
    7. ' [' → logprob: -5.105037212371826
    8. ' points' → logprob: -5.230037212371826
    9. '[' → logprob: -5.480037212371826
    10. 'indices' → logprob: -6.105037212371826

Token 238: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6486888527870178
    2. '=' → logprob: -1.273688793182373
    3. ' =' → logprob: -1.898688793182373
    4. '1' → logprob: -3.148688793182373
    5. '0' → logprob: -5.523688793182373
    6. ':' → logprob: -8.148689270019531
    7. ',' → logprob: -9.273689270019531
    8. '  ' → logprob: -10.023689270019531
    9. '```' → logprob: -10.023689270019531
    10. '[' → logprob: -10.398689270019531

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22177718579769135
    2. '=' → logprob: -1.7217772006988525
    3. ' ' → logprob: -4.096776962280273
    4. '0' → logprob: -6.471776962280273
    5. ' =' → logprob: -6.471776962280273
    6. '```' → logprob: -8.971776962280273
    7. ':' → logprob: -9.596776962280273
    8. '>' → logprob: -10.346776962280273
    9. '=len' → logprob: -10.346776962280273
    10. 'dirty' → logprob: -10.846776962280273

Token 240: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001143314759247005
    2. ',' → logprob: -7.501143455505371
    3. ' :' → logprob: -7.751143455505371
    4. '+:' → logprob: -9.876143455505371
    5. ':]' → logprob: -11.126143455505371
    6. '+' → logprob: -11.126143455505371
    7. '```' → logprob: -11.376143455505371
    8. ' onwards' → logprob: -11.751143455505371
    9. ':**' → logprob: -11.876143455505371
    10. ':
' → logprob: -11.876143455505371

Token 241: 'n' (ID: 77)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.21856801211833954
    2. '=len' → logprob: -2.4685680866241455
    3. '=' → logprob: -2.5935680866241455
    4. ' len' → logprob: -4.218567848205566
    5. ' =' → logprob: -4.718567848205566
    6. ':' → logprob: -4.843567848205566
    7. 'n' → logprob: -6.093567848205566
    8. '[len' → logprob: -6.718567848205566
    9. '...' → logprob: -7.843567848205566
    10. '<len' → logprob: -8.218567848205566

Token 242: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08526965230703354
    2. ' =' → logprob: -3.2102696895599365
    3. '+' → logprob: -3.5852696895599365
    4. '=' → logprob: -5.085269451141357
    5. ' dirty' → logprob: -5.835269451141357
    6. 'dirty' → logprob: -6.335269451141357
    7. ' :' → logprob: -6.960269451141357
    8. '+:' → logprob: -7.335269451141357
    9. '_dirty' → logprob: -7.835269451141357
    10. ' for' → logprob: -8.960269927978516

Token 243: ' dirty' (ID: 32042)
  Prédit: ' dirty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dirty' → logprob: -0.42906203866004944
    2. 'dirty' → logprob: -1.054062008857727
    3. ' positions' → logprob: -9.429061889648438
    4. '   ' → logprob: -9.679061889648438
    5. '_dirty' → logprob: -9.679061889648438
    6. 'the' → logprob: -10.304061889648438
    7. ' the' → logprob: -10.429061889648438
    8. '```' → logprob: -11.304061889648438
    9. ' dirt' → logprob: -11.929061889648438
    10. 'd' → logprob: -11.929061889648438

Token 244: ' tiles' (ID: 33001)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.1008547991514206
    2. '_tiles' → logprob: -2.8508548736572266
    3. '_' → logprob: -3.7258548736572266
    4. ' _' → logprob: -4.350854873657227
    5. ' tiles' → logprob: -7.475854873657227
    6. ' positions' → logprob: -8.600854873657227
    7. 'positions' → logprob: -9.350854873657227
    8. '_points' → logprob: -9.725854873657227
    9. '```' → logprob: -9.975854873657227
    10. 'tiles' → logprob: -10.350854873657227

Token 245: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3646731972694397
    2. 'positions' → logprob: -1.989673137664795
    3. '       ' → logprob: -2.989673137664795
    4. ' positions' → logprob: -3.239673137664795
    5. ',' → logprob: -3.614673137664795
    6. '_positions' → logprob: -4.364673137664795
    7. '<|end|>' → logprob: -4.489673137664795
    8. '        
' → logprob: -5.114673137664795
    9. 'indices' → logprob: -5.614673137664795
    10. ',
' → logprob: -5.614673137664795

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3088129460811615
    2. ' positions' → logprob: -1.9338129758834839
    3. 'positions' → logprob: -2.3088128566741943
    4. '_positions' → logprob: -5.808813095092773
    5. 'points' → logprob: -6.058813095092773
    6. ')' → logprob: -6.058813095092773
    7. '
' → logprob: -6.183813095092773
    8. '<|end|>' → logprob: -6.308813095092773
    9. ' points' → logprob: -6.433813095092773
    10. ',' → logprob: -6.933813095092773

Token 247: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.8247116804122925
    2. 'positions' → logprob: -1.3247116804122925
    3. ' points' → logprob: -1.8247116804122925
    4. ' positions' → logprob: -2.324711799621582
    5. 'nodes' → logprob: -4.324711799621582
    6. 'all' → logprob: -4.699711799621582
    7. '       ' → logprob: -5.574711799621582
    8. ' nodes' → logprob: -5.949711799621582
    9. 'pos' → logprob: -6.074711799621582
    10. ' all' → logprob: -6.449711799621582

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005240275990217924
    2. '=' → logprob: -5.255240440368652
    3. '=[' → logprob: -12.755240440368652
    4. ' =[' → logprob: -13.755240440368652
    5. ')' → logprob: -13.880240440368652
    6. '<|end|>' → logprob: -14.755240440368652
    7. ']' → logprob: -15.130240440368652
    8. '=[]' → logprob: -15.630240440368652
    9. '[' → logprob: -15.880240440368652
    10. '＝' → logprob: -16.130239486694336

Token 249: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008027350530028343
    2. '[r' → logprob: -5.25802755355835
    3. '[(' → logprob: -6.50802755355835
    4. ' [' → logprob: -6.75802755355835
    5. '[player' → logprob: -10.383027076721191
    6. '[node' → logprob: -10.508027076721191
    7. '[row' → logprob: -10.758027076721191
    8. '[obj' → logprob: -11.133027076721191
    9. '[random' → logprob: -11.633027076721191
    10. '[root' → logprob: -11.883027076721191

Token 250: 'robot' (ID: 33218)
  Prédit: 'robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robot' → logprob: -1.2352385965641588e-05
    2. ' robot' → logprob: -11.375012397766113
    3. '(robot' → logprob: -14.000012397766113
    4. 'rob' → logprob: -17.625011444091797
    5. '.robot' → logprob: -18.250011444091797
    6. 'room' → logprob: -18.500011444091797
    7. 'robots' → logprob: -18.750011444091797
    8. 'Robot' → logprob: -19.750011444091797
    9. '_robot' → logprob: -19.875011444091797
    10. '   ' → logprob: -20.375011444091797

Token 251: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.2200749754119897e-06
    2. 'pos' → logprob: -13.500001907348633
    3. '_positions' → logprob: -14.750001907348633
    4. 'Pos' → logprob: -15.125001907348633
    5. ' _' → logprob: -16.875001907348633
    6. '_' → logprob: -17.625001907348633
    7. ''_' → logprob: -18.250001907348633
    8. '_POS' → logprob: -18.250001907348633
    9. ']_' → logprob: -18.375001907348633
    10. '```' → logprob: -18.375001907348633

Token 252: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.762356209335849e-05
    2. ']+' → logprob: -10.37503719329834
    3. ' ]' → logprob: -12.87503719329834
    4. ']
' → logprob: -12.87503719329834
    5. ',' → logprob: -14.25003719329834
    6. ')' → logprob: -15.25003719329834
    7. ']

' → logprob: -16.250038146972656
    8. ')]' → logprob: -16.750038146972656
    9. '']' → logprob: -17.875038146972656
    10. '}' → logprob: -18.000038146972656

Token 253: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31415799260139465
    2. '+' → logprob: -1.3141579627990723
    3. '.extend' → logprob: -7.189157962799072
    4. '<|end|>' → logprob: -10.31415843963623
    5. '+d' → logprob: -10.56415843963623
    6. ' +=' → logprob: -10.81415843963623
    7. ']' → logprob: -11.06415843963623
    8. ')' → logprob: -11.18915843963623
    9. '+p' → logprob: -12.06415843963623
    10. ']+' → logprob: -12.18915843963623

Token 254: ' dirty' (ID: 32042)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirty' → logprob: -0.0067154900170862675
    2. ' dirty' → logprob: -5.006715297698975
    3. '_dirty' → logprob: -16.006715774536133
    4. 'Dirty' → logprob: -17.256715774536133
    5. 'dust' → logprob: -17.881715774536133
    6. 'd' → logprob: -17.881715774536133
    7. ' dirt' → logprob: -18.756715774536133
    8. '[' → logprob: -18.881715774536133
    9. 'dry' → logprob: -19.256715774536133
    10. 'clean' → logprob: -19.381715774536133

Token 255: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -7.493430894101039e-05
    2. 'positions' → logprob: -9.500075340270996
    3. 'Positions' → logprob: -17.62507438659668
    4. '```' → logprob: -18.62507438659668
    5. '_' → logprob: -18.75007438659668
    6. ' positions' → logprob: -19.87507438659668
    7. '_points' → logprob: -20.12507438659668
    8. '[_' → logprob: -20.37507438659668
    9. ' _' → logprob: -20.50007438659668
    10. '[' → logprob: -21.00007438659668

Token 256: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6704487800598145
    2. '
' → logprob: -0.7954487800598145
    3. '<|end|>' → logprob: -3.6704487800598145
    4. '        
' → logprob: -5.0454487800598145
    5. ',' → logprob: -7.1704487800598145
    6. '    
' → logprob: -7.2954487800598145
    7. '<|end|>' → logprob: -7.2954487800598145
    8. '   ' → logprob: -7.2954487800598145
    9. '  
' → logprob: -7.5454487800598145
    10. ',
' → logprob: -8.295448303222656

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27194923162460327
    2. '
' → logprob: -1.896949291229248
    3. '        
' → logprob: -3.771949291229248
    4. '<|end|>' → logprob: -4.146949291229248
    5. '   ' → logprob: -4.396949291229248
    6. ',' → logprob: -4.646949291229248
    7. 'n' → logprob: -5.396949291229248
    8. ',
' → logprob: -5.521949291229248
    9. '```' → logprob: -5.521949291229248
    10. '    
' → logprob: -5.896949291229248

Token 258: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.04205130785703659
    2. ' n' → logprob: -3.542051315307617
    3. '       ' → logprob: -4.917051315307617
    4. 'num' → logprob: -6.042051315307617
    5. 'import' → logprob: -7.167051315307617
    6. 'distance' → logprob: -7.667051315307617
    7. 'dist' → logprob: -7.792051315307617
    8. '
' → logprob: -8.417051315307617
    9. '   ' → logprob: -8.542051315307617
    10. '```' → logprob: -9.542051315307617

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004621187690645456
    2. '=' → logprob: -5.3796210289001465
    3. ')' → logprob: -14.879621505737305
    4. '=len' → logprob: -15.629621505737305
    5. ' =
' → logprob: -15.629621505737305
    6. ',' → logprob: -16.004621505737305
    7. '=int' → logprob: -16.879621505737305
    8. 's' → logprob: -17.504621505737305
    9. '=num' → logprob: -17.754621505737305
    10. '```' → logprob: -17.879621505737305

Token 260: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04859202727675438
    2. ' len' → logprob: -3.0485920906066895
    3. '(len' → logprob: -12.298591613769531
    4. '[len' → logprob: -16.67359161376953
    5. '=len' → logprob: -18.04859161376953
    6. '	len' → logprob: -19.29859161376953
    7. '<len' → logprob: -21.67359161376953
    8. ',len' → logprob: -21.67359161376953
    9. '```' → logprob: -22.29859161376953
    10. 'n' → logprob: -22.79859161376953

Token 261: '(d' (ID: 2572)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0005738823674619198
    2. '(d' → logprob: -7.500574111938477
    3. '(' → logprob: -11.125574111938477
    4. 'points' → logprob: -12.125574111938477
    5. 'dirty' → logprob: -15.000574111938477
    6. ' points' → logprob: -15.625574111938477
    7. '(
' → logprob: -16.250574111938477
    8. '	points' → logprob: -16.375574111938477
    9. 'd' → logprob: -16.750574111938477
    10. '(point' → logprob: -16.875574111938477

Token 262: 'irty' (ID: 25209)
  Prédit: 'irty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irty' → logprob: -0.03785727545619011
    2. 'points' → logprob: -3.6628572940826416
    3. 'dirty' → logprob: -4.7878570556640625
    4. 'ir' → logprob: -7.4128570556640625
    5. ' points' → logprob: -7.5378570556640625
    6. '_points' → logprob: -7.5378570556640625
    7. 'irt' → logprob: -8.037857055664062
    8. 'i' → logprob: -8.412857055664062
    9. 'oints' → logprob: -8.412857055664062
    10. '(points' → logprob: -8.537857055664062

Token 263: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0006650181603617966
    2. '_points' → logprob: -7.500665187835693
    3. 'positions' → logprob: -9.125664710998535
    4. ')' → logprob: -13.375664710998535
    5. ')_' → logprob: -14.250664710998535
    6. 'points' → logprob: -14.500664710998535
    7. ' positions' → logprob: -16.00066566467285
    8. '_' → logprob: -16.25066566467285
    9. 'Positions' → logprob: -16.37566566467285
    10. '```' → logprob: -16.75066566467285

Token 264: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038676580879837275
    2. ')+' → logprob: -6.2538676261901855
    3. '+' → logprob: -6.3788676261901855
    4. ' +' → logprob: -8.878868103027344
    5. ')
' → logprob: -9.753868103027344
    6. ' )' → logprob: -10.253868103027344
    7. '<|end|>' → logprob: -13.378868103027344
    8. '   ' → logprob: -13.628868103027344
    9. '
' → logprob: -14.253868103027344
    10. '```' → logprob: -14.378868103027344

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27636823058128357
    2. '
' → logprob: -2.2763681411743164
    3. ',' → logprob: -3.1513681411743164
    4. ' distances' → logprob: -3.2763681411743164
    5. ',
' → logprob: -4.026368141174316
    6. ')' → logprob: -4.276368141174316
    7. '        
' → logprob: -4.776368141174316
    8. 'distance' → logprob: -4.901368141174316
    9. '   ' → logprob: -6.401368141174316
    10. 'dist' → logprob: -6.901368141174316

Token 266: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.24852822721004486
    2. '#' (adapté à ' #') → logprob: -2.123528242111206
    3. 'distance' → logprob: -3.248528242111206
    4. '
' → logprob: -3.498528242111206
    5. '       ' → logprob: -4.373528003692627
    6. 'def' → logprob: -4.748528003692627
    7. 'import' → logprob: -5.623528003692627
    8. 'dp' → logprob: -6.498528003692627
    9. '   ' → logprob: -6.623528003692627
    10. ' distances' → logprob: -6.998528003692627

Token 267: ' Pre' (ID: 4659)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20767538249492645
    2. 'def' → logprob: -2.2076754570007324
    3. '#' → logprob: -2.7076754570007324
    4. 'distance' → logprob: -4.832675457000732
    5. 'INF' → logprob: -6.957675457000732
    6. 'from' → logprob: -7.207675457000732
    7. 'graph' → logprob: -7.957675457000732
    8. 'dp' → logprob: -8.082674980163574
    9. '
' → logprob: -8.707674980163574
    10. 'import' → logprob: -9.582674980163574

Token 268: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0008049834286794066
    2. 'pare' → logprob: -7.750804901123047
    3. 'calculate' → logprob: -9.000804901123047
    4. 'comput' → logprob: -9.375804901123047
    5. 'computed' → logprob: -9.625804901123047
    6. ' compute' → logprob: -10.250804901123047
    7. 'distance' → logprob: -11.500804901123047
    8. '#' → logprob: -12.000804901123047
    9. 'pend' → logprob: -12.000804901123047
    10. '       ' → logprob: -12.000804901123047

Token 269: ' shortest' (ID: 70564)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09785173833370209
    2. ' distances' → logprob: -2.5978517532348633
    3. ' dist' → logprob: -4.097851753234863
    4. 'distance' → logprob: -6.222851753234863
    5. ' distance' → logprob: -8.847851753234863
    6. '   ' → logprob: -11.097851753234863
    7. 'def' → logprob: -11.097851753234863
    8. 'd' → logprob: -12.847851753234863
    9. '	dist' → logprob: -12.847851753234863
    10. '_dist' → logprob: -12.972851753234863

Token 270: ' distances' (ID: 48294)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.4706907868385315
    2. 'dist' → logprob: -1.3456907272338867
    3. ' distances' → logprob: -2.5956907272338867
    4. '_paths' → logprob: -3.5956907272338867
    5. '_' → logprob: -4.595690727233887
    6. 'paths' → logprob: -7.220690727233887
    7. '_distance' → logprob: -7.470690727233887
    8. '_path' → logprob: -7.595690727233887
    9. 'distance' → logprob: -7.845690727233887
    10. ' paths' → logprob: -8.220690727233887

Token 271: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.19298765063285828
    2. 'between' → logprob: -2.3179876804351807
    3. ' =' → logprob: -3.5679876804351807
    4. '_between' → logprob: -3.6929876804351807
    5. '=' → logprob: -5.067987442016602
    6. '<|end|>' → logprob: -5.317987442016602
    7. 'from' → logprob: -5.567987442016602
    8. '(' → logprob: -6.317987442016602
    9. '       ' → logprob: -6.692987442016602
    10. '   ' → logprob: -6.817987442016602

Token 272: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3965266942977905
    2. 'all' → logprob: -1.2715266942977905
    3. ' points' → logprob: -3.14652681350708
    4. 'points' → logprob: -5.77152681350708
    5. ' each' → logprob: -8.521526336669922
    6. 'each' → logprob: -8.521526336669922
    7. ' every' → logprob: -9.021526336669922
    8. 'every' → logprob: -9.271526336669922
    9. '	all' → logprob: -9.896526336669922
    10. ' pairs' → logprob: -10.271526336669922

Token 273: ' points' (ID: 5571)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.25784188508987427
    2. 'pairs' → logprob: -1.7578418254852295
    3. ' points' → logprob: -3.2578418254852295
    4. 'points' → logprob: -4.132842063903809
    5. '_pairs' → logprob: -8.382842063903809
    6. '-p' → logprob: -9.257842063903809
    7. ' pair' → logprob: -11.257842063903809
    8. '_points' → logprob: -11.632842063903809
    9. 'pair' → logprob: -12.507842063903809
    10. '	points' → logprob: -13.007842063903809

Token 274: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19711817800998688
    2. ':' → logprob: -3.0721182823181152
    3. ',' → logprob: -3.3221182823181152
    4. ' distances' → logprob: -3.9471182823181152
    5. '        
' → logprob: -4.072118282318115
    6. '
' → logprob: -4.197118282318115
    7. 'dist' → logprob: -4.447118282318115
    8. ' =' → logprob: -4.447118282318115
    9. '   ' → logprob: -5.697118282318115
    10. '<|end|>' → logprob: -5.697118282318115

Token 275: ' interest' (ID: 3425)
  Prédit: 'interest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interest' → logprob: -0.11660470813512802
    2. ' interest' → logprob: -2.241604804992676
    3. 'points' → logprob: -5.866604804992676
    4. ' points' → logprob: -7.491604804992676
    5. 'range' → logprob: -8.991604804992676
    6. 'inter' → logprob: -9.366604804992676
    7. ' interests' → logprob: -10.116604804992676
    8. '_interest' → logprob: -10.116604804992676
    9. '-interest' → logprob: -10.116604804992676
    10. '#' → logprob: -11.616604804992676

Token 276: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.982538640499115
    2. ':' → logprob: -1.7325387001037598
    3. 'dist' → logprob: -1.9825387001037598
    4. ' distances' → logprob: -2.1075387001037598
    5. ',' → logprob: -2.8575387001037598
    6. 'distance' → logprob: -2.9825387001037598
    7. ' =' → logprob: -3.4825387001037598
    8. '   ' → logprob: -3.8575387001037598
    9. '=' → logprob: -5.48253870010376
    10. '
' → logprob: -5.48253870010376

Token 277: ' BFS' (ID: 190016)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1890028566122055
    2. 'B' → logprob: -1.8140028715133667
    3. 'def' → logprob: -5.189002990722656
    4. 'deque' → logprob: -6.064002990722656
    5. ' bfs' → logprob: -7.314002990722656
    6. ' BFS' → logprob: -7.689002990722656
    7. 'bread' → logprob: -9.814002990722656
    8. 'collections' → logprob: -9.814002990722656
    9. '```' → logprob: -10.564002990722656
    10. '_b' → logprob: -11.564002990722656

Token 278: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0962740033864975
    2. '       ' → logprob: -2.971273899078369
    3. ':' → logprob: -4.096273899078369
    4. '        
' → logprob: -5.346273899078369
    5. 'def' → logprob: -5.846273899078369
    6. ' distances' → logprob: -5.971273899078369
    7. ',' → logprob: -6.096273899078369
    8. '  
' → logprob: -6.346273899078369
    9. '    
' → logprob: -6.721273899078369
    10. '<|end|>' → logprob: -6.846273899078369

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014055732637643814
    2. ' distances' → logprob: -5.0140557289123535
    3. '        
' → logprob: -5.8890557289123535
    4. '
' → logprob: -6.5140557289123535
    5. ',' → logprob: -7.0140557289123535
    6. 'distance' → logprob: -8.014056205749512
    7. 'dist' → logprob: -8.139056205749512
    8. 'def' → logprob: -8.139056205749512
    9. '<|end|>' → logprob: -8.139056205749512
    10. '   ' → logprob: -8.639056205749512

Token 280: ' dist' (ID: 3601)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -1.0581331253051758
    2. 'dist' (adapté à ' dist') → logprob: -1.1831331253051758
    3. '       ' → logprob: -1.4331331253051758
    4. 'def' → logprob: -3.058133125305176
    5. 'distance' → logprob: -3.433133125305176
    6. '
' → logprob: -4.558133125305176
    7. ' dist' → logprob: -4.683133125305176
    8. ' distance' → logprob: -5.433133125305176
    9. ' def' → logprob: -6.308133125305176
    10. '        
' → logprob: -6.433133125305176

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06544223427772522
    2. 'ances' → logprob: -3.0654423236846924
    3. 's' → logprob: -4.815442085266113
    4. '=' → logprob: -4.815442085266113
    5. '=[]' → logprob: -8.940442085266113
    6. 'ance' → logprob: -9.065442085266113
    7. '_matrix' → logprob: -9.315442085266113
    8. '=[' → logprob: -9.690442085266113
    9. '   ' → logprob: -10.065442085266113
    10. '=[[' → logprob: -11.065442085266113

Token 282: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.048814114183187485
    2. ' [[' → logprob: -3.048814058303833
    3. '[' → logprob: -8.548813819885254
    4. '[]' → logprob: -10.798813819885254
    5. ' [' → logprob: -11.423813819885254
    6. '[]
' → logprob: -14.423813819885254
    7. ' []' → logprob: -14.548813819885254
    8. '[['' → logprob: -16.04881477355957
    9. '[][]' → logprob: -16.29881477355957
    10. ' ' → logprob: -16.42381477355957

Token 283: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007182692061178386
    2. 'float' → logprob: -7.250718116760254
    3. ' -' → logprob: -12.500718116760254
    4. '0' → logprob: -13.125718116760254
    5. '-f' → logprob: -13.250718116760254
    6. '-inf' → logprob: -14.625718116760254
    7. '[-' → logprob: -15.875718116760254
    8. ' float' → logprob: -16.12571907043457
    9. 'None' → logprob: -16.75071907043457
    10. 'int' → logprob: -17.00071907043457

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '2' → logprob: -17.5
    4. '-' → logprob: -18.0
    5. '   ' → logprob: -18.625
    6. '
' → logprob: -20.0
    7. '```' → logprob: -20.0
    8. 'inf' → logprob: -20.375
    9. '(' → logprob: -20.5
    10. '

' → logprob: -20.5625

Token 285: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07226777821779251
    2. 'for' → logprob: -2.697267770767212
    3. ']' → logprob: -6.322268009185791
    4. ']*' → logprob: -7.822268009185791
    5. ']*(' → logprob: -9.072267532348633
    6. '	for' → logprob: -12.072267532348633
    7. ' ]' → logprob: -12.197267532348633
    8. '                   ' → logprob: -13.947267532348633
    9. '   ' → logprob: -13.947267532348633
    10. '               ' → logprob: -14.072267532348633

Token 286: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0020869735162705183
    2. 'len' → logprob: -6.752087116241455
    3. '(n' → logprob: -7.127087116241455
    4. 'w' → logprob: -10.252086639404297
    5. ' n' → logprob: -10.252086639404297
    6. '(' → logprob: -10.877086639404297
    7. '   ' → logprob: -11.627086639404297
    8. '(len' → logprob: -11.752086639404297
    9. '           ' → logprob: -13.752086639404297
    10. '(w' → logprob: -13.877086639404297

Token 287: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005587508203461766
    2. ' +' → logprob: -7.500558853149414
    3. '+
' → logprob: -12.125558853149414
    4. '   ' → logprob: -17.000558853149414
    5. '+)' → logprob: -17.125558853149414
    6. ' +
' → logprob: -17.125558853149414
    7. '1' → logprob: -17.125558853149414
    8. ')' → logprob: -17.250558853149414
    9. '
' → logprob: -17.250558853149414
    10. '+n' → logprob: -17.375558853149414

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016063073417171836
    2. '2' → logprob: -8.750160217285156
    3. ' ' → logprob: -13.500160217285156
    4. '
' → logprob: -14.875160217285156
    5. '

' → logprob: -16.125160217285156
    6. '   ' → logprob: -16.687660217285156
    7. '```' → logprob: -16.687660217285156
    8. '１' → logprob: -17.312660217285156
    9. '۱' → logprob: -17.375160217285156
    10. 'n' → logprob: -17.500160217285156

Token 289: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002762326330412179
    2. ' )' → logprob: -8.250276565551758
    3. ')
' → logprob: -12.500276565551758
    4. '   ' → logprob: -12.875276565551758
    5. '+' → logprob: -13.125276565551758
    6. 'for' → logprob: -13.250276565551758
    7. '       ' → logprob: -13.750276565551758
    8. ' for' → logprob: -14.125276565551758
    9. '```' → logprob: -14.500276565551758
    10. ')]' → logprob: -14.625276565551758

Token 290: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03805147483944893
    2. 'for' → logprob: -3.2880513668060303
    3. '   ' → logprob: -11.91305160522461
    4. '       ' → logprob: -13.53805160522461
    5. ')' → logprob: -14.53805160522461
    6. ' ' → logprob: -14.78805160522461
    7. '           ' → logprob: -15.16305160522461
    8. '               ' → logprob: -15.41305160522461
    9. '	for' → logprob: -15.41305160522461
    10. ']' → logprob: -16.16305160522461

Token 291: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00788792036473751
    2. ' _' → logprob: -4.882887840270996
    3. '_i' → logprob: -8.757887840270996
    4. '_in' → logprob: -9.507887840270996
    5. '_range' → logprob: -10.882887840270996
    6. ' i' → logprob: -11.757887840270996
    7. 'i' → logprob: -12.382887840270996
    8. '_n' → logprob: -12.757887840270996
    9. '_points' → logprob: -12.882887840270996
    10. ' in' → logprob: -13.132887840270996

Token 292: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3912356197834015
    2. ' range' → logprob: -1.141235589981079
    3. 'in' → logprob: -6.016235828399658
    4. ' in' → logprob: -6.266235828399658
    5. '_range' → logprob: -11.7662353515625
    6. '_' → logprob: -12.6412353515625
    7. 'n' → logprob: -12.6412353515625
    8. '(range' → logprob: -13.6412353515625
    9. '	range' → logprob: -14.2662353515625
    10. 'x' → logprob: -15.2662353515625

Token 293: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007616798859089613
    2. ' range' → logprob: -4.882616996765137
    3. '
' → logprob: -12.007616996765137
    4. '   ' → logprob: -13.632616996765137
    5. '(range' → logprob: -13.632616996765137
    6. ' ' → logprob: -13.757616996765137
    7. '  ' → logprob: -15.132616996765137
    8. '	range' → logprob: -15.382616996765137
    9. ' 
' → logprob: -16.13261604309082
    10. '     ' → logprob: -16.63261604309082

Token 294: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09720791131258011
    2. 'n' → logprob: -2.472208023071289
    3. 'range' → logprob: -5.472208023071289
    4. ' (' → logprob: -5.972208023071289
    5. ' n' → logprob: -7.222208023071289
    6. ' range' → logprob: -7.722208023071289
    7. '(range' → logprob: -9.222208023071289
    8. '
' → logprob: -10.097208023071289
    9. ')' → logprob: -10.222208023071289
    10. 'w' → logprob: -10.597208023071289

Token 295: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2961512513575144e-05
    2. ' +' → logprob: -11.125022888183594
    3. '+
' → logprob: -11.875022888183594
    4. '1' → logprob: -14.375022888183594
    5. ')+' → logprob: -15.875022888183594
    6. '+)' → logprob: -16.125022888183594
    7. ')' → logprob: -16.125022888183594
    8. '＋' → logprob: -17.125022888183594
    9. '```' → logprob: -17.125022888183594
    10. '   ' → logprob: -17.250022888183594

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3438327843905427e-05
    2. ' ' → logprob: -10.87502384185791
    3. '
' → logprob: -13.81252384185791
    4. '+' → logprob: -14.18752384185791
    5. ')' → logprob: -14.37502384185791
    6. '```' → logprob: -14.62502384185791
    7. '2' → logprob: -15.00002384185791
    8. '0' → logprob: -15.56252384185791
    9. '   ' → logprob: -15.62502384185791
    10. 'n' → logprob: -16.125022888183594

Token 297: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.03521392197581e-05
    2. ')' → logprob: -11.000030517578125
    3. ')]
' → logprob: -12.375030517578125
    4. ']' → logprob: -12.500030517578125
    5. '   ' → logprob: -13.125030517578125
    6. '       ' → logprob: -13.250030517578125
    7. ' )' → logprob: -13.500030517578125
    8. ' ]' → logprob: -16.250030517578125
    9. ')]

' → logprob: -16.375030517578125
    10. '))' → logprob: -16.875030517578125

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.699211061000824
    2. ' for' → logprob: -1.1992111206054688
    3. '   ' → logprob: -2.6992111206054688
    4. '
' → logprob: -2.6992111206054688
    5. 'for' → logprob: -2.9492111206054688
    6. 'def' → logprob: -5.449211120605469
    7. ')' → logprob: -6.074211120605469
    8. '        
' → logprob: -6.449211120605469
    9. ':' → logprob: -6.699211120605469
    10. '    
' → logprob: -6.699211120605469

Token 299: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.7102399468421936
    2. 'for' → logprob: -0.7102399468421936
    3. '       ' → logprob: -4.460239887237549
    4. ' for' → logprob: -5.835239887237549
    5. '   ' → logprob: -6.085239887237549
    6. 'queue' → logprob: -9.585240364074707
    7. '
' → logprob: -10.085240364074707
    8. ' def' → logprob: -10.335240364074707
    9. '        
' → logprob: -11.210240364074707
    10. ')' → logprob: -11.460240364074707

Token 300: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038042180240154266
    2. ' bfs' → logprob: -3.2880420684814453
    3. '_b' → logprob: -15.163042068481445
    4. '	b' → logprob: -15.538042068481445
    5. '-b' → logprob: -16.038042068481445
    6. '```' → logprob: -16.788042068481445
    7. '.b' → logprob: -18.663042068481445
    8. 'B' → logprob: -18.663042068481445
    9. 'short' → logprob: -18.663042068481445
    10. ' shortest' → logprob: -18.663042068481445

Token 301: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.024822324514389038
    2. '(s' → logprob: -4.274822235107422
    3. '(' → logprob: -5.149822235107422
    4. '(y' → logprob: -5.399822235107422
    5. ' (' → logprob: -9.274822235107422
    6. '(sr' → logprob: -10.024822235107422
    7. '(point' → logprob: -10.649822235107422
    8. '(source' → logprob: -10.649822235107422
    9. '(i' → logprob: -10.899822235107422
    10. '(src' → logprob: -11.149822235107422

Token 302: '_y' (ID: 9410)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.6434493064880371
    2. '(y' → logprob: -1.518449306488037
    3. '):' → logprob: -1.643449306488037
    4. '(s' → logprob: -4.018449306488037
    5. ',' → logprob: -4.143449306488037
    6. '):
' → logprob: -4.268449306488037
    7. ')(' → logprob: -6.018449306488037
    8. '   ' → logprob: -6.268449306488037
    9. '_start' → logprob: -6.393449306488037
    10. '_y' → logprob: -6.643449306488037

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.074907287256792e-05
    2. ' ,' → logprob: -10.00006103515625
    3. ',y' → logprob: -11.87506103515625
    4. ',start' → logprob: -12.00006103515625
    5. ',
' → logprob: -14.50006103515625
    6. '   ' → logprob: -15.00006103515625
    7. '‌,' → logprob: -15.25006103515625
    8. ',end' → logprob: -15.62506103515625
    9. ',s' → logprob: -15.75006103515625
    10. ',n' → logprob: -16.00006103515625

Token 304: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0017031522002071142
    2. ' start' → logprob: -6.376703262329102
    3. ')' → logprob: -14.626703262329102
    4. '	start' → logprob: -15.751703262329102
    5. '   ' → logprob: -16.0017032623291
    6. ' ' → logprob: -16.8767032623291
    7. '(start' → logprob: -17.1267032623291
    8. 's' → logprob: -17.1267032623291
    9. 'end' → logprob: -17.6267032623291
    10. '  ' → logprob: -18.1267032623291

Token 305: '_x' (ID: 7054)
  Prédit: '_y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.6335250735282898
    2. '_x' → logprob: -0.7585250735282898
    3. 'x' → logprob: -7.3835248947143555
    4. ',' → logprob: -9.008524894714355
    5. 'y' → logprob: -10.258524894714355
    6. '```' → logprob: -10.383524894714355
    7. ')_' → logprob: -10.383524894714355
    8. ')' → logprob: -10.633524894714355
    9. ',_' → logprob: -11.133524894714355
    10. '_' → logprob: -11.383524894714355

Token 306: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05497198924422264
    2. '):
' → logprob: -2.929971933364868
    3. ',' → logprob: -10.179971694946289
    4. '   ' → logprob: -10.929971694946289
    5. '):
' → logprob: -11.429971694946289
    6. ' ):' → logprob: -11.429971694946289
    7. ')' → logprob: -12.179971694946289
    8. '):

' → logprob: -12.554971694946289
    9. ':' → logprob: -13.429971694946289
    10. '       ' → logprob: -13.929971694946289

Token 307: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005871910136193037
    2. ')' → logprob: -6.755871772766113
    3. '   ' → logprob: -7.005871772766113
    4. ' 
' → logprob: -7.380871772766113
    5. ':' → logprob: -7.505871772766113
    6. '        
' → logprob: -7.505871772766113
    7. '<|end|>' → logprob: -8.255871772766113
    8. ',' → logprob: -8.630871772766113
    9. ' ' → logprob: -8.755871772766113
    10. '
' → logprob: -9.005871772766113

Token 308: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7687621712684631
    2. ' queue' → logprob: -1.6437621116638184
    3. 'visited' → logprob: -2.1437621116638184
    4. 'queue' → logprob: -2.5187621116638184
    5. 'dist' → logprob: -3.2687621116638184
    6. ' visited' → logprob: -3.2687621116638184
    7. ' distances' → logprob: -4.018762111663818
    8. '               ' → logprob: -4.143762111663818
    9. '   ' → logprob: -4.518762111663818
    10. '
' → logprob: -4.893762111663818

Token 309: ' BFS' (ID: 190016)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8203280568122864
    2. 'dist' → logprob: -0.9453280568122864
    3. ' visited' → logprob: -2.6953279972076416
    4. '   ' → logprob: -2.9453279972076416
    5. 'queue' → logprob: -3.5703279972076416
    6. ' dist' → logprob: -4.195328235626221
    7. 'distance' → logprob: -6.195328235626221
    8. ' queue' → logprob: -6.195328235626221
    9. 'q' → logprob: -6.570328235626221
    10. '       ' → logprob: -7.320328235626221

Token 310: ' to' (ID: 316)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.11840905994176865
    2. '(start' → logprob: -2.8684091567993164
    3. '
' → logprob: -4.493409156799316
    4. '           ' → logprob: -4.743409156799316
    5. '(
' → logprob: -5.118409156799316
    6. '   ' → logprob: -5.368409156799316
    7. '(' → logprob: -5.493409156799316
    8. 'queue' → logprob: -5.993409156799316
    9. ':' → logprob: -6.118409156799316
    10. ' queue' → logprob: -6.243409156799316

Token 311: ' find' (ID: 1646)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.7907524108886719
    2. 'dist' → logprob: -1.7907524108886719
    3. 'calculate' → logprob: -2.165752410888672
    4. 'find' → logprob: -2.540752410888672
    5. ' find' → logprob: -2.665752410888672
    6. ' compute' → logprob: -3.040752410888672
    7. ' distances' → logprob: -3.165752410888672
    8. ' calculate' → logprob: -4.540752410888672
    9. 'distance' → logprob: -5.165752410888672
    10. 'return' → logprob: -6.415752410888672

Token 312: ' minimum' (ID: 11085)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.2962580621242523
    2. 'dist' → logprob: -1.5462580919265747
    3. 'visited' → logprob: -3.671257972717285
    4. ' visited' → logprob: -4.421257972717285
    5. '   ' → logprob: -6.296257972717285
    6. 'distance' → logprob: -6.546257972717285
    7. ' ' → logprob: -7.421257972717285
    8. ')' → logprob: -8.171257972717285
    9. ' dist' → logprob: -8.546257972717285
    10. ' shortest' → logprob: -8.796257972717285

Token 313: ' moves' (ID: 19523)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.0794895887374878
    2. 'dist' → logprob: -1.3294895887374878
    3. ' distance' → logprob: -1.8294895887374878
    4. ' distances' → logprob: -1.8294895887374878
    5. 'steps' → logprob: -3.0794897079467773
    6. ' steps' → logprob: -3.5794897079467773
    7. ' dist' → logprob: -8.079489707946777
    8. 'moves' → logprob: -8.829489707946777
    9. ' moves' → logprob: -9.704489707946777
    10. '_distance' → logprob: -9.829489707946777

Token 314: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7367861866950989
    2. '(start' → logprob: -1.861786127090454
    3. '   ' → logprob: -2.486786127090454
    4. '       ' → logprob: -2.861786127090454
    5. '(queue' → logprob: -2.986786127090454
    6. ':' → logprob: -2.986786127090454
    7. '):' → logprob: -3.861786127090454
    8. '(' → logprob: -4.111786365509033
    9. ' for' → logprob: -4.486786365509033
    10. ' to' → logprob: -4.486786365509033

Token 315: ' all' (ID: 722)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.25471246242523193
    2. 'each' → logprob: -2.5047125816345215
    3. 'all' → logprob: -2.6297125816345215
    4. ' reach' → logprob: -2.7547125816345215
    5. ' all' → logprob: -6.0047125816345215
    6. ' each' → logprob: -6.2547125816345215
    7. 'reachable' → logprob: -7.0047125816345215
    8. 'visit' → logprob: -7.1297125816345215
    9. '   ' → logprob: -7.7547125816345215
    10. 'every' → logprob: -8.254712104797363

Token 316: ' accessible' (ID: 18240)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6131308078765869
    2. 'reachable' → logprob: -1.613130807876587
    3. ' positions' → logprob: -1.988130807876587
    4. 'points' → logprob: -2.738130807876587
    5. ' points' → logprob: -4.113130569458008
    6. ' reachable' → logprob: -4.238130569458008
    7. 'cells' → logprob: -4.363130569458008
    8. 'valid' → logprob: -4.988130569458008
    9. ' cells' → logprob: -6.238130569458008
    10. 'accessible' → logprob: -6.613130569458008

Token 317: ' tiles' (ID: 33001)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.16278906166553497
    2. 'cells' → logprob: -2.7877891063690186
    3. 'points' → logprob: -3.0377891063690186
    4. ' positions' → logprob: -3.6627891063690186
    5. 'tiles' → logprob: -4.7877888679504395
    6. 'locations' → logprob: -6.0377888679504395
    7. ' cells' → logprob: -6.4127888679504395
    8. ' points' → logprob: -6.4127888679504395
    9. 'places' → logprob: -7.5377888679504395
    10. ' tiles' → logprob: -8.162789344787598

Token 318: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33773380517959595
    2. '       ' → logprob: -1.7127337455749512
    3. '   ' → logprob: -3.587733745574951
    4. '):
' → logprob: -3.712733745574951
    5. ':' → logprob: -3.962733745574951
    6. ':
' → logprob: -4.837733745574951
    7. '):' → logprob: -4.962733745574951
    8. '
' → logprob: -5.462733745574951
    9. '(start' → logprob: -5.462733745574951
    10. 'def' → logprob: -6.087733745574951

Token 319: ' (' (ID: 350)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6849854588508606
    2. ' start' → logprob: -1.5599853992462158
    3. '(start' → logprob: -1.6849853992462158
    4. ' (' → logprob: -2.309985399246216
    5. '(' → logprob: -8.059985160827637
    6. ')' → logprob: -8.684985160827637
    7. '[start' → logprob: -8.684985160827637
    8. '(
' → logprob: -9.309985160827637
    9. '(s' → logprob: -9.934985160827637
    10. '   ' → logprob: -10.309985160827637

Token 320: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0007136239437386394
    2. ' start' → logprob: -7.25071382522583
    3. ')' → logprob: -12.625713348388672
    4. '           ' → logprob: -16.000713348388672
    5. '
' → logprob: -17.000713348388672
    6. '               ' → logprob: -17.875713348388672
    7. ' ' → logprob: -17.875713348388672
    8. '   ' → logprob: -18.250713348388672
    9. '	start' → logprob: -18.250713348388672
    10. '[start' → logprob: -18.500713348388672

Token 321: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.01725459098815918
    2. '_' → logprob: -4.642254829406738
    3. '_,' → logprob: -6.142254829406738
    4. ',' → logprob: -6.267254829406738
    5. ')_' → logprob: -6.517254829406738
    6. ')' → logprob: -6.892254829406738
    7. 'y' → logprob: -8.142254829406738
    8. ' _' → logprob: -8.392254829406738
    9. '_)' → logprob: -8.392254829406738
    10. ',_' → logprob: -10.017254829406738

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021212305000517517
    2. ' ,' → logprob: -9.125211715698242
    3. ',start' → logprob: -9.750211715698242
    4. ')' → logprob: -10.875211715698242
    5. '   ' → logprob: -12.375211715698242
    6. ',y' → logprob: -12.750211715698242
    7. '‌,' → logprob: -12.875211715698242
    8. '```' → logprob: -12.875211715698242
    9. ',
' → logprob: -13.250211715698242
    10. ' ' → logprob: -13.500211715698242

Token 323: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.12694574892520905
    2. ' start' → logprob: -2.126945734024048
    3. ' ' → logprob: -11.626945495605469
    4. '0' → logprob: -12.876945495605469
    5. ',start' → logprob: -13.126945495605469
    6. '   ' → logprob: -14.001945495605469
    7. '	start' → logprob: -14.001945495605469
    8. ',' → logprob: -14.251945495605469
    9. ')' → logprob: -15.376945495605469
    10. '    ' → logprob: -15.376945495605469

Token 324: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.040214065462350845
    2. '_y' → logprob: -3.2902140617370605
    3. ',' → logprob: -6.6652140617370605
    4. 'x' → logprob: -7.2902140617370605
    5. '_,' → logprob: -9.040214538574219
    6. 'y' → logprob: -9.790214538574219
    7. ')' → logprob: -10.915214538574219
    8. '_' → logprob: -12.290214538574219
    9. '   ' → logprob: -12.790214538574219
    10. '```' → logprob: -12.915214538574219

Token 325: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7099990844726562
    2. ')' → logprob: -0.9599990844726562
    3. '):
' → logprob: -2.0849990844726562
    4. ')
' → logprob: -7.209999084472656
    5. '           ' → logprob: -8.959999084472656
    6. '):

' → logprob: -9.209999084472656
    7. '):
' → logprob: -9.459999084472656
    8. '   ' → logprob: -10.084999084472656
    9. '       ' → logprob: -10.834999084472656
    10. ' )' → logprob: -11.959999084472656

Token 326: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7377044558525085
    2. '):' → logprob: -1.6127045154571533
    3. '):
' → logprob: -2.2377045154571533
    4. '           ' → logprob: -2.3627045154571533
    5. '   ' → logprob: -2.7377045154571533
    6. '
' → logprob: -3.8627045154571533
    7. ')' → logprob: -3.9877045154571533
    8. ':' → logprob: -4.862704277038574
    9. ':
' → logprob: -6.112704277038574
    10. '<|end|>' → logprob: -6.737704277038574

Token 327: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -1.033177137374878
    2. '           ' → logprob: -1.533177137374878
    3. 'queue' (adapté à ' queue') → logprob: -1.658177137374878
    4. 'visited' → logprob: -2.158177137374878
    5. '   ' → logprob: -3.033177137374878
    6. ' visited' → logprob: -3.408177137374878
    7. 'q' → logprob: -4.033177375793457
    8. 'dist' → logprob: -4.283177375793457
    9. ' dist' → logprob: -5.783177375793457
    10. ' q' → logprob: -6.408177375793457

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08905071020126343
    2. '=' → logprob: -2.464050769805908
    3. ')' → logprob: -9.71405029296875
    4. '<|end|>' → logprob: -10.21405029296875
    5. ',' → logprob: -12.33905029296875
    6. ' ' → logprob: -12.96405029296875
    7. ' =
' → logprob: -13.46405029296875
    8. '<|end|>' → logprob: -14.08905029296875
    9. '=[]' → logprob: -14.21405029296875
    10. '(queue' → logprob: -14.21405029296875

Token 329: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0067156096920371056
    2. ' deque' → logprob: -5.006715774536133
    3. 'Deque' → logprob: -15.506715774536133
    4. 'de' → logprob: -18.006715774536133
    5. 'collections' → logprob: -22.506715774536133
    6. '   ' → logprob: -22.506715774536133
    7. '	de' → logprob: -22.881715774536133
    8. '(de' → logprob: -23.381715774536133
    9. '```' → logprob: -24.756715774536133
    10. 'new' → logprob: -24.881715774536133

Token 330: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.34902942180633545
    2. '()
' → logprob: -1.3490294218063354
    3. '()' → logprob: -3.349029541015625
    4. '([' → logprob: -12.099029541015625
    5. '()

' → logprob: -12.474029541015625
    6. '[(' → logprob: -12.974029541015625
    7. '()
' → logprob: -13.099029541015625
    8. '()\' → logprob: -13.724029541015625
    9. '([
' → logprob: -13.849029541015625
    10. '([])
' → logprob: -14.849029541015625

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6941948533058167
    2. '(queue' → logprob: -1.3191947937011719
    3. ' queue' → logprob: -1.6941947937011719
    4. 'queue' → logprob: -3.194194793701172
    5. ' (' → logprob: -5.319194793701172
    6. '   ' → logprob: -6.069194793701172
    7. '	queue' → logprob: -7.444194793701172
    8. '.queue' → logprob: -8.444194793701172
    9. '       ' → logprob: -9.319194793701172
    10. '.append' → logprob: -9.569194793701172

Token 332: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.04922295734286308
    2. 'queue' (adapté à ' queue') → logprob: -3.049222946166992
    3. '(queue' → logprob: -7.424222946166992
    4. '	queue' → logprob: -10.674222946166992
    5. '   ' → logprob: -11.924222946166992
    6. '           ' → logprob: -12.424222946166992
    7. ' visited' → logprob: -13.049222946166992
    8. 'visited' → logprob: -13.549222946166992
    9. '.queue' → logprob: -13.799222946166992
    10. ' ' → logprob: -15.924222946166992

Token 333: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00019734179659280926
    2. '.' → logprob: -8.625197410583496
    3. 'append' → logprob: -12.125197410583496
    4. '.enqueue' → logprob: -12.125197410583496
    5. ').' → logprob: -12.750197410583496
    6. '.extend' → logprob: -14.125197410583496
    7. '.p' → logprob: -14.250197410583496
    8. '.put' → logprob: -14.375197410583496
    9. '=' → logprob: -14.625197410583496
    10. ' .' → logprob: -14.875197410583496

Token 334: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0019295861711725593
    2. '(' → logprob: -6.251929759979248
    3. '(((' → logprob: -14.37692928314209
    4. ' ((' → logprob: -15.25192928314209
    5. '([(' → logprob: -17.001930236816406
    6. '[(' → logprob: -17.501930236816406
    7. '(
' → logprob: -17.501930236816406
    8. '   ' → logprob: -19.126930236816406
    9. '(start' → logprob: -19.126930236816406
    10. '(('' → logprob: -19.251930236816406

Token 335: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.7968066206085496e-05
    2. ' start' → logprob: -10.625027656555176
    3. '0' → logprob: -13.000027656555176
    4. ')' → logprob: -14.375027656555176
    5. '(start' → logprob: -14.625027656555176
    6. '
' → logprob: -16.250028610229492
    7. '[start' → logprob: -17.250028610229492
    8. '   ' → logprob: -17.875028610229492
    9. ',start' → logprob: -18.125028610229492
    10. ')
' → logprob: -18.375028610229492

Token 336: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -2.7848862373502925e-05
    2. 'y' → logprob: -11.125027656555176
    3. ',' → logprob: -13.125027656555176
    4. '_,' → logprob: -13.250027656555176
    5. ')' → logprob: -13.875027656555176
    6. '[' → logprob: -14.125027656555176
    7. '   ' → logprob: -14.125027656555176
    8. '_x' → logprob: -14.375027656555176
    9. ' ' → logprob: -14.500027656555176
    10. '0' → logprob: -14.625027656555176

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.440506407059729e-05
    2. ' ,' → logprob: -10.87503433227539
    3. ',
' → logprob: -11.87503433227539
    4. ')' → logprob: -13.00003433227539
    5. '<|end|>' → logprob: -13.75003433227539
    6. '+' → logprob: -13.87503433227539
    7. ' ' → logprob: -14.37503433227539
    8. '‌,' → logprob: -14.62503433227539
    9. '```' → logprob: -14.87503433227539
    10. '[' → logprob: -15.25003433227539

Token 338: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3210206627845764
    2. 'start' → logprob: -1.3210206031799316
    3. ' start' → logprob: -5.446020603179932
    4. ' ' → logprob: -5.696020603179932
    5. ')' → logprob: -12.00852108001709
    6. '(start' → logprob: -12.00852108001709
    7. '))' → logprob: -12.07102108001709
    8. '1' → logprob: -12.44602108001709
    9. '
' → logprob: -12.44602108001709
    10. 'dist' → logprob: -12.63352108001709

Token 339: '_x' (ID: 7054)
  Prédit: '_y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.013807916082441807
    2. ',' → logprob: -5.263807773590088
    3. '[' → logprob: -5.888807773590088
    4. '_,' → logprob: -6.388807773590088
    5. 'y' → logprob: -6.638807773590088
    6. '```' → logprob: -6.888807773590088
    7. '_x' → logprob: -7.138807773590088
    8. '))' → logprob: -8.513808250427246
    9. ',_' → logprob: -8.513808250427246
    10. ')' → logprob: -9.263808250427246

Token 340: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003748533083125949
    2. '))' → logprob: -5.628748416900635
    3. '))
' → logprob: -9.128748893737793
    4. ' ,' → logprob: -10.628748893737793
    5. ',
' → logprob: -12.128748893737793
    6. ',))
' → logprob: -12.503748893737793
    7. ')' → logprob: -13.253748893737793
    8. '),' → logprob: -13.628748893737793
    9. '   ' → logprob: -14.003748893737793
    10. '           ' → logprob: -14.128748893737793

Token 341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04085672274231911
    2. ')' → logprob: -4.290856838226318
    3. 'visited' → logprob: -4.415856838226318
    4. ',' → logprob: -4.790856838226318
    5. '
' → logprob: -5.915856838226318
    6. ' visited' → logprob: -7.040856838226318
    7. '   ' → logprob: -7.165856838226318
    8. ',
' → logprob: -7.165856838226318
    9. ')
' → logprob: -8.91585636138916
    10. '            
' → logprob: -9.16585636138916

Token 342: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.16405312716960907
    2. '           ' → logprob: -2.789053201675415
    3. ' visited' → logprob: -2.914053201675415
    4. ' distances' → logprob: -3.789053201675415
    5. 'dist' → logprob: -5.039052963256836
    6. 'distance' → logprob: -5.164052963256836
    7. '   ' → logprob: -8.664052963256836
    8. ' distance' → logprob: -8.789052963256836
    9. ' dist' → logprob: -9.164052963256836
    10. '
' → logprob: -9.289052963256836

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054907217621803284
    2. '=' → logprob: -2.9299073219299316
    3. '[' → logprob: -11.179906845092773
    4. ')' → logprob: -12.804906845092773
    5. '   ' → logprob: -12.929906845092773
    6. '=[[' → logprob: -13.304906845092773
    7. '=set' → logprob: -13.929906845092773
    8. ' ' → logprob: -14.179906845092773
    9. '=[' → logprob: -14.429906845092773
    10. ']' → logprob: -15.179906845092773

Token 344: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00023202638840302825
    2. ' [[' → logprob: -8.500231742858887
    3. 'set' → logprob: -10.500231742858887
    4. '{' → logprob: -14.250231742858887
    5. '[' → logprob: -14.875231742858887
    6. ' set' → logprob: -17.375232696533203
    7. '{{' → logprob: -17.750232696533203
    8. '[['' → logprob: -18.750232696533203
    9. '([[' → logprob: -19.750232696533203
    10. '[(' → logprob: -20.000232696533203

Token 345: '-' (ID: 12)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.704273118884885e-07
    2. ' False' → logprob: -14.250000953674316
    3. '(False' → logprob: -19.5
    4. '0' → logprob: -19.875
    5. 'True' → logprob: -21.0
    6. '-' → logprob: -22.25
    7. '=False' → logprob: -23.125
    8. '.False' → logprob: -23.375
    9. '-F' → logprob: -24.375
    10. '   ' → logprob: -25.5

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '-' → logprob: -17.562501907348633
    4. '           ' → logprob: -17.750001907348633
    5. '                   ' → logprob: -17.937501907348633
    6. ',' → logprob: -18.062501907348633
    7. '   ' → logprob: -18.250001907348633
    8. '2' → logprob: -18.437501907348633
    9. '
' → logprob: -18.750001907348633
    10. ' -' → logprob: -19.062501907348633

Token 347: ']*' (ID: 18579)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.5466545820236206
    2. ']*' → logprob: -1.5466545820236206
    3. ' for' → logprob: -1.6716545820236206
    4. ']' → logprob: -4.17165470123291
    5. 'for' → logprob: -5.42165470123291
    6. '](' → logprob: -9.04665470123291
    7. ' ]' → logprob: -10.54665470123291
    8. '][' → logprob: -10.54665470123291
    9. '           ' → logprob: -10.54665470123291
    10. '   ' → logprob: -10.79665470123291

Token 348: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0009931529639288783
    2. '(w' → logprob: -7.000993251800537
    3. ' w' → logprob: -9.625992774963379
    4. '           ' → logprob: -11.875992774963379
    5. '   ' → logprob: -13.250992774963379
    6. 'len' → logprob: -13.875992774963379
    7. '               ' → logprob: -14.000992774963379
    8. '(' → logprob: -14.125992774963379
    9. '       ' → logprob: -14.125992774963379
    10. ' (' → logprob: -14.375992774963379

Token 349: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011208977550268173
    2. 'for' → logprob: -4.511209011077881
    3. ')' → logprob: -9.511208534240723
    4. '           ' → logprob: -10.636208534240723
    5. '                   ' → logprob: -11.386208534240723
    6. ']' → logprob: -11.386208534240723
    7. '               ' → logprob: -11.886208534240723
    8. ',' → logprob: -12.011208534240723
    9. '            ' → logprob: -12.761208534240723
    10. ' ' → logprob: -12.761208534240723

Token 350: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4866572320461273
    2. '_' → logprob: -1.2366572618484497
    3. 'range' → logprob: -2.48665714263916
    4. ' _' → logprob: -4.61165714263916
    5. '_range' → logprob: -6.98665714263916
    6. ' in' → logprob: -8.11165714263916
    7. '(range' → logprob: -8.23665714263916
    8. '_w' → logprob: -8.98665714263916
    9. '_h' → logprob: -9.61165714263916
    10. 'in' → logprob: -10.73665714263916

Token 351: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038985297083854675
    2. ' range' → logprob: -3.288985252380371
    3. 'in' → logprob: -7.288985252380371
    4. ' in' → logprob: -8.288985252380371
    5. '_range' → logprob: -12.163985252380371
    6. '(range' → logprob: -12.788985252380371
    7. '_' → logprob: -14.538985252380371
    8. '	range' → logprob: -15.163985252380371
    9. 'w' → logprob: -16.413986206054688
    10. 'x' → logprob: -16.663986206054688

Token 352: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04302944988012314
    2. ' range' → logprob: -3.168029546737671
    3. '(range' → logprob: -10.91802978515625
    4. '[' → logprob: -11.54302978515625
    5. '_range' → logprob: -14.29302978515625
    6. 'h' → logprob: -14.54302978515625
    7. 'w' → logprob: -14.79302978515625
    8. '	range' → logprob: -15.29302978515625
    9. '[h' → logprob: -15.66802978515625
    10. '
' → logprob: -16.04302978515625

Token 353: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04731883853673935
    2. 'range' → logprob: -3.547318935394287
    3. ' h' → logprob: -4.547318935394287
    4. ' range' → logprob: -5.297318935394287
    5. '(h' → logprob: -6.922318935394287
    6. '[h' → logprob: -7.422318935394287
    7. '   ' → logprob: -9.297318458557129
    8. '           ' → logprob: -10.297318458557129
    9. '       ' → logprob: -11.172318458557129
    10. ']' → logprob: -11.297318458557129

Token 354: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.16327135264873505
    2. ')]' → logprob: -2.038271427154541
    3. ']
' → logprob: -4.663271427154541
    4. ']' → logprob: -5.288271427154541
    5. '           ' → logprob: -5.413271427154541
    6. ')' → logprob: -6.913271427154541
    7. ')
' → logprob: -8.538270950317383
    8. ')]
' → logprob: -9.163270950317383
    9. ']]
' → logprob: -10.288270950317383
    10. '                   ' → logprob: -10.788270950317383

Token 355: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0989835262298584
    2. 'visited' → logprob: -2.4739835262298584
    3. ' visited' → logprob: -4.9739837646484375
    4. '
' → logprob: -6.7239837646484375
    5. '            
' → logprob: -7.5989837646484375
    6. '                   ' → logprob: -8.348983764648438
    7. '               ' → logprob: -8.598983764648438
    8. '<|end|>' → logprob: -8.723983764648438
    9. '                           ' → logprob: -8.973983764648438
    10. '   ' → logprob: -9.098983764648438

Token 356: ' visited' (ID: 18416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45846304297447205
    2. 'visited' (adapté à ' visited') → logprob: -1.5834630727767944
    3. ' visited' → logprob: -1.8334630727767944
    4. '            ' → logprob: -7.333463191986084
    5. '                   ' → logprob: -7.583463191986084
    6. '               ' → logprob: -7.958463191986084
    7. '   ' → logprob: -8.708462715148926
    8. '            
' → logprob: -9.208462715148926
    9. '                           ' → logprob: -9.458462715148926
    10. ' ' → logprob: -9.583462715148926

Token 357: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0002036595979006961
    2. '[' → logprob: -8.500204086303711
    3. 'start' → logprob: -17.00020408630371
    4. '][' → logprob: -17.50020408630371
    5. '```' → logprob: -17.75020408630371
    6. ' [' → logprob: -18.00020408630371
    7. '[now' → logprob: -18.37520408630371
    8. '[end' → logprob: -18.37520408630371
    9. '=start' → logprob: -18.50020408630371
    10. '[
' → logprob: -18.50020408630371

Token 358: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00017016702622640878
    2. 'y' → logprob: -9.50016975402832
    3. '[' → logprob: -9.75016975402832
    4. '_x' → logprob: -10.75016975402832
    5. '][' → logprob: -11.87516975402832
    6. '   ' → logprob: -13.50016975402832
    7. '0' → logprob: -13.62516975402832
    8. '```' → logprob: -14.12516975402832
    9. '=' → logprob: -14.50016975402832
    10. ']' → logprob: -14.62516975402832

Token 359: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011063620448112488
    2. '[start' → logprob: -4.511063575744629
    3. ' ][' → logprob: -11.886063575744629
    4. 'start' → logprob: -12.761063575744629
    5. ',' → logprob: -13.261063575744629
    6. ',start' → logprob: -13.636063575744629
    7. '(start' → logprob: -14.261063575744629
    8. ']' → logprob: -14.386063575744629
    9. ')[' → logprob: -14.886063575744629
    10. '=start' → logprob: -15.261063575744629

Token 360: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00023250321100931615
    2. ' start' → logprob: -8.375232696533203
    3. '[start' → logprob: -13.875232696533203
    4. '(start' → logprob: -14.625232696533203
    5. '=start' → logprob: -15.500232696533203
    6. '
' → logprob: -16.375232696533203
    7. ',start' → logprob: -16.375232696533203
    8. ']' → logprob: -17.000232696533203
    9. ':start' → logprob: -17.000232696533203
    10. '0' → logprob: -17.500232696533203

Token 361: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.05493587628006935
    2. 'x' → logprob: -2.929935932159424
    3. '[' → logprob: -10.929935455322266
    4. ']' → logprob: -11.679935455322266
    5. '_y' → logprob: -11.679935455322266
    6. '][' → logprob: -12.554935455322266
    7. 'X' → logprob: -12.554935455322266
    8. '[x' → logprob: -12.679935455322266
    9. ' x' → logprob: -13.804935455322266
    10. ']=' → logprob: -13.804935455322266

Token 362: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007854487630538642
    2. ']=' → logprob: -7.5007853507995605
    3. '=' → logprob: -8.750785827636719
    4. ' ]' → logprob: -10.000785827636719
    5. ' =' → logprob: -10.500785827636719
    6. ')' → logprob: -13.875785827636719
    7. ']
' → logprob: -16.12578582763672
    8. '[' → logprob: -17.00078582763672
    9. '   ' → logprob: -17.62578582763672
    10. '0' → logprob: -17.87578582763672

Token 363: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759426951408386
    2. '=' → logprob: -0.8259426951408386
    3. ']' → logprob: -13.075942993164062
    4. ']=' → logprob: -14.575942993164062
    5. ' ' → logprob: -15.075942993164062
    6. ')' → logprob: -16.075942993164062
    7. '0' → logprob: -16.950942993164062
    8. '[' → logprob: -17.075942993164062
    9. '
' → logprob: -17.075942993164062
    10. '           ' → logprob: -17.200942993164062

Token 364: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -21.625
    4. '00' → logprob: -23.125
    5. '1' → logprob: -23.375
    6. '
' → logprob: -23.5
    7. '۰' → logprob: -23.875
    8. '000' → logprob: -24.75
    9. ' ' → logprob: -24.875
    10. '  ' → logprob: -24.875

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۰' → logprob: -20.5
    4. '   ' → logprob: -21.5
    5. '000' → logprob: -21.75
    6. '00' → logprob: -21.875
    7. '０' → logprob: -22.375
    8. '٠' → logprob: -22.5625
    9. '```' → logprob: -22.8125
    10. '1' → logprob: -22.9375

Token 366: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.0737909078598022
    2. '           ' → logprob: -1.1987909078598022
    3. '   ' → logprob: -1.5737909078598022
    4. '       ' → logprob: -2.948791027069092
    5. 'while' (adapté à ' while') → logprob: -3.073791027069092
    6. '	while' → logprob: -3.573791027069092
    7. '<|end|>' → logprob: -4.698791027069092
    8. ' ' → logprob: -6.073791027069092
    9. '    ' → logprob: -6.448791027069092
    10. ' 
' → logprob: -6.448791027069092

Token 369: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0485982745885849
    2. ' queue' → logprob: -3.048598289489746
    3. '(queue' → logprob: -12.423598289489746
    4. '	queue' → logprob: -12.548598289489746
    5. '   ' → logprob: -13.548598289489746
    6. 'que' → logprob: -14.423598289489746
    7. '
' → logprob: -15.048598289489746
    8. 'len' → logprob: -15.298598289489746
    9. 'Queue' → logprob: -15.673598289489746
    10. ' ' → logprob: -15.673598289489746

Token 370: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3513574004173279
    2. ':' → logprob: -1.6013574600219727
    3. '.p' → logprob: -2.7263574600219727
    4. '.append' → logprob: -4.601357460021973
    5. '.pop' → logprob: -4.726357460021973
    6. '           ' → logprob: -6.476357460021973
    7. '   ' → logprob: -6.601357460021973
    8. '       ' → logprob: -6.601357460021973
    9. '.dequeue' → logprob: -6.601357460021973
    10. 'opleft' → logprob: -6.726357460021973

Token 371: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006304710987024009
    2. '           ' → logprob: -8.125630378723145
    3. 'y' → logprob: -8.875630378723145
    4. ' y' → logprob: -9.250630378723145
    5. '	           ' → logprob: -10.625630378723145
    6. '   ' → logprob: -10.875630378723145
    7. '                   ' → logprob: -11.375630378723145
    8. '       ' → logprob: -12.125630378723145
    9. ',' → logprob: -12.375630378723145
    10. '```' → logprob: -12.625630378723145

Token 372: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.08109927177429199
    2. 'cy' → logprob: -2.956099271774292
    3. ' y' → logprob: -3.706099271774292
    4. 'cur' → logprob: -7.706099510192871
    5. ' cy' → logprob: -8.581099510192871
    6. '               ' → logprob: -8.831099510192871
    7. '                   ' → logprob: -9.081099510192871
    8. 'sy' → logprob: -9.331099510192871
    9. '(y' → logprob: -9.706099510192871
    10. 'current' → logprob: -9.831099510192871

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014203863975126296
    2. ' ,' → logprob: -9.375142097473145
    3. ',y' → logprob: -10.875142097473145
    4. ',
' → logprob: -11.375142097473145
    5. '               ' → logprob: -12.250142097473145
    6. '<|end|>' → logprob: -12.875142097473145
    7. ')' → logprob: -13.000142097473145
    8. '                   ' → logprob: -13.000142097473145
    9. ',next' → logprob: -13.500142097473145
    10. ',user' → logprob: -13.625142097473145

Token 374: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0040785204619169235
    2. ' x' → logprob: -5.504078388214111
    3. 'queue' → logprob: -16.129077911376953
    4. '	x' → logprob: -17.254077911376953
    5. 'q' → logprob: -17.754077911376953
    6. '   ' → logprob: -18.629077911376953
    7. '_x' → logprob: -19.379077911376953
    8. ',x' → logprob: -19.629077911376953
    9. ' queue' → logprob: -21.379077911376953
    10. ' ' → logprob: -21.504077911376953

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16268664598464966
    2. '=' → logprob: -1.9126865863800049
    3. ',' → logprob: -6.162686824798584
    4. ')' → logprob: -8.037686347961426
    5. '   ' → logprob: -11.287686347961426
    6. '               ' → logprob: -12.162686347961426
    7. ')=' → logprob: -12.537686347961426
    8. '),' → logprob: -13.037686347961426
    9. '                   ' → logprob: -13.662686347961426
    10. '       ' → logprob: -13.912686347961426

Token 376: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6931594014167786
    2. ' queue' → logprob: -0.6931594014167786
    3. 'deque' → logprob: -11.943159103393555
    4. '(queue' → logprob: -13.193159103393555
    5. '	queue' → logprob: -13.568159103393555
    6. ' deque' → logprob: -13.693159103393555
    7. 'que' → logprob: -14.943159103393555
    8. 'de' → logprob: -15.193159103393555
    9. '.queue' → logprob: -15.443159103393555
    10. ' ' → logprob: -15.568159103393555

Token 377: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.007666609715670347
    2. '.pop' → logprob: -4.88266658782959
    3. '.' → logprob: -10.38266658782959
    4. '.dequeue' → logprob: -12.25766658782959
    5. 'pop' → logprob: -12.63266658782959
    6. '                   ' → logprob: -12.63266658782959
    7. '.append' → logprob: -12.63266658782959
    8. '   ' → logprob: -12.75766658782959
    9. 'opleft' → logprob: -12.75766658782959
    10. ' .' → logprob: -13.50766658782959

Token 378: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.004079708829522133
    2. 'op' → logprob: -5.504079818725586
    3. 'opl' → logprob: -14.754079818725586
    4. 'opup' → logprob: -15.129079818725586
    5. 'ople' → logprob: -15.254079818725586
    6. 'opt' → logprob: -15.879079818725586
    7. '```' → logprob: -16.379079818725586
    8. 'opped' → logprob: -16.754079818725586
    9. '   ' → logprob: -16.754079818725586
    10. '[' → logprob: -17.629079818725586

Token 379: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010271730832755566
    2. '
' → logprob: -5.2602715492248535
    3. ')' → logprob: -6.5102715492248535
    4. '           ' → logprob: -7.0102715492248535
    5. '                
' → logprob: -7.0102715492248535
    6. '<|end|>' → logprob: -7.3852715492248535
    7. ')
' → logprob: -8.010272026062012
    8. '                   ' → logprob: -8.635272026062012
    9. ',' → logprob: -8.885272026062012
    10. '            
' → logprob: -9.260272026062012

Token 380: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006167324259877205
    2. ' for' → logprob: -5.631167411804199
    3. '<|end|>' → logprob: -6.881167411804199
    4. '                
' → logprob: -7.381167411804199
    5. '           ' → logprob: -7.881167411804199
    6. '                   ' → logprob: -8.8811674118042
    7. 'for' → logprob: -9.1311674118042
    8. '                ' → logprob: -10.0061674118042
    9. '  
' → logprob: -10.2561674118042
    10. '            
' → logprob: -10.3811674118042

Token 381: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4768522381782532
    2. ' for' → logprob: -0.9768522381782532
    3. '               ' → logprob: -6.2268524169921875
    4. '           ' → logprob: -7.2268524169921875
    5. '
' → logprob: -9.851852416992188
    6. '                   ' → logprob: -11.976852416992188
    7. '                
' → logprob: -12.601852416992188
    8. ' 
' → logprob: -13.726852416992188
    9. '```' → logprob: -13.726852416992188
    10. '            
' → logprob: -13.851852416992188

Token 382: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0031815171241760254
    2. ' dy' → logprob: -5.753181457519531
    3. '```' → logprob: -13.503181457519531
    4. '   ' → logprob: -14.378181457519531
    5. '.dy' → logprob: -14.503181457519531
    6. '	d' → logprob: -14.753181457519531
    7. '(d' → logprob: -14.753181457519531
    8. 'd' → logprob: -15.378181457519531
    9. ' ' → logprob: -16.12818145751953
    10. 'ny' → logprob: -16.12818145751953

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005759088089689612
    2. ',x' → logprob: -7.750576019287109
    3. ',d' → logprob: -9.62557601928711
    4. ' ,' → logprob: -9.87557601928711
    5. ',y' → logprob: -11.25057601928711
    6. ',w' → logprob: -12.37557601928711
    7. ',n' → logprob: -12.62557601928711
    8. 'dx' → logprob: -13.00057601928711
    9. ',k' → logprob: -13.50057601928711
    10. '_,' → logprob: -14.62557601928711

Token 384: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.47407910227775574
    2. ' dx' → logprob: -0.9740791320800781
    3. '_dx' → logprob: -13.224079132080078
    4. 'tx' → logprob: -15.974079132080078
    5. '(dx' → logprob: -16.724079132080078
    6. 'Dx' → logprob: -17.099079132080078
    7. '.dx' → logprob: -17.224079132080078
    8. 'x' → logprob: -18.849079132080078
    9. 'nx' → logprob: -18.849079132080078
    10. ' ' → logprob: -18.974079132080078

Token 385: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014212633483111858
    2. 'in' → logprob: -4.264212608337402
    3. '<|end|>' → logprob: -10.014212608337402
    4. ' ' → logprob: -13.389212608337402
    5. '<|end|>' → logprob: -13.764212608337402
    6. ')' → logprob: -14.514212608337402
    7. ',' → logprob: -14.514212608337402
    8. '	in' → logprob: -15.389212608337402
    9. 'In' → logprob: -16.01421356201172
    10. 'inthe' → logprob: -16.95171356201172

Token 386: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.25192973017692566
    2. ' directions' → logprob: -1.501929759979248
    3. 'direction' → logprob: -14.75192928314209
    4. 'd' → logprob: -16.126930236816406
    5. ' ' → logprob: -16.626930236816406
    6. '[' → logprob: -16.876930236816406
    7. '   ' → logprob: -17.001930236816406
    8. ')' → logprob: -17.751930236816406
    9. '-dire' → logprob: -18.126930236816406
    10. '[-' → logprob: -18.376930236816406

Token 387: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7049005627632141
    2. ':' → logprob: -0.8299005627632141
    3. '                   ' → logprob: -3.3299005031585693
    4. ' in' → logprob: -4.079900741577148
    5. ',' → logprob: -4.704900741577148
    6. '               ' → logprob: -6.079900741577148
    7. '):
' → logprob: -6.579900741577148
    8. '   ' → logprob: -7.329900741577148
    9. '                       ' → logprob: -7.329900741577148
    10. '<|end|>' → logprob: -7.579900741577148

Token 388: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.022229555994272232
    2. ' ny' → logprob: -5.0222296714782715
    3. ' new' → logprob: -5.1472296714782715
    4. '                ' → logprob: -5.6472296714782715
    5. '                    ' → logprob: -6.2722296714782715
    6. '               ' → logprob: -6.5222296714782715
    7. 'ny' → logprob: -7.3972296714782715
    8. ' y' → logprob: -7.5222296714782715
    9. '                    
' → logprob: -8.022229194641113
    10. '                       ' → logprob: -8.272229194641113

Token 389: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.00895584188401699
    2. 'ny' (adapté à ' ny') → logprob: -4.758955955505371
    3. ' new' → logprob: -8.258955955505371
    4. '                   ' → logprob: -10.633955955505371
    5. ' ' → logprob: -11.383955955505371
    6. 'new' → logprob: -11.758955955505371
    7. '   ' → logprob: -11.758955955505371
    8. 'y' → logprob: -11.883955955505371
    9. ' ' → logprob: -12.383955955505371
    10. '               ' → logprob: -13.008955955505371

Token 390: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01316223293542862
    2. ' =' → logprob: -4.388162136077881
    3. ',' → logprob: -7.388162136077881
    4. '=y' → logprob: -10.513162612915039
    5. '=n' → logprob: -12.388162612915039
    6. ',y' → logprob: -14.513162612915039
    7. '=
' → logprob: -14.888162612915039
    8. '<|end|>' → logprob: -15.138162612915039
    9. ' ,' → logprob: -15.638162612915039
    10. '                   ' → logprob: -15.763162612915039

Token 391: ' nx' (ID: 50118)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5762553811073303
    2. ' x' → logprob: -0.8262553811073303
    3. ' y' → logprob: -8.326255798339844
    4. 'y' → logprob: -9.576255798339844
    5. ' ' → logprob: -12.826255798339844
    6. '=' → logprob: -14.451255798339844
    7. ' =' → logprob: -14.951255798339844
    8. '<|end|>' → logprob: -14.951255798339844
    9. ' nx' → logprob: -15.576255798339844
    10. '(x' → logprob: -16.451255798339844

Token 392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1605488508939743
    2. ' =' → logprob: -1.9105488061904907
    3. '=y' → logprob: -8.03554916381836
    4. ')' → logprob: -15.16054916381836
    5. '=n' → logprob: -15.66054916381836
    6. ' y' → logprob: -16.28554916381836
    7. ' ' → logprob: -16.78554916381836
    8. '   ' → logprob: -17.16054916381836
    9. 'y' → logprob: -17.28554916381836
    10. '＝' → logprob: -17.41054916381836

Token 393: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759404301643372
    2. 'y' → logprob: -0.8259404301643372
    3. '(y' → logprob: -14.700940132141113
    4. '	y' → logprob: -14.825940132141113
    5. '   ' → logprob: -15.825940132141113
    6. ' ' → logprob: -16.57594108581543
    7. '[y' → logprob: -18.82594108581543
    8. '    ' → logprob: -19.07594108581543
    9. ',y' → logprob: -19.07594108581543
    10. ')y' → logprob: -19.07594108581543

Token 394: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759597420692444
    2. '+' → logprob: -0.8259597420692444
    3. '+y' → logprob: -11.200960159301758
    4. '+d' → logprob: -13.200960159301758
    5. ',' → logprob: -13.325960159301758
    6. '+
' → logprob: -14.200960159301758
    7. '+x' → logprob: -14.700960159301758
    8. '+n' → logprob: -15.075960159301758
    9. ' +
' → logprob: -15.075960159301758
    10. '+,' → logprob: -15.200960159301758

Token 395: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.676292231422849e-05
    2. ' dy' → logprob: -11.000017166137695
    3. 'dx' → logprob: -17.750017166137695
    4. '0' → logprob: -19.000017166137695
    5. '   ' → logprob: -19.250017166137695
    6. 'd' → logprob: -19.250017166137695
    7. '.dy' → logprob: -19.375017166137695
    8. 'dym' → logprob: -20.750017166137695
    9. '
' → logprob: -21.000017166137695
    10. 'Dy' → logprob: -21.000017166137695

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.876193169271573e-05
    2. ' ,' → logprob: -9.625088691711426
    3. ',x' → logprob: -12.000088691711426
    4. '<|end|>' → logprob: -12.125088691711426
    5. ',
' → logprob: -12.250088691711426
    6. ',n' → logprob: -12.500088691711426
    7. ',y' → logprob: -13.250088691711426
    8. 'x' → logprob: -16.000089645385742
    9. '‌,' → logprob: -16.625089645385742
    10. '،' → logprob: -16.625089645385742

Token 397: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12692894041538239
    2. ' x' → logprob: -2.1269290447235107
    3. ' ' → logprob: -15.12692928314209
    4. '   ' → logprob: -15.50192928314209
    5. '	x' → logprob: -16.251928329467773
    6. '    ' → logprob: -16.876928329467773
    7. '                   ' → logprob: -17.001928329467773
    8. 'dx' → logprob: -17.251928329467773
    9. '(x' → logprob: -18.001928329467773
    10. '```' → logprob: -18.501928329467773

Token 398: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20658887922763824
    2. ' +' → logprob: -1.706588864326477
    3. '+x' → logprob: -5.8315887451171875
    4. '<|end|>' → logprob: -6.2065887451171875
    5. ' ' → logprob: -9.206588745117188
    6. ',' → logprob: -10.456588745117188
    7. 'x' → logprob: -10.956588745117188
    8. ')' → logprob: -11.081588745117188
    9. '[' → logprob: -11.206588745117188
    10. '+
' → logprob: -11.956588745117188

Token 399: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.03882143646478653
    2. '1' → logprob: -3.2888214588165283
    3. ' dx' → logprob: -7.413821220397949
    4. '0' → logprob: -9.16382122039795
    5. 'x' → logprob: -9.91382122039795
    6. ' ' → logprob: -11.66382122039795
    7. '(dx' → logprob: -11.66382122039795
    8. '```' → logprob: -12.91382122039795
    9. '_dx' → logprob: -14.28882122039795
    10. 'nx' → logprob: -14.53882122039795

Token 400: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1477506458759308
    2. 'if' (adapté à ' if') → logprob: -3.0227506160736084
    3. ' ' → logprob: -3.2727506160736084
    4. ' 
' → logprob: -3.3977506160736084
    5. '
' → logprob: -5.0227508544921875
    6. '<|end|>' → logprob: -5.3977508544921875
    7. '                   ' → logprob: -5.8977508544921875
    8. '  
' → logprob: -6.7727508544921875
    9. '                    
' → logprob: -7.0227508544921875
    10. '                    ' → logprob: -7.5227508544921875

Token 403: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759473443031311
    2. ' ' → logprob: -0.8259473443031311
    3. ' ny' → logprob: -13.075947761535645
    4. ' (' → logprob: -13.575947761535645
    5. '(' → logprob: -13.700947761535645
    6. ' ' → logprob: -14.013447761535645
    7. '   ' → logprob: -14.638447761535645
    8. 'ny' → logprob: -14.825947761535645
    9. '  ' → logprob: -14.950947761535645
    10. '```' → logprob: -15.638447761535645

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.000017166137695
    3. '
' → logprob: -15.500017166137695
    4. 'ny' → logprob: -15.750017166137695
    5. '(' → logprob: -16.812517166137695
    6. '   ' → logprob: -16.875017166137695
    7. '```' → logprob: -17.437517166137695
    8. '

' → logprob: -18.375017166137695
    9. '۰' → logprob: -18.375017166137695
    10. ' ny' → logprob: -18.437517166137695

Token 405: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1269284337759018
    2. '<=' → logprob: -2.1269283294677734
    3. ' >=' → logprob: -15.876928329467773
    4. ' ' → logprob: -16.376928329467773
    5. '>=' → logprob: -16.501928329467773
    6. '0' → logprob: -17.001928329467773
    7. '   ' → logprob: -18.251928329467773
    8. ' ≤' → logprob: -18.501928329467773
    9. ' <' → logprob: -18.626928329467773
    10. ')<=' → logprob: -18.626928329467773

Token 406: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00029744720086455345
    2. ' ny' → logprob: -8.125297546386719
    3. 'n' → logprob: -15.500297546386719
    4. '
' → logprob: -15.625297546386719
    5. 'nyi' → logprob: -15.875297546386719
    6. 'nx' → logprob: -16.00029754638672
    7. 'nyt' → logprob: -16.00029754638672
    8. 'ni' → logprob: -16.12529754638672
    9. '```' → logprob: -16.12529754638672
    10. '   ' → logprob: -16.37529754638672

Token 407: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1665850281715393
    2. ' <' → logprob: -2.0415849685668945
    3. '<n' → logprob: -3.9165849685668945
    4. '<w' → logprob: -5.9165849685668945
    5. 'and' → logprob: -7.7915849685668945
    6. ' and' → logprob: -8.166584968566895
    7. '<len' → logprob: -8.791584968566895
    8. '<N' → logprob: -10.041584968566895
    9. '<size' → logprob: -10.291584968566895
    10. 'w' → logprob: -10.291584968566895

Token 408: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -5.1928003813372925e-05
    2. ' h' → logprob: -9.875051498413086
    3. '	h' → logprob: -15.250051498413086
    4. '   ' → logprob: -16.500051498413086
    5. '
' → logprob: -17.250051498413086
    6. '<h' → logprob: -18.000051498413086
    7. '=h' → logprob: -18.875051498413086
    8. '[h' → logprob: -19.375051498413086
    9. '  ' → logprob: -19.875051498413086
    10. ' ' → logprob: -19.875051498413086

Token 409: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012516011483967304
    2. 'and' → logprob: -4.387516021728516
    3. '                   ' → logprob: -12.262516021728516
    4. ' ' → logprob: -14.637516021728516
    5. ',' → logprob: -15.012516021728516
    6. '                    ' → logprob: -15.137516021728516
    7. '                       ' → logprob: -15.262516021728516
    8. '               ' → logprob: -16.387516021728516
    9. '           ' → logprob: -16.887516021728516
    10. '                     ' → logprob: -17.012516021728516

Token 410: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4409562945365906
    2. ' ' → logprob: -1.0659563541412354
    3. ' w' → logprob: -4.940956115722656
    4. 'w' → logprob: -5.440956115722656
    5. ' nx' → logprob: -8.065956115722656
    6. 'nx' → logprob: -8.440956115722656
    7. ' ny' → logprob: -9.815956115722656
    8. '                   ' → logprob: -9.940956115722656
    9. 'ny' → logprob: -11.190956115722656
    10. ' not' → logprob: -12.065956115722656

Token 411: '0' (ID: 15)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0012393947690725327
    2. ' w' → logprob: -7.00123929977417
    3. '0' → logprob: -8.376239776611328
    4. 'nx' → logprob: -9.501239776611328
    5. 'wx' → logprob: -11.876239776611328
    6. ' ' → logprob: -12.376239776611328
    7. '   ' → logprob: -12.751239776611328
    8. '           ' → logprob: -13.751239776611328
    9. '               ' → logprob: -14.001239776611328
    10. '       ' → logprob: -14.001239776611328

Token 412: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08984609693288803
    2. '<' → logprob: -2.589846134185791
    3. '<n' → logprob: -4.964846134185791
    4. '<w' → logprob: -5.964846134185791
    5. 'w' → logprob: -7.339846134185791
    6. '<x' → logprob: -8.214845657348633
    7. 'and' → logprob: -9.339845657348633
    8. '<len' → logprob: -9.714845657348633
    9. ' and' → logprob: -9.839845657348633
    10. '<size' → logprob: -10.214845657348633

Token 413: ' nx' (ID: 50118)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0015067668864503503
    2. ' w' → logprob: -6.501506805419922
    3. 'x' → logprob: -13.751506805419922
    4. ' ' → logprob: -14.251506805419922
    5. '   ' → logprob: -14.501506805419922
    6. '
' → logprob: -14.876506805419922
    7. 'wx' → logprob: -15.001506805419922
    8. 'nx' → logprob: -15.126506805419922
    9. '	w' → logprob: -15.751506805419922
    10. '(w' → logprob: -15.876506805419922

Token 414: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09057055413722992
    2. '<' → logprob: -2.4655704498291016
    3. '<w' → logprob: -6.465570449829102
    4. 'w' → logprob: -10.215570449829102
    5. '<n' → logprob: -10.465570449829102
    6. '<x' → logprob: -12.840570449829102
    7. '<size' → logprob: -13.590570449829102
    8. '<len' → logprob: -13.590570449829102
    9. '<h' → logprob: -13.840570449829102
    10. ' ' → logprob: -14.340570449829102

Token 415: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0010336418636143208
    2. ' w' → logprob: -6.876033782958984
    3. '   ' → logprob: -14.501033782958984
    4. ' ' → logprob: -15.876033782958984
    5. '	w' → logprob: -16.751033782958984
    6. '(w' → logprob: -17.626033782958984
    7. '0' → logprob: -17.626033782958984
    8. '       ' → logprob: -17.626033782958984
    9. '    ' → logprob: -18.001033782958984
    10. '
' → logprob: -18.001033782958984

Token 416: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0033083006273955107
    2. 'and' → logprob: -5.753308296203613
    3. '                   ' → logprob: -9.753308296203613
    4. '               ' → logprob: -10.503308296203613
    5. '                       ' → logprob: -10.628308296203613
    6. '<|end|>' → logprob: -11.378308296203613
    7. '                ' → logprob: -13.253308296203613
    8. ',' → logprob: -13.378308296203613
    9. '                    ' → logprob: -13.378308296203613
    10. '           ' → logprob: -14.003308296203613

Token 417: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2550058960914612
    2. ' and' → logprob: -1.5050058364868164
    3. ' if' → logprob: -6.755005836486816
    4. '                   ' → logprob: -7.005005836486816
    5. 'and' → logprob: -7.880005836486816
    6. '                    ' → logprob: -8.755005836486816
    7. '                        ' → logprob: -9.255005836486816
    8. '                        
' → logprob: -9.255005836486816
    9. '<|end|>' → logprob: -9.505005836486816
    10. '                           ' → logprob: -10.130005836486816

Token 418: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03596997633576393
    2. '                           ' → logprob: -3.4109699726104736
    3. 'if' (adapté à ' if') → logprob: -6.285970211029053
    4. '                       ' → logprob: -8.660969734191895
    5. '                               ' → logprob: -9.410969734191895
    6. ' and' → logprob: -10.035969734191895
    7. '                            ' → logprob: -10.160969734191895
    8. ' not' → logprob: -10.285969734191895
    9. ' ' → logprob: -10.910969734191895
    10. '           ' → logprob: -11.160969734191895

Token 419: ' room' (ID: 3435)
  Prédit: 'room'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'room' → logprob: -0.012515303678810596
    2. ' room' → logprob: -4.387515068054199
    3. '(room' → logprob: -13.3875150680542
    4. '                   ' → logprob: -13.7625150680542
    5. 'visited' → logprob: -14.0125150680542
    6. '	room' → logprob: -14.7625150680542
    7. '           ' → logprob: -14.8875150680542
    8. '   ' → logprob: -15.1375150680542
    9. '               ' → logprob: -15.3875150680542
    10. '                           ' → logprob: -15.3875150680542

Token 420: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. '[y' → logprob: -12.625004768371582
    3. '```' → logprob: -15.000004768371582
    4. 'ny' → logprob: -15.375004768371582
    5. '[n' → logprob: -15.625004768371582
    6. '][' → logprob: -15.625004768371582
    7. '[
' → logprob: -15.875004768371582
    8. '   ' → logprob: -16.3750057220459
    9. '[now' → logprob: -16.3750057220459
    10. '       ' → logprob: -16.6250057220459

Token 421: 'ny' (ID: 3008)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6938767433166504
    2. 'ny' → logprob: -0.6938767433166504
    3. '][' → logprob: -8.693876266479492
    4. '[y' → logprob: -9.443876266479492
    5. '   ' → logprob: -9.568876266479492
    6. ' ny' → logprob: -9.568876266479492
    7. ']' → logprob: -9.693876266479492
    8. '```' → logprob: -9.818876266479492
    9. 'y' → logprob: -9.943876266479492
    10. 'yn' → logprob: -10.068876266479492

Token 422: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005616117268800735
    2. '[' → logprob: -7.875561714172363
    3. '[n' → logprob: -9.125561714172363
    4. '[y' → logprob: -9.875561714172363
    5. ']' → logprob: -12.250561714172363
    6. '                       ' → logprob: -13.500561714172363
    7. '```' → logprob: -13.500561714172363
    8. ']][' → logprob: -13.625561714172363
    9. ' ][' → logprob: -13.625561714172363
    10. ''][' → logprob: -13.625561714172363

Token 423: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.3493691086769104
    2. 'x' → logprob: -1.2243690490722656
    3. '0' → logprob: -7.599369049072266
    4. ' nx' → logprob: -8.474369049072266
    5. '(nx' → logprob: -8.849369049072266
    6. ']' → logprob: -11.224369049072266
    7. '
' → logprob: -11.599369049072266
    8. 'n' → logprob: -11.849369049072266
    9. 'ny' → logprob: -11.974369049072266
    10. '[' → logprob: -11.974369049072266

Token 424: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5779280662536621
    2. ' !=' → logprob: -1.202928066253662
    3. '!=' → logprob: -2.077928066253662
    4. ']!=' → logprob: -4.577928066253662
    5. '!='' → logprob: -7.202928066253662
    6. ')' → logprob: -7.577928066253662
    7. '==' → logprob: -7.827928066253662
    8. ']!='' → logprob: -7.827928066253662
    9. '                           ' → logprob: -8.07792854309082
    10. ' not' → logprob: -8.57792854309082

Token 425: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.28663066029548645
    2. '!=' → logprob: -1.411630630493164
    3. '!='' → logprob: -6.036630630493164
    4. '==' → logprob: -6.161630630493164
    5. ' ==' → logprob: -7.661630630493164
    6. ' not' → logprob: -8.411630630493164
    7. '```' → logprob: -9.661630630493164
    8. '[' → logprob: -9.911630630493164
    9. ')' → logprob: -10.161630630493164
    10. '                           ' → logprob: -10.536630630493164

Token 426: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0011380735086277127
    2. ''' → logprob: -7.501138210296631
    3. ''d' → logprob: -8.626137733459473
    4. ' '' → logprob: -8.751137733459473
    5. ''o' → logprob: -10.001137733459473
    6. ''#' → logprob: -10.376137733459473
    7. ''D' → logprob: -10.501137733459473
    8. ''y' → logprob: -10.501137733459473
    9. ''w' → logprob: -10.751137733459473
    10. ''t' → logprob: -11.126137733459473

Token 427: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.11333610117435455
    2. 'x' → logprob: -2.2383360862731934
    3. ''' → logprob: -7.863336086273193
    4. '#' → logprob: -10.113336563110352
    5. ''#' → logprob: -10.613336563110352
    6. '"x' → logprob: -11.238336563110352
    7. ' x' → logprob: -11.613336563110352
    8. ''.' → logprob: -11.738336563110352
    9. ''*' → logprob: -12.113336563110352
    10. '%x' → logprob: -12.113336563110352

Token 428: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011659173294901848
    2. 'and' → logprob: -5.386659145355225
    3. '<|end|>' → logprob: -5.761659145355225
    4. '')' → logprob: -6.136659145355225
    5. ')' → logprob: -7.261659145355225
    6. ''' → logprob: -7.511659145355225
    7. '                           ' → logprob: -9.011659622192383
    8. '                       ' → logprob: -9.386659622192383
    9. '']' → logprob: -9.636659622192383
    10. ']' → logprob: -10.136659622192383

Token 429: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0025548539124429226
    2. 'and' → logprob: -6.002554893493652
    3. '                           ' → logprob: -10.002554893493652
    4. '<|end|>' → logprob: -10.752554893493652
    5. '                       ' → logprob: -11.752554893493652
    6. ' ' → logprob: -13.877554893493652
    7. '                               ' → logprob: -14.252554893493652
    8. ')' → logprob: -14.502554893493652
    9. '                        ' → logprob: -14.627554893493652
    10. '                            ' → logprob: -14.627554893493652

Token 430: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.038154639303684235
    2. ' visited' → logprob: -3.2881546020507812
    3. '                           ' → logprob: -9.163154602050781
    4. '                               ' → logprob: -12.413154602050781
    5. '                                   ' → logprob: -13.788154602050781
    6. '                            ' → logprob: -14.288154602050781
    7. '                       ' → logprob: -14.288154602050781
    8. ' ' → logprob: -14.413154602050781
    9. '   ' → logprob: -15.538154602050781
    10. '                   ' → logprob: -15.538154602050781

Token 431: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. ' [' → logprob: -13.750001907348633
    3. '```' → logprob: -15.125001907348633
    4. '
' → logprob: -15.750001907348633
    5. 'ny' → logprob: -17.125001907348633
    6. '[
' → logprob: -17.250001907348633
    7. ' ny' → logprob: -17.250001907348633
    8. '


' → logprob: -18.062501907348633
    9. '[next' → logprob: -18.187501907348633
    10. '[now' → logprob: -18.375001907348633

Token 432: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.16029439866542816
    2. '[' → logprob: -1.9102944135665894
    3. ' ny' → logprob: -9.910294532775879
    4. '```' → logprob: -11.785294532775879
    5. 'nyi' → logprob: -12.910294532775879
    6. ''ny' → logprob: -13.660294532775879
    7. '   ' → logprob: -13.660294532775879
    8. '{' → logprob: -13.660294532775879
    9. 'ni' → logprob: -13.910294532775879
    10. '0' → logprob: -14.035294532775879

Token 433: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03366702422499657
    2. '][' → logprob: -3.4086670875549316
    3. ''][' → logprob: -12.658666610717773
    4. '```' → logprob: -12.783666610717773
    5. ' [' → logprob: -12.908666610717773
    6. ']' → logprob: -13.158666610717773
    7. '       ' → logprob: -13.283666610717773
    8. ' ][' → logprob: -13.408666610717773
    9. '           ' → logprob: -13.908666610717773
    10. '   ' → logprob: -14.033666610717773

Token 434: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.5244250297546387
    2. 'ny' → logprob: -0.8994250297546387
    3. '[' → logprob: -7.524425029754639
    4. '[n' → logprob: -8.399425506591797
    5. ' nx' → logprob: -9.149425506591797
    6. '(nx' → logprob: -9.149425506591797
    7. '
' → logprob: -9.274425506591797
    8. ' ny' → logprob: -9.399425506591797
    9. 'n' → logprob: -9.899425506591797
    10. 'nz' → logprob: -10.899425506591797

Token 435: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49367907643318176
    2. ']==' → logprob: -1.3686790466308594
    3. ' ==' → logprob: -2.8686790466308594
    4. '==' → logprob: -2.8686790466308594
    5. '==-' → logprob: -3.9936790466308594
    6. '[' → logprob: -6.868679046630859
    7. '                           ' → logprob: -7.493679046630859
    8. '                       ' → logprob: -8.24367904663086
    9. '']==' → logprob: -8.36867904663086
    10. ')' → logprob: -8.36867904663086

Token 436: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10433707386255264
    2. '==' → logprob: -2.479336977005005
    3. '==-' → logprob: -4.229337215423584
    4. ']==' → logprob: -7.979337215423584
    5. ')==' → logprob: -9.479336738586426
    6. ')' → logprob: -9.604336738586426
    7. ' ' → logprob: -9.604336738586426
    8. '                           ' → logprob: -9.979336738586426
    9. '```' → logprob: -10.104336738586426
    10. '[' → logprob: -10.104336738586426

Token 437: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.615255839889869e-05
    2. ' -' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.37509536743164
    4. ' ' → logprob: -20.37509536743164
    5. '                   ' → logprob: -20.75009536743164
    6. '−' → logprob: -21.37509536743164
    7. '  ' → logprob: -21.50009536743164
    8. '                       ' → logprob: -21.50009536743164
    9. '```' → logprob: -21.75009536743164
    10. '                           ' → logprob: -22.25009536743164

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -15.125000953674316
    4. '-' → logprob: -16.937501907348633
    5. '   ' → logprob: -17.062501907348633
    6. '                   ' → logprob: -18.000001907348633
    7. '
' → logprob: -18.187501907348633
    8. '``' → logprob: -18.312501907348633
    9. '' → logprob: -19.062501907348633
    10. ' -' → logprob: -19.062501907348633

Token 439: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.29120296239852905
    2. ':
' → logprob: -2.041203022003174
    3. ':' → logprob: -2.541203022003174
    4. ' and' → logprob: -3.791203022003174
    5. '                       ' → logprob: -4.291203022003174
    6. '):
' → logprob: -5.916203022003174
    7. '                               ' → logprob: -6.416203022003174
    8. '<|end|>' → logprob: -6.541203022003174
    9. ',' → logprob: -8.166202545166016
    10. '                            ' → logprob: -8.291202545166016

Token 440: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.003026314079761505
    2. '                               ' → logprob: -6.128026485443115
    3. '                       ' → logprob: -7.753026485443115
    4. '                            ' → logprob: -8.503026008605957
    5. '                            
' → logprob: -10.128026008605957
    6. '```' → logprob: -10.378026008605957
    7. '<|end|>' → logprob: -10.503026008605957
    8. '                                   ' → logprob: -11.128026008605957
    9. '
' → logprob: -11.378026008605957
    10. '                   ' → logprob: -11.628026008605957

Token 441: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.5379274487495422
    2. '                               ' → logprob: -1.6629273891448975
    3. 'visited' (adapté à ' visited') → logprob: -2.0379273891448975
    4. '                           ' → logprob: -2.4129273891448975
    5. '                            ' → logprob: -6.162927627563477
    6. '                             ' → logprob: -6.537927627563477
    7. '                                   ' → logprob: -6.787927627563477
    8. '```' → logprob: -6.912927627563477
    9. '                                           ' → logprob: -9.537927627563477
    10. '``' → logprob: -9.537927627563477

Token 442: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -13.750001907348633
    3. ' [' → logprob: -15.250001907348633
    4. '                       ' → logprob: -16.125001907348633
    5. '                           ' → logprob: -16.250001907348633
    6. '
' → logprob: -16.250001907348633
    7. '                   ' → logprob: -16.625001907348633
    8. '][' → logprob: -17.500001907348633
    9. ')[' → logprob: -17.625001907348633
    10. '                        
' → logprob: -17.750001907348633

Token 443: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.00012118533049942926
    2. ' ny' → logprob: -9.250121116638184
    3. '[' → logprob: -11.375121116638184
    4. 'nyi' → logprob: -12.000121116638184
    5. 'ni' → logprob: -12.500121116638184
    6. '1' → logprob: -13.750121116638184
    7. ''ny' → logprob: -15.000121116638184
    8. '0' → logprob: -15.375121116638184
    9. 'nym' → logprob: -15.375121116638184
    10. ' ' → logprob: -15.500121116638184

Token 444: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018323305994272232
    2. '][' → logprob: -4.0183234214782715
    3. '[n' → logprob: -9.643322944641113
    4. ''][' → logprob: -9.893322944641113
    5. '"][' → logprob: -11.393322944641113
    6. '```' → logprob: -11.893322944641113
    7. ')[' → logprob: -12.018322944641113
    8. 'ny' → logprob: -12.268322944641113
    9. ' ny' → logprob: -12.393322944641113
    10. ' [' → logprob: -12.643322944641113

Token 445: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0033317103516310453
    2. 'ny' → logprob: -6.128331661224365
    3. ' nx' → logprob: -7.003331661224365
    4. '(nx' → logprob: -8.753332138061523
    5. '1' → logprob: -10.128332138061523
    6. '[n' → logprob: -11.628332138061523
    7. ' ny' → logprob: -12.128332138061523
    8. 'n' → logprob: -12.128332138061523
    9. '
' → logprob: -12.503332138061523
    10. 'x' → logprob: -13.128332138061523

Token 446: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3308415710926056
    2. '=' → logprob: -2.455841541290283
    3. ')' → logprob: -2.580841541290283
    4. ' =' → logprob: -2.830841541290283
    5. ']=' → logprob: -2.955841541290283
    6. '                           ' → logprob: -5.455841541290283
    7. ' ]' → logprob: -6.705841541290283
    8. ')=' → logprob: -6.705841541290283
    9. ' )' → logprob: -7.455841541290283
    10. '+' → logprob: -7.580841541290283

Token 447: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022716462612152
    2. '=' → logprob: -1.9102271795272827
    3. ' ' → logprob: -14.035226821899414
    4. ')' → logprob: -14.535226821899414
    5. '                           ' → logprob: -14.910226821899414
    6. ' =
' → logprob: -15.035226821899414
    7. ']' → logprob: -15.035226821899414
    8. '<|end|>' → logprob: -15.910226821899414
    9. '```' → logprob: -16.160226821899414
    10. ']=' → logprob: -16.285226821899414

Token 448: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.007618341129273176
    2. ' visited' → logprob: -4.882618427276611
    3. '                           ' → logprob: -11.632617950439453
    4. '                               ' → logprob: -13.257617950439453
    5. '                   ' → logprob: -14.382617950439453
    6. '                       ' → logprob: -15.257617950439453
    7. '0' → logprob: -15.507617950439453
    8. '               ' → logprob: -16.132617950439453
    9. '                                   ' → logprob: -16.382617950439453
    10. 'vis' → logprob: -16.632617950439453

Token 449: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -7.896309739408025e-07
    2. 'y' → logprob: -14.875000953674316
    3. '[' → logprob: -15.250000953674316
    4. ' [' → logprob: -16.0
    5. ' y' → logprob: -18.125
    6. '	y' → logprob: -18.75
    7. '   ' → logprob: -18.75
    8. '```' → logprob: -18.75
    9. ' ' → logprob: -19.5
    10. '(y' → logprob: -19.75

Token 450: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.07426222413778305
    2. '][' → logprob: -2.8242621421813965
    3. '[y' → logprob: -5.1992621421813965
    4. '[' → logprob: -5.1992621421813965
    5. '[n' → logprob: -6.8242621421813965
    6. ' [' → logprob: -10.699262619018555
    7. '}[' → logprob: -11.449262619018555
    8. '```' → logprob: -11.449262619018555
    9. '[now' → logprob: -11.824262619018555
    10. 'x' → logprob: -11.949262619018555

Token 451: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. ' x' → logprob: -15.625
    3. '
' → logprob: -16.125
    4. '```' → logprob: -17.25
    5. '	x' → logprob: -17.375
    6. '   ' → logprob: -18.25
    7. '[' → logprob: -18.75
    8. '"x' → logprob: -19.0
    9. 'y' → logprob: -19.25
    10. ' ' → logprob: -19.5

Token 452: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519349455833435
    2. ' +' → logprob: -1.5019350051879883
    3. ']+' → logprob: -13.501935005187988
    4. ']' → logprob: -14.001935005187988
    5. '[' → logprob: -14.001935005187988
    6. ' ' → logprob: -14.501935005187988
    7. ')' → logprob: -14.876935005187988
    8. '```' → logprob: -14.876935005187988
    9. ')+' → logprob: -15.001935005187988
    10. ' plus' → logprob: -15.126935005187988

Token 453: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931546330451965
    2. ' +' → logprob: -0.6931546330451965
    3. '[' → logprob: -12.193154335021973
    4. ' ' → logprob: -14.318154335021973
    5. ' plus' → logprob: -14.693154335021973
    6. ' ' → logprob: -14.818154335021973
    7. '```' → logprob: -14.818154335021973
    8. '＋' → logprob: -15.943154335021973
    9. '+
' → logprob: -16.31815528869629
    10. ' +
' → logprob: -16.31815528869629

Token 454: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -16.375030517578125
    4. '   ' → logprob: -17.875030517578125
    5. '<|end|>' → logprob: -20.500030517578125
    6. '
' → logprob: -21.250030517578125
    7. '`' → logprob: -21.375030517578125
    8. '                           ' → logprob: -21.375030517578125
    9. '                       ' → logprob: -21.500030517578125
    10. '                   ' → logprob: -21.500030517578125

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -19.750001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '
' → logprob: -22.750001907348633
    6. '' → logprob: -23.250001907348633
    7. '  ' → logprob: -24.000001907348633
    8. '۱' → logprob: -24.125001907348633
    9. '১' → logprob: -24.437501907348633
    10. '[' → logprob: -24.437501907348633

Token 456: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.000588417868129909
    2. '                            
' → logprob: -8.500588417053223
    3. '```' → logprob: -9.750588417053223
    4. '<|end|>' → logprob: -9.875588417053223
    5. '                       ' → logprob: -10.000588417053223
    6. ',' → logprob: -10.125588417053223
    7. '
' → logprob: -10.250588417053223
    8. '                            ' → logprob: -10.375588417053223
    9. '                               ' → logprob: -10.625588417053223
    10. '						' → logprob: -10.875588417053223

Token 457: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0003534582501742989
    2. '                            
' → logprob: -9.375353813171387
    3. '```' → logprob: -9.500353813171387
    4. ',' → logprob: -9.625353813171387
    5. '                            ' → logprob: -10.375353813171387
    6. '<|end|>' → logprob: -10.375353813171387
    7. '                       ' → logprob: -11.000353813171387
    8. '						' → logprob: -11.500353813171387
    9. '
' → logprob: -11.875353813171387
    10. '                               ' → logprob: -12.250353813171387

Token 458: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.39118868112564087
    2. ' queue' → logprob: -1.141188621520996
    3. '                           ' → logprob: -5.516188621520996
    4. '```' → logprob: -8.266188621520996
    5. '                               ' → logprob: -11.766188621520996
    6. '	queue' → logprob: -12.266188621520996
    7. '``' → logprob: -12.391188621520996
    8. '                                   ' → logprob: -12.641188621520996
    9. '.queue' → logprob: -13.016188621520996
    10. '(queue' → logprob: -13.141188621520996

Token 459: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.107425062713446e-06
    2. '.' → logprob: -12.625006675720215
    3. 'append' → logprob: -13.125006675720215
    4. '.extend' → logprob: -14.125006675720215
    5. '.app' → logprob: -14.625006675720215
    6. '.p' → logprob: -15.250006675720215
    7. '.enqueue' → logprob: -15.250006675720215
    8. 'app' → logprob: -17.37500762939453
    9. '_append' → logprob: -17.87500762939453
    10. '.Append' → logprob: -17.87500762939453

Token 460: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008395775221288204
    2. '(' → logprob: -5.258395671844482
    3. '(n' → logprob: -5.758395671844482
    4. ' (' → logprob: -14.88339614868164
    5. '(
' → logprob: -15.38339614868164
    6. '(nx' → logprob: -15.88339614868164
    7. '(N' → logprob: -17.25839614868164
    8. ' ((' → logprob: -17.63339614868164
    9. '```' → logprob: -18.38339614868164
    10. '(nd' → logprob: -18.63339614868164

Token 461: 'ny' (ID: 3008)
  Prédit: 'ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0002031827752944082
    2. '(n' → logprob: -8.625203132629395
    3. ' ny' → logprob: -10.875203132629395
    4. '(' → logprob: -12.375203132629395
    5. 'n' → logprob: -16.25020408630371
    6. 'ni' → logprob: -16.62520408630371
    7. '   ' → logprob: -16.62520408630371
    8. 'nyi' → logprob: -16.87520408630371
    9. ' (' → logprob: -17.12520408630371
    10. '```' → logprob: -17.37520408630371

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013500562636181712
    2. 'ny' → logprob: -9.37513542175293
    3. ',n' → logprob: -10.75013542175293
    4. '(nx' → logprob: -11.25013542175293
    5. ' ,' → logprob: -11.87513542175293
    6. ' ny' → logprob: -12.37513542175293
    7. ',
' → logprob: -13.12513542175293
    8. '
' → logprob: -14.00013542175293
    9. '(n' → logprob: -14.37513542175293
    10. '```' → logprob: -15.00013542175293

Token 463: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.0029191148933023214
    2. ' nx' → logprob: -6.0029191970825195
    3. 'ny' → logprob: -7.7529191970825195
    4. '(nx' → logprob: -11.37791919708252
    5. 'n' → logprob: -13.75291919708252
    6. '
' → logprob: -14.50291919708252
    7. ' ny' → logprob: -15.12791919708252
    8. '   ' → logprob: -15.75291919708252
    9. 'nz' → logprob: -15.87791919708252
    10. '```' → logprob: -15.87791919708252

Token 464: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00979197584092617
    2. '))' → logprob: -4.634791851043701
    3. ')
' → logprob: -10.38479232788086
    4. ')))' → logprob: -13.50979232788086
    5. '))
' → logprob: -13.50979232788086
    6. ' )' → logprob: -14.38479232788086
    7. ')}' → logprob: -15.13479232788086
    8. '<|end|>' → logprob: -15.25979232788086
    9. '                           ' → logprob: -15.50979232788086
    10. ')n' → logprob: -15.75979232788086

Token 465: '           ' (ID: 352)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.4922308325767517
    2. '           ' → logprob: -1.3672308921813965
    3. '       ' → logprob: -3.1172308921813965
    4. ',' → logprob: -4.1172308921813965
    5. '                            
' → logprob: -4.1172308921813965
    6. ')' → logprob: -4.4922308921813965
    7. '               ' → logprob: -4.8672308921813965
    8. '<|end|>' → logprob: -5.1172308921813965
    9. '```' → logprob: -5.1172308921813965
    10. '
' → logprob: -5.3672308921813965

Token 466: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3192071318626404
    2. '       ' → logprob: -1.3192071914672852
    3. '                           ' → logprob: -5.444207191467285
    4. '   ' → logprob: -7.194207191467285
    5. '                       ' → logprob: -8.319207191467285
    6. ' return' → logprob: -9.319207191467285
    7. '               ' → logprob: -9.444207191467285
    8. '```' → logprob: -9.569207191467285
    9. '        ' → logprob: -9.819207191467285
    10. '                   ' → logprob: -10.444207191467285

Token 467: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0004306692280806601
    2. ' visited' → logprob: -7.750430583953857
    3. 'visible' → logprob: -19.000431060791016
    4. 'vis' → logprob: -19.375431060791016
    5. '[' → logprob: -19.500431060791016
    6. 'visit' → logprob: -20.125431060791016
    7. '   ' → logprob: -21.250431060791016
    8. 'Visited' → logprob: -21.750431060791016
    9. ' ' → logprob: -22.000431060791016
    10. ' ' → logprob: -22.375431060791016

Token 468: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0664207860827446
    2. ' for' → logprob: -3.191420793533325
    3. '<|end|>' → logprob: -4.441420555114746
    4. 'for' → logprob: -4.816420555114746
    5. '```' → logprob: -6.191420555114746
    6. '        
' → logprob: -7.316420555114746
    7. '
' → logprob: -8.566420555114746
    8. '   ' → logprob: -9.441420555114746
    9. '<|end|>' → logprob: -9.816420555114746
    10. ')' → logprob: -10.316420555114746

Token 470: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1446741670370102
    2. ' for' → logprob: -2.394674062728882
    3. 'for' → logprob: -3.144674062728882
    4. '        
' → logprob: -8.269674301147461
    5. '```' → logprob: -9.269674301147461
    6. '
' → logprob: -10.519674301147461
    7. '   ' → logprob: -12.144674301147461
    8. '	for' → logprob: -12.519674301147461
    9. '<|end|>' → logprob: -12.769674301147461
    10. ')' → logprob: -13.019674301147461

Token 471: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.13388703338569e-06
    2. ' for' → logprob: -12.000009536743164
    3. '       ' → logprob: -12.750009536743164
    4. '   ' → logprob: -18.750009536743164
    5. '#' → logprob: -20.375009536743164
    6. '```' → logprob: -20.375009536743164
    7. '	for' → logprob: -21.000009536743164
    8. 'distance' → logprob: -21.250009536743164
    9. 'dist' → logprob: -21.375009536743164
    10. '        
' → logprob: -21.500009536743164

Token 472: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4498052223643754e-05
    2. ' i' → logprob: -11.375014305114746
    3. 'idx' → logprob: -13.000014305114746
    4. '_i' → logprob: -15.000014305114746
    5. 'u' → logprob: -15.250014305114746
    6. '(i' → logprob: -16.750015258789062
    7. '```' → logprob: -17.375015258789062
    8. 'index' → logprob: -17.625015258789062
    9. 'point' → logprob: -17.750015258789062
    10. '	i' → logprob: -18.000015258789062

Token 473: ' point' (ID: 2438)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024299470707774162
    2. ' i' → logprob: -3.774299383163452
    3. 'point' → logprob: -7.024299621582031
    4. ' point' → logprob: -8.899299621582031
    5. 'p' → logprob: -11.399299621582031
    6. 'idx' → logprob: -11.899299621582031
    7. ' in' → logprob: -13.149299621582031
    8. '_i' → logprob: -13.899299621582031
    9. '```' → logprob: -14.024299621582031
    10. 'pt' → logprob: -14.149299621582031

Token 474: ' of' (ID: 328)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09319812059402466
    2. 'in' → logprob: -2.59319806098938
    3. 'i' → logprob: -4.468198299407959
    4. ',' → logprob: -6.343198299407959
    5. ' i' → logprob: -8.4681978225708
    6. '[i' → logprob: -8.5931978225708
    7. '_idx' → logprob: -9.2181978225708
    8. 'index' → logprob: -9.3431978225708
    9. '_i' → logprob: -9.4681978225708
    10. 'idx' → logprob: -9.5931978225708

Token 475: ' interest' (ID: 3425)
  Prédit: 'interest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interest' → logprob: -0.0002538296685088426
    2. 'range' → logprob: -9.250253677368164
    3. '-interest' → logprob: -9.250253677368164
    4. '_interest' → logprob: -10.375253677368164
    5. ' interest' → logprob: -10.625253677368164
    6. 'inter' → logprob: -12.125253677368164
    7. 'interesting' → logprob: -15.250253677368164
    8. '#' → logprob: -16.000253677368164
    9. 'index' → logprob: -16.500253677368164
    10. 'intersection' → logprob: -16.875253677368164

Token 476: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024543654173612595
    2. 'in' → logprob: -3.7745437622070312
    3. ',' → logprob: -6.899543762207031
    4. 'for' → logprob: -9.024543762207031
    5. ' for' → logprob: -9.274543762207031
    6. ' i' → logprob: -10.149543762207031
    7. '       ' → logprob: -11.399543762207031
    8. 'i' → logprob: -11.649543762207031
    9. ':' → logprob: -12.524543762207031
    10. '_in' → logprob: -12.649543762207031

Token 477: ' run' (ID: 2461)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28513801097869873
    2. 'for' → logprob: -1.4101380109786987
    3. '       ' → logprob: -5.535138130187988
    4. ' visited' → logprob: -10.785138130187988
    5. 'visited' → logprob: -11.660138130187988
    6. '	for' → logprob: -13.535138130187988
    7. ')' → logprob: -14.535138130187988
    8. '_for' → logprob: -14.535138130187988
    9. '   ' → logprob: -14.910138130187988
    10. ':' → logprob: -15.035138130187988

Token 478: ' BFS' (ID: 190016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01385376788675785
    2. ' i' → logprob: -5.388853549957275
    3. 'range' → logprob: -5.388853549957275
    4. 'b' → logprob: -6.388853549957275
    5. 'in' → logprob: -6.638853549957275
    6. ' bfs' → logprob: -7.638853549957275
    7. ' range' → logprob: -7.763853549957275
    8. '_' → logprob: -8.263854026794434
    9. ' in' → logprob: -8.263854026794434
    10. 'point' → logprob: -9.388854026794434

Token 479: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.46864908933639526
    2. 'for' → logprob: -2.09364914894104
    3. ' for' → logprob: -2.21864914894104
    4. '(i' → logprob: -3.34364914894104
    5. '       ' → logprob: -3.59364914894104
    6. ',' → logprob: -3.59364914894104
    7. 'in' → logprob: -4.093648910522461
    8. ' i' → logprob: -4.218648910522461
    9. '(' → logprob: -4.718648910522461
    10. 'i' → logprob: -5.593648910522461

Token 480: ' store' (ID: 4897)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.392652302980423
    2. ' for' → logprob: -1.1426522731781006
    3. 'visited' → logprob: -5.39265251159668
    4. ' visited' → logprob: -7.14265251159668
    5. '       ' → logprob: -7.89265251159668
    6. '
' → logprob: -11.39265251159668
    7. '#' → logprob: -11.89265251159668
    8. ' distances' → logprob: -12.14265251159668
    9. '```' → logprob: -12.14265251159668
    10. '           ' → logprob: -12.64265251159668

Token 481: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.18429821729660034
    2. ' distances' → logprob: -1.9342982769012451
    3. 'visited' → logprob: -4.934298038482666
    4. 'distance' → logprob: -5.309298038482666
    5. 'results' → logprob: -5.684298038482666
    6. ' visited' → logprob: -6.559298038482666
    7. ' dist' → logprob: -6.684298038482666
    8. ' results' → logprob: -6.934298038482666
    9. 'for' → logprob: -7.309298038482666
    10. '_dist' → logprob: -7.434298038482666

Token 482: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01130127627402544
    2. ' for' → logprob: -4.636301040649414
    3. 'for' → logprob: -7.011301040649414
    4. '           ' → logprob: -8.761301040649414
    5. '(' → logprob: -8.886301040649414
    6. ' in' → logprob: -9.261301040649414
    7. '   ' → logprob: -9.511301040649414
    8. ' (' → logprob: -10.011301040649414
    9. ':' → logprob: -10.386301040649414
    10. ',' → logprob: -10.386301040649414

Token 483: ' others' (ID: 5036)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3062163293361664
    2. 'other' → logprob: -1.8062163591384888
    3. ' all' → logprob: -2.931216239929199
    4. 'each' → logprob: -3.681216239929199
    5. ' other' → logprob: -3.931216239929199
    6. ' each' → logprob: -7.431216239929199
    7. 'every' → logprob: -7.931216239929199
    8. 'points' → logprob: -8.4312162399292
    9. ' points' → logprob: -9.5562162399292
    10. ' every' → logprob: -9.8062162399292

Token 484: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04500575363636017
    2. ' for' → logprob: -3.2950057983398438
    3. 'for' → logprob: -5.045005798339844
    4. ' in' → logprob: -8.670005798339844
    5. '   ' → logprob: -9.045005798339844
    6. '           ' → logprob: -9.795005798339844
    7. '(' → logprob: -10.420005798339844
    8. '```' → logprob: -10.420005798339844
    9. '        
' → logprob: -11.170005798339844
    10. ':' → logprob: -11.170005798339844

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014900267124176025
    2. ' for' → logprob: -4.514900207519531
    3. 'for' → logprob: -6.764900207519531
    4. '   ' → logprob: -7.139900207519531
    5. '```' → logprob: -7.264900207519531
    6. '
' → logprob: -7.639900207519531
    7. '        
' → logprob: -7.889900207519531
    8. '    
' → logprob: -9.639900207519531
    9. ':' → logprob: -9.764900207519531
    10. '  
' → logprob: -10.139900207519531

Token 486: ' visited' (ID: 18416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2753913402557373
    2. ' for' → logprob: -1.6503913402557373
    3. 'for' → logprob: -3.0253913402557373
    4. '```' → logprob: -9.525391578674316
    5. '   ' → logprob: -10.150391578674316
    6. '        
' → logprob: -10.525391578674316
    7. '
' → logprob: -11.275391578674316
    8. ',' → logprob: -11.775391578674316
    9. ' ' → logprob: -11.775391578674316
    10. '           ' → logprob: -11.900391578674316

Token 487: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20266029238700867
    2. ' =' → logprob: -1.702660322189331
    3. '[' → logprob: -7.202660083770752
    4. 's' → logprob: -7.827660083770752
    5. 'for' → logprob: -10.82766056060791
    6. '[s' → logprob: -11.07766056060791
    7. '[i' → logprob: -11.70266056060791
    8. '_' → logprob: -11.70266056060791
    9. '=[' → logprob: -12.45266056060791
    10. '[start' → logprob: -12.57766056060791

Token 488: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688185811042786
    2. '=' → logprob: -1.1368818283081055
    3. ',' → logprob: -12.261881828308105
    4. '=[]' → logprob: -12.761881828308105
    5. '[' → logprob: -13.636881828308105
    6. ' =[' → logprob: -14.761881828308105
    7. '.append' → logprob: -15.011881828308105
    8. '=[' → logprob: -15.136881828308105
    9. 's' → logprob: -15.636881828308105
    10. 'for' → logprob: -15.886881828308105

Token 489: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5030394196510315
    2. '[' → logprob: -1.2530393600463867
    3. '[b' → logprob: -2.2530393600463867
    4. '[]
' → logprob: -5.503039360046387
    5. '[list' → logprob: -8.378039360046387
    6. ' []' → logprob: -9.503039360046387
    7. '[]

' → logprob: -9.753039360046387
    8. ' [' → logprob: -10.503039360046387
    9. '[v' → logprob: -11.003039360046387
    10. '[get' → logprob: -11.128039360046387

Token 490: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6138049364089966
    2. 'for' → logprob: -0.9888049364089966
    3. '       ' → logprob: -2.488804817199707
    4. '
' → logprob: -6.863804817199707
    5. '```' → logprob: -7.863804817199707
    6. ' =' → logprob: -7.988804817199707
    7. '=' → logprob: -8.113804817199707
    8. ':' → logprob: -8.238804817199707
    9. '        
' → logprob: -8.488804817199707
    10. '<|end|>' → logprob: -8.738804817199707

Token 491: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2071785032749176
    2. ' for' → logprob: -1.9571784734725952
    3. '       ' → logprob: -3.0821785926818848
    4. '
' → logprob: -13.082178115844727
    5. '   ' → logprob: -13.332178115844727
    6. '	for' → logprob: -13.582178115844727
    7. '           ' → logprob: -13.832178115844727
    8. '```' → logprob: -13.832178115844727
    9. '        
' → logprob: -14.457178115844727
    10. ' ' → logprob: -14.582178115844727

Token 492: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0809815376996994
    2. 'point' → logprob: -3.330981492996216
    3. 'p' → logprob: -3.955981492996216
    4. ' i' → logprob: -4.080981731414795
    5. ' point' → logprob: -6.330981731414795
    6. 'idx' → logprob: -6.330981731414795
    7. 'pt' → logprob: -6.705981731414795
    8. '(i' → logprob: -8.330981254577637
    9. 'start' → logprob: -8.580981254577637
    10. ' p' → logprob: -8.705981254577637

Token 493: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08923639357089996
    2. 'in' → logprob: -2.4642364978790283
    3. ',' → logprob: -8.21423625946045
    4. '_in' → logprob: -12.21423625946045
    5. ' ' → logprob: -12.33923625946045
    6. ' ,' → logprob: -12.46423625946045
    7. ')' → logprob: -12.96423625946045
    8. 'In' → logprob: -13.46423625946045
    9. '_' → logprob: -13.90173625946045
    10. '	in' → logprob: -14.02673625946045

Token 494: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.167648876318708e-05
    2. ' range' → logprob: -10.125041961669922
    3. 'points' → logprob: -13.375041961669922
    4. 'point' → logprob: -17.625041961669922
    5. '
' → logprob: -18.875041961669922
    6. '(range' → logprob: -19.375041961669922
    7. '	range' → logprob: -19.500041961669922
    8. '```' → logprob: -19.625041961669922
    9. '   ' → logprob: -19.875041961669922
    10. '`' → logprob: -20.625041961669922

Token 495: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.28543224930763245
    2. 'n' → logprob: -1.41043221950531
    3. ' n' → logprob: -5.6604323387146
    4. ' (' → logprob: -7.5354323387146
    5. '(' → logprob: -9.785431861877441
    6. '(len' → logprob: -10.035431861877441
    7. '   ' → logprob: -10.035431861877441
    8. 'len' → logprob: -10.035431861877441
    9. '0' → logprob: -11.035431861877441
    10. '	n' → logprob: -11.410431861877441

Token 496: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024802929256111383
    2. ' +' → logprob: -6.002480506896973
    3. '+
' → logprob: -12.877480506896973
    4. '):
' → logprob: -14.377480506896973
    5. '1' → logprob: -14.502480506896973
    6. ')' → logprob: -15.502480506896973
    7. '   ' → logprob: -15.877480506896973
    8. ')+' → logprob: -16.002479553222656
    9. '+)' → logprob: -16.252479553222656
    10. '):' → logprob: -16.252479553222656

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.375004768371582
    3. ')' → logprob: -15.062504768371582
    4. '
' → logprob: -15.500004768371582
    5. '```' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.6875057220459
    7. '2' → logprob: -16.8125057220459
    8. '

' → logprob: -17.8125057220459
    9. '0' → logprob: -18.0000057220459
    10. ',' → logprob: -18.1250057220459

Token 498: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16039909422397614
    2. '):' → logprob: -1.910399079322815
    3. ')' → logprob: -9.035399436950684
    4. '):
' → logprob: -10.160399436950684
    5. ' ):
' → logprob: -12.035399436950684
    6. ':' → logprob: -12.660399436950684
    7. ' ):' → logprob: -12.660399436950684
    8. ':
' → logprob: -13.160399436950684
    9. '):

' → logprob: -13.785399436950684
    10. '   ' → logprob: -14.535399436950684

Token 499: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2165066003799438
    2. ' visited' → logprob: -1.7165066003799438
    3. 'visited' → logprob: -2.0915064811706543
    4. ':
' → logprob: -2.0915064811706543
    5. ':' → logprob: -2.2165064811706543
    6. '       ' → logprob: -2.4665064811706543
    7. '):
' → logprob: -3.4665064811706543
    8. ',' → logprob: -3.9665064811706543
    9. '
' → logprob: -4.091506481170654
    10. '   ' → logprob: -5.091506481170654

Token 500: ' y' (ID: 342)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3716828227043152
    2. ' visited' → logprob: -1.24668288230896
    3. 'vy' → logprob: -3.99668288230896
    4. '           ' → logprob: -6.996682643890381
    5. ' vy' → logprob: -6.996682643890381
    6. 'vis' → logprob: -7.246682643890381
    7. '   ' → logprob: -7.746682643890381
    8. 'y' (adapté à ' y') → logprob: -7.871682643890381
    9. ' y' → logprob: -7.996682643890381
    10. 'sy' → logprob: -8.621683120727539

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005793697200715542
    2. ',x' → logprob: -5.505793571472168
    3. 'x' → logprob: -6.380793571472168
    4. ' ,' → logprob: -11.130793571472168
    5. '=' → logprob: -12.880793571472168
    6. ',
' → logprob: -14.630793571472168
    7. ',n' → logprob: -14.755793571472168
    8. ' x' → logprob: -14.755793571472168
    9. '_,' → logprob: -15.130793571472168
    10. ',y' → logprob: -15.755793571472168

Token 502: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06200813129544258
    2. ' x' → logprob: -2.8120081424713135
    3. ',x' → logprob: -10.687007904052734
    4. ',' → logprob: -11.687007904052734
    5. '   ' → logprob: -12.687007904052734
    6. ' points' → logprob: -13.062007904052734
    7. 'points' → logprob: -13.437007904052734
    8. '	x' → logprob: -13.437007904052734
    9. '
' → logprob: -15.312007904052734
    10. ')x' → logprob: -15.312007904052734

Token 503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869202435016632
    2. ' =' → logprob: -1.1369202136993408
    3. ')' → logprob: -10.136919975280762
    4. ')=' → logprob: -12.636919975280762
    5. ']' → logprob: -13.511919975280762
    6. '=user' → logprob: -13.761919975280762
    7. '   ' → logprob: -14.011919975280762
    8. ']=' → logprob: -14.136919975280762
    9. '=line' → logprob: -15.011919975280762
    10. 'points' → logprob: -15.886919975280762

Token 504: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.4740773141384125
    2. 'points' → logprob: -0.9740773439407349
    3. '	points' → logprob: -15.224077224731445
    4. '(points' → logprob: -16.474077224731445
    5. 'oints' → logprob: -18.099077224731445
    6. '   ' → logprob: -18.224077224731445
    7. '_points' → logprob: -18.974077224731445
    8. '.points' → logprob: -19.224077224731445
    9. ' pontos' → logprob: -19.349077224731445
    10. 'Points' → logprob: -19.599077224731445

Token 505: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. ')' → logprob: -13.37500286102295
    3. '[' → logprob: -13.87500286102295
    4. ']' → logprob: -15.75000286102295
    5. ')[' → logprob: -16.125003814697266
    6. '(i' → logprob: -16.625003814697266
    7. 'i' → logprob: -16.875003814697266
    8. '[
' → logprob: -17.000003814697266
    9. '][' → logprob: -17.875003814697266
    10. ' =' → logprob: -18.125003814697266

Token 506: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6516889333724976
    2. ')' → logprob: -0.7766889333724976
    3. '])' → logprob: -4.026689052581787
    4. ')]' → logprob: -7.026689052581787
    5. ']
' → logprob: -9.276688575744629
    6. ')
' → logprob: -10.276688575744629
    7. '<|end|>' → logprob: -11.401688575744629
    8. ')])' → logprob: -11.651688575744629
    9. ' )' → logprob: -11.901688575744629
    10. '])]' → logprob: -12.026688575744629

Token 507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11710170656442642
    2. 'visited' → logprob: -2.3671016693115234
    3. ' visited' → logprob: -4.367101669311523
    4. '
' → logprob: -5.867101669311523
    5. '   ' → logprob: -7.492101669311523
    6. '```' → logprob: -7.992101669311523
    7. ',' → logprob: -8.617101669311523
    8. '            
' → logprob: -9.992101669311523
    9. '       ' → logprob: -10.867101669311523
    10. ' =' → logprob: -11.117101669311523

Token 508: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.003512168535962701
    2. 'v' → logprob: -6.378512382507324
    3. ' visited' → logprob: -7.003512382507324
    4. 'vis' → logprob: -7.253512382507324
    5. '           ' → logprob: -9.128512382507324
    6. 'visit' → logprob: -11.003512382507324
    7. 'vi' → logprob: -11.003512382507324
    8. 'vl' → logprob: -11.628512382507324
    9. '   ' → logprob: -11.753512382507324
    10. 'vist' → logprob: -11.753512382507324

Token 509: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42632994055747986
    2. ' =' → logprob: -1.5513299703598022
    3. '_list' → logprob: -2.0513298511505127
    4. '[i' → logprob: -5.426330089569092
    5. '=_' → logprob: -6.301330089569092
    6. '=i' → logprob: -9.551329612731934
    7. 's' → logprob: -9.926329612731934
    8. '[' → logprob: -10.426329612731934
    9. '[_' → logprob: -10.551329612731934
    10. ')=' → logprob: -11.051329612731934

Token 510: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048595547676086426
    2. ' =' → logprob: -3.048595428466797
    3. '.append' → logprob: -12.048595428466797
    4. '=i' → logprob: -13.798595428466797
    5. '=b' → logprob: -15.173595428466797
    6. '[i' → logprob: -15.173595428466797
    7. '[' → logprob: -15.798595428466797
    8. ')' → logprob: -15.923595428466797
    9. ')=' → logprob: -16.298595428466797
    10. '=

' → logprob: -17.048595428466797

Token 511: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.873571692267433e-05
    2. 'b' → logprob: -10.125068664550781
    3. '(' → logprob: -10.500068664550781
    4. ' bfs' → logprob: -14.625068664550781
    5. ' (' → logprob: -15.375068664550781
    6. '(
' → logprob: -15.500068664550781
    7. '=b' → logprob: -15.500068664550781
    8. '((' → logprob: -17.87506866455078
    9. ')b' → logprob: -18.50006866455078
    10. '(B' → logprob: -18.75006866455078

Token 512: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -7.3458322731312364e-06
    2. 'sf' → logprob: -12.250007629394531
    3. 'FS' → logprob: -13.750007629394531
    4. 's' → logprob: -14.875007629394531
    5. '(fs' → logprob: -14.875007629394531
    6. '[' → logprob: -15.625007629394531
    7. 'fsp' → logprob: -15.875007629394531
    8. '[s' → logprob: -16.37500762939453
    9. 'f' → logprob: -16.62500762939453
    10. ' fs' → logprob: -17.12500762939453

Token 513: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -7.457669562427327e-05
    2. '(' → logprob: -9.87507438659668
    3. 'y' → logprob: -11.50007438659668
    4. ')(' → logprob: -11.62507438659668
    5. ')' → logprob: -13.37507438659668
    6. ' (' → logprob: -14.00007438659668
    7. '((' → logprob: -14.12507438659668
    8. ')y' → logprob: -15.00007438659668
    9. '(
' → logprob: -15.25007438659668
    10. '
' → logprob: -16.00007438659668

Token 514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004642303101718426
    2. ',x' → logprob: -5.379642486572266
    3. ' ,' → logprob: -10.879642486572266
    4. '[' → logprob: -13.629642486572266
    5. ',y' → logprob: -14.504642486572266
    6. '[x' → logprob: -14.754642486572266
    7. ' ' → logprob: -15.254642486572266
    8. 'x' → logprob: -15.254642486572266
    9. ',
' → logprob: -15.504642486572266
    10. ' x' → logprob: -16.504642486572266

Token 515: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '	x' → logprob: -18.375261306762695
    4. ')x' → logprob: -18.750261306762695
    5. '
' → logprob: -20.375261306762695
    6. ',x' → logprob: -20.625261306762695
    7. '(x' → logprob: -21.375261306762695
    8. '   ' → logprob: -21.625261306762695
    9. '"x' → logprob: -21.875261306762695
    10. ' ' → logprob: -22.375261306762695

Token 516: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00011236425780225545
    2. ')' → logprob: -9.125112533569336
    3. '))
' → logprob: -13.500112533569336
    4. '           ' → logprob: -14.500112533569336
    5. ')))' → logprob: -14.500112533569336
    6. ' ))' → logprob: -14.750112533569336
    7. '       ' → logprob: -14.875112533569336
    8. ')[' → logprob: -15.875112533569336
    9. '()))' → logprob: -16.750112533569336
    10. '   ' → logprob: -17.000112533569336

Token 517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2640920877456665
    2. ' for' → logprob: -1.6390920877456665
    3. 'for' → logprob: -4.264091968536377
    4. '```' → logprob: -4.389091968536377
    5. '<|end|>' → logprob: -4.514091968536377
    6. '
' → logprob: -8.764092445373535
    7. '<|end|>' → logprob: -9.139092445373535
    8. '        
' → logprob: -9.389092445373535
    9. ')' → logprob: -10.014092445373535
    10. ',' → logprob: -10.139092445373535

Token 518: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30637532472610474
    2. 'for' → logprob: -1.80637526512146
    3. ' for' → logprob: -2.30637526512146
    4. '```' → logprob: -11.181375503540039
    5. '   ' → logprob: -12.806375503540039
    6. '           ' → logprob: -14.056375503540039
    7. '	for' → logprob: -14.056375503540039
    8. '<|end|>' → logprob: -15.056375503540039
    9. '#' (adapté à ' #') → logprob: -15.431375503540039
    10. '        
' → logprob: -15.681375503540039

Token 519: ' Fill' (ID: 32680)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.959636033978313e-05
    2. '       ' → logprob: -9.750089645385742
    3. ' for' → logprob: -10.500089645385742
    4. 'possible' → logprob: -13.000089645385742
    5. 'found' → logprob: -14.500089645385742
    6. '   ' → logprob: -15.250089645385742
    7. '#' → logprob: -15.250089645385742
    8. 'valid' → logprob: -15.625089645385742
    9. 'import' → logprob: -16.875089645385742
    10. '```' → logprob: -17.000089645385742

Token 520: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9101859927177429
    2. ' in' → logprob: -1.2851860523223877
    3. ' for' → logprob: -2.2851860523223877
    4. 'for' → logprob: -2.4101860523223877
    5. '       ' → logprob: -2.6601860523223877
    6. ' dist' → logprob: -3.1601860523223877
    7. 'in' → logprob: -4.160185813903809
    8. '(dist' → logprob: -7.410185813903809
    9. ' distances' → logprob: -8.535185813903809
    10. '   ' → logprob: -8.535185813903809

Token 521: ' matrix' (ID: 12248)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7804874181747437
    2. '       ' → logprob: -1.2804874181747437
    3. ' for' → logprob: -1.4054874181747437
    4. '[i' → logprob: -4.155487537384033
    5. '[' → logprob: -7.030487537384033
    6. '   ' → logprob: -7.155487537384033
    7. '=' → logprob: -8.030487060546875
    8. ' =' → logprob: -8.405487060546875
    9. ':' → logprob: -8.905487060546875
    10. ' in' → logprob: -9.405487060546875

Token 522: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038682357408106327
    2. ' for' → logprob: -5.878868103027344
    3. 'for' → logprob: -6.878868103027344
    4. '   ' → logprob: -11.003868103027344
    5. '
' → logprob: -12.503868103027344
    6. '        
' → logprob: -12.628868103027344
    7. '<|end|>' → logprob: -12.878868103027344
    8. ',' → logprob: -13.253868103027344
    9. '```' → logprob: -13.503868103027344
    10. '           ' → logprob: -13.503868103027344

Token 523: ' point' (ID: 2438)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.20095553994178772
    2. 'for' → logprob: -2.075955629348755
    3. ' for' → logprob: -4.575955390930176
    4. '[
' → logprob: -4.700955390930176
    5. '[' → logprob: -4.825955390930176
    6. ' distances' → logprob: -5.200955390930176
    7. '[i' → logprob: -5.325955390930176
    8. 'i' → logprob: -5.825955390930176
    9. 'dist' → logprob: -5.825955390930176
    10. '0' → logprob: -6.075955390930176

Token 524: '-to' (ID: 6487)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6880772113800049
    2. 's' → logprob: -1.3130772113800049
    3. '[' → logprob: -2.688077211380005
    4. 'visited' → logprob: -3.188077211380005
    5. ' distances' → logprob: -3.188077211380005
    6. '-to' → logprob: -4.063076972961426
    7. 'dist' → logprob: -4.813076972961426
    8. '_to' → logprob: -5.063076972961426
    9. 'of' → logprob: -5.188076972961426
    10. '][' → logprob: -5.438076972961426

Token 525: '-point' (ID: 37909)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.00037609596620313823
    2. '-point' → logprob: -8.500375747680664
    3. ' point' → logprob: -8.750375747680664
    4. '_point' → logprob: -11.625375747680664
    5. 'points' → logprob: -12.250375747680664
    6. 'Point' → logprob: -15.500375747680664
    7. 'distance' → logprob: -16.250375747680664
    8. '(point' → logprob: -16.875375747680664
    9. '	point' → logprob: -17.125375747680664
    10. ' ' → logprob: -17.750375747680664

Token 526: ' distances' (ID: 48294)
  Prédit: ' distances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.3870246112346649
    2. 'dist' → logprob: -1.1370246410369873
    3. 'distance' → logprob: -9.262024879455566
    4. ' dist' → logprob: -10.762024879455566
    5. '_dist' → logprob: -10.887024879455566
    6. 'visited' → logprob: -11.637024879455566
    7. ' distance' → logprob: -12.012024879455566
    8. ' visited' → logprob: -13.887024879455566
    9. '[' → logprob: -14.012024879455566
    10. 'values' → logprob: -15.012024879455566

Token 527: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008741624653339386
    2. ' for' → logprob: -5.133741855621338
    3. 'for' → logprob: -7.008741855621338
    4. '<|end|>' → logprob: -7.383741855621338
    5. '        
' → logprob: -7.633741855621338
    6. '   ' → logprob: -8.38374137878418
    7. '```' → logprob: -9.00874137878418
    8. ',' → logprob: -9.50874137878418
    9. '
' → logprob: -10.00874137878418
    10. '    
' → logprob: -10.13374137878418

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08632029592990875
    2. ' for' → logprob: -2.586320400238037
    3. 'for' → logprob: -5.461320400238037
    4. '```' → logprob: -6.336320400238037
    5. '   ' → logprob: -6.961320400238037
    6. '        
' → logprob: -8.836319923400879
    7. '<|end|>' → logprob: -8.836319923400879
    8. '           ' → logprob: -9.961319923400879
    9. ',' → logprob: -10.836319923400879
    10. '	for' → logprob: -11.211319923400879

Token 529: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37312620878219604
    2. ' for' → logprob: -1.7481262683868408
    3. 'for' → logprob: -1.9981262683868408
    4. '```' → logprob: -6.498126029968262
    5. '   ' → logprob: -8.748126029968262
    6. '        
' → logprob: -10.373126029968262
    7. '           ' → logprob: -11.373126029968262
    8. '
' → logprob: -11.623126029968262
    9. '	for' → logprob: -11.873126029968262
    10. '<|end|>' → logprob: -12.748126029968262

Token 530: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5824683904647827
    2. ' =' → logprob: -0.8324683904647827
    3. 'for' → logprob: -5.332468509674072
    4. ':' → logprob: -7.832468509674072
    5. '[' → logprob: -8.082468032836914
    6. '=True' → logprob: -8.332468032836914
    7. ' for' → logprob: -8.582468032836914
    8. '```' → logprob: -9.082468032836914
    9. '   ' → logprob: -9.457468032836914
    10. ',' → logprob: -9.957468032836914

Token 531: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.126929372549057
    2. 'True' → logprob: -2.12692928314209
    3. '   ' → logprob: -14.25192928314209
    4. '[' → logprob: -15.50192928314209
    5. '       ' → logprob: -15.62692928314209
    6. '=True' → logprob: -15.87692928314209
    7. ' [' → logprob: -16.251930236816406
    8. '(True' → logprob: -16.251930236816406
    9. ' =' → logprob: -18.626930236816406
    10. '[]' → logprob: -18.876930236816406

Token 532: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8136998414993286
    2. '       ' → logprob: -0.8136998414993286
    3. '<|end|>' → logprob: -3.063699722290039
    4. '  
' → logprob: -3.813699722290039
    5. ' for' → logprob: -4.563699722290039
    6. '        
' → logprob: -4.563699722290039
    7. '```' → logprob: -4.938699722290039
    8. 'for' → logprob: -5.438699722290039
    9. ',' → logprob: -5.938699722290039
    10. '    
' → logprob: -6.438699722290039

Token 533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10255762934684753
    2. '
' → logprob: -2.72755765914917
    3. '```' → logprob: -4.60255765914917
    4. ' for' → logprob: -4.72755765914917
    5. 'for' → logprob: -5.72755765914917
    6. '  
' → logprob: -5.85255765914917
    7. '   ' → logprob: -6.35255765914917
    8. '        
' → logprob: -6.35255765914917
    9. '<|end|>' → logprob: -6.60255765914917
    10. '[' → logprob: -7.60255765914917

Token 534: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6151787638664246
    2. ' for' → logprob: -0.8651787638664246
    3. 'for' (adapté à ' for') → logprob: -3.7401788234710693
    4. '
' → logprob: -4.36517858505249
    5. '```' → logprob: -6.74017858505249
    6. '   ' → logprob: -7.86517858505249
    7. '        
' → logprob: -8.615179061889648
    8. '<|end|>' → logprob: -8.865179061889648
    9. ' 
' → logprob: -10.490179061889648
    10. '  
' → logprob: -10.990179061889648

Token 535: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06196846812963486
    2. ' i' → logprob: -2.8119685649871826
    3. '   ' → logprob: -15.061968803405762
    4. ' ' → logprob: -15.436968803405762
    5. '	i' → logprob: -15.811968803405762
    6. '```' → logprob: -16.061967849731445
    7. '_i' → logprob: -16.936967849731445
    8. '(i' → logprob: -17.686967849731445
    9. '
' → logprob: -17.686967849731445
    10. '[i' → logprob: -18.186967849731445

Token 536: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029763570055365562
    2. 'in' → logprob: -3.5297634601593018
    3. ' ' → logprob: -12.654763221740723
    4. '   ' → logprob: -13.529763221740723
    5. 'range' → logprob: -13.529763221740723
    6. ',' → logprob: -13.904763221740723
    7. '	in' → logprob: -14.029763221740723
    8. '0' → logprob: -14.154763221740723
    9. '[' → logprob: -14.404763221740723
    10. 'In' → logprob: -14.529763221740723

Token 537: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006715370807796717
    2. ' range' → logprob: -5.006715297698975
    3. '(range' → logprob: -17.256715774536133
    4. '   ' → logprob: -17.381715774536133
    5. ' ' → logprob: -18.881715774536133
    6. '0' → logprob: -20.381715774536133
    7. '	range' → logprob: -20.506715774536133
    8. '```' → logprob: -21.006715774536133
    9. '  ' → logprob: -21.506715774536133
    10. '
' → logprob: -21.631715774536133

Token 538: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02339327335357666
    2. 'n' → logprob: -3.773393154144287
    3. ' n' → logprob: -9.898393630981445
    4. '1' → logprob: -10.273393630981445
    5. ' (' → logprob: -10.523393630981445
    6. '(' → logprob: -11.023393630981445
    7. '0' → logprob: -11.148393630981445
    8. '   ' → logprob: -13.523393630981445
    9. '
' → logprob: -13.648393630981445
    10. '	n' → logprob: -14.023393630981445

Token 539: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012701898231171072
    2. ' +' → logprob: -9.000126838684082
    3. '):
' → logprob: -13.500126838684082
    4. '1' → logprob: -14.375126838684082
    5. '+
' → logprob: -14.375126838684082
    6. ')+' → logprob: -14.875126838684082
    7. '   ' → logprob: -15.000126838684082
    8. '
' → logprob: -16.6251277923584
    9. '):' → logprob: -16.7501277923584
    10. '```' → logprob: -17.1251277923584

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. '
' → logprob: -12.000019073486328
    3. 'n' → logprob: -12.500019073486328
    4. '+' → logprob: -12.750019073486328
    5. '```' → logprob: -13.000019073486328
    6. ' ' → logprob: -13.500019073486328
    7. '   ' → logprob: -14.375019073486328
    8. ')' → logprob: -14.625019073486328
    9. '(n' → logprob: -15.125019073486328
    10. '2' → logprob: -15.187519073486328

Token 541: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.001968839205801487
    2. '):' → logprob: -6.626968860626221
    3. ':
' → logprob: -8.251968383789062
    4. ':' → logprob: -9.001968383789062
    5. '   ' → logprob: -9.001968383789062
    6. '       ' → logprob: -9.751968383789062
    7. '+' → logprob: -9.876968383789062
    8. '):
' → logprob: -11.876968383789062
    9. ',' → logprob: -12.126968383789062
    10. ')' → logprob: -12.251968383789062

Token 542: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26961401104927063
    2. '   ' → logprob: -1.8946139812469482
    3. ' for' → logprob: -2.7696139812469482
    4. '<|end|>' → logprob: -3.8946139812469482
    5. '           ' → logprob: -6.894614219665527
    6. '	for' → logprob: -8.269614219665527
    7. '```' → logprob: -8.269614219665527
    8. ' ' → logprob: -8.394614219665527
    9. '<|end|>' → logprob: -8.394614219665527
    10. ',' → logprob: -8.519614219665527

Token 543: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15235170722007751
    2. '   ' → logprob: -2.0273516178131104
    3. 'for' (adapté à ' for') → logprob: -4.6523518562316895
    4. '       ' → logprob: -9.652351379394531
    5. ' ' → logprob: -11.027351379394531
    6. '	for' → logprob: -11.902351379394531
    7. '```' → logprob: -13.652351379394531
    8. '           ' → logprob: -14.027351379394531
    9. '   ' → logprob: -15.027351379394531
    10. '    
' → logprob: -15.277351379394531

Token 544: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0037981770001351833
    2. 'range' → logprob: -6.253798007965088
    3. ' j' → logprob: -6.378798007965088
    4. ' range' → logprob: -8.753798484802246
    5. '0' → logprob: -12.253798484802246
    6. 'n' → logprob: -12.878798484802246
    7. 'i' → logprob: -13.003798484802246
    8. '_j' → logprob: -13.253798484802246
    9. '   ' → logprob: -14.503798484802246
    10. '```' → logprob: -15.003798484802246

Token 545: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16036924719810486
    2. 'in' → logprob: -1.9103692770004272
    3. '(' → logprob: -9.285368919372559
    4. ')' → logprob: -11.285368919372559
    5. 'range' → logprob: -11.910368919372559
    6. ',' → logprob: -12.035368919372559
    7. ' (' → logprob: -12.160368919372559
    8. ' ' → logprob: -12.535368919372559
    9. '(in' → logprob: -12.660368919372559
    10. '(i' → logprob: -12.910368919372559

Token 546: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859180003404617
    2. ' range' → logprob: -3.0485918521881104
    3. '(range' → logprob: -12.548591613769531
    4. 'n' → logprob: -14.798591613769531
    5. '(n' → logprob: -14.798591613769531
    6. 'in' → logprob: -16.29859161376953
    7. '   ' → logprob: -16.79859161376953
    8. ' ' → logprob: -17.17359161376953
    9. 'i' → logprob: -18.17359161376953
    10. 'r' → logprob: -18.54859161376953

Token 547: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.040398187935352325
    2. '(i' → logprob: -3.290398120880127
    3. 'n' → logprob: -7.040398120880127
    4. 'i' → logprob: -7.540398120880127
    5. 'range' → logprob: -7.665398120880127
    6. ' (' → logprob: -7.915398120880127
    7. ' range' → logprob: -9.665398597717285
    8. '(' → logprob: -10.790398597717285
    9. ' i' → logprob: -11.290398597717285
    10. ' n' → logprob: -11.540398597717285

Token 548: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.650518920039758e-06
    2. '+i' → logprob: -13.500003814697266
    3. ' +' → logprob: -13.750003814697266
    4. '1' → logprob: -14.875003814697266
    5. ')+' → logprob: -15.125003814697266
    6. '+
' → logprob: -15.375003814697266
    7. '+j' → logprob: -16.125003814697266
    8. '()+' → logprob: -17.125003814697266
    9. '```' → logprob: -17.625003814697266
    10. '＋' → logprob: -17.750003814697266

Token 549: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. '+' → logprob: -10.875021934509277
    3. 'i' → logprob: -13.125021934509277
    4. '```' → logprob: -14.875021934509277
    5. 'n' → logprob: -15.500021934509277
    6. ' ' → logprob: -15.500021934509277
    7. ')' → logprob: -15.500021934509277
    8. 'j' → logprob: -16.125022888183594
    9. '
' → logprob: -16.500022888183594
    10. 'range' → logprob: -16.625022888183594

Token 550: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02408117614686489
    2. '):' → logprob: -3.774081230163574
    3. ':' → logprob: -8.899081230163574
    4. '               ' → logprob: -8.899081230163574
    5. '           ' → logprob: -9.024081230163574
    6. ',' → logprob: -9.149081230163574
    7. ')' → logprob: -9.149081230163574
    8. ':
' → logprob: -9.274081230163574
    9. '                   ' → logprob: -10.524081230163574
    10. '):
' → logprob: -11.149081230163574

Token 551: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022332146763801575
    2. ' if' → logprob: -4.897332191467285
    3. '                           ' → logprob: -5.022332191467285
    4. '                               ' → logprob: -5.772332191467285
    5. '                       ' → logprob: -6.147332191467285
    6. '                   ' → logprob: -6.272332191467285
    7. 'if' → logprob: -8.397332191467285
    8. '           ' → logprob: -8.522332191467285
    9. '```' → logprob: -8.647332191467285
    10. '<|end|>' → logprob: -9.772332191467285

Token 552: ' if' (ID: 538)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3958497941493988
    2. ' if' → logprob: -1.7708498239517212
    3. '               ' → logprob: -2.7708497047424316
    4. '                   ' → logprob: -3.0208497047424316
    5. 'dist' → logprob: -3.2708497047424316
    6. '                           ' → logprob: -5.895849704742432
    7. 'if' (adapté à ' if') → logprob: -6.520849704742432
    8. '           ' → logprob: -6.645849704742432
    9. '                       ' → logprob: -7.645849704742432
    10. '                               ' → logprob: -8.52085018157959

Token 553: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3700973689556122
    2. 'visited' → logprob: -1.7450973987579346
    3. ' i' → logprob: -2.6200973987579346
    4. 'dist' → logprob: -3.1200973987579346
    5. ' visited' → logprob: -5.1200971603393555
    6. 'possible' → logprob: -5.6200971603393555
    7. ' dist' → logprob: -5.9950971603393555
    8. 'points' → logprob: -6.1200971603393555
    9. ' points' → logprob: -6.3700971603393555
    10. '   ' → logprob: -7.3700971603393555

Token 554: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4139988422393799
    2. ' ==' → logprob: -1.5389988422393799
    3. '!=' → logprob: -2.78899884223938
    4. '==' → logprob: -2.78899884223938
    5. '[' → logprob: -7.413998603820801
    6. ' <=' → logprob: -7.663998603820801
    7. '<=' → logprob: -8.4139986038208
    8. '   ' → logprob: -10.6639986038208
    9. '[i' → logprob: -10.6639986038208
    10. ' <' → logprob: -11.4139986038208

Token 555: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.703443770878948e-06
    2. ' j' → logprob: -11.875007629394531
    3. '0' → logprob: -15.500007629394531
    4. '	j' → logprob: -16.25000762939453
    5. 'i' → logprob: -16.37500762939453
    6. '   ' → logprob: -16.50000762939453
    7. ' ' → logprob: -16.50000762939453
    8. '```' → logprob: -18.87500762939453
    9. '    ' → logprob: -19.12500762939453
    10. '  ' → logprob: -19.87500762939453

Token 556: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2470192015171051
    2. ':
' → logprob: -1.9970191717147827
    3. ' or' → logprob: -2.7470192909240723
    4. 'continue' → logprob: -4.872019290924072
    5. ' continue' → logprob: -5.622019290924072
    6. '               ' → logprob: -6.247019290924072
    7. ':return' → logprob: -6.247019290924072
    8. 'or' → logprob: -6.372019290924072
    9. '                   ' → logprob: -6.747019290924072
    10. '           ' → logprob: -8.247018814086914

Token 557: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01617642119526863
    2. ' or' → logprob: -4.641176223754883
    3. '               ' → logprob: -5.891176223754883
    4. ':' → logprob: -6.516176223754883
    5. '                       ' → logprob: -6.516176223754883
    6. 'continue' → logprob: -8.391176223754883
    7. '   ' → logprob: -9.141176223754883
    8. ':
' → logprob: -9.266176223754883
    9. ' continue' → logprob: -9.516176223754883
    10. '           ' → logprob: -10.141176223754883

Token 558: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.20221202075481415
    2. ' dist' → logprob: -1.7022119760513306
    3. '                   ' → logprob: -7.702211856842041
    4. '	dist' → logprob: -8.8272123336792
    5. '                       ' → logprob: -9.8272123336792
    6. '0' → logprob: -9.8272123336792
    7. '.dist' → logprob: -10.0772123336792
    8. '_dist' → logprob: -10.5772123336792
    9. '               ' → logprob: -11.4522123336792
    10. '(dist' → logprob: -11.8272123336792

Token 559: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -11.62501049041748
    3. '[I' → logprob: -14.00001049041748
    4. ' [' → logprob: -14.62501049041748
    5. '[j' → logprob: -15.87501049041748
    6. '[ii' → logprob: -17.500009536743164
    7. '[
' → logprob: -17.750009536743164
    8. '[u' → logprob: -18.625009536743164
    9. '\[' → logprob: -19.125009536743164
    10. '[][' → logprob: -19.250009536743164

Token 560: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00882161408662796
    2. '[i' → logprob: -4.758821487426758
    3. ']' → logprob: -8.758821487426758
    4. '[' → logprob: -11.133821487426758
    5. ']==' → logprob: -11.258821487426758
    6. ']=' → logprob: -11.508821487426758
    7. '[j' → logprob: -12.508821487426758
    8. '][]' → logprob: -13.258821487426758
    9. ' ][' → logprob: -13.508821487426758
    10. '[I' → logprob: -13.508821487426758

Token 561: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.65707261255011e-06
    2. 'i' → logprob: -11.875008583068848
    3. '0' → logprob: -13.750008583068848
    4. ' j' → logprob: -14.625008583068848
    5. ']' → logprob: -15.875008583068848
    6. '```' → logprob: -17.625009536743164
    7. '	j' → logprob: -18.375009536743164
    8. ' ' → logprob: -19.500009536743164
    9. '   ' → logprob: -19.500009536743164
    10. '
' → logprob: -19.500009536743164

Token 562: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4070177972316742
    2. ']' → logprob: -1.9070178270339966
    3. ']=' → logprob: -2.032017707824707
    4. ' =' → logprob: -2.907017707824707
    5. '0' → logprob: -10.032017707824707
    6. ']==' → logprob: -10.407017707824707
    7. '[' → logprob: -11.032017707824707
    8. ')=' → logprob: -11.407017707824707
    9. ')' → logprob: -11.657017707824707
    10. '==' → logprob: -12.032017707824707

Token 563: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '0' → logprob: -17.503177642822266
    4. ']=' → logprob: -18.128177642822266
    5. '=
' → logprob: -18.378177642822266
    6. ')=' → logprob: -18.628177642822266
    7. '[' → logprob: -18.628177642822266
    8. '=int' → logprob: -19.003177642822266
    9. ',' → logprob: -19.128177642822266
    10. '.=' → logprob: -19.253177642822266

Token 564: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۰' → logprob: -20.75
    4. '   ' → logprob: -21.125
    5. '00' → logprob: -21.75
    6. '０' → logprob: -22.25
    7. '000' → logprob: -22.5
    8. '```' → logprob: -22.5
    9. ' ' → logprob: -23.125
    10. '`' → logprob: -23.75

Token 565: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '۰' → logprob: -21.625
    4. '０' → logprob: -23.0
    5. '   ' → logprob: -23.375
    6. '00' → logprob: -23.5
    7. '000' → logprob: -24.0
    8. '০' → logprob: -24.875
    9. '```' → logprob: -25.0
    10. '०' → logprob: -25.375

Token 566: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006446900311857462
    2. 'else' → logprob: -5.881446838378906
    3. ' else' → logprob: -6.131446838378906
    4. '<|end|>' → logprob: -7.006446838378906
    5. '                   ' → logprob: -8.381446838378906
    6. 'elif' → logprob: -9.006446838378906
    7. '           ' → logprob: -9.631446838378906
    8. '                ' → logprob: -10.756446838378906
    9. '                       ' → logprob: -11.006446838378906
    10. '
' → logprob: -11.131446838378906

Token 567: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029646115377545357
    2. ' else' → logprob: -4.029645919799805
    3. 'else' → logprob: -5.029645919799805
    4. '<|end|>' → logprob: -6.029645919799805
    5. '
' → logprob: -6.779645919799805
    6. '                   ' → logprob: -7.404645919799805
    7. '           ' → logprob: -9.279645919799805
    8. 'elif' → logprob: -9.279645919799805
    9. '```' → logprob: -9.279645919799805
    10. ' elif' → logprob: -9.404645919799805

Token 568: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8598282337188721
    2. 'else' (adapté à ' else') → logprob: -1.234828233718872
    3. ' else' → logprob: -1.984828233718872
    4. 'elif' → logprob: -2.484828233718872
    5. ' elif' → logprob: -2.734828233718872
    6. '           ' → logprob: -9.234827995300293
    7. ' ' → logprob: -10.484827995300293
    8. '                   ' → logprob: -10.484827995300293
    9. '   ' → logprob: -10.484827995300293
    10. ' ' → logprob: -10.859827995300293

Token 569: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.665158748626709
    2. ':
' → logprob: -1.415158748626709
    3. '                   ' → logprob: -2.165158748626709
    4. ':' → logprob: -2.915158748626709
    5. ' and' → logprob: -3.165158748626709
    6. '                           ' → logprob: -4.290158748626709
    7. '               ' → logprob: -5.040158748626709
    8. '                       ' → logprob: -5.165158748626709
    9. 'if' → logprob: -6.040158748626709
    10. '           ' → logprob: -7.165158748626709

Token 570: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7410228252410889
    2. 'visited' → logprob: -1.7410228252410889
    3. 'dist' → logprob: -2.116022825241089
    4. ' if' → logprob: -2.616022825241089
    5. ' visited' → logprob: -2.616022825241089
    6. ' dist' → logprob: -3.116022825241089
    7. 'if' → logprob: -4.116023063659668
    8. 'distance' → logprob: -5.241023063659668
    9. '               ' → logprob: -5.491023063659668
    10. '   ' → logprob: -5.741023063659668

Token 571: ' py' (ID: 13104)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17399145662784576
    2. ' dist' → logprob: -2.4239914417266846
    3. 'visited' → logprob: -3.4239914417266846
    4. 'd' → logprob: -3.5489914417266846
    5. '                   ' → logprob: -5.923991680145264
    6. 'distance' → logprob: -6.423991680145264
    7. ' d' → logprob: -6.548991680145264
    8. ' visited' → logprob: -6.798991680145264
    9. 'if' → logprob: -7.048991680145264
    10. 'val' → logprob: -7.173991680145264

Token 572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42544814944267273
    2. 'y' → logprob: -2.425448179244995
    3. ' =' → logprob: -2.675448179244995
    4. '=' → logprob: -2.675448179244995
    5. ',y' → logprob: -3.925448179244995
    6. 'oints' → logprob: -4.175447940826416
    7. '[y' → logprob: -4.175447940826416
    8. 's' → logprob: -4.425447940826416
    9. '][' → logprob: -4.800447940826416
    10. 'os' → logprob: -4.800447940826416

Token 573: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.2612603008747101
    2. ' px' → logprob: -1.5112602710723877
    3. 'points' → logprob: -4.886260509490967
    4. ' points' → logprob: -7.136260509490967
    5. ',' → logprob: -8.511260032653809
    6. 'p' → logprob: -8.511260032653809
    7. 'qx' → logprob: -8.511260032653809
    8. 'x' → logprob: -9.386260032653809
    9. '=' → logprob: -9.886260032653809
    10. '_px' → logprob: -10.136260032653809

Token 574: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. ',' → logprob: -15.25192928314209
    4. ' ' → logprob: -16.626930236816406
    5. ')' → logprob: -17.626930236816406
    6. ')=' → logprob: -17.626930236816406
    7. ']=' → logprob: -17.626930236816406
    8. '=p' → logprob: -17.626930236816406
    9. '=

' → logprob: -17.626930236816406
    10. '=user' → logprob: -18.126930236816406

Token 575: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2014172375202179
    2. ' points' → logprob: -1.7014172077178955
    3. 'visited' → logprob: -13.701416969299316
    4. '	points' → logprob: -13.701416969299316
    5. '(points' → logprob: -13.951416969299316
    6. 'point' → logprob: -15.326416969299316
    7. '   ' → logprob: -16.326417922973633
    8. 'positions' → logprob: -16.701417922973633
    9. 'Points' → logprob: -16.826417922973633
    10. ' pontos' → logprob: -16.826417922973633

Token 576: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.06245261803269386
    2. '[i' → logprob: -2.812452554702759
    3. 'j' → logprob: -8.06245231628418
    4. '[' → logprob: -8.81245231628418
    5. 'i' → logprob: -11.56245231628418
    6. '[p' → logprob: -13.18745231628418
    7. '[
' → logprob: -13.31245231628418
    8. '```' → logprob: -13.43745231628418
    9. ' [' → logprob: -13.68745231628418
    10. '=j' → logprob: -14.06245231628418

Token 577: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0801769271492958
    2. ']
' → logprob: -2.580176830291748
    3. '[' → logprob: -7.330176830291748
    4. ')' → logprob: -8.080177307128906
    5. '][' → logprob: -9.205177307128906
    6. '<|end|>' → logprob: -10.080177307128906
    7. ')]' → logprob: -10.580177307128906
    8. '[
' → logprob: -10.705177307128906
    9. ']
' → logprob: -10.830177307128906
    10. '```' → logprob: -11.080177307128906

Token 578: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018370352685451508
    2. ' visited' → logprob: -5.018370151519775
    3. ' =' → logprob: -5.393370151519775
    4. 'visited' → logprob: -6.018370151519775
    5. ',' → logprob: -6.643370151519775
    6. ' if' → logprob: -7.518370151519775
    7. 'dist' → logprob: -7.518370151519775
    8. '```' → logprob: -7.893370151519775
    9. '=' → logprob: -8.143370628356934
    10. '               ' → logprob: -8.143370628356934

Token 579: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.4359907805919647
    2. 'dist' (adapté à ' dist') → logprob: -1.060990810394287
    3. 'visited' → logprob: -5.435990810394287
    4. ' visited' → logprob: -6.685990810394287
    5. '                   ' → logprob: -7.060990810394287
    6. ' if' → logprob: -7.685990810394287
    7. 'if' → logprob: -9.060990333557129
    8. 'd' → logprob: -9.685990333557129
    9. 'distance' → logprob: -9.810990333557129
    10. '```' → logprob: -10.685990333557129

Token 580: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.841743303695694e-05
    2. '[' → logprob: -9.37509822845459
    3. '[I' → logprob: -12.50009822845459
    4. ' [' → logprob: -12.75009822845459
    5. ')[' → logprob: -13.25009822845459
    6. '][' → logprob: -14.00009822845459
    7. '[s' → logprob: -14.25009822845459
    8. '[u' → logprob: -14.62509822845459
    9. '[
' → logprob: -14.75009822845459
    10. '=' → logprob: -15.00009822845459

Token 581: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013153550680726767
    2. '[i' → logprob: -6.751315116882324
    3. '[' → logprob: -9.376315116882324
    4. ']' → logprob: -10.251315116882324
    5. ' ][' → logprob: -11.001315116882324
    6. ']][' → logprob: -13.251315116882324
    7. '           ' → logprob: -14.376315116882324
    8. '                   ' → logprob: -14.501315116882324
    9. '[I' → logprob: -14.501315116882324
    10. '[j' → logprob: -14.501315116882324

Token 582: 'j' (ID: 73)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.001202850602567196
    2. 'px' → logprob: -7.8762030601501465
    3. 'i' → logprob: -8.376202583312988
    4. '][' → logprob: -9.126202583312988
    5. ' py' → logprob: -9.126202583312988
    6. 'visited' → logprob: -9.376202583312988
    7. '0' → logprob: -9.501202583312988
    8. 'j' → logprob: -10.126202583312988
    9. '(py' → logprob: -10.251202583312988
    10. '-' → logprob: -10.501202583312988

Token 583: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028191888704895973
    2. '=' → logprob: -4.028192043304443
    3. ']=' → logprob: -5.028192043304443
    4. ' ]' → logprob: -6.028192043304443
    5. ' =' → logprob: -6.903192043304443
    6. ')' → logprob: -10.778191566467285
    7. ')=' → logprob: -13.528191566467285
    8. '                   ' → logprob: -13.778191566467285
    9. '[' → logprob: -14.778191566467285
    10. '                           ' → logprob: -14.903191566467285

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132641315460205
    2. '=' → logprob: -1.3132641315460205
    3. '                   ' → logprob: -15.188263893127441
    4. '                    ' → logprob: -15.313263893127441
    5. ' =
' → logprob: -15.563263893127441
    6. '=int' → logprob: -15.563263893127441
    7. '=
' → logprob: -15.688263893127441
    8. '[' → logprob: -15.813263893127441
    9. ']' → logprob: -16.063264846801758
    10. ')' → logprob: -16.188264846801758

Token 585: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0005530327325686812
    2. ' visited' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.375553131103516
    4. 'visible' → logprob: -17.750553131103516
    5. '           ' → logprob: -18.750553131103516
    6. '       ' → logprob: -19.250553131103516
    7. '
' → logprob: -19.375553131103516
    8. 'vis' → logprob: -19.750553131103516
    9. 'seen' → logprob: -19.875553131103516
    10. '               ' → logprob: -20.000553131103516

Token 586: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.816093228830141e-06
    2. '[i' → logprob: -13.25000286102295
    3. '[_' → logprob: -14.25000286102295
    4. 'list' → logprob: -15.50000286102295
    5. '```' → logprob: -16.875001907348633
    6. '[y' → logprob: -17.875001907348633
    7. 'List' → logprob: -17.875001907348633
    8. '[' → logprob: -18.500001907348633
    9. '[pos' → logprob: -18.750001907348633
    10. '
' → logprob: -19.000001907348633

Token 587: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.375001907348633
    3. '[I' → logprob: -15.250001907348633
    4. '[j' → logprob: -15.375001907348633
    5. '```' → logprob: -17.500001907348633
    6. '[
' → logprob: -17.750001907348633
    7. ' [' → logprob: -18.125001907348633
    8. 'i' → logprob: -18.250001907348633
    9. '[s' → logprob: -18.750001907348633
    10. '[u' → logprob: -19.000001907348633

Token 588: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028095098678022623
    2. '][' → logprob: -5.877809524536133
    3. '
' → logprob: -13.252809524536133
    4. ' [' → logprob: -13.502809524536133
    5. ')[' → logprob: -15.002809524536133
    6. ']' → logprob: -15.627809524536133
    7. ' ][' → logprob: -15.627809524536133
    8. 'py' → logprob: -15.877809524536133
    9. '}[' → logprob: -16.127809524536133
    10. '[
' → logprob: -16.377809524536133

Token 589: 'py' (ID: 5823)
  Prédit: 'py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -4.320199877838604e-07
    2. '(py' → logprob: -15.375
    3. ' py' → logprob: -16.0
    4. 'px' → logprob: -16.875
    5. '_py' → logprob: -18.5
    6. 'Py' → logprob: -20.0
    7. 'p' → logprob: -20.25
    8. '[' → logprob: -20.25
    9. '
' → logprob: -20.625
    10. '   ' → logprob: -20.75

Token 590: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.933173426659778e-05
    2. '[' → logprob: -9.625069618225098
    3. ' ][' → logprob: -13.000069618225098
    4. ']' → logprob: -14.250069618225098
    5. ',' → logprob: -15.250069618225098
    6. 'px' → logprob: -17.12506866455078
    7. '[p' → logprob: -17.75006866455078
    8. '   ' → logprob: -17.87506866455078
    9. ']][' → logprob: -18.25006866455078
    10. '```' → logprob: -18.25006866455078

Token 591: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -5.264322317088954e-05
    2. ' px' → logprob: -9.875052452087402
    3. '(px' → logprob: -14.250052452087402
    4. '_px' → logprob: -15.250052452087402
    5. ':px' → logprob: -16.25005340576172
    6. 'Px' → logprob: -16.25005340576172
    7. '
' → logprob: -17.00005340576172
    8. 'p' → logprob: -18.12505340576172
    9. '   ' → logprob: -18.37505340576172
    10. '}px' → logprob: -18.62505340576172

Token 592: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28394994139671326
    2. '<|end|>' → logprob: -1.4089499711990356
    3. ' ]' → logprob: -6.283949851989746
    4. '<|end|>' → logprob: -7.658949851989746
    5. ']
' → logprob: -8.033949851989746
    6. ')' → logprob: -9.533949851989746
    7. ')]' → logprob: -11.533949851989746
    8. ']==' → logprob: -11.658949851989746
    9. '
' → logprob: -12.158949851989746
    10. ']>' → logprob: -12.283949851989746

Token 593: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013741609873250127
    2. '               ' → logprob: -7.001374244689941
    3. '<|end|>' → logprob: -8.626374244689941
    4. '
' → logprob: -8.876374244689941
    5. '           ' → logprob: -9.501374244689941
    6. '                           ' → logprob: -11.376374244689941
    7. '                    
' → logprob: -11.376374244689941
    8. '```' → logprob: -11.876374244689941
    9. '		           ' → logprob: -12.126374244689941
    10. '<|end|>' → logprob: -12.501374244689941

Token 594: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.824579784530215e-05
    2. '           ' → logprob: -10.6250581741333
    3. '               ' → logprob: -11.0000581741333
    4. 'if' (adapté à ' if') → logprob: -11.8750581741333
    5. ' if' → logprob: -12.5000581741333
    6. '		           ' → logprob: -13.8750581741333
    7. '                       ' → logprob: -14.0000581741333
    8. '                  ' → logprob: -14.0000581741333
    9. '       ' → logprob: -14.1250581741333
    10. '				' → logprob: -14.3750581741333

Token 595: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.029786596074700356
    2. ' dist' → logprob: -3.5297865867614746
    3. '                           ' → logprob: -10.529787063598633
    4. '                   ' → logprob: -12.279787063598633
    5. '	dist' → logprob: -12.654787063598633
    6. '(dist' → logprob: -14.529787063598633
    7. '                       ' → logprob: -14.654787063598633
    8. '   ' → logprob: -15.904787063598633
    9. '                               ' → logprob: -16.279787063598633
    10. '                                   ' → logprob: -16.279787063598633

Token 596: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.375012397766113
    3. '```' → logprob: -15.375012397766113
    4. '[I' → logprob: -15.500012397766113
    5. 'i' → logprob: -16.375011444091797
    6. ' [' → logprob: -16.875011444091797
    7. '[user' → logprob: -17.000011444091797
    8. '[j' → logprob: -17.875011444091797
    9. '[
' → logprob: -18.000011444091797
    10. '[s' → logprob: -18.250011444091797

Token 597: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.380904672667384e-05
    2. '[' → logprob: -10.500033378601074
    3. 'i' → logprob: -13.125033378601074
    4. '[I' → logprob: -13.875033378601074
    5. '[j' → logprob: -14.000033378601074
    6. '```' → logprob: -14.250033378601074
    7. ' [' → logprob: -14.750033378601074
    8. '][' → logprob: -14.875033378601074
    9. ')[' → logprob: -15.625033378601074
    10. '[
' → logprob: -15.875033378601074

Token 598: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008459731936454773
    2. 'j' → logprob: -4.883459568023682
    3. '[i' → logprob: -7.133459568023682
    4. '[' → logprob: -10.63346004486084
    5. '[j' → logprob: -11.38346004486084
    6. '```' → logprob: -12.00846004486084
    7. '][' → logprob: -12.13346004486084
    8. ' i' → logprob: -12.63346004486084
    9. '-' → logprob: -13.00846004486084
    10. 'dist' → logprob: -14.13346004486084

Token 599: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04607762396335602
    2. '==' → logprob: -3.1710777282714844
    3. '==-' → logprob: -5.921077728271484
    4. ']==' → logprob: -8.421077728271484
    5. ')==' → logprob: -9.171077728271484
    6. ')' → logprob: -10.296077728271484
    7. ' ' → logprob: -10.921077728271484
    8. ']' → logprob: -11.921077728271484
    9. '```' → logprob: -13.171077728271484
    10. ' <' → logprob: -13.921077728271484

Token 600: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20850315690040588
    2. '==' → logprob: -1.7085031270980835
    3. '==-' → logprob: -4.958503246307373
    4. ' ' → logprob: -10.958502769470215
    5. ']==' → logprob: -12.208502769470215
    6. '<' → logprob: -12.208502769470215
    7. '==
' → logprob: -12.333502769470215
    8. ')==' → logprob: -12.708502769470215
    9. '```' → logprob: -13.458502769470215
    10. ' <' → logprob: -13.958502769470215

Token 601: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020425561524461955
    2. ' -' → logprob: -8.500204086303711
    3. '                   ' → logprob: -14.250204086303711
    4. '   ' → logprob: -16.75020408630371
    5. '           ' → logprob: -17.62520408630371
    6. '               ' → logprob: -18.00020408630371
    7. ' ' → logprob: -18.00020408630371
    8. '                       ' → logprob: -18.25020408630371
    9. '```' → logprob: -19.12520408630371
    10. '                           ' → logprob: -20.00020408630371

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '<|end|>' → logprob: -16.875001907348633
    5. '                   ' → logprob: -16.937501907348633
    6. '
' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.062501907348633
    8. '``' → logprob: -17.937501907348633
    9. '                                           ' → logprob: -18.062501907348633
    10. '2' → logprob: -18.187501907348633

Token 603: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13343891501426697
    2. '                       ' → logprob: -2.2584388256073
    3. ':' → logprob: -4.133439064025879
    4. '                           ' → logprob: -5.758439064025879
    5. '                   ' → logprob: -7.258439064025879
    6. '                               ' → logprob: -8.633439064025879
    7. '               ' → logprob: -9.133439064025879
    8. '):
' → logprob: -9.508439064025879
    9. '           ' → logprob: -10.383439064025879
    10. ' and' → logprob: -10.508439064025879

Token 604: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11843467503786087
    2. '(j' → logprob: -2.7434346675872803
    3. 'i' → logprob: -4.368434906005859
    4. '(i' → logprob: -4.618434906005859
    5. 'room' → logprob: -5.243434906005859
    6. 'points' → logprob: -5.243434906005859
    7. '(points' → logprob: -5.368434906005859
    8. '(room' → logprob: -5.743434906005859
    9. ' j' → logprob: -6.368434906005859
    10. '(' → logprob: -6.868434906005859

Token 605: ' !=' (ID: 1666)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0200371742248535
    2. '!=' → logprob: -1.1450371742248535
    3. ' !=' → logprob: -1.3950371742248535
    4. '>' → logprob: -2.8950371742248535
    5. ' >' → logprob: -4.8950371742248535
    6. ' in' → logprob: -5.3950371742248535
    7. 'not' → logprob: -5.7700371742248535
    8. ' <' → logprob: -6.8950371742248535
    9. '<' → logprob: -8.020036697387695
    10. ')' → logprob: -8.270036697387695

Token 606: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04866151511669159
    2. 'i' → logprob: -3.048661470413208
    3. ' ' → logprob: -10.048661231994629
    4. ' i' → logprob: -10.423661231994629
    5. '   ' → logprob: -14.923661231994629
    6. '  ' → logprob: -15.548661231994629
    7. 'j' → logprob: -16.548662185668945
    8. ')' → logprob: -16.923662185668945
    9. '```' → logprob: -16.923662185668945
    10. '
' → logprob: -17.048662185668945

Token 607: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014571875333786
    2. 'i' → logprob: -1.701457142829895
    3. ' i' → logprob: -10.701457023620605
    4. ' ' → logprob: -10.951457023620605
    5. '
' → logprob: -14.138957023620605
    6. 'j' → logprob: -14.576457023620605
    7. '   ' → logprob: -15.076457023620605
    8. ''i' → logprob: -15.326457023620605
    9. '```' → logprob: -15.451457023620605
    10. '  ' → logprob: -15.701457023620605

Token 608: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.180250346660614
    2. ':' → logprob: -1.8052504062652588
    3. '                       ' → logprob: -8.30525016784668
    4. '):
' → logprob: -9.80525016784668
    5. '                           ' → logprob: -9.80525016784668
    6. ' and' → logprob: -10.05525016784668
    7. '                   ' → logprob: -10.43025016784668
    8. ':

' → logprob: -10.55525016784668
    9. ' :
' → logprob: -11.93025016784668
    10. 'and' → logprob: -12.30525016784668

Token 609: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00037919526221230626
    2. '                           ' → logprob: -9.25037956237793
    3. '       ' → logprob: -9.50037956237793
    4. '                        
' → logprob: -9.50037956237793
    5. '                   ' → logprob: -10.12537956237793
    6. '   ' → logprob: -10.87537956237793
    7. '           ' → logprob: -11.00037956237793
    8. '               ' → logprob: -11.50037956237793
    9. ':
' → logprob: -11.62537956237793
    10. ',' → logprob: -12.00037956237793

Token 610: ' #' (ID: 1069)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.38758260011672974
    2. 'possible' → logprob: -1.137582540512085
    3. '   ' → logprob: -8.262582778930664
    4. '                           ' → logprob: -8.387582778930664
    5. '           ' → logprob: -9.012582778930664
    6. '                       ' → logprob: -10.262582778930664
    7. '                   ' → logprob: -10.887582778930664
    8. '                               ' → logprob: -11.262582778930664
    9. '_possible' → logprob: -11.887582778930664
    10. ' posible' → logprob: -12.012582778930664

Token 611: ' If' (ID: 1843)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0040793512016534805
    2. ' possible' → logprob: -5.504079341888428
    3. '
' → logprob: -15.129079818725586
    4. 'Possible' → logprob: -15.379079818725586
    5. '                   ' → logprob: -16.129079818725586
    6. '                       ' → logprob: -16.129079818725586
    7. '```' → logprob: -17.004079818725586
    8. '_possible' → logprob: -17.129079818725586
    9. '           ' → logprob: -17.254079818725586
    10. '   ' → logprob: -17.879079818725586

Token 612: ' any' (ID: 1062)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07090692222118378
    2. 'possible' → logprob: -3.5709068775177
    3. ' possible' → logprob: -3.6959068775177
    4. 'not' → logprob: -4.320907115936279
    5. 'dist' → logprob: -6.695907115936279
    6. ' dist' → logprob: -7.070907115936279
    7. 'False' → logprob: -9.820906639099121
    8. ' False' → logprob: -10.945906639099121
    9. ' impossible' → logprob: -11.195906639099121
    10. ' True' → logprob: -12.195906639099121

Token 613: ' dirty' (ID: 32042)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2413555383682251
    2. 'point' → logprob: -2.8663554191589355
    3. 'dirty' → logprob: -3.4913554191589355
    4. ' point' → logprob: -3.6163554191589355
    5. ' dirty' → logprob: -3.7413554191589355
    6. ' dist' → logprob: -3.8663554191589355
    7. 'tile' → logprob: -3.9913554191589355
    8. 'distance' → logprob: -4.2413554191589355
    9. ' tile' → logprob: -5.9913554191589355
    10. '#' → logprob: -5.9913554191589355

Token 614: ' tile' (ID: 17664)
  Prédit: 'tile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tile' → logprob: -0.38847365975379944
    2. ' tile' → logprob: -1.138473629951477
    3. '_positions' → logprob: -6.6384735107421875
    4. '```' → logprob: -9.513473510742188
    5. '_position' → logprob: -10.138473510742188
    6. '_tiles' → logprob: -10.388473510742188
    7. '
' → logprob: -10.388473510742188
    8. ')' → logprob: -10.638473510742188
    9. 'position' → logprob: -10.763473510742188
    10. '_' → logprob: -11.138473510742188

Token 615: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9870529174804688
    2. ' cannot' → logprob: -1.2370529174804688
    3. 'cannot' → logprob: -1.2370529174804688
    4. ' can't' → logprob: -3.7370529174804688
    5. 'is' → logprob: -4.612052917480469
    6. 'can't' → logprob: -5.237052917480469
    7. '```' → logprob: -5.612052917480469
    8. '                           ' → logprob: -6.987052917480469
    9. ' position' → logprob: -7.237052917480469
    10. '                       ' → logprob: -7.362052917480469

Token 616: ' unreachable' (ID: 171303)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.41052761673927307
    2. 'un' → logprob: -1.4105275869369507
    3. ' not' → logprob: -3.0355277061462402
    4. ' unreachable' → logprob: -3.1605277061462402
    5. 'in' → logprob: -6.28552770614624
    6. ' inaccessible' → logprob: -8.160527229309082
    7. '#' → logprob: -10.785527229309082
    8. 'reachable' → logprob: -10.785527229309082
    9. 'cannot' → logprob: -11.660527229309082
    10. 'unable' → logprob: -11.660527229309082

Token 617: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11353065073490143
    2. '                           ' → logprob: -2.4885306358337402
    3. '                       ' → logprob: -4.36353063583374
    4. ':
' → logprob: -4.98853063583374
    5. ',
' → logprob: -6.11353063583374
    6. ':' → logprob: -6.86353063583374
    7. ' from' → logprob: -6.98853063583374
    8. 'from' → logprob: -8.613531112670898
    9. ' by' → logprob: -9.613531112670898
    10. '                               ' → logprob: -9.738531112670898

Token 618: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22587285935878754
    2. ' i' → logprob: -1.6008728742599487
    3. '```' → logprob: -8.975872993469238
    4. ' the' → logprob: -9.475872993469238
    5. 'robot' → logprob: -9.725872993469238
    6. ' robot' → logprob: -10.100872993469238
    7. 'the' → logprob: -10.475872993469238
    8. '
' → logprob: -10.600872993469238
    9. ')' → logprob: -11.225872993469238
    10. ' any' → logprob: -11.475872993469238

Token 619: ' point' (ID: 2438)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' → logprob: -1.3380860090255737
    2. 'robot' → logprob: -1.4630860090255737
    3. 'clean' → logprob: -1.4630860090255737
    4. 'point' → logprob: -2.7130861282348633
    5. 'dirty' → logprob: -2.7130861282348633
    6. ' previous' → logprob: -3.2130861282348633
    7. ' robot' → logprob: -3.8380861282348633
    8. 'starting' → logprob: -3.9630861282348633
    9. ' point' → logprob: -4.338086128234863
    10. ' starting' → logprob: -5.088086128234863

Token 620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49281176924705505
    2. '                       ' → logprob: -0.9928117990493774
    3. '                           ' → logprob: -4.742811679840088
    4. '                   ' → logprob: -5.492811679840088
    5. ':' → logprob: -6.492811679840088
    6. ',
' → logprob: -7.492811679840088
    7. ':
' → logprob: -7.492811679840088
    8. '               ' → logprob: -7.617811679840088
    9. ')' → logprob: -7.867811679840088
    10. ' ,' → logprob: -8.242812156677246

Token 621: ' problem' (ID: 4792)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.2622469365596771
    2. ' possible' → logprob: -1.5122469663619995
    3. '                           ' → logprob: -4.762247085571289
    4. '                       ' → logprob: -6.512247085571289
    5. '   ' → logprob: -9.387247085571289
    6. '           ' → logprob: -9.637247085571289
    7. '                               ' → logprob: -10.637247085571289
    8. '_possible' → logprob: -10.762247085571289
    9. '```' → logprob: -11.762247085571289
    10. '
' → logprob: -11.762247085571289

Token 622: ' has' (ID: 853)
  Prédit: ' cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cannot' → logprob: -2.016205072402954
    2. ' is' → logprob: -2.141205072402954
    3. 'cannot' → logprob: -2.141205072402954
    4. '<|end|>' → logprob: -2.141205072402954
    5. '=' → logprob: -2.391205072402954
    6. ' will' → logprob: -2.641205072402954
    7. ' =' → logprob: -2.891205072402954
    8. ' continues' → logprob: -3.266205072402954
    9. '.' → logprob: -3.266205072402954
    10. ':' → logprob: -3.391205072402954

Token 623: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.04920196533203125
    2. 'no' → logprob: -3.0492019653320312
    3. 'print' → logprob: -9.174201965332031
    4. ' impossible' → logprob: -9.424201965332031
    5. '
' → logprob: -9.799201965332031
    6. ' print' → logprob: -9.924201965332031
    7. 'possible' → logprob: -10.174201965332031
    8. ' a' → logprob: -10.424201965332031
    9. 'im' → logprob: -10.549201965332031
    10. '   ' → logprob: -10.549201965332031

Token 624: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.6933213472366333
    2. 'solution' → logprob: -0.6933213472366333
    3. '
' → logprob: -9.943321228027344
    4. 'solutions' → logprob: -10.193321228027344
    5. '_solution' → logprob: -10.443321228027344
    6. ' solutions' → logprob: -10.443321228027344
    7. 'answer' → logprob: -11.818321228027344
    8. 'Solution' → logprob: -11.818321228027344
    9. ' solución' → logprob: -13.068321228027344
    10. ' valid' → logprob: -13.193321228027344

Token 625: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7217370271682739
    2. '                       ' → logprob: -0.8467370271682739
    3. ',' → logprob: -2.5967369079589844
    4. ':
' → logprob: -5.971736907958984
    5. '```' → logprob: -5.971736907958984
    6. ':' → logprob: -6.721736907958984
    7. '           ' → logprob: -6.846736907958984
    8. '                               ' → logprob: -7.346736907958984
    9. '.' → logprob: -7.346736907958984
    10. '                        
' → logprob: -7.596736907958984

Token 626: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.005032610148191452
    2. '                       ' → logprob: -5.630032539367676
    3. '                               ' → logprob: -7.255032539367676
    4. '```' → logprob: -8.130032539367676
    5. ' raise' → logprob: -9.255032539367676
    6. '           ' → logprob: -9.755032539367676
    7. '                            
' → logprob: -9.880032539367676
    8. ' return' → logprob: -10.130032539367676
    9. ',' → logprob: -10.130032539367676
    10. '                        
' → logprob: -10.755032539367676

Token 627: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.04888449236750603
    2. ' possible' → logprob: -3.048884391784668
    3. '
' → logprob: -8.298884391784668
    4. '           ' → logprob: -10.923884391784668
    5. '                       ' → logprob: -11.298884391784668
    6. '                           ' → logprob: -12.048884391784668
    7. '```' → logprob: -12.673884391784668
    8. '                   ' → logprob: -12.798884391784668
    9. 'print' → logprob: -13.298884391784668
    10. '               ' → logprob: -13.548884391784668

Token 628: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05542457848787308
    2. ' =' → logprob: -2.930424690246582
    3. '=False' → logprob: -8.055424690246582
    4. '==' → logprob: -8.555424690246582
    5. '                           ' → logprob: -11.930424690246582
    6. '           ' → logprob: -11.930424690246582
    7. ':' → logprob: -12.180424690246582
    8. ' ==' → logprob: -12.430424690246582
    9. '                               ' → logprob: -13.180424690246582
    10. '                       ' → logprob: -13.680424690246582

Token 629: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. '(False' → logprob: -17.125261306762695
    4. '=False' → logprob: -18.250261306762695
    5. 'false' → logprob: -19.125261306762695
    6. 'True' → logprob: -20.375261306762695
    7. '_false' → logprob: -20.750261306762695
    8. '   ' → logprob: -21.125261306762695
    9. '.False' → logprob: -21.500261306762695
    10. 'F' → logprob: -21.875261306762695

Token 630: '

' (ID: 279)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8701708316802979
    2. '<|end|>' → logprob: -1.1201708316802979
    3. '                           ' → logprob: -2.745170831680298
    4. '.' → logprob: -2.870170831680298
    5. '
' → logprob: -3.120170831680298
    6. '                        
' → logprob: -3.870170831680298
    7. '           ' → logprob: -4.120170593261719
    8. '       ' → logprob: -4.370170593261719
    9. '                   ' → logprob: -4.870170593261719
    10. '               ' → logprob: -4.870170593261719

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5657647848129272
    2. '
' → logprob: -2.315764904022217
    3. '           ' → logprob: -2.690764904022217
    4. '<|end|>' → logprob: -2.815764904022217
    5. '               ' → logprob: -3.190764904022217
    6. '                       ' → logprob: -3.440764904022217
    7. '                           ' → logprob: -3.940764904022217
    8. ' if' → logprob: -4.065764904022217
    9. '                   ' → logprob: -4.065764904022217
    10. 'if' → logprob: -4.440764904022217

Token 632: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41083136200904846
    2. 'if' (adapté à ' if') → logprob: -1.285831332206726
    3. ' if' → logprob: -3.0358314514160156
    4. '
' → logprob: -4.535831451416016
    5. '   ' → logprob: -6.785831451416016
    6. '        
' → logprob: -8.410831451416016
    7. '<|end|>' → logprob: -9.160831451416016
    8. ' ' → logprob: -9.285831451416016
    9. '	if' → logprob: -9.410831451416016
    10. '```' → logprob: -10.910831451416016

Token 633: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.048593275249004364
    2. 'not' → logprob: -3.048593282699585
    3. '   ' → logprob: -13.173593521118164
    4. 'possible' → logprob: -13.298593521118164
    5. ' possible' → logprob: -13.423593521118164
    6. '	not' → logprob: -14.548593521118164
    7. ' ' → logprob: -15.673593521118164
    8. ' ' → logprob: -16.423593521118164
    9. '!' → logprob: -17.423593521118164
    10. ' no' → logprob: -18.048593521118164

Token 634: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.1002068892121315
    2. 'possible' → logprob: -2.3502068519592285
    3. ' posible' → logprob: -15.850207328796387
    4. '_possible' → logprob: -16.22520637512207
    5. ' ' → logprob: -17.97520637512207
    6. 'Possible' → logprob: -19.10020637512207
    7. ' possibile' → logprob: -19.60020637512207
    8. ' possível' → logprob: -20.10020637512207
    9. ' possibles' → logprob: -20.60020637512207
    10. 'poss' → logprob: -20.72520637512207

Token 635: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32137376070022583
    2. ':
' → logprob: -1.321373701095581
    3. '           ' → logprob: -4.82137393951416
    4. '():
' → logprob: -12.32137393951416
    5. '               ' → logprob: -12.69637393951416
    6. ':

' → logprob: -12.82137393951416
    7. ':return' → logprob: -12.94637393951416
    8. '):
' → logprob: -13.32137393951416
    9. '       ' → logprob: -13.32137393951416
    10. ':
' → logprob: -13.57137393951416

Token 636: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003147280658595264
    2. 'print' → logprob: -8.125314712524414
    3. ' print' → logprob: -11.875314712524414
    4. '```' → logprob: -12.625314712524414
    5. ':
' → logprob: -12.875314712524414
    6. '
' → logprob: -13.625314712524414
    7. '          ' → logprob: -13.750314712524414
    8. ',' → logprob: -14.125314712524414
    9. 'continue' → logprob: -14.625314712524414
    10. '       ' → logprob: -14.875314712524414

Token 637: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018431557342410088
    2. ' print' → logprob: -4.268431663513184
    3. '           ' → logprob: -5.518431663513184
    4. '       ' → logprob: -8.518431663513184
    5. '   ' → logprob: -10.018431663513184
    6. '```' → logprob: -13.393431663513184
    7. '	print' → logprob: -14.393431663513184
    8. '
' → logprob: -15.893431663513184
    9. '               ' → logprob: -15.893431663513184
    10. ' ' → logprob: -16.143430709838867

Token 638: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.01642458513379097
    2. '-' → logprob: -4.141424655914307
    3. '(' → logprob: -7.891424655914307
    4. ' -' → logprob: -12.266424179077148
    5. '       ' → logprob: -12.516424179077148
    6. '   ' → logprob: -12.766424179077148
    7. '           ' → logprob: -13.391424179077148
    8. '(
' → logprob: -13.766424179077148
    9. '```' → logprob: -14.266424179077148
    10. '("-' → logprob: -14.891424179077148

Token 639: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. ')' → logprob: -18.75
    4. '2' → logprob: -19.0625
    5. '
' → logprob: -19.3125
    6. '```' → logprob: -19.5
    7. '۱' → logprob: -19.6875
    8. '１' → logprob: -19.75
    9. '11' → logprob: -20.0625
    10. '' → logprob: -20.3125

Token 640: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1614268720149994
    2. ')' → logprob: -1.9114269018173218
    3. '           ' → logprob: -6.911427021026611
    4. '       ' → logprob: -8.786426544189453
    5. ')
' → logprob: -10.161426544189453
    6. ')return' → logprob: -11.661426544189453
    7. '               ' → logprob: -13.161426544189453
    8. '   ' → logprob: -13.786426544189453
    9. ')`
' → logprob: -13.911426544189453
    10. '),' → logprob: -14.786426544189453

Token 641: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023316475562751293
    2. '       ' → logprob: -6.127331733703613
    3. '   ' → logprob: -9.127331733703613
    4. '               ' → logprob: -11.127331733703613
    5. '		' → logprob: -11.502331733703613
    6. 'continue' → logprob: -12.502331733703613
    7. ' ' → logprob: -13.252331733703613
    8. '	       ' → logprob: -13.377331733703613
    9. '	continue' → logprob: -13.877331733703613
    10. '	' → logprob: -14.002331733703613

Token 642: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033462056890130043
    2. 'continue' (adapté à ' continue') → logprob: -5.7533464431762695
    3. '       ' → logprob: -9.50334644317627
    4. ' continue' → logprob: -9.75334644317627
    5. '		' → logprob: -11.37834644317627
    6. ' ' → logprob: -11.37834644317627
    7. '               ' → logprob: -12.50334644317627
    8. '   ' → logprob: -13.25334644317627
    9. 'else' → logprob: -13.25334644317627
    10. '_continue' → logprob: -13.37834644317627

Token 643: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024317849427461624
    2. '```' → logprob: -4.399317741394043
    3. '        
' → logprob: -4.899317741394043
    4. 'dp' → logprob: -6.649317741394043
    5. '
' → logprob: -7.024317741394043
    6. 'from' → logprob: -7.274317741394043
    7. 'visited' → logprob: -7.274317741394043
    8. 'import' → logprob: -9.149317741394043
    9. '    
' → logprob: -9.149317741394043
    10. 'DP' → logprob: -9.524317741394043

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02466404251754284
    2. 'dp' → logprob: -3.7746639251708984
    3. 'from' → logprob: -7.274663925170898
    4. ' dp' → logprob: -7.524663925170898
    5. '   ' → logprob: -9.899663925170898
    6. '```' → logprob: -10.149663925170898
    7. ' from' → logprob: -10.399663925170898
    8. '
' → logprob: -11.149663925170898
    9. '_dp' → logprob: -11.274663925170898
    10. 'DP' → logprob: -11.524663925170898

Token 645: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13362917304039001
    2. '       ' → logprob: -2.133629083633423
    3. 'from' → logprob: -5.383629322052002
    4. ' dp' → logprob: -7.133629322052002
    5. '#' (adapté à ' #') → logprob: -7.383629322052002
    6. '   ' → logprob: -8.758628845214844
    7. 'memo' → logprob: -9.008628845214844
    8. ' from' → logprob: -9.133628845214844
    9. 'all' → logprob: -9.258628845214844
    10. 'full' → logprob: -9.883628845214844

Token 646: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01973889023065567
    2. 'from' → logprob: -4.019738674163818
    3. '#' → logprob: -6.894738674163818
    4. 'INF' → logprob: -8.269739151000977
    5. 'memo' → logprob: -9.019739151000977
    6. '   ' → logprob: -9.769739151000977
    7. 'DP' → logprob: -10.269739151000977
    8. 'size' → logprob: -10.394739151000977
    9. 'visited' → logprob: -11.019739151000977
    10. 'import' → logprob: -11.394739151000977

Token 647: ' need' (ID: 1309)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04964650794863701
    2. '   ' → logprob: -3.4246466159820557
    3. ' =' → logprob: -5.174646377563477
    4. ' need' → logprob: -6.174646377563477
    5. '#' → logprob: -6.799646377563477
    6. 'dp' → logprob: -7.049646377563477
    7. ' want' → logprob: -7.174646377563477
    8. '           ' → logprob: -7.299646377563477
    9. ' have' → logprob: -7.674646377563477
    10. '=' → logprob: -7.924646377563477

Token 648: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.42910969257354736
    2. ' to' → logprob: -1.0541096925735474
    3. '       ' → logprob: -8.179109573364258
    4. '   ' → logprob: -9.304109573364258
    5. '#' → logprob: -11.304109573364258
    6. '           ' → logprob: -12.054109573364258
    7. '_to' → logprob: -13.054109573364258
    8. 'dp' → logprob: -13.304109573364258
    9. '    ' → logprob: -13.554109573364258
    10. '[to' → logprob: -13.679109573364258

Token 649: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4652606248855591
    2. 'visit' → logprob: -1.215260624885559
    3. 'from' → logprob: -3.4652605056762695
    4. 'min' → logprob: -4.4652605056762695
    5. 'use' → logprob: -4.7152605056762695
    6. ' find' → logprob: -4.8402605056762695
    7. 'import' → logprob: -4.9652605056762695
    8. ' visit' → logprob: -5.8402605056762695
    9. 'visited' → logprob: -6.0902605056762695
    10. 'solve' → logprob: -6.9652605056762695

Token 650: ' minimum' (ID: 11085)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7565687894821167
    2. ' the' → logprob: -0.8815687894821167
    3. 'min' → logprob: -3.1315689086914062
    4. 'minimum' → logprob: -3.7565689086914062
    5. ' minimum' → logprob: -4.381568908691406
    6. 'a' → logprob: -5.006568908691406
    7. '   ' → logprob: -5.256568908691406
    8. ' minimal' → logprob: -5.381568908691406
    9. '#' → logprob: -5.381568908691406
    10. ' a' → logprob: -5.506568908691406

Token 651: ' moves' (ID: 19523)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.48483043909072876
    2. '_moves' → logprob: -1.609830379486084
    3. ' moves' → logprob: -1.734830379486084
    4. '   ' → logprob: -5.234830379486084
    5. 'cost' → logprob: -7.484830379486084
    6. 'steps' → logprob: -8.109830856323242
    7. ' steps' → logprob: -8.484830856323242
    8. 'distance' → logprob: -8.734830856323242
    9. 'dist' → logprob: -8.859830856323242
    10. '_move' → logprob: -8.859830856323242

Token 652: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4926474392414093
    2. '       ' → logprob: -0.9926474094390869
    3. 'to' → logprob: -4.742647647857666
    4. '   ' → logprob: -6.117647647857666
    5. ' required' → logprob: -6.492647647857666
    6. ',' → logprob: -6.742647647857666
    7. ' for' → logprob: -6.742647647857666
    8. ' =' → logprob: -7.367647647857666
    9. 'required' → logprob: -7.742647647857666
    10. ' covering' → logprob: -8.242647171020508

Token 653: ' cover' (ID: 4321)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.06484759598970413
    2. ' visit' → logprob: -3.439847707748413
    3. 'clean' → logprob: -3.564847707748413
    4. 'collect' → logprob: -6.564847469329834
    5. 'cover' → logprob: -7.814847469329834
    6. ' clean' → logprob: -8.314847946166992
    7. ' cover' → logprob: -8.564847946166992
    8. '_visit' → logprob: -9.314847946166992
    9. 'visited' → logprob: -11.064847946166992
    10. ' collect' → logprob: -11.189847946166992

Token 654: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.47410351037979126
    2. ' all' → logprob: -0.9741035103797913
    3. 'remaining' → logprob: -11.974103927612305
    4. '       ' → logprob: -12.099103927612305
    5. ' remaining' → logprob: -12.349103927612305
    6. '   ' → logprob: -12.724103927612305
    7. ' ' → logprob: -13.599103927612305
    8. '#' → logprob: -13.724103927612305
    9. '	all' → logprob: -13.974103927612305
    10. ' the' → logprob: -14.224103927612305

Token 655: ' dirty' (ID: 32042)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirty' → logprob: -0.38563841581344604
    2. ' dirty' → logprob: -1.2606384754180908
    3. ' remaining' → logprob: -4.260638236999512
    4. 'remaining' → logprob: -5.135638236999512
    5. '       ' → logprob: -5.385638236999512
    6. '   ' → logprob: -6.260638236999512
    7. ' points' → logprob: -6.260638236999512
    8. 'points' → logprob: -6.510638236999512
    9. '_dirty' → logprob: -6.760638236999512
    10. 'visited' → logprob: -7.260638236999512

Token 656: ' tiles' (ID: 33001)
  Prédit: ' tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tiles' → logprob: -0.14656580984592438
    2. 'tiles' → logprob: -2.8965659141540527
    3. '_positions' → logprob: -3.2715659141540527
    4. '_tiles' → logprob: -3.7715659141540527
    5. '_' → logprob: -4.271565914154053
    6. ' positions' → logprob: -6.021565914154053
    7. 'positions' → logprob: -6.646565914154053
    8. ' ' → logprob: -6.646565914154053
    9. ' _' → logprob: -7.396565914154053
    10. ' tile' → logprob: -8.896565437316895

Token 657: ' starting' (ID: 8601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01225227303802967
    2. 'dp' → logprob: -5.137252330780029
    3. 'visited' → logprob: -5.887252330780029
    4. '
' → logprob: -6.387252330780029
    5. 'from' → logprob: -7.387252330780029
    6. ' dp' → logprob: -8.137251853942871
    7. ',' → logprob: -8.387251853942871
    8. 'mask' → logprob: -8.637251853942871
    9. '   ' → logprob: -9.012251853942871
    10. '        
' → logprob: -9.387251853942871

Token 658: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.22585821151733398
    2. ' from' → logprob: -1.600858211517334
    3. ' at' → logprob: -8.475858688354492
    4. '       ' → logprob: -8.975858688354492
    5. 'at' → logprob: -10.350858688354492
    6. '_from' → logprob: -10.350858688354492
    7. ')' → logprob: -11.725858688354492
    8. '[' → logprob: -12.100858688354492
    9. '```' → logprob: -12.225858688354492
    10. '=' → logprob: -12.225858688354492

Token 659: ' robot' (ID: 20808)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04513930156826973
    2. 'robot' → logprob: -4.045139312744141
    3. 'point' → logprob: -4.295139312744141
    4. 'the' → logprob: -4.920139312744141
    5. 'points' → logprob: -6.420139312744141
    6. ' ' → logprob: -6.545139312744141
    7. 'index' → logprob: -6.670139312744141
    8. ' the' → logprob: -7.920139312744141
    9. ' robot' → logprob: -8.17013931274414
    10. ' point' → logprob: -8.54513931274414

Token 660: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.03510332107543945
    2. ' position' → logprob: -4.1601033210754395
    3. 'pos' → logprob: -4.7851033210754395
    4. '_position' → logprob: -6.2851033210754395
    5. ' start' → logprob: -6.5351033210754395
    6. '_start' → logprob: -6.7851033210754395
    7. '_positions' → logprob: -6.9101033210754395
    8. 'position' → logprob: -7.2851033210754395
    9. ' at' → logprob: -7.4101033210754395
    10. ',' → logprob: -7.5351033210754395

Token 661: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007138844113796949
    2. '
' → logprob: -5.257138729095459
    3. 'dp' → logprob: -7.257138729095459
    4. ',' → logprob: -7.757138729095459
    5. '   ' → logprob: -8.882139205932617
    6. ',
' → logprob: -9.257139205932617
    7. '        
' → logprob: -9.382139205932617
    8. 'from' → logprob: -9.507139205932617
    9. 'import' → logprob: -9.757139205932617
    10. ' dp' → logprob: -9.882139205932617

Token 662: 'index' (ID: 2257)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02276282012462616
    2. ' ' → logprob: -4.522762775421143
    3. ' index' → logprob: -5.022762775421143
    4. 'index' → logprob: -5.772762775421143
    5. ')' → logprob: -7.772762775421143
    6. ' [' → logprob: -7.897762775421143
    7. '[' → logprob: -8.0227632522583
    8. ' (' → logprob: -8.1477632522583
    9. '1' → logprob: -9.6477632522583
    10. '(' → logprob: -9.7727632522583

Token 663: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3853822350502014
    2. '0' → logprob: -1.3853821754455566
    3. ' =' → logprob: -3.2603821754455566
    4. '1' → logprob: -4.010382175445557
    5. '=' → logprob: -4.510382175445557
    6. ')' → logprob: -7.260382175445557
    7. '   ' → logprob: -8.510382652282715
    8. ',' → logprob: -8.760382652282715
    9. '[' → logprob: -8.885382652282715
    10. '_' → logprob: -9.010382652282715

Token 664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03129849210381508
    2. '1' → logprob: -3.5312983989715576
    3. '=' → logprob: -7.031298637390137
    4. ' ' → logprob: -7.906298637390137
    5. '```' → logprob: -8.531298637390137
    6. ' =' → logprob: -9.531298637390137
    7. '`' → logprob: -11.406298637390137
    8. '``' → logprob: -12.281298637390137
    9. '
' → logprob: -12.656298637390137
    10. ')' → logprob: -12.656298637390137

Token 665: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41735416650772095
    2. ')' → logprob: -1.7923541069030762
    3. ',' → logprob: -1.9173541069030762
    4. ')
' → logprob: -5.167354106903076
    5. '
' → logprob: -5.417354106903076
    6. ' and' → logprob: -5.542354106903076
    7. ').' → logprob: -5.667354106903076
    8. ',
' → logprob: -6.042354106903076
    9. '):
' → logprob: -6.292354106903076
    10. '):' → logprob: -6.542354106903076

Token 666: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008741386234760284
    2. 'dp' → logprob: -5.88374137878418
    3. '
' → logprob: -6.00874137878418
    4. ' dp' → logprob: -6.38374137878418
    5. '        
' → logprob: -7.50874137878418
    6. 'visited' → logprob: -7.88374137878418
    7. '```' → logprob: -8.25874137878418
    8. 'mask' → logprob: -8.75874137878418
    9. ' visited' → logprob: -8.75874137878418
    10. ',' → logprob: -9.75874137878418

Token 667: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04070829227566719
    2. '       ' → logprob: -3.665708303451538
    3. 'from' → logprob: -4.290708065032959
    4. ' dp' → logprob: -8.665708541870117
    5. 'import' → logprob: -8.915708541870117
    6. '   ' → logprob: -9.165708541870117
    7. 'memo' → logprob: -9.665708541870117
    8. ' from' → logprob: -9.915708541870117
    9. 'INF' → logprob: -10.915708541870117
    10. 'full' → logprob: -11.040708541870117

Token 668: ' This' (ID: 1328)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009712066501379013
    2. '       ' → logprob: -4.884712219238281
    3. 'from' → logprob: -6.259712219238281
    4. 'INF' → logprob: -10.259712219238281
    5. '   ' → logprob: -10.384712219238281
    6. 'memo' → logprob: -10.634712219238281
    7. 'visited' → logprob: -10.759712219238281
    8. 'DP' → logprob: -11.009712219238281
    9. 'all' → logprob: -11.259712219238281
    10. 'import' → logprob: -11.384712219238281

Token 669: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8374753594398499
    2. ' can' → logprob: -2.212475299835205
    3. ' part' → logprob: -2.587475299835205
    4. ' will' → logprob: -2.837475299835205
    5. ' code' → logprob: -2.837475299835205
    6. ' calls' → logprob: -2.837475299835205
    7. ' involves' → logprob: -3.462475299835205
    8. '#' → logprob: -3.587475299835205
    9. 'dp' → logprob: -3.587475299835205
    10. '   ' → logprob: -3.962475299835205

Token 670: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.03562676161527634
    2. ' the' → logprob: -4.6606268882751465
    3. ' essentially' → logprob: -4.9106268882751465
    4. 'a' → logprob: -5.1606268882751465
    5. ' traveling' → logprob: -5.2856268882751465
    6. ' Traveling' → logprob: -5.4106268882751465
    7. ' tsp' → logprob: -7.5356268882751465
    8. ' basically' → logprob: -7.6606268882751465
    9. ' T' → logprob: -7.7856268882751465
    10. ' Trav' → logprob: -8.160626411437988

Token 671: ' Trav' (ID: 27359)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' T' → logprob: -1.0453795194625854
    2. ' traveling' → logprob: -1.5453795194625854
    3. 'travel' → logprob: -1.9203795194625854
    4. ' tsp' → logprob: -2.420379638671875
    5. 'T' → logprob: -2.545379638671875
    6. ' Traveling' → logprob: -3.545379638671875
    7. ' classic' → logprob: -3.795379638671875
    8. 'trav' → logprob: -3.920379638671875
    9. ' bit' → logprob: -4.420379638671875
    10. 'Travel' → logprob: -4.795379638671875

Token 672: 'elling' (ID: 4481)
  Prédit: 'eling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eling' → logprob: -0.01324399746954441
    2. 'elling' → logprob: -4.763244152069092
    3. 'el' → logprob: -5.388244152069092
    4. 'eler' → logprob: -10.763243675231934
    5. 'els' → logprob: -12.013243675231934
    6. '```' → logprob: -12.138243675231934
    7. 'elting' → logprob: -12.513243675231934
    8. '`' → logprob: -13.138243675231934
    9. 'eled' → logprob: -13.388243675231934
    10. 'else' → logprob: -13.763243675231934

Token 673: ' Sales' (ID: 19023)
  Prédit: 'Sales'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sales' → logprob: -0.0012317767832428217
    2. '_sales' → logprob: -6.876231670379639
    3. ' Sales' → logprob: -8.876232147216797
    4. '_S' → logprob: -10.751232147216797
    5. ' salesman' → logprob: -11.501232147216797
    6. '
' → logprob: -11.751232147216797
    7. '```' → logprob: -12.251232147216797
    8. 'Sal' → logprob: -12.376232147216797
    9. 'Sale' → logprob: -12.751232147216797
    10. 'Purch' → logprob: -13.251232147216797

Token 674: 'man' (ID: 2309)
  Prédit: 'man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.0905410423874855
    2. 'person' → logprob: -2.965541124343872
    3. 'ing' → logprob: -3.590541124343872
    4. '_' → logprob: -6.340540885925293
    5. 'problem' → logprob: -6.465540885925293
    6. 'Problem' → logprob: -6.840540885925293
    7. '[' → logprob: -7.090540885925293
    8. '{' → logprob: -8.215540885925293
    9. '```' → logprob: -8.465540885925293
    10. '
' → logprob: -8.465540885925293

Token 675: ' Problem' (ID: 26113)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -0.018157200887799263
    2. '_problem' → logprob: -4.518157005310059
    3. ' Problem' → logprob: -5.268157005310059
    4. ' problem' → logprob: -7.018157005310059
    5. 'problem' → logprob: -7.018157005310059
    6. '_' → logprob: -10.268157005310059
    7. '#' → logprob: -10.393157005310059
    8. '```' → logprob: -10.393157005310059
    9. '``' → logprob: -11.893157005310059
    10. '
' → logprob: -12.268157005310059

Token 676: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4881036877632141
    2. 'dp' → logprob: -1.6131036281585693
    3. '
' → logprob: -2.7381036281585693
    4. '(dp' → logprob: -2.8631036281585693
    5. '_dp' → logprob: -3.4881036281585693
    6. ' (' → logprob: -4.613103866577148
    7. '   ' → logprob: -5.738103866577148
    8. '(' → logprob: -5.863103866577148
    9. ':' → logprob: -5.988103866577148
    10. ' dp' → logprob: -5.988103866577148

Token 677: 'T' (ID: 51)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -0.5870556831359863
    2. 'dp' → logprob: -2.0870556831359863
    3. 'DP' → logprob: -2.3370556831359863
    4. ' DP' → logprob: -2.5870556831359863
    5. ')' → logprob: -3.0870556831359863
    6. 'dynamic' → logprob: -3.2120556831359863
    7. ' dp' → logprob: -4.587055683135986
    8. ' with' → logprob: -4.587055683135986
    9. ' problem' → logprob: -4.837055683135986
    10. ' bit' → logprob: -5.087055683135986

Token 678: 'SP' (ID: 6657)
  Prédit: 'SP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SP' → logprob: -0.02903813309967518
    2. 'S' → logprob: -3.779038190841675
    3. 'P' → logprob: -5.654037952423096
    4. 'sp' → logprob: -6.904037952423096
    5. 'ype' → logprob: -7.779037952423096
    6. 'o' → logprob: -8.404038429260254
    7. 'our' → logprob: -8.904038429260254
    8. 'D' → logprob: -9.029038429260254
    9. 'O' → logprob: -9.404038429260254
    10. ')' → logprob: -10.279038429260254

Token 679: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41280046105384827
    2. ' with' → logprob: -2.4128005504608154
    3. 'dp' → logprob: -3.1628005504608154
    4. '_dp' → logprob: -3.1628005504608154
    5. ',' → logprob: -3.5378005504608154
    6. '       ' → logprob: -3.7878005504608154
    7. ' problem' → logprob: -4.162800312042236
    8. '):' → logprob: -4.412800312042236
    9. ' dynamic' → logprob: -4.537800312042236
    10. ' on' → logprob: -4.912800312042236

Token 680: ' variant' (ID: 16914)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.317758709192276
    2. '
' → logprob: -1.6927586793899536
    3. 'dp' → logprob: -2.817758798599243
    4. '   ' → logprob: -4.067758560180664
    5. '_dp' → logprob: -5.567758560180664
    6. '        
' → logprob: -6.442758560180664
    7. ',
' → logprob: -6.567758560180664
    8. ',' → logprob: -6.692758560180664
    9. ' dp' → logprob: -7.192758560180664
    10. '
' → logprob: -7.692758560180664

Token 681: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03840566799044609
    2. 'dp' → logprob: -3.538405656814575
    3. '
' → logprob: -5.163405895233154
    4. 'import' → logprob: -6.663405895233154
    5. '   ' → logprob: -7.413405895233154
    6. 'from' → logprob: -7.913405895233154
    7. '        
' → logprob: -8.663405418395996
    8. '_dp' → logprob: -9.288405418395996
    9. ' dp' → logprob: -9.538405418395996
    10. ',' → logprob: -9.663405418395996

Token 682: ' up' (ID: 869)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.2636502981185913
    2. 'dp' → logprob: -2.263650417327881
    3. ' bit' → logprob: -2.638650417327881
    4. 'memo' → logprob: -3.388650417327881
    5. 'all' → logprob: -5.013650417327881
    6. 'n' → logprob: -5.388650417327881
    7. 'dynamic' → logprob: -6.013650417327881
    8. ' memo' → logprob: -6.513650417327881
    9. 'a' → logprob: -6.513650417327881
    10. 'state' → logprob: -6.888650417327881

Token 683: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0354456752538681
    2. ' to' → logprob: -3.4104456901550293
    3. '_to' → logprob: -6.910445690155029
    4. '   ' → logprob: -7.910445690155029
    5. 'dates' → logprob: -9.410445213317871
    6. '[to' → logprob: -9.410445213317871
    7. '       ' → logprob: -9.660445213317871
    8. '
' → logprob: -10.160445213317871
    9. 'n' → logprob: -10.660445213317871
    10. '-to' → logprob: -11.035445213317871

Token 684: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.3118289113044739
    2. '12' → logprob: -2.311828851699829
    3. '10' → logprob: -3.186828851699829
    4. '11' → logprob: -3.436828851699829
    5. 'n' → logprob: -3.561828851699829
    6. '14' → logprob: -3.561828851699829
    7. '20' → logprob: -3.936828851699829
    8. '16' → logprob: -4.936829090118408
    9. ' ' → logprob: -5.686829090118408
    10. '1' → logprob: -5.936829090118408

Token 685: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.11676277220249176
    2. '15' → logprob: -2.49176287651062
    3. '20' → logprob: -3.86676287651062
    4. '1' → logprob: -6.241762638092041
    5. '11' → logprob: -6.741762638092041
    6. '
' → logprob: -6.866762638092041
    7. 'bit' → logprob: -7.491762638092041
    8. 'n' → logprob: -7.616762638092041
    9. '12' → logprob: -7.741762638092041
    10. '```' → logprob: -8.3667631149292

Token 686: ' dirty' (ID: 32042)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.988567054271698
    2. ' dirty' → logprob: -2.1135671138763428
    3. '   ' → logprob: -2.3635671138763428
    4. 'dirty' → logprob: -2.4885671138763428
    5. ')' → logprob: -2.7385671138763428
    6. ' states' → logprob: -3.4885671138763428
    7. 'n' → logprob: -3.9885671138763428
    8. ',' → logprob: -3.9885671138763428
    9. '
' → logprob: -4.363566875457764
    10. ' n' → logprob: -4.363566875457764

Token 687: ' tiles' (ID: 33001)
  Prédit: ' tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tiles' → logprob: -1.0721056461334229
    2. '_tiles' → logprob: -1.1971056461334229
    3. '_' → logprob: -1.3221056461334229
    4. '_positions' → logprob: -3.197105646133423
    5. 'tiles' → logprob: -3.447105646133423
    6. ' _' → logprob: -4.947105407714844
    7. '   ' → logprob: -5.697105407714844
    8. '       ' → logprob: -6.197105407714844
    9. ' ' → logprob: -7.197105407714844
    10. 'tile' → logprob: -7.572105407714844

Token 688: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07426974922418594
    2. 'dp' → logprob: -3.1992697715759277
    3. '
' → logprob: -3.5742697715759277
    4. 'import' → logprob: -7.074269771575928
    5. 'from' → logprob: -7.199269771575928
    6. '```' → logprob: -8.07426929473877
    7. '   ' → logprob: -8.19926929473877
    8. '        
' → logprob: -9.07426929473877
    9. '_dp' → logprob: -9.07426929473877
    10. ',' → logprob: -9.57426929473877

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03106485866010189
    2. '
' → logprob: -3.656064748764038
    3. 'dp' → logprob: -6.031064987182617
    4. '        
' → logprob: -6.781064987182617
    5. ' dp' → logprob: -7.531064987182617
    6. '   ' → logprob: -8.531064987182617
    7. '```' → logprob: -8.781064987182617
    8. '    
' → logprob: -9.781064987182617
    9. 'visited' → logprob: -10.281064987182617
    10. '  
' → logprob: -10.406064987182617

Token 690: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6822811365127563
    2. 'dp' → logprob: -0.8072811365127563
    3. 'from' → logprob: -3.807281017303467
    4. ' dp' → logprob: -4.057281017303467
    5. ' from' → logprob: -5.307281017303467
    6. 'import' → logprob: -6.057281017303467
    7. '   ' → logprob: -6.932281017303467
    8. '
' → logprob: -8.432281494140625
    9. ' import' → logprob: -9.682281494140625
    10. '        
' → logprob: -10.057281494140625

Token 691: ' State' (ID: 5388)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20824123919010162
    2. '       ' → logprob: -1.7082412242889404
    3. 'from' → logprob: -5.4582414627075195
    4. ' dp' → logprob: -6.3332414627075195
    5. '   ' → logprob: -8.08324146270752
    6. ' from' → logprob: -8.83324146270752
    7. 'import' → logprob: -9.58324146270752
    8. 'visited' → logprob: -9.95824146270752
    9. 'memo' → logprob: -10.08324146270752
    10. 'dist' → logprob: -10.20824146270752

Token 692: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021959034726023674
    2. '=' → logprob: -4.021958827972412
    3. 'dp' → logprob: -7.021958827972412
    4. '   ' → logprob: -7.271958827972412
    5. 's' → logprob: -7.396958827972412
    6. 'size' → logprob: -8.27195930480957
    7. ',' → logprob: -8.39695930480957
    8. ')' → logprob: -8.52195930480957
    9. ' dp' → logprob: -8.64695930480957
    10. '_size' → logprob: -8.77195930480957

Token 693: ' bit' (ID: 3546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17826180160045624
    2. '(' → logprob: -2.1782617568969727
    3. '(dp' → logprob: -4.553261756896973
    4. ' dp' → logprob: -4.678261756896973
    5. 'visited' → logprob: -5.303261756896973
    6. ' (' → logprob: -5.428261756896973
    7. '   ' → logprob: -5.553261756896973
    8. '0' → logprob: -5.553261756896973
    9. '1' → logprob: -5.803261756896973
    10. 'state' → logprob: -5.928261756896973

Token 694: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.1480284482240677
    2. '_mask' → logprob: -2.1480283737182617
    3. 'm' → logprob: -4.523028373718262
    4. '   ' → logprob: -5.273028373718262
    5. ')' → logprob: -6.773028373718262
    6. ' _' → logprob: -7.398028373718262
    7. ' =' → logprob: -7.648028373718262
    8. '_' → logprob: -7.773028373718262
    9. 'MASK' → logprob: -7.773028373718262
    10. '_masks' → logprob: -8.273028373718262

Token 695: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4134314954280853
    2. ' =' → logprob: -1.6634315252304077
    3. ' dp' → logprob: -2.663431406021118
    4. 'dp' → logprob: -3.288431406021118
    5. ' ,' → logprob: -4.288431644439697
    6. ')' → logprob: -4.663431644439697
    7. '_dp' → logprob: -5.288431644439697
    8. ',
' → logprob: -6.163431644439697
    9. '   ' → logprob: -6.288431644439697
    10. '=' → logprob: -6.288431644439697

Token 696: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2913769483566284
    2. ' visited' → logprob: -1.4163769483566284
    3. '1' → logprob: -6.041377067565918
    4. ' cleaned' → logprob: -6.166377067565918
    5. ' dirty' → logprob: -6.541377067565918
    6. 'dirty' → logprob: -6.541377067565918
    7. '(' → logprob: -6.666377067565918
    8. 'clean' → logprob: -7.291377067565918
    9. ' (' → logprob: -7.666377067565918
    10. ' ' → logprob: -9.291377067565918

Token 697: ' dirty' (ID: 32042)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033127572387456894
    2. ' ,' → logprob: -4.408127784729004
    3. 'visited' → logprob: -5.033127784729004
    4. '_states' → logprob: -5.408127784729004
    5. 'states' → logprob: -6.408127784729004
    6. '_mask' → logprob: -6.658127784729004
    7. ' states' → logprob: -6.908127784729004
    8. ',
' → logprob: -7.283127784729004
    9. '   ' → logprob: -7.533127784729004
    10. '_' → logprob: -7.908127784729004

Token 698: ' tiles' (ID: 33001)
  Prédit: '_tiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -0.48236218094825745
    2. '_' → logprob: -1.107362151145935
    3. ' _' → logprob: -4.232362270355225
    4. '_mask' → logprob: -4.482362270355225
    5. '_positions' → logprob: -4.482362270355225
    6. '_states' → logprob: -5.107362270355225
    7. '_nodes' → logprob: -5.982362270355225
    8. '_masks' → logprob: -6.732362270355225
    9. ')' → logprob: -6.982362270355225
    10. 's' → logprob: -7.232362270355225

Token 699: ' and' (ID: 326)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.8332603573799133
    2. 'dp' → logprob: -1.7082602977752686
    3. ',' → logprob: -1.9582602977752686
    4. '       ' → logprob: -2.4582602977752686
    5. '   ' → logprob: -2.7082602977752686
    6. '
' → logprob: -2.9582602977752686
    7. ',
' → logprob: -4.708260536193848
    8. ' =' → logprob: -4.833260536193848
    9. ')' → logprob: -5.583260536193848
    10. ' visited' → logprob: -6.083260536193848

Token 700: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.050720177590847015
    2. 'current' → logprob: -3.05072021484375
    3. ' position' → logprob: -6.42572021484375
    4. ' last' → logprob: -8.05072021484375
    5. 'pos' → logprob: -9.67572021484375
    6. 'position' → logprob: -9.80072021484375
    7. ' pos' → logprob: -10.30072021484375
    8. ' the' → logprob: -11.80072021484375
    9. ' ' → logprob: -11.92572021484375
    10. ' robot' → logprob: -11.92572021484375

Token 701: ' position' (ID: 4010)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.34898579120635986
    2. '_' → logprob: -2.0989856719970703
    3. '_position' → logprob: -2.3489856719970703
    4. ' _' → logprob: -2.8489856719970703
    5. 'pos' → logprob: -5.09898567199707
    6. ' position' → logprob: -5.59898567199707
    7. ',' → logprob: -5.72398567199707
    8. 'position' → logprob: -6.97398567199707
    9. '_idx' → logprob: -7.09898567199707
    10. '_i' → logprob: -7.72398567199707

Token 702: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9639719128608704
    2. ' dp' → logprob: -1.0889718532562256
    3. '   ' → logprob: -1.8389718532562256
    4. '       ' → logprob: -2.3389718532562256
    5. '
' → logprob: -3.9639718532562256
    6. '_dp' → logprob: -6.338972091674805
    7. '```' → logprob: -6.588972091674805
    8. ' DP' → logprob: -7.213972091674805
    9. ' from' → logprob: -7.463972091674805
    10. ',' → logprob: -7.588972091674805

Token 703: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1809879094362259
    2. ' dp' → logprob: -2.18098783493042
    3. '   ' → logprob: -3.18098783493042
    4. 'dp' → logprob: -4.55598783493042
    5. '
' → logprob: -7.93098783493042
    6. '           ' → logprob: -9.680988311767578
    7. '```' → logprob: -10.180988311767578
    8. ' DP' → logprob: -10.555988311767578
    9. '_dp' → logprob: -11.430988311767578
    10. '	dp' → logprob: -11.430988311767578

Token 704: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8982345461845398
    2. ' dp' → logprob: -1.2732346057891846
    3. 'dp' → logprob: -1.6482346057891846
    4. '   ' → logprob: -2.1482346057891846
    5. '
' → logprob: -6.1482343673706055
    6. ' from' → logprob: -7.1482343673706055
    7. 'from' → logprob: -7.8982343673706055
    8. 'import' → logprob: -9.523234367370605
    9. '    
' → logprob: -9.898234367370605
    10. '_dp' → logprob: -9.898234367370605

Token 705: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6834177374839783
    2. '   ' → logprob: -1.308417797088623
    3. '       ' → logprob: -1.808417797088623
    4. ' dp' → logprob: -2.808417797088623
    5. 'from' → logprob: -8.433417320251465
    6. ' from' → logprob: -8.558417320251465
    7. '
' → logprob: -9.808417320251465
    8. 'import' → logprob: -9.933417320251465
    9. ' DP' → logprob: -10.433417320251465
    10. '_dp' → logprob: -10.808417320251465

Token 706: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.047806255519390106
    2. '=' → logprob: -4.047806262969971
    3. '_size' → logprob: -4.172806262969971
    4. '_' → logprob: -4.797806262969971
    5. '   ' → logprob: -5.672806262969971
    6. '_states' → logprob: -7.547806262969971
    7. '_state' → logprob: -8.172805786132812
    8. 'size' → logprob: -8.297805786132812
    9. ')' → logprob: -8.422805786132812
    10. ']' → logprob: -9.172805786132812

Token 707: ' store' (ID: 4897)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.534352719783783
    2. ']' → logprob: -2.5343527793884277
    3. 'calculate' → logprob: -2.5343527793884277
    4. '   ' → logprob: -2.6593527793884277
    5. ' solve' → logprob: -3.1593527793884277
    6. 'find' → logprob: -3.9093527793884277
    7. 'import' → logprob: -4.409352779388428
    8. '][' → logprob: -4.534352779388428
    9. ')' → logprob: -4.909352779388428
    10. '```' → logprob: -5.034352779388428

Token 708: ' minimal' (ID: 19957)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012978441081941128
    2. ' dp' → logprob: -4.762978553771973
    3. 'dist' → logprob: -6.137978553771973
    4. '   ' → logprob: -7.012978553771973
    5. 'distance' → logprob: -7.887978553771973
    6. '[' → logprob: -8.012978553771973
    7. ' distances' → logprob: -8.887978553771973
    8. '       ' → logprob: -9.387978553771973
    9. 'cost' → logprob: -9.512978553771973
    10. ' dist' → logprob: -10.262978553771973

Token 709: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8490769863128662
    2. 'moves' → logprob: -0.9740769863128662
    3. ' cost' → logprob: -2.474076986312866
    4. ' moves' → logprob: -2.849076986312866
    5. 'dist' → logprob: -3.974076986312866
    6. 'distance' → logprob: -4.849077224731445
    7. '   ' → logprob: -4.974077224731445
    8. '_cost' → logprob: -5.224077224731445
    9. ' distances' → logprob: -5.849077224731445
    10. '_moves' → logprob: -5.974077224731445

Token 710: ' to' (ID: 316)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.1440179347991943
    2. '   ' → logprob: -1.2690179347991943
    3. ' =' → logprob: -1.7690179347991943
    4. 'dp' → logprob: -1.8940179347991943
    5. '       ' → logprob: -4.144018173217773
    6. ':' → logprob: -4.144018173217773
    7. '_dp' → logprob: -4.394018173217773
    8. '=' → logprob: -4.644018173217773
    9. '
' → logprob: -5.144018173217773
    10. '[' → logprob: -5.769018173217773

Token 711: ' cover' (ID: 4321)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.6778125166893005
    2. 'reach' → logprob: -1.3028125762939453
    3. ' reach' → logprob: -2.3028125762939453
    4. '   ' → logprob: -3.0528125762939453
    5. ' visit' → logprob: -3.1778125762939453
    6. 'visited' → logprob: -4.052812576293945
    7. '[' → logprob: -5.802812576293945
    8. '       ' → logprob: -6.177812576293945
    9. '][' → logprob: -7.052812576293945
    10. ')' → logprob: -7.052812576293945

Token 712: ' visited' (ID: 18416)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5775912404060364
    2. 'all' → logprob: -1.7025911808013916
    3. 'visited' → logprob: -2.3275911808013916
    4. '   ' → logprob: -2.8275911808013916
    5. ' visited' → logprob: -3.0775911808013916
    6. 'mask' → logprob: -3.5775911808013916
    7. ' current' → logprob: -5.452591419219971
    8. ' mask' → logprob: -5.577591419219971
    9. 'state' → logprob: -5.702591419219971
    10. '       ' → logprob: -6.327591419219971

Token 713: ' tiles' (ID: 33001)
  Prédit: '_tiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -0.04311029613018036
    2. '_mask' → logprob: -3.6681103706359863
    3. '_states' → logprob: -4.793110370635986
    4. '   ' → logprob: -6.043110370635986
    5. '_dirty' → logprob: -6.293110370635986
    6. '_positions' → logprob: -6.668110370635986
    7. ' tiles' → logprob: -7.918110370635986
    8. ' _' → logprob: -7.918110370635986
    9. '_masks' → logprob: -8.043109893798828
    10. ' ' → logprob: -8.168109893798828

Token 714: ' ending' (ID: 22013)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11211175471544266
    2. 'dp' → logprob: -2.737111806869507
    3. ' dp' → logprob: -3.362111806869507
    4. '   ' → logprob: -5.112111568450928
    5. '```' → logprob: -8.987112045288086
    6. ',' → logprob: -9.237112045288086
    7. '_dp' → logprob: -9.237112045288086
    8. 'import' → logprob: -9.612112045288086
    9. '
' → logprob: -9.737112045288086
    10. '           ' → logprob: -10.362112045288086

Token 715: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.05783170834183693
    2. '_at' → logprob: -3.4328317642211914
    3. '_' → logprob: -4.432831764221191
    4. 'at' → logprob: -4.557831764221191
    5. '   ' → logprob: -7.932831764221191
    6. '[' → logprob: -8.307831764221191
    7. ' _' → logprob: -9.057831764221191
    8. ' in' → logprob: -9.307831764221191
    9. '	at' → logprob: -9.307831764221191
    10. '```' → logprob: -9.307831764221191

Token 716: ' position' (ID: 4010)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6566486358642578
    2. 'pos' → logprob: -1.5316486358642578
    3. ' current' → logprob: -1.6566486358642578
    4. 'curr' → logprob: -3.906648635864258
    5. 'position' → logprob: -4.156648635864258
    6. ' pos' → logprob: -4.281648635864258
    7. ' position' → logprob: -4.656648635864258
    8. ' the' → logprob: -5.781648635864258
    9. 'the' → logprob: -5.781648635864258
    10. 'cur' → logprob: -6.031648635864258

Token 717: ' pos' (ID: 1253)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.411630392074585
    2. '   ' → logprob: -1.661630392074585
    3. ' =' → logprob: -2.286630392074585
    4. '[state' → logprob: -2.536630392074585
    5. '
' → logprob: -3.036630392074585
    6. '=' → logprob: -3.161630392074585
    7. ' at' → logprob: -3.286630392074585
    8. ' (' → logprob: -3.661630392074585
    9. ' ' → logprob: -3.661630392074585
    10. ' states' → logprob: -3.911630392074585

Token 718: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11724155396223068
    2. ' dp' → logprob: -2.617241621017456
    3. 'dp' → logprob: -3.992241621017456
    4. '
' → logprob: -4.742241382598877
    5. '   ' → logprob: -4.742241382598877
    6. ' DP' → logprob: -7.867241382598877
    7. '_dp' → logprob: -8.117241859436035
    8. 'import' → logprob: -8.367241859436035
    9. '	dp' → logprob: -8.992241859436035
    10. '```' → logprob: -8.992241859436035

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017406281549483538
    2. '
' → logprob: -6.501740455627441
    3. '   ' → logprob: -9.001740455627441
    4. '           ' → logprob: -10.126740455627441
    5. '        
' → logprob: -10.501740455627441
    6. ',' → logprob: -11.626740455627441
    7. ' 
' → logprob: -12.001740455627441
    8. ' dp' → logprob: -12.001740455627441
    9. 'dp' → logprob: -13.001740455627441
    10. '	' → logprob: -13.126740455627441

Token 720: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15217512845993042
    2. ' dp' → logprob: -2.652175188064575
    3. 'dp' → logprob: -2.777175188064575
    4. '   ' → logprob: -4.902174949645996
    5. '
' → logprob: -7.277174949645996
    6. '_dp' → logprob: -9.527174949645996
    7. '	dp' → logprob: -10.152174949645996
    8. ' DP' → logprob: -10.152174949645996
    9. '        
' → logprob: -10.402174949645996
    10. 'import' → logprob: -10.652174949645996

Token 721: '_state' (ID: 9479)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.11192289739847183
    2. '_state' → logprob: -3.1119229793548584
    3. '_' → logprob: -3.4869229793548584
    4. '_bit' → logprob: -4.236922740936279
    5. '_states' → logprob: -4.736922740936279
    6. '_bits' → logprob: -5.736922740936279
    7. '_masks' → logprob: -6.236922740936279
    8. '(' → logprob: -6.986922740936279
    9. '_size' → logprob: -7.111922740936279
    10. 'state' → logprob: -9.236923217773438

Token 722: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02063087932765484
    2. '=' → logprob: -3.8956308364868164
    3. '   ' → logprob: -9.520630836486816
    4. 's' → logprob: -11.895630836486816
    5. '_' → logprob: -12.645630836486816
    6. '    ' → logprob: -13.770630836486816
    7. '_states' → logprob: -13.895630836486816
    8. '	' → logprob: -14.270630836486816
    9. '       ' → logprob: -15.145630836486816
    10. ' ' → logprob: -15.145630836486816

Token 723: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004295757971704006
    2. ' ' → logprob: -5.504295825958252
    3. '(' → logprob: -8.629295349121094
    4. ' (' → logprob: -10.754295349121094
    5. '   ' → logprob: -11.004295349121094
    6. '```' → logprob: -15.754295349121094
    7. '`' → logprob: -16.129295349121094
    8. '[' → logprob: -16.504295349121094
    9. '    ' → logprob: -16.754295349121094
    10. '       ' → logprob: -16.879295349121094

Token 724: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. '(' → logprob: -10.125040054321289
    3. ' ' → logprob: -17.00004005432129
    4. '```' → logprob: -17.50004005432129
    5. '   ' → logprob: -18.75004005432129
    6. '`' → logprob: -18.87504005432129
    7. '2' → logprob: -19.12504005432129
    8. '{' → logprob: -19.87504005432129
    9. ' (' → logprob: -20.25004005432129
    10. '
' → logprob: -20.37504005432129

Token 725: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.06198303773999214
    2. ' <<' → logprob: -2.811983108520508
    3. '<<(' → logprob: -11.186983108520508
    4. '<<<' → logprob: -14.186983108520508
    5. ' <<=' → logprob: -14.686983108520508
    6. '<<<<' → logprob: -15.811983108520508
    7. '<<"' → logprob: -16.811983108520508
    8. ')<<' → logprob: -17.061983108520508
    9. '()<<' → logprob: -17.186983108520508
    10. '<' → logprob: -17.311983108520508

Token 726: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8624639324116288e-06
    2. ' n' → logprob: -13.750001907348633
    3. '(n' → logprob: -14.375001907348633
    4. '10' → logprob: -16.125001907348633
    5. '	n' → logprob: -18.250001907348633
    6. '```' → logprob: -18.875001907348633
    7. ')n' → logprob: -19.500001907348633
    8. '[n' → logprob: -20.750001907348633
    9. '_n' → logprob: -20.875001907348633
    10. '$n' → logprob: -20.875001907348633

Token 727: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5326231718063354
    2. '       ' → logprob: -1.0326231718063354
    3. ' dp' → logprob: -3.532623291015625
    4. '
' → logprob: -4.282623291015625
    5. 'max' → logprob: -5.657623291015625
    6. '   ' → logprob: -6.657623291015625
    7. '```' → logprob: -6.657623291015625
    8. ' states' → logprob: -6.907623291015625
    9. '<|end|>' → logprob: -7.032623291015625
    10. 'states' → logprob: -7.282623291015625

Token 728: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9257041215896606
    2. 'dp' → logprob: -1.1757041215896606
    3. '
' → logprob: -1.3007041215896606
    4. ' dp' → logprob: -5.550704002380371
    5. '        
' → logprob: -5.800704002380371
    6. ',' → logprob: -5.925704002380371
    7. '	dp' → logprob: -6.175704002380371
    8. '<|end|>' → logprob: -6.425704002380371
    9. '```' → logprob: -6.425704002380371
    10. '   ' → logprob: -6.675704002380371

Token 729: ' bit' (ID: 3546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.549433708190918
    2. ' dp' → logprob: -0.924433708190918
    3. '
' → logprob: -4.549433708190918
    4. '   ' → logprob: -4.674433708190918
    5. '       ' → logprob: -6.299433708190918
    6. '    ' → logprob: -7.299433708190918
    7. ' 
' → logprob: -7.549433708190918
    8. 'max' → logprob: -7.924433708190918
    9. ' states' → logprob: -7.924433708190918
    10. ')' → logprob: -8.049433708190918

Token 730: 'mask' (ID: 22527)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.239386186003685
    2. 'mask' → logprob: -2.3643860816955566
    3. '_mask' → logprob: -2.6143860816955566
    4. ' _' → logprob: -3.6143860816955566
    5. '   ' → logprob: -5.614386081695557
    6. ')' → logprob: -5.614386081695557
    7. '-' → logprob: -5.739386081695557
    8. 'm' → logprob: -6.114386081695557
    9. '_n' → logprob: -7.239386081695557
    10. '_count' → logprob: -7.239386081695557

Token 731: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5870162844657898
    2. 'dp' → logprob: -0.8370162844657898
    3. ' dp' → logprob: -5.0870161056518555
    4. '       ' → logprob: -7.4620161056518555
    5. 'dist' → logprob: -7.5870161056518555
    6. '```' → logprob: -7.7120161056518555
    7. '_dp' → logprob: -7.7120161056518555
    8. '
' → logprob: -7.8370161056518555
    9. ',
' → logprob: -7.9620161056518555
    10. 'state' → logprob: -8.087016105651855

Token 732: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07914181798696518
    2. ' n' → logprob: -2.579141855239868
    3. ' dirty' → logprob: -9.204141616821289
    4. 'dirty' → logprob: -9.329141616821289
    5. '	n' → logprob: -10.954141616821289
    6. ' all' → logprob: -11.829141616821289
    7. '(n' → logprob: -12.079141616821289
    8. '   ' → logprob: -12.329141616821289
    9. ')n' → logprob: -12.704141616821289
    10. 'visited' → logprob: -12.704141616821289

Token 733: ' dirty' (ID: 32042)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2843620181083679
    2. '_dirty' → logprob: -1.9093620777130127
    3. 'dirty' → logprob: -3.7843620777130127
    4. ' dirty' → logprob: -4.159361839294434
    5. '_states' → logprob: -4.409361839294434
    6. '_tiles' → logprob: -4.659361839294434
    7. '_' → logprob: -4.909361839294434
    8. ' states' → logprob: -5.034361839294434
    9. 'states' → logprob: -5.409361839294434
    10. '   ' → logprob: -5.659361839294434

Token 734: ' tiles' (ID: 33001)
  Prédit: ' tiles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tiles' → logprob: -0.41180112957954407
    2. '_tiles' → logprob: -1.1618010997772217
    3. 'tiles' → logprob: -4.411801338195801
    4. '_' → logprob: -5.161801338195801
    5. ' _' → logprob: -5.161801338195801
    6. '_positions' → logprob: -7.786801338195801
    7. '_bits' → logprob: -8.7868013381958
    8. '   ' → logprob: -8.9118013381958
    9. ' tile' → logprob: -9.6618013381958
    10. '       ' → logprob: -10.0368013381958

Token 735: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27282601594924927
    2. '       ' → logprob: -2.2728259563446045
    3. '   ' → logprob: -2.6478259563446045
    4. ' dp' → logprob: -2.7728259563446045
    5. 'DP' → logprob: -6.897826194763184
    6. '	dp' → logprob: -7.147826194763184
    7. ' DP' → logprob: -8.022826194763184
    8. '_dp' → logprob: -9.147826194763184
    9. '```' → logprob: -9.397826194763184
    10. '
' → logprob: -10.397826194763184

Token 736: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2781928777694702
    2. '       ' → logprob: -1.7781928777694702
    3. ' dp' → logprob: -3.0281929969787598
    4. '   ' → logprob: -4.15319299697876
    5. '
' → logprob: -5.40319299697876
    6. '```' → logprob: -5.65319299697876
    7. '	dp' → logprob: -7.15319299697876
    8. 'DP' → logprob: -7.90319299697876
    9. '_dp' → logprob: -8.403192520141602
    10. ' DP' → logprob: -9.278192520141602

Token 737: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.005253560841083527
    2. '       ' → logprob: -5.755253791809082
    3. ' dp' → logprob: -6.505253791809082
    4. '   ' → logprob: -7.505253791809082
    5. '	dp' → logprob: -11.755253791809082
    6. 'DP' → logprob: -11.880253791809082
    7. 'import' → logprob: -12.130253791809082
    8. '_dp' → logprob: -12.630253791809082
    9. 'from' → logprob: -13.255253791809082
    10. '```' → logprob: -13.630253791809082

Token 738: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020547140389680862
    2. '=' → logprob: -3.8955471515655518
    3. '=[' → logprob: -13.520546913146973
    4. '   ' → logprob: -13.520546913146973
    5. '[' → logprob: -13.770546913146973
    6. ' ' → logprob: -14.645546913146973
    7. '=[[' → logprob: -15.020546913146973
    8. ']' → logprob: -15.770546913146973
    9. ' =[' → logprob: -15.770546913146973
    10. '```' → logprob: -15.770546913146973

Token 739: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00025526012177579105
    2. '[' → logprob: -8.750255584716797
    3. ' [[' → logprob: -9.250255584716797
    4. '[(' → logprob: -14.875255584716797
    5. '[-' → logprob: -15.625255584716797
    6. '[{' → logprob: -17.000255584716797
    7. '{' → logprob: -17.375255584716797
    8. ' [' → logprob: -17.625255584716797
    9. '[
' → logprob: -18.250255584716797
    10. '   ' → logprob: -18.250255584716797

Token 740: '-' (ID: 12)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0014208302600309253
    2. '-' → logprob: -7.251420974731445
    3. '10' → logprob: -7.251420974731445
    4. ' float' → logprob: -14.001420974731445
    5. 'int' → logprob: -15.501420974731445
    6. '1' → logprob: -16.501420974731445
    7. '0' → logprob: -16.501420974731445
    8. '(float' → logprob: -16.501420974731445
    9. '100' → logprob: -16.876420974731445
    10. '-f' → logprob: -17.251420974731445

Token 741: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -14.500000953674316
    3. '-' → logprob: -16.125
    4. ' ' → logprob: -17.125
    5. '   ' → logprob: -18.1875
    6. '(' → logprob: -18.5625
    7. '１' → logprob: -18.75
    8. '11' → logprob: -19.25
    9. 'float' → logprob: -19.375
    10. '10' → logprob: -19.8125

Token 742: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.480521023273468
    2. ']' → logprob: -1.2305209636688232
    3. ' for' → logprob: -2.8555209636688232
    4. 'for' → logprob: -3.9805209636688232
    5. ']*' → logprob: -4.355521202087402
    6. ']+' → logprob: -9.480521202087402
    7. '][' → logprob: -9.480521202087402
    8. ' ]' → logprob: -9.480521202087402
    9. '   ' → logprob: -9.605521202087402
    10. '	for' → logprob: -11.355521202087402

Token 743: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0013432084815576673
    2. '(n' → logprob: -6.626343250274658
    3. '(' → logprob: -11.8763427734375
    4. ' n' → logprob: -12.3763427734375
    5. 'max' → logprob: -12.8763427734375
    6. '   ' → logprob: -13.3763427734375
    7. '(max' → logprob: -14.2513427734375
    8. ' (' → logprob: -14.5013427734375
    9. '
' → logprob: -15.2513427734375
    10. '[n' → logprob: -15.8763427734375

Token 744: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00021033499797340482
    2. ' +' → logprob: -9.000210762023926
    3. '1' → logprob: -9.375210762023926
    4. '+
' → logprob: -14.250210762023926
    5. '+)' → logprob: -14.625210762023926
    6. ')+' → logprob: -14.875210762023926
    7. ')' → logprob: -14.875210762023926
    8. '   ' → logprob: -16.62520980834961
    9. '```' → logprob: -17.75020980834961
    10. '+n' → logprob: -17.87520980834961

Token 745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.069664333248511e-05
    2. '+' → logprob: -11.750020980834961
    3. ' ' → logprob: -12.125020980834961
    4. '
' → logprob: -13.000020980834961
    5. '2' → logprob: -13.125020980834961
    6. ')' → logprob: -14.687520980834961
    7. '   ' → logprob: -15.000020980834961
    8. '```' → logprob: -15.000020980834961
    9. 'max' → logprob: -15.312520980834961
    10. '

' → logprob: -15.562520980834961

Token 746: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002671768015716225
    2. ' )' → logprob: -8.375267028808594
    3. ')
' → logprob: -11.375267028808594
    4. 'for' → logprob: -11.875267028808594
    5. '       ' → logprob: -12.125267028808594
    6. ')]' → logprob: -12.375267028808594
    7. ' for' → logprob: -12.750267028808594
    8. '   ' → logprob: -13.000267028808594
    9. '```' → logprob: -14.000267028808594
    10. ']' → logprob: -14.125267028808594

Token 747: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04311428964138031
    2. 'for' → logprob: -3.168114185333252
    3. ']' → logprob: -10.16811466217041
    4. '       ' → logprob: -10.29311466217041
    5. ')' → logprob: -11.29311466217041
    6. ' ' → logprob: -11.91811466217041
    7. '	for' → logprob: -12.29311466217041
    8. '   ' → logprob: -12.29311466217041
    9. ' ]' → logprob: -12.66811466217041
    10. '[' → logprob: -13.04311466217041

Token 748: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17779776453971863
    2. '(max' → logprob: -3.052797794342041
    3. ' max' → logprob: -3.177797794342041
    4. 'range' → logprob: -3.177797794342041
    5. 'max' → logprob: -3.552797794342041
    6. ' (' → logprob: -6.427797794342041
    7. '(range' → logprob: -6.927797794342041
    8. '(' → logprob: -7.302797794342041
    9. '[max' → logprob: -8.927797317504883
    10. '   ' → logprob: -9.302797317504883

Token 749: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0811900720000267
    2. ' range' → logprob: -3.3311901092529297
    3. '(range' → logprob: -3.3311901092529297
    4. '(' → logprob: -5.45619010925293
    5. '(max' → logprob: -6.45619010925293
    6. '(n' → logprob: -8.08119010925293
    7. 'max' → logprob: -8.95619010925293
    8. '(w' → logprob: -9.58119010925293
    9. ' (' → logprob: -10.70619010925293
    10. '_range' → logprob: -10.83119010925293

Token 750: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2603027820587158
    2. '(max' → logprob: -2.260302782058716
    3. ' range' → logprob: -2.385302782058716
    4. '(range' → logprob: -3.760302782058716
    5. 'max' → logprob: -5.385302543640137
    6. '(' → logprob: -6.260302543640137
    7. '   ' → logprob: -7.135302543640137
    8. ' (' → logprob: -7.510302543640137
    9. '[max' → logprob: -7.510302543640137
    10. '(n' → logprob: -7.635302543640137

Token 751: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5924041271209717
    2. '(max' → logprob: -1.0924041271209717
    3. '(n' → logprob: -2.9674041271209717
    4. ' (' → logprob: -3.8424041271209717
    5. ' max' → logprob: -3.9674041271209717
    6. 'n' → logprob: -4.467404365539551
    7. '(' → logprob: -5.217404365539551
    8. '   ' → logprob: -6.717404365539551
    9. ' n' → logprob: -6.967404365539551
    10. '1' → logprob: -8.71740436553955

Token 752: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0004235243541188538
    2. 'state' → logprob: -7.875423431396484
    3. '_states' → logprob: -11.750423431396484
    4. 'State' → logprob: -12.000423431396484
    5. '_STATE' → logprob: -12.125423431396484
    6. ')' → logprob: -12.125423431396484
    7. '+' → logprob: -12.625423431396484
    8. 'n' → logprob: -12.750423431396484
    9. '   ' → logprob: -13.000423431396484
    10. '_n' → logprob: -13.250423431396484

Token 753: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013262155698612332
    2. '       ' → logprob: -9.37513256072998
    3. ')]
' → logprob: -10.25013256072998
    4. ')' → logprob: -11.75013256072998
    5. ' )' → logprob: -13.87513256072998
    6. '   ' → logprob: -14.25013256072998
    7. '+' → logprob: -14.25013256072998
    8. ')][' → logprob: -14.62513256072998
    9. '           ' → logprob: -14.75013256072998
    10. ']' → logprob: -15.00013256072998

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0778050571680069
    2. 'dp' → logprob: -2.7028050422668457
    3. ' dp' → logprob: -5.077805042266846
    4. '   ' → logprob: -7.577805042266846
    5. '```' → logprob: -7.577805042266846
    6. '	dp' → logprob: -7.702805042266846
    7. '        
' → logprob: -10.202805519104004
    8. '           ' → logprob: -10.702805519104004
    9. '(dp' → logprob: -10.952805519104004
    10. '[' → logprob: -11.077805519104004

Token 755: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.020190298557281494
    2. '       ' → logprob: -4.020190238952637
    3. ' dp' → logprob: -6.270190238952637
    4. '   ' → logprob: -9.645190238952637
    5. '	dp' → logprob: -10.270190238952637
    6. '```' → logprob: -10.395190238952637
    7. 'import' → logprob: -11.395190238952637
    8. 'from' → logprob: -13.395190238952637
    9. 'for' → logprob: -13.895190238952637
    10. '(dp' → logprob: -14.270190238952637

Token 756: ' Initialize' (ID: 19496)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001149867384810932
    2. '       ' → logprob: -9.500115394592285
    3. 'for' → logprob: -10.625115394592285
    4. ' dp' → logprob: -11.625115394592285
    5. 'from' → logprob: -12.500115394592285
    6. '   ' → logprob: -13.500115394592285
    7. 'import' → logprob: -13.500115394592285
    8. '```' → logprob: -16.12511444091797
    9. 'queue' → logprob: -16.62511444091797
    10. '	dp' → logprob: -17.25011444091797

Token 757: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.044369205832481384
    2. ' dp' → logprob: -3.4193692207336426
    3. '       ' → logprob: -4.669369220733643
    4. '   ' → logprob: -7.169369220733643
    5. 'for' → logprob: -7.919369220733643
    6. ' for' → logprob: -9.169368743896484
    7. '	dp' → logprob: -10.169368743896484
    8. ' ' → logprob: -12.419368743896484
    9. '_dp' → logprob: -12.544368743896484
    10. '    ' → logprob: -14.044368743896484

Token 758: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3196609616279602
    2. 'dp' → logprob: -1.3196609020233154
    3. ' dp' → logprob: -5.3196611404418945
    4. '       ' → logprob: -6.8196611404418945
    5. '   ' → logprob: -8.319661140441895
    6. '0' → logprob: -9.694661140441895
    7. ' [' → logprob: -10.569661140441895
    8. '_dp' → logprob: -10.819661140441895
    9. '	dp' → logprob: -10.819661140441895
    10. '(dp' → logprob: -12.069661140441895

Token 759: ' starting' (ID: 8601)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016698595136404037
    2. ' dp' → logprob: -4.516698360443115
    3. '       ' → logprob: -5.516698360443115
    4. '   ' → logprob: -7.016698360443115
    5. 'for' → logprob: -7.391698360443115
    6. ' for' → logprob: -9.766698837280273
    7. '	dp' → logprob: -10.516698837280273
    8. ' ' → logprob: -12.266698837280273
    9. '    ' → logprob: -12.641698837280273
    10. 'import' → logprob: -12.891698837280273

Token 760: ' position' (ID: 4010)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37630027532577515
    2. ' dp' → logprob: -1.87630033493042
    3. '[' → logprob: -2.12630033493042
    4. '_dp' → logprob: -4.00130033493042
    5. 'state' → logprob: -5.25130033493042
    6. '       ' → logprob: -5.25130033493042
    7. '_state' → logprob: -5.75130033493042
    8. ' state' → logprob: -6.12630033493042
    9. ' [' → logprob: -6.75130033493042
    10. 'with' → logprob: -7.00130033493042

Token 761: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04835398495197296
    2. '[' → logprob: -3.548353910446167
    3. ' dp' → logprob: -4.048354148864746
    4. '       ' → logprob: -7.423354148864746
    5. '   ' → logprob: -9.173354148864746
    6. '_dp' → logprob: -9.423354148864746
    7. '	dp' → logprob: -9.798354148864746
    8. '0' → logprob: -9.923354148864746
    9. '```' → logprob: -10.798354148864746
    10. '(dp' → logprob: -11.173354148864746

Token 762: ' no' (ID: 860)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.033270906656980515
    2. '0' → logprob: -3.908270835876465
    3. ' dp' → logprob: -4.658270835876465
    4. '       ' → logprob: -6.408270835876465
    5. '[' → logprob: -7.033270835876465
    6. '   ' → logprob: -7.908270835876465
    7. ' ' → logprob: -9.533270835876465
    8. '	dp' → logprob: -10.783270835876465
    9. '    ' → logprob: -11.033270835876465
    10. '           ' → logprob: -11.158270835876465

Token 763: ' dirty' (ID: 32042)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.6646888256072998
    2. 'visited' → logprob: -1.5396888256072998
    3. ' _' → logprob: -2.4146888256073
    4. ' dirty' → logprob: -2.5396888256073
    5. 'd' → logprob: -3.6646888256073
    6. '_' → logprob: -3.7896888256073
    7. 'dirty' → logprob: -4.039689064025879
    8. '_dirty' → logprob: -4.289689064025879
    9. ' visits' → logprob: -5.039689064025879
    10. ' ' → logprob: -5.289689064025879

Token 764: ' tiles' (ID: 33001)
  Prédit: '_tiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tiles' → logprob: -0.1614801287651062
    2. '_' → logprob: -2.786480188369751
    3. ' _' → logprob: -2.911480188369751
    4. ' tiles' → logprob: -3.786480188369751
    5. 'tiles' → logprob: -5.286479949951172
    6. '_positions' → logprob: -6.786479949951172
    7. '_mask' → logprob: -7.286479949951172
    8. '_bits' → logprob: -7.411479949951172
    9. ' ' → logprob: -7.411479949951172
    10. '_tile' → logprob: -7.911479949951172

Token 765: ' cleaned' (ID: 37639)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6008424758911133
    2. 'dp' → logprob: -0.9758424758911133
    3. ' dp' → logprob: -3.1008424758911133
    4. '       ' → logprob: -4.100842475891113
    5. 'visited' → logprob: -5.850842475891113
    6. '][' → logprob: -5.975842475891113
    7. '_dp' → logprob: -6.225842475891113
    8. ' [' → logprob: -6.475842475891113
    9. '
' → logprob: -6.600842475891113
    10. ' visited' → logprob: -6.975842475891113

Token 766: ' yet' (ID: 5073)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3524355888366699
    2. '[' → logprob: -2.10243558883667
    3. '       ' → logprob: -2.47743558883667
    4. ' dp' → logprob: -2.85243558883667
    5. '(dp' → logprob: -4.47743558883667
    6. '	dp' → logprob: -4.60243558883667
    7. '   ' → logprob: -4.85243558883667
    8. '_dp' → logprob: -6.22743558883667
    9. '][' → logprob: -7.35243558883667
    10. ')' → logprob: -8.352436065673828

Token 767: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4467568099498749
    2. 'dp' → logprob: -1.1967568397521973
    3. ' dp' → logprob: -3.3217568397521973
    4. '[' → logprob: -4.196756839752197
    5. '	dp' → logprob: -6.196756839752197
    6. '(dp' → logprob: -6.696756839752197
    7. '
' → logprob: -6.821756839752197
    8. '        
' → logprob: -7.696756839752197
    9. ',' → logprob: -7.821756839752197
    10. '   ' → logprob: -7.946756839752197

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7083505988121033
    2. 'dp' → logprob: -1.208350658416748
    3. ' dp' → logprob: -1.583350658416748
    4. '	dp' → logprob: -6.833350658416748
    5. '(dp' → logprob: -7.083350658416748
    6. '   ' → logprob: -7.583350658416748
    7. '[' → logprob: -7.708350658416748
    8. ' =' → logprob: -8.70835018157959
    9. '        
' → logprob: -9.33335018157959
    10. '_dp' → logprob: -9.58335018157959

Token 769: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.012775913812220097
    2. ' dp' → logprob: -4.512775897979736
    3. '       ' → logprob: -6.512775897979736
    4. '   ' → logprob: -8.387776374816895
    5. '	dp' → logprob: -11.262776374816895
    6. 'for' → logprob: -14.512776374816895
    7. ' ' → logprob: -15.137776374816895
    8. '    ' → logprob: -15.762776374816895
    9. '_dp' → logprob: -15.762776374816895
    10. '```' → logprob: -16.137775421142578

Token 770: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.107425062713446e-06
    2. ' [' → logprob: -12.500006675720215
    3. '   ' → logprob: -14.000006675720215
    4. '```' → logprob: -14.250006675720215
    5. '][' → logprob: -14.875006675720215
    6. '0' → logprob: -14.875006675720215
    7. '       ' → logprob: -15.000006675720215
    8. '\[' → logprob: -15.250006675720215
    9. '=' → logprob: -15.375006675720215
    10. ')[' → logprob: -15.875006675720215

Token 771: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008554781670682132
    2. '[' → logprob: -7.125855445861816
    3. '][' → logprob: -10.500855445861816
    4. ' ' → logprob: -11.125855445861816
    5. '1' → logprob: -13.000855445861816
    6. 'max' → logprob: -13.875855445861816
    7. '
' → logprob: -14.000855445861816
    8. ']' → logprob: -14.000855445861816
    9. '   ' → logprob: -14.125855445861816
    10. '000' → logprob: -14.625855445861816

Token 772: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00020127551397308707
    2. '[' → logprob: -8.875201225280762
    3. ']' → logprob: -10.250201225280762
    4. ' ][' → logprob: -10.750201225280762
    5. '   ' → logprob: -12.625201225280762
    6. '       ' → logprob: -14.250201225280762
    7. ''][' → logprob: -16.250202178955078
    8. '0' → logprob: -16.375202178955078
    9. ' [' → logprob: -16.500202178955078
    10. ']
' → logprob: -16.500202178955078

Token 773: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '<|end|>' → logprob: -18.0
    4. '۰' → logprob: -19.0
    5. '০' → logprob: -20.25
    6. '```' → logprob: -20.3125
    7. '   ' → logprob: -20.875
    8. 'o' → logprob: -21.125
    9. ' ' → logprob: -21.375
    10. '=' → logprob: -21.5

Token 774: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001238004770129919
    2. ']=' → logprob: -9.375123977661133
    3. ' ]' → logprob: -11.000123977661133
    4. '=' → logprob: -11.000123977661133
    5. ' =' → logprob: -12.125123977661133
    6. '   ' → logprob: -16.125123977661133
    7. '0' → logprob: -17.000123977661133
    8. ')' → logprob: -17.000123977661133
    9. '']' → logprob: -18.250123977661133
    10. '    ' → logprob: -18.750123977661133

Token 775: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014189064502716
    2. '=' → logprob: -1.7014188766479492
    3. ']' → logprob: -12.70141887664795
    4. ']=' → logprob: -13.95141887664795
    5. '[' → logprob: -14.20141887664795
    6. ')' → logprob: -15.57641887664795
    7. ' ' → logprob: -15.70141887664795
    8. ',' → logprob: -15.70141887664795
    9. '```' → logprob: -15.70141887664795
    10. ' ' → logprob: -16.326419830322266

Token 776: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '۰' → logprob: -19.0
    4. '   ' → logprob: -20.0
    5. '=' → logprob: -20.75
    6. '０' → logprob: -21.125
    7. '```' → logprob: -22.5625
    8. '00' → logprob: -22.6875
    9. '000' → logprob: -22.8125
    10. '﻿' → logprob: -22.9375

Token 777: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '۰' → logprob: -20.75
    4. '   ' → logprob: -21.25
    5. '=' → logprob: -21.5
    6. '00' → logprob: -22.5
    7. '000' → logprob: -22.75
    8. '０' → logprob: -23.0
    9. '{' → logprob: -23.4375
    10. '```' → logprob: -23.4375

Token 778: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7680229544639587
    2. '
' → logprob: -1.2680230140686035
    3. '<|end|>' → logprob: -1.6430230140686035
    4. '   ' → logprob: -3.5180230140686035
    5. '    
' → logprob: -5.0180230140686035
    6. ' 
' → logprob: -5.1430230140686035
    7. '  
' → logprob: -5.2680230140686035
    8. ' for' → logprob: -5.6430230140686035
    9. '        
' → logprob: -6.0180230140686035
    10. '\n' → logprob: -6.5180230140686035

Token 779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08822726458311081
    2. '
' → logprob: -3.2132272720336914
    3. ' for' → logprob: -3.5882272720336914
    4. '   ' → logprob: -4.713227272033691
    5. 'for' → logprob: -5.213227272033691
    6. '	for' → logprob: -6.963227272033691
    7. '        
' → logprob: -7.463227272033691
    8. '    
' → logprob: -8.463227272033691
    9. '           ' → logprob: -9.213227272033691
    10. ' 
' → logprob: -9.213227272033691

Token 780: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006498531438410282
    2. ' for' → logprob: -5.256498336791992
    3. '       ' → logprob: -6.756498336791992
    4. 'from' → logprob: -9.256498336791992
    5. '   ' → logprob: -12.381498336791992
    6. 'import' → logprob: -14.756498336791992
    7. '	for' → logprob: -15.381498336791992
    8. '
' → logprob: -15.881498336791992
    9. '```' → logprob: -16.006498336791992
    10. ' from' → logprob: -16.381498336791992

Token 781: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.10424363613128662
    2. ' state' → logprob: -2.354243755340576
    3. 'mask' → logprob: -5.604243755340576
    4. ' mask' → logprob: -8.479243278503418
    5. 'visited' → logprob: -9.854243278503418
    6. 's' → logprob: -10.479243278503418
    7. 'bit' → logprob: -11.354243278503418
    8. ' visited' → logprob: -11.729243278503418
    9. '_state' → logprob: -11.854243278503418
    10. ' s' → logprob: -12.104243278503418

Token 782: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010580590926110744
    2. 'in' → logprob: -4.635580539703369
    3. ' ' → logprob: -7.260580539703369
    4. '[' → logprob: -10.385581016540527
    5. ',' → logprob: -11.010581016540527
    6. '_' → logprob: -11.135581016540527
    7. '  ' → logprob: -11.260581016540527
    8. ')' → logprob: -11.760581016540527
    9. '   ' → logprob: -11.760581016540527
    10. '+' → logprob: -12.010581016540527

Token 783: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164448715746403
    2. ' range' → logprob: -4.264164447784424
    3. ')' → logprob: -15.139164924621582
    4. '(range' → logprob: -15.764164924621582
    5. 'r' → logprob: -15.889164924621582
    6. '   ' → logprob: -16.264163970947266
    7. ' ' → logprob: -16.389163970947266
    8. 'rang' → logprob: -17.139163970947266
    9. '
' → logprob: -17.264163970947266
    10. '	range' → logprob: -17.389163970947266

Token 784: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4225139021873474
    2. ' (' → logprob: -1.1725139617919922
    3. '(max' → logprob: -3.422513961791992
    4. '1' → logprob: -6.797513961791992
    5. '   ' → logprob: -7.047513961791992
    6. '       ' → logprob: -9.172513961791992
    7. ' (
' → logprob: -9.672513961791992
    8. '(
' → logprob: -9.797513961791992
    9. ' ' → logprob: -10.297513961791992
    10. ' max' → logprob: -10.422513961791992

Token 785: '_state' (ID: 9479)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22010153532028198
    2. '       ' → logprob: -2.4701015949249268
    3. ' +' → logprob: -3.3451015949249268
    4. '1' → logprob: -3.9701015949249268
    5. '   ' → logprob: -4.095101356506348
    6. '[' → logprob: -4.220101356506348
    7. '):
' → logprob: -4.845101356506348
    8. '):' → logprob: -5.345101356506348
    9. ')' → logprob: -5.595101356506348
    10. '        ' → logprob: -6.345101356506348

Token 786: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.42948639392852783
    2. '):' → logprob: -1.0544863939285278
    3. '       ' → logprob: -8.054486274719238
    4. '   ' → logprob: -8.929486274719238
    5. '           ' → logprob: -9.304486274719238
    6. '+' → logprob: -9.679486274719238
    7. ' ):' → logprob: -9.929486274719238
    8. ' ):
' → logprob: -9.929486274719238
    9. ':' → logprob: -10.179486274719238
    10. '):
' → logprob: -11.304486274719238

Token 787: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0627862885594368
    2. ' for' → logprob: -3.562786340713501
    3. '       ' → logprob: -3.687786340713501
    4. '   ' → logprob: -4.937786102294922
    5. '	       ' → logprob: -9.187786102294922
    6. '               ' → logprob: -10.062786102294922
    7. '	   ' → logprob: -10.312786102294922
    8. ' ' → logprob: -10.437786102294922
    9. 'for' → logprob: -10.812786102294922
    10. ' ' → logprob: -11.187786102294922

Token 788: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8626217246055603
    2. ' for' → logprob: -0.8626217246055603
    3. 'for' (adapté à ' for') → logprob: -1.862621784210205
    4. '   ' → logprob: -7.737621784210205
    5. '               ' → logprob: -9.237621307373047
    6. '       ' → logprob: -9.487621307373047
    7. ' ' → logprob: -11.737621307373047
    8. '	for' → logprob: -12.612621307373047
    9. ' ' → logprob: -12.862621307373047
    10. '		' → logprob: -14.362621307373047

Token 789: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.547789674485102e-05
    2. ' pos' → logprob: -10.250035285949707
    3. 'cur' → logprob: -17.125036239624023
    4. 'current' → logprob: -17.500036239624023
    5. '_pos' → logprob: -18.500036239624023
    6. 'curr' → logprob: -18.875036239624023
    7. 'Pos' → logprob: -20.250036239624023
    8. 'position' → logprob: -20.750036239624023
    9. '	pos' → logprob: -20.875036239624023
    10. '(pos' → logprob: -21.500036239624023

Token 790: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018157318234443665
    2. 'in' → logprob: -4.018157482147217
    3. '	in' → logprob: -13.018157005310059
    4. ' ' → logprob: -13.518157005310059
    5. '_in' → logprob: -13.518157005310059
    6. '[' → logprob: -14.143157005310059
    7. 'In' → logprob: -15.143157005310059
    8. ',' → logprob: -15.643157005310059
    9. '+' → logprob: -15.893157005310059
    10. '   ' → logprob: -16.018157958984375

Token 791: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004307884373702109
    2. ' range' → logprob: -8.000431060791016
    3. '(n' → logprob: -10.000431060791016
    4. '(range' → logprob: -10.000431060791016
    5. 'n' → logprob: -12.625431060791016
    6. '[n' → logprob: -13.625431060791016
    7. '   ' → logprob: -18.250431060791016
    8. '0' → logprob: -19.625431060791016
    9. '	range' → logprob: -19.625431060791016
    10. '(' → logprob: -20.000431060791016

Token 792: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47419366240501404
    2. '(n' → logprob: -0.9741936922073364
    3. '1' → logprob: -9.974193572998047
    4. '(' → logprob: -10.224193572998047
    5. ' n' → logprob: -11.349193572998047
    6. '0' → logprob: -11.974193572998047
    7. '   ' → logprob: -12.099193572998047
    8. '[n' → logprob: -12.474193572998047
    9. '	n' → logprob: -12.974193572998047
    10. ' (' → logprob: -13.599193572998047

Token 793: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.1928003813372925e-05
    2. ' +' → logprob: -9.875051498413086
    3. '+
' → logprob: -15.500051498413086
    4. '1' → logprob: -16.625051498413086
    5. ')+' → logprob: -17.875051498413086
    6. '):
' → logprob: -18.625051498413086
    7. '   ' → logprob: -18.750051498413086
    8. '＋' → logprob: -19.125051498413086
    9. '()+' → logprob: -19.750051498413086
    10. '
' → logprob: -19.750051498413086

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006742962170392275
    2. '+' → logprob: -5.00674295425415
    3. ' ' → logprob: -11.881743431091309
    4. '```' → logprob: -12.506743431091309
    5. '   ' → logprob: -12.881743431091309
    6. ')' → logprob: -13.069243431091309
    7. '           ' → logprob: -13.194243431091309
    8. ' +' → logprob: -13.569243431091309
    9. 'n' → logprob: -13.694243431091309
    10. '2' → logprob: -13.944243431091309

Token 795: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07895489037036896
    2. '):' → logprob: -2.5789549350738525
    3. '               ' → logprob: -10.453954696655273
    4. '           ' → logprob: -11.078954696655273
    5. '):
' → logprob: -11.453954696655273
    6. ' ):
' → logprob: -12.578954696655273
    7. ')' → logprob: -13.078954696655273
    8. '       ' → logprob: -13.453954696655273
    9. '):

' → logprob: -13.828954696655273
    10. ':' → logprob: -14.703954696655273

Token 796: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.130576806142926e-05
    2. ' if' → logprob: -11.000031471252441
    3. '                   ' → logprob: -13.250031471252441
    4. '           ' → logprob: -13.375031471252441
    5. '                ' → logprob: -13.500031471252441
    6. '              ' → logprob: -13.875031471252441
    7. '   ' → logprob: -14.000031471252441
    8. ':' → logprob: -14.125031471252441
    9. '                
' → logprob: -14.125031471252441
    10. '		       ' → logprob: -14.250031471252441

Token 797: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5805544853210449
    2. ' if' → logprob: -0.9555544853210449
    3. 'if' (adapté à ' if') → logprob: -3.205554485321045
    4. '               ' → logprob: -4.205554485321045
    5. '                       ' → logprob: -8.330554962158203
    6. '   ' → logprob: -9.955554962158203
    7. '                ' → logprob: -10.080554962158203
    8. '                    ' → logprob: -11.455554962158203
    9. ' ' → logprob: -12.955554962158203
    10. '				' → logprob: -13.080554962158203

Token 798: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0015058133285492659
    2. ' dp' → logprob: -6.5015058517456055
    3. '   ' → logprob: -13.751505851745605
    4. '	dp' → logprob: -13.876505851745605
    5. '                   ' → logprob: -14.376505851745605
    6. '           ' → logprob: -14.876505851745605
    7. '               ' → logprob: -15.001505851745605
    8. '                       ' → logprob: -17.25150489807129
    9. '(dp' → logprob: -17.25150489807129
    10. '_dp' → logprob: -17.50150489807129

Token 799: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -0.00033832306507974863
    2. '[' → logprob: -8.000338554382324
    3. '[pos' → logprob: -13.000338554382324
    4. ' [' → logprob: -14.625338554382324
    5. '[node' → logprob: -18.000337600708008
    6. '```' → logprob: -18.000337600708008
    7. '[val' → logprob: -18.125337600708008
    8. '[token' → logprob: -18.250337600708008
    9. '[s' → logprob: -18.625337600708008
    10. '[row' → logprob: -18.750337600708008

Token 800: '][' (ID: 2696)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0057693962007761
    2. '][' → logprob: -5.3807692527771
    3. '[' → logprob: -6.8807692527771
    4. '               ' → logprob: -9.880769729614258
    5. '[state' → logprob: -10.505769729614258
    6. ' [' → logprob: -11.755769729614258
    7. '                   ' → logprob: -11.880769729614258
    8. ' ][' → logprob: -12.630769729614258
    9. '[token' → logprob: -12.755769729614258
    10. '[position' → logprob: -12.755769729614258

Token 801: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.6240566083070007e-06
    2. ' pos' → logprob: -14.000001907348633
    3. '-' → logprob: -14.375001907348633
    4. '[pos' → logprob: -15.625001907348633
    5. '-pos' → logprob: -17.125001907348633
    6. '	pos' → logprob: -18.125001907348633
    7. '0' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.000001907348633
    9. ' -' → logprob: -19.375001907348633
    10. '(pos' → logprob: -19.500001907348633

Token 802: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2821226119995117
    2. ' ==' → logprob: -2.2821226119995117
    3. '!=' → logprob: -3.1571226119995117
    4. ')' → logprob: -3.5321226119995117
    5. '==' → logprob: -3.6571226119995117
    6. ']' → logprob: -3.7821226119995117
    7. ' is' → logprob: -5.032122611999512
    8. '!=-' → logprob: -5.532122611999512
    9. '==-' → logprob: -6.157122611999512
    10. '                   ' → logprob: -6.157122611999512

Token 803: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7014181613922119
    2. ' ==' → logprob: -1.201418161392212
    3. '==' → logprob: -1.951418161392212
    4. '!=' → logprob: -2.951418161392212
    5. '==-' → logprob: -5.451417922973633
    6. '!=-' → logprob: -6.701417922973633
    7. '>=' → logprob: -7.076417922973633
    8. '                   ' → logprob: -7.076417922973633
    9. ')' → logprob: -7.701417922973633
    10. '                       ' → logprob: -8.326417922973633

Token 804: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.848420551046729e-05
    2. ' -' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.250059127807617
    4. ' ' → logprob: -19.375059127807617
    5. '0' → logprob: -20.500059127807617
    6. '	' → logprob: -20.500059127807617
    7. '  ' → logprob: -21.000059127807617
    8. '                   ' → logprob: -21.375059127807617
    9. '               ' → logprob: -21.625059127807617
    10. 'None' → logprob: -21.750059127807617

Token 805: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -17.5
    4. '```' → logprob: -18.25
    5. '
' → logprob: -18.75
    6. '`' → logprob: -20.0
    7. 'None' → logprob: -20.125
    8. '

' → logprob: -20.25
    9. '  ' → logprob: -20.3125
    10. ' -' → logprob: -20.3125

Token 806: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23938411474227905
    2. ' or' → logprob: -1.8643841743469238
    3. ':' → logprob: -3.489384174346924
    4. '                       ' → logprob: -4.114384174346924
    5. ':
' → logprob: -4.739384174346924
    6. '               ' → logprob: -7.114384174346924
    7. '                           ' → logprob: -7.239384174346924
    8. '                               ' → logprob: -7.739384174346924
    9. '                    ' → logprob: -9.864383697509766
    10. '                  ' → logprob: -10.114383697509766

Token 807: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003685861302074045
    2. '                       ' → logprob: -8.250368118286133
    3. '               ' → logprob: -10.250368118286133
    4. '                    ' → logprob: -10.625368118286133
    5. '                           ' → logprob: -10.875368118286133
    6. '                ' → logprob: -12.000368118286133
    7. '                  ' → logprob: -12.625368118286133
    8. '                 ' → logprob: -12.875368118286133
    9. '                    
' → logprob: -12.875368118286133
    10. '				' → logprob: -13.125368118286133

Token 808: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4451601505279541
    2. 'continue' (adapté à ' continue') → logprob: -1.570160150527954
    3. '                   ' → logprob: -2.445160150527954
    4. '                       ' → logprob: -2.945160150527954
    5. '                               ' → logprob: -5.070159912109375
    6. '                           ' → logprob: -5.320159912109375
    7. '               ' → logprob: -7.695159912109375
    8. '   ' → logprob: -9.945159912109375
    9. '                                   ' → logprob: -9.945159912109375
    10. '	continue' → logprob: -10.070159912109375

Token 809: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013713966123759747
    2. '                   ' → logprob: -4.513713836669922
    3. '                
' → logprob: -6.888713836669922
    4. '                ' → logprob: -7.138713836669922
    5. '                    
' → logprob: -7.763713836669922
    6. ',' → logprob: -9.263713836669922
    7. '                       ' → logprob: -9.263713836669922
    8. '
' → logprob: -10.263713836669922
    9. '                        
' → logprob: -10.388713836669922
    10. '           ' → logprob: -10.638713836669922

Token 810: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008496518130414188
    2. '                   ' → logprob: -7.750849723815918
    3. '                
' → logprob: -8.875849723815918
    4. '                ' → logprob: -9.125849723815918
    5. '
' → logprob: -9.250849723815918
    6. ' for' → logprob: -10.875849723815918
    7. '                       ' → logprob: -11.125849723815918
    8. '           ' → logprob: -12.000849723815918
    9. '                    
' → logprob: -12.000849723815918
    10. 'for' → logprob: -12.375849723815918

Token 811: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030712297186255455
    2. ' for' → logprob: -3.905712366104126
    3. 'for' → logprob: -4.780712127685547
    4. '                   ' → logprob: -6.405712127685547
    5. '                ' → logprob: -10.655712127685547
    6. '           ' → logprob: -11.280712127685547
    7. '                
' → logprob: -11.405712127685547
    8. '                       ' → logprob: -11.905712127685547
    9. '
' → logprob: -12.530712127685547
    10. '   ' → logprob: -12.655712127685547

Token 812: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006311862263828516
    2. '               ' → logprob: -5.506311893463135
    3. ' for' → logprob: -6.131311893463135
    4. '                   ' → logprob: -10.006311416625977
    5. '   ' → logprob: -11.506311416625977
    6. '           ' → logprob: -13.881311416625977
    7. '	for' → logprob: -14.506311416625977
    8. 'next' → logprob: -15.756311416625977
    9. ' ' → logprob: -16.256311416625977
    10. '       ' → logprob: -16.506311416625977

Token 813: ' to' (ID: 316)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.1253852844238281
    2. 'to' → logprob: -1.5003852844238281
    3. ' next' → logprob: -1.8753852844238281
    4. '                   ' → logprob: -2.000385284423828
    5. ' to' → logprob: -2.875385284423828
    6. ':
' → logprob: -3.000385284423828
    7. 'for' → logprob: -4.125385284423828
    8. '   ' → logprob: -4.625385284423828
    9. 'all' → logprob: -4.875385284423828
    10. '               ' → logprob: -4.875385284423828

Token 814: ' visit' (ID: 4030)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.23236645758152008
    2. 'for' → logprob: -1.8573664426803589
    3. ' next' → logprob: -3.3573665618896484
    4. ' for' → logprob: -4.732366561889648
    5. '       ' → logprob: -6.607366561889648
    6. '   ' → logprob: -6.857366561889648
    7. 'range' → logprob: -7.107366561889648
    8. '
' → logprob: -7.732366561889648
    9. '[next' → logprob: -7.732366561889648
    10. ' nxt' → logprob: -7.857366561889648

Token 815: ' a' (ID: 261)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5839076638221741
    2. ' next' → logprob: -0.8339076638221741
    3. ' nxt' → logprob: -5.208907604217529
    4. '               ' → logprob: -7.333907604217529
    5. '   ' → logprob: -7.833907604217529
    6. 'dirty' → logprob: -8.333908081054688
    7. 'n' → logprob: -8.458908081054688
    8. '[next' → logprob: -8.458908081054688
    9. '                   ' → logprob: -9.458908081054688
    10. 'new' → logprob: -9.458908081054688

Token 816: ' new' (ID: 620)
  Prédit: ' dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dirty' → logprob: -0.28609323501586914
    2. 'dirty' → logprob: -2.286093235015869
    3. ' new' → logprob: -2.661093235015869
    4. 'n' → logprob: -2.911093235015869
    5. ' next' → logprob: -4.161093235015869
    6. 'next' → logprob: -5.911093235015869
    7. 'new' → logprob: -6.036093235015869
    8. '   ' → logprob: -8.036092758178711
    9. ' n' → logprob: -8.036092758178711
    10. ' nxt' → logprob: -8.411092758178711

Token 817: ' dirty' (ID: 32042)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirty' → logprob: -0.6341920495033264
    2. ' dirty' → logprob: -0.7591920495033264
    3. '_dirty' → logprob: -6.634191989898682
    4. ' tile' → logprob: -9.25919246673584
    5. 'tile' → logprob: -9.75919246673584
    6. '   ' → logprob: -9.88419246673584
    7. '       ' → logprob: -10.88419246673584
    8. ' position' → logprob: -11.50919246673584
    9. ' ' → logprob: -11.88419246673584
    10. 'position' → logprob: -12.75919246673584

Token 818: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.8832219243049622
    2. '_tile' → logprob: -0.8832219243049622
    3. 'tile' → logprob: -1.8832218647003174
    4. '_tiles' → logprob: -4.7582221031188965
    5. '_' → logprob: -5.1332221031188965
    6. ' _' → logprob: -5.2582221031188965
    7. '
' → logprob: -7.8832221031188965
    8. ' ' → logprob: -8.383221626281738
    9. '               ' → logprob: -8.758221626281738
    10. '   ' → logprob: -8.883221626281738

Token 819: ' next' (ID: 2613)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024521203711628914
    2. '                   ' → logprob: -4.524521350860596
    3. ' for' → logprob: -4.649521350860596
    4. ',' → logprob: -6.524521350860596
    5. 'for' → logprob: -7.399521350860596
    6. '                
' → logprob: -7.399521350860596
    7. '                ' → logprob: -7.649521350860596
    8. '                    
' → logprob: -8.774520874023438
    9. ' next' → logprob: -9.149520874023438
    10. '                       ' → logprob: -9.774520874023438

Token 820: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013905025087296963
    2. '                   ' → logprob: -4.888905048370361
    3. ' for' → logprob: -6.013905048370361
    4. 'for' → logprob: -6.388905048370361
    5. '                ' → logprob: -7.138905048370361
    6. '                
' → logprob: -7.763905048370361
    7. '                    
' → logprob: -8.638904571533203
    8. '           ' → logprob: -8.888904571533203
    9. '                       ' → logprob: -9.138904571533203
    10. ',' → logprob: -9.138904571533203

Token 821: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24316202104091644
    2. '                   ' → logprob: -1.7431620359420776
    3. ' for' → logprob: -3.618161916732788
    4. '                ' → logprob: -5.868162155151367
    5. 'for' → logprob: -6.243162155151367
    6. '                    
' → logprob: -6.243162155151367
    7. '                
' → logprob: -6.368162155151367
    8. '                       ' → logprob: -6.618162155151367
    9. ',' → logprob: -7.368162155151367
    10. '                               ' → logprob: -7.368162155151367

Token 822: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1170075461268425
    2. 'for' (adapté à ' for') → logprob: -2.3670074939727783
    3. '               ' → logprob: -4.492007732391357
    4. '                   ' → logprob: -5.367007732391357
    5. '                ' → logprob: -7.492007732391357
    6. ' ' → logprob: -9.9920072555542
    7. '                       ' → logprob: -10.1170072555542
    8. '   ' → logprob: -10.7420072555542
    9. '                    
' → logprob: -10.9920072555542
    10. '           ' → logprob: -11.1170072555542

Token 823: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.016373341903090477
    2. ' nxt' → logprob: -4.266373157501221
    3. ' next' → logprob: -6.641373157501221
    4. 'i' → logprob: -8.016373634338379
    5. 'n' → logprob: -8.016373634338379
    6. 'nt' → logprob: -9.891373634338379
    7. 'nid' → logprob: -10.016373634338379
    8. 'nx' → logprob: -10.141373634338379
    9. 'Next' → logprob: -11.016373634338379
    10. 'idx' → logprob: -11.141373634338379

Token 824: ' in' (ID: 306)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.4087534546852112
    2. '_state' → logprob: -1.6587533950805664
    3. '_' → logprob: -3.0337533950805664
    4. ' in' → logprob: -3.1587533950805664
    5. '_tile' → logprob: -3.2837533950805664
    6. ' _' → logprob: -5.033753395080566
    7. '_token' → logprob: -5.408753395080566
    8. 'state' → logprob: -6.908753395080566
    9. '_space' → logprob: -7.033753395080566
    10. '_idx' → logprob: -7.033753395080566

Token 825: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12693282961845398
    2. 'range' → logprob: -2.1269328594207764
    3. '(range' → logprob: -12.501933097839355
    4. '1' → logprob: -14.501933097839355
    5. ' in' → logprob: -15.876933097839355
    6. '	range' → logprob: -15.876933097839355
    7. ' ' → logprob: -16.50193214416504
    8. '```' → logprob: -16.87693214416504
    9. '_range' → logprob: -17.50193214416504
    10. '   ' → logprob: -18.25193214416504

Token 826: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005943847820162773
    2. '(' → logprob: -5.130943775177002
    3. 'n' → logprob: -11.50594425201416
    4. '(n' → logprob: -12.63094425201416
    5. '   ' → logprob: -13.88094425201416
    6. ' ' → logprob: -14.00594425201416
    7. '           ' → logprob: -16.630943298339844
    8. '```' → logprob: -17.755943298339844
    9. '(
' → logprob: -18.005943298339844
    10. '       ' → logprob: -18.380943298339844

Token 827: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.637786231702194e-05
    2. 'n' → logprob: -9.375086784362793
    3. ' ' → logprob: -14.000086784362793
    4. '   ' → logprob: -14.250086784362793
    5. '0' → logprob: -17.625085830688477
    6. ' n' → logprob: -17.750085830688477
    7. '           ' → logprob: -17.750085830688477
    8. '(' → logprob: -17.937585830688477
    9. '(n' → logprob: -18.187585830688477
    10. '```' → logprob: -18.437585830688477

Token 828: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025244710966944695
    2. ',n' → logprob: -3.77524471282959
    3. ' ,' → logprob: -6.27524471282959
    4. '(n' → logprob: -10.15024471282959
    5. ',len' → logprob: -11.15024471282959
    6. ',max' → logprob: -11.15024471282959
    7. ',
' → logprob: -11.65024471282959
    8. '<n' → logprob: -12.27524471282959
    9. '           ' → logprob: -12.52524471282959
    10. 'n' → logprob: -12.52524471282959

Token 829: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.2617008400848135e-05
    2. ' n' → logprob: -10.375032424926758
    3. '(n' → logprob: -13.625032424926758
    4. ')n' → logprob: -15.875032424926758
    5. '	n' → logprob: -18.500032424926758
    6. ')' → logprob: -18.750032424926758
    7. '<n' → logprob: -18.750032424926758
    8. '$n' → logprob: -19.500032424926758
    9. '_n' → logprob: -20.125032424926758
    10. '   ' → logprob: -20.250032424926758

Token 830: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5003132224082947
    2. '):
' → logprob: -1.0003132820129395
    3. '):' → logprob: -3.7503132820129395
    4. ')+' → logprob: -7.1253132820129395
    5. ' +' → logprob: -7.3753132820129395
    6. '```' → logprob: -8.125312805175781
    7. ')' → logprob: -8.250312805175781
    8. '+n' → logprob: -9.625312805175781
    9. '+
' → logprob: -10.250312805175781
    10. '(n' → logprob: -10.250312805175781

Token 831: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04950210079550743
    2. '+' → logprob: -3.04950213432312
    3. 'n' → logprob: -7.049501895904541
    4. '+n' → logprob: -10.7995023727417
    5. '(n' → logprob: -11.1745023727417
    6. ' n' → logprob: -12.4245023727417
    7. ' ' → logprob: -13.9245023727417
    8. ' +' → logprob: -13.9245023727417
    9. ')+' → logprob: -13.9245023727417
    10. '```' → logprob: -13.9245023727417

Token 832: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01026972383260727
    2. '):' → logprob: -4.635269641876221
    3. '                   ' → logprob: -7.885269641876221
    4. '                       ' → logprob: -10.135270118713379
    5. '):
' → logprob: -10.510270118713379
    6. '               ' → logprob: -10.635270118713379
    7. ':
' → logprob: -11.385270118713379
    8. ':' → logprob: -11.885270118713379
    9. '):

' → logprob: -12.135270118713379
    10. '():
' → logprob: -12.260270118713379

Token 833: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007001178339123726
    2. '                       ' → logprob: -6.6320013999938965
    3. ' if' → logprob: -6.7570013999938965
    4. '<|end|>' → logprob: -6.8820013999938965
    5. '               ' → logprob: -7.0070013999938965
    6. '                           ' → logprob: -7.5070013999938965
    7. '                    
' → logprob: -7.8820013999938965
    8. '                               ' → logprob: -8.132000923156738
    9. ':
' → logprob: -8.632000923156738
    10. '                    ' → logprob: -9.257000923156738

Token 834: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2745797634124756
    2. 'if' (adapté à ' if') → logprob: -1.6495797634124756
    3. ' 
' → logprob: -3.5245797634124756
    4. ' ' → logprob: -4.899580001831055
    5. '                   ' → logprob: -6.024580001831055
    6. '                     
' → logprob: -6.024580001831055
    7. '                    ' → logprob: -7.274580001831055
    8. '                    
' → logprob: -7.399580001831055
    9. '                               ' → logprob: -7.524580001831055
    10. ' (' → logprob: -7.649580001831055

Token 835: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.48009881377220154
    2. '(state' → logprob: -1.480098843574524
    3. ' (' → logprob: -2.1050987243652344
    4. '(dp' → logprob: -4.230098724365234
    5. 'not' → logprob: -4.355098724365234
    6. '(not' → logprob: -5.855098724365234
    7. 'state' → logprob: -7.480098724365234
    8. ' state' → logprob: -7.855098724365234
    9. ' dp' → logprob: -8.480098724365234
    10. 'dp' → logprob: -8.855098724365234

Token 836: ' (' (ID: 350)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.05563534423708916
    2. ' (' → logprob: -2.930635452270508
    3. ' state' → logprob: -8.430635452270508
    4. 'state' → logprob: -8.430635452270508
    5. '(dp' → logprob: -8.805635452270508
    6. '((' → logprob: -9.055635452270508
    7. '[state' → logprob: -10.680635452270508
    8. ' ((' → logprob: -10.930635452270508
    9. '(' → logprob: -12.430635452270508
    10. ' dp' → logprob: -13.055635452270508

Token 837: 'state' (ID: 5294)
  Prédit: 'state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0018831811612471938
    2. '(state' → logprob: -6.501883029937744
    3. ' state' → logprob: -7.876883029937744
    4. '[state' → logprob: -14.251883506774902
    5. ' (' → logprob: -14.626883506774902
    6. '   ' → logprob: -16.501882553100586
    7. ' ' → logprob: -16.751882553100586
    8. '	state' → logprob: -16.876882553100586
    9. ',state' → logprob: -17.376882553100586
    10. '(' → logprob: -17.376882553100586

Token 838: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.008675315417349339
    2. '&' → logprob: -4.8836750984191895
    3. '>>' → logprob: -7.0086750984191895
    4. ' >>' → logprob: -9.758675575256348
    5. '[' → logprob: -10.258675575256348
    6. '[state' → logprob: -10.633675575256348
    7. '&(' → logprob: -10.758675575256348
    8. '<<' → logprob: -11.258675575256348
    9. ' ' → logprob: -12.758675575256348
    10. '&nbsp' → logprob: -13.008675575256348

Token 839: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03814729303121567
    2. ' (' → logprob: -3.288147211074829
    3. '1' → logprob: -9.16314697265625
    4. ')' → logprob: -14.16314697265625
    5. ' ' → logprob: -16.16314697265625
    6. '[' → logprob: -16.28814697265625
    7. '                   ' → logprob: -17.03814697265625
    8. '   ' → logprob: -17.41314697265625
    9. '
' → logprob: -17.66314697265625
    10. '(next' → logprob: -17.78814697265625

Token 840: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008616935461759567
    2. '(' → logprob: -4.758616924285889
    3. ' (' → logprob: -13.508617401123047
    4. ' ' → logprob: -14.133617401123047
    5. '   ' → logprob: -16.258617401123047
    6. '           ' → logprob: -16.383617401123047
    7. '                   ' → logprob: -16.633617401123047
    8. ')' → logprob: -17.508617401123047
    9. '               ' → logprob: -17.633617401123047
    10. '
' → logprob: -17.633617401123047

Token 841: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0028433911502361298
    2. ' <<' → logprob: -5.877843379974365
    3. '1' → logprob: -10.877843856811523
    4. '<<(' → logprob: -11.252843856811523
    5. '<' → logprob: -13.002843856811523
    6. '<<<' → logprob: -13.877843856811523
    7. ')<<' → logprob: -13.877843856811523
    8. ')' → logprob: -14.252843856811523
    9. '>>' → logprob: -14.252843856811523
    10. '```' → logprob: -15.002843856811523

Token 842: ' (' (ID: 350)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0009646998951211572
    2. 'next' → logprob: -7.125964641571045
    3. ' (' → logprob: -9.125965118408203
    4. '(' → logprob: -10.750965118408203
    5. '[next' → logprob: -11.000965118408203
    6. '(n' → logprob: -11.875965118408203
    7. ' next' → logprob: -12.625965118408203
    8. ',next' → logprob: -14.375965118408203
    9. '   ' → logprob: -14.500965118408203
    10. ')' → logprob: -15.250965118408203

Token 843: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5761750340461731
    2. '(next' → logprob: -0.8261750340461731
    3. ' next' → logprob: -8.95117473602295
    4. '[next' → logprob: -9.20117473602295
    5. ',next' → logprob: -13.45117473602295
    6. '	next' → logprob: -13.70117473602295
    7. '   ' → logprob: -14.32617473602295
    8. '_next' → logprob: -14.82617473602295
    9. ' (' → logprob: -14.82617473602295
    10. '.next' → logprob: -15.07617473602295

Token 844: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.013697512447834015
    2. ' -' → logprob: -5.013697624206543
    3. '(next' → logprob: -5.763697624206543
    4. '[next' → logprob: -6.638697624206543
    5. '1' → logprob: -7.388697624206543
    6. 'next' → logprob: -7.638697624206543
    7. '))' → logprob: -7.638697624206543
    8. '                   ' → logprob: -8.388697624206543
    9. ')' → logprob: -8.388697624206543
    10. '(' → logprob: -8.888697624206543

Token 845: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010354319238103926
    2. ' ' → logprob: -9.500103950500488
    3. '(' → logprob: -10.875103950500488
    4. ' (' → logprob: -12.125103950500488
    5. '   ' → logprob: -13.500103950500488
    6. '           ' → logprob: -13.750103950500488
    7. '                   ' → logprob: -14.250103950500488
    8. ')' → logprob: -15.250103950500488
    9. '               ' → logprob: -15.625103950500488
    10. '       ' → logprob: -15.625103950500488

Token 846: '))' (ID: 915)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.11623110622167587
    2. ')):' → logprob: -2.7412312030792236
    3. '))' → logprob: -3.1162312030792236
    4. ')):
' → logprob: -7.9912309646606445
    5. '                   ' → logprob: -8.241230964660645
    6. ' ))' → logprob: -8.616230964660645
    7. '                       ' → logprob: -9.741230964660645
    8. ')' → logprob: -11.116230964660645
    9. '               ' → logprob: -11.491230964660645
    10. '                           ' → logprob: -11.741230964660645

Token 847: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09503192454576492
    2. '):' → logprob: -2.470031976699829
    3. ')' → logprob: -5.22003173828125
    4. '                       ' → logprob: -8.34503173828125
    5. ' ):
' → logprob: -8.59503173828125
    6. '                   ' → logprob: -9.22003173828125
    7. '):
' → logprob: -10.47003173828125
    8. ' ):' → logprob: -10.84503173828125
    9. '                           ' → logprob: -11.09503173828125
    10. ')==' → logprob: -11.09503173828125

Token 848: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.11983455717563629
    2. ' and' → logprob: -3.2448346614837646
    3. ':' → logprob: -3.4948346614837646
    4. ':
' → logprob: -3.7448346614837646
    5. '                   ' → logprob: -5.1198344230651855
    6. ' :' → logprob: -5.7448344230651855
    7. '                           ' → logprob: -5.8698344230651855
    8. '                        
' → logprob: -5.8698344230651855
    9. '                               ' → logprob: -7.1198344230651855
    10. ' :
' → logprob: -7.1198344230651855

Token 849: ' #' (ID: 1069)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.36782777309417725
    2. ' next' → logprob: -1.9928277730941772
    3. ' cost' → logprob: -2.242827892303467
    4. 'new' → logprob: -4.117827892303467
    5. 'next' → logprob: -4.117827892303467
    6. 'cost' → logprob: -4.242827892303467
    7. ' nd' → logprob: -4.492827892303467
    8. '                       ' → logprob: -6.742827892303467
    9. ' nxt' → logprob: -6.867827892303467
    10. ' dist' → logprob: -6.867827892303467

Token 850: ' If' (ID: 1843)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7081295847892761
    2. 'next' → logprob: -1.708129644393921
    3. ' new' → logprob: -1.958129644393921
    4. 'cost' → logprob: -2.333129644393921
    5. 'nd' → logprob: -3.333129644393921
    6. ' nd' → logprob: -3.708129644393921
    7. ' next' → logprob: -4.208129405975342
    8. ' cost' → logprob: -5.333129405975342
    9. 'dist' → logprob: -6.583129405975342
    10. 'if' → logprob: -6.708129405975342

Token 851: ' not' (ID: 625)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5968955159187317
    2. 'dist' → logprob: -0.9718955159187317
    3. ' dp' → logprob: -3.221895456314087
    4. ' dist' → logprob: -3.471895456314087
    5. '                           ' → logprob: -9.596895217895508
    6. '                       ' → logprob: -10.096895217895508
    7. '                   ' → logprob: -10.596895217895508
    8. '(dp' → logprob: -11.346895217895508
    9. 'room' → logprob: -12.096895217895508
    10. '                               ' → logprob: -12.596895217895508

Token 852: ' visited' (ID: 18416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.015654444694519
    2. 'state' → logprob: -1.140654444694519
    3. ' dp' → logprob: -1.890654444694519
    4. '(state' → logprob: -3.0156545639038086
    5. '(dp' → logprob: -3.2656545639038086
    6. 'visited' → logprob: -3.3906545639038086
    7. ' state' → logprob: -3.5156545639038086
    8. ' (' → logprob: -4.265654563903809
    9. ' visited' → logprob: -7.265654563903809
    10. 'dist' → logprob: -7.890654563903809

Token 853: ' this' (ID: 495)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2194495052099228
    2. '                           ' → logprob: -2.219449520111084
    3. '                       ' → logprob: -3.719449520111084
    4. ':' → logprob: -4.094449520111084
    5. ' and' → logprob: -4.219449520111084
    6. '):
' → logprob: -4.469449520111084
    7. '                               ' → logprob: -5.469449520111084
    8. ',' → logprob: -5.594449520111084
    9. ' next' → logprob: -5.719449520111084
    10. '[next' → logprob: -6.094449520111084

Token 854: ' dirty' (ID: 32042)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.22754772007465363
    2. 'next' → logprob: -2.1025476455688477
    3. ' dirty' → logprob: -3.2275476455688477
    4. 'dirty' → logprob: -4.602547645568848
    5. ' tile' → logprob: -4.852547645568848
    6. '_next' → logprob: -4.977547645568848
    7. '_dirty' → logprob: -5.227547645568848
    8. '_tile' → logprob: -5.727547645568848
    9. 'tile' → logprob: -6.352547645568848
    10. '[next' → logprob: -6.602547645568848

Token 855: ' tile' (ID: 17664)
  Prédit: ' tile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tile' → logprob: -0.8828243017196655
    2. '_tile' → logprob: -0.8828243017196655
    3. 'tile' → logprob: -1.8828243017196655
    4. '_' → logprob: -4.507824420928955
    5. ' _' → logprob: -4.757824420928955
    6. '_tiles' → logprob: -8.257823944091797
    7. '_t' → logprob: -8.382823944091797
    8. '```' → logprob: -9.007823944091797
    9. '`' → logprob: -9.382823944091797
    10. ')' → logprob: -9.757823944091797

Token 856: ' yet' (ID: 5073)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8204955458641052
    2. '                           ' → logprob: -1.07049560546875
    3. ':' → logprob: -2.32049560546875
    4. ',' → logprob: -2.82049560546875
    5. '):
' → logprob: -3.82049560546875
    6. '                       ' → logprob: -3.94549560546875
    7. ' and' → logprob: -4.44549560546875
    8. '                               ' → logprob: -6.19549560546875
    9. ',
' → logprob: -7.19549560546875
    10. ')' → logprob: -7.32049560546875

Token 857: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.535546600818634
    2. ':
' → logprob: -1.5355465412139893
    3. ':' → logprob: -2.2855465412139893
    4. ',' → logprob: -2.9105465412139893
    5. '                       ' → logprob: -3.7855465412139893
    6. '):
' → logprob: -4.785546779632568
    7. ' and' → logprob: -5.160546779632568
    8. '                               ' → logprob: -6.410546779632568
    9. '                            
' → logprob: -6.660546779632568
    10. ',
' → logprob: -7.160546779632568

Token 858: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.18934395909309387
    2. ',' → logprob: -2.1893439292907715
    3. ':' → logprob: -3.5643439292907715
    4. '                       ' → logprob: -3.6893439292907715
    5. ':
' → logprob: -6.0643439292907715
    6. '):
' → logprob: -6.6893439292907715
    7. '                               ' → logprob: -7.4393439292907715
    8. ')' → logprob: -7.6893439292907715
    9. ' and' → logprob: -7.6893439292907715
    10. '```' → logprob: -8.18934440612793

Token 859: ' if' (ID: 538)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.20428864657878876
    2. ' next' → logprob: -2.4542887210845947
    3. '                           ' → logprob: -3.3292887210845947
    4. ' cost' → logprob: -4.204288482666016
    5. 'new' → logprob: -5.079288482666016
    6. ' if' → logprob: -5.204288482666016
    7. '                       ' → logprob: -5.204288482666016
    8. '   ' → logprob: -5.329288482666016
    9. ' dist' → logprob: -5.329288482666016
    10. 'next' → logprob: -5.329288482666016

Token 860: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004132661037147045
    2. ' dist' → logprob: -5.5041327476501465
    3. 'dp' → logprob: -9.879132270812988
    4. '(dist' → logprob: -13.379132270812988
    5. '                           ' → logprob: -14.379132270812988
    6. '	dist' → logprob: -14.754132270812988
    7. ' dp' → logprob: -15.629132270812988
    8. '                       ' → logprob: -15.879132270812988
    9. '_dist' → logprob: -16.629133224487305
    10. '                               ' → logprob: -17.629133224487305

Token 861: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -4.723352049040841e-06
    2. '[position' → logprob: -12.875004768371582
    3. 'pos' → logprob: -13.875004768371582
    4. '[state' → logprob: -14.625004768371582
    5. '```' → logprob: -15.125004768371582
    6. '[' → logprob: -16.000003814697266
    7. ' [' → logprob: -16.250003814697266
    8. '][' → logprob: -17.125003814697266
    9. '                   ' → logprob: -17.500003814697266
    10. '[token' → logprob: -17.625003814697266

Token 862: '][' (ID: 2696)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.014209458604454994
    2. '][' → logprob: -4.264209270477295
    3. '[' → logprob: -10.139209747314453
    4. ')[' → logprob: -13.639209747314453
    5. '[now' → logprob: -13.889209747314453
    6. ' [' → logprob: -14.639209747314453
    7. '[pos' → logprob: -14.764209747314453
    8. '                       ' → logprob: -14.889209747314453
    9. '```' → logprob: -15.139209747314453
    10. ']' → logprob: -15.139209747314453

Token 863: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -2.7848862373502925e-05
    2. ' next' → logprob: -10.500027656555176
    3. '[next' → logprob: -16.000028610229492
    4. '(next' → logprob: -16.125028610229492
    5. '
' → logprob: -17.875028610229492
    6. '	next' → logprob: -17.875028610229492
    7. '_next' → logprob: -19.750028610229492
    8. 'Next' → logprob: -21.500028610229492
    9. '.next' → logprob: -21.750028610229492
    10. ',next' → logprob: -22.000028610229492

Token 864: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031163953244686127
    2. ']!=' → logprob: -6.003116607666016
    3. ']==' → logprob: -7.753116607666016
    4. ']+' → logprob: -9.128116607666016
    5. ' ]' → logprob: -10.378116607666016
    6. ']>=' → logprob: -11.003116607666016
    7. ' !=' → logprob: -11.628116607666016
    8. '!=-' → logprob: -11.753116607666016
    9. '!=' → logprob: -12.253116607666016
    10. ']>' → logprob: -12.253116607666016

Token 865: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.43975186347961426
    2. '==' → logprob: -1.6897518634796143
    3. '!=-' → logprob: -2.0647518634796143
    4. '==-' → logprob: -3.4397518634796143
    5. ' !=' → logprob: -4.689751625061035
    6. '>=' → logprob: -6.939751625061035
    7. ')' → logprob: -7.439751625061035
    8. '=' → logprob: -7.439751625061035
    9. ' ==' → logprob: -7.689751625061035
    10. '>' → logprob: -8.439751625061035

Token 866: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.896309739408025e-07
    2. ' -' → logprob: -14.125000953674316
    3. '```' → logprob: -20.375
    4. '   ' → logprob: -21.0
    5. '−' → logprob: -22.5
    6. ' ' → logprob: -22.75
    7. '‌' → logprob: -23.5
    8. '	' → logprob: -23.875
    9. '\-' → logprob: -23.875
    10. '0' → logprob: -24.125

Token 867: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. '-' → logprob: -11.750008583068848
    3. '```' → logprob: -14.375008583068848
    4. ' -' → logprob: -15.375008583068848
    5. ' ' → logprob: -17.250009536743164
    6. '   ' → logprob: -18.000009536743164
    7. 'inf' → logprob: -18.562509536743164
    8. '``' → logprob: -18.625009536743164
    9. '999' → logprob: -19.250009536743164
    10. '`' → logprob: -19.500009536743164

Token 868: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.13634639978408813
    2. ':' → logprob: -3.1363463401794434
    3. ':
' → logprob: -3.2613463401794434
    4. ' and' → logprob: -3.5113463401794434
    5. '                       ' → logprob: -4.636346340179443
    6. '                               ' → logprob: -5.386346340179443
    7. '                            ' → logprob: -7.636346340179443
    8. ',' → logprob: -8.511346817016602
    9. '):
' → logprob: -8.886346817016602
    10. '                                   ' → logprob: -9.011346817016602

Token 869: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00641573965549469
    2. ':' → logprob: -6.381415843963623
    3. '                       ' → logprob: -6.381415843963623
    4. '                               ' → logprob: -6.381415843963623
    5. ':
' → logprob: -7.256415843963623
    6. '                            
' → logprob: -8.756415367126465
    7. ' :' → logprob: -9.131415367126465
    8. '                            ' → logprob: -9.506415367126465
    9. '):
' → logprob: -9.631415367126465
    10. ',' → logprob: -9.631415367126465

Token 870: ' next' (ID: 2613)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.08828433603048325
    2. ' next' → logprob: -3.0882842540740967
    3. 'new' → logprob: -4.088284492492676
    4. ' cost' → logprob: -4.588284492492676
    5. 'next' (adapté à ' next') → logprob: -5.713284492492676
    6. ' nd' → logprob: -5.838284492492676
    7. 'cost' → logprob: -6.463284492492676
    8. '                               ' → logprob: -6.713284492492676
    9. '                           ' → logprob: -7.463284492492676
    10. ' if' → logprob: -7.463284492492676

Token 871: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.005305027589201927
    2. 'state' → logprob: -5.88030481338501
    3. '_cost' → logprob: -6.13030481338501
    4. '_dist' → logprob: -8.880305290222168
    5. '_distance' → logprob: -10.005305290222168
    6. ')' → logprob: -10.505305290222168
    7. 'State' → logprob: -11.005305290222168
    8. 'cost' → logprob: -11.255305290222168
    9. '_' → logprob: -11.380305290222168
    10. '_dp' → logprob: -11.380305290222168

Token 872: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47476640343666077
    2. ' =' → logprob: -0.9747663736343384
    3. '[state' → logprob: -7.474766254425049
    4. '[' → logprob: -9.974766731262207
    5. '                                   ' → logprob: -11.099766731262207
    6. '                           ' → logprob: -11.224766731262207
    7. '                               ' → logprob: -11.349766731262207
    8. '                   ' → logprob: -11.724766731262207
    9. '```' → logprob: -11.974766731262207
    10. '           ' → logprob: -12.974766731262207

Token 873: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.10020990669727325
    2. ' state' → logprob: -2.350209951400757
    3. '(state' → logprob: -12.850210189819336
    4. '   ' → logprob: -15.475210189819336
    5. '[state' → logprob: -15.475210189819336
    6. ' ' → logprob: -16.100210189819336
    7. '	state' → logprob: -16.475210189819336
    8. '```' → logprob: -18.100210189819336
    9. ',state' → logprob: -18.100210189819336
    10. ' (' → logprob: -18.850210189819336

Token 874: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.10026038438081741
    2. '|' → logprob: -2.3502604961395264
    3. '|(' → logprob: -10.100260734558105
    4. '                               ' → logprob: -11.725260734558105
    5. '                                   ' → logprob: -13.725260734558105
    6. ' ' → logprob: -14.350260734558105
    7. '│' → logprob: -14.600260734558105
    8. '                                ' → logprob: -15.100260734558105
    9. ' |=' → logprob: -15.350260734558105
    10. '                           ' → logprob: -15.600260734558105

Token 875: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0067167943343520164
    2. ' (' → logprob: -5.006716728210449
    3. '1' → logprob: -13.50671672821045
    4. '```' → logprob: -17.256717681884766
    5. '   ' → logprob: -18.256717681884766
    6. ' ' → logprob: -18.631717681884766
    7. '           ' → logprob: -19.381717681884766
    8. '((' → logprob: -19.381717681884766
    9. '`' → logprob: -19.506717681884766
    10. ' ' → logprob: -19.756717681884766

Token 876: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20142561197280884
    2. '1' → logprob: -1.701425552368164
    3. ' (' → logprob: -11.451425552368164
    4. '                               ' → logprob: -14.326425552368164
    5. '                           ' → logprob: -14.826425552368164
    6. '```' → logprob: -14.951425552368164
    7. ' ' → logprob: -15.701425552368164
    8. '[' → logprob: -16.576425552368164
    9. '                       ' → logprob: -16.826425552368164
    10. '   ' → logprob: -16.951425552368164

Token 877: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.47428008913993835
    2. ' <<' → logprob: -0.9742801189422607
    3. '<<(' → logprob: -8.59928035736084
    4. '<' → logprob: -11.22428035736084
    5. '<<<' → logprob: -13.97428035736084
    6. ')<<' → logprob: -14.22428035736084
    7. ')' → logprob: -14.34928035736084
    8. '                           ' → logprob: -14.59928035736084
    9. '                               ' → logprob: -14.97428035736084
    10. '(' → logprob: -15.09928035736084

Token 878: ' (' (ID: 350)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0009200352360494435
    2. ' (' → logprob: -7.000919818878174
    3. '(n' → logprob: -12.375920295715332
    4. 'next' → logprob: -13.125920295715332
    5. '[next' → logprob: -13.250920295715332
    6. ' next' → logprob: -15.875920295715332
    7. ',next' → logprob: -16.625919342041016
    8. '(' → logprob: -16.750919342041016
    9. '   ' → logprob: -16.875919342041016
    10. ' ' → logprob: -17.500919342041016

Token 879: 'next' (ID: 7311)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.31334808468818665
    2. 'next' → logprob: -1.3133480548858643
    3. '[next' → logprob: -9.813347816467285
    4. ' next' → logprob: -10.438347816467285
    5. ',next' → logprob: -14.188347816467285
    6. '	next' → logprob: -14.563347816467285
    7. ' (' → logprob: -14.938347816467285
    8. '.next' → logprob: -15.563347816467285
    9. '   ' → logprob: -15.688347816467285
    10. '_next' → logprob: -15.813347816467285

Token 880: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010354319238103926
    2. ' -' → logprob: -9.875103950500488
    3. '(next' → logprob: -11.125103950500488
    4. ')-' → logprob: -11.250103950500488
    5. '(' → logprob: -11.500103950500488
    6. '[' → logprob: -12.625103950500488
    7. ')' → logprob: -13.000103950500488
    8. '           ' → logprob: -13.125103950500488
    9. '-token' → logprob: -13.875103950500488
    10. '[next' → logprob: -14.125103950500488

Token 881: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08397076278924942
    2. '(next' → logprob: -2.708970785140991
    3. '(' → logprob: -4.333970546722412
    4. ' (' → logprob: -7.708970546722412
    5. 'next' → logprob: -8.45897102355957
    6. '-' → logprob: -10.20897102355957
    7. ' ' → logprob: -10.45897102355957
    8. '[next' → logprob: -10.95897102355957
    9. '(token' → logprob: -11.08397102355957
    10. '(prev' → logprob: -11.20897102355957

Token 882: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048684220761060715
    2. ')
' → logprob: -3.0486841201782227
    3. '                           ' → logprob: -10.298684120178223
    4. ')`' → logprob: -10.673684120178223
    5. ')`
' → logprob: -11.423684120178223
    6. '                       ' → logprob: -11.548684120178223
    7. '))' → logprob: -11.798684120178223
    8. ')
' → logprob: -11.923684120178223
    9. '                   ' → logprob: -14.048684120178223
    10. ')

' → logprob: -14.173684120178223

Token 883: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.08325783908367157
    2. '                               ' → logprob: -2.9582579135894775
    3. '                       ' → logprob: -3.9582579135894775
    4. ':
' → logprob: -5.708257675170898
    5. ':' → logprob: -6.583257675170898
    6. '                   ' → logprob: -7.083257675170898
    7. '[next' → logprob: -7.333257675170898
    8. '                                   ' → logprob: -7.458257675170898
    9. ')' → logprob: -8.208257675170898
    10. '[' → logprob: -8.208257675170898

Token 884: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.931535542011261
    2. 'cost' → logprob: -1.4315354824066162
    3. ' new' → logprob: -1.8065354824066162
    4. 'if' → logprob: -2.681535482406616
    5. ' if' → logprob: -3.181535482406616
    6. '                           ' → logprob: -4.056535720825195
    7. ' cost' → logprob: -4.056535720825195
    8. 'dp' → logprob: -4.181535720825195
    9. 'nd' → logprob: -4.181535720825195
    10. 'next' → logprob: -4.431535720825195

Token 885: '_cost' (ID: 36820)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.6439358592033386
    2. '_cost' → logprob: -0.7689358592033386
    3. '_state' → logprob: -4.768935680389404
    4. 'dp' → logprob: -7.393935680389404
    5. '_dist' → logprob: -7.893935680389404
    6. '_' → logprob: -8.018936157226562
    7. '_distance' → logprob: -8.268936157226562
    8. '_val' → logprob: -8.268936157226562
    9. 'cost' → logprob: -8.393936157226562
    10. '_value' → logprob: -8.643936157226562

Token 886: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2256215363740921
    2. '=' → logprob: -1.6006215810775757
    3. '                           ' → logprob: -9.475621223449707
    4. '                               ' → logprob: -9.975621223449707
    5. '                       ' → logprob: -10.850621223449707
    6. '[' → logprob: -11.100621223449707
    7. '```' → logprob: -11.600621223449707
    8. '                   ' → logprob: -11.725621223449707
    9. '                                   ' → logprob: -11.850621223449707
    10. 'dp' → logprob: -12.225621223449707

Token 887: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.023278674110770226
    2. ' dp' → logprob: -3.7732787132263184
    3. '                           ' → logprob: -10.64827823638916
    4. '                               ' → logprob: -11.89827823638916
    5. '(dp' → logprob: -14.02327823638916
    6. '	dp' → logprob: -14.02327823638916
    7. '                                   ' → logprob: -14.14827823638916
    8. '_dp' → logprob: -16.898279190063477
    9. '.dp' → logprob: -17.023279190063477
    10. '   ' → logprob: -17.148279190063477

Token 888: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -1.4498052223643754e-05
    2. 'state' → logprob: -11.500014305114746
    3. '[next' → logprob: -12.750014305114746
    4. '[pos' → logprob: -14.500014305114746
    5. '[' → logprob: -14.750014305114746
    6. '                   ' → logprob: -16.375015258789062
    7. ',state' → logprob: -16.375015258789062
    8. '               ' → logprob: -17.125015258789062
    9. '(state' → logprob: -17.250015258789062
    10. '[position' → logprob: -17.625015258789062

Token 889: '][' (ID: 2696)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0003253335307817906
    2. '][' → logprob: -8.375325202941895
    3. '[next' → logprob: -9.375325202941895
    4. '[' → logprob: -12.250325202941895
    5. '[position' → logprob: -13.125325202941895
    6. ' [' → logprob: -14.125325202941895
    7. '                           ' → logprob: -14.375325202941895
    8. '[row' → logprob: -15.750325202941895
    9. ')[' → logprob: -15.875325202941895
    10. '[token' → logprob: -15.875325202941895

Token 890: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00024001303245313466
    2. '[pos' → logprob: -8.375240325927734
    3. ' pos' → logprob: -12.000240325927734
    4. '][' → logprob: -13.000240325927734
    5. '	pos' → logprob: -14.125240325927734
    6. '_pos' → logprob: -16.750240325927734
    7. ',pos' → logprob: -16.875240325927734
    8. '(pos' → logprob: -16.875240325927734
    9. '```' → logprob: -17.000240325927734
    10. '
' → logprob: -17.500240325927734

Token 891: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7088719010353088
    2. ' +' → logprob: -0.7088719010353088
    3. '[pos' → logprob: -4.583871841430664
    4. '                           ' → logprob: -6.333871841430664
    5. '[' → logprob: -6.708871841430664
    6. ']' → logprob: -7.333871841430664
    7. ']+' → logprob: -7.458871841430664
    8. '                               ' → logprob: -7.458871841430664
    9. '][' → logprob: -8.708871841430664
    10. '[next' → logprob: -9.208871841430664

Token 892: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31328028440475464
    2. '+' → logprob: -1.3132803440093994
    3. '                           ' → logprob: -12.06328010559082
    4. '+
' → logprob: -12.18828010559082
    5. ' +
' → logprob: -12.68828010559082
    6. '                               ' → logprob: -12.81328010559082
    7. '[' → logprob: -14.81328010559082
    8. '```' → logprob: -15.18828010559082
    9. '+[' → logprob: -15.68828010559082
    10. ' ' → logprob: -15.68828010559082

Token 893: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01416350994259119
    2. ' dist' → logprob: -4.264163494110107
    3. '	dist' → logprob: -16.889163970947266
    4. '(dist' → logprob: -17.014163970947266
    5. 'Dist' → logprob: -19.514163970947266
    6. '                           ' → logprob: -19.514163970947266
    7. '```' → logprob: -19.764163970947266
    8. '_dist' → logprob: -20.139163970947266
    9. '                   ' → logprob: -20.389163970947266
    10. '.dist' → logprob: -20.639163970947266

Token 894: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.25000286102295
    3. '[position' → logprob: -14.00000286102295
    4. '```' → logprob: -15.37500286102295
    5. '[
' → logprob: -16.125003814697266
    6. ' [' → logprob: -16.750003814697266
    7. '[token' → logprob: -18.250003814697266
    8. '[val' → logprob: -18.250003814697266
    9. '[next' → logprob: -18.500003814697266
    10. '[p' → logprob: -18.500003814697266

Token 895: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16038914024829865
    2. '[next' → logprob: -1.9103891849517822
    3. '[' → logprob: -9.660388946533203
    4. ')[' → logprob: -10.160388946533203
    5. '}[' → logprob: -10.910388946533203
    6. '```' → logprob: -11.285388946533203
    7. '>[' → logprob: -11.535388946533203
    8. ']' → logprob: -12.785388946533203
    9. ''][' → logprob: -12.910388946533203
    10. ' ][' → logprob: -12.910388946533203

Token 896: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -3.523948907968588e-05
    2. '[next' → logprob: -10.750035285949707
    3. ' next' → logprob: -11.250035285949707
    4. '
' → logprob: -15.125035285949707
    5. '(next' → logprob: -15.250035285949707
    6. '	next' → logprob: -15.625035285949707
    7. '_next' → logprob: -19.12503433227539
    8. '```' → logprob: -19.25003433227539
    9. '.next' → logprob: -19.50003433227539
    10. ',next' → logprob: -19.75003433227539

Token 897: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017091363668441772
    2. '                           ' → logprob: -4.267091274261475
    3. ']' → logprob: -6.767091274261475
    4. ')
' → logprob: -6.892091274261475
    5. '                       ' → logprob: -8.392091751098633
    6. '                               ' → logprob: -8.642091751098633
    7. '])' → logprob: -9.392091751098633
    8. '<|end|>' → logprob: -9.892091751098633
    9. '               ' → logprob: -10.392091751098633
    10. '                            ' → logprob: -10.642091751098633

Token 898: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0004535526386462152
    2. '                               ' → logprob: -8.87545394897461
    3. '                       ' → logprob: -9.00045394897461
    4. '                            
' → logprob: -9.00045394897461
    5. '                            ' → logprob: -10.50045394897461
    6. '                   ' → logprob: -12.00045394897461
    7. '           ' → logprob: -12.25045394897461
    8. '                                   ' → logprob: -12.50045394897461
    9. '                          ' → logprob: -12.62545394897461
    10. '               ' → logprob: -12.75045394897461

Token 899: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7337932586669922
    2. '                           ' → logprob: -0.7337932586669922
    3. ' if' → logprob: -3.233793258666992
    4. '                               ' → logprob: -8.483793258666992
    5. '                       ' → logprob: -8.983793258666992
    6. '```' → logprob: -9.983793258666992
    7. '                            ' → logprob: -11.358793258666992
    8. '                            
' → logprob: -11.858793258666992
    9. '           ' → logprob: -11.983793258666992
    10. '                   ' → logprob: -12.233793258666992

Token 900: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0026635273825377226
    2. ' dp' → logprob: -6.252663612365723
    3. '(dp' → logprob: -7.752663612365723
    4. '                           ' → logprob: -8.127663612365723
    5. '                               ' → logprob: -12.252663612365723
    6. '                                   ' → logprob: -13.877663612365723
    7. '                            ' → logprob: -14.002663612365723
    8. '                       ' → logprob: -14.252663612365723
    9. '	dp' → logprob: -14.252663612365723
    10. '                             ' → logprob: -14.627663612365723

Token 901: '[next' (ID: 103383)
  Prédit: '[state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -0.25194743275642395
    2. '[next' → logprob: -1.5019474029541016
    3. '[' → logprob: -11.001947402954102
    4. '[token' → logprob: -14.376947402954102
    5. '[new' → logprob: -14.876947402954102
    6. '[now' → logprob: -14.876947402954102
    7. '```' → logprob: -16.6269474029541
    8. 'next' → logprob: -16.7519474029541
    9. '[user' → logprob: -16.8769474029541
    10. '[current' → logprob: -17.2519474029541

Token 902: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.005983781535178423
    2. '[state' → logprob: -5.380983829498291
    3. '[next' → logprob: -6.755983829498291
    4. 'state' → logprob: -8.880983352661133
    5. '_STATE' → logprob: -10.755983352661133
    6. '][' → logprob: -10.755983352661133
    7. '_states' → logprob: -12.505983352661133
    8. '[' → logprob: -12.880983352661133
    9. '_State' → logprob: -13.255983352661133
    10. '-state' → logprob: -13.755983352661133

Token 903: '][' (ID: 2696)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.006114955060184002
    2. '][' → logprob: -5.756114959716797
    3. '[pos' → logprob: -5.881114959716797
    4. '[' → logprob: -9.381114959716797
    5. '[token' → logprob: -10.006114959716797
    6. '[state' → logprob: -13.381114959716797
    7. '                           ' → logprob: -13.381114959716797
    8. ')[' → logprob: -13.881114959716797
    9. '[now' → logprob: -13.881114959716797
    10. '[new' → logprob: -14.256114959716797

Token 904: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.25618669390678406
    2. 'pos' → logprob: -1.5061867237091064
    3. '[next' → logprob: -5.506186485290527
    4. '[pos' → logprob: -9.256186485290527
    5. ' next' → logprob: -9.631186485290527
    6. '(next' → logprob: -11.006186485290527
    7. '][' → logprob: -12.756186485290527
    8. ' pos' → logprob: -14.006186485290527
    9. ',next' → logprob: -14.381186485290527
    10. '	next' → logprob: -14.381186485290527

Token 905: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12528172135353088
    2. ']==' → logprob: -2.750281810760498
    3. '][' → logprob: -3.750281810760498
    4. '[next' → logprob: -4.000281810760498
    5. '[state' → logprob: -5.125281810760498
    6. '[' → logprob: -6.125281810760498
    7. '[pos' → logprob: -6.125281810760498
    8. '```' → logprob: -8.12528133392334
    9. '[
' → logprob: -8.25028133392334
    10. '[token' → logprob: -8.25028133392334

Token 906: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.46835121512413025
    2. '==' → logprob: -1.0933512449264526
    3. '==-' → logprob: -3.843351125717163
    4. '<' → logprob: -4.218351364135742
    5. '=' → logprob: -6.468351364135742
    6. ' <' → logprob: -7.343351364135742
    7. '<|end|>' → logprob: -9.093351364135742
    8. '===' → logprob: -9.218351364135742
    9. ')' → logprob: -9.468351364135742
    10. '```' → logprob: -10.218351364135742

Token 907: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.306760805164231e-05
    2. ' -' → logprob: -11.25001335144043
    3. '                       ' → logprob: -20.25001335144043
    4. '   ' → logprob: -20.25001335144043
    5. '```' → logprob: -20.75001335144043
    6. '                   ' → logprob: -21.37501335144043
    7. '                           ' → logprob: -21.50001335144043
    8. '−' → logprob: -22.50001335144043
    9. '           ' → logprob: -23.12501335144043
    10. ' ' → logprob: -23.25001335144043

Token 908: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.000000953674316
    3. '-' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.0
    5. ' -' → logprob: -16.6875
    6. '
' → logprob: -17.5
    7. '```' → logprob: -17.5
    8. '  ' → logprob: -18.8125
    9. '           ' → logprob: -19.375
    10. '       ' → logprob: -19.375

Token 909: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.23122091591358185
    2. 'or' → logprob: -1.6062209606170654
    3. '                               ' → logprob: -5.231220722198486
    4. '                           ' → logprob: -7.981220722198486
    5. '	or' → logprob: -9.856221199035645
    6. '                                   ' → logprob: -11.106221199035645
    7. '							' → logprob: -11.856221199035645
    8. '=' → logprob: -12.606221199035645
    9. '                       ' → logprob: -12.606221199035645
    10. '                            ' → logprob: -12.606221199035645

Token 910: ' dp' (ID: 21546)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.08702743053436279
    2. ' new' → logprob: -3.2120275497436523
    3. 'dp' → logprob: -3.2120275497436523
    4. ' dp' → logprob: -6.462027549743652
    5. '                               ' → logprob: -6.837027549743652
    6. '                           ' → logprob: -8.837027549743652
    7. '                             ' → logprob: -12.462027549743652
    8. '                                   ' → logprob: -12.462027549743652
    9. '                              ' → logprob: -13.212027549743652
    10. '                            ' → logprob: -13.212027549743652

Token 911: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.0009174126898869872
    2. '[state' → logprob: -7.000917434692383
    3. 'next' → logprob: -12.375917434692383
    4. '[' → logprob: -14.375917434692383
    5. '
' → logprob: -14.750917434692383
    6. '```' → logprob: -15.625917434692383
    7. '[new' → logprob: -16.000917434692383
    8. '[
' → logprob: -16.500917434692383
    9. '_next' → logprob: -16.625917434692383
    10. '(next' → logprob: -16.625917434692383

Token 912: '_state' (ID: 9479)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.2558344602584839
    2. '_state' → logprob: -1.5058344602584839
    3. 'next' → logprob: -5.755834579467773
    4. 'state' → logprob: -8.005834579467773
    5. '[state' → logprob: -8.505834579467773
    6. '_next' → logprob: -8.755834579467773
    7. '(next' → logprob: -11.505834579467773
    8. ' next' → logprob: -11.630834579467773
    9. '```' → logprob: -12.130834579467773
    10. '[' → logprob: -12.880834579467773

Token 913: '][' (ID: 2696)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.0035234561655670404
    2. '[state' → logprob: -5.878523349761963
    3. '][' → logprob: -7.253523349761963
    4. '[' → logprob: -11.753523826599121
    5. 'next' → logprob: -13.878523826599121
    6. '```' → logprob: -15.003523826599121
    7. ')[' → logprob: -15.878523826599121
    8. '(next' → logprob: -15.878523826599121
    9. '
' → logprob: -16.003522872924805
    10. '           ' → logprob: -16.003522872924805

Token 914: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.020170558243989944
    2. '[next' → logprob: -4.39517068862915
    3. 'pos' → logprob: -4.89517068862915
    4. '[pos' → logprob: -9.520170211791992
    5. ' next' → logprob: -9.770170211791992
    6. '(next' → logprob: -11.270170211791992
    7. '	next' → logprob: -13.645170211791992
    8. 'state' → logprob: -14.270170211791992
    9. '```' → logprob: -14.270170211791992
    10. '[' → logprob: -14.395170211791992

Token 915: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.89816814661026
    2. ' >' → logprob: -1.7731680870056152
    3. '>' → logprob: -2.0231680870056152
    4. ' <' → logprob: -2.3981680870056152
    5. '[next' → logprob: -2.7731680870056152
    6. ']>' → logprob: -3.7731680870056152
    7. '[' → logprob: -3.7731680870056152
    8. '                           ' → logprob: -3.8981680870056152
    9. '                               ' → logprob: -3.8981680870056152
    10. '<' → logprob: -4.773168087005615

Token 916: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0298406220972538
    2. ' >' → logprob: -3.5298407077789307
    3. '<|end|>' → logprob: -11.529840469360352
    4. '>
' → logprob: -11.654840469360352
    5. '>tag' → logprob: -11.904840469360352
    6. ' ' → logprob: -11.904840469360352
    7. '>[' → logprob: -12.029840469360352
    8. '[' → logprob: -12.029840469360352
    9. '＞' → logprob: -12.279840469360352
    10. ']>' → logprob: -12.654840469360352

Token 917: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.1269282102584839
    2. ' new' → logprob: -2.1269283294677734
    3. '_new' → logprob: -16.876928329467773
    4. '```' → logprob: -17.251928329467773
    5. '                               ' → logprob: -17.376928329467773
    6. '	new' → logprob: -18.251928329467773
    7. '                           ' → logprob: -18.376928329467773
    8. '                                   ' → logprob: -18.376928329467773
    9. '$new' → logprob: -18.751928329467773
    10. '新' → logprob: -19.251928329467773

Token 918: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.0206720617134124e-05
    2. 'cost' → logprob: -12.25001049041748
    3. '_code' → logprob: -13.62501049041748
    4. '_COST' → logprob: -13.62501049041748
    5. '_' → logprob: -13.87501049041748
    6. 'Cost' → logprob: -14.62501049041748
    7. '-cost' → logprob: -15.25001049041748
    8. '_C' → logprob: -15.62501049041748
    9. 'new' → logprob: -15.87501049041748
    10. ' cost' → logprob: -16.250009536743164

Token 919: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.907937228679657
    2. ':' → logprob: -1.4079372882843018
    3. ':
' → logprob: -1.5329372882843018
    4. '                           ' → logprob: -2.2829372882843018
    5. '=' → logprob: -4.157937049865723
    6. '):
' → logprob: -4.782937049865723
    7. '                       ' → logprob: -5.032937049865723
    8. '                                   ' → logprob: -7.157937049865723
    9. ' =' → logprob: -7.782937049865723
    10. '[' → logprob: -8.157937049865723

Token 920: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.07216385751962662
    2. '                           ' → logprob: -2.9471638202667236
    3. '                                   ' → logprob: -4.572164058685303
    4. '=' → logprob: -6.197164058685303
    5. '                       ' → logprob: -6.572164058685303
    6. ' =' → logprob: -6.572164058685303
    7. '                                       ' → logprob: -6.822164058685303
    8. '                                           ' → logprob: -8.572163581848145
    9. '```' → logprob: -9.322163581848145
    10. '                   ' → logprob: -9.697163581848145

Token 921: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.16283638775348663
    2. ' dp' → logprob: -2.4128363132476807
    3. '                               ' → logprob: -2.9128363132476807
    4. '                                   ' → logprob: -5.16283655166626
    5. '                                       ' → logprob: -7.53783655166626
    6. '                           ' → logprob: -9.912836074829102
    7. '                                           ' → logprob: -10.287836074829102
    8. '                   ' → logprob: -11.662836074829102
    9. '                                ' → logprob: -11.912836074829102
    10. '                       ' → logprob: -12.412836074829102

Token 922: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -1.0280383548888494e-06
    2. '[state' → logprob: -14.375000953674316
    3. '[' → logprob: -15.500000953674316
    4. 'next' → logprob: -16.375001907348633
    5. '[now' → logprob: -17.375001907348633
    6. '[n' → logprob: -18.125001907348633
    7. ' [' → logprob: -18.375001907348633
    8. '[token' → logprob: -18.875001907348633
    9. '[new' → logprob: -19.000001907348633
    10. '
' → logprob: -19.250001907348633

Token 923: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0003510741807986051
    2. '[next' → logprob: -8.000350952148438
    3. '[state' → logprob: -11.750350952148438
    4. 'state' → logprob: -12.750350952148438
    5. '_STATE' → logprob: -13.250350952148438
    6. 'State' → logprob: -13.875350952148438
    7. '_State' → logprob: -15.000350952148438
    8. '_next' → logprob: -15.125350952148438
    9. '                   ' → logprob: -15.500350952148438
    10. '```' → logprob: -15.500350952148438

Token 924: '][' (ID: 2696)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.012799333781003952
    2. '][' → logprob: -4.387799263000488
    3. '[state' → logprob: -8.262799263000488
    4. '[' → logprob: -11.637799263000488
    5. '                               ' → logprob: -12.262799263000488
    6. ')[' → logprob: -12.387799263000488
    7. '}[' → logprob: -12.762799263000488
    8. '```' → logprob: -12.762799263000488
    9. '                           ' → logprob: -13.512799263000488
    10. '>[' → logprob: -14.137799263000488

Token 925: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -3.023293538717553e-05
    2. '[next' → logprob: -10.625030517578125
    3. ' next' → logprob: -12.375030517578125
    4. 'pos' → logprob: -14.125030517578125
    5. '(next' → logprob: -14.625030517578125
    6. '
' → logprob: -14.875030517578125
    7. '.next' → logprob: -16.750030517578125
    8. '_next' → logprob: -16.875030517578125
    9. '][' → logprob: -17.000030517578125
    10. '	next' → logprob: -17.375030517578125

Token 926: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015245407819748
    2. '=' → logprob: -1.7015244960784912
    3. ']' → logprob: -9.82652473449707
    4. ']=' → logprob: -9.95152473449707
    5. ' =
' → logprob: -12.45152473449707
    6. ')' → logprob: -13.82652473449707
    7. '=
' → logprob: -14.20152473449707
    8. ' =)' → logprob: -14.57652473449707
    9. '<|end|>' → logprob: -14.70152473449707
    10. '                               ' → logprob: -14.82652473449707

Token 927: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. '=

' → logprob: -17.313261032104492
    4. '=new' → logprob: -17.438261032104492
    5. '=
' → logprob: -17.688261032104492
    6. '＝' → logprob: -17.688261032104492
    7. '_=' → logprob: -18.813261032104492
    8. ' =
' → logprob: -18.813261032104492
    9. '                               ' → logprob: -19.063261032104492
    10. '.=' → logprob: -19.313261032104492

Token 928: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.10020678490400314
    2. ' new' → logprob: -2.3502068519592285
    3. '                               ' → logprob: -16.72520637512207
    4. '_new' → logprob: -18.22520637512207
    5. '                                   ' → logprob: -18.35020637512207
    6. '[new' → logprob: -18.60020637512207
    7. '	new' → logprob: -18.72520637512207
    8. 'New' → logprob: -19.22520637512207
    9. '                                ' → logprob: -19.22520637512207
    10. '$new' → logprob: -19.35020637512207

Token 929: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.9292415749514475e-05
    2. 'cost' → logprob: -10.250039100646973
    3. '_state' → logprob: -13.000039100646973
    4. '_COST' → logprob: -15.000039100646973
    5. 'Cost' → logprob: -15.125039100646973
    6. '_code' → logprob: -15.125039100646973
    7. '_token' → logprob: -15.375039100646973
    8. '_' → logprob: -15.500039100646973
    9. '_
' → logprob: -16.12504005432129
    10. '
' → logprob: -16.87504005432129

Token 930: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 931: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008507614023983479
    2. '```' → logprob: -5.75850772857666
    3. '   ' → logprob: -5.88350772857666
    4. '
' → logprob: -6.75850772857666
    5. ')' → logprob: -7.50850772857666
    6. '           ' → logprob: -8.13350772857666
    7. '               ' → logprob: -9.63350772857666
    8. 'for' → logprob: -9.63350772857666
    9. ')
' → logprob: -9.75850772857666
    10. '                               ' → logprob: -9.88350772857666

Token 932: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.372377872467041
    2. '       ' → logprob: -1.372377872467041
    3. 'answer' → logprob: -3.122377872467041
    4. '   ' → logprob: -5.372377872467041
    5. '
' → logprob: -5.497377872467041
    6. 'ans' → logprob: -6.622377872467041
    7. '```' → logprob: -6.622377872467041
    8. 'min' → logprob: -7.372377872467041
    9. 'final' → logprob: -8.247377395629883
    10. 'max' → logprob: -8.247377395629883

Token 933: ' Find' (ID: 9764)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.33772921562194824
    2. 'answer' → logprob: -1.3377292156219482
    3. 'res' → logprob: -4.337729454040527
    4. 'ans' → logprob: -4.587729454040527
    5. 'min' → logprob: -7.087729454040527
    6. '       ' → logprob: -9.962729454040527
    7. 'print' → logprob: -10.837729454040527
    8. '#' → logprob: -12.087729454040527
    9. 'best' → logprob: -12.462729454040527
    10. ' result' → logprob: -12.712729454040527

Token 934: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04662151634693146
    2. 'answer' → logprob: -3.546621561050415
    3. 'result' → logprob: -4.546621322631836
    4. ' min' → logprob: -5.796621322631836
    5. 'ans' → logprob: -6.421621322631836
    6. '   ' → logprob: -7.796621322631836
    7. 'res' → logprob: -7.796621322631836
    8. 'best' → logprob: -8.546621322631836
    9. ' answer' → logprob: -9.296621322631836
    10. 'minimum' → logprob: -9.546621322631836

Token 935: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7085877656936646
    2. 'result' → logprob: -1.7085877656936646
    3. '_cost' → logprob: -2.458587646484375
    4. ' cost' → logprob: -2.583587646484375
    5. '_moves' → logprob: -3.333587646484375
    6. 'answer' → logprob: -3.458587646484375
    7. 'moves' → logprob: -3.458587646484375
    8. '_result' → logprob: -3.708587646484375
    9. ' result' → logprob: -4.208587646484375
    10. '_answer' → logprob: -5.458587646484375

Token 936: ' to' (ID: 316)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.3785717785358429
    2. 'result' → logprob: -1.3785717487335205
    3. 'min' → logprob: -3.2535717487335205
    4. 'ans' → logprob: -4.8785719871521
    5. '```' → logprob: -5.5035719871521
    6. ' =' → logprob: -5.6285719871521
    7. '=' → logprob: -6.1285719871521
    8. '       ' → logprob: -6.5035719871521
    9. '=min' → logprob: -6.5035719871521
    10. 'for' → logprob: -6.6285719871521

Token 937: ' visit' (ID: 4030)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6557733416557312
    2. 'min' → logprob: -1.405773401260376
    3. 'cover' → logprob: -2.780773401260376
    4. 'print' → logprob: -3.030773401260376
    5. '[max' → logprob: -3.530773401260376
    6. '(max' → logprob: -3.905773401260376
    7. 'complete' → logprob: -4.030773162841797
    8. '[min' → logprob: -4.530773162841797
    9. 'visit' → logprob: -4.655773162841797
    10. 'state' → logprob: -5.155773162841797

Token 938: ' all' (ID: 722)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.38569435477256775
    2. 'all' → logprob: -1.3856943845748901
    3. '(max' → logprob: -2.8856942653656006
    4. 'state' → logprob: -5.26069450378418
    5. '[max' → logprob: -6.38569450378418
    6. 'range' → logprob: -6.63569450378418
    7. 'full' → logprob: -6.63569450378418
    8. 'dp' → logprob: -6.88569450378418
    9. '(' → logprob: -7.01069450378418
    10. '
' → logprob: -7.63569450378418

Token 939: ' dirty' (ID: 32042)
  Prédit: 'dirty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirty' → logprob: -0.03832317888736725
    2. 'visited' → logprob: -4.163323402404785
    3. ' dirty' → logprob: -4.788323402404785
    4. '_dirty' → logprob: -5.413323402404785
    5. '       ' → logprob: -5.663323402404785
    6. 'state' → logprob: -6.288323402404785
    7. '_state' → logprob: -7.288323402404785
    8. 'clean' → logprob: -7.663323402404785
    9. '   ' → logprob: -7.663323402404785
    10. ' state' → logprob: -8.288323402404785

Token 940: ' tiles' (ID: 33001)
  Prédit: 'tiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tiles' → logprob: -0.16080904006958008
    2. '_tiles' → logprob: -1.91080904006958
    3. ' tiles' → logprob: -7.91080904006958
    4. 'state' → logprob: -9.660808563232422
    5. '_state' → logprob: -9.785808563232422
    6. '       ' → logprob: -10.160808563232422
    7. 'tile' → logprob: -10.160808563232422
    8. '   ' → logprob: -11.910808563232422
    9. '[' → logprob: -12.535808563232422
    10. '_states' → logprob: -12.785808563232422

Token 941: ' (' (ID: 350)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7695366740226746
    2. '       ' → logprob: -1.1445367336273193
    3. 'min' → logprob: -2.2695367336273193
    4. 'answer' → logprob: -3.0195367336273193
    5. '```' → logprob: -3.0195367336273193
    6. 'ans' → logprob: -5.39453649520874
    7. 'final' → logprob: -5.39453649520874
    8. 'print' → logprob: -6.26953649520874
    9. '``' → logprob: -6.26953649520874
    10. 'res' → logprob: -7.14453649520874

Token 942: 'all' (ID: 586)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07065103203058243
    2. '(max' → logprob: -2.945651054382324
    3. 'range' → logprob: -4.945651054382324
    4. '[max' → logprob: -5.570651054382324
    5. 'dp' → logprob: -6.195651054382324
    6. '
' → logprob: -7.070651054382324
    7. '(' → logprob: -7.320651054382324
    8. '(dp' → logprob: -8.445651054382324
    9. 'state' → logprob: -8.695651054382324
    10. ' max' → logprob: -8.945651054382324

Token 943: ' bits' (ID: 18189)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1521170735359192
    2. 'bits' → logprob: -2.5271170139312744
    3. '1' → logprob: -4.0271172523498535
    4. ' visited' → logprob: -4.1521172523498535
    5. ' bits' → logprob: -4.5271172523498535
    6. ' ones' → logprob: -5.1521172523498535
    7. '_bits' → logprob: -5.4021172523498535
    8. ')' → logprob: -6.6521172523498535
    9. 'dirty' → logprob: -6.9021172523498535
    10. 'ones' → logprob: -7.0271172523498535

Token 944: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.6067479252815247
    2. ' in' → logprob: -1.6067478656768799
    3. 'set' → logprob: -1.9817478656768799
    4. '1' → logprob: -3.23174786567688
    5. '_set' → logprob: -3.60674786567688
    6. ' ==' → logprob: -3.98174786567688
    7. 'in' → logprob: -4.481748104095459
    8. '==' → logprob: -4.856748104095459
    9. ' of' → logprob: -5.856748104095459
    10. '=' → logprob: -6.106748104095459

Token 945: ')
' (ID: 446)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10131704062223434
    2. ')' → logprob: -3.6013169288635254
    3. '       ' → logprob: -3.6013169288635254
    4. '[state' → logprob: -4.351316928863525
    5. '[' → logprob: -4.601316928863525
    6. '```' → logprob: -5.476316928863525
    7. ' at' → logprob: -5.726316928863525
    8. 'in' → logprob: -5.851316928863525
    9. ')
' → logprob: -6.476316928863525
    10. ',' → logprob: -6.851316928863525

Token 946: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9654525518417358
    2. 'result' → logprob: -0.9654525518417358
    3. 'answer' → logprob: -2.2154526710510254
    4. 'min' → logprob: -2.2154526710510254
    5. '```' → logprob: -4.090452671051025
    6. 'ans' → logprob: -6.715452671051025
    7. '``' → logprob: -7.590452671051025
    8. 'res' → logprob: -7.715452671051025
    9. '
' → logprob: -7.840452671051025
    10. 'final' → logprob: -8.465452194213867

Token 947: ' ans' (ID: 3345)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.929570734500885
    2. 'result' → logprob: -1.1795706748962402
    3. 'res' → logprob: -2.1795706748962402
    4. 'answer' → logprob: -2.1795706748962402
    5. '```' → logprob: -2.9295706748962402
    6. '       ' → logprob: -4.67957067489624
    7. 'ans' (adapté à ' ans') → logprob: -5.30457067489624
    8. '``' → logprob: -6.55457067489624
    9. ' min' → logprob: -7.05457067489624
    10. 'final' → logprob: -7.30457067489624

Token 948: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3874032199382782
    2. '=' → logprob: -1.1374032497406006
    3. '[' → logprob: -8.51240348815918
    4. '_' → logprob: -9.26240348815918
    5. '```' → logprob: -9.38740348815918
    6. '   ' → logprob: -10.13740348815918
    7. 's' → logprob: -10.76240348815918
    8. ' =
' → logprob: -11.51240348815918
    9. '_states' → logprob: -11.51240348815918
    10. '_idx' → logprob: -11.51240348815918

Token 949: ' -' (ID: 533)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.003184959525242448
    2. ' min' → logprob: -5.753184795379639
    3. 'float' → logprob: -12.253185272216797
    4. 'dp' → logprob: -13.753185272216797
    5. '   ' → logprob: -14.503185272216797
    6. '-min' → logprob: -15.378185272216797
    7. '	min' → logprob: -15.503185272216797
    8. '
' → logprob: -15.628185272216797
    9. '[min' → logprob: -15.628185272216797
    10. '(min' → logprob: -16.753185272216797

Token 950: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'dp' → logprob: -15.625
    3. '2' → logprob: -15.875
    4. 'max' → logprob: -17.625
    5. '```' → logprob: -18.25
    6. '-' → logprob: -18.375
    7. 'float' → logprob: -18.625
    8. ' ' → logprob: -19.625
    9. '(' → logprob: -19.625
    10. '10' → logprob: -19.75

Token 951: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5748220086097717
    2. '
' → logprob: -1.074821949005127
    3. ' for' → logprob: -2.574821949005127
    4. '       ' → logprob: -3.949821949005127
    5. '        
' → logprob: -9.199822425842285
    6. '```' → logprob: -9.449822425842285
    7. ' 
' → logprob: -10.324822425842285
    8. ')
' → logprob: -10.574822425842285
    9. '0' → logprob: -10.574822425842285
    10. ',' → logprob: -10.949822425842285

Token 952: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9720381498336792
    2. ' for' → logprob: -0.9720381498336792
    3. 'for' → logprob: -1.5970381498336792
    4. '       ' → logprob: -3.2220382690429688
    5. '```' → logprob: -7.347038269042969
    6. '        
' → logprob: -9.972038269042969
    7. '           ' → logprob: -9.972038269042969
    8. ' 
' → logprob: -9.972038269042969
    9. '``' → logprob: -10.222038269042969
    10. '<|end|>' → logprob: -10.222038269042969

Token 953: ' final' (ID: 1721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025783570483326912
    2. '       ' → logprob: -4.150783538818359
    3. ' for' → logprob: -4.650783538818359
    4. 'max' → logprob: -9.27578353881836
    5. '```' → logprob: -10.65078353881836
    6. '``' → logprob: -12.02578353881836
    7. '           ' → logprob: -12.15078353881836
    8. 'full' → logprob: -12.40078353881836
    9. '   ' → logprob: -12.52578353881836
    10. '
' → logprob: -12.77578353881836

Token 954: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.016779599711298943
    2. '_states' → logprob: -4.51677942276001
    3. 'state' → logprob: -5.39177942276001
    4. '_mask' → logprob: -7.51677942276001
    5. '_' → logprob: -7.89177942276001
    6. '_max' → logprob: -9.766779899597168
    7. 'for' → logprob: -9.891779899597168
    8. ' =' → logprob: -11.141779899597168
    9. ' state' → logprob: -11.141779899597168
    10. ')' → logprob: -11.516779899597168

Token 955: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014409303665161
    2. ' =' → logprob: -1.7014409303665161
    3. '=max' → logprob: -11.201440811157227
    4. '```' → logprob: -11.826440811157227
    5. ')' → logprob: -13.201440811157227
    6. '==' → logprob: -13.826440811157227
    7. '[' → logprob: -14.326440811157227
    8. ' ==' → logprob: -14.576440811157227
    9. '<|end|>' → logprob: -14.576440811157227
    10. ']' → logprob: -14.826440811157227

Token 956: ' max' (ID: 2999)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.3138039708137512
    2. 'max' → logprob: -1.3138039112091064
    3. '(' → logprob: -7.8138041496276855
    4. ' (' → logprob: -9.188803672790527
    5. ' max' → logprob: -10.688803672790527
    6. '[max' → logprob: -11.938803672790527
    7. '`' → logprob: -13.438803672790527
    8. '
' → logprob: -13.688803672790527
    9. '   ' → logprob: -13.938803672790527
    10. '```' → logprob: -14.313803672790527

Token 957: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -3.869639476761222e-05
    2. 'state' → logprob: -10.375039100646973
    3. '_STATE' → logprob: -12.125039100646973
    4. 'n' → logprob: -14.250039100646973
    5. '-state' → logprob: -15.250039100646973
    6. 'max' → logprob: -15.375039100646973
    7. '```' → logprob: -15.625039100646973
    8. 'STATE' → logprob: -15.750039100646973
    9. '-' → logprob: -16.125038146972656
    10. '1' → logprob: -17.375038146972656

Token 958: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01815415732562542
    2. ' -' → logprob: -4.018154144287109
    3. '1' → logprob: -12.39315414428711
    4. '```' → logprob: -15.89315414428711
    5. '−' → logprob: -17.51815414428711
    6. '[' → logprob: -17.89315414428711
    7. '–' → logprob: -18.01815414428711
    8. ' ' → logprob: -19.14315414428711
    9. '   ' → logprob: -19.14315414428711
    10. '
' → logprob: -19.39315414428711

Token 959: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -14.750000953674316
    4. '<|end|>' → logprob: -16.750001907348633
    5. '   ' → logprob: -18.875001907348633
    6. '
' → logprob: -19.125001907348633
    7. '۱' → logprob: -19.375001907348633
    8. '...' → logprob: -19.500001907348633
    9. '``' → logprob: -19.875001907348633
    10. '`' → logprob: -20.875001907348633

Token 960: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.625000953674316
    3. ' ' → logprob: -16.25
    4. '<|end|>' → logprob: -16.75
    5. '   ' → logprob: -20.125
    6. '۱' → logprob: -20.25
    7. '``' → logprob: -20.375
    8. '...' → logprob: -20.625
    9. '
' → logprob: -20.75
    10. '`' → logprob: -20.75

Token 961: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07678142935037613
    2. '
' → logprob: -2.9517815113067627
    3. ' for' → logprob: -4.076781272888184
    4. '       ' → logprob: -5.451781272888184
    5. '        
' → logprob: -7.951781272888184
    6. '<|end|>' → logprob: -10.951781272888184
    7. '	for' → logprob: -11.951781272888184
    8. '    
' → logprob: -12.326781272888184
    9. '   ' → logprob: -12.326781272888184
    10. '
' → logprob: -12.576781272888184

Token 962: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19007456302642822
    2. ' for' → logprob: -2.1900744438171387
    3. '       ' → logprob: -2.9400744438171387
    4. '
' → logprob: -4.815074443817139
    5. '```' → logprob: -9.190074920654297
    6. '   ' → logprob: -10.190074920654297
    7. '``' → logprob: -10.690074920654297
    8. '<|end|>' → logprob: -10.690074920654297
    9. '	for' → logprob: -11.190074920654297
    10. '        
' → logprob: -11.315074920654297

Token 963: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0027128576766699553
    2. ' for' → logprob: -6.002712726593018
    3. '
' → logprob: -8.752713203430176
    4. '       ' → logprob: -9.502713203430176
    5. '```' → logprob: -12.627713203430176
    6. '``' → logprob: -14.877713203430176
    7. '        
' → logprob: -15.252713203430176
    8. '	for' → logprob: -15.252713203430176
    9. '   ' → logprob: -15.377713203430176
    10. '           ' → logprob: -16.00271224975586

Token 964: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.011048289015889168
    2. ' pos' → logprob: -4.511048316955566
    3. 'end' → logprob: -15.636048316955566
    4. 'i' → logprob: -15.761048316955566
    5. 'next' → logprob: -16.13604736328125
    6. 'last' → logprob: -17.26104736328125
    7. '   ' → logprob: -17.76104736328125
    8. 'j' → logprob: -18.26104736328125
    9. '	pos' → logprob: -18.63604736328125
    10. ' next' → logprob: -19.01104736328125

Token 965: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020542588084936142
    2. 'in' → logprob: -3.895542621612549
    3. '```' → logprob: -15.52054214477539
    4. '[' → logprob: -15.77054214477539
    5. ' ' → logprob: -16.39554214477539
    6. '
' → logprob: -16.77054214477539
    7. 'In' → logprob: -16.89554214477539
    8. 'n' → logprob: -17.39554214477539
    9. ',' → logprob: -17.39554214477539
    10. '	in' → logprob: -17.52054214477539

Token 966: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078997299075127
    2. ' range' → logprob: -5.5040788650512695
    3. '(range' → logprob: -14.75407886505127
    4. 'in' → logprob: -16.254079818725586
    5. '
' → logprob: -16.379079818725586
    6. '   ' → logprob: -18.504079818725586
    7. ' in' → logprob: -19.004079818725586
    8. '	range' → logprob: -19.254079818725586
    9. '_range' → logprob: -19.379079818725586
    10. 'ran' → logprob: -19.879079818725586

Token 967: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11534327268600464
    2. '1' → logprob: -2.7403433322906494
    3. '(n' → logprob: -3.1153433322906494
    4. 'n' → logprob: -10.74034309387207
    5. ' (' → logprob: -13.11534309387207
    6. '   ' → logprob: -13.86534309387207
    7. '(max' → logprob: -13.86534309387207
    8. '(final' → logprob: -14.36534309387207
    9. '(
' → logprob: -14.49034309387207
    10. 'final' → logprob: -14.61534309387207

Token 968: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.943783253314905e-05
    2. '1' → logprob: -9.875059127807617
    3. '(n' → logprob: -12.125059127807617
    4. ' n' → logprob: -13.000059127807617
    5. '0' → logprob: -16.375059127807617
    6. ')n' → logprob: -17.000059127807617
    7. '[n' → logprob: -17.375059127807617
    8. '(' → logprob: -17.500059127807617
    9. '
' → logprob: -17.500059127807617
    10. 'max' → logprob: -17.750059127807617

Token 969: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005943780997768044
    2. ',n' → logprob: -7.500594615936279
    3. ',
' → logprob: -10.750594139099121
    4. ',max' → logprob: -12.000594139099121
    5. '(n' → logprob: -12.375594139099121
    6. ' ,' → logprob: -12.500594139099121
    7. '           ' → logprob: -13.500594139099121
    8. '):
' → logprob: -14.625594139099121
    9. ',len' → logprob: -14.625594139099121
    10. ')' → logprob: -14.625594139099121

Token 970: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.080963092041202e-06
    2. ' n' → logprob: -12.250004768371582
    3. '(n' → logprob: -15.125004768371582
    4. '
' → logprob: -18.5000057220459
    5. 'max' → logprob: -19.8750057220459
    6. '	n' → logprob: -20.1250057220459
    7. '[n' → logprob: -20.2500057220459
    8. '```' → logprob: -20.2500057220459
    9. ')n' → logprob: -20.7500057220459
    10. '   ' → logprob: -20.7500057220459

Token 971: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.093505099765025e-05
    2. ' +' → logprob: -11.500020980834961
    3. '+n' → logprob: -11.750020980834961
    4. ')+' → logprob: -13.750020980834961
    5. '+
' → logprob: -14.250020980834961
    6. '```' → logprob: -14.500020980834961
    7. '):
' → logprob: -15.375020980834961
    8. '()+' → logprob: -16.00002098083496
    9. '+[' → logprob: -17.00002098083496
    10. '+(' → logprob: -17.12502098083496

Token 972: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12694847583770752
    2. '+' → logprob: -2.126948356628418
    3. '```' → logprob: -11.251948356628418
    4. 'n' → logprob: -13.501948356628418
    5. ')+' → logprob: -13.626948356628418
    6. ')' → logprob: -13.751948356628418
    7. ']+' → logprob: -14.126948356628418
    8. ' ' → logprob: -14.626948356628418
    9. '+
' → logprob: -14.626948356628418
    10. ' +' → logprob: -14.751948356628418

Token 973: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17076756060123444
    2. ':
' → logprob: -1.9207675457000732
    3. '):' → logprob: -5.670767784118652
    4. ':' → logprob: -5.795767784118652
    5. '           ' → logprob: -6.295767784118652
    6. ']:
' → logprob: -7.295767784118652
    7. '       ' → logprob: -7.420767784118652
    8. '```' → logprob: -7.795767784118652
    9. '   ' → logprob: -8.920767784118652
    10. '               ' → logprob: -9.170767784118652

Token 974: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020963724236935377
    2. '   ' → logprob: -6.627096176147461
    3. ' if' → logprob: -8.002096176147461
    4. '               ' → logprob: -9.002096176147461
    5. 'if' → logprob: -9.252096176147461
    6. '       ' → logprob: -9.252096176147461
    7. '```' → logprob: -9.377096176147461
    8. '                   ' → logprob: -11.252096176147461
    9. '<|end|>' → logprob: -12.002096176147461
    10. '          ' → logprob: -13.002096176147461

Token 975: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1464952826499939
    2. ' if' → logprob: -2.3964953422546387
    3. '               ' → logprob: -3.2714953422546387
    4. '           ' → logprob: -5.396495342254639
    5. '                   ' → logprob: -6.646495342254639
    6. '   ' → logprob: -7.646495342254639
    7. 'cost' → logprob: -7.771495342254639
    8. 'ans' → logprob: -8.64649486541748
    9. '```' → logprob: -9.02149486541748
    10. 'current' → logprob: -9.02149486541748

Token 976: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02325037121772766
    2. ' dp' → logprob: -3.7732503414154053
    3. '(dp' → logprob: -12.648250579833984
    4. '           ' → logprob: -13.898250579833984
    5. '	dp' → logprob: -14.773250579833984
    6. 'ans' → logprob: -16.148250579833984
    7. '               ' → logprob: -16.523250579833984
    8. '   ' → logprob: -16.648250579833984
    9. '                   ' → logprob: -16.773250579833984
    10. '_dp' → logprob: -17.398250579833984

Token 977: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009132515988312662
    2. 'final' → logprob: -7.000913143157959
    3. '[max' → logprob: -14.250913619995117
    4. '```' → logprob: -14.750913619995117
    5. '[state' → logprob: -15.250913619995117
    6. ' [' → logprob: -16.500913619995117
    7. 'max' → logprob: -16.750913619995117
    8. '[
' → logprob: -16.750913619995117
    9. '
' → logprob: -17.000913619995117
    10. '   ' → logprob: -17.125913619995117

Token 978: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -3.128163257315464e-07
    2. ' final' → logprob: -15.375
    3. '(final' → logprob: -17.125
    4. 'max' → logprob: -18.125
    5. 'full' → logprob: -21.25
    6. '[' → logprob: -21.625
    7. '
' → logprob: -22.375
    8. 'dp' → logprob: -23.0
    9. '```' → logprob: -23.625
    10. '   ' → logprob: -23.875

Token 979: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.3782830137643032e-05
    2. 'state' → logprob: -11.25001335144043
    3. 'State' → logprob: -16.12501335144043
    4. '_STATE' → logprob: -16.25001335144043
    5. '[state' → logprob: -16.37501335144043
    6. '_' → logprob: -16.50001335144043
    7. '_states' → logprob: -16.75001335144043
    8. '
' → logprob: -16.75001335144043
    9. ' state' → logprob: -17.12501335144043
    10. '```' → logprob: -17.12501335144043

Token 980: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6932187676429749
    2. '[pos' → logprob: -0.6932187676429749
    3. '[' → logprob: -9.943219184875488
    4. 'pos' → logprob: -12.068219184875488
    5. '[state' → logprob: -12.693219184875488
    6. ')[' → logprob: -12.818219184875488
    7. ' ][' → logprob: -13.068219184875488
    8. '[position' → logprob: -13.693219184875488
    9. '```' → logprob: -13.818219184875488
    10. '"][' → logprob: -13.943219184875488

Token 981: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.9361264946837764e-07
    2. ' pos' → logprob: -16.25
    3. '[pos' → logprob: -19.875
    4. '(pos' → logprob: -20.875
    5. '	pos' → logprob: -21.25
    6. '_pos' → logprob: -22.5
    7. '.pos' → logprob: -22.625
    8. '```' → logprob: -22.875
    9. 'poss' → logprob: -23.5
    10. '
' → logprob: -23.5

Token 982: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028291272465139627
    2. ']!=' → logprob: -5.877829074859619
    3. ' !=' → logprob: -11.627829551696777
    4. '!=' → logprob: -11.877829551696777
    5. '!=-' → logprob: -12.127829551696777
    6. ' ]' → logprob: -14.002829551696777
    7. ']>' → logprob: -14.377829551696777
    8. ')' → logprob: -15.002829551696777
    9. ']==' → logprob: -15.627829551696777
    10. '               ' → logprob: -15.877829551696777

Token 983: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.25307586789131165
    2. ' !=' → logprob: -1.7530758380889893
    3. '!=-' → logprob: -3.0030758380889893
    4. '>' → logprob: -8.50307559967041
    5. ')' → logprob: -9.00307559967041
    6. '<' → logprob: -9.25307559967041
    7. ']!=' → logprob: -9.25307559967041
    8. '<>' → logprob: -10.37807559967041
    9. '```' → logprob: -10.50307559967041
    10. '!==' → logprob: -10.87807559967041

Token 984: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.8624639324116288e-06
    2. ' -' → logprob: -13.250001907348633
    3. '```' → logprob: -20.000001907348633
    4. '   ' → logprob: -20.875001907348633
    5. '−' → logprob: -21.375001907348633
    6. '0' → logprob: -22.000001907348633
    7. ' ' → logprob: -23.250001907348633
    8. '  ' → logprob: -25.000001907348633
    9. '``' → logprob: -25.250001907348633
    10. '
' → logprob: -25.250001907348633

Token 985: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.500000953674316
    3. '```' → logprob: -15.125000953674316
    4. '2' → logprob: -18.0
    5. ' ' → logprob: -18.0625
    6. 'inf' → logprob: -18.3125
    7. 'float' → logprob: -18.375
    8. '999' → logprob: -18.5
    9. '``' → logprob: -18.875
    10. '4' → logprob: -19.375

Token 986: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1049354076385498
    2. '               ' → logprob: -2.60493540763855
    3. 'and' → logprob: -4.479935646057129
    4. ':' → logprob: -5.104935646057129
    5. ':
' → logprob: -5.354935646057129
    6. '                               ' → logprob: -6.479935646057129
    7. '           ' → logprob: -7.479935646057129
    8. '                       ' → logprob: -7.979935646057129
    9. '                   ' → logprob: -8.104935646057129
    10. '                           ' → logprob: -8.229935646057129

Token 987: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004965558764524758
    2. ' if' → logprob: -8.375496864318848
    3. ' and' → logprob: -9.375496864318848
    4. '           ' → logprob: -10.000496864318848
    5. '```' → logprob: -10.125496864318848
    6. '                   ' → logprob: -10.250496864318848
    7. '                               ' → logprob: -11.250496864318848
    8. 'if' → logprob: -11.375496864318848
    9. '                       ' → logprob: -11.875496864318848
    10. '                           ' → logprob: -12.375496864318848

Token 988: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5853018164634705
    2. 'if' (adapté à ' if') → logprob: -1.7103018760681152
    3. ' if' → logprob: -1.7103018760681152
    4. ' ans' → logprob: -2.8353018760681152
    5. '                   ' → logprob: -3.8353018760681152
    6. '               ' → logprob: -7.710301876068115
    7. '                       ' → logprob: -8.460301399230957
    8. '                                   ' → logprob: -8.835301399230957
    9. '                               ' → logprob: -9.085301399230957
    10. '                           ' → logprob: -9.585301399230957

Token 989: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.048605531454086304
    2. ' ans' → logprob: -3.048605442047119
    3. '(ans' → logprob: -11.298605918884277
    4. '                   ' → logprob: -12.298605918884277
    5. '               ' → logprob: -13.923605918884277
    6. '	ans' → logprob: -15.673605918884277
    7. '_ans' → logprob: -16.17360496520996
    8. '                       ' → logprob: -17.79860496520996
    9. '                           ' → logprob: -18.17360496520996
    10. 'Ans' → logprob: -18.29860496520996

Token 990: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2936480641365051
    2. ' ==' → logprob: -1.6686480045318604
    3. '==' → logprob: -2.9186480045318604
    4. 'is' → logprob: -4.7936482429504395
    5. '==-' → logprob: -5.7936482429504395
    6. '=' → logprob: -8.543647766113281
    7. '===' → logprob: -8.793647766113281
    8. ' =' → logprob: -10.043647766113281
    9. ' ' → logprob: -10.168647766113281
    10. '>' → logprob: -10.168647766113281

Token 991: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.306760805164231e-05
    2. ' -' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.62501335144043
    4. 'dp' → logprob: -20.62501335144043
    5. ' ' → logprob: -20.87501335144043
    6. '```' → logprob: -21.62501335144043
    7. '\-' → logprob: -21.87501335144043
    8. '−' → logprob: -22.12501335144043
    9. '  ' → logprob: -23.00001335144043
    10. 'None' → logprob: -24.12501335144043

Token 992: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.739826181321405e-05
    2. '-' → logprob: -10.00004768371582
    3. 'float' → logprob: -14.37504768371582
    4. '2' → logprob: -14.50004768371582
    5. ' -' → logprob: -16.00004768371582
    6. ' ' → logprob: -16.25004768371582
    7. '   ' → logprob: -16.25004768371582
    8. '```' → logprob: -16.37504768371582
    9. 'inf' → logprob: -16.75004768371582
    10. '11' → logprob: -16.75004768371582

Token 993: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.016159415245056152
    2. 'or' → logprob: -4.141159534454346
    3. '                   ' → logprob: -9.266159057617188
    4. '               ' → logprob: -11.641159057617188
    5. '                               ' → logprob: -12.141159057617188
    6. '                       ' → logprob: -12.391159057617188
    7. '                           ' → logprob: -12.641159057617188
    8. '	or' → logprob: -12.891159057617188
    9. '                                   ' → logprob: -13.391159057617188
    10. '=' → logprob: -13.891159057617188

Token 994: ' ans' (ID: 3345)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018264085054397583
    2. ' dp' → logprob: -4.018264293670654
    3. 'ans' → logprob: -9.143263816833496
    4. ' ans' → logprob: -12.643263816833496
    5. '               ' → logprob: -13.768263816833496
    6. '                   ' → logprob: -14.018263816833496
    7. '	dp' → logprob: -14.143263816833496
    8. '(dp' → logprob: -14.518263816833496
    9. '           ' → logprob: -15.018263816833496
    10. '                                   ' → logprob: -16.518264770507812

Token 995: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.003179975086823106
    2. ' >' → logprob: -5.753180027008057
    3. '>d' → logprob: -14.878179550170898
    4. '>
' → logprob: -15.378179550170898
    5. '                               ' → logprob: -15.378179550170898
    6. '                           ' → logprob: -15.753179550170898
    7. '```' → logprob: -16.0031795501709
    8. ' ' → logprob: -16.1281795501709
    9. '                   ' → logprob: -16.3781795501709
    10. '>b' → logprob: -16.5031795501709

Token 996: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018151111900806427
    2. ' dp' → logprob: -4.01815128326416
    3. '               ' → logprob: -14.51815128326416
    4. '                   ' → logprob: -14.76815128326416
    5. '	dp' → logprob: -16.268150329589844
    6. '(dp' → logprob: -16.643150329589844
    7. '_dp' → logprob: -17.143150329589844
    8. '           ' → logprob: -17.268150329589844
    9. '                       ' → logprob: -17.768150329589844
    10. '                           ' → logprob: -18.268150329589844

Token 997: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023249205201864243
    2. 'final' → logprob: -3.7732491493225098
    3. '[state' → logprob: -13.648249626159668
    4. '[next' → logprob: -14.023249626159668
    5. '
' → logprob: -14.523249626159668
    6. '```' → logprob: -14.523249626159668
    7. ' final' → logprob: -15.398249626159668
    8. '[
' → logprob: -15.773249626159668
    9. '_final' → logprob: -16.02324867248535
    10. '(final' → logprob: -16.64824867248535

Token 998: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: 0.0
    2. ' final' → logprob: -18.125
    3. '(final' → logprob: -19.0
    4. '[' → logprob: -20.5
    5. 'full' → logprob: -22.125
    6. '```' → logprob: -22.375
    7. 'max' → logprob: -22.5
    8. '_final' → logprob: -22.625
    9. '.final' → logprob: -22.75
    10. 'fin' → logprob: -23.625

Token 999: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0005336135509423912
    2. 'final' → logprob: -7.625533580780029
    3. '[' → logprob: -10.625534057617188
    4. 'state' → logprob: -10.875534057617188
    5. '_final' → logprob: -13.750534057617188
    6. 'State' → logprob: -14.000534057617188
    7. '_STATE' → logprob: -16.375534057617188
    8. '```' → logprob: -16.500534057617188
    9. ' final' → logprob: -17.000534057617188
    10. 'STATE' → logprob: -17.125534057617188

Token 1000: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19943885505199432
    2. '[state' → logprob: -1.9494388103485107
    3. '][' → logprob: -3.3244388103485107
    4. '[pos' → logprob: -6.69943904876709
    5. 'final' → logprob: -6.82443904876709
    6. '```' → logprob: -10.19943904876709
    7. 'state' → logprob: -10.32443904876709
    8. '[next' → logprob: -10.32443904876709
    9. '[][' → logprob: -12.07443904876709
    10. '
' → logprob: -12.07443904876709

Token 1001: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.054500666621607e-06
    2. '[pos' → logprob: -12.75000286102295
    3. '
' → logprob: -16.375003814697266
    4. 'final' → logprob: -17.500003814697266
    5. ' pos' → logprob: -17.625003814697266
    6. '```' → logprob: -18.125003814697266
    7. '	pos' → logprob: -19.125003814697266
    8. '[' → logprob: -19.250003814697266
    9. '][' → logprob: -19.500003814697266
    10. 'p' → logprob: -19.500003814697266

Token 1002: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6125956773757935
    2. ':' → logprob: -1.1125956773757935
    3. '+' → logprob: -2.612595558166504
    4. '                   ' → logprob: -4.237595558166504
    5. '):
' → logprob: -4.237595558166504
    6. '               ' → logprob: -5.112595558166504
    7. '                               ' → logprob: -5.112595558166504
    8. ']:
' → logprob: -5.737595558166504
    9. '                           ' → logprob: -5.987595558166504
    10. '                       ' → logprob: -5.987595558166504

Token 1003: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22041982412338257
    2. ' dp' → logprob: -1.9704198837280273
    3. 'dp' → logprob: -2.9704198837280273
    4. '                       ' → logprob: -5.720419883728027
    5. '=' → logprob: -7.220419883728027
    6. ' =' → logprob: -7.220419883728027
    7. '               ' → logprob: -7.470419883728027
    8. '                               ' → logprob: -7.470419883728027
    9. '(dp' → logprob: -8.095419883728027
    10. ' ans' → logprob: -8.220419883728027

Token 1004: ' ans' (ID: 3345)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0523621141910553
    2. 'ans' (adapté à ' ans') → logprob: -3.3023622035980225
    3. ' dp' → logprob: -4.302361965179443
    4. ' ans' → logprob: -7.552361965179443
    5. '                   ' → logprob: -8.802362442016602
    6. '                       ' → logprob: -13.177362442016602
    7. '                           ' → logprob: -14.052362442016602
    8. '	dp' → logprob: -14.177362442016602
    9. '               ' → logprob: -14.302362442016602
    10. '_dp' → logprob: -14.427362442016602

Token 1005: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011727249948307872
    2. ' =' → logprob: -6.7511725425720215
    3. '=
' → logprob: -13.00117301940918
    4. '＝' → logprob: -15.75117301940918
    5. '=

' → logprob: -16.75117301940918
    6. '=int' → logprob: -18.00117301940918
    7. '=}' → logprob: -18.50117301940918
    8. '.=' → logprob: -18.50117301940918
    9. 'ans' → logprob: -18.62617301940918
    10. '                   ' → logprob: -18.62617301940918

Token 1006: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001170225441455841
    2. ' dp' → logprob: -6.7511701583862305
    3. '	dp' → logprob: -18.251171112060547
    4. '(dp' → logprob: -19.251171112060547
    5. '_dp' → logprob: -20.251171112060547
    6. '.dp' → logprob: -21.751171112060547
    7. '   ' → logprob: -22.126171112060547
    8. 'df' → logprob: -22.626171112060547
    9. '           ' → logprob: -22.751171112060547
    10. 'd' → logprob: -23.001171112060547

Token 1007: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001179512357339263
    2. 'final' → logprob: -6.7511796951293945
    3. '_final' → logprob: -12.001179695129395
    4. '[pos' → logprob: -13.751179695129395
    5. '[state' → logprob: -14.001179695129395
    6. '```' → logprob: -15.001179695129395
    7. 'dp' → logprob: -15.626179695129395
    8. 'ans' → logprob: -15.751179695129395
    9. '_' → logprob: -16.251178741455078
    10. '
' → logprob: -16.376178741455078

Token 1008: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -1.1472419600977446e-06
    2. 'pos' → logprob: -14.375000953674316
    3. ' final' → logprob: -14.625000953674316
    4. '[' → logprob: -16.375001907348633
    5. '_final' → logprob: -17.125001907348633
    6. '.final' → logprob: -19.000001907348633
    7. 'FINAL' → logprob: -19.500001907348633
    8. '(final' → logprob: -20.000001907348633
    9. 'state' → logprob: -20.625001907348633
    10. 'next' → logprob: -21.375001907348633

Token 1009: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -7.910643762443215e-05
    2. 'state' → logprob: -9.625079154968262
    3. '   ' → logprob: -12.750079154968262
    4. 'State' → logprob: -12.875079154968262
    5. '_STATE' → logprob: -13.625079154968262
    6. '_' → logprob: -14.125079154968262
    7. '           ' → logprob: -14.375079154968262
    8. '[' → logprob: -14.375079154968262
    9. '       ' → logprob: -14.500079154968262
    10. '```' → logprob: -14.500079154968262

Token 1010: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4756363332271576
    2. '[pos' → logprob: -0.97563636302948
    3. '[' → logprob: -6.8506364822387695
    4. '[state' → logprob: -8.60063648223877
    5. ')[' → logprob: -9.60063648223877
    6. '[position' → logprob: -9.97563648223877
    7. '>[' → logprob: -10.10063648223877
    8. ']' → logprob: -10.47563648223877
    9. '[][' → logprob: -10.85063648223877
    10. '[next' → logprob: -10.97563648223877

Token 1011: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.128163257315464e-07
    2. '[pos' → logprob: -15.125
    3. ' pos' → logprob: -19.625
    4. '(pos' → logprob: -20.125
    5. '_pos' → logprob: -20.5
    6. '	pos' → logprob: -21.375
    7. 'poss' → logprob: -21.625
    8. '
' → logprob: -21.75
    9. 'p' → logprob: -21.875
    10. 'dp' → logprob: -21.875

Token 1012: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1013: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08290643990039825
    2. '   ' → logprob: -2.582906484603882
    3. 'print' → logprob: -5.957906246185303
    4. '```' → logprob: -6.957906246185303
    5. '
' → logprob: -7.707906246185303
    6. '        
' → logprob: -11.707906723022461
    7. '           ' → logprob: -12.207906723022461
    8. '    
' → logprob: -12.207906723022461
    9. '``' → logprob: -13.082906723022461
    10. ' print' → logprob: -14.457906723022461

Token 1014: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0801381841301918
    2. '       ' → logprob: -2.5801382064819336
    3. '   ' → logprob: -7.080138206481934
    4. '```' → logprob: -7.830138206481934
    5. ' print' → logprob: -11.955138206481934
    6. '
' → logprob: -13.330138206481934
    7. '``' → logprob: -15.455138206481934
    8. '           ' → logprob: -16.080137252807617
    9. '	print' → logprob: -17.455137252807617
    10. '        
' → logprob: -18.330137252807617

Token 1015: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.7432603272027336e-06
    2. 'ans' → logprob: -13.500001907348633
    3. '(' → logprob: -15.250001907348633
    4. '()' → logprob: -18.375001907348633
    5. '(
' → logprob: -18.500001907348633
    6. '(answer' → logprob: -19.500001907348633
    7. '	ans' → logprob: -19.500001907348633
    8. '```' → logprob: -21.125001907348633
    9. '_ans' → logprob: -21.500001907348633
    10. ' ans' → logprob: -21.750001907348633

Token 1016: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08952952176332474
    2. '<|end|>' → logprob: -2.964529514312744
    3. '()' → logprob: -3.839529514312744
    4. '```' → logprob: -4.464529514312744
    5. '())' → logprob: -7.839529514312744
    6. '
' → logprob: -8.714529991149902
    7. '   ' → logprob: -9.589529991149902
    8. '``' → logprob: -9.589529991149902
    9. '<|end|>' → logprob: -9.839529991149902
    10. '()
' → logprob: -10.089529991149902


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1014
Tokens correctement prédits (1ère position, stricte): 444
Tokens correctement prédits (1ère position, avec adaptation): 469
Tokens correctement prédits (top 10): 836
Précision stricte (1ère position): 43.79%
Précision adaptée (1ère position): 46.25%
Précision (top 10): 82.45%
================================================================================
