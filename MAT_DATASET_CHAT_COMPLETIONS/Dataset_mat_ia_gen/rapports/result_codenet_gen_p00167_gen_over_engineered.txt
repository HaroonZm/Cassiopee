================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Iterator, Optional

class SwapCounter:
    def __init__(self):
        self.count = 0

    def increment(self):
        self.count += 1

    def reset(self):
        self.count = 0

    def get(self) -> int:
        return self.count

class SortAlgorithm(ABC):
    @abstractmethod
    def sort(self, data: List[int]) -> int:
        """
        Sorts the data in place and returns the count of swaps performed.
        """
        pass

class BubbleSort(SortAlgorithm):
    def __init__(self, swap_counter: SwapCounter):
        self.swap_counter = swap_counter

    def sort(self, data: List[int]) -> int:
        n = len(data)
        self.swap_counter.reset()
        for unsorted_end in range(n, 1, -1):
            for i in range(unsorted_end - 1):
                if data[i] > data[i+1]:
                    data[i], data[i+1] = data[i+1], data[i]
                    self.swap_counter.increment()
        return self.swap_counter.get()

class InputDataSet:
    def __init__(self, n: int, values: List[int]):
        self.n = n
        self.values = values

class InputParser(ABC):
    @abstractmethod
    def parse(self) -> Iterator[InputDataSet]:
        pass

class StdInputParser(InputParser):
    def __init__(self):
        pass

    def parse(self) -> Iterator[InputDataSet]:
        while True:
            line = self._read_line()
            if line is None:
                break
            n = self._parse_int(line)
            if n == 0:
                break
            values = []
            for _ in range(n):
                val_line = self._read_line()
                if val_line is None:
                    raise EOFError("Unexpected end of input.")
                val = self._parse_int(val_line)
                values.append(val)
            yield InputDataSet(n, values)

    @staticmethod
    def _read_line() -> Optional[str]:
        try:
            return input()
        except EOFError:
            return None

    @staticmethod
    def _parse_int(s: str) -> int:
        return int(s.strip())

class OutputPrinter(ABC):
    @abstractmethod
    def print_result(self, result: int) -> None:
        pass

class StdOutputPrinter(OutputPrinter):
    def print_result(self, result: int) -> None:
        print(result)

class BubbleSortApplication:
    def __init__(self,
                 input_parser: InputParser,
                 sorting_algo: SortAlgorithm,
                 output_printer: OutputPrinter):
        self.input_parser = input_parser
        self.sorting_algo = sorting_algo
        self.output_printer = output_printer

    def run(self) -> None:
        for data_set in self.input_parser.parse():
            # Defensive copy to avoid side effects on original input list if reused
            data_copy = list(data_set.values)
            swap_count = self.sorting_algo.sort(data_copy)
            self.output_printer.print_result(swap_count)

if __name__ == "__main__":
    swap_counter = SwapCounter()
    bubble_sort = BubbleSort(swap_counter)
    input_parser = StdInputParser()
    output_printer = StdOutputPrinter()
    app = BubbleSortApplication(input_parser, bubble_sort, output_printer)
    app.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.15575426816940308
    2. 'ABC' → logprob: -2.030754327774048
    3. ' ' → logprob: -5.280754089355469
    4. 'abc' → logprob: -6.155754089355469
    5. 'import' → logprob: -6.405754089355469
    6. ' abc' → logprob: -7.030754089355469
    7. 'ABCDE' → logprob: -7.030754089355469
    8. ' A' → logprob: -7.655754089355469
    9. ' import' → logprob: -7.780754089355469
    10. 'abstract' → logprob: -8.155754089355469

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21777556836605072
    2. ',' → logprob: -1.717775583267212
    3. 'import' → logprob: -5.342775344848633
    4. '' → logprob: -5.967775344848633
    5. ':' → logprob: -6.092775344848633
    6. '```' → logprob: -6.217775344848633
    7. ' ' → logprob: -7.217775344848633
    8. ' ,' → logprob: -7.342775344848633
    9. '<|end|>' → logprob: -7.967775344848633
    10. '\' → logprob: -7.967775344848633

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.48451441526412964
    2. ' abstract' → logprob: -0.9845144152641296
    3. 'Abstract' → logprob: -4.609514236450195
    4. ' ' → logprob: -9.109514236450195
    5. '.abstract' → logprob: -9.234514236450195
    6. 'Meta' → logprob: -10.109514236450195
    7. ' ABC' → logprob: -10.359514236450195
    8. ' Abstract' → logprob: -10.359514236450195
    9. ' A' → logprob: -10.859514236450195
    10. '```' → logprob: -10.984514236450195

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00020449401927180588
    2. 'm' → logprob: -8.625204086303711
    3. 'meth' → logprob: -11.375204086303711
    4. '_method' → logprob: -12.375204086303711
    5. 'classmethod' → logprob: -12.625204086303711
    6. 'met' → logprob: -13.500204086303711
    7. 'me' → logprob: -13.500204086303711
    8. ' method' → logprob: -13.875204086303711
    9. 'meta' → logprob: -14.125204086303711
    10. '_' → logprob: -15.125204086303711

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19047626852989197
    2. '```' → logprob: -2.315476179122925
    3. 'class' → logprob: -3.440476179122925
    4. '

' → logprob: -4.315476417541504
    5. '' → logprob: -4.565476417541504
    6. '
' → logprob: -5.065476417541504
    7. '\n' → logprob: -5.315476417541504
    8. '``' → logprob: -6.440476417541504
    9. '\' → logprob: -6.690476417541504
    10. ' 

' → logprob: -7.190476417541504

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4584696590900421
    2. '

' → logprob: -1.3334696292877197
    3. 'class' → logprob: -2.5834696292877197
    4. '```' → logprob: -4.333469867706299
    5. '' → logprob: -5.083469867706299
    6. '
' → logprob: -5.833469867706299
    7. ' 

' → logprob: -6.458469867706299
    8. ' class' → logprob: -6.708469867706299
    9. '


' → logprob: -6.958469867706299
    10. '``' → logprob: -7.583469867706299

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06249941512942314
    2. 'import' → logprob: -2.812499523162842
    3. '.' → logprob: -9.062499046325684
    4. '```' → logprob: -9.187499046325684
    5. '<|end|>' → logprob: -9.562499046325684
    6. ' ' → logprob: -9.812499046325684
    7. '_import' → logprob: -10.062499046325684
    8. ' as' → logprob: -10.437499046325684
    9. '.import' → logprob: -10.687499046325684
    10. '	import' → logprob: -10.937499046325684

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.35416877269744873
    2. 'Any' → logprob: -1.4791687726974487
    3. ' List' → logprob: -3.8541688919067383
    4. ' Union' → logprob: -4.104168891906738
    5. ' Protocol' → logprob: -4.354168891906738
    6. ' Callable' → logprob: -4.729168891906738
    7. 'List' → logprob: -5.854168891906738
    8. 'Protocol' → logprob: -6.354168891906738
    9. ' Optional' → logprob: -6.354168891906738
    10. 'Union' → logprob: -6.479168891906738

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5872132778167725
    2. '
' → logprob: -0.8372132778167725
    3. 'class' → logprob: -4.837213516235352
    4. '


' → logprob: -6.837213516235352
    5. '```' → logprob: -6.837213516235352
    6. '\n' → logprob: -7.337213516235352
    7. '
' → logprob: -8.212213516235352
    8. '``' → logprob: -9.712213516235352
    9. '`

' → logprob: -10.587213516235352
    10. '



' → logprob: -10.837213516235352

Token 13: ' Iterator' (ID: 41994)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4373971223831177
    2. 'Optional' → logprob: -1.5623971223831177
    3. ' Union' → logprob: -1.6873971223831177
    4. 'Any' → logprob: -1.6873971223831177
    5. ' Any' → logprob: -2.437397003173828
    6. 'Union' → logprob: -3.312397003173828
    7. ' Callable' → logprob: -3.437397003173828
    8. 'Callable' → logprob: -4.812397003173828
    9. 'Tuple' → logprob: -5.062397003173828
    10. 'Iterable' → logprob: -5.437397003173828

Token 14: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7923688888549805
    2. '
' → logprob: -1.0423688888549805
    3. '

' → logprob: -1.6673688888549805
    4. '```' → logprob: -5.2923688888549805
    5. ' class' → logprob: -8.16736888885498
    6. '


' → logprob: -8.54236888885498
    7. '\n' → logprob: -9.29236888885498
    8. '
' → logprob: -9.79236888885498
    9. '``' → logprob: -9.91736888885498
    10. '<class' → logprob: -10.04236888885498

Token 15: ' Optional' (ID: 19351)
  Prédit: ' Iterable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Iterable' → logprob: -0.6096591353416443
    2. 'Iterable' → logprob: -1.109659194946289
    3. ' Optional' → logprob: -2.734659194946289
    4. ' Any' → logprob: -3.859659194946289
    5. 'Any' → logprob: -4.609659194946289
    6. 'Optional' → logprob: -4.859659194946289
    7. ' Protocol' → logprob: -5.234659194946289
    8. ' Generator' → logprob: -5.484659194946289
    9. ' Callable' → logprob: -5.484659194946289
    10. ' Union' → logprob: -5.859659194946289

Token 16: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5781751275062561
    2. 'class' → logprob: -1.3281750679016113
    3. '
' → logprob: -1.8281750679016113
    4. '```' → logprob: -4.578175067901611
    5. '


' → logprob: -6.828175067901611
    6. '\n' → logprob: -6.953175067901611
    7. '``' → logprob: -7.953175067901611
    8. '
' → logprob: -8.32817554473877
    9. ' class' → logprob: -8.70317554473877
    10. '`

' → logprob: -8.95317554473877

Token 17: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00324378558434546
    2. '
' → logprob: -5.753243923187256
    3. '```' → logprob: -10.378243446350098
    4. '

' → logprob: -11.128243446350098
    5. ' class' → logprob: -11.628243446350098
    6. '
' → logprob: -13.003243446350098
    7. '\n' → logprob: -13.128243446350098
    8. '<class' → logprob: -13.128243446350098
    9. '  
' → logprob: -13.628243446350098
    10. '"class' → logprob: -14.253243446350098

Token 18: ' Swap' (ID: 76518)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008307348005473614
    2. ' Abstract' → logprob: -5.133307456970215
    3. ' Iterable' → logprob: -7.633307456970215
    4. ' Task' → logprob: -8.383307456970215
    5. ' Serializer' → logprob: -8.508307456970215
    6. ' Base' → logprob: -8.633307456970215
    7. ' Object' → logprob: -8.883307456970215
    8. ' Space' → logprob: -8.883307456970215
    9. ' Shape' → logprob: -9.383307456970215
    10. ' Pet' → logprob: -9.383307456970215

Token 19: 'Counter' (ID: 16263)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5497973561286926
    2. '(' → logprob: -0.9247973561286926
    3. '(S' → logprob: -4.799797534942627
    4. '(Abstract' → logprob: -5.049797534942627
    5. '():' → logprob: -6.549797534942627
    6. 'Operator' → logprob: -6.924797534942627
    7. ':
' → logprob: -7.049797534942627
    8. 'able' → logprob: -7.424797534942627
    9. '```' → logprob: -7.799797534942627
    10. '(List' → logprob: -8.049797058105469

Token 20: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6985082626342773
    2. ':' → logprob: -0.6985082626342773
    3. '(S' → logprob: -5.823508262634277
    4. '(Abstract' → logprob: -6.198508262634277
    5. '():' → logprob: -8.573508262634277
    6. '(:' → logprob: -9.948508262634277
    7. ' :' → logprob: -10.698508262634277
    8. '```' → logprob: -11.073508262634277
    9. '(object' → logprob: -11.198508262634277
    10. '):' → logprob: -11.448508262634277

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01810791715979576
    2. '    
' → logprob: -4.768107891082764
    3. '    ' → logprob: -4.893107891082764
    4. ' ' → logprob: -8.018108367919922
    5. ' def' → logprob: -8.268108367919922
    6. '<|end|>' → logprob: -8.393108367919922
    7. 'def' → logprob: -8.518108367919922
    8. '     
' → logprob: -8.768108367919922
    9. ':' → logprob: -8.893108367919922
    10. '  ' → logprob: -9.143108367919922

Token 22: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7382723689079285
    2. ' def' → logprob: -1.2382724285125732
    3. 'def' (adapté à ' def') → logprob: -1.4882724285125732
    4. '    
' → logprob: -6.363272190093994
    5. '    ' → logprob: -6.738272190093994
    6. 'class' → logprob: -6.863272190093994
    7. ' ' → logprob: -7.238272190093994
    8. '```' → logprob: -7.238272190093994
    9. ' 
' → logprob: -8.113272666931152
    10. '  ' → logprob: -9.238272666931152

Token 23: ' __' (ID: 2516)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.8636892437934875
    2. '__' → logprob: -1.1136891841888428
    3. 'itialize' → logprob: -1.8636891841888428
    4. 'def' → logprob: -3.3636891841888428
    5. 't' → logprob: -4.363689422607422
    6. '_init' → logprob: -4.613689422607422
    7. ' __' → logprob: -4.863689422607422
    8. 'itial' → logprob: -4.863689422607422
    9. '_count' → logprob: -4.988689422607422
    10. '_counter' → logprob: -5.238689422607422

Token 24: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.375
    3. 'int' → logprob: -18.5
    4. ' init' → logprob: -18.875
    5. 'in' → logprob: -19.625
    6. '```' → logprob: -20.0
    7. '_init' → logprob: -20.375
    8. 'inite' → logprob: -21.25
    9. 'count' → logprob: -21.25
    10. 'inti' → logprob: -21.375

Token 25: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.024664966389536858
    2. '__' → logprob: -4.024664878845215
    3. '(' → logprob: -5.774664878845215
    4. '__(
' → logprob: -6.024664878845215
    5. '(self' → logprob: -7.524664878845215
    6. ' (' → logprob: -8.524664878845215
    7. '__((' → logprob: -9.274664878845215
    8. '__(*' → logprob: -10.024664878845215
    9. '<|end|>' → logprob: -10.149664878845215
    10. '__('' → logprob: -11.399664878845215

Token 26: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00022320532298181206
    2. ' self' → logprob: -8.500223159790039
    3. ')' → logprob: -10.875223159790039
    4. ' ' → logprob: -15.250223159790039
    5. '   ' → logprob: -16.00022315979004
    6. '	self' → logprob: -16.25022315979004
    7. '0' → logprob: -16.37522315979004
    8. '_self' → logprob: -17.37522315979004
    9. '):
' → logprob: -18.00022315979004
    10. '       ' → logprob: -18.25022315979004

Token 27: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.321976900100708
    2. 'self' → logprob: -1.446976900100708
    3. ' self' → logprob: -1.696976900100708
    4. '_self' → logprob: -1.946976900100708
    5. ')' → logprob: -2.571976900100708
    6. ' )' → logprob: -3.571976900100708
    7. ' ,' → logprob: -3.821976900100708
    8. '_' → logprob: -3.946976900100708
    9. ' ' → logprob: -5.696976661682129
    10. '_swap' → logprob: -5.821976661682129

Token 28: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11547689884901047
    2. ' self' → logprob: -2.4904768466949463
    3. '   ' → logprob: -3.8654768466949463
    4. '       ' → logprob: -6.240477085113525
    5. '0' → logprob: -6.365477085113525
    6. ')' → logprob: -6.990477085113525
    7. ' ' → logprob: -8.115476608276367
    8. '    ' → logprob: -8.740476608276367
    9. ' )' → logprob: -9.115476608276367
    10. '  ' → logprob: -10.240476608276367

Token 29: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.030285866931080818
    2. ' self' → logprob: -3.5302858352661133
    3. '       ' → logprob: -7.655285835266113
    4. '0' → logprob: -9.905285835266113
    5. '   ' → logprob: -11.530285835266113
    6. ' ' → logprob: -13.405285835266113
    7. '	self' → logprob: -15.405285835266113
    8. '           ' → logprob: -16.28028678894043
    9. '  ' → logprob: -16.78028678894043
    10. '1' → logprob: -17.15528678894043

Token 30: '.count' (ID: 14019)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6204569935798645
    2. '._' → logprob: -1.3704569339752197
    3. '.swap' → logprob: -1.9954569339752197
    4. '.sw' → logprob: -3.3704569339752197
    5. ' .' → logprob: -3.6204569339752197
    6. '.count' → logprob: -5.370457172393799
    7. '.counter' → logprob: -5.495457172393799
    8. '.s' → logprob: -6.495457172393799
    9. ' ' → logprob: -8.12045669555664
    10. '_count' → logprob: -8.74545669555664

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014173625037074089
    2. '=' → logprob: -4.26417350769043
    3. ' ' → logprob: -12.01417350769043
    4. '  ' → logprob: -12.88917350769043
    5. '<|end|>' → logprob: -14.76417350769043
    6. '_' → logprob: -15.38917350769043
    7. ' +=' → logprob: -15.51417350769043
    8. 'space' → logprob: -16.13917350769043
    9. '_space' → logprob: -16.26417350769043
    10. ':' → logprob: -16.26417350769043

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.393150329589844
    4. '1' → logprob: -18.018150329589844
    5. '  ' → logprob: -18.518150329589844
    6. '۰' → logprob: -18.643150329589844
    7. '<|end|>' → logprob: -19.143150329589844
    8. '   ' → logprob: -19.330650329589844
    9. '```' → logprob: -20.955650329589844
    10. '000' → logprob: -21.018150329589844

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -20.875
    4. '000' → logprob: -21.0
    5. '```' → logprob: -21.375
    6. '   ' → logprob: -21.5
    7. '1' → logprob: -21.5
    8. '00' → logprob: -22.375
    9. '`' → logprob: -22.5
    10. '  ' → logprob: -22.5625

Token 34: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053822342306375504
    2. '   ' → logprob: -3.3038222789764404
    3. '<|end|>' → logprob: -4.6788225173950195
    4. '    
' → logprob: -5.6788225173950195
    5. '<|end|>' → logprob: -7.6788225173950195
    6. '```' → logprob: -7.8038225173950195
    7. '\n' → logprob: -7.9288225173950195
    8. '' → logprob: -7.9288225173950195
    9. 'def' → logprob: -8.05382251739502
    10. ' 
' → logprob: -8.17882251739502

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6696291565895081
    2. '
' → logprob: -0.7946291565895081
    3. '    
' → logprob: -4.419629096984863
    4. ' 
' → logprob: -5.294629096984863
    5. 'def' → logprob: -5.419629096984863
    6. ' ' → logprob: -5.669629096984863
    7. '\n' → logprob: -5.919629096984863
    8. '```' → logprob: -6.419629096984863
    9. '<|end|>' → logprob: -6.419629096984863
    10. ' def' → logprob: -6.794629096984863

Token 36: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06538629531860352
    2. ' def' → logprob: -2.9403862953186035
    3. '   ' → logprob: -4.5653862953186035
    4. ' ' → logprob: -10.815385818481445
    5. '```' → logprob: -12.440385818481445
    6. '	def' → logprob: -12.690385818481445
    7. '    
' → logprob: -13.065385818481445
    8. 'de' → logprob: -13.440385818481445
    9. 'indent' → logprob: -13.440385818481445
    10. ' indentation' → logprob: -13.440385818481445

Token 37: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.07308617979288101
    2. ' increment' → logprob: -2.6980862617492676
    3. 'swap' → logprob: -6.073086261749268
    4. ' swap' → logprob: -7.448086261749268
    5. '_increment' → logprob: -9.44808578491211
    6. 'increase' → logprob: -9.57308578491211
    7. 'inc' → logprob: -9.82308578491211
    8. '_swap' → logprob: -10.94808578491211
    9. 'reset' → logprob: -11.69808578491211
    10. 'count' → logprob: -12.44808578491211

Token 38: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017803447553887963
    2. '(' → logprob: -8.750178337097168
    3. ' ()' → logprob: -11.500178337097168
    4. '(self' → logprob: -12.250178337097168
    5. '()

' → logprob: -14.375178337097168
    6. '()
' → logprob: -14.500178337097168
    7. '_swap' → logprob: -14.875178337097168
    8. '()">' → logprob: -15.000178337097168
    9. '()`' → logprob: -15.125178337097168
    10. '()(' → logprob: -15.250178337097168

Token 39: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007002840866334736
    2. ' )' → logprob: -7.3757004737854
    3. '()' → logprob: -10.000699996948242
    4. '())' → logprob: -11.250699996948242
    5. '):' → logprob: -12.625699996948242
    6. ')_' → logprob: -12.875699996948242
    7. '.' → logprob: -12.875699996948242
    8. ' ' → logprob: -13.125699996948242
    9. '_' → logprob: -14.125699996948242
    10. ').' → logprob: -14.250699996948242

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01785244047641754
    2. '()' → logprob: -4.517852306365967
    3. 'self' → logprob: -5.392852306365967
    4. ' self' → logprob: -6.642852306365967
    5. '<|end|>' → logprob: -7.392852306365967
    6. '   ' → logprob: -8.767852783203125
    7. ' ()' → logprob: -10.142852783203125
    8. '(self' → logprob: -10.392852783203125
    9. '()
' → logprob: -10.392852783203125
    10. ' ' → logprob: -11.017852783203125

Token 41: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008397906087338924
    2. ' self' → logprob: -5.258398056030273
    3. '       ' → logprob: -5.758398056030273
    4. '   ' → logprob: -13.133398056030273
    5. '1' → logprob: -14.008398056030273
    6. '           ' → logprob: -16.383398056030273
    7. '	self' → logprob: -17.258398056030273
    8. ' ' → logprob: -17.383398056030273
    9. '```' → logprob: -17.383398056030273
    10. '(self' → logprob: -18.883398056030273

Token 42: '.count' (ID: 14019)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0789242684841156
    2. '.count' → logprob: -2.5789241790771484
    3. '.increment' → logprob: -10.453924179077148
    4. ' .' → logprob: -12.578924179077148
    5. '.counter' → logprob: -14.328924179077148
    6. ').' → logprob: -15.328924179077148
    7. 'count' → logprob: -15.578924179077148
    8. '_count' → logprob: -15.703924179077148
    9. '.add' → logprob: -15.703924179077148
    10. '.value' → logprob: -16.32892417907715

Token 43: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38688382506370544
    2. ' +=' → logprob: -1.1368838548660278
    3. '+' → logprob: -11.386883735656738
    4. '=' → logprob: -14.511883735656738
    5. ']+=' → logprob: -14.886883735656738
    6. '   ' → logprob: -15.511883735656738
    7. '+="' → logprob: -15.886883735656738
    8. '+=(' → logprob: -16.386884689331055
    9. '+='' → logprob: -16.511884689331055
    10. ' ' → logprob: -16.636884689331055

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.00020408630371
    4. '       ' → logprob: -18.50020408630371
    5. '  ' → logprob: -19.37520408630371
    6. '```' → logprob: -19.37520408630371
    7. '    ' → logprob: -20.87520408630371
    8. '           ' → logprob: -21.50020408630371
    9. ' ' → logprob: -22.12520408630371
    10. '2' → logprob: -22.31270408630371

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -20.5
    4. '```' → logprob: -20.625
    5. '۱' → logprob: -23.625
    6. '  ' → logprob: -23.625
    7. '       ' → logprob: -24.0
    8. '１' → logprob: -24.125
    9. 'count' → logprob: -24.25
    10. '<|end|>' → logprob: -24.25

Token 46: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020394377410411835
    2. 'class' → logprob: -4.770394325256348
    3. '

' → logprob: -4.895394325256348
    4. '<|end|>' → logprob: -6.145394325256348
    5. '```' → logprob: -6.645394325256348
    6. '   ' → logprob: -8.270394325256348
    7. '<|end|>' → logprob: -8.520394325256348
    8. '\n' → logprob: -8.895394325256348
    9. '    
' → logprob: -9.520394325256348
    10. '
' → logprob: -10.395394325256348

Token 47: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004373393952846527
    2. '
' → logprob: -5.504373550415039
    3. '

' → logprob: -8.254373550415039
    4. ' class' → logprob: -11.129373550415039
    5. '```' → logprob: -11.129373550415039
    6. '\n' → logprob: -13.879373550415039
    7. 'from' → logprob: -14.129373550415039
    8. '    
' → logprob: -14.254373550415039
    9. 'c' → logprob: -14.504373550415039
    10. '
' → logprob: -15.004373550415039

Token 48: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -9.253090865968261e-06
    2. 'def' (adapté à ' def') → logprob: -12.625009536743164
    3. '```' → logprob: -13.250009536743164
    4. '   ' → logprob: -13.750009536743164
    5. ' class' → logprob: -13.875009536743164
    6. '
' → logprob: -14.375009536743164
    7. '    
' → logprob: -14.625009536743164
    8. 'swap' → logprob: -15.000009536743164
    9. '@' → logprob: -15.375009536743164
    10. 'from' → logprob: -15.625009536743164

Token 49: ' reset' (ID: 12820)
  Prédit: 'reset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reset' → logprob: -0.0819639042019844
    2. 'get' → logprob: -2.5819640159606934
    3. 'value' → logprob: -6.206964015960693
    4. ' reset' → logprob: -7.331964015960693
    5. '__' → logprob: -8.581963539123535
    6. 'de' → logprob: -9.081963539123535
    7. ' get' → logprob: -9.456963539123535
    8. 'def' → logprob: -11.831963539123535
    9. ' value' → logprob: -12.206963539123535
    10. '.reset' → logprob: -12.456963539123535

Token 50: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0030544809997081757
    2. '(' → logprob: -5.878054618835449
    3. '()' → logprob: -8.50305461883545
    4. 'self' → logprob: -10.37805461883545
    5. '   ' → logprob: -12.75305461883545
    6. '(s' → logprob: -12.75305461883545
    7. ' (' → logprob: -13.25305461883545
    8. '():' → logprob: -13.25305461883545
    9. '(
' → logprob: -13.50305461883545
    10. '(Self' → logprob: -13.62805461883545

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019062986597418785
    2. ')' → logprob: -4.0190629959106445
    3. '):
' → logprob: -7.0190629959106445
    4. ' ):' → logprob: -11.519062995910645
    5. ':' → logprob: -13.394062995910645
    6. 'self' → logprob: -13.519062995910645
    7. '):

' → logprob: -13.644062995910645
    8. ' )' → logprob: -14.394062995910645
    9. ',' → logprob: -14.394062995910645
    10. ' ' → logprob: -14.394062995910645

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006056951242499053
    2. 'self' → logprob: -7.875605583190918
    3. ' self' → logprob: -8.625605583190918
    4. '   ' → logprob: -10.750605583190918
    5. '<|end|>' → logprob: -11.375605583190918
    6. '0' → logprob: -12.125605583190918
    7. ' ' → logprob: -12.375605583190918
    8. '()' → logprob: -13.750605583190918
    9. '(self' → logprob: -13.875605583190918
    10. '           ' → logprob: -14.625605583190918

Token 53: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03991824761033058
    2. ' self' → logprob: -3.2899181842803955
    3. '       ' → logprob: -6.289918422698975
    4. '0' → logprob: -11.289917945861816
    5. '   ' → logprob: -12.539917945861816
    6. ' ' → logprob: -12.664917945861816
    7. '	self' → logprob: -14.539917945861816
    8. ' ' → logprob: -16.539918899536133
    9. '           ' → logprob: -16.914918899536133
    10. '  ' → logprob: -17.039918899536133

Token 54: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.3871447443962097
    2. '.' → logprob: -1.1371448040008545
    3. '.reset' → logprob: -8.762145042419434
    4. 'count' → logprob: -9.262145042419434
    5. ' .' → logprob: -11.387145042419434
    6. '=' → logprob: -12.762145042419434
    7. '.counter' → logprob: -12.762145042419434
    8. '._' → logprob: -13.512145042419434
    9. '_count' → logprob: -14.012145042419434
    10. '.clear' → logprob: -14.012145042419434

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192928314208984
    2. '=' → logprob: -1.5019292831420898
    3. ' ' → logprob: -15.87692928314209
    4. '.=' → logprob: -18.501930236816406
    5. ' =
' → logprob: -18.626930236816406
    6. '0' → logprob: -18.626930236816406
    7. '<|end|>' → logprob: -18.751930236816406
    8. '＝' → logprob: -19.751930236816406
    9. '=
' → logprob: -20.251930236816406
    10. '  ' → logprob: -20.501930236816406

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.875045776367188
    4. '  ' → logprob: -22.250045776367188
    5. '       ' → logprob: -22.250045776367188
    6. '۰' → logprob: -22.500045776367188
    7. ' ' → logprob: -22.625045776367188
    8. '00' → logprob: -22.750045776367188
    9. '000' → logprob: -23.500045776367188
    10. '```' → logprob: -23.750045776367188

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۰' → logprob: -19.0
    4. '000' → logprob: -20.25
    5. '０' → logprob: -20.625
    6. '00' → logprob: -20.875
    7. '০' → logprob: -21.125
    8. '०' → logprob: -21.375
    9. '<|end|>' → logprob: -21.375
    10. '٠' → logprob: -21.75

Token 58: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.39737454056739807
    2. '
' → logprob: -1.1473745107650757
    3. '

' → logprob: -4.647374629974365
    4. ' class' → logprob: -7.647374629974365
    5. '<|end|>' → logprob: -8.522374153137207
    6. '```' → logprob: -9.522374153137207
    7. '
' → logprob: -10.022374153137207
    8. '' → logprob: -11.022374153137207
    9. '<|end|>' → logprob: -11.147374153137207
    10. '    
' → logprob: -11.897374153137207

Token 59: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0005317062605172396
    2. '
' → logprob: -7.6255316734313965
    3. '

' → logprob: -10.250532150268555
    4. ' class' → logprob: -12.500532150268555
    5. '```' → logprob: -13.375532150268555
    6. '
' → logprob: -14.250532150268555
    7. '<class' → logprob: -14.625532150268555
    8. 'c' → logprob: -14.875532150268555
    9. '  
' → logprob: -15.250532150268555
    10. '    
' → logprob: -15.375532150268555

Token 60: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.0280383548888494e-06
    2. 'from' → logprob: -14.125000953674316
    3. ' class' → logprob: -15.500000953674316
    4. 'abstract' → logprob: -17.500001907348633
    5. '    
' → logprob: -18.125001907348633
    6. '
' → logprob: -18.250001907348633
    7. '```' → logprob: -18.500001907348633
    8. 'def' (adapté à ' def') → logprob: -18.875001907348633
    9. 'c' → logprob: -19.125001907348633
    10. '"class' → logprob: -19.375001907348633

Token 61: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.10470408946275711
    2. 'get' → logprob: -2.6047041416168213
    3. ' value' → logprob: -3.9797041416168213
    4. 'value' → logprob: -5.104703903198242
    5. '_value' → logprob: -8.104703903198242
    6. '__' → logprob: -8.979703903198242
    7. ' __' → logprob: -8.979703903198242
    8. 'increment' → logprob: -9.604703903198242
    9. ' increment' → logprob: -10.229703903198242
    10. '_get' → logprob: -10.479703903198242

Token 62: '(self' (ID: 2402)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.03384716063737869
    2. '()' → logprob: -3.5338470935821533
    3. '_value' → logprob: -6.283847332000732
    4. 'count' → logprob: -6.408847332000732
    5. '_counts' → logprob: -8.658846855163574
    6. 'Count' → logprob: -9.158846855163574
    7. '<|end|>' → logprob: -9.158846855163574
    8. '```' → logprob: -9.658846855163574
    9. '_number' → logprob: -10.658846855163574
    10. '_' → logprob: -11.408846855163574

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33832910656929016
    2. ')_' → logprob: -1.8383290767669678
    3. '_count' → logprob: -2.0883290767669678
    4. 'count' → logprob: -6.588329315185547
    5. 'ount' → logprob: -7.213329315185547
    6. ')__' → logprob: -7.463329315185547
    7. '_value' → logprob: -8.088329315185547
    8. ' )' → logprob: -8.463329315185547
    9. 't' → logprob: -8.588329315185547
    10. '_' → logprob: -8.838329315185547

Token 64: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0024257178883999586
    2. '<|end|>' → logprob: -6.752425670623779
    3. '(' → logprob: -7.752425670623779
    4. '(self' → logprob: -7.877425670623779
    5. '():' → logprob: -8.377426147460938
    6. 'return' → logprob: -10.002426147460938
    7. 'self' → logprob: -10.252426147460938
    8. ' ()' → logprob: -10.252426147460938
    9. ')' → logprob: -11.252426147460938
    10. '   ' → logprob: -11.502426147460938

Token 65: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3132617771625519
    2. ' int' → logprob: -1.3132617473602295
    3. '[int' → logprob: -18.813261032104492
    4. ' ' → logprob: -19.188261032104492
    5. '<int' → logprob: -19.188261032104492
    6. '	int' → logprob: -19.438261032104492
    7. '   ' → logprob: -19.688261032104492
    8. ':int' → logprob: -20.438261032104492
    9. '(int' → logprob: -20.438261032104492
    10. '=int' → logprob: -20.688261032104492

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04011925309896469
    2. '():' → logprob: -3.290119171142578
    3. ':return' → logprob: -6.665119171142578
    4. '       ' → logprob: -8.415119171142578
    5. '):' → logprob: -8.665119171142578
    6. '   ' → logprob: -9.040119171142578
    7. ':
' → logprob: -9.165119171142578
    8. '():
' → logprob: -10.040119171142578
    9. '()' → logprob: -10.665119171142578
    10. '<|end|>' → logprob: -10.665119171142578

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0061651901341974735
    2. ' self' → logprob: -5.756165027618408
    3. 'self' → logprob: -6.256165027618408
    4. ' return' → logprob: -7.006165027618408
    5. 'return' → logprob: -9.381165504455566
    6. '   ' → logprob: -9.631165504455566
    7. ' ' → logprob: -13.006165504455566
    8. '<|end|>' → logprob: -13.256165504455566
    9. '      ' → logprob: -14.006165504455566
    10. '           ' → logprob: -14.006165504455566

Token 68: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.579724133014679
    2. ' return' → logprob: -0.829724133014679
    3. '       ' → logprob: -5.579724311828613
    4. 'self' → logprob: -12.954724311828613
    5. '   ' → logprob: -14.704724311828613
    6. ' self' → logprob: -14.829724311828613
    7. '	return' → logprob: -15.204724311828613
    8. '```' → logprob: -15.579724311828613
    9. '{return' → logprob: -15.704724311828613
    10. ' ' → logprob: -15.704724311828613

Token 69: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2014138251543045
    2. ' self' → logprob: -1.701413869857788
    3. '       ' → logprob: -14.576414108276367
    4. '	self' → logprob: -16.826414108276367
    5. '   ' → logprob: -17.951414108276367
    6. ' ' → logprob: -19.451414108276367
    7. ' ' → logprob: -19.701414108276367
    8. '(self' → logprob: -20.326414108276367
    9. '_self' → logprob: -21.576414108276367
    10. '  ' → logprob: -22.451414108276367

Token 70: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.005250006448477507
    2. '.' → logprob: -5.255249977111816
    3. ' .' → logprob: -11.130249977111816
    4. '.
' → logprob: -15.130249977111816
    5. '.code' → logprob: -15.130249977111816
    6. '.value' → logprob: -15.380249977111816
    7. 'count' → logprob: -15.505249977111816
    8. '   ' → logprob: -15.630249977111816
    9. '       ' → logprob: -16.755250930786133
    10. '.counter' → logprob: -16.880250930786133

Token 71: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8439605236053467
    2. 'class' → logprob: -0.8439605236053467
    3. '

' → logprob: -1.9689605236053467
    4. '
' → logprob: -9.093960762023926
    5. ' class' → logprob: -9.343960762023926
    6. '```' → logprob: -9.343960762023926
    7. '\n' → logprob: -10.468960762023926
    8. '<|end|>' → logprob: -10.718960762023926
    9. '


' → logprob: -11.093960762023926
    10. '<class' → logprob: -11.968960762023926

Token 72: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0003598952607717365
    2. '
' → logprob: -8.000359535217285
    3. '

' → logprob: -10.875359535217285
    4. ' class' → logprob: -13.125359535217285
    5. '```' → logprob: -13.875359535217285
    6. '    
' → logprob: -14.750359535217285
    7. '  
' → logprob: -14.750359535217285
    8. '
' → logprob: -15.125359535217285
    9. 'abstract' → logprob: -15.375359535217285
    10. '<class' → logprob: -15.750359535217285

Token 73: ' Sort' (ID: 25945)
  Prédit: ' Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sort' → logprob: -0.20854438841342926
    2. ' ABC' → logprob: -2.3335444927215576
    3. ' Sorting' → logprob: -2.8335444927215576
    4. ' Abstract' → logprob: -3.8335444927215576
    5. ' Bubble' → logprob: -5.7085442543029785
    6. ' Merge' → logprob: -5.8335442543029785
    7. ' Quick' → logprob: -6.4585442543029785
    8. ' Binary' → logprob: -7.8335442543029785
    9. 'Sorter' → logprob: -7.9585442543029785
    10. ' Sorted' → logprob: -8.208544731140137

Token 74: 'Algorithm' (ID: 34201)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0028697808738797903
    2. 'Strategy' → logprob: -6.627869606018066
    3. '(' → logprob: -6.752869606018066
    4. 'Algorithm' → logprob: -8.252869606018066
    5. 'ing' → logprob: -9.627869606018066
    6. 'able' → logprob: -10.502869606018066
    7. 'Method' → logprob: -11.127869606018066
    8. 'or' → logprob: -13.127869606018066
    9. 'Interface' → logprob: -13.877869606018066
    10. 'Operator' → logprob: -14.502869606018066

Token 75: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.182190554682165e-05
    2. '(Abstract' → logprob: -9.750061988830566
    3. ' (' → logprob: -12.750061988830566
    4. '```' → logprob: -15.500061988830566
    5. ':' → logprob: -15.625061988830566
    6. '(
' → logprob: -16.25006103515625
    7. '(S' → logprob: -17.37506103515625
    8. '(s' → logprob: -18.00006103515625
    9. '((' → logprob: -18.12506103515625
    10. '   ' → logprob: -18.12506103515625

Token 76: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.003221206832677126
    2. ' ABC' → logprob: -5.753221035003662
    3. '   ' → logprob: -11.50322151184082
    4. ')' → logprob: -11.62822151184082
    5. 'AB' → logprob: -11.62822151184082
    6. ' ' → logprob: -12.25322151184082
    7. 'abc' → logprob: -12.87822151184082
    8. ',' → logprob: -13.00322151184082
    9. 'Abstract' → logprob: -13.00322151184082
    10. 'ABCDE' → logprob: -13.37822151184082

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.111979357432574e-05
    2. ')' → logprob: -10.37507152557373
    3. ':' → logprob: -10.37507152557373
    4. ' ):' → logprob: -12.25007152557373
    5. '):
' → logprob: -13.12507152557373
    6. ',' → logprob: -13.50007152557373
    7. '):
' → logprob: -15.37507152557373
    8. '():' → logprob: -16.000070571899414
    9. '):

' → logprob: -16.750070571899414
    10. '(' → logprob: -17.375070571899414

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00121428316924721
    2. '    
' → logprob: -7.376214504241943
    3. '
' → logprob: -7.626214504241943
    4. '   ' → logprob: -10.751214027404785
    5. '@' → logprob: -11.001214027404785
    6. ' 
' → logprob: -11.126214027404785
    7. '```' → logprob: -11.876214027404785
    8. ' indentation' → logprob: -12.001214027404785
    9. '   ' → logprob: -12.376214027404785
    10. '    ' → logprob: -12.376214027404785

Token 79: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7409599423408508
    2. ' @' → logprob: -0.8659599423408508
    3. '@' (adapté à ' @') → logprob: -2.365959882736206
    4. ' def' → logprob: -5.240960121154785
    5. '    
' → logprob: -6.365960121154785
    6. '
' → logprob: -7.115960121154785
    7. 'def' → logprob: -7.115960121154785
    8. ' 
' → logprob: -8.740960121154785
    9. '@property' → logprob: -11.990960121154785
    10. '```' → logprob: -12.615960121154785

Token 80: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.6240566083070007e-06
    2. 'staticmethod' → logprob: -14.250001907348633
    3. 'ab' → logprob: -15.000001907348633
    4. 'abs' → logprob: -15.375001907348633
    5. ' abstract' → logprob: -15.500001907348633
    6. '.abstract' → logprob: -16.625001907348633
    7. 'abc' → logprob: -16.750001907348633
    8. 'classmethod' → logprob: -17.375001907348633
    9. 'property' → logprob: -19.000001907348633
    10. 'absolute' → logprob: -19.125001907348633

Token 81: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -3.2020991056924686e-05
    2. '_method' → logprob: -10.500032424926758
    3. 'classmethod' → logprob: -13.500032424926758
    4. 'staticmethod' → logprob: -13.875032424926758
    5. 'meth' → logprob: -14.125032424926758
    6. '   ' → logprob: -15.125032424926758
    7. 'ethod' → logprob: -15.375032424926758
    8. 'm' → logprob: -15.375032424926758
    9. '	method' → logprob: -15.625032424926758
    10. 'abstract' → logprob: -15.750032424926758

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12256763130426407
    2. 'def' → logprob: -2.747567653656006
    3. 'method' → logprob: -3.122567653656006
    4. '    
' → logprob: -5.622567653656006
    5. '(' → logprob: -6.872567653656006
    6. '
' → logprob: -7.622567653656006
    7. '   ' → logprob: -7.997567653656006
    8. ' def' → logprob: -8.497567176818848
    9. 'classmethod' → logprob: -8.497567176818848
    10. '  
' → logprob: -8.622567176818848

Token 83: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3623957633972168
    2. '
' → logprob: -1.4873957633972168
    3. ' def' → logprob: -2.862395763397217
    4. 'method' → logprob: -4.112395763397217
    5. '   ' → logprob: -6.612395763397217
    6. 'classmethod' → logprob: -6.987395763397217
    7. '```' → logprob: -7.237395763397217
    8. '    
' → logprob: -7.987395763397217
    9. ' 
' → logprob: -7.987395763397217
    10. '`' → logprob: -8.487396240234375

Token 84: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.26339155435562134
    2. 'abstract' → logprob: -1.5133914947509766
    3. 'method' → logprob: -5.388391494750977
    4. 'classmethod' → logprob: -5.638391494750977
    5. 'staticmethod' → logprob: -6.013391494750977
    6. 'property' → logprob: -7.263391494750977
    7. ' def' → logprob: -9.513391494750977
    8. '
' → logprob: -11.638391494750977
    9. 'class' → logprob: -11.888391494750977
    10. ' abstract' → logprob: -12.013391494750977

Token 85: ' sort' (ID: 4506)
  Prédit: ' sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.016632940620183945
    2. 'sort' → logprob: -4.641633033752441
    3. ' def' → logprob: -5.016633033752441
    4. 'def' → logprob: -8.516633033752441
    5. ' swap' → logprob: -12.141633033752441
    6. '	sort' → logprob: -12.141633033752441
    7. '   ' → logprob: -12.891633033752441
    8. ' solve' → logprob: -13.141633033752441
    9. '```' → logprob: -13.516633033752441
    10. ' sorted' → logprob: -13.641633033752441

Token 86: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.750011444091797
    3. 'self' → logprob: -12.625011444091797
    4. ' (' → logprob: -15.000011444091797
    5. '```' → logprob: -16.500011444091797
    6. '(
' → logprob: -17.250011444091797
    7. 's' → logprob: -17.250011444091797
    8. 'def' → logprob: -17.750011444091797
    9. '[self' → logprob: -17.875011444091797
    10. '(s' → logprob: -18.000011444091797

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039230400579981506
    2. 'self' → logprob: -7.875392436981201
    3. ' ,' → logprob: -12.125391960144043
    4. ',List' → logprob: -13.375391960144043
    5. ',self' → logprob: -13.625391960144043
    6. ')' → logprob: -13.750391960144043
    7. ',
' → logprob: -14.625391960144043
    8. ':' → logprob: -14.750391960144043
    9. 's' → logprob: -14.875391960144043
    10. ',data' → logprob: -15.125391960144043

Token 88: ' data' (ID: 1238)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2576369345188141
    2. 'data' → logprob: -2.1326370239257812
    3. ' self' → logprob: -2.8826370239257812
    4. ' data' → logprob: -3.1326370239257812
    5. 'arr' → logprob: -4.882637023925781
    6. 'lst' → logprob: -7.257637023925781
    7. ' arr' → logprob: -7.632637023925781
    8. ' lst' → logprob: -8.757637023925781
    9. 'array' → logprob: -10.132637023925781
    10. 'items' → logprob: -11.132637023925781

Token 89: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1517960956552997e-05
    2. ')' → logprob: -12.000011444091797
    3. '):' → logprob: -12.375011444091797
    4. ' :' → logprob: -15.125011444091797
    5. '```' → logprob: -15.250011444091797
    6. '_:' → logprob: -16.125011444091797
    7. '_list' → logprob: -16.125011444091797
    8. ',' → logprob: -16.250011444091797
    9. ':list' → logprob: -16.500011444091797
    10. '[' → logprob: -16.625011444091797

Token 90: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.3132767677307129
    2. ' List' → logprob: -1.313276767730713
    3. '	List' → logprob: -12.438276290893555
    4. ')' → logprob: -12.813276290893555
    5. 'list' → logprob: -12.813276290893555
    6. ' list' → logprob: -13.063276290893555
    7. '   ' → logprob: -13.188276290893555
    8. '[List' → logprob: -14.188276290893555
    9. ' ' → logprob: -14.813276290893555
    10. '    ' → logprob: -16.063276290893555

Token 91: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.898723561083898e-05
    2. '[' → logprob: -9.500079154968262
    3. ')' → logprob: -13.000079154968262
    4. 'int' → logprob: -13.625079154968262
    5. '[Int' → logprob: -15.375079154968262
    6. '<int' → logprob: -15.375079154968262
    7. '[
' → logprob: -16.500078201293945
    8. '[str' → logprob: -17.125078201293945
    9. ' [' → logprob: -18.375078201293945
    10. ']int' → logprob: -18.375078201293945

Token 92: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0014826052356511354
    2. ')' → logprob: -6.6264824867248535
    3. '],' → logprob: -9.001482963562012
    4. ']' → logprob: -10.376482963562012
    5. ''])' → logprob: -14.126482963562012
    6. ' ])' → logprob: -14.501482963562012
    7. ',' → logprob: -15.376482963562012
    8. ']):' → logprob: -15.501482963562012
    9. ']])' → logprob: -15.626482963562012
    10. '`)' → logprob: -16.501482009887695

Token 93: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.4862028658390045
    2. '->' → logprob: -1.2362028360366821
    3. ')' → logprob: -2.3612029552459717
    4. ')->' → logprob: -8.48620319366455
    5. ':' → logprob: -10.61120319366455
    6. '-' → logprob: -11.48620319366455
    7. ' )' → logprob: -12.86120319366455
    8. ' )->' → logprob: -12.98620319366455
    9. '   ' → logprob: -13.36120319366455
    10. 'None' → logprob: -14.11120319366455

Token 94: ' int' (ID: 677)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6720431447029114
    2. 'List' → logprob: -0.7970431447029114
    3. ' None' → logprob: -3.7970430850982666
    4. 'Optional' → logprob: -4.797043323516846
    5. ' List' → logprob: -4.922043323516846
    6. 'Iterator' → logprob: -8.047042846679688
    7. ' Optional' → logprob: -8.172042846679688
    8. 'int' → logprob: -9.672042846679688
    9. '   ' → logprob: -11.547042846679688
    10. ' ' → logprob: -12.172042846679688

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019933474250137806
    2. '<|end|>' → logprob: -6.751993179321289
    3. ':
' → logprob: -7.376993179321289
    4. ':return' → logprob: -10.126993179321289
    5. '.' → logprob: -10.501993179321289
    6. ')' → logprob: -10.751993179321289
    7. '):' → logprob: -10.751993179321289
    8. ':void' → logprob: -11.126993179321289
    9. ',' → logprob: -11.251993179321289
    10. ':def' → logprob: -11.376993179321289

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04036154970526695
    2. '<|end|>' → logprob: -3.7903616428375244
    3. ' ' → logprob: -4.790361404418945
    4. ' pass' → logprob: -5.165361404418945
    5. '    ' → logprob: -6.415361404418945
    6. '        ' → logprob: -7.915361404418945
    7. '   ' → logprob: -8.415361404418945
    8. '      ' → logprob: -8.665361404418945
    9. 'pass' → logprob: -8.790361404418945
    10. '  ' → logprob: -9.290361404418945

Token 97: ' """
' (ID: 7037)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.020930714905261993
    2. 'pass' → logprob: -4.020930767059326
    3. '...' → logprob: -6.020930767059326
    4. ' ...' → logprob: -8.645930290222168
    5. '       ' → logprob: -9.270930290222168
    6. '    ' → logprob: -10.520930290222168
    7. '	pass' → logprob: -10.520930290222168
    8. '   ' → logprob: -11.395930290222168
    9. ' ' → logprob: -12.270930290222168
    10. '        ' → logprob: -12.520930290222168

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08089479804039001
    2. 'pass' → logprob: -2.705894708633423
    3. ' pass' → logprob: -4.705894947052002
    4. '...' → logprob: -6.330894947052002
    5. '   ' → logprob: -10.705894470214844
    6. '"""' → logprob: -10.955894470214844
    7. 'Pass' → logprob: -11.705894470214844
    8. '      ' → logprob: -11.955894470214844
    9. '#' → logprob: -12.955894470214844
    10. '	pass' → logprob: -13.080894470214844

Token 99: ' Sort' (ID: 25945)
  Prédit: 'Sort'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' (adapté à ' Sort') → logprob: -0.40132659673690796
    2. '"""' → logprob: -1.2763266563415527
    3. '       ' → logprob: -3.6513266563415527
    4. 'Pass' → logprob: -4.651326656341553
    5. 'Perform' → logprob: -5.151326656341553
    6. '"""
' → logprob: -5.276326656341553
    7. ' """' → logprob: -5.901326656341553
    8. 'Count' → logprob: -6.526326656341553
    9. 'Per' → logprob: -8.401326179504395
    10. 'Calculate' → logprob: -9.026326179504395

Token 100: 's' (ID: 82)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4117808938026428
    2. '       ' → logprob: -2.036780834197998
    3. ' self' → logprob: -2.286780834197998
    4. 'self' → logprob: -2.536780834197998
    5. 'the' → logprob: -4.161780834197998
    6. ' data' → logprob: -5.786780834197998
    7. '(self' → logprob: -5.786780834197998
    8. 'data' → logprob: -6.536780834197998
    9. '   ' → logprob: -6.661780834197998
    10. '<|end|>' → logprob: -7.286780834197998

Token 101: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.07040129601955414
    2. 'the' → logprob: -2.945401191711426
    3. ' data' → logprob: -5.445401191711426
    4. 'self' → logprob: -5.570401191711426
    5. ' self' → logprob: -5.570401191711426
    6. 'data' → logprob: -6.070401191711426
    7. '       ' → logprob: -7.195401191711426
    8. ' and' → logprob: -8.820401191711426
    9. '   ' → logprob: -10.320401191711426
    10. 'The' → logprob: -10.445401191711426

Token 102: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.21187496185302734
    2. ' data' → logprob: -1.7118749618530273
    3. 'list' → logprob: -5.586874961853027
    4. ' list' → logprob: -5.711874961853027
    5. ' given' → logprob: -6.086874961853027
    6. 'given' → logprob: -7.836874961853027
    7. 'input' → logprob: -8.211874961853027
    8. 'array' → logprob: -8.836874961853027
    9. 'provided' → logprob: -9.586874961853027
    10. ' input' → logprob: -9.836874961853027

Token 103: ' in' (ID: 306)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15596072375774384
    2. ' in' → logprob: -2.53096079826355
    3. '       ' → logprob: -2.90596079826355
    4. 'and' → logprob: -5.280960559844971
    5. ' inplace' → logprob: -6.655960559844971
    6. ' using' → logprob: -7.030960559844971
    7. ' by' → logprob: -7.280960559844971
    8. ',' → logprob: -7.530960559844971
    9. '   ' → logprob: -7.530960559844971
    10. ' while' → logprob: -8.155961036682129

Token 104: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.5163560509681702
    2. ' place' → logprob: -1.3913559913635254
    3. '-place' → logprob: -1.8913559913635254
    4. '   ' → logprob: -6.016355991363525
    5. 'ascending' → logprob: -8.016356468200684
    6. '       ' → logprob: -8.516356468200684
    7. '```' → logprob: -8.766356468200684
    8. ' ascending' → logprob: -9.016356468200684
    9. '    ' → logprob: -9.016356468200684
    10. '_place' → logprob: -9.516356468200684

Token 105: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05210120230913162
    2. '       ' → logprob: -3.1771011352539062
    3. 'and' → logprob: -5.177101135253906
    4. '.' → logprob: -6.427101135253906
    5. ',' → logprob: -7.177101135253906
    6. ' by' → logprob: -7.552101135253906
    7. ' while' → logprob: -9.052101135253906
    8. '<|end|>' → logprob: -9.052101135253906
    9. '   ' → logprob: -9.677101135253906
    10. ' using' → logprob: -9.802101135253906

Token 106: ' returns' (ID: 7377)
  Prédit: ' returns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -0.026878273114562035
    2. 'returns' → logprob: -3.6518783569335938
    3. '       ' → logprob: -7.526878356933594
    4. 'return' → logprob: -11.401878356933594
    5. ' counts' → logprob: -11.651878356933594
    6. '   ' → logprob: -12.151878356933594
    7. ' return' → logprob: -12.651878356933594
    8. ' ' → logprob: -13.026878356933594
    9. 'counts' → logprob: -13.151878356933594
    10. ':return' → logprob: -13.526878356933594

Token 107: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3873605728149414
    2. 'the' → logprob: -1.1373605728149414
    3. '       ' → logprob: -7.762360572814941
    4. 'number' → logprob: -10.262360572814941
    5. 'int' → logprob: -11.887360572814941
    6. ' number' → logprob: -12.012360572814941
    7. '	the' → logprob: -12.262360572814941
    8. '   ' → logprob: -12.387360572814941
    9. ' an' → logprob: -13.387360572814941
    10. 'The' → logprob: -13.637360572814941

Token 108: ' count' (ID: 3605)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.05232749879360199
    2. ' number' → logprob: -3.0523273944854736
    3. 'total' → logprob: -5.927327632904053
    4. '   ' → logprob: -8.302327156066895
    5. 'swap' → logprob: -8.427327156066895
    6. ' total' → logprob: -8.677327156066895
    7. '       ' → logprob: -9.052327156066895
    8. 'count' → logprob: -9.552327156066895
    9. 'Swap' → logprob: -10.052327156066895
    10. ' swap' → logprob: -10.552327156066895

Token 109: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.001106875017285347
    2. '       ' → logprob: -7.0011067390441895
    3. 'of' → logprob: -9.126107215881348
    4. '   ' → logprob: -10.501107215881348
    5. '        ' → logprob: -10.626107215881348
    6. '    ' → logprob: -11.376107215881348
    7. ' ' → logprob: -11.626107215881348
    8. '<|end|>' → logprob: -12.001107215881348
    9. '  ' → logprob: -13.126107215881348
    10. '      ' → logprob: -13.251107215881348

Token 110: ' swaps' (ID: 150699)
  Prédit: ' swaps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' swaps' → logprob: -0.0335034541785717
    2. 'sw' → logprob: -3.533503532409668
    3. 'swap' → logprob: -6.158503532409668
    4. ' swap' → logprob: -7.033503532409668
    5. '   ' → logprob: -8.283503532409668
    6. ' swapped' → logprob: -8.658503532409668
    7. '       ' → logprob: -9.033503532409668
    8. ' sw' → logprob: -10.783503532409668
    9. 'self' → logprob: -10.908503532409668
    10. '    ' → logprob: -10.908503532409668

Token 111: ' performed' (ID: 14469)
  Prédit: ' performed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' performed' → logprob: -0.4754967987537384
    2. '.' → logprob: -1.475496768951416
    3. '       ' → logprob: -1.975496768951416
    4. ' that' → logprob: -5.850496768951416
    5. 'performed' → logprob: -6.100496768951416
    6. '<|end|>' → logprob: -6.225496768951416
    7. '   ' → logprob: -6.975496768951416
    8. ' used' → logprob: -7.600496768951416
    9. '<|end|>' → logprob: -7.850496768951416
    10. '.
' → logprob: -8.225497245788574

Token 112: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.955303430557251
    2. '<|end|>' → logprob: -1.205303430557251
    3. '.' → logprob: -1.330303430557251
    4. '   ' → logprob: -3.580303430557251
    5. '
' → logprob: -4.705303192138672
    6. '<|end|>' → logprob: -4.955303192138672
    7. '```' → logprob: -5.455303192138672
    8. '.
' → logprob: -6.955303192138672
    9. ':' → logprob: -7.330303192138672
    10. '"""' → logprob: -7.955303192138672

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1647692769765854
    2. '"""' → logprob: -2.414769172668457
    3. '<|end|>' → logprob: -2.914769172668457
    4. '```' → logprob: -5.289769172668457
    5. '   ' → logprob: -6.539769172668457
    6. '
' → logprob: -7.164769172668457
    7. '<|end|>' → logprob: -8.039769172668457
    8. '\n' → logprob: -8.664769172668457
    9. '"""
' → logprob: -8.914769172668457
    10. '""' → logprob: -9.414769172668457

Token 114: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28327080607414246
    2. '"""' → logprob: -1.4082708358764648
    3. '<|end|>' → logprob: -7.158270835876465
    4. '```' → logprob: -7.533270835876465
    5. '"""
' (adapté à ' """
') → logprob: -8.033270835876465
    6. '"""

' → logprob: -9.283270835876465
    7. '""' → logprob: -9.283270835876465
    8. ' """' → logprob: -9.408270835876465
    9. ' pass' → logprob: -9.908270835876465
    10. '   ' → logprob: -10.033270835876465

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43370726704597473
    2. 'pass' → logprob: -1.4337072372436523
    3. ' pass' → logprob: -2.4337072372436523
    4. '...' → logprob: -3.6837072372436523
    5. '	pass' → logprob: -8.183707237243652
    6. '   ' → logprob: -8.308707237243652
    7. '<|end|>' → logprob: -10.683707237243652
    8. ' ...' → logprob: -10.683707237243652
    9. '    ' → logprob: -10.933707237243652
    10. 'raise' → logprob: -11.433707237243652

Token 116: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.0004388942907098681
    2. ' pass' → logprob: -8.000438690185547
    3. '...' → logprob: -9.250438690185547
    4. 'raise' → logprob: -12.250438690185547
    5. '       ' → logprob: -13.375438690185547
    6. '	pass' → logprob: -14.875438690185547
    7. '   ' → logprob: -15.000438690185547
    8. '...
' → logprob: -15.500438690185547
    9. 'swap' → logprob: -16.125438690185547
    10. 'pas' → logprob: -16.500438690185547

Token 117: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.048774152994155884
    2. '
' → logprob: -3.048774242401123
    3. '

' → logprob: -8.798773765563965
    4. '   ' → logprob: -11.173773765563965
    5. ' class' → logprob: -11.298773765563965
    6. '  
' → logprob: -12.923773765563965
    7. '    
' → logprob: -13.173773765563965
    8. '<|end|>' → logprob: -13.798773765563965
    9. '```' → logprob: -13.798773765563965
    10. 'import' → logprob: -13.923773765563965

Token 118: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.014211111702024937
    2. '
' → logprob: -4.264211177825928
    3. '

' → logprob: -10.13921070098877
    4. ' class' → logprob: -13.01421070098877
    5. '  
' → logprob: -13.01421070098877
    6. ' 
' → logprob: -13.38921070098877
    7. '    
' → logprob: -14.26421070098877
    8. '
' → logprob: -15.13921070098877
    9. '   ' → logprob: -15.51421070098877
    10. '```' → logprob: -15.63921070098877

Token 119: ' Bubble' (ID: 84882)
  Prédit: ' Bubble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bubble' → logprob: -0.21460099518299103
    2. 'Bubble' → logprob: -1.7146010398864746
    3. ' Quick' → logprob: -4.964601039886475
    4. 'Quick' → logprob: -5.714601039886475
    5. 'Insertion' → logprob: -6.839601039886475
    6. ' Selection' → logprob: -7.464601039886475
    7. 'Selection' → logprob: -7.714601039886475
    8. ' In' → logprob: -8.214600563049316
    9. ' ' → logprob: -8.714600563049316
    10. ' Merge' → logprob: -9.339600563049316

Token 120: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -5.2166411478538066e-05
    2. 'Sorter' → logprob: -9.875052452087402
    3. 'sort' → logprob: -15.500052452087402
    4. 'Sorting' → logprob: -15.750052452087402
    5. 'Sorted' → logprob: -16.375051498413086
    6. ' sort' → logprob: -16.500051498413086
    7. ' Sort' → logprob: -16.625051498413086
    8. '_sort' → logprob: -16.875051498413086
    9. '   ' → logprob: -18.125051498413086
    10. 'Sortable' → logprob: -18.125051498413086

Token 121: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0017818065825849771
    2. '(' → logprob: -6.376781940460205
    3. ':' → logprob: -9.751781463623047
    4. 'Sort' → logprob: -11.001781463623047
    5. 'Sorter' → logprob: -13.251781463623047
    6. ' (' → logprob: -14.376781463623047
    7. '   ' → logprob: -14.626781463623047
    8. '(sort' → logprob: -14.751781463623047
    9. '(:' → logprob: -14.876781463623047
    10. ' :' → logprob: -15.001781463623047

Token 122: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.05084197223186493
    2. 'wap' → logprob: -3.050842046737671
    3. '(' → logprob: -7.175841808319092
    4. 'o' → logprob: -7.675841808319092
    5. ')' → logprob: -8.67584228515625
    6. '(S' → logprob: -8.67584228515625
    7. 't' → logprob: -9.05084228515625
    8. 'or' → logprob: -9.42584228515625
    9. '   ' → logprob: -9.55084228515625
    10. '```' → logprob: -9.80084228515625

Token 123: 'Algorithm' (ID: 34201)
  Prédit: 'Algorithm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Algorithm' → logprob: -0.012315616942942142
    2. 'Sort' → logprob: -4.51231575012207
    3. ')' → logprob: -7.26231575012207
    4. '   ' → logprob: -8.13731575012207
    5. 'sort' → logprob: -9.13731575012207
    6. 'Sorter' → logprob: -10.38731575012207
    7. 'Alg' → logprob: -10.63731575012207
    8. '       ' → logprob: -10.88731575012207
    9. '```' → logprob: -11.01231575012207
    10. ' ' → logprob: -11.63731575012207

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025430822279304266
    2. '):
' → logprob: -6.002542972564697
    3. ')' → logprob: -9.627543449401855
    4. ':' → logprob: -14.377543449401855
    5. ' ):' → logprob: -15.127543449401855
    6. '   ' → logprob: -15.127543449401855
    7. '):

' → logprob: -15.627543449401855
    8. '):
' → logprob: -16.37754249572754
    9. 'def' → logprob: -17.75254249572754
    10. '```' → logprob: -19.12754249572754

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045899566262960434
    2. 'def' → logprob: -3.6708996295928955
    3. '
' → logprob: -4.045899391174316
    4. ' def' → logprob: -6.295899391174316
    5. '    
' → logprob: -9.795899391174316
    6. '	def' → logprob: -12.545899391174316
    7. '

' → logprob: -13.295899391174316
    8. ':' → logprob: -13.420899391174316
    9. ' 
' → logprob: -13.670899391174316
    10. ':
' → logprob: -13.670899391174316

Token 126: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005239087622612715
    2. ' def' → logprob: -5.255239009857178
    3. '   ' → logprob: -12.255239486694336
    4. '
' → logprob: -14.505239486694336
    5. '	def' → logprob: -18.255239486694336
    6. ' ' → logprob: -18.755239486694336
    7. '```' → logprob: -19.630239486694336
    8. '    
' → logprob: -20.005239486694336
    9. 'class' → logprob: -20.255239486694336
    10. '  ' → logprob: -20.380239486694336

Token 127: ' __' (ID: 2516)
  Prédit: ' sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.4746338427066803
    2. 'sort' → logprob: -0.9746338129043579
    3. ' def' → logprob: -7.724633693695068
    4. 'def' → logprob: -9.224634170532227
    5. ' ' → logprob: -11.474634170532227
    6. '_sort' → logprob: -13.599634170532227
    7. '  ' → logprob: -13.849634170532227
    8. '   ' → logprob: -14.349634170532227
    9. 's' → logprob: -14.349634170532227
    10. ' ' → logprob: -14.349634170532227

Token 128: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.2657621502876282
    2. 'it' → logprob: -1.6407620906829834
    3. 'def' → logprob: -3.3907620906829834
    4. 'sort' → logprob: -5.6407623291015625
    5. '   ' → logprob: -7.3907623291015625
    6. 'nit' → logprob: -7.8907623291015625
    7. '__' → logprob: -8.015762329101562
    8. '```' → logprob: -8.140762329101562
    9. 'call' → logprob: -9.140762329101562
    10. '(init' → logprob: -9.265762329101562

Token 129: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008391046896576881
    2. '(' → logprob: -5.5083909034729
    3. ' (' → logprob: -6.1333909034729
    4. '__(' → logprob: -6.7583909034729
    5. '   ' → logprob: -8.508391380310059
    6. '()' → logprob: -8.633391380310059
    7. ')(' → logprob: -8.883391380310059
    8. 'self' → logprob: -9.133391380310059
    9. '       ' → logprob: -9.383391380310059
    10. ')' → logprob: -9.633391380310059

Token 130: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.7385154428193346e-05
    2. ' self' → logprob: -11.00003719329834
    3. ')' → logprob: -11.25003719329834
    4. '       ' → logprob: -12.75003719329834
    5. '   ' → logprob: -13.12503719329834
    6. '):
' → logprob: -13.12503719329834
    7. '
' → logprob: -15.00003719329834
    8. 'swap' → logprob: -15.25003719329834
    9. ' ' → logprob: -16.625038146972656
    10. '	self' → logprob: -16.750038146972656

Token 131: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3102538287639618
    2. ',' → logprob: -2.060253858566284
    3. 'self' → logprob: -2.310253858566284
    4. '):
' → logprob: -4.185253620147705
    5. '       ' → logprob: -4.310253620147705
    6. '   ' → logprob: -4.935253620147705
    7. ')' → logprob: -5.560253620147705
    8. ' ):' → logprob: -8.560254096984863
    9. ' self' → logprob: -9.810254096984863
    10. ' ' → logprob: -10.435254096984863

Token 132: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.6779686808586121
    2. ' swap' → logprob: -1.1779687404632568
    3. 'self' → logprob: -1.9279687404632568
    4. ' self' → logprob: -4.052968502044678
    5. ')' → logprob: -4.927968502044678
    6. 'counter' → logprob: -5.302968502044678
    7. '):
' → logprob: -5.552968502044678
    8. ' counter' → logprob: -6.177968502044678
    9. '):' → logprob: -7.302968502044678
    10. '   ' → logprob: -7.302968502044678

Token 133: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.00417574867606163
    2. 'counter' → logprob: -5.504175662994385
    3. 'Counter' → logprob: -9.379176139831543
    4. 'per' → logprob: -12.379176139831543
    5. '_count' → logprob: -12.629176139831543
    6. 'ounter' → logprob: -13.504176139831543
    7. '_tracker' → logprob: -13.504176139831543
    8. ' counter' → logprob: -13.754176139831543
    9. 'er' → logprob: -14.629176139831543
    10. ' Counter' → logprob: -15.504176139831543

Token 134: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010723850573413074
    2. '):' → logprob: -9.375106811523438
    3. ' :' → logprob: -11.625106811523438
    4. '=' → logprob: -11.750106811523438
    5. '=None' → logprob: -12.250106811523438
    6. ' ):' → logprob: -15.250106811523438
    7. ' =' → logprob: -15.625106811523438
    8. '):
' → logprob: -16.250106811523438
    9. ')' → logprob: -16.375106811523438
    10. ':=' → logprob: -17.000106811523438

Token 135: ' Swap' (ID: 76518)
  Prédit: 'Swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Swap' → logprob: -0.25197264552116394
    2. ' Swap' → logprob: -1.5019726753234863
    3. 'Optional' → logprob: -10.501972198486328
    4. ' Optional' → logprob: -12.126972198486328
    5. ' ' → logprob: -12.376972198486328
    6. ')' → logprob: -12.626972198486328
    7. '   ' → logprob: -14.126972198486328
    8. 'None' → logprob: -14.376972198486328
    9. '_swap' → logprob: -14.626972198486328
    10. ' None' → logprob: -14.751972198486328

Token 136: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -3.128163257315464e-07
    2. 'ounter' → logprob: -16.75
    3. 'Count' → logprob: -17.0
    4. '_counter' → logprob: -17.5
    5. 'counter' → logprob: -17.875
    6. ' Counter' → logprob: -18.0
    7. 'Coun' → logprob: -20.0
    8. '_COUNTER' → logprob: -20.125
    9. '.Counter' → logprob: -20.125
    10. ' counter' → logprob: -21.625

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003000696888193488
    2. '):
' → logprob: -8.750300407409668
    3. ')' → logprob: -8.875300407409668
    4. ':' → logprob: -13.875300407409668
    5. ' ):' → logprob: -14.375300407409668
    6. '):
' → logprob: -15.750300407409668
    7. '   ' → logprob: -16.37529945373535
    8. '=None' → logprob: -17.75029945373535
    9. ' ' → logprob: -17.87529945373535
    10. '():' → logprob: -19.12529945373535

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.0219828002154827e-05
    2. ' self' → logprob: -11.250020027160645
    3. 'self' → logprob: -12.250020027160645
    4. '   ' → logprob: -14.000020027160645
    5. ':' → logprob: -14.375020027160645
    6. ',' → logprob: -15.375020027160645
    7. '	self' → logprob: -15.750020027160645
    8. '):
' → logprob: -16.00002098083496
    9. '	' → logprob: -16.37502098083496
    10. '):' → logprob: -16.62502098083496

Token 139: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6943754553794861
    2. 'self' (adapté à ' self') → logprob: -0.9443754553794861
    3. '       ' → logprob: -2.194375514984131
    4. '   ' → logprob: -8.444375038146973
    5. '	self' → logprob: -10.694375038146973
    6. ' ' → logprob: -11.194375038146973
    7. 'super' → logprob: -13.069375038146973
    8. ' super' → logprob: -13.319375038146973
    9. '     ' → logprob: -13.444375038146973
    10. '      ' → logprob: -13.569375038146973

Token 140: '.swap' (ID: 111356)
  Prédit: '.swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.swap' → logprob: -0.3136199116706848
    2. '.' → logprob: -1.31361985206604
    3. ' .' → logprob: -8.438619613647461
    4. '.sw' → logprob: -9.063619613647461
    5. '.s' → logprob: -10.938619613647461
    6. '	swap' → logprob: -13.313619613647461
    7. 'swap' → logprob: -13.438619613647461
    8. ' swap' → logprob: -13.563619613647461
    9. '.counter' → logprob: -13.938619613647461
    10. '._' → logprob: -14.438619613647461

Token 141: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -7.896309739408025e-07
    2. '_count' → logprob: -15.000000953674316
    3. '_' → logprob: -15.375000953674316
    4. '_c' → logprob: -16.125
    5. ' _' → logprob: -16.75
    6. 'counter' → logprob: -17.375
    7. '_controller' → logprob: -18.625
    8. '_COUNTER' → logprob: -18.625
    9. '   ' → logprob: -19.375
    10. 'ounter' → logprob: -19.5

Token 142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '.' → logprob: -17.28522491455078
    4. ' ' → logprob: -17.53522491455078
    5. '   ' → logprob: -17.53522491455078
    6. '.=' → logprob: -18.53522491455078
    7. ')' → logprob: -18.91022491455078
    8. '	' → logprob: -19.28522491455078
    9. '=

' → logprob: -19.28522491455078
    10. '    ' → logprob: -19.66022491455078

Token 143: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.38687586784362793
    2. ' swap' → logprob: -1.136875867843628
    3. '	swap' → logprob: -12.636876106262207
    4. 'sw' → logprob: -13.761876106262207
    5. '.swap' → logprob: -15.636876106262207
    6. '_swap' → logprob: -15.761876106262207
    7. ' ' → logprob: -16.63687515258789
    8. '   ' → logprob: -17.38687515258789
    9. '       ' → logprob: -17.51187515258789
    10. 'Swap' → logprob: -17.51187515258789

Token 144: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -5.0259150157216936e-05
    2. 'counter' → logprob: -10.50005054473877
    3. 'ounter' → logprob: -11.37505054473877
    4. 'Counter' → logprob: -12.00005054473877
    5. 'er' → logprob: -12.37505054473877
    6. '_count' → logprob: -15.25005054473877
    7. '_' → logprob: -15.87505054473877
    8. '_COUNTER' → logprob: -16.375049591064453
    9. ' _' → logprob: -16.500049591064453
    10. '_c' → logprob: -16.625049591064453

Token 145: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.034100085496902466
    2. '   ' → logprob: -3.53410005569458
    3. '    
' → logprob: -6.03410005569458
    4. '

' → logprob: -7.28410005569458
    5. 'def' → logprob: -7.53410005569458
    6. '<|end|>' → logprob: -7.53410005569458
    7. '<|end|>' → logprob: -9.409100532531738
    8. '  
' → logprob: -10.034100532531738
    9. '        
' → logprob: -10.534100532531738
    10. ' 
' → logprob: -11.659100532531738

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002768859500065446
    2. '
' → logprob: -6.1277689933776855
    3. 'def' → logprob: -8.127768516540527
    4. '    
' → logprob: -8.252768516540527
    5. '        
' → logprob: -10.877768516540527
    6. '<|end|>' → logprob: -12.502768516540527
    7. '       ' → logprob: -13.627768516540527
    8. ' def' → logprob: -13.877768516540527
    9. '<|end|>' → logprob: -13.877768516540527
    10. '  
' → logprob: -14.002768516540527

Token 147: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.842555426876061e-06
    2. ' def' → logprob: -12.250004768371582
    3. '
' → logprob: -18.7500057220459
    4. '   ' → logprob: -20.2500057220459
    5. '    
' → logprob: -22.3750057220459
    6. 'de' → logprob: -22.7500057220459
    7. '	def' → logprob: -23.2500057220459
    8. 'Def' → logprob: -23.8750057220459
    9. '        
' → logprob: -24.0000057220459
    10. '

' → logprob: -24.1250057220459

Token 148: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.014177731238305569
    2. ' sort' → logprob: -4.2641777992248535
    3. 'def' → logprob: -11.514177322387695
    4. ' ' → logprob: -13.764177322387695
    5. ' def' → logprob: -14.139177322387695
    6. '_sort' → logprob: -14.889177322387695
    7. '	sort' → logprob: -14.889177322387695
    8. '.sort' → logprob: -15.264177322387695
    9. 's' → logprob: -15.389177322387695
    10. 'sorted' → logprob: -15.639177322387695

Token 149: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.248469718324486e-05
    2. '(' → logprob: -10.875022888183594
    3. ' (' → logprob: -13.375022888183594
    4. 'self' → logprob: -13.500022888183594
    5. '       ' → logprob: -15.375022888183594
    6. '   ' → logprob: -15.875022888183594
    7. '(
' → logprob: -16.000022888183594
    8. '(data' → logprob: -16.750022888183594
    9. ' self' → logprob: -17.125022888183594
    10. ' ' → logprob: -18.625022888183594

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.91732100979425e-05
    2. 'self' → logprob: -10.250039100646973
    3. '       ' → logprob: -13.250039100646973
    4. ' ,' → logprob: -13.625039100646973
    5. ',self' → logprob: -14.875039100646973
    6. ',data' → logprob: -15.125039100646973
    7. '   ' → logprob: -16.37504005432129
    8. 'data' → logprob: -18.12504005432129
    9. '(self' → logprob: -18.12504005432129
    10. ' self' → logprob: -18.62504005432129

Token 151: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.2815670073032379
    2. 'data' → logprob: -1.4065669775009155
    3. 'self' → logprob: -8.031566619873047
    4. ' self' → logprob: -9.406566619873047
    5. '   ' → logprob: -12.531566619873047
    6. '       ' → logprob: -12.531566619873047
    7. ' ' → logprob: -14.031566619873047
    8. '	data' → logprob: -14.656566619873047
    9. '    ' → logprob: -15.781566619873047
    10. 'd' → logprob: -15.906566619873047

Token 152: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.840432565193623e-05
    2. '):' → logprob: -9.375088691711426
    3. ')' → logprob: -13.500088691711426
    4. ' :' → logprob: -14.000088691711426
    5. '):
' → logprob: -14.375088691711426
    6. ' ):' → logprob: -14.875088691711426
    7. '   ' → logprob: -15.625088691711426
    8. ':list' → logprob: -16.87508773803711
    9. '       ' → logprob: -18.37508773803711
    10. '[' → logprob: -18.37508773803711

Token 153: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.009920408017933369
    2. 'List' → logprob: -4.634920597076416
    3. ')' → logprob: -9.634920120239258
    4. '[List' → logprob: -9.759920120239258
    5. ' [' → logprob: -11.259920120239258
    6. ' list' → logprob: -12.009920120239258
    7. ' data' → logprob: -12.259920120239258
    8. ' )' → logprob: -12.259920120239258
    9. ' Optional' → logprob: -12.384920120239258
    10. ' [])' → logprob: -12.884920120239258

Token 154: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.128163257315464e-07
    2. '<int' → logprob: -16.125
    3. 'int' → logprob: -16.25
    4. ')' → logprob: -17.375
    5. '[Int' → logprob: -18.0
    6. '   ' → logprob: -18.125
    7. '[' → logprob: -18.625
    8. ' [' → logprob: -19.0
    9. '       ' → logprob: -20.5
    10. '
' → logprob: -21.0

Token 155: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07893087714910507
    2. ')' → logprob: -2.5789308547973633
    3. ']' → logprob: -10.453930854797363
    4. ']):' → logprob: -12.203930854797363
    5. ']):
' → logprob: -13.328930854797363
    6. '   ' → logprob: -13.828930854797363
    7. '):' → logprob: -13.828930854797363
    8. ' ])' → logprob: -14.453930854797363
    9. '）' → logprob: -14.578930854797363
    10. '`)' → logprob: -14.703930854797363

Token 156: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.2962108254432678
    2. ' ->' → logprob: -1.921210765838623
    3. ':' → logprob: -2.296210765838623
    4. ')' → logprob: -4.796210765838623
    5. '   ' → logprob: -7.171210765838623
    6. ')->' → logprob: -8.921211242675781
    7. ':
' → logprob: -9.796211242675781
    8. '       ' → logprob: -9.921211242675781
    9. '>' → logprob: -12.046211242675781
    10. ':void' → logprob: -12.171211242675781

Token 157: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14291274547576904
    2. ' int' → logprob: -2.0179128646850586
    3. 'None' → logprob: -8.892912864685059
    4. ' None' → logprob: -9.642912864685059
    5. 'Optional' → logprob: -10.767912864685059
    6. ' Optional' → logprob: -11.642912864685059
    7. '   ' → logprob: -13.142912864685059
    8. ' ' → logprob: -13.642912864685059
    9. '	int' → logprob: -14.517912864685059
    10. '[int' → logprob: -14.642912864685059

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00793345458805561
    2. ':
' → logprob: -4.882933616638184
    3. '):' → logprob: -8.507933616638184
    4. '       ' → logprob: -9.507933616638184
    5. '):
' → logprob: -10.007933616638184
    6. '():' → logprob: -13.757933616638184
    7. ':def' → logprob: -13.882933616638184
    8. ' :' → logprob: -14.257933616638184
    9. ':
' → logprob: -14.507933616638184
    10. '   ' → logprob: -14.757933616638184

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002705145161598921
    2. '
' → logprob: -8.50027084350586
    3. 'self' → logprob: -10.37527084350586
    4. '        
' → logprob: -11.12527084350586
    5. 'n' → logprob: -11.75027084350586
    6. ' self' → logprob: -12.00027084350586
    7. '```' → logprob: -12.75027084350586
    8. '   ' → logprob: -14.25027084350586
    9. '    
' → logprob: -14.62527084350586
    10. '  
' → logprob: -14.75027084350586

Token 160: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.1783083826303482
    2. 'self' → logprob: -1.928308367729187
    3. '       ' → logprob: -4.178308486938477
    4. ' n' → logprob: -6.303308486938477
    5. ' self' → logprob: -7.178308486938477
    6. '   ' → logprob: -12.928308486938477
    7. '```' → logprob: -14.303308486938477
    8. ' ' → logprob: -15.178308486938477
    9. '
' → logprob: -15.553308486938477
    10. '	n' → logprob: -15.678308486938477

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4552256166934967
    2. '=' → logprob: -1.3302255868911743
    3. ':' → logprob: -2.330225706100464
    4. '=len' → logprob: -6.705225467681885
    5. '   ' → logprob: -7.330225467681885
    6. '):' → logprob: -7.455225467681885
    7. 'for' → logprob: -7.705225467681885
    8. '       ' → logprob: -8.080225944519043
    9. ' :' → logprob: -8.080225944519043
    10. ' for' → logprob: -8.955225944519043

Token 162: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5759397745132446
    2. 'len' → logprob: -0.8259397745132446
    3. '       ' → logprob: -15.700940132141113
    4. '(len' → logprob: -16.450939178466797
    5. '=len' → logprob: -16.950939178466797
    6. '	len' → logprob: -18.075939178466797
    7. '[len' → logprob: -19.200939178466797
    8. ',len' → logprob: -20.575939178466797
    9. '   ' → logprob: -20.700939178466797
    10. '```' → logprob: -21.450939178466797

Token 163: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -3.309382373117842e-05
    2. '(' → logprob: -10.375033378601074
    3. 'data' → logprob: -13.375033378601074
    4. ' (' → logprob: -15.875033378601074
    5. ' data' → logprob: -16.125032424926758
    6. '=data' → logprob: -18.125032424926758
    7. '(
' → logprob: -18.375032424926758
    8. ',data' → logprob: -18.625032424926758
    9. '[data' → logprob: -19.375032424926758
    10. ')data' → logprob: -19.500032424926758

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0381641685962677
    2. ')
' → logprob: -3.2881641387939453
    3. ' )' → logprob: -9.663164138793945
    4. '       ' → logprob: -9.913164138793945
    5. ' )
' → logprob: -12.038164138793945
    6. '   ' → logprob: -13.538164138793945
    7. ')
' → logprob: -14.038164138793945
    8. ')

' → logprob: -15.038164138793945
    9. '):
' → logprob: -15.038164138793945
    10. ')n' → logprob: -15.288164138793945

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047532569617033005
    2. ' for' → logprob: -3.172532558441162
    3. 'for' → logprob: -5.422532558441162
    4. '        
' → logprob: -9.79753303527832
    5. '
' → logprob: -10.79753303527832
    6. '   ' → logprob: -11.04753303527832
    7. '	for' → logprob: -12.67253303527832
    8. ' ' → logprob: -13.54753303527832
    9. '```' → logprob: -13.67253303527832
    10. '           ' → logprob: -13.79753303527832

Token 166: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02023235894739628
    2. ' for' → logprob: -4.520232200622559
    3. 'self' (adapté à ' self') → logprob: -4.770232200622559
    4. ' self' → logprob: -7.895232200622559
    5. '       ' → logprob: -8.145232200622559
    6. '   ' → logprob: -13.895232200622559
    7. 'sw' → logprob: -15.520232200622559
    8. '        
' → logprob: -16.145233154296875
    9. '        ' → logprob: -16.895233154296875
    10. 'if' → logprob: -17.020233154296875

Token 167: '.swap' (ID: 111356)
  Prédit: '.swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.swap' → logprob: -2.2127087504486553e-05
    2. '.' → logprob: -11.125021934509277
    3. ' .' → logprob: -12.125021934509277
    4. '.sw' → logprob: -13.875021934509277
    5. '.reset' → logprob: -15.375021934509277
    6. 'swap' → logprob: -16.000022888183594
    7. '.s' → logprob: -16.125022888183594
    8. '	swap' → logprob: -16.375022888183594
    9. '​.' → logprob: -16.500022888183594
    10. '.swing' → logprob: -17.125022888183594

Token 168: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -1.9361264946837764e-07
    2. 'counter' → logprob: -16.5
    3. '_count' → logprob: -18.125
    4. '_' → logprob: -18.625
    5. '._' → logprob: -19.375
    6. ' _' → logprob: -19.75
    7. '_c' → logprob: -19.875
    8. 'Counter' → logprob: -20.125
    9. '_COUNTER' → logprob: -20.25
    10. 'ounter' → logprob: -20.375

Token 169: '.reset' (ID: 25315)
  Prédit: '.reset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reset' → logprob: -1.282920129597187e-05
    2. '.' → logprob: -11.375012397766113
    3. ' .' → logprob: -14.375012397766113
    4. '.increment' → logprob: -15.000012397766113
    5. '.restart' → logprob: -15.250012397766113
    6. '.clear' → logprob: -17.12501335144043
    7. '.refresh' → logprob: -18.12501335144043
    8. '.Reset' → logprob: -18.50001335144043
    9. '.swap' → logprob: -18.50001335144043
    10. '.set' → logprob: -19.62501335144043

Token 170: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.31331557035446167
    2. '()' → logprob: -1.3133156299591064
    3. '()
' → logprob: -9.938315391540527
    4. '()

' → logprob: -12.438315391540527
    5. '()\' → logprob: -13.938315391540527
    6. '       ' → logprob: -14.313315391540527
    7. '()`' → logprob: -17.313316345214844
    8. '()<' → logprob: -17.438316345214844
    9. 'for' → logprob: -18.188316345214844
    10. '();' → logprob: -18.313316345214844

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034433805849403143
    2. 'for' → logprob: -6.253443241119385
    3. ' for' → logprob: -6.503443241119385
    4. '   ' → logprob: -11.253443717956543
    5. '
' → logprob: -13.253443717956543
    6. '	for' → logprob: -15.003443717956543
    7. '        
' → logprob: -15.628443717956543
    8. '           ' → logprob: -16.503442764282227
    9. ' ' → logprob: -17.128442764282227
    10. '```' → logprob: -17.253442764282227

Token 172: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0024125154595822096
    2. ' for' → logprob: -6.50241231918335
    3. '       ' → logprob: -7.00241231918335
    4. '	for' → logprob: -17.502412796020508
    5. '        
' → logprob: -17.627412796020508
    6. '   ' → logprob: -17.627412796020508
    7. '
' → logprob: -19.252412796020508
    8. '```' → logprob: -19.502412796020508
    9. ' ' → logprob: -20.127412796020508
    10. '           ' → logprob: -20.252412796020508

Token 173: ' uns' (ID: 3975)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01815767213702202
    2. 'i' → logprob: -4.018157482147217
    3. '	i' → logprob: -12.393157958984375
    4. ' ' → logprob: -13.268157958984375
    5. '   ' → logprob: -13.643157958984375
    6. ' ' → logprob: -15.143157958984375
    7. '  ' → logprob: -15.518157958984375
    8. '```' → logprob: -16.518157958984375
    9. '    ' → logprob: -16.768157958984375
    10. '_i' → logprob: -17.518157958984375

Token 174: 'orted' (ID: 22502)
  Prédit: 'orted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orted' → logprob: -0.034574877470731735
    2. '       ' → logprob: -3.5345749855041504
    3. '   ' → logprob: -5.78457498550415
    4. 't' → logprob: -7.28457498550415
    5. '           ' → logprob: -8.534574508666992
    6. '```' → logprob: -8.909574508666992
    7. 'ort' → logprob: -9.034574508666992
    8. '[' → logprob: -9.034574508666992
    9. '=' → logprob: -9.159574508666992
    10. 'ted' → logprob: -9.784574508666992

Token 175: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.5087077021598816
    2. '_index' → logprob: -1.3837077617645264
    3. '_i' → logprob: -3.0087077617645264
    4. '_up' → logprob: -3.7587077617645264
    5. '_range' → logprob: -4.133707523345947
    6. '_' → logprob: -4.258707523345947
    7. '_right' → logprob: -4.383707523345947
    8. '_until' → logprob: -4.633707523345947
    9. '_idx' → logprob: -5.258707523345947
    10. '_limit' → logprob: -5.383707523345947

Token 176: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026558971032500267
    2. 'in' → logprob: -3.6515588760375977
    3. '   ' → logprob: -8.401558876037598
    4. ' ' → logprob: -11.526558876037598
    5. '    ' → logprob: -12.151558876037598
    6. '  ' → logprob: -12.401558876037598
    7. '       ' → logprob: -12.901558876037598
    8. '	in' → logprob: -13.026558876037598
    9. '=' → logprob: -13.276558876037598
    10. 'In' → logprob: -13.401558876037598

Token 177: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038048144429922104
    2. ' range' → logprob: -3.288048028945923
    3. '   ' → logprob: -12.163047790527344
    4. 're' → logprob: -14.413047790527344
    5. ' ' → logprob: -15.038047790527344
    6. '  ' → logprob: -15.788047790527344
    7. '	range' → logprob: -15.913047790527344
    8. '    ' → logprob: -16.163047790527344
    9. 'reverse' → logprob: -16.288047790527344
    10. '       ' → logprob: -17.163047790527344

Token 178: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00033665422233752906
    2. '(' → logprob: -8.000336647033691
    3. 'n' → logprob: -14.500336647033691
    4. '(
' → logprob: -14.875336647033691
    5. ' (' → logprob: -15.250336647033691
    6. ' n' → logprob: -16.500337600708008
    7. '	n' → logprob: -17.125337600708008
    8. '(len' → logprob: -18.750337600708008
    9. '(

' → logprob: -20.000337600708008
    10. ',n' → logprob: -20.375337600708008

Token 179: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3486272990703583
    2. '-' → logprob: -1.2236273288726807
    3. ',' → logprob: -8.723627090454102
    4. '   ' → logprob: -11.723627090454102
    5. ' ' → logprob: -11.848627090454102
    6. ' ,' → logprob: -12.723627090454102
    7. '       ' → logprob: -14.473627090454102
    8. ')' → logprob: -15.223627090454102
    9. '  ' → logprob: -15.223627090454102
    10. '1' → logprob: -15.348627090454102

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47793957591056824
    2. '1' → logprob: -0.9779396057128906
    3. ' ' → logprob: -5.602939605712891
    4. '   ' → logprob: -8.72793960571289
    5. '
' → logprob: -13.60293960571289
    6. '           ' → logprob: -13.97793960571289
    7. '    ' → logprob: -13.97793960571289
    8. '       ' → logprob: -14.22793960571289
    9. '```' → logprob: -14.35293960571289
    10. '  ' → logprob: -14.47793960571289

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03807660564780235
    2. '0' → logprob: -3.288076639175415
    3. ' ' → logprob: -10.288076400756836
    4. '   ' → logprob: -14.288076400756836
    5. '```' → logprob: -15.288076400756836
    6. '
' → logprob: -15.413076400756836
    7. '-' → logprob: -16.788076400756836
    8. ')' → logprob: -18.038076400756836
    9. '  ' → logprob: -18.288076400756836
    10. '

' → logprob: -18.413076400756836

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029364600777626038
    2. ' -' → logprob: -6.252936363220215
    3. '-' → logprob: -7.002936363220215
    4. ' ,' → logprob: -9.502936363220215
    5. ',-' → logprob: -10.877936363220215
    6. '   ' → logprob: -12.627936363220215
    7. ' ,-' → logprob: -14.127936363220215
    8. '-,' → logprob: -15.502936363220215
    9. ',
' → logprob: -15.627936363220215
    10. ' ' → logprob: -15.877936363220215

Token 183: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011050059460103512
    2. ' -' → logprob: -4.511050224304199
    3. ' ' → logprob: -13.7610502243042
    4. '   ' → logprob: -13.8860502243042
    5. '  ' → logprob: -15.6360502243042
    6. ')' → logprob: -17.761049270629883
    7. '    ' → logprob: -17.886049270629883
    8. ',-' → logprob: -18.011049270629883
    9. '```' → logprob: -18.011049270629883
    10. '           ' → logprob: -18.261049270629883

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.8750057220459
    4. '):
' → logprob: -17.7500057220459
    5. ')' → logprob: -17.8750057220459
    6. '-' → logprob: -18.0000057220459
    7. '
' → logprob: -18.5000057220459
    8. ',' → logprob: -19.1250057220459
    9. '  ' → logprob: -19.3750057220459
    10. '```' → logprob: -19.7500057220459

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020777897909283638
    2. '):
' → logprob: -3.895777940750122
    3. ' ):' → logprob: -8.645777702331543
    4. ')' → logprob: -10.395777702331543
    5. ':' → logprob: -11.395777702331543
    6. ',' → logprob: -12.145777702331543
    7. ' ):
' → logprob: -12.145777702331543
    8. '):
' → logprob: -12.770777702331543
    9. '-' → logprob: -13.520777702331543
    10. '):

' → logprob: -13.645777702331543

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009411195642314851
    2. ':' → logprob: -7.875941276550293
    3. '       ' → logprob: -8.625941276550293
    4. '            
' → logprob: -9.250941276550293
    5. '
' → logprob: -9.625941276550293
    6. '               ' → logprob: -10.375941276550293
    7. ':
' → logprob: -10.500941276550293
    8. '   ' → logprob: -10.500941276550293
    9. ',' → logprob: -10.625941276550293
    10. ' for' → logprob: -10.750941276550293

Token 187: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.627086341381073
    2. 'for' (adapté à ' for') → logprob: -0.877086341381073
    3. ' for' → logprob: -3.0020864009857178
    4. '   ' → logprob: -9.877086639404297
    5. '       ' → logprob: -10.127086639404297
    6. ' swapped' → logprob: -10.127086639404297
    7. 'sw' → logprob: -10.877086639404297
    8. '               ' → logprob: -11.002086639404297
    9. 'changed' → logprob: -13.377086639404297
    10. '	for' → logprob: -13.502086639404297

Token 188: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38717135787010193
    2. 'i' → logprob: -1.1371713876724243
    3. ' j' → logprob: -8.637171745300293
    4. 'j' → logprob: -9.262171745300293
    5. ' ' → logprob: -11.137171745300293
    6. '   ' → logprob: -12.137171745300293
    7. '	i' → logprob: -12.387171745300293
    8. ' index' → logprob: -14.137171745300293
    9. '    ' → logprob: -14.137171745300293
    10. '  ' → logprob: -14.387171745300293

Token 189: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004781949799507856
    2. 'in' → logprob: -5.629781723022461
    3. ' ' → logprob: -6.754781723022461
    4. '1' → logprob: -11.879781723022461
    5. '=' → logprob: -13.129781723022461
    6. '	in' → logprob: -13.754781723022461
    7. '(' → logprob: -14.129781723022461
    8. '0' → logprob: -14.379781723022461
    9. 'range' → logprob: -14.379781723022461
    10. ' i' → logprob: -14.754781723022461

Token 190: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38693922758102417
    2. ' range' → logprob: -1.136939287185669
    3. ' ' → logprob: -9.88693904876709
    4. ' in' → logprob: -11.88693904876709
    5. '   ' → logprob: -12.38693904876709
    6. '0' → logprob: -13.51193904876709
    7. '(range' → logprob: -13.76193904876709
    8. '	range' → logprob: -14.01193904876709
    9. '    ' → logprob: -14.13693904876709
    10. 'uns' → logprob: -14.76193904876709

Token 191: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.9888433093437925e-05
    2. 'uns' → logprob: -10.250040054321289
    3. '   ' → logprob: -13.375040054321289
    4. '1' → logprob: -14.125040054321289
    5. ' ' → logprob: -14.375040054321289
    6. '(
' → logprob: -14.875040054321289
    7. ' (' → logprob: -15.375040054321289
    8. '       ' → logprob: -15.375040054321289
    9. '_uns' → logprob: -15.500040054321289
    10. ' uns' → logprob: -16.00004005432129

Token 192: 'uns' (ID: 4290)
  Prédit: 'uns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uns' → logprob: -0.0011272405972704291
    2. '1' → logprob: -7.001127243041992
    3. ' uns' → logprob: -8.626127243041992
    4. '   ' → logprob: -10.376127243041992
    5. ' ' → logprob: -13.376127243041992
    6. '0' → logprob: -13.501127243041992
    7. '       ' → logprob: -14.376127243041992
    8. '_uns' → logprob: -15.001127243041992
    9. '    ' → logprob: -15.126127243041992
    10. '.uns' → logprob: -15.376127243041992

Token 193: 'orted' (ID: 22502)
  Prédit: 'orted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orted' → logprob: -0.38727787137031555
    2. 'sorted' → logprob: -1.1372778415679932
    3. '       ' → logprob: -8.387277603149414
    4. 'ort' → logprob: -9.762277603149414
    5. '           ' → logprob: -10.262277603149414
    6. '               ' → logprob: -10.637277603149414
    7. '_sorted' → logprob: -11.012277603149414
    8. '.sorted' → logprob: -11.262277603149414
    9. '(sorted' → logprob: -11.387277603149414
    10. '   ' → logprob: -12.262277603149414

Token 194: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0001182052365038544
    2. 'end' → logprob: -9.375118255615234
    3. 'End' → logprob: -10.750118255615234
    4. '           ' → logprob: -12.750118255615234
    5. '       ' → logprob: -12.750118255615234
    6. '   ' → logprob: -13.250118255615234
    7. '_start' → logprob: -13.250118255615234
    8. '_' → logprob: -15.250118255615234
    9. '_END' → logprob: -15.625118255615234
    10. '
' → logprob: -15.750118255615234

Token 195: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1002415120601654
    2. '-' → logprob: -2.3502414226531982
    3. '           ' → logprob: -11.350241661071777
    4. '   ' → logprob: -11.600241661071777
    5. '1' → logprob: -11.725241661071777
    6. ' ' → logprob: -12.350241661071777
    7. '               ' → logprob: -13.850241661071777
    8. '  ' → logprob: -16.22524070739746
    9. '       ' → logprob: -16.22524070739746
    10. '    ' → logprob: -16.60024070739746

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001613459608051926
    2. ' ' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.625161170959473
    4. '           ' → logprob: -13.875161170959473
    5. '    ' → logprob: -16.00016212463379
    6. ')' → logprob: -16.37516212463379
    7. '       ' → logprob: -16.37516212463379
    8. '                   ' → logprob: -16.37516212463379
    9. '     ' → logprob: -16.62516212463379
    10. '               ' → logprob: -16.75016212463379

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.250019073486328
    4. '           ' → logprob: -17.875019073486328
    5. '```' → logprob: -17.875019073486328
    6. ')' → logprob: -18.000019073486328
    7. '    ' → logprob: -18.125019073486328
    8. '  ' → logprob: -18.250019073486328
    9. '       ' → logprob: -18.437519073486328
    10. '2' → logprob: -18.500019073486328

Token 198: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02980441227555275
    2. '):
' → logprob: -3.5298044681549072
    3. '):
' → logprob: -10.779804229736328
    4. '   ' → logprob: -11.404804229736328
    5. ' ):' → logprob: -12.029804229736328
    6. ')' → logprob: -12.154804229736328
    7. ':' → logprob: -12.404804229736328
    8. '       ' → logprob: -13.029804229736328
    9. '           ' → logprob: -13.779804229736328
    10. '):

' → logprob: -13.904804229736328

Token 199: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001728372066281736
    2. ' if' → logprob: -6.376728534698486
    3. '           ' → logprob: -11.751728057861328
    4. '                
' → logprob: -11.876728057861328
    5. 'if' → logprob: -12.001728057861328
    6. '                ' → logprob: -13.626728057861328
    7. '              ' → logprob: -13.626728057861328
    8. ',' → logprob: -14.251728057861328
    9. '                   ' → logprob: -14.876728057861328
    10. '<|end|>' → logprob: -15.251728057861328

Token 200: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.106306292116642
    2. 'if' (adapté à ' if') → logprob: -2.731306314468384
    3. '                   ' → logprob: -3.356306314468384
    4. '           ' → logprob: -7.481306076049805
    5. '               ' → logprob: -8.731306076049805
    6. '                    ' → logprob: -10.481306076049805
    7. '                    
' → logprob: -10.481306076049805
    8. '                ' → logprob: -10.731306076049805
    9. '```' → logprob: -11.231306076049805
    10. ' 
' → logprob: -12.106306076049805

Token 201: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.0013284528395161033
    2. 'data' → logprob: -6.626328468322754
    3. '	data' → logprob: -13.126328468322754
    4. '                   ' → logprob: -15.001328468322754
    5. '(data' → logprob: -16.376327514648438
    6. '    ' → logprob: -16.876327514648438
    7. ' ' → logprob: -17.001327514648438
    8. ' ' → logprob: -17.251327514648438
    9. '                ' → logprob: -17.751327514648438
    10. '.data' → logprob: -17.876327514648438

Token 202: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014406509581021965
    2. '[' → logprob: -8.875144004821777
    3. ' [' → logprob: -12.500144004821777
    4. 'i' → logprob: -16.250144958496094
    5. '[
' → logprob: -16.625144958496094
    6. '```' → logprob: -16.750144958496094
    7. ' ' → logprob: -17.000144958496094
    8. ' i' → logprob: -17.125144958496094
    9. '

' → logprob: -17.875144958496094
    10. '   ' → logprob: -18.375144958496094

Token 203: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.14433588087558746
    2. ' >' → logprob: -2.019335985183716
    3. ']' → logprob: -6.519335746765137
    4. ']>' → logprob: -8.644335746765137
    5. '[' → logprob: -12.894335746765137
    6. ' ]' → logprob: -13.019335746765137
    7. ' ' → logprob: -13.144335746765137
    8. ',' → logprob: -15.144335746765137
    9. '```' → logprob: -15.144335746765137
    10. '">' → logprob: -15.519335746765137

Token 204: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.11283966153860092
    2. '>' → logprob: -2.237839698791504
    3. ' ' → logprob: -11.112839698791504
    4. ',' → logprob: -14.612839698791504
    5. '[' → logprob: -14.862839698791504
    6. ']>' → logprob: -14.987839698791504
    7. ' ' → logprob: -15.487839698791504
    8. '">' → logprob: -15.612839698791504
    9. ']' → logprob: -15.862839698791504
    10. '```' → logprob: -15.862839698791504

Token 205: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.06196858361363411
    2. 'data' → logprob: -2.8119685649871826
    3. ' ' → logprob: -14.561968803405762
    4. '	data' → logprob: -14.811968803405762
    5. '.data' → logprob: -17.311967849731445
    6. '   ' → logprob: -17.436967849731445
    7. '(data' → logprob: -17.561967849731445
    8. ' ' → logprob: -17.561967849731445
    9. '    ' → logprob: -18.061967849731445
    10. '```' → logprob: -18.936967849731445

Token 206: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.729906196298543e-06
    2. '[' → logprob: -11.875009536743164
    3. ' [' → logprob: -13.875009536743164
    4. '[
' → logprob: -14.500009536743164
    5. 'i' → logprob: -15.375009536743164
    6. '```' → logprob: -15.375009536743164
    7. '[j' → logprob: -15.500009536743164
    8. ']' → logprob: -15.625009536743164
    9. '][' → logprob: -15.625009536743164
    10. '   ' → logprob: -15.625009536743164

Token 207: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022981703281403
    2. ' +' → logprob: -1.9102298021316528
    3. '1' → logprob: -12.660229682922363
    4. ' ' → logprob: -13.660229682922363
    5. '   ' → logprob: -14.660229682922363
    6. ' +
' → logprob: -15.660229682922363
    7. '+
' → logprob: -15.660229682922363
    8. '+i' → logprob: -15.910229682922363
    9. ']' → logprob: -16.28523063659668
    10. ' ' → logprob: -16.53523063659668

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -15.125017166137695
    4. '   ' → logprob: -15.375017166137695
    5. '0' → logprob: -17.125017166137695
    6. ']' → logprob: -18.000017166137695
    7. '+' → logprob: -18.125017166137695
    8. '  ' → logprob: -18.875017166137695
    9. '       ' → logprob: -19.500017166137695
    10. '2' → logprob: -19.500017166137695

Token 209: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5048421621322632
    2. ']:' → logprob: -1.0048421621322632
    3. '):
' → logprob: -3.6298422813415527
    4. ']:
' → logprob: -5.754842281341553
    5. ':' → logprob: -7.879842281341553
    6. ']):' → logprob: -10.254841804504395
    7. '"]:' → logprob: -10.379841804504395
    8. ']' → logprob: -10.629841804504395
    9. ':
' → logprob: -10.754841804504395
    10. ' ):' → logprob: -10.879841804504395

Token 210: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003301016695331782
    2. '               ' → logprob: -9.250329971313477
    3. '                    
' → logprob: -9.875329971313477
    4. ':
' → logprob: -10.000329971313477
    5. ':' → logprob: -10.250329971313477
    6. ',' → logprob: -10.250329971313477
    7. '           ' → logprob: -11.250329971313477
    8. '):
' → logprob: -11.375329971313477
    9. '                       ' → logprob: -11.500329971313477
    10. '                    ' → logprob: -11.750329971313477

Token 211: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.11579738557338715
    2. 'data' (adapté à ' data') → logprob: -2.240797281265259
    3. '                   ' → logprob: -5.865797519683838
    4. '                       ' → logprob: -8.99079704284668
    5. '
' → logprob: -12.74079704284668
    6. '               ' → logprob: -13.24079704284668
    7. '                    ' → logprob: -13.49079704284668
    8. '	data' → logprob: -14.36579704284668
    9. '(data' → logprob: -14.49079704284668
    10. '```' → logprob: -14.61579704284668

Token 212: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0219828002154827e-05
    2. '[' → logprob: -10.875020027160645
    3. 'i' → logprob: -13.625020027160645
    4. ',' → logprob: -16.87502098083496
    5. ' i' → logprob: -17.50002098083496
    6. ',i' → logprob: -17.62502098083496
    7. ' [' → logprob: -17.75002098083496
    8. '```' → logprob: -18.00002098083496
    9. '[
' → logprob: -18.62502098083496
    10. '[j' → logprob: -18.75002098083496

Token 213: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -8.180258191714529e-06
    2. ']' → logprob: -12.500008583068848
    3. ',' → logprob: -12.750008583068848
    4. ' ],' → logprob: -13.500008583068848
    5. '>,' → logprob: -16.87500762939453
    6. '],
' → logprob: -17.25000762939453
    7. '},' → logprob: -18.62500762939453
    8. '"],' → logprob: -19.00000762939453
    9. ':],' → logprob: -19.12500762939453
    10. '[i' → logprob: -19.87500762939453

Token 214: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.20141693949699402
    2. 'data' → logprob: -1.7014169692993164
    3. '	data' → logprob: -13.326416969299316
    4. '<|end|>' → logprob: -14.576416969299316
    5. ' ' → logprob: -14.951416969299316
    6. '[data' → logprob: -15.326416969299316
    7. '                   ' → logprob: -15.576416969299316
    8. '(data' → logprob: -15.576416969299316
    9. '.data' → logprob: -15.701416969299316
    10. 'Data' → logprob: -15.951416969299316

Token 215: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. 'i' → logprob: -12.250004768371582
    3. '[
' → logprob: -16.1250057220459
    4. '[' → logprob: -16.7500057220459
    5. '
' → logprob: -18.3750057220459
    6. '```' → logprob: -19.0000057220459
    7. '{i' → logprob: -19.2500057220459
    8. ' [' → logprob: -19.3750057220459
    9. '(i' → logprob: -19.3750057220459
    10. '1' → logprob: -19.5000057220459

Token 216: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.466968650580384e-05
    2. ' +' → logprob: -9.875054359436035
    3. '[i' → logprob: -13.625054359436035
    4. '1' → logprob: -14.000054359436035
    5. '[' → logprob: -14.750054359436035
    6. '+i' → logprob: -15.000054359436035
    7. 'i' → logprob: -15.125054359436035
    8. '+
' → logprob: -15.250054359436035
    9. ']' → logprob: -17.62505531311035
    10. '   ' → logprob: -17.87505531311035

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '+' → logprob: -16.375003814697266
    4. '```' → logprob: -16.625003814697266
    5. '   ' → logprob: -16.750003814697266
    6. ']' → logprob: -17.375003814697266
    7. 'i' → logprob: -18.750003814697266
    8. '  ' → logprob: -18.937503814697266
    9. '[' → logprob: -19.062503814697266
    10. '       ' → logprob: -19.187503814697266

Token 218: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007827070076018572
    2. ']=' → logprob: -7.250782489776611
    3. ' ]' → logprob: -9.75078296661377
    4. '=' → logprob: -11.37578296661377
    5. ' =' → logprob: -13.87578296661377
    6. '                   ' → logprob: -14.12578296661377
    7. ')' → logprob: -15.00078296661377
    8. '   ' → logprob: -15.62578296661377
    9. '']' → logprob: -16.125782012939453
    10. '               ' → logprob: -16.250782012939453

Token 219: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889342308044434
    2. ' =' → logprob: -2.5788934230804443
    3. '=data' → logprob: -13.453893661499023
    4. '                   ' → logprob: -13.953893661499023
    5. '=
' → logprob: -14.078893661499023
    6. '=

' → logprob: -15.953893661499023
    7. ' =
' → logprob: -16.578893661499023
    8. '.swap' → logprob: -16.703893661499023
    9. '           ' → logprob: -17.203893661499023
    10. '                       ' → logprob: -17.203893661499023

Token 220: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3868732452392578
    2. ' data' → logprob: -1.1368732452392578
    3. '                   ' → logprob: -13.511873245239258
    4. '	data' → logprob: -15.136873245239258
    5. '                       ' → logprob: -16.011873245239258
    6. '(data' → logprob: -16.511873245239258
    7. 'Data' → logprob: -16.511873245239258
    8. ' ' → logprob: -16.636873245239258
    9. '   ' → logprob: -16.886873245239258
    10. '.data' → logprob: -17.011873245239258

Token 221: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8789383830153383e-05
    2. '[' → logprob: -11.625019073486328
    3. 'i' → logprob: -11.625019073486328
    4. '[j' → logprob: -14.750019073486328
    5. '[
' → logprob: -15.750019073486328
    6. ' [' → logprob: -16.000019073486328
    7. '```' → logprob: -17.125019073486328
    8. ' ' → logprob: -18.000019073486328
    9. '   ' → logprob: -18.375019073486328
    10. ' i' → logprob: -18.500019073486328

Token 222: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001462107611587271
    2. ' +' → logprob: -9.75014591217041
    3. '],' → logprob: -9.87514591217041
    4. '[i' → logprob: -10.62514591217041
    5. '1' → logprob: -12.00014591217041
    6. '[' → logprob: -12.37514591217041
    7. ']' → logprob: -14.37514591217041
    8. ',' → logprob: -15.12514591217041
    9. '(i' → logprob: -15.25014591217041
    10. '+i' → logprob: -15.25014591217041

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.5000057220459
    4. 'i' → logprob: -18.2500057220459
    5. '
' → logprob: -18.2500057220459
    6. '```' → logprob: -18.8750057220459
    7. '[i' → logprob: -19.3750057220459
    8. '+' → logprob: -20.0000057220459
    9. '  ' → logprob: -20.0000057220459
    10. '0' → logprob: -20.1250057220459

Token 224: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005203855689615011
    2. '],' → logprob: -8.375520706176758
    3. ' ,' → logprob: -8.875520706176758
    4. ',data' → logprob: -8.875520706176758
    5. 'data' → logprob: -12.375520706176758
    6. ',i' → logprob: -13.375520706176758
    7. ']' → logprob: -13.375520706176758
    8. ',
' → logprob: -13.875520706176758
    9. ' data' → logprob: -15.000520706176758
    10. ' ],' → logprob: -15.250520706176758

Token 225: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1269284337759018
    2. ' data' → logprob: -2.1269283294677734
    3. '	data' → logprob: -15.626928329467773
    4. ' ' → logprob: -17.126928329467773
    5. '.data' → logprob: -17.501928329467773
    6. '[data' → logprob: -17.876928329467773
    7. '   ' → logprob: -18.126928329467773
    8. ')data' → logprob: -18.126928329467773
    9. '(data' → logprob: -18.126928329467773
    10. '$data' → logprob: -18.251928329467773

Token 226: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.125
    3. 'i' → logprob: -16.0
    4. '[
' → logprob: -18.125
    5. ']' → logprob: -18.75
    6. '```' → logprob: -18.875
    7. '[data' → logprob: -20.5
    8. '[I' → logprob: -20.75
    9. '{i' → logprob: -21.0
    10. '   ' → logprob: -21.875

Token 227: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.03815096244215965
    2. ']' → logprob: -3.2881510257720947
    3. '                   ' → logprob: -9.413150787353516
    4. ']
' → logprob: -11.163150787353516
    5. ']

' → logprob: -12.288150787353516
    6. ')
' → logprob: -12.663150787353516
    7. '               ' → logprob: -13.288150787353516
    8. 'self' → logprob: -13.788150787353516
    9. 'data' → logprob: -14.538150787353516
    10. '       ' → logprob: -14.913150787353516

Token 228: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00010366239439463243
    2. 'self' → logprob: -9.250103950500488
    3. ' self' → logprob: -12.625103950500488
    4. '           ' → logprob: -13.000103950500488
    5. '               ' → logprob: -13.500103950500488
    6. '                       ' → logprob: -15.250103950500488
    7. '       ' → logprob: -15.500103950500488
    8. '   ' → logprob: -17.125102996826172
    9. '				' → logprob: -17.625102996826172
    10. '                  ' → logprob: -17.875102996826172

Token 229: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002736639464274049
    2. ' self' → logprob: -6.002736568450928
    3. '                   ' → logprob: -8.252737045288086
    4. '               ' → logprob: -15.877737045288086
    5. '           ' → logprob: -16.127737045288086
    6. '       ' → logprob: -17.502737045288086
    7. '                       ' → logprob: -17.627737045288086
    8. '   ' → logprob: -18.127737045288086
    9. '	self' → logprob: -18.752737045288086
    10. ' ' → logprob: -19.627737045288086

Token 230: '.swap' (ID: 111356)
  Prédit: '.swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.swap' → logprob: -7.465036105713807e-06
    2. '.' → logprob: -12.000007629394531
    3. ' .' → logprob: -13.625007629394531
    4. '.sw' → logprob: -16.37500762939453
    5. 'swap' → logprob: -17.00000762939453
    6. '.s' → logprob: -17.87500762939453
    7. '	swap' → logprob: -18.12500762939453
    8. '.swing' → logprob: -18.37500762939453
    9. '​.' → logprob: -19.87500762939453
    10. '   ' → logprob: -20.00000762939453

Token 231: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -2.2246291337069124e-05
    2. 'ounter' → logprob: -11.125021934509277
    3. 'counter' → logprob: -11.875021934509277
    4. '_c' → logprob: -15.500021934509277
    5. 'er' → logprob: -15.750021934509277
    6. '_count' → logprob: -17.375022888183594
    7. 'Counter' → logprob: -17.625022888183594
    8. '_' → logprob: -17.875022888183594
    9. '_COUNTER' → logprob: -18.500022888183594
    10. '\' → logprob: -19.000022888183594

Token 232: '.increment' (ID: 95597)
  Prédit: '.increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.increment' → logprob: -4.961759259458631e-06
    2. '.' → logprob: -12.250004768371582
    3. ' .' → logprob: -16.5000057220459
    4. 'increment' → logprob: -17.8750057220459
    5. '.in' → logprob: -18.7500057220459
    6. '.enqueue' → logprob: -20.2500057220459
    7. '.count' → logprob: -20.7500057220459
    8. ').' → logprob: -21.8750057220459
    9. '.update' → logprob: -22.0000057220459
    10. '.reset' → logprob: -22.1250057220459

Token 233: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12745746970176697
    2. '()
' → logprob: -2.1274573802948
    3. '       ' → logprob: -7.752457618713379
    4. '()

' → logprob: -9.627457618713379
    5. '()\' → logprob: -11.377457618713379
    6. '
' → logprob: -12.002457618713379
    7. '<|end|>' → logprob: -12.377457618713379
    8. '()
' → logprob: -12.377457618713379
    9. 'return' → logprob: -12.752457618713379
    10. '();' → logprob: -14.127457618713379

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.558399319241289e-05
    2. 'return' → logprob: -11.250025749206543
    3. ' return' → logprob: -12.250025749206543
    4. '
' → logprob: -12.750025749206543
    5. '        
' → logprob: -12.875025749206543
    6. '               ' → logprob: -14.125025749206543
    7. '   ' → logprob: -14.500025749206543
    8. '           ' → logprob: -14.500025749206543
    9. '      ' → logprob: -15.500025749206543
    10. '	' → logprob: -16.000024795532227

Token 235: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2531241774559021
    2. 'return' (adapté à ' return') → logprob: -1.5031242370605469
    3. ' return' → logprob: -6.753124237060547
    4. '   ' → logprob: -10.628124237060547
    5. '	return' → logprob: -13.753124237060547
    6. '
' → logprob: -14.253124237060547
    7. '           ' → logprob: -15.003124237060547
    8. '               ' → logprob: -15.128124237060547
    9. '```' → logprob: -15.878124237060547
    10. ' ' → logprob: -16.128124237060547

Token 236: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804149478673935
    2. ' self' → logprob: -3.288041591644287
    3. '       ' → logprob: -17.913042068481445
    4. '(self' → logprob: -19.288042068481445
    5. '	self' → logprob: -20.038042068481445
    6. '0' → logprob: -21.913042068481445
    7. '```' → logprob: -22.163042068481445
    8. '_self' → logprob: -22.288042068481445
    9. 'Self' → logprob: -22.288042068481445
    10. '[self' → logprob: -22.538042068481445

Token 237: '.swap' (ID: 111356)
  Prédit: '.swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.swap' → logprob: -7.896309739408025e-07
    2. 'swap' → logprob: -14.500000953674316
    3. '.sw' → logprob: -16.125
    4. ' .' → logprob: -16.75
    5. '.' → logprob: -17.625
    6. '	swap' → logprob: -18.25
    7. '.s' → logprob: -18.875
    8. '_swap' → logprob: -18.875
    9. '.swing' → logprob: -19.875
    10. ' swap' → logprob: -20.0

Token 238: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.0010043471120297909
    2. 'ounter' → logprob: -7.126004219055176
    3. 'counter' → logprob: -8.626004219055176
    4. 'er' → logprob: -11.751004219055176
    5. 'Counter' → logprob: -12.126004219055176
    6. 'ort' → logprob: -12.876004219055176
    7. 'on' → logprob: -13.501004219055176
    8. 'r' → logprob: -14.001004219055176
    9. 'or' → logprob: -14.501004219055176
    10. 'oter' → logprob: -14.626004219055176

Token 239: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.0
    3. 'get' → logprob: -18.375
    4. ' .' → logprob: -18.625
    5. '.count' → logprob: -19.375
    6. ').' → logprob: -21.5
    7. '().' → logprob: -22.5
    8. '   ' → logprob: -23.125
    9. '	get' → logprob: -23.25
    10. '}.' → logprob: -23.5

Token 240: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.5776860184123507e-06
    2. '()
' → logprob: -13.37500286102295
    3. ' ()' → logprob: -14.37500286102295
    4. '(' → logprob: -16.375001907348633
    5. '()

' → logprob: -16.375001907348633
    6. '()`' → logprob: -16.625001907348633
    7. '()"' → logprob: -18.125001907348633
    8. '()}' → logprob: -18.375001907348633
    9. '().' → logprob: -18.500001907348633
    10. '()<' → logprob: -18.625001907348633

Token 241: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0013373857364058495
    2. '<|end|>' → logprob: -6.75133752822876
    3. '
' → logprob: -9.126337051391602
    4. ' class' → logprob: -10.501337051391602
    5. 'from' → logprob: -11.001337051391602
    6. 'import' → logprob: -12.876337051391602
    7. '```' → logprob: -12.876337051391602
    8. '<|end|>' → logprob: -12.876337051391602
    9. ')' → logprob: -13.626337051391602
    10. '#' → logprob: -14.126337051391602

Token 242: ' Input' (ID: 10090)
  Prédit: 'Insertion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Insertion' → logprob: -1.1412543058395386
    2. 'Selection' → logprob: -1.5162543058395386
    3. ' Quick' → logprob: -1.7662543058395386
    4. 'Quick' → logprob: -1.8912543058395386
    5. ' Selection' → logprob: -2.141254425048828
    6. 'Merge' → logprob: -5.016254425048828
    7. ' In' → logprob: -5.016254425048828
    8. ' Merge' → logprob: -5.266254425048828
    9. ' insertion' → logprob: -8.016254425048828
    10. ' Qu' → logprob: -8.016254425048828

Token 243: 'Data' (ID: 1186)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.8457176089286804
    2. 'Iterator' → logprob: -1.2207176685333252
    3. 'Handler' → logprob: -2.595717668533325
    4. 'Parser' → logprob: -2.970717668533325
    5. 'Provider' → logprob: -3.345717668533325
    6. 'Generator' → logprob: -3.470717668533325
    7. 'Data' → logprob: -3.845717668533325
    8. 'Processor' → logprob: -3.970717668533325
    9. 'Buffer' → logprob: -4.095717430114746
    10. 'Source' → logprob: -5.095717430114746

Token 244: 'Set' (ID: 1984)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4697990119457245
    2. ':' → logprob: -1.0947990417480469
    3. '(' → logprob: -3.219799041748047
    4. 'Iterator' → logprob: -8.344799041748047
    5. '_iterator' → logprob: -11.594799041748047
    6. '(List' → logprob: -11.969799041748047
    7. '(iterator' → logprob: -11.969799041748047
    8. 'iterator' → logprob: -12.094799041748047
    9. ':

' → logprob: -12.344799041748047
    10. '(S' → logprob: -12.594799041748047

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0048872968181967735
    2. '(' → logprob: -5.504887104034424
    3. ':
' → logprob: -7.254887104034424
    4. '(S' → logprob: -9.504887580871582
    5. '(List' → logprob: -11.629887580871582
    6. '(Abstract' → logprob: -11.629887580871582
    7. '():' → logprob: -12.629887580871582
    8. ' :' → logprob: -13.504887580871582
    9. '(object' → logprob: -14.004887580871582
    10. ':

' → logprob: -14.629887580871582

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006280870293267071
    2. 'def' → logprob: -7.6256279945373535
    3. ' def' → logprob: -8.875628471374512
    4. 'class' → logprob: -15.375628471374512
    5. '	def' → logprob: -16.750627517700195
    6. '```' → logprob: -16.875627517700195
    7. '   ' → logprob: -17.250627517700195
    8. 'from' → logprob: -17.875627517700195
    9. ':' → logprob: -18.250627517700195
    10. ')' → logprob: -18.625627517700195

Token 247: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014181838370859623
    2. ' def' → logprob: -4.264181613922119
    3. '   ' → logprob: -11.639182090759277
    4. 'from' → logprob: -11.764182090759277
    5. 'class' → logprob: -13.514182090759277
    6. '"""
' → logprob: -16.51418113708496
    7. '```' → logprob: -16.51418113708496
    8. 'data' → logprob: -17.51418113708496
    9. ' ' → logprob: -17.51418113708496
    10. '	def' → logprob: -17.76418113708496

Token 248: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04971332103013992
    2. 'def' → logprob: -3.174713373184204
    3. '```' → logprob: -5.299713134765625
    4. 'init' → logprob: -6.924713134765625
    5. '_init' → logprob: -8.174713134765625
    6. '_list' → logprob: -9.049713134765625
    7. '___' → logprob: -9.049713134765625
    8. '...' → logprob: -10.174713134765625
    9. ' def' → logprob: -10.674713134765625
    10. ' __' → logprob: -10.674713134765625

Token 249: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.875
    3. ' init' → logprob: -17.875
    4. '```' → logprob: -17.875
    5. '   ' → logprob: -18.0
    6. 'iter' → logprob: -18.75
    7. '_init' → logprob: -19.375
    8. 'int' → logprob: -20.25
    9. '(init' → logprob: -20.25
    10. '	init' → logprob: -20.5

Token 250: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3872871398925781
    2. '(self' → logprob: -1.1372871398925781
    3. '(' → logprob: -8.512287139892578
    4. '__(
' → logprob: -8.887287139892578
    5. '   ' → logprob: -10.762287139892578
    6. 'self' → logprob: -11.137287139892578
    7. ' (' → logprob: -11.262287139892578
    8. '_(' → logprob: -11.637287139892578
    9. '__' → logprob: -11.762287139892578
    10. ')(' → logprob: -12.762287139892578

Token 251: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.602024900028482e-05
    2. ' self' → logprob: -9.625085830688477
    3. '
' → logprob: -11.750085830688477
    4. '       ' → logprob: -12.500085830688477
    5. '):
' → logprob: -12.875085830688477
    6. 'data' → logprob: -13.250085830688477
    7. ')' → logprob: -13.375085830688477
    8. '   ' → logprob: -13.625085830688477
    9. '(self' → logprob: -14.500085830688477
    10. ',' → logprob: -14.625085830688477

Token 252: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07861048728227615
    2. '(self' → logprob: -3.078610420227051
    3. ',' → logprob: -4.328610420227051
    4. '       ' → logprob: -4.578610420227051
    5. '__(' → logprob: -5.328610420227051
    6. ' self' → logprob: -7.328610420227051
    7. '   ' → logprob: -8.07861042022705
    8. ' (' → logprob: -8.45361042022705
    9. '__(
' → logprob: -11.07861042022705
    10. ',self' → logprob: -11.20361042022705

Token 253: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20718209445476532
    2. 'data' → logprob: -1.7071820497512817
    3. 'inputs' → logprob: -6.582181930541992
    4. 'input' → logprob: -6.832181930541992
    5. ' self' → logprob: -6.957181930541992
    6. 'numbers' → logprob: -7.582181930541992
    7. ' data' → logprob: -7.707181930541992
    8. 'values' → logprob: -8.332181930541992
    9. 'file' → logprob: -8.457181930541992
    10. '   ' → logprob: -8.707181930541992

Token 254: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003416607796680182
    2. ':int' → logprob: -8.375341415405273
    3. ' :' → logprob: -9.250341415405273
    4. '=' → logprob: -12.500341415405273
    5. '):' → logprob: -12.875341415405273
    6. ',' → logprob: -13.000341415405273
    7. '_:' → logprob: -13.375341415405273
    8. '   ' → logprob: -13.500341415405273
    9. 'int' → logprob: -14.250341415405273
    10. '):
' → logprob: -15.000341415405273

Token 255: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01755836047232151
    2. 'Optional' → logprob: -4.142558574676514
    3. 'List' → logprob: -7.017558574676514
    4. ' int' → logprob: -7.517558574676514
    5. ' Optional' → logprob: -10.517558097839355
    6. '   ' → logprob: -10.767558097839355
    7. 'Iterator' → logprob: -12.267558097839355
    8. '0' → logprob: -12.392558097839355
    9. ')' → logprob: -12.392558097839355
    10. '       ' → logprob: -13.017558097839355

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03724496439099312
    2. '):' → logprob: -3.412245035171509
    3. '):
' → logprob: -5.78724479675293
    4. ' ,' → logprob: -8.53724479675293
    5. ')' → logprob: -8.66224479675293
    6. '       ' → logprob: -9.41224479675293
    7. '   ' → logprob: -10.16224479675293
    8. ' ):' → logprob: -11.03724479675293
    9. '):
' → logprob: -11.66224479675293
    10. '=' → logprob: -13.03724479675293

Token 257: ' values' (ID: 4824)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5461075305938721
    2. 'values' → logprob: -2.421107530593872
    3. 'max' → logprob: -2.921107530593872
    4. 'm' → logprob: -3.171107530593872
    5. 'iterator' → logprob: -3.671107530593872
    6. ' data' → logprob: -3.796107530593872
    7. 'min' → logprob: -3.796107530593872
    8. 'k' → logprob: -4.046107292175293
    9. 'sequence' → logprob: -4.296107292175293
    10. 'numbers' → logprob: -4.296107292175293

Token 258: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.128163257315464e-07
    2. '=' → logprob: -16.25
    3. '):' → logprob: -16.75
    4. '_:' → logprob: -16.75
    5. '```' → logprob: -17.375
    6. ' :' → logprob: -18.625
    7. ')' → logprob: -18.75
    8. '=None' → logprob: -19.5
    9. '   ' → logprob: -20.5
    10. '_list' → logprob: -20.75

Token 259: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.31391799449920654
    2. 'Optional' → logprob: -1.3139179944992065
    3. ' Optional' → logprob: -7.813918113708496
    4. ' List' → logprob: -8.438918113708496
    5. 'Iterator' → logprob: -10.563918113708496
    6. ')' → logprob: -12.188918113708496
    7. '   ' → logprob: -13.813918113708496
    8. 'Iterable' → logprob: -13.938918113708496
    9. 'list' → logprob: -14.563918113708496
    10. '[List' → logprob: -14.688918113708496

Token 260: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00023572170175611973
    2. '[' → logprob: -8.625235557556152
    3. 'int' → logprob: -9.875235557556152
    4. '[str' → logprob: -13.375235557556152
    5. 'Optional' → logprob: -13.500235557556152
    6. ')' → logprob: -14.750235557556152
    7. '[List' → logprob: -14.750235557556152
    8. '   ' → logprob: -15.375235557556152
    9. '<int' → logprob: -16.00023651123047
    10. '=int' → logprob: -16.37523651123047

Token 261: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.7215836644172668
    2. ']):' → logprob: -0.7215836644172668
    3. ']' → logprob: -4.096583843231201
    4. '])' → logprob: -4.596583843231201
    5. '):' → logprob: -7.221583843231201
    6. ')' → logprob: -8.096583366394043
    7. '):
' → logprob: -8.846583366394043
    8. '[int' → logprob: -9.971583366394043
    9. ']:' → logprob: -10.471583366394043
    10. '   ' → logprob: -11.096583366394043

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001319063303526491
    2. 'self' → logprob: -9.000131607055664
    3. ' self' → logprob: -12.000131607055664
    4. '   ' → logprob: -13.125131607055664
    5. ',' → logprob: -16.625131607055664
    6. ':' → logprob: -16.625131607055664
    7. '	self' → logprob: -16.625131607055664
    8. '(self' → logprob: -17.375131607055664
    9. '      ' → logprob: -17.500131607055664
    10. '     ' → logprob: -18.250131607055664

Token 263: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003236297983676195
    2. '       ' → logprob: -5.753236293792725
    3. ' self' → logprob: -9.753236770629883
    4. '	self' → logprob: -15.253236770629883
    5. '   ' → logprob: -15.878236770629883
    6. 'super' → logprob: -16.503236770629883
    7. '(self' → logprob: -19.378236770629883
    8. '           ' → logprob: -19.753236770629883
    9. '	' → logprob: -19.753236770629883
    10. ' ' → logprob: -19.753236770629883

Token 264: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.10720229148864746
    2. '.' → logprob: -2.3572022914886475
    3. ' .' → logprob: -5.357202529907227
    4. '.values' → logprob: -6.732202529907227
    5. 'n' → logprob: -7.607202529907227
    6. ' =' → logprob: -8.232202529907227
    7. '=' → logprob: -9.232202529907227
    8. ' n' → logprob: -9.857202529907227
    9. '       ' → logprob: -10.482202529907227
    10. '=n' → logprob: -10.482202529907227

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519397437572479
    2. ' =' → logprob: -1.5019397735595703
    3. '=n' → logprob: -12.00193977355957
    4. '   ' → logprob: -12.87693977355957
    5. '       ' → logprob: -13.75193977355957
    6. '    ' → logprob: -15.00193977355957
    7. ':' → logprob: -15.25193977355957
    8. ' ' → logprob: -15.87693977355957
    9. '        ' → logprob: -16.25193977355957
    10. '=int' → logprob: -16.75193977355957

Token 266: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.251935213804245
    2. ' n' → logprob: -1.5019352436065674
    3. 'values' → logprob: -12.751935005187988
    4. '	n' → logprob: -13.376935005187988
    5. ' values' → logprob: -13.501935005187988
    6. '_n' → logprob: -15.876935005187988
    7. '   ' → logprob: -16.126935958862305
    8. '    ' → logprob: -16.876935958862305
    9. '       ' → logprob: -16.876935958862305
    10. ',n' → logprob: -17.001935958862305

Token 267: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006887249764986336
    2. 'self' → logprob: -7.375688552856445
    3. '
' → logprob: -10.375688552856445
    4. ' self' → logprob: -11.125688552856445
    5. ',' → logprob: -11.875688552856445
    6. '<|end|>' → logprob: -11.875688552856445
    7. '   ' → logprob: -14.375688552856445
    8. '(self' → logprob: -14.750688552856445
    9. ',self' → logprob: -15.375688552856445
    10. '        
' → logprob: -15.375688552856445

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08012136071920395
    2. 'self' → logprob: -2.5801212787628174
    3. ' self' → logprob: -6.7051215171813965
    4. '   ' → logprob: -12.330121040344238
    5. '	self' → logprob: -14.330121040344238
    6. '(self' → logprob: -14.580121040344238
    7. '      ' → logprob: -15.330121040344238
    8. ' ' → logprob: -15.830121040344238
    9. ',self' → logprob: -15.955121040344238
    10. ',' → logprob: -16.455121994018555

Token 269: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014679094776511192
    2. 'values' → logprob: -4.264678955078125
    3. ' self' → logprob: -7.639678955078125
    4. ' values' → logprob: -10.639678955078125
    5. '       ' → logprob: -11.514678955078125
    6. '   ' → logprob: -15.889678955078125
    7. '_values' → logprob: -16.139678955078125
    8. '.values' → logprob: -16.264678955078125
    9. 'value' → logprob: -16.764678955078125
    10. '[self' → logprob: -17.014678955078125

Token 270: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.20157842338085175
    2. 'values' → logprob: -1.7015783786773682
    3. ' values' → logprob: -9.701578140258789
    4. '.' → logprob: -9.826578140258789
    5. ' .' → logprob: -10.951578140258789
    6. '_values' → logprob: -11.201578140258789
    7. '=' → logprob: -11.951578140258789
    8. '	values' → logprob: -12.576578140258789
    9. ' =' → logprob: -12.826578140258789
    10. '.data' → logprob: -13.576578140258789

Token 271: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519322335720062
    2. ' =' → logprob: -1.5019322633743286
    3. ':' → logprob: -13.126932144165039
    4. ' ' → logprob: -15.126932144165039
    5. '[:]' → logprob: -15.126932144165039
    6. '   ' → logprob: -15.751932144165039
    7. '<|end|>' → logprob: -15.876932144165039
    8. ')' → logprob: -15.876932144165039
    9. ',' → logprob: -16.62693214416504
    10. '  ' → logprob: -16.87693214416504

Token 272: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.16022635996341705
    2. ' values' → logprob: -1.9102263450622559
    3. '	values' → logprob: -13.910226821899414
    4. 'list' → logprob: -14.285226821899414
    5. ' list' → logprob: -15.285226821899414
    6. 'value' → logprob: -16.035226821899414
    7. '(values' → logprob: -16.160226821899414
    8. '.values' → logprob: -16.285226821899414
    9. '   ' → logprob: -16.910226821899414
    10. '[' → logprob: -17.535226821899414

Token 273: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5792262554168701
    2. '<|end|>' → logprob: -0.9542262554168701
    3. 'class' → logprob: -3.07922625541687
    4. '   ' → logprob: -5.579226493835449
    5. '

' → logprob: -5.829226493835449
    6. '<|end|>' → logprob: -6.454226493835449
    7. 'from' → logprob: -8.70422649383545
    8. '```' → logprob: -10.57922649383545
    9. '[' → logprob: -11.57922649383545
    10. ' class' → logprob: -11.70422649383545

Token 274: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0021447893232107162
    2. '
' → logprob: -6.502144813537598
    3. '   ' → logprob: -7.752144813537598
    4. '<|end|>' → logprob: -8.752144813537598
    5. 'from' → logprob: -10.002144813537598
    6. ' class' → logprob: -12.377144813537598
    7. 'def' → logprob: -13.252144813537598
    8. '

' → logprob: -13.752144813537598
    9. '<|end|>' → logprob: -13.752144813537598
    10. '    
' → logprob: -15.752144813537598

Token 275: ' Input' (ID: 10090)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.9920148849487305
    2. 'Sort' → logprob: -0.9920148849487305
    3. 'Input' → logprob: -2.6170148849487305
    4. 'Sorting' → logprob: -2.8670148849487305
    5. 'Data' → logprob: -3.8670148849487305
    6. 'Test' → logprob: -4.2420148849487305
    7. ' Sort' → logprob: -4.2420148849487305
    8. 'Swap' → logprob: -4.2420148849487305
    9. 'Sorter' → logprob: -4.2420148849487305
    10. 'Query' → logprob: -4.3670148849487305

Token 276: 'Parser' (ID: 9231)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.6702757477760315
    2. 'Iterator' → logprob: -0.7952757477760315
    3. 'Reader' → logprob: -3.4202756881713867
    4. 'Generator' → logprob: -6.670275688171387
    5. 'Handler' → logprob: -7.170275688171387
    6. 'Parser' → logprob: -7.545275688171387
    7. 'Processor' → logprob: -8.045275688171387
    8. ':' → logprob: -8.420275688171387
    9. 'Stream' → logprob: -8.670275688171387
    10. 'Datas' → logprob: -8.795275688171387

Token 277: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01603870838880539
    2. ':
' → logprob: -4.14103889465332
    3. ':

' → logprob: -13.76603889465332
    4. ':def' → logprob: -13.76603889465332
    5. ':
' → logprob: -14.01603889465332
    6. '(Abstract' → logprob: -14.39103889465332
    7. ' :' → logprob: -14.64103889465332
    8. '(' → logprob: -16.26603889465332
    9. 'def' → logprob: -16.64103889465332
    10. ',' → logprob: -17.14103889465332

Token 278: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0001696902181720361
    2. '):
' → logprob: -9.12516975402832
    3. 'Iterator' → logprob: -10.12516975402832
    4. ' ABC' → logprob: -11.50016975402832
    5. 'abc' → logprob: -12.37516975402832
    6. '):' → logprob: -13.25016975402832
    7. 'Optional' → logprob: -13.37516975402832
    8. ')' → logprob: -14.00016975402832
    9. 'Abstract' → logprob: -14.50016975402832
    10. 'Iterable' → logprob: -14.75016975402832

Token 279: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16116340458393097
    2. '):
' → logprob: -1.9111634492874146
    3. '):
' → logprob: -7.286163330078125
    4. ')' → logprob: -9.411163330078125
    5. '):

' → logprob: -9.411163330078125
    6. ':' → logprob: -9.536163330078125
    7. '   ' → logprob: -12.786163330078125
    8. '):

' → logprob: -12.911163330078125
    9. '**' → logprob: -13.036163330078125
    10. ',' → logprob: -13.536163330078125

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.4121114822482923e-06
    2. 'def' → logprob: -13.625003814697266
    3. '
' → logprob: -14.500003814697266
    4. ')' → logprob: -14.875003814697266
    5. '    
' → logprob: -15.000003814697266
    6. 'class' → logprob: -15.250003814697266
    7. ' def' → logprob: -15.625003814697266
    8. '<|end|>' → logprob: -15.750003814697266
    9. 'from' → logprob: -16.625003814697266
    10. '(' → logprob: -16.875003814697266

Token 281: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023000631481409073
    2. '@' (adapté à ' @') → logprob: -4.023000717163086
    3. ' @' → logprob: -5.648000717163086
    4. 'def' → logprob: -6.898000717163086
    5. ' def' → logprob: -8.148000717163086
    6. 'from' → logprob: -11.273000717163086
    7. 'class' → logprob: -14.398000717163086
    8. '    
' → logprob: -14.523000717163086
    9. '  ' → logprob: -14.773000717163086
    10. '
' → logprob: -14.773000717163086

Token 282: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.0009706564014777541
    2. 'staticmethod' → logprob: -7.000970840454102
    3. 'classmethod' → logprob: -9.875970840454102
    4. 'property' → logprob: -12.000970840454102
    5. 'abc' → logprob: -14.250970840454102
    6. 'static' → logprob: -14.625970840454102
    7. ' abstract' → logprob: -15.250970840454102
    8. 'class' → logprob: -16.1259708404541
    9. 'ab' → logprob: -18.3759708404541
    10. '.abstract' → logprob: -18.5009708404541

Token 283: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0015550976386293769
    2. '_method' → logprob: -6.5015549659729
    3. 'def' → logprob: -10.126555442810059
    4. 'classmethod' → logprob: -11.501555442810059
    5. 'staticmethod' → logprob: -13.751555442810059
    6. 'meth' → logprob: -15.251555442810059
    7. 'abstract' → logprob: -15.376555442810059
    8. ' method' → logprob: -15.501555442810059
    9. '	method' → logprob: -16.001554489135742
    10. '_methods' → logprob: -16.001554489135742

Token 284: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.583998441696167
    2. '
' → logprob: -1.083998441696167
    3. '   ' → logprob: -2.333998441696167
    4. ' def' → logprob: -4.958998680114746
    5. '	def' → logprob: -9.833998680114746
    6. '<|end|>' → logprob: -10.083998680114746
    7. '    
' → logprob: -10.208998680114746
    8. '
' → logprob: -11.833998680114746
    9. '  ' → logprob: -11.833998680114746
    10. '<|end|>' → logprob: -11.958998680114746

Token 285: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008344827219843864
    2. '   ' → logprob: -5.008344650268555
    3. ' def' → logprob: -7.008344650268555
    4. '
' → logprob: -7.258344650268555
    5. '	def' → logprob: -11.883344650268555
    6. '    
' → logprob: -12.883344650268555
    7. 'classmethod' → logprob: -13.133344650268555
    8. 'class' → logprob: -13.133344650268555
    9. 'method' → logprob: -13.383344650268555
    10. '  ' → logprob: -13.633344650268555

Token 286: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.961759259458631e-06
    2. ' def' → logprob: -13.125004768371582
    3. '
' → logprob: -13.750004768371582
    4. 'staticmethod' → logprob: -14.250004768371582
    5. 'method' → logprob: -14.250004768371582
    6. 'classmethod' → logprob: -14.625004768371582
    7. '   ' → logprob: -17.8750057220459
    8. 'property' → logprob: -17.8750057220459
    9. '	def' → logprob: -19.2500057220459
    10. '```' → logprob: -19.3750057220459

Token 287: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.023615792393684387
    2. ' parse' → logprob: -3.773615837097168
    3. 'def' → logprob: -8.648615837097168
    4. 'read' → logprob: -9.648615837097168
    5. '__' → logprob: -10.148615837097168
    6. 'get' → logprob: -10.773615837097168
    7. 'iter' → logprob: -11.023615837097168
    8. ' __' → logprob: -11.398615837097168
    9. 'iterate' → logprob: -11.398615837097168
    10. ' read' → logprob: -12.023615837097168

Token 288: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.5776860184123507e-06
    2. 'self' → logprob: -14.00000286102295
    3. '(' → logprob: -14.12500286102295
    4. '()' → logprob: -15.50000286102295
    5. '(input' → logprob: -15.75000286102295
    6. '(s' → logprob: -15.87500286102295
    7. ' (' → logprob: -15.87500286102295
    8. '_input' → logprob: -16.125001907348633
    9. '(se' → logprob: -16.375001907348633
    10. '(
' → logprob: -16.625001907348633

Token 289: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03194746747612953
    2. ')' → logprob: -3.531947374343872
    3. 'self' → logprob: -6.156947612762451
    4. '(self' → logprob: -10.406947135925293
    5. '   ' → logprob: -10.656947135925293
    6. '
' → logprob: -12.531947135925293
    7. '       ' → logprob: -12.531947135925293
    8. ',self' → logprob: -12.531947135925293
    9. 'input' → logprob: -12.781947135925293
    10. ',
' → logprob: -13.781947135925293

Token 290: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11034895479679108
    2. 'self' → logprob: -3.23534893989563
    3. ' ->' → logprob: -3.48534893989563
    4. ')' → logprob: -3.61034893989563
    5. '->' → logprob: -4.985349178314209
    6. '       ' → logprob: -8.48534870147705
    7. '   ' → logprob: -8.73534870147705
    8. ')->' → logprob: -9.48534870147705
    9. '()' → logprob: -10.11034870147705
    10. ' self' → logprob: -10.36034870147705

Token 291: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.024732423946261406
    2. 'Optional' → logprob: -4.14973258972168
    3. 'List' → logprob: -5.39973258972168
    4. ' Iterator' → logprob: -6.02473258972168
    5. 'Input' → logprob: -6.39973258972168
    6. ' Optional' → logprob: -10.02473258972168
    7. ' List' → logprob: -12.14973258972168
    8. '	Iterator' → logprob: -12.39973258972168
    9. 'Iterable' → logprob: -12.52473258972168
    10. 'None' → logprob: -13.14973258972168

Token 292: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. ' [' → logprob: -13.37500286102295
    3. ':' → logprob: -15.00000286102295
    4. '[int' → logprob: -15.62500286102295
    5. '<Input' → logprob: -16.375001907348633
    6. '[
' → logprob: -16.750001907348633
    7. '[Index' → logprob: -16.875001907348633
    8. '[input' → logprob: -17.000001907348633
    9. '[str' → logprob: -17.375001907348633
    10. '   ' → logprob: -17.875001907348633

Token 293: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -2.339278580620885e-06
    2. 'Optional' → logprob: -13.375001907348633
    3. ' Input' → logprob: -14.250001907348633
    4. 'int' → logprob: -18.250001907348633
    5. 'List' → logprob: -18.750001907348633
    6. '	Input' → logprob: -19.125001907348633
    7. 'str' → logprob: -19.375001907348633
    8. '   ' → logprob: -20.375001907348633
    9. ' ' → logprob: -20.875001907348633
    10. '
' → logprob: -21.000001907348633

Token 294: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: 0.0
    2. ' Data' → logprob: -17.25
    3. 'Input' → logprob: -17.75
    4. 'Dataset' → logprob: -18.625
    5. '	Data' → logprob: -19.25
    6. 'data' → logprob: -19.375
    7. '   ' → logprob: -19.625
    8. 'Datas' → logprob: -20.625
    9. 'IData' → logprob: -20.75
    10. '<Data' → logprob: -20.875

Token 295: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -7.171581091824919e-05
    2. 'set' → logprob: -9.75007152557373
    3. 'et' → logprob: -11.37507152557373
    4. 'ataset' → logprob: -14.62507152557373
    5. 'Data' → logprob: -14.75007152557373
    6. '_set' → logprob: -14.87507152557373
    7. '_SET' → logprob: -15.62507152557373
    8. ' Set' → logprob: -15.87507152557373
    9. ')set' → logprob: -16.500072479248047
    10. 'Sets' → logprob: -16.625072479248047

Token 296: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.008980657905340195
    2. ']:
' → logprob: -4.758980751037598
    3. ']' → logprob: -8.133980751037598
    4. '):' → logprob: -10.258980751037598
    5. ']:
' → logprob: -10.633980751037598
    6. '[' → logprob: -12.008980751037598
    7. '']:' → logprob: -13.383980751037598
    8. '"]:' → logprob: -13.383980751037598
    9. ']>' → logprob: -13.758980751037598
    10. '):
' → logprob: -14.008980751037598

Token 297: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 298: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7179877161979675
    2. '...' → logprob: -0.7179877161979675
    3. 'pass' (adapté à ' pass') → logprob: -3.8429877758026123
    4. ' pass' → logprob: -6.217987537384033
    5. '   ' → logprob: -7.342987537384033
    6. ' ...' → logprob: -8.342988014221191
    7. '	pass' → logprob: -9.217988014221191
    8. '...
' → logprob: -9.842988014221191
    9. '[]' → logprob: -11.217988014221191
    10. '"""' → logprob: -11.217988014221191

Token 299: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.30684390664100647
    2. '
' → logprob: -1.431843876838684
    3. '

' → logprob: -3.6818439960479736
    4. '<|end|>' → logprob: -9.056843757629395
    5. '
' → logprob: -10.556843757629395
    6. ' class' → logprob: -11.306843757629395
    7. '<class' → logprob: -11.681843757629395
    8. 'import' → logprob: -12.181843757629395
    9. '  
' → logprob: -12.306843757629395
    10. '<|end|>' → logprob: -12.431843757629395

Token 300: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.05642051622271538
    2. '
' → logprob: -2.9314205646514893
    3. '

' → logprob: -6.93142032623291
    4. '<|end|>' → logprob: -7.68142032623291
    5. ' class' → logprob: -9.93142032623291
    6. 'import' → logprob: -10.80642032623291
    7. '<class' → logprob: -11.80642032623291
    8. 'from' → logprob: -12.18142032623291
    9. '<|end|>' → logprob: -12.18142032623291
    10. '```' → logprob: -13.18142032623291

Token 301: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -1.518354892730713
    2. 'St' → logprob: -1.643354892730713
    3. 'Console' → logprob: -2.018354892730713
    4. 'List' → logprob: -2.143354892730713
    5. ' Std' → logprob: -2.393354892730713
    6. ' St' → logprob: -2.518354892730713
    7. ' Console' → logprob: -2.893354892730713
    8. 'Standard' → logprob: -3.018354892730713
    9. ' List' → logprob: -3.643354892730713
    10. 'File' → logprob: -4.268354892730713

Token 302: 'Input' (ID: 3275)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.034678515046834946
    2. 'Input' → logprob: -3.7846784591674805
    3. 'In' → logprob: -4.5346784591674805
    4. 'input' → logprob: -7.4096784591674805
    5. 'inp' → logprob: -10.65967845916748
    6. 'io' → logprob: -13.15967845916748
    7. 'Inp' → logprob: -13.28467845916748
    8. 'IN' → logprob: -13.90967845916748
    9. 'out' → logprob: -14.40967845916748
    10. 'i' → logprob: -14.40967845916748

Token 303: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.07901008427143097
    2. 'Input' → logprob: -2.579010009765625
    3. 'Reader' → logprob: -9.454010009765625
    4. '(Input' → logprob: -11.204010009765625
    5. '(' → logprob: -11.329010009765625
    6. 'Parse' → logprob: -11.829010009765625
    7. '(Parser' → logprob: -12.204010009765625
    8. 'Iterator' → logprob: -13.579010009765625
    9. 'Line' → logprob: -14.204010009765625
    10. 'Stream' → logprob: -15.454010009765625

Token 304: '(Input' (ID: 52522)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02011517807841301
    2. '(' → logprob: -4.895115375518799
    3. ':
' → logprob: -4.895115375518799
    4. '(Input' → logprob: -5.395115375518799
    5. '():' → logprob: -8.64511489868164
    6. ' :' → logprob: -8.77011489868164
    7. '(Abstract' → logprob: -10.27011489868164
    8. '):' → logprob: -10.77011489868164
    9. '(I' → logprob: -11.52011489868164
    10. ' :
' → logprob: -13.52011489868164

Token 305: 'Parser' (ID: 9231)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.00033546582562848926
    2. 'Parser' → logprob: -8.000335693359375
    3. 'input' → logprob: -18.000335693359375
    4. '<Input' → logprob: -18.875335693359375
    5. 'put' → logprob: -19.000335693359375
    6. 'Reader' → logprob: -19.000335693359375
    7. 'parser' → logprob: -19.125335693359375
    8. 'Iterator' → logprob: -19.250335693359375
    9. '(Input' → logprob: -19.250335693359375
    10. 'INPUT' → logprob: -19.500335693359375

Token 306: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04860450699925423
    2. '):
' → logprob: -3.0486044883728027
    3. ':' → logprob: -12.048604965209961
    4. '):
' → logprob: -12.298604965209961
    5. '   ' → logprob: -12.423604965209961
    6. ')' → logprob: -13.423604965209961
    7. ' ):' → logprob: -14.673604965209961
    8. '):

' → logprob: -15.673604965209961
    9. 'def' → logprob: -16.04860496520996
    10. ':
' → logprob: -16.54860496520996

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020294437126722187
    2. 'def' → logprob: -8.750203132629395
    3. ' def' → logprob: -10.125203132629395
    4. 'import' → logprob: -12.500203132629395
    5. '	def' → logprob: -15.250203132629395
    6. '   ' → logprob: -16.125202178955078
    7. '```' → logprob: -16.250202178955078
    8. 'from' → logprob: -16.500202178955078
    9. '
' → logprob: -17.375202178955078
    10. ':' → logprob: -18.000202178955078

Token 308: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16766415536403656
    2. ' def' → logprob: -1.9176641702651978
    3. '   ' → logprob: -4.917664051055908
    4. 'import' → logprob: -9.417664527893066
    5. 'from' → logprob: -11.542664527893066
    6. '	def' → logprob: -12.292664527893066
    7. ' ' → logprob: -15.667664527893066
    8. ' import' → logprob: -16.04266357421875
    9. '```' → logprob: -16.16766357421875
    10. ' from' → logprob: -16.54266357421875

Token 309: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4456803798675537
    2. ' __' → logprob: -1.4456803798675537
    3. 'def' → logprob: -2.3206803798675537
    4. ' parse' → logprob: -4.070680618286133
    5. '__' → logprob: -5.320680618286133
    6. 'parse' → logprob: -5.570680618286133
    7. 'init' → logprob: -10.945680618286133
    8. '   ' → logprob: -11.320680618286133
    9. '```' → logprob: -11.820680618286133
    10. '.__' → logprob: -12.820680618286133

Token 310: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.009481815621256828
    2. 'def' → logprob: -4.759481906890869
    3. 'iter' → logprob: -7.259481906890869
    4. '__' → logprob: -9.009481430053711
    5. 'it' → logprob: -10.259481430053711
    6. '   ' → logprob: -13.384481430053711
    7. '_init' → logprob: -13.634481430053711
    8. 'f' → logprob: -14.009481430053711
    9. '```' → logprob: -14.634481430053711
    10. 'int' → logprob: -14.634481430053711

Token 311: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.421908958349377e-05
    2. ' (' → logprob: -10.25007438659668
    3. '(' → logprob: -11.12507438659668
    4. '()' → logprob: -11.87507438659668
    5. '__(' → logprob: -11.87507438659668
    6. 'self' → logprob: -12.75007438659668
    7. '       ' → logprob: -12.87507438659668
    8. '   ' → logprob: -13.00007438659668
    9. ')(' → logprob: -13.50007438659668
    10. '()(' → logprob: -15.25007438659668

Token 312: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.350386295001954e-05
    2. '       ' → logprob: -9.875073432922363
    3. '):
' → logprob: -11.250073432922363
    4. ')' → logprob: -11.875073432922363
    5. ' self' → logprob: -14.000073432922363
    6. '   ' → logprob: -14.375073432922363
    7. '(self' → logprob: -15.250073432922363
    8. '
' → logprob: -15.500073432922363
    9. '):' → logprob: -16.62507438659668
    10. ')
' → logprob: -17.87507438659668

Token 313: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5706920623779297
    2. '):
' → logprob: -1.5706920623779297
    3. ',' → logprob: -2.1956920623779297
    4. '       ' → logprob: -2.5706920623779297
    5. '   ' → logprob: -4.32069206237793
    6. '(self' → logprob: -4.32069206237793
    7. '):' → logprob: -4.94569206237793
    8. ' self' → logprob: -6.07069206237793
    9. ' (' → logprob: -6.69569206237793
    10. '
' → logprob: -6.94569206237793

Token 314: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10053250938653946
    2. '       ' → logprob: -2.3505325317382812
    3. '(self' → logprob: -8.225532531738281
    4. ' self' → logprob: -10.225532531738281
    5. '   ' → logprob: -12.350532531738281
    6. '):
' → logprob: -12.350532531738281
    7. '
' → logprob: -12.475532531738281
    8. '0' → logprob: -13.225532531738281
    9. 'n' → logprob: -13.225532531738281
    10. '	self' → logprob: -13.350532531738281

Token 315: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.22749418020248413
    2. 'import' → logprob: -2.477494239807129
    3. 'self' → logprob: -2.602494239807129
    4. '       ' → logprob: -3.477494239807129
    5. ' pass' → logprob: -4.852494239807129
    6. '   ' → logprob: -5.227494239807129
    7. 'from' → logprob: -7.102494239807129
    8. ' self' → logprob: -8.227494239807129
    9. 'def' → logprob: -8.852494239807129
    10. 'None' → logprob: -9.977494239807129

Token 316: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00041851779678836465
    2. '
' → logprob: -8.500418663024902
    3. 'def' → logprob: -9.000418663024902
    4. 'import' → logprob: -9.625418663024902
    5. ' def' → logprob: -10.875418663024902
    6. 'from' → logprob: -13.000418663024902
    7. '```' → logprob: -13.125418663024902
    8. '    
' → logprob: -13.250418663024902
    9. '	def' → logprob: -15.875418663024902
    10. '   ' → logprob: -16.000417709350586

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003353328676894307
    2. 'def' → logprob: -5.878353118896484
    3. ' def' → logprob: -7.628353118896484
    4. 'import' → logprob: -9.753353118896484
    5. '	def' → logprob: -13.128353118896484
    6. '
' → logprob: -14.128353118896484
    7. '    
' → logprob: -14.628353118896484
    8. '<|end|>' → logprob: -15.753353118896484
    9. 'from' → logprob: -16.003353118896484
    10. '   ' → logprob: -16.378353118896484

Token 318: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.5954712075181305e-05
    2. ' def' → logprob: -10.750036239624023
    3. 'from' → logprob: -11.750036239624023
    4. '   ' → logprob: -12.500036239624023
    5. 'import' → logprob: -12.750036239624023
    6. '	def' → logprob: -19.875036239624023
    7. ' ' → logprob: -21.500036239624023
    8. '
' → logprob: -21.625036239624023
    9. '    
' → logprob: -23.250036239624023
    10. '       ' → logprob: -23.500036239624023

Token 319: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -3.7697225252486533e-06
    2. ' parse' → logprob: -12.500003814697266
    3. 'def' → logprob: -22.125003814697266
    4. 'par' → logprob: -22.625003814697266
    5. 'parser' → logprob: -23.125003814697266
    6. '	parse' → logprob: -23.125003814697266
    7. '_parse' → logprob: -24.125003814697266
    8. '   ' → logprob: -24.125003814697266
    9. '.parse' → logprob: -24.625003814697266
    10. ' ' → logprob: -25.750003814697266

Token 320: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.375
    3. 'self' → logprob: -15.5
    4. ' (' → logprob: -17.125
    5. '       ' → logprob: -18.25
    6. '   ' → logprob: -18.75
    7. '```' → logprob: -19.625
    8. '(
' → logprob: -20.875
    9. '=self' → logprob: -21.0
    10. 'def' → logprob: -21.125

Token 321: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08094988018274307
    2. 'self' → logprob: -2.5809497833251953
    3. '       ' → logprob: -7.080949783325195
    4. '   ' → logprob: -7.455949783325195
    5. '(self' → logprob: -7.705949783325195
    6. ',' → logprob: -8.830949783325195
    7. '):
' → logprob: -10.830949783325195
    8. ' self' → logprob: -11.955949783325195
    9. '):' → logprob: -12.080949783325195
    10. ')->' → logprob: -12.205949783325195

Token 322: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013357517309486866
    2. 'self' → logprob: -9.125133514404297
    3. '       ' → logprob: -11.375133514404297
    4. '->' → logprob: -12.250133514404297
    5. '   ' → logprob: -12.500133514404297
    6. ' ->' → logprob: -12.875133514404297
    7. ')' → logprob: -14.125133514404297
    8. '(' → logprob: -14.750133514404297
    9. ' self' → logprob: -15.125133514404297
    10. 'def' → logprob: -15.250133514404297

Token 323: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.014164566993713379
    2. ' Iterator' → logprob: -4.264164447784424
    3. '	Iterator' → logprob: -14.014164924621582
    4. 'Optional' → logprob: -16.389163970947266
    5. '   ' → logprob: -16.889163970947266
    6. 'Iterable' → logprob: -17.264163970947266
    7. '_iterator' → logprob: -17.764163970947266
    8. ' ' → logprob: -18.014163970947266
    9. 'iterator' → logprob: -18.889163970947266
    10. 'Iter' → logprob: -19.139163970947266

Token 324: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -15.125
    3. ':
' → logprob: -17.25
    4. 'Input' → logprob: -17.75
    5. '[Index' → logprob: -18.0
    6. '<Input' → logprob: -18.375
    7. '[input' → logprob: -18.75
    8. '[List' → logprob: -18.75
    9. ' [' → logprob: -19.625
    10. '```' → logprob: -20.375

Token 325: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. ' Input' → logprob: -19.25
    3. 'Optional' → logprob: -21.25
    4. '	Input' → logprob: -22.375
    5. '   ' → logprob: -22.5
    6. 'input' → logprob: -23.75
    7. '[' → logprob: -24.125
    8. '<Input' → logprob: -24.25
    9. '_input' → logprob: -24.625
    10. '_Input' → logprob: -24.875

Token 326: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.500000953674316
    3. 'data' → logprob: -15.625000953674316
    4. 'Dataset' → logprob: -17.25
    5. 'Datas' → logprob: -17.375
    6. 'DATA' → logprob: -17.5
    7. ']' → logprob: -17.875
    8. '<Data' → logprob: -18.875
    9. ' Data' → logprob: -19.0
    10. ')' → logprob: -19.125

Token 327: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -9.73446003627032e-05
    2. 'Data' → logprob: -9.875097274780273
    3. 'set' → logprob: -10.250097274780273
    4. 'et' → logprob: -11.500097274780273
    5. 'Sets' → logprob: -16.375097274780273
    6. '[' → logprob: -16.375097274780273
    7. 'SET' → logprob: -16.750097274780273
    8. 'ataset' → logprob: -16.875097274780273
    9. 'Input' → logprob: -17.125097274780273
    10. '_set' → logprob: -18.250097274780273

Token 328: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.1632760763168335
    2. '):
' → logprob: -1.1632760763168335
    3. ':' → logprob: -1.5382760763168335
    4. '():
' → logprob: -2.538276195526123
    5. '):' → logprob: -3.538276195526123
    6. '       ' → logprob: -3.913276195526123
    7. '():' → logprob: -4.163276195526123
    8. '   ' → logprob: -4.413276195526123
    9. '(self' → logprob: -6.163276195526123
    10. ']:
' → logprob: -6.538276195526123

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001052934443578124
    2. 'import' → logprob: -7.0010528564453125
    3. ' while' → logprob: -9.751052856445312
    4. 'while' → logprob: -9.876052856445312
    5. ' import' → logprob: -11.126052856445312
    6. '```' → logprob: -11.626052856445312
    7. 'n' → logprob: -12.876052856445312
    8. 'try' → logprob: -13.751052856445312
    9. '   ' → logprob: -14.001052856445312
    10. '	' → logprob: -14.376052856445312

Token 330: ' while' (ID: 2049)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1092810332775116
    2. 'while' (adapté à ' while') → logprob: -2.609281063079834
    3. '       ' → logprob: -3.859281063079834
    4. ' import' → logprob: -4.984281063079834
    5. ' while' → logprob: -6.359281063079834
    6. 'try' → logprob: -8.484280586242676
    7. 't' → logprob: -10.484280586242676
    8. 'n' → logprob: -10.859280586242676
    9. '```' → logprob: -10.984280586242676
    10. '   ' → logprob: -13.484280586242676

Token 331: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10021119564771652
    2. ' True' → logprob: -2.3502111434936523
    3. '(True' → logprob: -12.475211143493652
    4. '   ' → logprob: -14.225211143493652
    5. 'true' → logprob: -16.22521209716797
    6. '=True' → logprob: -17.35021209716797
    7. '1' → logprob: -17.85021209716797
    8. ' ' → logprob: -18.35021209716797
    9. '_true' → logprob: -18.72521209716797
    10. '       ' → logprob: -18.85021209716797

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.092099130153656
    2. ':
' → logprob: -2.592099189758301
    3. '           ' → logprob: -4.342099189758301
    4. ',' → logprob: -10.0920991897583
    5. '():
' → logprob: -10.5920991897583
    6. '):
' → logprob: -11.5920991897583
    7. '():' → logprob: -11.7170991897583
    8. ':
' → logprob: -12.0920991897583
    9. ' :' → logprob: -12.2170991897583
    10. '       ' → logprob: -12.4670991897583

Token 333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030709904967807233
    2. 'try' → logprob: -8.125307083129883
    3. ' try' → logprob: -11.625307083129883
    4. '       ' → logprob: -14.375307083129883
    5. '               ' → logprob: -14.500307083129883
    6. '   ' → logprob: -14.875307083129883
    7. 'import' → logprob: -15.750307083129883
    8. '          ' → logprob: -15.750307083129883
    9. '		' → logprob: -16.375307083129883
    10. '```' → logprob: -16.500307083129883

Token 334: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.2922840416431427
    2. 'try' → logprob: -1.5422840118408203
    3. '           ' → logprob: -3.2922840118408203
    4. '               ' → logprob: -7.29228401184082
    5. '   ' → logprob: -7.66728401184082
    6. ' try' → logprob: -7.66728401184082
    7. ' line' → logprob: -7.91728401184082
    8. 'n' → logprob: -7.91728401184082
    9. 'raw' → logprob: -11.16728401184082
    10. '                   ' → logprob: -11.91728401184082

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313264936208725
    2. '=' → logprob: -1.3132649660110474
    3. '=line' → logprob: -13.063264846801758
    4. 's' → logprob: -14.563264846801758
    5. '=input' → logprob: -15.688264846801758
    6. 'line' → logprob: -16.313264846801758
    7. ':' → logprob: -16.688264846801758
    8. '_input' → logprob: -16.688264846801758
    9. '           ' → logprob: -17.063264846801758
    10. 'input' → logprob: -17.188264846801758

Token 336: ' self' (ID: 1051)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014163863845169544
    2. ' input' → logprob: -4.264163970947266
    3. '(input' → logprob: -15.389163970947266
    4. '=input' → logprob: -16.514163970947266
    5. '```' → logprob: -16.889163970947266
    6. '<input' → logprob: -18.514163970947266
    7. '	input' → logprob: -19.014163970947266
    8. 'import' → logprob: -19.514163970947266
    9. ' ' → logprob: -19.764163970947266
    10. '_input' → logprob: -19.889163970947266

Token 337: '._' (ID: 2697)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1437000036239624
    2. '.input' → logprob: -1.2687000036239624
    3. '.readline' → logprob: -1.3937000036239624
    4. '.stdin' → logprob: -2.643700122833252
    5. '.' → logprob: -2.893700122833252
    6. '._' → logprob: -4.143700122833252
    7. '_input' → logprob: -6.143700122833252
    8. 'import' → logprob: -6.893700122833252
    9. '=input' → logprob: -7.018700122833252
    10. '.read' → logprob: -7.143700122833252

Token 338: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.0327790975570679
    2. 'input' → logprob: -1.2827790975570679
    3. 'get' → logprob: -2.0327792167663574
    4. 'parse' → logprob: -2.9077792167663574
    5. 'strip' → logprob: -3.2827792167663574
    6. '_' → logprob: -3.2827792167663574
    7. '_read' → logprob: -3.7827792167663574
    8. '_input' → logprob: -3.9077792167663574
    9. '_get' → logprob: -4.282779216766357
    10. 'try' → logprob: -5.032779216766357

Token 339: '_line' (ID: 14418)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1981572061777115
    2. 'line' → logprob: -1.8231571912765503
    3. 'input' → logprob: -5.07315731048584
    4. '().' → logprob: -5.32315731048584
    5. '()
' → logprob: -5.44815731048584
    6. '_line' → logprob: -6.32315731048584
    7. '_input' → logprob: -7.69815731048584
    8. '())' → logprob: -8.32315731048584
    9. ' =' → logprob: -9.57315731048584
    10. '()

' → logprob: -9.57315731048584

Token 340: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03812158480286598
    2. '()
' → logprob: -3.2881217002868652
    3. '()

' → logprob: -10.413121223449707
    4. '().' → logprob: -10.663121223449707
    5. '()
' → logprob: -10.788121223449707
    6. ' =' → logprob: -13.288121223449707
    7. '()\' → logprob: -13.413121223449707
    8. '()`' → logprob: -13.913121223449707
    9. '=' → logprob: -14.538121223449707
    10. '       ' → logprob: -14.913121223449707

Token 341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011763805523514748
    2. '()' → logprob: -5.136763572692871
    3. '()
' → logprob: -5.261763572692871
    4. '().' → logprob: -8.761763572692871
    5. '
' → logprob: -9.136763572692871
    6. '()\' → logprob: -9.511763572692871
    7. '            
' → logprob: -9.761763572692871
    8. '       ' → logprob: -10.011763572692871
    9. ' =' → logprob: -10.011763572692871
    10. ',' → logprob: -11.136763572692871

Token 342: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15642988681793213
    2. ' if' → logprob: -2.4064297676086426
    3. '           ' → logprob: -2.9064297676086426
    4. '	if' → logprob: -15.5314302444458
    5. '		' → logprob: -16.031429290771484
    6. 'try' → logprob: -16.031429290771484
    7. '       ' → logprob: -16.156429290771484
    8. ';if' → logprob: -16.156429290771484
    9. '
' → logprob: -16.281429290771484
    10. '   ' → logprob: -16.281429290771484

Token 343: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2219952642917633
    2. ' line' → logprob: -1.971995234489441
    3. ' not' → logprob: -3.0969953536987305
    4. 'not' → logprob: -4.2219953536987305
    5. '	line' → logprob: -10.84699535369873
    6. ' ' → logprob: -11.59699535369873
    7. '(line' → logprob: -11.84699535369873
    8. '   ' → logprob: -12.59699535369873
    9. '#line' → logprob: -12.84699535369873
    10. '[line' → logprob: -13.78449535369873

Token 344: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.14769099652767181
    2. 'is' → logprob: -2.147691011428833
    3. '==' → logprob: -4.272690773010254
    4. ' ==' → logprob: -5.022690773010254
    5. '.strip' → logprob: -11.522690773010254
    6. 'in' → logprob: -13.272690773010254
    7. '=' → logprob: -13.647690773010254
    8. '	is' → logprob: -13.897690773010254
    9. ' ' → logprob: -14.022690773010254
    10. '===' → logprob: -14.147690773010254

Token 345: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1272948980331421
    2. ' None' → logprob: -2.1272950172424316
    3. '''' → logprob: -8.252294540405273
    4. '""' → logprob: -9.377294540405273
    5. ''' → logprob: -11.627294540405273
    6. '"' → logprob: -11.752294540405273
    7. ' ''' → logprob: -13.877294540405273
    8. 'none' → logprob: -14.252294540405273
    9. '"":' → logprob: -14.377294540405273
    10. ' ' → logprob: -14.502294540405273

Token 346: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.050928760319948196
    2. ':
' → logprob: -3.675928831100464
    3. 'or' → logprob: -4.300928592681885
    4. ':' → logprob: -4.800928592681885
    5. '               ' → logprob: -6.300928592681885
    6. '           ' → logprob: -7.300928592681885
    7. '):
' → logprob: -12.050929069519043
    8. '	or' → logprob: -12.050929069519043
    9. '                   ' → logprob: -12.300929069519043
    10. ':return' → logprob: -12.550929069519043

Token 347: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007185076246969402
    2. '           ' → logprob: -8.250718116760254
    3. ':
' → logprob: -8.250718116760254
    4. ':' → logprob: -9.250718116760254
    5. ' or' → logprob: -9.375718116760254
    6. '                   ' → logprob: -11.875718116760254
    7. 'break' → logprob: -12.750718116760254
    8. '	           ' → logprob: -14.125718116760254
    9. ':return' → logprob: -14.250718116760254
    10. '              ' → logprob: -14.375718116760254

Token 348: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.42438995838165283
    2. '               ' → logprob: -1.1743899583816528
    3. ' break' → logprob: -3.4243898391723633
    4. '                   ' → logprob: -5.799389839172363
    5. 'return' → logprob: -6.799389839172363
    6. ' return' → logprob: -9.924389839172363
    7. '           ' → logprob: -10.049389839172363
    8. '	break' → logprob: -12.049389839172363
    9. '   ' → logprob: -12.299389839172363
    10. '```' → logprob: -12.924389839172363

Token 349: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003131784324068576
    2. '            
' → logprob: -8.625312805175781
    3. ',' → logprob: -9.250312805175781
    4. '<|end|>' → logprob: -12.000312805175781
    5. '
' → logprob: -12.125312805175781
    6. '          ' → logprob: -12.375312805175781
    7. '       ' → logprob: -12.500312805175781
    8. 'n' → logprob: -12.500312805175781
    9. '               ' → logprob: -12.750312805175781
    10. ',
' → logprob: -13.500312805175781

Token 350: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004460385534912348
    2. '            
' → logprob: -5.504460334777832
    3. '
' → logprob: -8.754460334777832
    4. ',' → logprob: -9.379460334777832
    5. '<|end|>' → logprob: -10.504460334777832
    6. '           
' → logprob: -10.879460334777832
    7. '          ' → logprob: -11.129460334777832
    8. '               ' → logprob: -11.379460334777832
    9. '        
' → logprob: -11.629460334777832
    10. '  
' → logprob: -11.629460334777832

Token 351: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.0355440378189087
    2. '           ' → logprob: -1.0355440378189087
    3. 'try' → logprob: -1.9105440378189087
    4. ' try' → logprob: -3.035543918609619
    5. ' n' → logprob: -3.285543918609619
    6. 'line' → logprob: -3.785543918609619
    7. ' if' → logprob: -4.160543918609619
    8. 'if' → logprob: -4.285543918609619
    9. ' line' → logprob: -6.160543918609619
    10. 'num' → logprob: -7.410543918609619

Token 352: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29479920864105225
    2. ' =' → logprob: -1.7947992086410522
    3. ',' → logprob: -2.419799327850342
    4. '_str' → logprob: -9.169798851013184
    5. ' ,' → logprob: -10.044798851013184
    6. '=int' → logprob: -10.294798851013184
    7. '=line' → logprob: -11.044798851013184
    8. 'str' → logprob: -11.919798851013184
    9. '_line' → logprob: -12.794798851013184
    10. ' ' → logprob: -13.544798851013184

Token 353: ' self' (ID: 1051)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020354038861114532
    2. ' int' → logprob: -8.500203132629395
    3. 'len' → logprob: -20.62520408630371
    4. '   ' → logprob: -21.75020408630371
    5. 'line' → logprob: -22.62520408630371
    6. '(int' → logprob: -23.25020408630371
    7. '       ' → logprob: -24.12520408630371
    8. '	int' → logprob: -24.37520408630371
    9. '[int' → logprob: -24.37520408630371
    10. '=int' → logprob: -24.50020408630371

Token 354: '._' (ID: 2697)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.058232489973306656
    2. '=int' → logprob: -4.433232307434082
    3. '.parse' → logprob: -4.558232307434082
    4. '.readline' → logprob: -4.933232307434082
    5. '[int' → logprob: -5.433232307434082
    6. ' int' → logprob: -5.683232307434082
    7. 'line' → logprob: -6.183232307434082
    8. 'len' → logprob: -6.183232307434082
    9. '.' → logprob: -6.683232307434082
    10. '._' → logprob: -6.808232307434082

Token 355: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.015998471528291702
    2. 'try' → logprob: -5.015998363494873
    3. 'convert' → logprob: -5.265998363494873
    4. 'int' → logprob: -6.640998363494873
    5. 'to' → logprob: -6.765998363494873
    6. 'read' → logprob: -7.015998363494873
    7. 'safe' → logprob: -8.140998840332031
    8. 'extract' → logprob: -9.015998840332031
    9. 'str' → logprob: -9.140998840332031
    10. 'strip' → logprob: -9.390998840332031

Token 356: '_int' (ID: 12285)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.29560065269470215
    2. '(line' → logprob: -1.7956006526947021
    3. '(int' → logprob: -2.420600652694702
    4. 'line' → logprob: -7.045600891113281
    5. ' int' → logprob: -9.545600891113281
    6. '(n' → logprob: -10.420600891113281
    7. '(' → logprob: -11.295600891113281
    8. '```' → logprob: -11.920600891113281
    9. '(len' → logprob: -12.045600891113281
    10. '<int' → logprob: -12.295600891113281

Token 357: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -5.836499985889532e-05
    2. '()' → logprob: -10.2500581741333
    3. '(' → logprob: -11.1250581741333
    4. 's' → logprob: -12.1250581741333
    5. ' (' → logprob: -14.0000581741333
    6. '()
' → logprob: -14.5000581741333
    7. '()(' → logprob: -14.8750581741333
    8. '32' → logprob: -15.3750581741333
    9. '(s' → logprob: -15.8750581741333
    10. '(lines' → logprob: -15.8750581741333

Token 358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47431331872940063
    2. ')
' → logprob: -0.9743133187294006
    3. ' )
' → logprob: -9.474313735961914
    4. '       ' → logprob: -9.724313735961914
    5. '           ' → logprob: -10.099313735961914
    6. ' )' → logprob: -10.724313735961914
    7. ')
' → logprob: -11.224313735961914
    8. '())
' → logprob: -11.724313735961914
    9. ')

' → logprob: -12.474313735961914
    10. '   ' → logprob: -12.849313735961914

Token 359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.596781946020201e-05
    2. ',' → logprob: -11.125045776367188
    3. '            
' → logprob: -11.250045776367188
    4. '
' → logprob: -11.500045776367188
    5. '		' → logprob: -12.875045776367188
    6. '               ' → logprob: -13.625045776367188
    7. '<|end|>' → logprob: -14.125045776367188
    8. '       ' → logprob: -14.875045776367188
    9. '```' → logprob: -15.000045776367188
    10. 'n' → logprob: -15.000045776367188

Token 360: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.28417524695396423
    2. '           ' → logprob: -1.5341752767562866
    3. 'values' → logprob: -3.659175157546997
    4. ' if' → logprob: -5.284175395965576
    5. 'line' → logprob: -7.284175395965576
    6. ' values' → logprob: -9.159174919128418
    7. '       ' → logprob: -10.534174919128418
    8. 'value' → logprob: -10.784174919128418
    9. '               ' → logprob: -11.159174919128418
    10. 'vals' → logprob: -11.284174919128418

Token 361: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010480545461177826
    2. ' n' → logprob: -6.8760480880737305
    3. 'not' → logprob: -11.75104808807373
    4. '   ' → logprob: -13.00104808807373
    5. ' not' → logprob: -13.12604808807373
    6. '	n' → logprob: -14.37604808807373
    7. 'n't' → logprob: -14.62604808807373
    8. '           ' → logprob: -14.87604808807373
    9. ' ' → logprob: -14.87604808807373
    10. ' ' → logprob: -15.68854808807373

Token 362: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11562377214431763
    2. '==' → logprob: -2.240623712539673
    3. ' <=' → logprob: -6.115623950958252
    4. '<=' → logprob: -7.490623950958252
    5. ' is' → logprob: -11.115623474121094
    6. ' ' → logprob: -11.740623474121094
    7. '```' → logprob: -13.115623474121094
    8. 'is' → logprob: -13.490623474121094
    9. '0' → logprob: -13.865623474121094
    10. '=' → logprob: -13.865623474121094

Token 363: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006735934875905514
    2. ' ' → logprob: -7.500673770904541
    3. '-' → logprob: -9.125673294067383
    4. ' -' → logprob: -11.500673294067383
    5. '   ' → logprob: -14.500673294067383
    6. '```' → logprob: -14.500673294067383
    7. '  ' → logprob: -15.750673294067383
    8. 'EOF' → logprob: -16.438173294067383
    9. '``' → logprob: -16.625673294067383
    10. 'None' → logprob: -16.875673294067383

Token 364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004147032741457224
    2. '-' → logprob: -8.000414848327637
    3. ' ' → logprob: -9.500414848327637
    4. ' -' → logprob: -13.000414848327637
    5. '```' → logprob: -14.000414848327637
    6. 'None' → logprob: -14.875414848327637
    7. 'EOF' → logprob: -15.500414848327637
    8. '   ' → logprob: -15.937914848327637
    9. '=' → logprob: -16.06291389465332
    10. '``' → logprob: -16.50041389465332

Token 365: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16054975986480713
    2. ':' → logprob: -1.9105497598648071
    3. '           ' → logprob: -8.410550117492676
    4. '               ' → logprob: -9.660550117492676
    5. ':return' → logprob: -10.785550117492676
    6. ' or' → logprob: -12.160550117492676
    7. '):
' → logprob: -12.785550117492676
    8. '   ' → logprob: -13.035550117492676
    9. ':
' → logprob: -13.160550117492676
    10. '       ' → logprob: -13.410550117492676

Token 366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.3080716346157715e-05
    2. 'break' → logprob: -11.000022888183594
    3. '                   ' → logprob: -13.000022888183594
    4. ' break' → logprob: -13.250022888183594
    5. '           ' → logprob: -13.375022888183594
    6. '   ' → logprob: -15.375022888183594
    7. '              ' → logprob: -15.750022888183594
    8. '                ' → logprob: -16.500022888183594
    9. '	break' → logprob: -16.625022888183594
    10. '			' → logprob: -16.750022888183594

Token 367: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.20300589501857758
    2. ' break' → logprob: -1.9530059099197388
    3. '               ' → logprob: -3.203005790710449
    4. '                   ' → logprob: -7.203005790710449
    5. 'return' → logprob: -7.703005790710449
    6. ' return' → logprob: -10.57800579071045
    7. '	break' → logprob: -11.70300579071045
    8. '           ' → logprob: -12.32800579071045
    9. '
' → logprob: -12.82800579071045
    10. '   ' → logprob: -13.32800579071045

Token 368: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21730957925319672
    2. '
' → logprob: -1.717309594154358
    3. '            
' → logprob: -4.217309474945068
    4. '<|end|>' → logprob: -7.842309474945068
    5. '    
' → logprob: -8.967309951782227
    6. '  
' → logprob: -9.467309951782227
    7. 'newline' → logprob: -9.717309951782227
    8. '        
' → logprob: -9.967309951782227
    9. ',' → logprob: -9.967309951782227
    10. '           
' → logprob: -10.092309951782227

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011897491058334708
    2. '
' → logprob: -6.751189708709717
    3. '            
' → logprob: -12.001190185546875
    4. 'yield' → logprob: -12.251190185546875
    5. 'line' → logprob: -13.126190185546875
    6. '       ' → logprob: -13.376190185546875
    7. '```' → logprob: -13.876190185546875
    8. '		' → logprob: -14.376190185546875
    9. ',' → logprob: -14.501190185546875
    10. '               ' → logprob: -14.751190185546875

Token 370: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.08069951087236404
    2. '           ' → logprob: -2.5806994438171387
    3. 'vals' → logprob: -7.205699443817139
    4. 'line' → logprob: -7.330699443817139
    5. ' values' → logprob: -7.955699443817139
    6. 'lines' → logprob: -11.455699920654297
    7. 'value' → logprob: -11.830699920654297
    8. 'numbers' → logprob: -11.955699920654297
    9. 'val' → logprob: -12.205699920654297
    10. '	values' → logprob: -12.205699920654297

Token 371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931694746017456
    2. ' =' → logprob: -0.6931694746017456
    3. '_line' → logprob: -11.318169593811035
    4. '=line' → logprob: -11.818169593811035
    5. ':' → logprob: -13.818169593811035
    6. ' line' → logprob: -13.943169593811035
    7. 'line' → logprob: -14.693169593811035
    8. ',' → logprob: -15.818169593811035
    9. ' ' → logprob: -15.818169593811035
    10. ' ' → logprob: -16.81816864013672

Token 372: ' []
' (ID: 8911)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5037422180175781
    2. '[self' → logprob: -1.0037422180175781
    3. '[]
' → logprob: -4.128742218017578
    4. 'list' → logprob: -5.128742218017578
    5. ' self' → logprob: -5.628742218017578
    6. '[' → logprob: -6.628742218017578
    7. '[]' → logprob: -6.753742218017578
    8. '[list' → logprob: -7.753742218017578
    9. ' list' → logprob: -8.253742218017578
    10. '[
' → logprob: -9.003742218017578

Token 373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002220318652689457
    2. ' for' → logprob: -6.627220153808594
    3. 'for' → logprob: -7.127220153808594
    4. '		' → logprob: -10.002220153808594
    5. '
' → logprob: -10.752220153808594
    6. '               ' → logprob: -11.877220153808594
    7. '	       ' → logprob: -12.127220153808594
    8. '                   ' → logprob: -13.127220153808594
    9. 'while' → logprob: -13.377220153808594
    10. '       ' → logprob: -13.502220153808594

Token 374: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7976433634757996
    2. '           ' → logprob: -1.2976434230804443
    3. 'for' (adapté à ' for') → logprob: -1.2976434230804443
    4. ' for' → logprob: -6.547643184661865
    5. ' while' → logprob: -6.547643184661865
    6. '       ' → logprob: -8.422643661499023
    7. '   ' → logprob: -9.172643661499023
    8. 'count' → logprob: -9.797643661499023
    9. '	while' → logprob: -12.547643661499023
    10. '               ' → logprob: -12.672643661499023

Token 375: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014403361827135086
    2. '_i' → logprob: -4.264403343200684
    3. ' _' → logprob: -8.764403343200684
    4. 'i' → logprob: -10.639403343200684
    5. '_index' → logprob: -11.014403343200684
    6. '_in' → logprob: -11.514403343200684
    7. '_j' → logprob: -11.764403343200684
    8. '_n' → logprob: -12.014403343200684
    9. '_idx' → logprob: -12.514403343200684
    10. '_line' → logprob: -12.764403343200684

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005239564459770918
    2. 'in' → logprob: -5.255239486694336
    3. 'range' → logprob: -12.755239486694336
    4. ' ' → logprob: -13.005239486694336
    5. 'import' → logprob: -15.505239486694336
    6. '	in' → logprob: -16.255239486694336
    7. '  ' → logprob: -16.380239486694336
    8. '_' → logprob: -16.505239486694336
    9. 'i' → logprob: -16.880239486694336
    10. 's' → logprob: -17.130239486694336

Token 377: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '_range' → logprob: -17.125261306762695
    4. '_' → logprob: -18.000261306762695
    5. '	range' → logprob: -19.875261306762695
    6. 'rang' → logprob: -20.750261306762695
    7. '   ' → logprob: -21.375261306762695
    8. '(range' → logprob: -21.375261306762695
    9. ' ' → logprob: -21.500261306762695
    10. 'r' → logprob: -22.125261306762695

Token 378: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.4849443838757e-06
    2. 'n' → logprob: -12.500004768371582
    3. '(' → logprob: -15.125004768371582
    4. '	n' → logprob: -15.750004768371582
    5. ' n' → logprob: -16.625003814697266
    6. '           ' → logprob: -16.875003814697266
    7. '       ' → logprob: -17.625003814697266
    8. '               ' → logprob: -18.000003814697266
    9. '   ' → logprob: -18.625003814697266
    10. ' (' → logprob: -19.000003814697266

Token 379: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16093122959136963
    2. '):' → logprob: -1.9109312295913696
    3. '):
' → logprob: -7.66093111038208
    4. '           ' → logprob: -8.785931587219238
    5. '               ' → logprob: -10.660931587219238
    6. '       ' → logprob: -10.785931587219238
    7. ' ):
' → logprob: -11.285931587219238
    8. ':' → logprob: -11.910931587219238
    9. ' ):' → logprob: -12.285931587219238
    10. '   ' → logprob: -12.410931587219238

Token 380: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.641841820150148e-05
    2. ' line' → logprob: -11.25002670288086
    3. '#line' → logprob: -12.75002670288086
    4. ' values' → logprob: -13.25002670288086
    5. 'values' → logprob: -13.62502670288086
    6. '           ' → logprob: -13.87502670288086
    7. '<|end|>' → logprob: -13.87502670288086
    8. '              ' → logprob: -14.00002670288086
    9. '                   ' → logprob: -14.12502670288086
    10. '```' → logprob: -14.25002670288086

Token 381: ' val' (ID: 1459)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.0283249616622925
    2. '                   ' → logprob: -1.5283249616622925
    3. 'values' → logprob: -1.5283249616622925
    4. '               ' → logprob: -1.9033249616622925
    5. 'value' → logprob: -3.778325080871582
    6. ' line' → logprob: -4.153325080871582
    7. ' values' → logprob: -4.778325080871582
    8. 'val' (adapté à ' val') → logprob: -4.903325080871582
    9. '   ' → logprob: -6.028325080871582
    10. 'v' → logprob: -6.778325080871582

Token 382: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5866519808769226
    2. 'ue' → logprob: -1.2116520404815674
    3. '=' → logprob: -2.3366520404815674
    4. 'ues' → logprob: -3.5866520404815674
    5. '_line' → logprob: -4.086651802062988
    6. '=line' → logprob: -6.336651802062988
    7. '   ' → logprob: -6.836651802062988
    8. 'line' → logprob: -6.836651802062988
    9. '       ' → logprob: -7.711651802062988
    10. ' line' → logprob: -8.836651802062988

Token 383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031815171241760254
    2. '=' → logprob: -5.753181457519531
    3. '           ' → logprob: -13.003181457519531
    4. '=line' → logprob: -14.128181457519531
    5. '               ' → logprob: -15.253181457519531
    6. ' ' → logprob: -15.503181457519531
    7. '		' → logprob: -16.00318145751953
    8. 's' → logprob: -16.25318145751953
    9. '   ' → logprob: -16.62818145751953
    10. '       ' → logprob: -16.62818145751953

Token 384: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04863528162240982
    2. ' self' → logprob: -3.048635244369507
    3. '               ' → logprob: -10.423635482788086
    4. '                   ' → logprob: -11.048635482788086
    5. '           ' → logprob: -13.173635482788086
    6. '                       ' → logprob: -16.298635482788086
    7. '   ' → logprob: -16.798635482788086
    8. ' ' → logprob: -16.923635482788086
    9. '	self' → logprob: -16.923635482788086
    10. '(self' → logprob: -17.048635482788086

Token 385: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.3451433409936726e-05
    2. '_read' → logprob: -10.750033378601074
    3. '_parse' → logprob: -11.500033378601074
    4. ' _' → logprob: -13.500033378601074
    5. '.readline' → logprob: -15.375033378601074
    6. '.parse' → logprob: -16.25003433227539
    7. '_.' → logprob: -17.12503433227539
    8. '.' → logprob: -17.12503433227539
    9. '=_' → logprob: -17.87503433227539
    10. '_' → logprob: -17.87503433227539

Token 386: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.00040064091444946826
    2. 'parse' → logprob: -7.875400543212891
    3. '_read' → logprob: -10.87540054321289
    4. ' read' → logprob: -14.75040054321289
    5. 'input' → logprob: -15.37540054321289
    6. '.read' → logprob: -15.62540054321289
    7. 'get' → logprob: -15.62540054321289
    8. '	read' → logprob: -15.87540054321289
    9. 'next' → logprob: -16.62540054321289
    10. '

' → logprob: -16.75040054321289

Token 387: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0007101670489646494
    2. 'line' → logprob: -7.2507100105285645
    3. ' line' → logprob: -16.625709533691406
    4. '_LINE' → logprob: -16.875709533691406
    5. 'Line' → logprob: -17.000709533691406
    6. '_' → logprob: -18.125709533691406
    7. 'ine' → logprob: -18.125709533691406
    8. '_lines' → logprob: -18.250709533691406
    9. 'int' → logprob: -18.500709533691406
    10. '```' → logprob: -19.375709533691406

Token 388: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4100663661956787
    2. '()' → logprob: -1.1600663661956787
    3. '               ' → logprob: -3.7850663661956787
    4. '()
' → logprob: -8.785066604614258
    5. ')' → logprob: -11.035066604614258
    6. '                   ' → logprob: -11.160066604614258
    7. '()

' → logprob: -11.410066604614258
    8. ')
' → logprob: -11.535066604614258
    9. '           ' → logprob: -11.785066604614258
    10. '<|end|>' → logprob: -13.535066604614258

Token 389: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012296605564188212
    2. '<|end|>' → logprob: -9.375123023986816
    3. ',' → logprob: -10.500123023986816
    4. '           ' → logprob: -12.625123023986816
    5. '                   ' → logprob: -13.125123023986816
    6. '                
' → logprob: -13.750123023986816
    7. ' if' → logprob: -14.000123023986816
    8. '<|end|>' → logprob: -14.125123023986816
    9. '              ' → logprob: -15.000123023986816
    10. '       ' → logprob: -15.125123023986816

Token 390: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007201764383353293
    2. 'if' (adapté à ' if') → logprob: -7.625720024108887
    3. 'values' → logprob: -9.125720024108887
    4. ' if' → logprob: -9.375720024108887
    5. '                   ' → logprob: -11.000720024108887
    6. '           ' → logprob: -11.750720024108887
    7. 'value' → logprob: -12.000720024108887
    8. ' values' → logprob: -12.375720024108887
    9. 'val' → logprob: -13.000720024108887
    10. ' val' → logprob: -15.375720024108887

Token 391: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0019286326132714748
    2. ' val' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.376928329467773
    4. '	val' → logprob: -17.376928329467773
    5. '           ' → logprob: -18.501928329467773
    6. '  ' → logprob: -19.626928329467773
    7. '    ' → logprob: -19.876928329467773
    8. 'not' → logprob: -20.626928329467773
    9. '(val' → logprob: -21.501928329467773
    10. ' ' → logprob: -21.626928329467773

Token 392: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.702754474943504e-05
    2. '_' → logprob: -10.25003719329834
    3. '_
' → logprob: -15.37503719329834
    4. '   ' → logprob: -15.37503719329834
    5. 'ine' → logprob: -15.62503719329834
    6. '_val' → logprob: -15.75003719329834
    7. '_lines' → logprob: -15.87503719329834
    8. '_LINE' → logprob: -16.125036239624023
    9. 'al' → logprob: -16.250036239624023
    10. 'aline' → logprob: -16.250036239624023

Token 393: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014163747429847717
    2. 'is' → logprob: -4.264163970947266
    3. ' ' → logprob: -16.264163970947266
    4. '    ' → logprob: -16.764163970947266
    5. '	is' → logprob: -18.389163970947266
    6. '   ' → logprob: -18.889163970947266
    7. ' i' → logprob: -18.889163970947266
    8. '==' → logprob: -19.014163970947266
    9. 'in' → logprob: -19.764163970947266
    10. '        ' → logprob: -19.764163970947266

Token 394: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0015023599844425917
    2. ' None' → logprob: -6.501502513885498
    3. 'none' → logprob: -16.626502990722656
    4. 'not' → logprob: -17.876502990722656
    5. '   ' → logprob: -18.626502990722656
    6. '=None' → logprob: -18.876502990722656
    7. '(None' → logprob: -19.126502990722656
    8. ' ' → logprob: -19.376502990722656
    9. '_None' → logprob: -19.376502990722656
    10. '_none' → logprob: -20.126502990722656

Token 395: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11437384784221649
    2. ':
' → logprob: -2.2393739223480225
    3. ':' → logprob: -6.739373683929443
    4. '               ' → logprob: -8.739374160766602
    5. '                       ' → logprob: -9.114374160766602
    6. '           ' → logprob: -10.614374160766602
    7. ' or' → logprob: -10.739374160766602
    8. ',' → logprob: -10.989374160766602
    9. '                  ' → logprob: -11.739374160766602
    10. '   ' → logprob: -12.364374160766602

Token 396: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00027349460287950933
    2. 'break' → logprob: -8.375273704528809
    3. ' break' → logprob: -10.500273704528809
    4. '                       ' → logprob: -12.125273704528809
    5. '               ' → logprob: -12.125273704528809
    6. 'return' → logprob: -12.750273704528809
    7. '           ' → logprob: -15.125273704528809
    8. ' return' → logprob: -15.125273704528809
    9. 'raise' → logprob: -15.500273704528809
    10. '
' → logprob: -15.750273704528809

Token 397: ' raise' (ID: 9338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.13807561993598938
    2. ' break' → logprob: -2.138075590133667
    3. '                       ' → logprob: -5.138075828552246
    4. 'return' → logprob: -5.638075828552246
    5. '                   ' → logprob: -6.638075828552246
    6. ' return' → logprob: -8.388075828552246
    7. 'raise' (adapté à ' raise') → logprob: -9.388075828552246
    8. '               ' → logprob: -10.888075828552246
    9. ' raise' → logprob: -11.763075828552246
    10. '   ' → logprob: -12.263075828552246

Token 398: ' EOF' (ID: 72412)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.5767605900764465
    2. 'EOF' → logprob: -0.8267605900764465
    3. 'Runtime' → logprob: -7.576760768890381
    4. ' EOF' → logprob: -8.576760292053223
    5. ' Value' → logprob: -9.076760292053223
    6. 'Exception' → logprob: -12.451760292053223
    7. 'Stop' → logprob: -13.451760292053223
    8. 'Unexpected' → logprob: -15.201760292053223
    9. ' Runtime' → logprob: -15.701760292053223
    10. '(Value' → logprob: -16.82676124572754

Token 399: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -6.511406809295295e-06
    2. 'rror' → logprob: -12.000006675720215
    3. '
' → logprob: -15.625006675720215
    4. 'error' → logprob: -16.8750057220459
    5. 'SError' → logprob: -17.7500057220459
    6. 'LError' → logprob: -18.0000057220459
    7. 'Unexpected' → logprob: -19.2500057220459
    8. 'Warning' → logprob: -19.3750057220459
    9. 'ERROR' → logprob: -19.6250057220459
    10. '```' → logprob: -19.8750057220459

Token 400: '("' (ID: 568)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016971994191408157
    2. '
' → logprob: -7.001697063446045
    3. '           ' → logprob: -8.001697540283203
    4. '                   ' → logprob: -8.876697540283203
    5. '()
' → logprob: -9.126697540283203
    6. '("' → logprob: -9.251697540283203
    7. '                
' → logprob: -9.876697540283203
    8. '()' → logprob: -10.626697540283203
    9. '       ' → logprob: -11.501697540283203
    10. '                ' → logprob: -12.376697540283203

Token 401: 'Unexpected' (ID: 59338)
  Prédit: 'Unexpected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unexpected' → logprob: -0.008527575992047787
    2. ' Unexpected' → logprob: -5.008527755737305
    3. 'Input' → logprob: -7.383527755737305
    4. 'Expected' → logprob: -7.883527755737305
    5. 'EOF' → logprob: -8.133527755737305
    6. 'Incomplete' → logprob: -8.383527755737305
    7. 'unexpected' → logprob: -9.133527755737305
    8. ' unexpected' → logprob: -9.633527755737305
    9. '")' → logprob: -10.633527755737305
    10. '"' → logprob: -10.883527755737305

Token 402: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.1633078008890152
    2. 'end' → logprob: -1.913307785987854
    3. 'EOF' → logprob: -5.9133076667785645
    4. ' EOF' → logprob: -7.9133076667785645
    5. 'input' → logprob: -11.913308143615723
    6. ' input' → logprob: -13.163308143615723
    7. ' eof' → logprob: -15.538308143615723
    8. '   ' → logprob: -15.663308143615723
    9. '           ' → logprob: -15.788308143615723
    10. '
' → logprob: -16.288307189941406

Token 403: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.02861712872982025
    2. 'of' → logprob: -3.6536171436309814
    3. '                   ' → logprob: -6.778616905212402
    4. '               ' → logprob: -6.778616905212402
    5. '           ' → logprob: -11.028616905212402
    6. '                ' → logprob: -11.403616905212402
    7. '                    ' → logprob: -12.903616905212402
    8. '                       ' → logprob: -13.028616905212402
    9. '   ' → logprob: -13.528616905212402
    10. '_of' → logprob: -14.278616905212402

Token 404: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00150390958879143
    2. ' input' → logprob: -6.501503944396973
    3. 'file' → logprob: -13.626503944396973
    4. 'data' → logprob: -16.251502990722656
    5. 'stdin' → logprob: -16.501502990722656
    6. '
' → logprob: -17.001502990722656
    7. '_input' → logprob: -17.376502990722656
    8. '<input' → logprob: -17.626502990722656
    9. '	input' → logprob: -18.001502990722656
    10. 'inputs' → logprob: -18.251502990722656

Token 405: '.")
' (ID: 27834)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.026376934722065926
    2. '               ' → logprob: -3.776376962661743
    3. '")' → logprob: -6.151376724243164
    4. '           ' → logprob: -7.151376724243164
    5. '.")
' → logprob: -9.651376724243164
    6. ' during' → logprob: -10.026376724243164
    7. '")
' → logprob: -11.026376724243164
    8. ')")
' → logprob: -11.151376724243164
    9. ' ")
' → logprob: -11.151376724243164
    10. '                   ' → logprob: -11.401376724243164

Token 406: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.719917630311102e-05
    2. '           ' → logprob: -9.875077247619629
    3. '                   ' → logprob: -11.375077247619629
    4. ',' → logprob: -12.125077247619629
    5. '              ' → logprob: -13.250077247619629
    6. '                
' → logprob: -13.375077247619629
    7. '<|end|>' → logprob: -13.875077247619629
    8. 'val' → logprob: -14.125077247619629
    9. '
' → logprob: -14.750077247619629
    10. '			' → logprob: -14.875077247619629

Token 407: ' val' (ID: 1459)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13857711851596832
    2. 'values' → logprob: -2.2635772228240967
    3. ' values' → logprob: -4.263576984405518
    4. 'val' (adapté à ' val') → logprob: -5.013576984405518
    5. '                   ' → logprob: -6.013576984405518
    6. 'value' → logprob: -7.138576984405518
    7. ' val' → logprob: -7.263576984405518
    8. '           ' → logprob: -7.638576984405518
    9. 'vals' → logprob: -8.763577461242676
    10. ' vals' → logprob: -10.638577461242676

Token 408: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5049539804458618
    2. 'ues' → logprob: -1.0049539804458618
    3. '=' → logprob: -3.7549538612365723
    4. 's' → logprob: -5.379953861236572
    5. 'ue' → logprob: -6.504953861236572
    6. '_values' → logprob: -8.12995433807373
    7. '       ' → logprob: -8.37995433807373
    8. '   ' → logprob: -9.12995433807373
    9. '           ' → logprob: -9.62995433807373
    10. '               ' → logprob: -9.62995433807373

Token 409: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0066022793762385845
    2. ' self' → logprob: -5.1316022872924805
    3. 'int' → logprob: -7.3816022872924805
    4. '                   ' → logprob: -10.50660228729248
    5. '               ' → logprob: -11.00660228729248
    6. ' int' → logprob: -12.13160228729248
    7. '                       ' → logprob: -14.75660228729248
    8. '           ' → logprob: -14.75660228729248
    9. '   ' → logprob: -16.006601333618164
    10. ' ' → logprob: -16.131601333618164

Token 410: '._' (ID: 2697)
  Prédit: '_parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -0.062004320323467255
    2. '._' → logprob: -2.812004327774048
    3. ' _' → logprob: -10.687004089355469
    4. '.parse' → logprob: -11.687004089355469
    5. '_parser' → logprob: -13.937004089355469
    6. '_convert' → logprob: -14.562004089355469
    7. '_decode' → logprob: -14.687004089355469
    8. '_' → logprob: -14.812004089355469
    9. '=_' → logprob: -15.187004089355469
    10. 'parse' → logprob: -15.312004089355469

Token 411: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -8.180258191714529e-06
    2. 'int' → logprob: -11.875008583068848
    3. ' parse' → logprob: -15.000008583068848
    4. 'convert' → logprob: -16.00000762939453
    5. 'parsed' → logprob: -16.25000762939453
    6. 'parser' → logprob: -16.37500762939453
    7. 'strip' → logprob: -16.37500762939453
    8. '```' → logprob: -16.37500762939453
    9. '_parse' → logprob: -16.50000762939453
    10. '
' → logprob: -16.75000762939453

Token 412: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.1269386112689972
    2. 'int' → logprob: -2.126938581466675
    3. '
' → logprob: -12.376938819885254
    4. 'Int' → logprob: -13.126938819885254
    5. 'ints' → logprob: -13.876938819885254
    6. ' int' → logprob: -13.876938819885254
    7. '_line' → logprob: -14.876938819885254
    8. 'line' → logprob: -15.001938819885254
    9. '<int' → logprob: -15.001938819885254
    10. 'val' → logprob: -15.126938819885254

Token 413: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.125015258789062
    3. '[val' → logprob: -16.375015258789062
    4. ',val' → logprob: -16.750015258789062
    5. ' val' → logprob: -16.875015258789062
    6. ' (' → logprob: -16.875015258789062
    7. 'val' → logprob: -17.500015258789062
    8. '(
' → logprob: -19.125015258789062
    9. '```' → logprob: -19.875015258789062
    10. '(vals' → logprob: -20.500015258789062

Token 414: '_line' (ID: 14418)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.11764943599700928
    2. '_line' → logprob: -2.742649555206299
    3. 'val' → logprob: -4.242649555206299
    4. 'ne' → logprob: -4.617649555206299
    5. 'e' → logprob: -4.992649555206299
    6. 'line' → logprob: -5.367649555206299
    7. '(val' → logprob: -5.742649555206299
    8. '(line' → logprob: -6.242649555206299
    9. ')' → logprob: -6.492649555206299
    10. ')
' → logprob: -6.617649555206299

Token 415: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00526471110060811
    2. '               ' → logprob: -5.505264759063721
    3. ')' → logprob: -6.755264759063721
    4. '                   ' → logprob: -11.505264282226562
    5. ')
' → logprob: -12.130264282226562
    6. ' )
' → logprob: -12.880264282226562
    7. '           ' → logprob: -13.130264282226562
    8. ')`
' → logprob: -15.130264282226562
    9. '())
' → logprob: -15.755264282226562
    10. '                       ' → logprob: -16.005264282226562

Token 416: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.7729658540920354e-05
    2. '                   ' → logprob: -11.250027656555176
    3. '           ' → logprob: -11.500027656555176
    4. '<|end|>' → logprob: -13.250027656555176
    5. ',' → logprob: -13.875027656555176
    6. '	           ' → logprob: -14.875027656555176
    7. '              ' → logprob: -15.500027656555176
    8. '		       ' → logprob: -15.625027656555176
    9. '                       ' → logprob: -15.625027656555176
    10. '			' → logprob: -15.750027656555176

Token 417: ' values' (ID: 4824)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.033888306468725204
    2. 'values' (adapté à ' values') → logprob: -3.533888339996338
    3. ' values' → logprob: -5.533888339996338
    4. '           ' → logprob: -9.15888786315918
    5. '                   ' → logprob: -10.03388786315918
    6. '	values' → logprob: -11.15888786315918
    7. '   ' → logprob: -11.78388786315918
    8. '(values' → logprob: -13.03388786315918
    9. '       ' → logprob: -13.28388786315918
    10. '.values' → logprob: -13.53388786315918

Token 418: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0032115804497152567
    2. '.' → logprob: -5.753211498260498
    3. ' .' → logprob: -10.503211975097656
    4. '           ' → logprob: -13.128211975097656
    5. '               ' → logprob: -13.878211975097656
    6. '.extend' → logprob: -14.628211975097656
    7. '.add' → logprob: -14.753211975097656
    8. ').' → logprob: -14.878211975097656
    9. '=' → logprob: -14.878211975097656
    10. '.insert' → logprob: -15.128211975097656

Token 419: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.029761141166090965
    2. 'val' → logprob: -3.5297610759735107
    3. ' val' → logprob: -11.52976131439209
    4. '(' → logprob: -14.40476131439209
    5. '(
' → logprob: -15.77976131439209
    6. ',val' → logprob: -16.654760360717773
    7. '[val' → logprob: -17.529760360717773
    8. '	val' → logprob: -18.404760360717773
    9. ' (' → logprob: -20.529760360717773
    10. '_val' → logprob: -20.654760360717773

Token 420: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12160085886716843
    2. ')' → logprob: -2.371600866317749
    3. '           ' → logprob: -3.871600866317749
    4. '       ' → logprob: -8.121601104736328
    5. '               ' → logprob: -11.121601104736328
    6. ')
' → logprob: -11.121601104736328
    7. '
' → logprob: -11.746601104736328
    8. ')return' → logprob: -13.121601104736328
    9. ')

' → logprob: -13.246601104736328
    10. ' )
' → logprob: -13.871601104736328

Token 421: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007806538138538599
    2. 'yield' → logprob: -5.007806301116943
    3. ' yield' → logprob: -6.882806301116943
    4. '       ' → logprob: -9.882806777954102
    5. 'Yield' → logprob: -12.632806777954102
    6. 'return' → logprob: -13.007806777954102
    7. '
' → logprob: -13.007806777954102
    8. '```' → logprob: -13.132806777954102
    9. ' yields' → logprob: -13.507806777954102
    10. '	yield' → logprob: -13.882806777954102

Token 422: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.12398525327444077
    2. '           ' → logprob: -2.6239852905273438
    3. ' yield' → logprob: -3.1239852905273438
    4. '       ' → logprob: -9.748985290527344
    5. '	yield' → logprob: -10.123985290527344
    6. '```' → logprob: -11.748985290527344
    7. '
' → logprob: -12.373985290527344
    8. '   ' → logprob: -14.373985290527344
    9. 'Yield' → logprob: -14.873985290527344
    10. 'data' → logprob: -15.748985290527344

Token 423: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0001234428636962548
    2. ' Input' → logprob: -9.000123023986816
    3. '	Input' → logprob: -19.500123977661133
    4. '   ' → logprob: -22.000123977661133
    5. '           ' → logprob: -22.000123977661133
    6. 'input' → logprob: -22.250123977661133
    7. '(Input' → logprob: -22.750123977661133
    8. '_input' → logprob: -23.125123977661133
    9. 'Output' → logprob: -23.750123977661133
    10. '_Input' → logprob: -23.875123977661133

Token 424: 'Data' (ID: 1186)
  Prédit: 'Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -14.875
    3. 'Input' → logprob: -17.625
    4. ' Data' → logprob: -18.25
    5. '       ' → logprob: -19.25
    6. '           ' → logprob: -19.625
    7. '(Data' → logprob: -20.0
    8. '	Data' → logprob: -20.125
    9. '<Data' → logprob: -20.375
    10. '  ' → logprob: -20.5

Token 425: 'Set' (ID: 1984)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -1.3856492842023727e-06
    2. 'ata' → logprob: -13.875000953674316
    3. 'Set' → logprob: -15.750000953674316
    4. 'ataset' → logprob: -16.375001907348633
    5. 'Dataset' → logprob: -16.750001907348633
    6. ' Data' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.375001907348633
    8. 't' → logprob: -19.750001907348633
    9. 'Input' → logprob: -20.375001907348633
    10. 'a' → logprob: -20.500001907348633

Token 426: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.861651490908116e-05
    2. '(' → logprob: -9.750068664550781
    3. '(
' → logprob: -11.875068664550781
    4. 'n' → logprob: -13.000068664550781
    5. '           ' → logprob: -14.750068664550781
    6. ' (' → logprob: -15.125068664550781
    7. '(len' → logprob: -15.500068664550781
    8. '```' → logprob: -16.25006866455078
    9. '               ' → logprob: -17.12506866455078
    10. '       ' → logprob: -17.37506866455078

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.240481914370321e-05
    2. ' ,' → logprob: -9.875052452087402
    3. '   ' → logprob: -15.125052452087402
    4. '=' → logprob: -15.125052452087402
    5. 'values' → logprob: -16.000051498413086
    6. ',
' → logprob: -16.375051498413086
    7. ',val' → logprob: -16.375051498413086
    8. ',value' → logprob: -17.500051498413086
    9. '(values' → logprob: -17.625051498413086
    10. '       ' → logprob: -17.875051498413086

Token 428: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.07888989895582199
    2. ' values' → logprob: -2.578889846801758
    3. '	values' → logprob: -16.578889846801758
    4. '           ' → logprob: -17.703889846801758
    5. '(values' → logprob: -18.328889846801758
    6. '.values' → logprob: -19.078889846801758
    7. '   ' → logprob: -19.453889846801758
    8. '_values' → logprob: -19.453889846801758
    9. '       ' → logprob: -19.578889846801758
    10. '               ' → logprob: -19.953889846801758

Token 429: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ')
' → logprob: -11.250014305114746
    3. '       ' → logprob: -14.500014305114746
    4. ' )' → logprob: -15.125014305114746
    5. '   ' → logprob: -16.25001335144043
    6. '           ' → logprob: -17.25001335144043
    7. '())' → logprob: -17.50001335144043
    8. ')

' → logprob: -18.50001335144043
    9. '<|end|>' → logprob: -18.75001335144043
    10. '))' → logprob: -19.00001335144043

Token 430: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034160553477704525
    2. '
' → logprob: -5.753416061401367
    3. '    
' → logprob: -8.878416061401367
    4. 'def' → logprob: -10.003416061401367
    5. ' def' → logprob: -10.753416061401367
    6. 'import' → logprob: -11.378416061401367
    7. '        
' → logprob: -11.878416061401367
    8. '```' → logprob: -12.378416061401367
    9. '

' → logprob: -13.503416061401367
    10. ' ' → logprob: -13.878416061401367

Token 431: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042563002556562424
    2. '   ' → logprob: -3.292562961578369
    3. ' def' → logprob: -5.792562961578369
    4. '
' → logprob: -6.542562961578369
    5. '    
' → logprob: -10.917563438415527
    6. '@' (adapté à ' @') → logprob: -13.667563438415527
    7. '	def' → logprob: -14.792563438415527
    8. '        
' → logprob: -15.542563438415527
    9. '

' → logprob: -15.792563438415527
    10. 'import' → logprob: -15.792563438415527

Token 432: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -8.280175097752362e-05
    2. 'property' → logprob: -10.000082969665527
    3. 'classmethod' → logprob: -11.125082969665527
    4. '_static' → logprob: -11.250082969665527
    5. '_' → logprob: -11.625082969665527
    6. 'static' → logprob: -14.625082969665527
    7. '_s' → logprob: -16.37508201599121
    8. '_property' → logprob: -17.37508201599121
    9. ' static' → logprob: -17.75008201599121
    10. '_read' → logprob: -18.25008201599121

Token 433: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3497803211212158
    2. '
' → logprob: -1.3497803211212158
    3. 'def' → logprob: -3.349780321121216
    4. ' def' → logprob: -7.224780082702637
    5. '    
' → logprob: -10.724780082702637
    6. '
' → logprob: -12.349780082702637
    7. '	def' → logprob: -12.974780082702637
    8. ' ' → logprob: -13.224780082702637
    9. '        
' → logprob: -13.474780082702637
    10. '  ' → logprob: -13.724780082702637

Token 434: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40216928720474243
    2. 'def' → logprob: -1.1521692276000977
    3. '
' → logprob: -4.277169227600098
    4. ' def' → logprob: -6.652169227600098
    5. '    
' → logprob: -12.402169227600098
    6. '	def' → logprob: -12.902169227600098
    7. '  ' → logprob: -14.402169227600098
    8. ' ' → logprob: -14.402169227600098
    9. '
' → logprob: -15.152169227600098
    10. '        
' → logprob: -15.652169227600098

Token 435: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.676292231422849e-05
    2. ' def' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.000017166137695
    4. '
' → logprob: -21.625017166137695
    5. ' ' → logprob: -23.500017166137695
    6. '    
' → logprob: -23.750017166137695
    7. '	def' → logprob: -23.875017166137695
    8. '  ' → logprob: -24.000017166137695
    9. '_def' → logprob: -24.625017166137695
    10. '```' → logprob: -25.500017166137695

Token 436: ' _' (ID: 1175)
  Prédit: '_read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.0019791913218796253
    2. ' _' → logprob: -7.376979351043701
    3. '_parse' → logprob: -7.501979351043701
    4. 'read' → logprob: -7.501979351043701
    5. 'def' → logprob: -8.501978874206543
    6. ' readline' → logprob: -11.376978874206543
    7. 'parse' → logprob: -12.626978874206543
    8. '
' → logprob: -12.876978874206543
    9. '_write' → logprob: -12.876978874206543
    10. '_strip' → logprob: -13.001978874206543

Token 437: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: 0.0
    2. '_read' → logprob: -20.25
    3. ' read' → logprob: -20.375
    4. '.read' → logprob: -21.75
    5. '	read' → logprob: -22.125
    6. 'parse' → logprob: -23.125
    7. 'Read' → logprob: -24.0
    8. 'def' → logprob: -24.125
    9. '
' → logprob: -24.375
    10. '(read' → logprob: -25.125

Token 438: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.002482434967532754
    2. 'line' → logprob: -6.0024824142456055
    3. '_input' → logprob: -12.377482414245605
    4. '_' → logprob: -13.252482414245605
    5. 'Line' → logprob: -16.002483367919922
    6. '_LINE' → logprob: -16.252483367919922
    7. '   ' → logprob: -16.377483367919922
    8. '()' → logprob: -16.627483367919922
    9. ' line' → logprob: -16.627483367919922
    10. 'input' → logprob: -16.752483367919922

Token 439: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014220856130123138
    2. '()' → logprob: -4.514220714569092
    3. '():
' → logprob: -5.764220714569092
    4. ' ():' → logprob: -10.51422119140625
    5. '(' → logprob: -13.88922119140625
    6. ' ()' → logprob: -14.26422119140625
    7. '().' → logprob: -14.63922119140625
    8. '():

' → logprob: -15.13922119140625
    9. '():
' → logprob: -15.26422119140625
    10. '()`' → logprob: -15.51422119140625

Token 440: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1856890469789505
    2. '():
' → logprob: -1.935689091682434
    3. '()' → logprob: -3.6856889724731445
    4. '()->' → logprob: -10.060688972473145
    5. '():
' → logprob: -11.810688972473145
    6. ' ():' → logprob: -11.935688972473145
    7. ':' → logprob: -12.810688972473145
    8. '   ' → logprob: -13.685688972473145
    9. '(' → logprob: -14.185688972473145
    10. '():

' → logprob: -14.810688972473145

Token 441: ' Optional' (ID: 19351)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0012104723136872053
    2. ' input' → logprob: -7.376210689544678
    3. '(input' → logprob: -7.501210689544678
    4. 'next' → logprob: -11.37621021270752
    5. '_input' → logprob: -12.00121021270752
    6. 'staticmethod' → logprob: -12.87621021270752
    7. 'Optional' → logprob: -13.12621021270752
    8. 'None' → logprob: -13.25121021270752
    9. '=input' → logprob: -13.37621021270752
    10. 'str' → logprob: -13.87621021270752

Token 442: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -7.52919222577475e-05
    2. 'str' → logprob: -9.500075340270996
    3. '(str' → logprob: -14.875075340270996
    4. ' str' → logprob: -17.62507438659668
    5. '[int' → logprob: -18.87507438659668
    6. '=str' → logprob: -19.50007438659668
    7. ':str' → logprob: -20.00007438659668
    8. '	str' → logprob: -20.37507438659668
    9. 'Str' → logprob: -21.12507438659668
    10. '_str' → logprob: -21.12507438659668

Token 443: ']:
' (ID: 22152)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20164106786251068
    2. '():
' → logprob: -1.7016410827636719
    3. '()' → logprob: -8.826641082763672
    4. '):' → logprob: -10.076641082763672
    5. '   ' → logprob: -11.451641082763672
    6. ':' → logprob: -11.451641082763672
    7. '):
' → logprob: -11.576641082763672
    8. '():
' → logprob: -12.576641082763672
    9. ' ():' → logprob: -12.701641082763672
    10. ':
' → logprob: -13.951641082763672

Token 444: '       ' (ID: 309)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.3530793786048889
    2. '       ' → logprob: -1.6030793190002441
    3. ' try' → logprob: -2.353079319000244
    4. '   ' → logprob: -7.353079319000244
    5. '	try' → logprob: -7.853079319000244
    6. 'import' → logprob: -9.353079795837402
    7. '	' → logprob: -12.103079795837402
    8. '```' → logprob: -13.103079795837402
    9. ' ' → logprob: -14.478079795837402
    10. '           ' → logprob: -14.853079795837402

Token 445: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.0007163656409829855
    2. ' try' → logprob: -7.750716209411621
    3. 'import' → logprob: -8.625716209411621
    4. 'return' → logprob: -9.375716209411621
    5. 'input' → logprob: -11.125716209411621
    6. 'line' → logprob: -12.250716209411621
    7. '
' → logprob: -13.375716209411621
    8. ' return' → logprob: -16.500717163085938
    9. '	try' → logprob: -16.500717163085938
    10. '   ' → logprob: -17.375717163085938

Token 446: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.979383647441864
    2. '           ' → logprob: -1.1043837070465088
    3. ':' → logprob: -1.2293837070465088
    4. '       ' → logprob: -7.97938346862793
    5. '   ' → logprob: -9.35438346862793
    6. ' :' → logprob: -10.35438346862793
    7. ' :
' → logprob: -11.35438346862793
    8. '):
' → logprob: -11.47938346862793
    9. ':return' → logprob: -11.47938346862793
    10. '	       ' → logprob: -11.60438346862793

Token 447: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5962876677513123
    2. '           ' → logprob: -0.9712876677513123
    3. 'return' → logprob: -2.846287727355957
    4. ' line' → logprob: -4.471287727355957
    5. 'line' → logprob: -7.846287727355957
    6. '       ' → logprob: -8.221287727355957
    7. '   ' → logprob: -8.721287727355957
    8. ' input' → logprob: -9.346287727355957
    9. '		' → logprob: -10.596287727355957
    10. 'input' → logprob: -10.596287727355957

Token 448: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.049367755651474
    2. ' return' → logprob: -3.049367666244507
    3. 'input' → logprob: -7.299367904663086
    4. 'line' → logprob: -9.799367904663086
    5. ' input' → logprob: -10.424367904663086
    6. ' line' → logprob: -11.424367904663086
    7. '   ' → logprob: -12.549367904663086
    8. '           ' → logprob: -12.549367904663086
    9. 'import' → logprob: -15.174367904663086
    10. '	return' → logprob: -15.299367904663086

Token 449: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02324547804892063
    2. ' input' → logprob: -3.7732455730438232
    3. '	input' → logprob: -17.523244857788086
    4. '   ' → logprob: -17.773244857788086
    5. '=input' → logprob: -18.898244857788086
    6. '(input' → logprob: -19.273244857788086
    7. '<input' → logprob: -20.273244857788086
    8. 'next' → logprob: -21.148244857788086
    9. ' ' → logprob: -21.648244857788086
    10. '_input' → logprob: -21.898244857788086

Token 450: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006827501580119133
    2. '().' → logprob: -5.006827354431152
    3. '()
' → logprob: -9.131827354431152
    4. '()

' → logprob: -13.881827354431152
    5. ' ()' → logprob: -13.881827354431152
    6. '())' → logprob: -13.881827354431152
    7. '()`' → logprob: -15.006827354431152
    8. '()\' → logprob: -15.256827354431152
    9. '()>' → logprob: -16.38182830810547
    10. '(' → logprob: -16.50682830810547

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006727590807713568
    2. 'except' → logprob: -7.375672817230225
    3. ' except' → logprob: -10.250672340393066
    4. '	except' → logprob: -12.125672340393066
    5. '<|end|>' → logprob: -12.375672340393066
    6. '	' → logprob: -14.875672340393066
    7. '<|end|>' → logprob: -15.000672340393066
    8. '   ' → logprob: -15.250672340393066
    9. 'Except' → logprob: -16.625673294067383
    10. '  ' → logprob: -17.250673294067383

Token 452: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025585228577256203
    2. ' except' → logprob: -4.275585174560547
    3. 'except' (adapté à ' except') → logprob: -4.525585174560547
    4. '	except' → logprob: -7.650585174560547
    5. '   ' → logprob: -10.025585174560547
    6. '	' → logprob: -12.400585174560547
    7. '    ' → logprob: -13.525585174560547
    8. '	   ' → logprob: -13.775585174560547
    9. '
' → logprob: -14.025585174560547
    10. '      ' → logprob: -15.400585174560547

Token 453: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.5759394764900208
    2. ' EOF' → logprob: -0.8259394764900208
    3. '(' → logprob: -16.575939178466797
    4. 'Stop' → logprob: -21.450939178466797
    5. ' (' → logprob: -22.075939178466797
    6. 'EO' → logprob: -22.200939178466797
    7. 'E' → logprob: -23.575939178466797
    8. '(E' → logprob: -23.575939178466797
    9. '
' → logprob: -24.200939178466797
    10. 'Keyboard' → logprob: -24.825939178466797

Token 454: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. 'rror' → logprob: -16.5
    3. 'EOF' → logprob: -18.375
    4. 'error' → logprob: -19.375
    5. '
' → logprob: -20.375
    6. ' Error' → logprob: -20.625
    7. 'SError' → logprob: -21.125
    8. 'LError' → logprob: -21.25
    9. '_ERROR' → logprob: -21.625
    10. 'Erro' → logprob: -21.625

Token 455: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42268243432044983
    2. '           ' → logprob: -1.4226824045181274
    3. ':' → logprob: -2.297682523727417
    4. ' as' → logprob: -7.047682285308838
    5. 'None' → logprob: -7.172682285308838
    6. '       ' → logprob: -7.922682285308838
    7. ' None' → logprob: -8.172682762145996
    8. '(None' → logprob: -8.297682762145996
    9. '   ' → logprob: -8.422682762145996
    10. ':return' → logprob: -8.672682762145996

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.0948158382670954e-05
    2. ' None' → logprob: -11.125030517578125
    3. 'None' → logprob: -11.750030517578125
    4. ' return' → logprob: -12.625030517578125
    5. 'return' → logprob: -13.000030517578125
    6. '               ' → logprob: -14.250030517578125
    7. ':return' → logprob: -14.375030517578125
    8. '(None' → logprob: -15.250030517578125
    9. ':
' → logprob: -15.375030517578125
    10. ':' → logprob: -15.625030517578125

Token 457: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.169991135597229
    2. 'None' → logprob: -2.1699910163879395
    3. '           ' → logprob: -3.6699910163879395
    4. ' return' → logprob: -4.6699910163879395
    5. ' None' → logprob: -4.9199910163879395
    6. '
' → logprob: -15.544991493225098
    7. '               ' → logprob: -16.04499053955078
    8. 'none' → logprob: -16.16999053955078
    9. '       ' → logprob: -16.66999053955078
    10. 'null' → logprob: -16.79499053955078

Token 458: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001234428636962548
    2. ' None' → logprob: -9.000123023986816
    3. '(None' → logprob: -22.000123977661133
    4. 'none' → logprob: -22.000123977661133
    5. '_None' → logprob: -22.125123977661133
    6. '=None' → logprob: -23.750123977661133
    7. '   ' → logprob: -23.875123977661133
    8. '_none' → logprob: -24.625123977661133
    9. ',None' → logprob: -24.750123977661133
    10. '
' → logprob: -25.250123977661133

Token 459: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038443657103925943
    2. '    
' → logprob: -8.000384330749512
    3. '@' → logprob: -10.375384330749512
    4. '        
' → logprob: -11.250384330749512
    5. '
' → logprob: -13.125384330749512
    6. '<|end|>' → logprob: -14.250384330749512
    7. '  
' → logprob: -14.625384330749512
    8. 'staticmethod' → logprob: -15.000384330749512
    9. '```' → logprob: -15.125384330749512
    10. '<|end|>' → logprob: -15.500384330749512

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048600658774375916
    2. '@' → logprob: -3.048600673675537
    3. '    
' → logprob: -11.423600196838379
    4. '        
' → logprob: -13.923600196838379
    5. ' @' → logprob: -14.048600196838379
    6. 'def' → logprob: -15.923600196838379
    7. '```' → logprob: -16.423601150512695
    8. '
' → logprob: -16.548601150512695
    9. 'staticmethod' → logprob: -16.673601150512695
    10. '  
' → logprob: -17.173601150512695

Token 461: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -5.88418151892256e-05
    2. '   ' → logprob: -9.750059127807617
    3. '    
' → logprob: -15.250059127807617
    4. ' @' → logprob: -15.625059127807617
    5. '
' → logprob: -16.500059127807617
    6. '@
' → logprob: -19.750059127807617
    7. '        
' → logprob: -19.750059127807617
    8. 'def' → logprob: -20.000059127807617
    9. '```' → logprob: -20.000059127807617
    10. 'staticmethod' → logprob: -20.625059127807617

Token 462: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: 0.0
    2. 'classmethod' → logprob: -16.75
    3. 'static' → logprob: -19.625
    4. '@' → logprob: -21.375
    5. 'property' → logprob: -22.375
    6. '
' → logprob: -26.375
    7. '```' → logprob: -26.5
    8. 'parse' → logprob: -26.625
    9. '_static' → logprob: -27.0
    10. ' static' → logprob: -28.25

Token 463: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7013404965400696
    2. 'def' → logprob: -0.7013404965400696
    3. '
' → logprob: -5.201340675354004
    4. ' def' → logprob: -5.951340675354004
    5. '_def' → logprob: -10.951340675354004
    6. ' ' → logprob: -11.326340675354004
    7. '  ' → logprob: -12.201340675354004
    8. '    
' → logprob: -12.326340675354004
    9. '	def' → logprob: -13.326340675354004
    10. '_' → logprob: -13.576340675354004

Token 464: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25734269618988037
    2. '   ' → logprob: -1.5073426961898804
    3. '
' → logprob: -5.50734281539917
    4. ' def' → logprob: -6.63234281539917
    5. '_def' → logprob: -11.757342338562012
    6. '	def' → logprob: -12.132342338562012
    7. ':' → logprob: -12.382342338562012
    8. ':def' → logprob: -13.007342338562012
    9. ' ' → logprob: -13.632342338562012
    10. '    
' → logprob: -14.007342338562012

Token 465: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.5491004129871726e-05
    2. ' def' → logprob: -10.000045776367188
    3. '
' → logprob: -17.250045776367188
    4. '_def' → logprob: -17.625045776367188
    5. '   ' → logprob: -19.500045776367188
    6. '	def' → logprob: -21.375045776367188
    7. ':def' → logprob: -23.125045776367188
    8. '    
' → logprob: -24.000045776367188
    9. '```' → logprob: -24.000045776367188
    10. 'ndef' → logprob: -24.875045776367188

Token 466: ' _' (ID: 1175)
  Prédit: '_parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parse' → logprob: -9.014684110297821e-06
    2. ' _' → logprob: -11.750008583068848
    3. '_try' → logprob: -15.125008583068848
    4. '_parser' → logprob: -15.375008583068848
    5. 'def' → logprob: -16.250009536743164
    6. '_strip' → logprob: -16.375009536743164
    7. '_decode' → logprob: -16.750009536743164
    8. 'parse' → logprob: -17.000009536743164
    9. '_par' → logprob: -17.250009536743164
    10. '_' → logprob: -17.250009536743164

Token 467: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: 0.0
    2. '_parse' → logprob: -16.875
    3. ' parse' → logprob: -17.25
    4. 'def' → logprob: -19.375
    5. 'strip' → logprob: -19.75
    6. '(parse' → logprob: -20.5
    7. 'int' → logprob: -21.125
    8. '
' → logprob: -21.875
    9. '.parse' → logprob: -22.25
    10. 'try' → logprob: -22.75

Token 468: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0007101670489646494
    2. 'int' → logprob: -7.2507100105285645
    3. ' int' → logprob: -16.500709533691406
    4. 'Int' → logprob: -17.500709533691406
    5. '[int' → logprob: -18.000709533691406
    6. '_uint' → logprob: -18.250709533691406
    7. '<int' → logprob: -18.375709533691406
    8. '```' → logprob: -19.375709533691406
    9. '=int' → logprob: -19.500709533691406
    10. '_integer' → logprob: -19.750709533691406

Token 469: '(s' (ID: 1858)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.01828596368432045
    2. '(s' → logprob: -4.018285751342773
    3. '(' → logprob: -9.643285751342773
    4. '(text' → logprob: -10.018285751342773
    5. '(string' → logprob: -11.018285751342773
    6. ' (' → logprob: -12.393285751342773
    7. '(value' → logprob: -12.893285751342773
    8. '(token' → logprob: -13.268285751342773
    9. '(str' → logprob: -14.268285751342773
    10. '(input' → logprob: -14.518285751342773

Token 470: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007666255696676672
    2. '(s' → logprob: -7.375766754150391
    3. ')' → logprob: -9.75076675415039
    4. 's' → logprob: -10.62576675415039
    5. '   ' → logprob: -10.87576675415039
    6. ' :' → logprob: -11.00076675415039
    7. ':str' → logprob: -11.75076675415039
    8. ':s' → logprob: -12.75076675415039
    9. 'string' → logprob: -12.87576675415039
    10. ':int' → logprob: -13.50076675415039

Token 471: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0010343570029363036
    2. ' str' → logprob: -7.501034259796143
    3. 's' → logprob: -7.751034259796143
    4. 'int' → logprob: -10.3760347366333
    5. ')' → logprob: -10.8760347366333
    6. ' s' → logprob: -14.8760347366333
    7. '   ' → logprob: -16.001033782958984
    8. '[str' → logprob: -16.501033782958984
    9. ' ' → logprob: -16.626033782958984
    10. 'strip' → logprob: -17.001033782958984

Token 472: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. ' )' → logprob: -11.875008583068848
    3. '   ' → logprob: -13.875008583068848
    4. '):' → logprob: -15.500008583068848
    5. ':' → logprob: -17.12500762939453
    6. '):
' → logprob: -18.50000762939453
    7. '       ' → logprob: -18.62500762939453
    8. ')->' → logprob: -18.62500762939453
    9. '  ' → logprob: -18.75000762939453
    10. ' ' → logprob: -19.25000762939453

Token 473: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1302051842212677
    2. '->' → logprob: -3.0052051544189453
    3. ' ->' → logprob: -3.2552051544189453
    4. '   ' → logprob: -3.5052051544189453
    5. ')' → logprob: -6.005205154418945
    6. ':int' → logprob: -7.630205154418945
    7. ':
' → logprob: -8.130205154418945
    8. 'int' → logprob: -8.630205154418945
    9. '       ' → logprob: -8.755205154418945
    10. '()' → logprob: -8.880205154418945

Token 474: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.15310683415737e-05
    2. ' int' → logprob: -10.750021934509277
    3. '[int' → logprob: -18.50002098083496
    4. '   ' → logprob: -20.75002098083496
    5. '=int' → logprob: -20.87502098083496
    6. '(int' → logprob: -21.00002098083496
    7. '
' → logprob: -22.50002098083496
    8. '	int' → logprob: -22.62502098083496
    9. ' ' → logprob: -23.25002098083496
    10. '<int' → logprob: -23.37502098083496

Token 475: ':
' (ID: 734)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.7155901789665222
    2. ':' → logprob: -1.465590238571167
    3. '(s' → logprob: -1.465590238571167
    4. '(' → logprob: -3.090590238571167
    5. ':int' → logprob: -6.715590000152588
    6. ':
' → logprob: -6.840590000152588
    7. '   ' → logprob: -7.590590000152588
    8. 'int' → logprob: -7.840590000152588
    9. '(
' → logprob: -8.465590476989746
    10. ':return' → logprob: -9.465590476989746

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01906954124569893
    2. 'return' → logprob: -4.019069671630859
    3. ' return' → logprob: -7.019069671630859
    4. 'int' → logprob: -11.26906967163086
    5. '   ' → logprob: -11.39406967163086
    6. '	return' → logprob: -14.64406967163086
    7. '	' → logprob: -16.89406967163086
    8. '           ' → logprob: -17.01906967163086
    9. '	   ' → logprob: -17.39406967163086
    10. '      ' → logprob: -17.39406967163086

Token 477: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009131324477493763
    2. ' return' → logprob: -7.000913143157959
    3. '       ' → logprob: -13.5009126663208
    4. 'int' → logprob: -15.2509126663208
    5. '   ' → logprob: -17.500913619995117
    6. '	return' → logprob: -20.750913619995117
    7. '           ' → logprob: -21.375913619995117
    8. '```' → logprob: -21.875913619995117
    9. '        
' → logprob: -22.625913619995117
    10. '
' → logprob: -22.750913619995117

Token 478: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031777136027812958
    2. ' int' → logprob: -5.753177642822266
    3. '(int' → logprob: -19.753177642822266
    4. '<int' → logprob: -20.503177642822266
    5. '   ' → logprob: -20.628177642822266
    6. '	int' → logprob: -20.628177642822266
    7. '[int' → logprob: -22.003177642822266
    8. '=int' → logprob: -22.253177642822266
    9. ':int' → logprob: -22.628177642822266
    10. '```' → logprob: -22.628177642822266

Token 479: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.56102097814437e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -15.875045776367188
    4. 's' → logprob: -16.625045776367188
    5. '(
' → logprob: -18.125045776367188
    6. '(str' → logprob: -20.875045776367188
    7. ' s' → logprob: -21.125045776367188
    8. '(strip' → logprob: -21.125045776367188
    9. '((' → logprob: -21.375045776367188
    10. '(

' → logprob: -22.750045776367188

Token 480: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.029760675504803658
    2. ')' → logprob: -3.5297605991363525
    3. 'strip' → logprob: -11.904760360717773
    4. '.trim' → logprob: -13.029760360717773
    5. ' )' → logprob: -14.404760360717773
    6. '.rstrip' → logprob: -14.904760360717773
    7. '   ' → logprob: -17.029760360717773
    8. '(strip' → logprob: -17.404760360717773
    9. 's' → logprob: -17.529760360717773
    10. ')s' → logprob: -17.654760360717773

Token 481: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0032027887646108866
    2. ')' → logprob: -5.75320291519165
    3. '()' → logprob: -10.628202438354492
    4. '())
' → logprob: -14.628202438354492
    5. ' ())' → logprob: -15.503202438354492
    6. ' )' → logprob: -16.253202438354492
    7. '(' → logprob: -17.503202438354492
    8. '()))' → logprob: -17.878202438354492
    9. '();)' → logprob: -19.003202438354492
    10. '()
' → logprob: -19.628202438354492

Token 482: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018382884562015533
    2. 'if' → logprob: -4.018383026123047
    3. 'class' → logprob: -8.643383026123047
    4. 'from' → logprob: -10.018383026123047
    5. 'import' → logprob: -11.643383026123047
    6. '<|end|>' → logprob: -13.643383026123047
    7. '```' → logprob: -14.018383026123047
    8. ' if' → logprob: -14.143383026123047
    9. '#' → logprob: -14.768383026123047
    10. ' def' → logprob: -16.018383026123047

Token 483: ' Output' (ID: 18315)
  Prédit: 'Sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -0.8595567941665649
    2. 'Output' → logprob: -1.609556794166565
    3. 'Test' → logprob: -2.7345566749572754
    4. ' Sort' → logprob: -2.9845566749572754
    5. 'Sorter' → logprob: -3.1095566749572754
    6. 'File' → logprob: -3.3595566749572754
    7. 'Std' → logprob: -3.6095566749572754
    8. 'Result' → logprob: -3.7345566749572754
    9. 'Data' → logprob: -3.8595566749572754
    10. 'Sorting' → logprob: -4.109556674957275

Token 484: 'Printer' (ID: 54325)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.15308724343776703
    2. 'Printer' → logprob: -2.4030871391296387
    3. 'Handler' → logprob: -3.1530871391296387
    4. 'ter' → logprob: -5.528087139129639
    5. 'Formatter' → logprob: -5.903087139129639
    6. 'Generator' → logprob: -7.278087139129639
    7. 'Manager' → logprob: -7.403087139129639
    8. 'Collector' → logprob: -8.778087615966797
    9. 'Builder' → logprob: -8.903087615966797
    10. 'Processor' → logprob: -9.153087615966797

Token 485: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03370598703622818
    2. ':
' → logprob: -3.408705949783325
    3. '(' → logprob: -11.408705711364746
    4. '(Abstract' → logprob: -11.408705711364746
    5. '):' → logprob: -11.908705711364746
    6. '(S' → logprob: -12.033705711364746
    7. '():' → logprob: -12.283705711364746
    8. '):
' → logprob: -12.658705711364746
    9. ':

' → logprob: -12.908705711364746
    10. '():
' → logprob: -13.158705711364746

Token 486: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0008268986130133271
    2. '):
' → logprob: -7.500826835632324
    3. '):' → logprob: -8.500826835632324
    4. ' ABC' → logprob: -10.750826835632324
    5. ')' → logprob: -10.875826835632324
    6. '(' → logprob: -10.875826835632324
    7. 'abc' → logprob: -12.500826835632324
    8. 'object' → logprob: -13.250826835632324
    9. '   ' → logprob: -13.375826835632324
    10. ':' → logprob: -13.750826835632324

Token 487: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47455933690071106
    2. '):' → logprob: -0.9745593070983887
    3. ':' → logprob: -7.849559307098389
    4. ')' → logprob: -10.599559783935547
    5. '):

' → logprob: -10.724559783935547
    6. ':
' → logprob: -10.974559783935547
    7. '):
' → logprob: -11.349559783935547
    8. '   ' → logprob: -11.599559783935547
    9. '(' → logprob: -12.974559783935547
    10. '(Abstract' → logprob: -13.599559783935547

Token 488: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4259644558478612e-05
    2. 'class' → logprob: -11.375014305114746
    3. 'def' → logprob: -13.875014305114746
    4. '<|end|>' → logprob: -14.250014305114746
    5. '  ' → logprob: -16.00001335144043
    6. '[' → logprob: -16.25001335144043
    7. ':' → logprob: -16.25001335144043
    8. 'from' → logprob: -16.37501335144043
    9. '@' → logprob: -16.37501335144043
    10. '    ' → logprob: -16.50001335144043

Token 489: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.048652540892362595
    2. '   ' → logprob: -3.0486526489257812
    3. ' @' → logprob: -9.923652648925781
    4. 'def' → logprob: -11.423652648925781
    5. 'class' → logprob: -13.048652648925781
    6. 'from' → logprob: -13.048652648925781
    7. '    
' → logprob: -15.798652648925781
    8. '    ' → logprob: -15.923652648925781
    9. '  ' → logprob: -16.04865264892578
    10. '
' → logprob: -16.17365264892578

Token 490: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -3.292907877039397e-06
    2. 'staticmethod' → logprob: -12.75000286102295
    3. ' abstract' → logprob: -14.87500286102295
    4. 'abc' → logprob: -17.875003814697266
    5. 'property' → logprob: -18.125003814697266
    6. 'classmethod' → logprob: -18.375003814697266
    7. '.abstract' → logprob: -19.125003814697266
    8. 'ab' → logprob: -21.000003814697266
    9. 'method' → logprob: -21.625003814697266
    10. 'Abstract' → logprob: -21.625003814697266

Token 491: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -2.8087270038668066e-05
    2. 'def' → logprob: -10.750027656555176
    3. '_method' → logprob: -12.625027656555176
    4. 'classmethod' → logprob: -12.875027656555176
    5. 'staticmethod' → logprob: -14.875027656555176
    6. ' method' → logprob: -15.375027656555176
    7. '	method' → logprob: -16.750028610229492
    8. '.method' → logprob: -17.375028610229492
    9. 'ethod' → logprob: -17.625028610229492
    10. '   ' → logprob: -18.125028610229492

Token 492: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012248033657670021
    2. '   ' → logprob: -4.8872480392456055
    3. ' def' → logprob: -5.7622480392456055
    4. '
' → logprob: -6.5122480392456055
    5. '	def' → logprob: -14.387248039245605
    6. '```' → logprob: -14.512248039245605
    7. '    
' → logprob: -15.262248039245605
    8. '
' → logprob: -15.637248039245605
    9. 'method' → logprob: -16.13724708557129
    10. '<|end|>' → logprob: -16.51224708557129

Token 493: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07955463975667953
    2. '   ' → logprob: -2.579554557800293
    3. '
' → logprob: -7.579554557800293
    4. 'method' → logprob: -9.204554557800293
    5. ' def' → logprob: -10.079554557800293
    6. 'class' → logprob: -12.579554557800293
    7. '	def' → logprob: -12.704554557800293
    8. 'classmethod' → logprob: -13.829554557800293
    9. '  ' → logprob: -14.079554557800293
    10. '    
' → logprob: -14.079554557800293

Token 494: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015036711702123284
    2. 'method' → logprob: -6.7515034675598145
    3. 'staticmethod' → logprob: -8.126503944396973
    4. 'classmethod' → logprob: -10.626503944396973
    5. ' def' → logprob: -12.001503944396973
    6. 'class' → logprob: -12.876503944396973
    7. 'property' → logprob: -12.876503944396973
    8. 'abstract' → logprob: -13.501503944396973
    9. 'print' → logprob: -15.001503944396973
    10. 'text' → logprob: -15.376503944396973

Token 495: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.746380237629637e-05
    2. ' print' → logprob: -9.250097274780273
    3. 'write' → logprob: -14.375097274780273
    4. 'println' → logprob: -14.375097274780273
    5. 'output' → logprob: -16.750097274780273
    6. 'def' → logprob: -17.000097274780273
    7. '.print' → logprob: -19.000097274780273
    8. '
' → logprob: -19.375097274780273
    9. '_print' → logprob: -19.375097274780273
    10. '	print' → logprob: -19.500097274780273

Token 496: '_result' (ID: 11623)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00022403974435292184
    2. '_result' → logprob: -9.250224113464355
    3. '_line' → logprob: -10.000224113464355
    4. 'line' → logprob: -10.750224113464355
    5. 'self' → logprob: -10.875224113464355
    6. 'result' → logprob: -11.000224113464355
    7. '_output' → logprob: -11.750224113464355
    8. '(' → logprob: -12.125224113464355
    9. '_results' → logprob: -12.500224113464355
    10. 'results' → logprob: -12.750224113464355

Token 497: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -12.250008583068848
    3. 'self' → logprob: -12.500008583068848
    4. ' (' → logprob: -15.000008583068848
    5. '   ' → logprob: -16.500009536743164
    6. 's' → logprob: -17.000009536743164
    7. '(
' → logprob: -17.750009536743164
    8. '       ' → logprob: -18.250009536743164
    9. '(s' → logprob: -18.750009536743164
    10. '
' → logprob: -19.250009536743164

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.37500286102295
    3. ',data' → logprob: -14.12500286102295
    4. ',
' → logprob: -16.000001907348633
    5. ',result' → logprob: -17.000001907348633
    6. ')' → logprob: -17.375001907348633
    7. 'self' → logprob: -18.000001907348633
    8. 's' → logprob: -19.250001907348633
    9. ',line' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.875001907348633

Token 499: ' result' (ID: 1534)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.8693103790283203
    2. 'data' → logprob: -1.2443103790283203
    3. 'result' → logprob: -2.2443103790283203
    4. 'sw' → logprob: -3.2443103790283203
    5. 'n' → logprob: -3.3693103790283203
    6. 'dataset' → logprob: -3.4943103790283203
    7. 'results' → logprob: -3.8693103790283203
    8. 'num' → logprob: -4.36931037902832
    9. 'count' → logprob: -4.86931037902832
    10. 'sorted' → logprob: -5.11931037902832

Token 500: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.24310302757658e-05
    2. ')' → logprob: -10.250072479248047
    3. 's' → logprob: -11.250072479248047
    4. 'self' → logprob: -11.250072479248047
    5. ':int' → logprob: -12.375072479248047
    6. '):' → logprob: -12.875072479248047
    7. '   ' → logprob: -13.250072479248047
    8. ' :' → logprob: -14.125072479248047
    9. '       ' → logprob: -14.750072479248047
    10. '(self' → logprob: -14.750072479248047

Token 501: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029452718794345856
    2. 'str' → logprob: -3.6544528007507324
    3. 'List' → logprob: -5.904452800750732
    4. ' int' → logprob: -8.404452323913574
    5. 'Tuple' → logprob: -9.404452323913574
    6. 'tuple' → logprob: -10.154452323913574
    7. 'Swap' → logprob: -10.529452323913574
    8. ' str' → logprob: -10.654452323913574
    9. '[int' → logprob: -12.029452323913574
    10. '(int' → logprob: -12.029452323913574

Token 502: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044592362246476114
    2. '):
' → logprob: -8.375446319580078
    3. '):' → logprob: -9.000446319580078
    4. '   ' → logprob: -10.000446319580078
    5. ',' → logprob: -10.250446319580078
    6. ' )' → logprob: -11.875446319580078
    7. ')->' → logprob: -13.000446319580078
    8. '       ' → logprob: -13.375446319580078
    9. '):
' → logprob: -15.875446319580078
    10. '  ' → logprob: -16.750446319580078

Token 503: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04708709940314293
    2. '   ' → logprob: -3.2970871925354004
    3. ':' → logprob: -5.4220871925354
    4. '       ' → logprob: -6.6720871925354
    5. '):' → logprob: -6.6720871925354
    6. ',' → logprob: -7.2970871925354
    7. ')->' → logprob: -7.6720871925354
    8. ' ->' → logprob: -7.6720871925354
    9. '):
' → logprob: -8.297086715698242
    10. '->' → logprob: -9.422086715698242

Token 504: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00043102685594931245
    2. ' None' → logprob: -7.750431060791016
    3. '   ' → logprob: -14.875431060791016
    4. '(None' → logprob: -18.375431060791016
    5. '_None' → logprob: -19.375431060791016
    6. '  ' → logprob: -19.625431060791016
    7. 'str' → logprob: -19.625431060791016
    8. 'none' → logprob: -20.625431060791016
    9. ' ' → logprob: -20.750431060791016
    10. '=None' → logprob: -21.125431060791016

Token 505: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.517316460609436
    2. '       ' → logprob: -1.017316460609436
    3. 'class' → logprob: -3.8923163414001465
    4. 'pass' → logprob: -4.5173163414001465
    5. ' pass' → logprob: -5.1423163414001465
    6. '<|end|>' → logprob: -5.5173163414001465
    7. '
' → logprob: -7.6423163414001465
    8. '	pass' → logprob: -8.267316818237305
    9. '    ' → logprob: -9.142316818237305
    10. 'abstract' → logprob: -9.392316818237305

Token 507: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08280143141746521
    2. '   ' → logprob: -2.582801342010498
    3. 'pass' (adapté à ' pass') → logprob: -5.707801342010498
    4. ' pass' → logprob: -7.457801342010498
    5. '	pass' → logprob: -12.332801818847656
    6. '      ' → logprob: -14.207801818847656
    7. '     ' → logprob: -14.582801818847656
    8. '    ' → logprob: -14.707801818847656
    9. 'abstract' → logprob: -14.707801818847656
    10. '  ' → logprob: -15.332801818847656

Token 508: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -2.451116051815916e-05
    2. '
' → logprob: -10.625024795532227
    3. ' class' → logprob: -15.875024795532227
    4. '<class' → logprob: -17.125024795532227
    5. '```' → logprob: -17.250024795532227
    6. '    
' → logprob: -18.000024795532227
    7. '

' → logprob: -18.250024795532227
    8. '   ' → logprob: -19.125024795532227
    9. '<|end|>' → logprob: -19.125024795532227
    10. '"class' → logprob: -19.250024795532227

Token 509: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.1928003813372925e-05
    2. '
' → logprob: -9.875051498413086
    3. '<class' → logprob: -15.375051498413086
    4. '```' → logprob: -16.250051498413086
    5. ' class' → logprob: -16.625051498413086
    6. '<|end|>' → logprob: -17.250051498413086
    7. '  
' → logprob: -17.625051498413086
    8. '    
' → logprob: -18.000051498413086
    9. '

' → logprob: -18.875051498413086
    10. ' 
' → logprob: -19.000051498413086

Token 510: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -0.024529816582798958
    2. 'Console' → logprob: -3.7745299339294434
    3. ' Std' → logprob: -7.399529933929443
    4. 'Simple' → logprob: -7.524529933929443
    5. 'Plain' → logprob: -10.024529457092285
    6. ' Console' → logprob: -10.274529457092285
    7. 'Standard' → logprob: -11.024529457092285
    8. 'Concrete' → logprob: -11.149529457092285
    9. 'Sort' → logprob: -12.024529457092285
    10. 'Swap' → logprob: -12.649529457092285

Token 511: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -1.8624639324116288e-06
    2. 'output' → logprob: -14.000001907348633
    3. 'Input' → logprob: -14.500001907348633
    4. 'Out' → logprob: -15.125001907348633
    5. 'out' → logprob: -16.625001907348633
    6. 'Print' → logprob: -16.875001907348633
    7. 'print' → logprob: -18.750001907348633
    8. '_output' → logprob: -18.875001907348633
    9. ' Output' → logprob: -19.000001907348633
    10. 'O' → logprob: -19.000001907348633

Token 512: 'Printer' (ID: 54325)
  Prédit: 'Printer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -4.320199877838604e-07
    2. 'Output' → logprob: -16.0
    3. 'Print' → logprob: -16.375
    4. 'printer' → logprob: -16.5
    5. 'Writer' → logprob: -17.25
    6. 'Painter' → logprob: -17.625
    7. 'Pr' → logprob: -18.0
    8. 'Parser' → logprob: -18.125
    9. 'Prin' → logprob: -18.75
    10. 'Formatter' → logprob: -19.25

Token 513: '(Output' (ID: 132866)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03682462126016617
    2. ':
' → logprob: -3.7868247032165527
    3. '(Output' → logprob: -4.411824703216553
    4. '(' → logprob: -6.911824703216553
    5. '(S' → logprob: -8.786824226379395
    6. '   ' → logprob: -8.786824226379395
    7. ' :' → logprob: -11.536824226379395
    8. '(Abstract' → logprob: -11.786824226379395
    9. '(Standard' → logprob: -11.786824226379395
    10. '(Print' → logprob: -12.286824226379395

Token 514: 'Printer' (ID: 54325)
  Prédit: 'Printer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -0.023274829611182213
    2. 'Output' → logprob: -3.7732748985290527
    3. 'printer' → logprob: -10.648274421691895
    4. 'Writer' → logprob: -13.148274421691895
    5. 'Input' → logprob: -13.523274421691895
    6. 'Formatter' → logprob: -15.023274421691895
    7. 'Print' → logprob: -15.023274421691895
    8. 'Processor' → logprob: -15.273274421691895
    9. 'Method' → logprob: -15.523274421691895
    10. '   ' → logprob: -15.773274421691895

Token 515: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029789719730615616
    2. '):' → logprob: -3.529789686203003
    3. '):
' → logprob: -10.779789924621582
    4. '   ' → logprob: -11.029789924621582
    5. '):

' → logprob: -13.779789924621582
    6. ':' → logprob: -14.404789924621582
    7. ':
' → logprob: -15.154789924621582
    8. ')' → logprob: -15.904789924621582
    9. ' ):
' → logprob: -17.029788970947266
    10. '():
' → logprob: -17.779788970947266

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.127333340875339e-06
    2. 'def' → logprob: -12.625003814697266
    3. ' def' → logprob: -14.125003814697266
    4. '
' → logprob: -17.750003814697266
    5. '  ' → logprob: -18.125003814697266
    6. '```' → logprob: -18.500003814697266
    7. '    
' → logprob: -19.625003814697266
    8. '    ' → logprob: -19.750003814697266
    9. '	def' → logprob: -19.750003814697266
    10. 'class' → logprob: -19.875003814697266

Token 517: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.482918918132782
    2. '   ' → logprob: -0.982918918132782
    3. ' def' → logprob: -4.732918739318848
    4. '
' → logprob: -13.732918739318848
    5. '	def' → logprob: -14.232918739318848
    6. 'class' → logprob: -15.857918739318848
    7. ' ' → logprob: -15.857918739318848
    8. '  ' → logprob: -15.982918739318848
    9. '```' → logprob: -17.732919692993164
    10. 'de' → logprob: -17.982919692993164

Token 518: ' print' (ID: 2123)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39618584513664246
    2. ' def' → logprob: -1.1461858749389648
    3. '   ' → logprob: -4.896185874938965
    4. 'print' → logprob: -6.771185874938965
    5. ' print' → logprob: -7.396185874938965
    6. ' ' → logprob: -11.021185874938965
    7. '  ' → logprob: -11.896185874938965
    8. '```' → logprob: -13.271185874938965
    9. '	def' → logprob: -13.396185874938965
    10. ')' → logprob: -13.396185874938965

Token 519: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -5.676981345459353e-06
    2. '   ' → logprob: -12.750005722045898
    3. '_' → logprob: -14.000005722045898
    4. 'result' → logprob: -14.250005722045898
    5. '_results' → logprob: -14.375005722045898
    6. '(self' → logprob: -15.875005722045898
    7. 's' → logprob: -16.3750057220459
    8. '_output' → logprob: -16.3750057220459
    9. 'self' → logprob: -16.7500057220459
    10. '       ' → logprob: -16.8750057220459

Token 520: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.875000953674316
    3. 'self' → logprob: -15.625000953674316
    4. ' (' → logprob: -15.750000953674316
    5. '   ' → logprob: -17.000001907348633
    6. '       ' → logprob: -18.750001907348633
    7. '(
' → logprob: -19.500001907348633
    8. 'def' → logprob: -21.125001907348633
    9. ' ' → logprob: -21.250001907348633
    10. ' self' → logprob: -21.875001907348633

Token 521: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005275499541312456
    2. '(self' → logprob: -6.005275726318359
    3. 'self' → logprob: -6.005275726318359
    4. '       ' → logprob: -8.38027572631836
    5. '   ' → logprob: -10.00527572631836
    6. ' ,' → logprob: -10.25527572631836
    7. ',self' → logprob: -11.75527572631836
    8. ' (' → logprob: -12.63027572631836
    9. ')' → logprob: -12.88027572631836
    10. ',
' → logprob: -13.25527572631836

Token 522: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2041483223438263
    2. ' result' → logprob: -1.704148292541504
    3. 'self' → logprob: -5.954148292541504
    4. ' self' → logprob: -9.079148292541504
    5. '   ' → logprob: -10.954148292541504
    6. '       ' → logprob: -12.829148292541504
    7. ' ' → logprob: -14.329148292541504
    8. '    ' → logprob: -14.954148292541504
    9. '	result' → logprob: -15.329148292541504
    10. 'swap' → logprob: -15.454148292541504

Token 523: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017708084487821907
    2. ')' → logprob: -9.375177383422852
    3. 'self' → logprob: -10.500177383422852
    4. '):' → logprob: -10.750177383422852
    5. '(self' → logprob: -10.875177383422852
    6. '   ' → logprob: -11.250177383422852
    7. '       ' → logprob: -11.875177383422852
    8. ':int' → logprob: -13.250177383422852
    9. ' :' → logprob: -13.625177383422852
    10. ':self' → logprob: -14.000177383422852

Token 524: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02324605919420719
    2. ' int' → logprob: -3.7732460498809814
    3. '   ' → logprob: -14.898245811462402
    4. ' ' → logprob: -15.648245811462402
    5. ')' → logprob: -16.64824676513672
    6. '  ' → logprob: -18.02324676513672
    7. '(int' → logprob: -18.14824676513672
    8. 'Optional' → logprob: -18.52324676513672
    9. 'str' → logprob: -18.64824676513672
    10. '[int' → logprob: -19.02324676513672

Token 525: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. '):
' → logprob: -13.12500286102295
    3. ' )' → logprob: -14.62500286102295
    4. '):' → logprob: -14.75000286102295
    5. '   ' → logprob: -15.12500286102295
    6. ':' → logprob: -17.500003814697266
    7. '       ' → logprob: -17.750003814697266
    8. '):
' → logprob: -18.875003814697266
    9. '`)' → logprob: -19.500003814697266
    10. ')->' → logprob: -19.750003814697266

Token 526: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4864395260810852
    2. ')' → logprob: -1.6114394664764404
    3. ':' → logprob: -2.7364394664764404
    4. '(self' → logprob: -2.9864394664764404
    5. ' ->' → logprob: -3.4864394664764404
    6. '->' → logprob: -3.9864394664764404
    7. ':
' → logprob: -4.7364397048950195
    8. '   ' → logprob: -4.9864397048950195
    9. 'self' → logprob: -5.3614397048950195
    10. '):
' → logprob: -7.7364397048950195

Token 527: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0016425730427727103
    2. 'print' → logprob: -7.00164270401001
    3. ' None' → logprob: -7.25164270401001
    4. '   ' → logprob: -11.126642227172852
    5. 'int' → logprob: -12.251642227172852
    6. ' ' → logprob: -13.626642227172852
    7. '  ' → logprob: -14.501642227172852
    8. '       ' → logprob: -15.001642227172852
    9. '    ' → logprob: -16.62664222717285
    10. ')' → logprob: -16.75164222717285

Token 528: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16826984286308289
    2. ':
' → logprob: -2.2932698726654053
    3. ':' → logprob: -3.1682698726654053
    4. '(self' → logprob: -4.543269634246826
    5. '):
' → logprob: -7.168269634246826
    6. 'self' → logprob: -8.668270111083984
    7. '   ' → logprob: -9.418270111083984
    8. '():
' → logprob: -9.793270111083984
    9. ',' → logprob: -10.668270111083984
    10. ':
' → logprob: -11.043270111083984

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026336227892898023
    2. 'print' → logprob: -8.250263214111328
    3. ' print' → logprob: -13.125263214111328
    4. '   ' → logprob: -16.125263214111328
    5. '           ' → logprob: -18.000263214111328
    6. '```' → logprob: -18.125263214111328
    7. '      ' → logprob: -18.500263214111328
    8. '    ' → logprob: -20.250263214111328
    9. '               ' → logprob: -20.500263214111328
    10. '	print' → logprob: -20.750263214111328

Token 530: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00011522514978423715
    2. '       ' → logprob: -9.125115394592285
    3. ' print' → logprob: -12.250115394592285
    4. 'if' → logprob: -14.125115394592285
    5. 'for' → logprob: -14.750115394592285
    6. '   ' → logprob: -15.000115394592285
    7. '```' → logprob: -17.12511444091797
    8. '           ' → logprob: -18.25011444091797
    9. '	print' → logprob: -19.00011444091797
    10. 'println' → logprob: -19.12511444091797

Token 531: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0005399276851676404
    2. '(f' → logprob: -7.625539779663086
    3. '(' → logprob: -10.500539779663086
    4. 'result' → logprob: -11.250539779663086
    5. '("' → logprob: -11.500539779663086
    6. '((' → logprob: -15.250539779663086
    7. '()' → logprob: -15.375539779663086
    8. '('' → logprob: -15.750539779663086
    9. '(str' → logprob: -16.000539779663086
    10. '(results' → logprob: -16.250539779663086

Token 532: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -16.125
    3. ')
' → logprob: -16.375
    4. '())' → logprob: -16.5
    5. '()' → logprob: -16.75
    6. '))' → logprob: -17.375
    7. '")' → logprob: -19.75
    8. '```' → logprob: -19.875
    9. '   ' → logprob: -20.0
    10. ')`' → logprob: -20.75

Token 533: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015052208909764886
    2. 'if' → logprob: -6.751505374908447
    3. 'class' → logprob: -8.001504898071289
    4. 'import' → logprob: -16.87650489807129
    5. 'from' → logprob: -17.50150489807129
    6. '```' → logprob: -19.00150489807129
    7. ' def' → logprob: -19.12650489807129
    8. ' if' → logprob: -19.75150489807129
    9. '#' → logprob: -20.37650489807129
    10. '
' → logprob: -22.87650489807129

Token 534: ' Bubble' (ID: 84882)
  Prédit: 'Sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -0.8645466566085815
    2. 'Sorting' → logprob: -1.3645466566085815
    3. 'Sorter' → logprob: -2.614546775817871
    4. 'Solution' → logprob: -2.614546775817871
    5. 'Main' → logprob: -2.989546775817871
    6. 'Bubble' → logprob: -3.489546775817871
    7. 'Swap' → logprob: -3.989546775817871
    8. 'Solver' → logprob: -3.989546775817871
    9. 'Application' → logprob: -4.489546775817871
    10. 'Runner' → logprob: -4.614546775817871

Token 535: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -0.010105586610734463
    2. 'Sorter' → logprob: -4.635105609893799
    3. 'Count' → logprob: -9.38510513305664
    4. 'Counter' → logprob: -10.51010513305664
    5. 'Swap' → logprob: -10.51010513305664
    6. 'Solver' → logprob: -10.51010513305664
    7. 'Runner' → logprob: -10.76010513305664
    8. 'Max' → logprob: -11.01010513305664
    9. 'Run' → logprob: -11.13510513305664
    10. 'Print' → logprob: -11.38510513305664

Token 536: 'Application' (ID: 6817)
  Prédit: 'Runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Runner' → logprob: -0.03522808104753494
    2. 'Executor' → logprob: -4.285228252410889
    3. 'Processor' → logprob: -5.410228252410889
    4. 'Manager' → logprob: -6.285228252410889
    5. 'Solver' → logprob: -6.410228252410889
    6. 'Sorter' → logprob: -6.410228252410889
    7. ':' → logprob: -6.785228252410889
    8. '(S' → logprob: -6.910228252410889
    9. 'Tester' → logprob: -6.910228252410889
    10. 'Analyzer' → logprob: -7.160228252410889

Token 537: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009172935388050973
    2. ':
' → logprob: -7.000917434692383
    3. ' :' → logprob: -13.625917434692383
    4. '():' → logprob: -13.750917434692383
    5. ':def' → logprob: -14.250917434692383
    6. '(S' → logprob: -14.375917434692383
    7. '):' → logprob: -14.375917434692383
    8. ':

' → logprob: -15.000917434692383
    9. '(B' → logprob: -15.250917434692383
    10. '(' → logprob: -15.250917434692383

Token 538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000505730917211622
    2. 'def' → logprob: -7.7505059242248535
    3. ' def' → logprob: -9.500505447387695
    4. '	def' → logprob: -16.000505447387695
    5. '
' → logprob: -17.375505447387695
    6. ':' → logprob: -17.875505447387695
    7. '```' → logprob: -17.875505447387695
    8. '   ' → logprob: -18.000505447387695
    9. '    
' → logprob: -18.125505447387695
    10. ')' → logprob: -18.375505447387695

Token 539: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0006378580583259463
    2. ' def' → logprob: -7.500638008117676
    3. '   ' → logprob: -9.375638008117676
    4. '	def' → logprob: -17.00063705444336
    5. ' ' → logprob: -18.50063705444336
    6. 'class' → logprob: -18.62563705444336
    7. '```' → logprob: -19.37563705444336
    8. 'from' → logprob: -19.50063705444336
    9. ':def' → logprob: -20.12563705444336
    10. '  ' → logprob: -20.12563705444336

Token 540: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10118172317743301
    2. '__' → logprob: -2.351181745529175
    3. 'init' → logprob: -8.101181983947754
    4. ' def' → logprob: -8.101181983947754
    5. '_init' → logprob: -8.226181983947754
    6. 'def' → logprob: -9.476181983947754
    7. ' init' → logprob: -11.476181983947754
    8. '\' → logprob: -12.351181983947754
    9. '`' → logprob: -13.101181983947754
    10. '```' → logprob: -13.351181983947754

Token 541: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.625
    3. ' init' → logprob: -17.625
    4. '```' → logprob: -18.25
    5. '_init' → logprob: -19.375
    6. 'inite' → logprob: -19.375
    7. '   ' → logprob: -19.625
    8. 'int' → logprob: -20.0
    9. '(init' → logprob: -20.25
    10. 'in' → logprob: -20.25

Token 542: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20407532155513763
    2. '(self' → logprob: -1.7040753364562988
    3. '(' → logprob: -6.704075336456299
    4. '__(
' → logprob: -6.704075336456299
    5. ' (' → logprob: -9.32907485961914
    6. '(
' → logprob: -9.70407485961914
    7. '__' → logprob: -10.20407485961914
    8. '_(' → logprob: -11.82907485961914
    9. 'self' → logprob: -11.82907485961914
    10. '   ' → logprob: -13.07907485961914

Token 543: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.2729995988775045e-06
    2. '       ' → logprob: -12.250006675720215
    3. ' self' → logprob: -13.750006675720215
    4. '   ' → logprob: -15.750006675720215
    5. '
' → logprob: -16.1250057220459
    6. ')' → logprob: -16.5000057220459
    7. '):
' → logprob: -16.7500057220459
    8. '(self' → logprob: -17.6250057220459
    9. '           ' → logprob: -18.0000057220459
    10. '  ' → logprob: -19.2500057220459

Token 544: ',
' (ID: 412)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.36291685700416565
    2. '       ' → logprob: -1.7379168272018433
    3. ',' → logprob: -2.237916946411133
    4. '(self' → logprob: -3.987916946411133
    5. ' self' → logprob: -5.862916946411133
    6. '   ' → logprob: -8.987916946411133
    7. ' (' → logprob: -9.237916946411133
    8. '__(' → logprob: -9.612916946411133
    9. ',self' → logprob: -10.487916946411133
    10. '
' → logprob: -10.612916946411133

Token 545: '                ' (ID: 408)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.30975255370140076
    2. '       ' → logprob: -1.5597525835037231
    3. 'input' → logprob: -3.5597524642944336
    4. ' self' → logprob: -4.434752464294434
    5. 'parser' → logprob: -4.934752464294434
    6. '           ' → logprob: -5.309752464294434
    7. 'swap' → logprob: -6.559752464294434
    8. ' input' → logprob: -6.934752464294434
    9. ' parser' → logprob: -7.059752464294434
    10. ' swap' → logprob: -8.184752464294434

Token 546: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.12874534726142883
    2. 'parser' → logprob: -2.1287453174591064
    3. 'sort' → logprob: -6.7537455558776855
    4. 'swap' → logprob: -7.8787455558776855
    5. 'data' → logprob: -8.503745079040527
    6. ' input' → logprob: -10.628745079040527
    7. '   ' → logprob: -10.878745079040527
    8. ' parser' → logprob: -11.253745079040527
    9. 'algorithm' → logprob: -12.628745079040527
    10. '       ' → logprob: -12.753745079040527

Token 547: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -1.4498052223643754e-05
    2. 'parser' → logprob: -11.875014305114746
    3. 'Parser' → logprob: -12.125014305114746
    4. ':' → logprob: -13.500014305114746
    5. '_source' → logprob: -15.500014305114746
    6. '   ' → logprob: -15.750014305114746
    7. '_data' → logprob: -16.500015258789062
    8. '_' → logprob: -16.875015258789062
    9. 'er' → logprob: -17.000015258789062
    10. '_reader' → logprob: -17.000015258789062

Token 548: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9981420336989686e-05
    2. ' :' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.000020027160645
    4. '       ' → logprob: -16.250019073486328
    5. '_:' → logprob: -17.000019073486328
    6. ' ' → logprob: -17.500019073486328
    7. ',' → logprob: -17.500019073486328
    8. '=' → logprob: -18.000019073486328
    9. '           ' → logprob: -18.000019073486328
    10. '：' → logprob: -18.375019073486328

Token 549: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -7.505351095460355e-05
    2. ' Input' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.12507438659668
    4. 'Std' → logprob: -17.37507438659668
    5. ' ' → logprob: -17.62507438659668
    6. '	Input' → logprob: -18.00007438659668
    7. 'input' → logprob: -18.87507438659668
    8. 'Optional' → logprob: -19.12507438659668
    9. '  ' → logprob: -19.37507438659668
    10. 'Standard' → logprob: -19.87507438659668

Token 550: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.7432603272027336e-06
    2. 'Data' → logprob: -13.750001907348633
    3. 'parser' → logprob: -14.875001907348633
    4. '   ' → logprob: -16.000001907348633
    5. '_parser' → logprob: -16.125001907348633
    6. 'Processor' → logprob: -17.500001907348633
    7. 'Input' → logprob: -17.750001907348633
    8. '.Parser' → logprob: -17.750001907348633
    9. ')' → logprob: -18.000001907348633
    10. 'Parse' → logprob: -18.375001907348633

Token 551: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6933833360671997
    2. ',
' → logprob: -0.6933833360671997
    3. '                ' → logprob: -8.94338321685791
    4. ',
' → logprob: -9.56838321685791
    5. '       ' → logprob: -11.06838321685791
    6. '   ' → logprob: -11.44338321685791
    7. ',

' → logprob: -12.44338321685791
    8. '               ' → logprob: -13.56838321685791
    9. ')' → logprob: -14.06838321685791
    10. ' ,
' → logprob: -14.19338321685791

Token 552: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.0018991250544786453
    2. 'output' → logprob: -6.376899242401123
    3. '                 ' → logprob: -9.251898765563965
    4. ' output' → logprob: -9.251898765563965
    5. '                    ' → logprob: -13.626898765563965
    6. '               ' → logprob: -13.751898765563965
    7. '        ' → logprob: -14.251898765563965
    8. '                  ' → logprob: -14.376898765563965
    9. '                 
' → logprob: -14.626898765563965
    10. '                     ' → logprob: -15.501898765563965

Token 553: ' sorting' (ID: 51375)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.00372728006914258
    2. ' output' → logprob: -5.628727436065674
    3. 'sort' → logprob: -9.003726959228516
    4. '   ' → logprob: -13.753726959228516
    5. '                ' → logprob: -14.003726959228516
    6. '    ' → logprob: -15.128726959228516
    7. '        ' → logprob: -15.128726959228516
    8. '               ' → logprob: -15.253726959228516
    9. ' sort' → logprob: -15.378726959228516
    10. '       ' → logprob: -15.628726959228516

Token 554: '_algo' (ID: 194331)
  Prédit: '_algorithm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_algorithm' → logprob: -0.0001805377542041242
    2. '_algo' → logprob: -9.1251802444458
    3. 'algorithm' → logprob: -10.2501802444458
    4. '_alg' → logprob: -10.8751802444458
    5. ':' → logprob: -11.2501802444458
    6. 'Algorithm' → logprob: -13.1251802444458
    7. '_strategy' → logprob: -14.2501802444458
    8. '_method' → logprob: -14.5001802444458
    9. 'alg' → logprob: -15.0001802444458
    10. '   ' → logprob: -15.1251802444458

Token 555: ':' (ID: 25)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03404778242111206
    2. ':' → logprob: -3.909047842025757
    3. 'ith' → logprob: -4.409047603607178
    4. 'irth' → logprob: -7.659047603607178
    5. 'orithm' → logprob: -7.784047603607178
    6. 'rm' → logprob: -8.409048080444336
    7. 'm' → logprob: -10.784048080444336
    8. '=' → logprob: -10.909048080444336
    9. '   ' → logprob: -11.159048080444336
    10. 'rit' → logprob: -11.159048080444336

Token 556: ' Sort' (ID: 25945)
  Prédit: 'Sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -0.0059879315085709095
    2. ' Sort' → logprob: -5.130988121032715
    3. '   ' → logprob: -10.755988121032715
    4. 'Bubble' → logprob: -10.880988121032715
    5. 'Swap' → logprob: -11.630988121032715
    6. ' ' → logprob: -12.255988121032715
    7. '       ' → logprob: -13.380988121032715
    8. '    ' → logprob: -14.130988121032715
    9. 'sort' → logprob: -14.755988121032715
    10. 'Sorting' → logprob: -14.755988121032715

Token 557: 'Algorithm' (ID: 34201)
  Prédit: 'Algorithm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Algorithm' → logprob: -9.088346359931165e-07
    2. '_algorithm' → logprob: -14.750000953674316
    3. '   ' → logprob: -15.750000953674316
    4. 'Alg' → logprob: -15.875000953674316
    5. '           ' → logprob: -16.75
    6. ' Algorithm' → logprob: -16.875
    7. '       ' → logprob: -17.25
    8. 'Algo' → logprob: -17.375
    9. ',' → logprob: -17.875
    10. 'algorithm' → logprob: -18.375

Token 558: ',
' (ID: 412)
  Prédit: ',
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.08332419395446777
    2. ',' → logprob: -2.5833241939544678
    3. '                ' → logprob: -5.583324432373047
    4. '):
' → logprob: -8.083324432373047
    5. '   ' → logprob: -8.833324432373047
    6. '):' → logprob: -9.458324432373047
    7. '               ' → logprob: -10.083324432373047
    8. ')' → logprob: -10.458324432373047
    9. '       ' → logprob: -10.458324432373047
    10. ',
' → logprob: -10.958324432373047

Token 559: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.00013893934374209493
    2. 'output' → logprob: -9.000139236450195
    3. '   ' → logprob: -11.250139236450195
    4. '               ' → logprob: -14.000139236450195
    5. ' output' → logprob: -14.250139236450195
    6. '                 ' → logprob: -14.750139236450195
    7. '       ' → logprob: -16.375139236450195
    8. '    ' → logprob: -16.375139236450195
    9. '                    ' → logprob: -16.750139236450195
    10. '            ' → logprob: -16.750139236450195

Token 560: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.009773443453013897
    2. ' output' → logprob: -4.634773254394531
    3. '                ' → logprob: -12.134773254394531
    4. '   ' → logprob: -12.509773254394531
    5. '                 ' → logprob: -13.509773254394531
    6. '    ' → logprob: -13.634773254394531
    7. '	output' → logprob: -14.134773254394531
    8. '  ' → logprob: -14.259773254394531
    9. '                   ' → logprob: -14.384773254394531
    10. '               ' → logprob: -14.384773254394531

Token 561: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -2.2842308680992573e-05
    2. '_writer' → logprob: -11.500022888183594
    3. '_parser' → logprob: -12.625022888183594
    4. '_output' → logprob: -13.000022888183594
    5. '   ' → logprob: -13.250022888183594
    6. '_print' → logprob: -13.625022888183594
    7. '_' → logprob: -14.375022888183594
    8. '_Pr' → logprob: -14.750022888183594
    9. '_renderer' → logprob: -15.125022888183594
    10. '_formatter' → logprob: -15.125022888183594

Token 562: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -7.941850526549388e-06
    2. 'int' → logprob: -11.875007629394531
    3. ' inter' → logprob: -15.500007629394531
    4. 'ointer' → logprob: -16.00000762939453
    5. '```' → logprob: -16.00000762939453
    6. '   ' → logprob: -16.12500762939453
    7. '_inter' → logprob: -16.37500762939453
    8. 'INTER' → logprob: -16.50000762939453
    9. 'iter' → logprob: -16.62500762939453
    10. 'onter' → logprob: -16.87500762939453

Token 563: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.896309739408025e-07
    2. ' :' → logprob: -14.750000953674316
    3. ')' → logprob: -15.875000953674316
    4. '):' → logprob: -16.125
    5. '   ' → logprob: -17.125
    6. '=' → logprob: -17.875
    7. '):
' → logprob: -18.125
    8. '       ' → logprob: -18.875
    9. ' ' → logprob: -20.25
    10. '_:' → logprob: -20.25

Token 564: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.0005530327325686812
    2. ' Output' → logprob: -7.500553131103516
    3. ' ' → logprob: -17.625553131103516
    4. 'Optional' → logprob: -17.625553131103516
    5. '	Output' → logprob: -17.875553131103516
    6. '   ' → logprob: -18.125553131103516
    7. 'output' → logprob: -18.875553131103516
    8. '  ' → logprob: -19.125553131103516
    9. '
' → logprob: -19.625553131103516
    10. 'Input' → logprob: -19.750553131103516

Token 565: 'Printer' (ID: 54325)
  Prédit: 'Printer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -1.3856492842023727e-06
    2. 'Output' → logprob: -14.875000953674316
    3. '_Pr' → logprob: -14.875000953674316
    4. ' Printer' → logprob: -15.500000953674316
    5. 'Prin' → logprob: -15.750000953674316
    6. 'printer' → logprob: -16.750001907348633
    7. 'Painter' → logprob: -17.000001907348633
    8. 'Writer' → logprob: -17.000001907348633
    9. '   ' → logprob: -17.125001907348633
    10. 'Pr' → logprob: -17.250001907348633

Token 566: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004012511111795902
    2. '):' → logprob: -5.754012584686279
    3. '   ' → logprob: -7.129012584686279
    4. '       ' → logprob: -10.879012107849121
    5. '                ' → logprob: -11.629012107849121
    6. ')' → logprob: -12.504012107849121
    7. '):
' → logprob: -14.504012107849121
    8. '               ' → logprob: -15.254012107849121
    9. ' ):
' → logprob: -15.379012107849121
    10. '):

' → logprob: -15.754012107849121

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001333455671556294
    2. ':' → logprob: -6.876333236694336
    3. '   ' → logprob: -8.876333236694336
    4. ':
' → logprob: -9.751333236694336
    5. '        
' → logprob: -10.501333236694336
    6. ',' → logprob: -11.251333236694336
    7. '
' → logprob: -11.501333236694336
    8. 'self' → logprob: -11.751333236694336
    9. '```' → logprob: -11.751333236694336
    10. ')' → logprob: -11.876333236694336

Token 568: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4742054045200348
    2. 'self' (adapté à ' self') → logprob: -0.9742053747177124
    3. ' self' → logprob: -8.974205017089844
    4. '   ' → logprob: -13.474205017089844
    5. '	self' → logprob: -15.849205017089844
    6. '(self' → logprob: -16.349205017089844
    7. '           ' → logprob: -17.349205017089844
    8. '      ' → logprob: -17.849205017089844
    9. 'def' → logprob: -18.599205017089844
    10. '               ' → logprob: -18.849205017089844

Token 569: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.0008327359100803733
    2. '.' → logprob: -7.125832557678223
    3. ' .' → logprob: -11.500832557678223
    4. 'input' → logprob: -12.000832557678223
    5. '       ' → logprob: -12.000832557678223
    6. '   ' → logprob: -13.000832557678223
    7. '=input' → logprob: -13.750832557678223
    8. '._' → logprob: -14.000832557678223
    9. ' input' → logprob: -14.750832557678223
    10. '.INPUT' → logprob: -14.875832557678223

Token 570: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -15.125000953674316
    3. '       ' → logprob: -15.125000953674316
    4. '_parse' → logprob: -15.875000953674316
    5. 'Parser' → logprob: -16.000001907348633
    6. 'parser' → logprob: -16.125001907348633
    7. '=_' → logprob: -16.875001907348633
    8. '_par' → logprob: -17.000001907348633
    9. '_' → logprob: -17.250001907348633
    10. '_data' → logprob: -17.625001907348633

Token 571: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133268654346466
    2. ' =' → logprob: -1.3133268356323242
    3. '       ' → logprob: -10.188326835632324
    4. '   ' → logprob: -10.688326835632324
    5. '=input' → logprob: -12.813326835632324
    6. '    ' → logprob: -14.438326835632324
    7. '     ' → logprob: -14.938326835632324
    8. '        ' → logprob: -15.063326835632324
    9. '=self' → logprob: -15.313326835632324
    10. '=parse' → logprob: -16.06332778930664

Token 572: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0380416102707386
    2. ' input' → logprob: -3.288041591644287
    3. '       ' → logprob: -16.913042068481445
    4. '=input' → logprob: -17.163042068481445
    5. '_input' → logprob: -17.413042068481445
    6. '	input' → logprob: -17.788042068481445
    7. '<input' → logprob: -17.913042068481445
    8. '        ' → logprob: -18.163042068481445
    9. '(input' → logprob: -18.163042068481445
    10. '.input' → logprob: -18.788042068481445

Token 573: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -6.704273118884885e-07
    2. 'parser' → logprob: -14.625000953674316
    3. 'Parser' → logprob: -15.750000953674316
    4. '_' → logprob: -18.375
    5. '_parse' → logprob: -18.75
    6. '_pr' → logprob: -18.75
    7. '.parser' → logprob: -19.375
    8. '_par' → logprob: -19.375
    9. '._' → logprob: -19.5
    10. '   ' → logprob: -19.75

Token 574: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4752197861671448
    2. '       ' → logprob: -0.9752197861671448
    3. ' self' → logprob: -6.8502197265625
    4. '   ' → logprob: -9.4752197265625
    5. ',' → logprob: -13.4752197265625
    6. '
' → logprob: -13.6002197265625
    7. ',self' → logprob: -14.1002197265625
    8. '           ' → logprob: -14.2252197265625
    9. '	self' → logprob: -14.3502197265625
    10. '(self' → logprob: -14.8502197265625

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2020379602909088
    2. 'self' → logprob: -1.7020379304885864
    3. ' self' → logprob: -7.452037811279297
    4. '   ' → logprob: -10.077037811279297
    5. '	self' → logprob: -14.202037811279297
    6. ',self' → logprob: -15.077037811279297
    7. '           ' → logprob: -15.327037811279297
    8. '      ' → logprob: -15.452037811279297
    9. '     ' → logprob: -15.577037811279297
    10. '(self' → logprob: -15.827037811279297

Token 576: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.1689596148207784e-05
    2. ' self' → logprob: -10.000051498413086
    3. '       ' → logprob: -12.000051498413086
    4. '   ' → logprob: -16.750051498413086
    5. 'sorting' → logprob: -18.875051498413086
    6. '	self' → logprob: -19.500051498413086
    7. '           ' → logprob: -19.625051498413086
    8. ' ' → logprob: -20.750051498413086
    9. '         ' → logprob: -20.875051498413086
    10. '     ' → logprob: -21.000051498413086

Token 577: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.004290303681045771
    2. 'sorting' → logprob: -5.5042901039123535
    3. '.' → logprob: -9.254290580749512
    4. '.sorted' → logprob: -9.629290580749512
    5. '.output' → logprob: -10.379290580749512
    6. '.s' → logprob: -11.754290580749512
    7. ' sorting' → logprob: -12.504290580749512
    8. 'Sorting' → logprob: -12.754290580749512
    9. ' .' → logprob: -13.004290580749512
    10. 'sort' → logprob: -14.129290580749512

Token 578: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.00019853383128065616
    2. '_algorithm' → logprob: -9.000198364257812
    3. '   ' → logprob: -10.750198364257812
    4. '               ' → logprob: -11.500198364257812
    5. '_counter' → logprob: -11.625198364257812
    6. '           ' → logprob: -11.750198364257812
    7. '_algo' → logprob: -12.125198364257812
    8. '       ' → logprob: -13.000198364257812
    9. 'ingt' → logprob: -13.375198364257812
    10. '                   ' → logprob: -13.375198364257812

Token 579: '_algo' (ID: 194331)
  Prédit: '_algo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_algo' → logprob: -9.29340603761375e-05
    2. 'algo' → logprob: -9.625092506408691
    3. '_algorithm' → logprob: -10.875092506408691
    4. '_alg' → logprob: -12.000092506408691
    5. '   ' → logprob: -15.125092506408691
    6. '_' → logprob: -15.250092506408691
    7. 'Algo' → logprob: -15.500092506408691
    8. '_al' → logprob: -15.875092506408691
    9. 'algorithm' → logprob: -16.000093460083008
    10. ' algo' → logprob: -16.250093460083008

Token 580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17112946510314941
    2. '       ' → logprob: -2.5461294651031494
    3. ' =' → logprob: -2.9211294651031494
    4. ',' → logprob: -4.67112922668457
    5. '.sort' → logprob: -5.17112922668457
    6. '   ' → logprob: -5.92112922668457
    7. '=self' → logprob: -6.79612922668457
    8. '<|end|>' → logprob: -7.17112922668457
    9. '.swap' → logprob: -7.29612922668457
    10. '.' → logprob: -7.67112922668457

Token 581: ' sorting' (ID: 51375)
  Prédit: 'sorting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorting' → logprob: -0.003178544342517853
    2. ' sorting' → logprob: -5.753178596496582
    3. 'sort' → logprob: -14.003178596496582
    4. 'sorted' → logprob: -17.628177642822266
    5. 'Sorting' → logprob: -18.378177642822266
    6. '       ' → logprob: -18.503177642822266
    7. 'swap' → logprob: -19.878177642822266
    8. '   ' → logprob: -20.253177642822266
    9. 'self' → logprob: -20.878177642822266
    10. '        ' → logprob: -21.253177642822266

Token 582: '_algo' (ID: 194331)
  Prédit: '_algo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_algo' → logprob: -7.5649528298527e-05
    2. 'algo' → logprob: -9.500075340270996
    3. '_alg' → logprob: -15.125075340270996
    4. 'Algo' → logprob: -15.250075340270996
    5. '_algorithm' → logprob: -16.125076293945312
    6. '_' → logprob: -18.375076293945312
    7. ' algo' → logprob: -18.500076293945312
    8. 'al' → logprob: -18.625076293945312
    9. '   ' → logprob: -18.750076293945312
    10. 'algorithm' → logprob: -19.125076293945312

Token 583: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029932256788015366
    2. 'self' → logprob: -3.5299322605133057
    3. ' self' → logprob: -8.779932022094727
    4. '   ' → logprob: -10.654932022094727
    5. '
' → logprob: -12.529932022094727
    6. '	self' → logprob: -14.529932022094727
    7. 'def' → logprob: -16.154932022094727
    8. '      ' → logprob: -16.404932022094727
    9. ' ' → logprob: -16.779932022094727
    10. '(self' → logprob: -17.029932022094727

Token 584: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5774442553520203
    2. '       ' → logprob: -0.8274442553520203
    3. ' self' → logprob: -6.702444076538086
    4. '   ' → logprob: -8.202444076538086
    5. '	self' → logprob: -14.202444076538086
    6. ' ' → logprob: -14.327444076538086
    7. '     ' → logprob: -15.702444076538086
    8. '      ' → logprob: -15.827444076538086
    9. '
' → logprob: -16.202444076538086
    10. '           ' → logprob: -16.702444076538086

Token 585: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00022129806166049093
    2. ' self' → logprob: -9.000221252441406
    3. '       ' → logprob: -9.250221252441406
    4. '   ' → logprob: -13.500221252441406
    5. 'def' → logprob: -15.250221252441406
    6. '	self' → logprob: -17.000221252441406
    7. '
' → logprob: -17.250221252441406
    8. '(self' → logprob: -17.250221252441406
    9. '           ' → logprob: -18.250221252441406
    10. '  ' → logprob: -18.375221252441406

Token 586: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.0014936764491721988
    2. 'output' → logprob: -6.751493453979492
    3. '.' → logprob: -8.126493453979492
    4. '.input' → logprob: -10.751493453979492
    5. ' .' → logprob: -12.251493453979492
    6. ' output' → logprob: -13.751493453979492
    7. '_output' → logprob: -15.876493453979492
    8. '$output' → logprob: -16.251493453979492
    9. 'Output' → logprob: -16.376493453979492
    10. '.out' → logprob: -16.626493453979492

Token 587: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -1.9361264946837764e-07
    2. '_parser' → logprob: -16.0
    3. 'printer' → logprob: -17.375
    4. '_print' → logprob: -17.5
    5. '_writer' → logprob: -18.0
    6. '   ' → logprob: -18.375
    7. '_Pr' → logprob: -19.5
    8. 'Printer' → logprob: -19.5
    9. '	pr' → logprob: -19.75
    10. '_formatter' → logprob: -20.375

Token 588: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.0003926615754608065
    2. 'int' → logprob: -7.875392436981201
    3. '   ' → logprob: -13.00039291381836
    4. '_inter' → logprob: -13.25039291381836
    5. '```' → logprob: -13.50039291381836
    6. 'interface' → logprob: -13.75039291381836
    7. '               ' → logprob: -14.50039291381836
    8. 'in' → logprob: -14.75039291381836
    9. 'onter' → logprob: -14.87539291381836
    10. 'ointer' → logprob: -15.00039291381836

Token 589: ' =' (ID: 314)
  Prédit: '.print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -0.017821170389652252
    2. '=' → logprob: -4.517821311950684
    3. '.' → logprob: -5.517821311950684
    4. ' =' → logprob: -6.392821311950684
    5. '   ' → logprob: -7.517821311950684
    6. 'print' → logprob: -7.767821311950684
    7. '.println' → logprob: -10.892821311950684
    8. ' ' → logprob: -11.267821311950684
    9. ' .' → logprob: -11.392821311950684
    10. '       ' → logprob: -11.767821311950684

Token 590: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.03804929554462433
    2. ' output' → logprob: -3.2880492210388184
    3. 'input' → logprob: -11.788049697875977
    4. ' input' → logprob: -15.788049697875977
    5. '(output' → logprob: -17.163049697875977
    6. 'out' → logprob: -17.913049697875977
    7. '	output' → logprob: -18.038049697875977
    8. '$output' → logprob: -18.538049697875977
    9. '       ' → logprob: -19.038049697875977
    10. '_output' → logprob: -19.038049697875977

Token 591: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -2.2200749754119897e-06
    2. 'printer' → logprob: -13.250001907348633
    3. '_parser' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.625001907348633
    5. 'Printer' → logprob: -16.625001907348633
    6. '	pr' → logprob: -18.000001907348633
    7. 'pr' → logprob: -18.125001907348633
    8. '_writer' → logprob: -18.250001907348633
    9. '_output' → logprob: -18.750001907348633
    10. '_print' → logprob: -19.000001907348633

Token 592: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.8312570318812504e-05
    2. '_inter' → logprob: -11.500018119812012
    3. 'n' → logprob: -12.500018119812012
    4. 'int' → logprob: -13.875018119812012
    5. 'iter' → logprob: -14.500018119812012
    6. 'ter' → logprob: -14.625018119812012
    7. '   ' → logprob: -14.875018119812012
    8. 'interface' → logprob: -15.125018119812012
    9. '```' → logprob: -15.250018119812012
    10. '.inter' → logprob: -15.500018119812012

Token 593: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029901597648859024
    2. '
' → logprob: -3.5299015045166016
    3. '    
' → logprob: -9.029901504516602
    4. 'def' → logprob: -10.654901504516602
    5. '

' → logprob: -12.654901504516602
    6. '        
' → logprob: -13.529901504516602
    7. '  
' → logprob: -13.654901504516602
    8. '```' → logprob: -13.904901504516602
    9. '
' → logprob: -14.779901504516602
    10. ' 
' → logprob: -15.154901504516602

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029775718227028847
    2. 'def' → logprob: -3.529775619506836
    3. ' def' → logprob: -11.029775619506836
    4. '
' → logprob: -11.904775619506836
    5. '    
' → logprob: -13.779775619506836
    6. '```' → logprob: -13.904775619506836
    7. '	def' → logprob: -15.279775619506836
    8. '        
' → logprob: -17.029775619506836
    9. '  ' → logprob: -17.904775619506836
    10. '  
' → logprob: -18.404775619506836

Token 595: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.896309739408025e-07
    2. ' def' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.0
    4. '	def' → logprob: -21.25
    5. '
' → logprob: -23.875
    6. '```' → logprob: -24.25
    7. '    
' → logprob: -25.0
    8. 'de' → logprob: -25.875
    9. ':def' → logprob: -26.5
    10. 'Def' → logprob: -26.5

Token 596: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.023249788209795952
    2. ' run' → logprob: -3.773249864578247
    3. 'def' → logprob: -13.023249626159668
    4. '   ' → logprob: -13.898249626159668
    5. '.run' → logprob: -14.648249626159668
    6. 'execute' → logprob: -15.023249626159668
    7. ' def' → logprob: -16.023250579833984
    8. ' ' → logprob: -16.398250579833984
    9. '_run' → logprob: -16.523250579833984
    10. '	run' → logprob: -17.023250579833984

Token 597: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.931863051955588e-05
    2. '(' → logprob: -9.750059127807617
    3. 'self' → logprob: -14.625059127807617
    4. ' (' → logprob: -15.125059127807617
    5. '   ' → logprob: -15.750059127807617
    6. '       ' → logprob: -16.875059127807617
    7. '(
' → logprob: -17.500059127807617
    8. ' self' → logprob: -19.750059127807617
    9. '()' → logprob: -20.000059127807617
    10. '():' → logprob: -20.125059127807617

Token 598: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2694278955459595
    2. '):' → logprob: -1.5194278955459595
    3. 'self' → logprob: -4.39442777633667
    4. '       ' → logprob: -6.26942777633667
    5. '(self' → logprob: -6.39442777633667
    6. '   ' → logprob: -7.39442777633667
    7. ')' → logprob: -7.89442777633667
    8. ',' → logprob: -8.394428253173828
    9. '):
' → logprob: -8.519428253173828
    10. ' self' → logprob: -11.894428253173828

Token 599: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00027230256819166243
    2. '():' → logprob: -9.000272750854492
    3. '():
' → logprob: -9.125272750854492
    4. '       ' → logprob: -11.250272750854492
    5. ':' → logprob: -11.750272750854492
    6. '(' → logprob: -11.750272750854492
    7. 'self' → logprob: -12.250272750854492
    8. '()' → logprob: -13.000272750854492
    9. '   ' → logprob: -13.250272750854492
    10. ':
' → logprob: -13.750272750854492

Token 600: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014164566993713379
    2. ' None' → logprob: -4.264164447784424
    3. '   ' → logprob: -13.764164924621582
    4. 'none' → logprob: -17.764163970947266
    5. 'void' → logprob: -19.514163970947266
    6. 'int' → logprob: -21.014163970947266
    7. '(None' → logprob: -21.139163970947266
    8. ')' → logprob: -21.639163970947266
    9. 'No' → logprob: -22.389163970947266
    10. '```' → logprob: -22.514163970947266

Token 601: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13138985633850098
    2. ':
' → logprob: -2.256389856338501
    3. '       ' → logprob: -4.006389617919922
    4. '):
' → logprob: -9.631389617919922
    5. '   ' → logprob: -9.881389617919922
    6. '():
' → logprob: -10.256389617919922
    7. '():' → logprob: -10.756389617919922
    8. '):' → logprob: -11.631389617919922
    9. ':def' → logprob: -12.756389617919922
    10. ':

' → logprob: -13.131389617919922

Token 602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000986008089967072
    2. 'for' → logprob: -7.125986099243164
    3. ' for' → logprob: -8.625986099243164
    4. '   ' → logprob: -13.375986099243164
    5. '```' → logprob: -14.750986099243164
    6. 'data' → logprob: -16.125986099243164
    7. '
' → logprob: -16.125986099243164
    8. '      ' → logprob: -16.875986099243164
    9. '           ' → logprob: -17.250986099243164
    10. '        
' → logprob: -17.750986099243164

Token 603: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0023586407769471407
    2. '       ' → logprob: -6.252358436584473
    3. ' for' → logprob: -7.752358436584473
    4. '   ' → logprob: -15.627358436584473
    5. '```' → logprob: -18.25235939025879
    6. '	for' → logprob: -18.50235939025879
    7. ' ' → logprob: -20.12735939025879
    8. '           ' → logprob: -20.75235939025879
    9. '      ' → logprob: -21.62735939025879
    10. '
' → logprob: -22.00235939025879

Token 604: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.38153234124183655
    2. 'input' → logprob: -1.8815323114395142
    3. 'dataset' → logprob: -1.8815323114395142
    4. ' data' → logprob: -4.756532192230225
    5. ' dataset' → logprob: -6.256532192230225
    6. ' input' → logprob: -6.256532192230225
    7. 'datas' → logprob: -10.881532669067383
    8. 'datasets' → logprob: -12.256532669067383
    9. '   ' → logprob: -12.631532669067383
    10. 'test' → logprob: -12.631532669067383

Token 605: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.9130187034606934
    2. ' in' → logprob: -1.1630187034606934
    3. 'set' → logprob: -1.2880187034606934
    4. 'in' → logprob: -5.538018703460693
    5. '_data' → logprob: -6.538018703460693
    6. 'Set' → logprob: -6.538018703460693
    7. 'data' → logprob: -6.788018703460693
    8. '   ' → logprob: -6.913018703460693
    9. '_dataset' → logprob: -7.163018703460693
    10. 'dataset' → logprob: -7.788018703460693

Token 606: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014163628220558167
    2. 'in' → logprob: -4.264163494110107
    3. '	in' → logprob: -16.889163970947266
    4. ' ' → logprob: -17.014163970947266
    5. 'data' → logprob: -17.389163970947266
    6. '
' → logprob: -17.639163970947266
    7. '   ' → logprob: -18.014163970947266
    8. ' ' → logprob: -18.264163970947266
    9. 'import' → logprob: -18.389163970947266
    10. ',' → logprob: -19.139163970947266

Token 607: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014165272004902363
    2. ' self' → logprob: -4.26416540145874
    3. '       ' → logprob: -13.389164924621582
    4. '(self' → logprob: -16.1391658782959
    5. '           ' → logprob: -16.2641658782959
    6. '	self' → logprob: -18.2641658782959
    7. '   ' → logprob: -18.8891658782959
    8. 'this' → logprob: -19.3891658782959
    9. '=self' → logprob: -20.2641658782959
    10. '               ' → logprob: -20.6391658782959

Token 608: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.000204851632588543
    2. 'input' → logprob: -8.500205039978027
    3. '.' → logprob: -13.625205039978027
    4. ' input' → logprob: -15.875205039978027
    5. '=input' → logprob: -17.12520408630371
    6. '.data' → logprob: -17.37520408630371
    7. ' .' → logprob: -17.87520408630371
    8. '	input' → logprob: -18.50020408630371
    9. '_input' → logprob: -18.87520408630371
    10. '<input' → logprob: -19.00020408630371

Token 609: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -4.320199877838604e-07
    2. 'parser' → logprob: -15.375
    3. 'Parser' → logprob: -16.25
    4. '.parser' → logprob: -18.75
    5. '_parse' → logprob: -19.75
    6. '_par' → logprob: -20.125
    7. '-parser' → logprob: -21.125
    8. '   ' → logprob: -21.25
    9. '_pr' → logprob: -21.25
    10. '_data' → logprob: -21.5

Token 610: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -2.935296834039036e-06
    2. 'parse' → logprob: -12.87500286102295
    3. '.' → logprob: -15.37500286102295
    4. '   ' → logprob: -16.375003814697266
    5. ' .' → logprob: -17.500003814697266
    6. '=parse' → logprob: -19.125003814697266
    7. '().' → logprob: -19.375003814697266
    8. ' parse' → logprob: -19.750003814697266
    9. '	parse' → logprob: -19.875003814697266
    10. '       ' → logprob: -20.500003814697266

Token 611: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12694500386714935
    2. '():
' → logprob: -2.1269450187683105
    3. '()' → logprob: -11.501944541931152
    4. '():
' → logprob: -12.376944541931152
    5. ':' → logprob: -13.751944541931152
    6. ' ():' → logprob: -14.126944541931152
    7. '(data' → logprob: -14.751944541931152
    8. '():

' → logprob: -15.001944541931152
    9. 'data' → logprob: -17.00194549560547
    10. '()):
' → logprob: -17.00194549560547

Token 612: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015836587408557534
    2. 'sorted' → logprob: -9.375158309936523
    3. 'result' → logprob: -10.125158309936523
    4. 'self' → logprob: -11.000158309936523
    5. 'count' → logprob: -12.375158309936523
    6. 'data' → logprob: -12.750158309936523
    7. '```' → logprob: -13.000158309936523
    8. 'values' → logprob: -13.375158309936523
    9. ' sorted' → logprob: -13.375158309936523
    10. ' self' → logprob: -13.875158309936523

Token 613: ' #' (ID: 1069)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.23351332545280457
    2. 'count' → logprob: -1.858513355255127
    3. 'sw' → logprob: -3.483513355255127
    4. '           ' → logprob: -4.858513355255127
    5. '               ' → logprob: -4.983513355255127
    6. 'num' → logprob: -5.983513355255127
    7. 'result' → logprob: -6.108513355255127
    8. ' swaps' → logprob: -7.733513355255127
    9. 'counts' → logprob: -7.733513355255127
    10. ' swap' → logprob: -7.983513355255127

Token 614: ' Defensive' (ID: 194572)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.8052037358283997
    2. 'data' → logprob: -1.1802036762237549
    3. 'count' → logprob: -2.055203676223755
    4. 'sw' → logprob: -2.805203676223755
    5. 'values' → logprob: -4.430203914642334
    6. 'result' → logprob: -4.555203914642334
    7. 'sorted' → logprob: -4.805203914642334
    8. 'arr' → logprob: -5.055203914642334
    9. '           ' → logprob: -5.180203914642334
    10. 'copy' → logprob: -5.305203914642334

Token 615: ' copy' (ID: 5150)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.2903215289115906
    2. 'values' → logprob: -1.7903215885162354
    3. ' data' → logprob: -2.9153215885162354
    4. ' values' → logprob: -4.040321350097656
    5. '               ' → logprob: -4.915321350097656
    6. '           ' → logprob: -6.040321350097656
    7. 'copy' → logprob: -6.790321350097656
    8. '#' → logprob: -7.040321350097656
    9. 'if' → logprob: -7.165321350097656
    10. 'import' → logprob: -8.415321350097656

Token 616: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07696036994457245
    2. ' data' → logprob: -2.826960325241089
    3. 'data' → logprob: -4.576960563659668
    4. ' =' → logprob: -5.701960563659668
    5. '            
' → logprob: -7.951960563659668
    6. ' values' → logprob: -8.451960563659668
    7. ',' → logprob: -9.076960563659668
    8. '=' → logprob: -9.451960563659668
    9. 'values' → logprob: -9.451960563659668
    10. '[:]' → logprob: -9.576960563659668

Token 617: ' avoid' (ID: 8397)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.044736895710229874
    2. ' data' → logprob: -3.294736862182617
    3. 'values' → logprob: -5.169736862182617
    4. 'avoid' → logprob: -8.169736862182617
    5. ' values' → logprob: -8.669736862182617
    6. 'sorted' → logprob: -9.044736862182617
    7. ' preserve' → logprob: -9.419736862182617
    8. '           ' → logprob: -9.669736862182617
    9. 'prevent' → logprob: -9.919736862182617
    10. '               ' → logprob: -9.919736862182617

Token 618: ' side' (ID: 4307)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.003537582466378808
    2. ' modifying' → logprob: -6.128537654876709
    3. '           ' → logprob: -7.878537654876709
    4. ' side' → logprob: -8.12853717803955
    5. 'side' → logprob: -8.62853717803955
    6. 'mut' → logprob: -8.75353717803955
    7. '       ' → logprob: -9.00353717803955
    8. 'mutation' → logprob: -9.75353717803955
    9. 'changing' → logprob: -10.12853717803955
    10. '   ' → logprob: -10.25353717803955

Token 619: ' effects' (ID: 9327)
  Prédit: ' effects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effects' → logprob: -0.513827383518219
    2. 'effects' → logprob: -1.0138273239135742
    3. '-effects' → logprob: -3.763827323913574
    4. ' effect' → logprob: -5.138827323913574
    5. 'effect' → logprob: -5.513827323913574
    6. '   ' → logprob: -5.638827323913574
    7. '           ' → logprob: -6.138827323913574
    8. '-effect' → logprob: -9.013827323913574
    9. '               ' → logprob: -11.138827323913574
    10. '_effect' → logprob: -11.763827323913574

Token 620: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01047772727906704
    2. ' data' → logprob: -5.260477542877197
    3. 'data' → logprob: -5.385477542877197
    4. 'values' → logprob: -7.885477542877197
    5. ' values' → logprob: -9.010478019714355
    6. 'sorted' → logprob: -9.385478019714355
    7. '            
' → logprob: -10.760478019714355
    8. ' sorted' → logprob: -11.385478019714355
    9. ',' → logprob: -12.260478019714355
    10. '```' → logprob: -12.635478019714355

Token 621: ' original' (ID: 4756)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0032159762922674417
    2. ' data' → logprob: -5.753215789794922
    3. 'original' → logprob: -10.503215789794922
    4. '           ' → logprob: -12.128215789794922
    5. 'the' → logprob: -12.503215789794922
    6. 'input' → logprob: -14.378215789794922
    7. ' original' → logprob: -14.753215789794922
    8. ' the' → logprob: -15.378215789794922
    9. 'dataset' → logprob: -15.753215789794922
    10. 'values' → logprob: -16.503215789794922

Token 622: ' input' (ID: 3422)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7391710877418518
    2. ' data' → logprob: -0.9891710877418518
    3. 'values' → logprob: -2.489171028137207
    4. ' values' → logprob: -2.864171028137207
    5. '           ' → logprob: -4.739171028137207
    6. '               ' → logprob: -6.489171028137207
    7. 'array' → logprob: -9.614171028137207
    8. 'list' → logprob: -9.864171028137207
    9. ' array' → logprob: -10.114171028137207
    10. '                   ' → logprob: -10.739171028137207

Token 623: ' list' (ID: 1562)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026496639475226402
    2. 'data' → logprob: -4.151496410369873
    3. ' data' → logprob: -4.776496410369873
    4. 'values' → logprob: -6.651496410369873
    5. ' values' → logprob: -7.776496410369873
    6. '            
' → logprob: -9.401496887207031
    7. '[:]' → logprob: -10.276496887207031
    8. ',' → logprob: -10.401496887207031
    9. '.values' → logprob: -10.776496887207031
    10. ' =' → logprob: -11.151496887207031

Token 624: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017010066658258438
    2. ' data' → logprob: -7.2517008781433105
    3. 'data' → logprob: -7.2517008781433105
    4. 'values' → logprob: -9.126701354980469
    5. 'sorted' → logprob: -9.751701354980469
    6. ' values' → logprob: -10.001701354980469
    7. '            
' → logprob: -10.376701354980469
    8. ' sorted' → logprob: -11.376701354980469
    9. '```' → logprob: -11.876701354980469
    10. ',' → logprob: -12.251701354980469

Token 625: ' reused' (ID: 130757)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.0817101001739502
    2. ' data' → logprob: -1.5817101001739502
    3. 'True' → logprob: -1.7067101001739502
    4. ' True' → logprob: -2.45671010017395
    5. 'not' → logprob: -2.70671010017395
    6. 'False' → logprob: -2.95671010017395
    7. 'modified' → logprob: -3.58171010017395
    8. ' False' → logprob: -4.831709861755371
    9. ' not' → logprob: -4.831709861755371
    10. 'needed' → logprob: -4.956709861755371

Token 626: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001238921657204628
    2. 'data' → logprob: -7.126238822937012
    3. ' data' → logprob: -8.001238822937012
    4. '            
' → logprob: -10.251238822937012
    5. ',' → logprob: -10.626238822937012
    6. '
' → logprob: -11.251238822937012
    7. 'values' → logprob: -12.001238822937012
    8. 'sorted' → logprob: -12.376238822937012
    9. '```' → logprob: -12.876238822937012
    10. '          ' → logprob: -13.251238822937012

Token 627: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004108084831386805
    2. ' data' → logprob: -6.25410795211792
    3. 'data' → logprob: -6.37910795211792
    4. 'sorted' → logprob: -8.504108428955078
    5. 'values' → logprob: -8.879108428955078
    6. ' values' → logprob: -9.504108428955078
    7. ' sorted' → logprob: -10.254108428955078
    8. '               ' → logprob: -11.254108428955078
    9. '            
' → logprob: -12.629108428955078
    10. '```' → logprob: -13.129108428955078

Token 628: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.33538633584976196
    2. 'values' → logprob: -1.3353862762451172
    3. ' values' → logprob: -5.210386276245117
    4. ' data' → logprob: -5.335386276245117
    5. 'sorted' → logprob: -5.335386276245117
    6. '               ' → logprob: -5.960386276245117
    7. 'copy' → logprob: -5.960386276245117
    8. 'arr' → logprob: -7.710386276245117
    9. 'input' → logprob: -7.960386276245117
    10. 'temp' → logprob: -8.085386276245117

Token 629: '_copy' (ID: 37283)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13479839265346527
    2. '=' → logprob: -2.134798288345337
    3. '_copy' → logprob: -5.634798526763916
    4. '_' → logprob: -6.384798526763916
    5. '_list' → logprob: -7.384798526763916
    6. '_values' → logprob: -7.509798526763916
    7. '_set' → logprob: -7.759798526763916
    8. '=data' → logprob: -7.884798526763916
    9. '_to' → logprob: -8.259798049926758
    10. '   ' → logprob: -8.634798049926758

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889111340045929
    2. '=' → logprob: -2.5788910388946533
    3. '=data' → logprob: -14.328890800476074
    4. '           ' → logprob: -14.578890800476074
    5. '   ' → logprob: -16.32889175415039
    6. '               ' → logprob: -16.95389175415039
    7. '            ' → logprob: -17.20389175415039
    8. '[:]' → logprob: -17.45389175415039
    9. '       ' → logprob: -17.95389175415039
    10. '＝' → logprob: -18.20389175415039

Token 631: ' list' (ID: 1562)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.10953395813703537
    2. ' data' → logprob: -2.3595340251922607
    3. 'list' → logprob: -4.734533786773682
    4. ' list' → logprob: -7.609533786773682
    5. '           ' → logprob: -14.23453426361084
    6. '   ' → logprob: -14.35953426361084
    7. '[data' → logprob: -15.98453426361084
    8. 'List' → logprob: -16.234533309936523
    9. ' ' → logprob: -16.609533309936523
    10. '               ' → logprob: -16.859533309936523

Token 632: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.005234952084720135
    2. 'data' → logprob: -5.255234718322754
    3. '(' → logprob: -13.880234718322754
    4. ' data' → logprob: -16.13023567199707
    5. '[data' → logprob: -16.50523567199707
    6. '(
' → logprob: -17.63023567199707
    7. '=data' → logprob: -18.13023567199707
    8. '<data' → logprob: -19.63023567199707
    9. ')data' → logprob: -19.88023567199707
    10. '	data' → logprob: -20.25523567199707

Token 633: '_set' (ID: 5451)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.6317943334579468
    2. '_set' → logprob: -0.8817943334579468
    3. 'data' → logprob: -3.6317944526672363
    4. 'set' → logprob: -3.7567944526672363
    5. '=data' → logprob: -6.006794452667236
    6. ')' → logprob: -7.506794452667236
    7. '[data' → logprob: -7.631794452667236
    8. ')data' → logprob: -8.506793975830078
    9. '           ' → logprob: -8.881793975830078
    10. '   ' → logprob: -9.256793975830078

Token 634: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -3.166338137816638e-05
    2. '.' → logprob: -10.750031471252441
    3. 'values' → logprob: -11.750031471252441
    4. ' .' → logprob: -13.125031471252441
    5. '(values' → logprob: -16.625032424926758
    6. ').' → logprob: -17.125032424926758
    7. '   ' → logprob: -17.500032424926758
    8. '	values' → logprob: -17.750032424926758
    9. ' values' → logprob: -18.250032424926758
    10. '.value' → logprob: -18.750032424926758

Token 635: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4751061797142029
    2. ')
' → logprob: -0.9751061797142029
    3. '           ' → logprob: -6.975106239318848
    4. ')
' → logprob: -9.475106239318848
    5. '       ' → logprob: -11.475106239318848
    6. '               ' → logprob: -13.100106239318848
    7. ')

' → logprob: -13.475106239318848
    8. ')`
' → logprob: -13.975106239318848
    9. ' )
' → logprob: -14.475106239318848
    10. '          ' → logprob: -14.475106239318848

Token 636: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017076305812224746
    2. 'count' → logprob: -9.625170707702637
    3. 'swap' → logprob: -9.625170707702637
    4. 'result' → logprob: -11.000170707702637
    5. '            
' → logprob: -11.875170707702637
    6. 'num' → logprob: -12.625170707702637
    7. 'self' → logprob: -12.750170707702637
    8. 'sorted' → logprob: -13.250170707702637
    9. ' swap' → logprob: -13.750170707702637
    10. '       ' → logprob: -13.750170707702637

Token 637: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' (adapté à ' swap') → logprob: -0.03751838207244873
    2. 'sw' → logprob: -3.7875185012817383
    3. 'count' → logprob: -4.537518501281738
    4. '           ' → logprob: -6.037518501281738
    5. 'num' → logprob: -7.287518501281738
    6. 'result' → logprob: -8.037518501281738
    7. ' swap' → logprob: -11.037518501281738
    8. '            
' → logprob: -11.537518501281738
    9. 'sort' → logprob: -11.537518501281738
    10. '               ' → logprob: -11.787518501281738

Token 638: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.253069669008255
    2. 's' → logprob: -1.5030696392059326
    3. 'count' → logprob: -6.878069877624512
    4. '_counts' → logprob: -9.753069877624512
    5. '_counter' → logprob: -10.128069877624512
    6. '_cnt' → logprob: -12.753069877624512
    7. 'Count' → logprob: -13.003069877624512
    8. '           ' → logprob: -13.503069877624512
    9. '_' → logprob: -13.753069877624512
    10. ' count' → logprob: -13.878069877624512

Token 639: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020678490400314
    2. '=' → logprob: -2.3502068519592285
    3. '=self' → logprob: -15.97520637512207
    4. ':' → logprob: -17.97520637512207
    5. 's' → logprob: -18.22520637512207
    6. '   ' → logprob: -18.35020637512207
    7. ' ' → logprob: -18.72520637512207
    8. '    ' → logprob: -18.85020637512207
    9. '           ' → logprob: -19.22520637512207
    10. ')' → logprob: -19.47520637512207

Token 640: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07895687222480774
    2. ' self' → logprob: -2.5789568424224854
    3. '           ' → logprob: -9.703956604003906
    4. '               ' → logprob: -12.078956604003906
    5. '                   ' → logprob: -16.453956604003906
    6. '	self' → logprob: -16.453956604003906
    7. '(self' → logprob: -16.703956604003906
    8. '            ' → logprob: -16.828956604003906
    9. '   ' → logprob: -17.078956604003906
    10. ' ' → logprob: -17.078956604003906

Token 641: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0017575257224962115
    2. 'sorting' → logprob: -6.376757621765137
    3. 'sort' → logprob: -10.376757621765137
    4. '.' → logprob: -11.126757621765137
    5. '.sorted' → logprob: -12.376757621765137
    6. '.swap' → logprob: -13.501757621765137
    7. ' sorting' → logprob: -13.876757621765137
    8. ' .' → logprob: -13.876757621765137
    9. '   ' → logprob: -14.001757621765137
    10. '       ' → logprob: -15.126757621765137

Token 642: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -9.253090865968261e-06
    2. '_counter' → logprob: -12.875009536743164
    3. '_count' → logprob: -13.875009536743164
    4. 'self' → logprob: -14.125009536743164
    5. '       ' → logprob: -14.125009536743164
    6. '           ' → logprob: -14.625009536743164
    7. '               ' → logprob: -15.000009536743164
    8. '   ' → logprob: -15.125009536743164
    9. 'sorting' → logprob: -15.125009536743164
    10. 'data' → logprob: -15.125009536743164

Token 643: '_algo' (ID: 194331)
  Prédit: '_algo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_algo' → logprob: -0.00020652047533076257
    2. 'algo' → logprob: -8.50020694732666
    3. 'self' → logprob: -13.25020694732666
    4. 'Algo' → logprob: -14.75020694732666
    5. '_alg' → logprob: -15.25020694732666
    6. 'al' → logprob: -15.37520694732666
    7. '   ' → logprob: -16.375205993652344
    8. '       ' → logprob: -17.125205993652344
    9. ' algo' → logprob: -17.125205993652344
    10. 's' → logprob: -17.250205993652344

Token 644: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -1.7954958821064793e-05
    2. '.' → logprob: -11.250018119812012
    3. ' .' → logprob: -12.375018119812012
    4. 'sort' → logprob: -14.250018119812012
    5. '   ' → logprob: -18.125017166137695
    6. '	sort' → logprob: -18.875017166137695
    7. ' sort' → logprob: -19.625017166137695
    8. '       ' → logprob: -19.875017166137695
    9. '().' → logprob: -20.750017166137695
    10. '.swap' → logprob: -21.000017166137695

Token 645: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -1.0206720617134124e-05
    2. 'data' → logprob: -11.75001049041748
    3. '(' → logprob: -13.00001049041748
    4. '[data' → logprob: -17.500009536743164
    5. '(
' → logprob: -17.500009536743164
    6. '           ' → logprob: -17.750009536743164
    7. ' data' → logprob: -18.000009536743164
    8. '```' → logprob: -18.625009536743164
    9. '               ' → logprob: -18.750009536743164
    10. ')data' → logprob: -19.250009536743164

Token 646: '_copy' (ID: 37283)
  Prédit: '_copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_copy' → logprob: -0.00036204091156832874
    2. '(data' → logprob: -9.000362396240234
    3. 'data' → logprob: -9.250362396240234
    4. 'Copy' → logprob: -9.500362396240234
    5. 'copy' → logprob: -10.000362396240234
    6. '=data' → logprob: -11.625362396240234
    7. '_data' → logprob: -12.250362396240234
    8. '   ' → logprob: -13.625362396240234
    9. '[data' → logprob: -13.625362396240234
    10. '```' → logprob: -13.625362396240234

Token 647: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10391083359718323
    2. ')' → logprob: -2.3539109230041504
    3. '           ' → logprob: -5.60391092300415
    4. ')
' → logprob: -11.603910446166992
    5. ')

' → logprob: -13.103910446166992
    6. '       ' → logprob: -13.853910446166992
    7. ' )
' → logprob: -14.478910446166992
    8. '               ' → logprob: -14.603910446166992
    9. '          ' → logprob: -15.228910446166992
    10. '   ' → logprob: -15.603910446166992

Token 648: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011730826226994395
    2. 'self' → logprob: -6.75117301940918
    3. ' self' → logprob: -13.37617301940918
    4. '       ' → logprob: -14.25117301940918
    5. '   ' → logprob: -14.50117301940918
    6. '
' → logprob: -15.87617301940918
    7. '               ' → logprob: -16.62617301940918
    8. '```' → logprob: -17.37617301940918
    9. '		' → logprob: -17.75117301940918
    10. '          ' → logprob: -18.00117301940918

Token 649: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00463078822940588
    2. '           ' → logprob: -5.5046305656433105
    3. ' self' → logprob: -7.5046305656433105
    4. '       ' → logprob: -13.754631042480469
    5. '   ' → logprob: -15.004631042480469
    6. '
' → logprob: -16.62963104248047
    7. '               ' → logprob: -16.75463104248047
    8. '	self' → logprob: -16.87963104248047
    9. ' ' → logprob: -17.25463104248047
    10. '  ' → logprob: -18.50463104248047

Token 650: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -3.054500666621607e-06
    2. 'output' → logprob: -12.87500286102295
    3. '.' → logprob: -14.75000286102295
    4. ' .' → logprob: -17.750003814697266
    5. '.input' → logprob: -19.000003814697266
    6. '	output' → logprob: -19.625003814697266
    7. '$output' → logprob: -19.875003814697266
    8. '   ' → logprob: -21.000003814697266
    9. '.outputs' → logprob: -21.000003814697266
    10. ' output' → logprob: -21.250003814697266

Token 651: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -5.512236498361744e-07
    2. '_print' → logprob: -14.500000953674316
    3. '_writer' → logprob: -17.75
    4. 'printer' → logprob: -17.75
    5. '_output' → logprob: -19.0
    6. '_parser' → logprob: -19.125
    7. 'pr' → logprob: -19.125
    8. 'Printer' → logprob: -19.875
    9. '.pr' → logprob: -19.875
    10. 'Pr' → logprob: -20.0

Token 652: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.7432603272027336e-06
    2. 'int' → logprob: -14.000001907348633
    3. 'n' → logprob: -14.625001907348633
    4. 'onter' → logprob: -16.000001907348633
    5. '_inter' → logprob: -16.250001907348633
    6. 'iter' → logprob: -17.250001907348633
    7. 'enter' → logprob: -17.375001907348633
    8. 'ointer' → logprob: -17.625001907348633
    9. 'INTER' → logprob: -17.625001907348633
    10. 'printer' → logprob: -18.750001907348633

Token 653: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.500000953674316
    3. 'print' → logprob: -15.125000953674316
    4. ' .' → logprob: -18.25
    5. '.println' → logprob: -20.75
    6. '_.' → logprob: -21.25
    7. '._' → logprob: -21.375
    8. '_print' → logprob: -21.375
    9. '.Print' → logprob: -21.75
    10. '.write' → logprob: -22.25

Token 654: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.2200749754119897e-06
    2. 'result' → logprob: -13.125001907348633
    3. 's' → logprob: -16.250001907348633
    4. '_results' → logprob: -17.250001907348633
    5. '_count' → logprob: -18.375001907348633
    6. '_RESULT' → logprob: -19.250001907348633
    7. 't' → logprob: -19.375001907348633
    8. '(result' → logprob: -19.500001907348633
    9. '_' → logprob: -19.500001907348633
    10. '_res' → logprob: -19.500001907348633

Token 655: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.750004768371582
    3. 'swap' → logprob: -13.250004768371582
    4. '(
' → logprob: -16.1250057220459
    5. '```' → logprob: -17.0000057220459
    6. '.swap' → logprob: -17.3750057220459
    7. '(sw' → logprob: -17.5000057220459
    8. ' (' → logprob: -17.5000057220459
    9. '               ' → logprob: -17.6250057220459
    10. '	swap' → logprob: -18.0000057220459

Token 656: 'wap' (ID: 32847)
  Prédit: 'wap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wap' → logprob: -1.9361264946837764e-07
    2. 'w' → logprob: -15.625
    3. 'wa' → logprob: -17.375
    4. 'swap' → logprob: -20.125
    5. 'ap' → logprob: -20.875
    6. 'wp' → logprob: -21.0
    7. ' wap' → logprob: -22.5
    8. '.swap' → logprob: -23.125
    9. '   ' → logprob: -23.25
    10. '
' → logprob: -23.25

Token 657: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: 0.0
    2. 'count' → logprob: -17.375
    3. '_counts' → logprob: -20.25
    4. '_c' → logprob: -20.375
    5. '_' → logprob: -20.875
    6. ' count' → logprob: -21.375
    7. '_counter' → logprob: -21.625
    8. '_COUNT' → logprob: -21.75
    9. '_cnt' → logprob: -22.5
    10. ' _' → logprob: -22.5

Token 658: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0048397378996014595
    2. '<|end|>' → logprob: -5.379839897155762
    3. '()' → logprob: -9.254839897155762
    4. '())' → logprob: -9.629839897155762
    5. '```' → logprob: -10.504839897155762
    6. '
' → logprob: -11.629839897155762
    7. ')
' → logprob: -11.754839897155762
    8. '<|end|>' → logprob: -12.379839897155762
    9. '       ' → logprob: -12.629839897155762
    10. ')return' → logprob: -14.004839897155762

Token 659: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006694287294521928
    2. ' if' → logprob: -8.375669479370117
    3. 'def' → logprob: -8.500669479370117
    4. '```' → logprob: -8.500669479370117
    5. 'import' → logprob: -11.000669479370117
    6. '#' → logprob: -11.875669479370117
    7. '<|end|>' → logprob: -12.000669479370117
    8. '
' → logprob: -13.750669479370117
    9. 'from' → logprob: -14.750669479370117
    10. '#if' → logprob: -15.250669479370117

Token 660: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10020828247070312
    2. '__' → logprob: -2.350208282470703
    3. ' ' → logprob: -13.475208282470703
    4. '_' → logprob: -15.600208282470703
    5. '_name' → logprob: -17.100208282470703
    6. 'name' → logprob: -17.100208282470703
    7. '/__' → logprob: -18.100208282470703
    8. '___' → logprob: -18.350208282470703
    9. '```' → logprob: -18.600208282470703
    10. '  ' → logprob: -18.600208282470703

Token 661: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.017048005014657974
    2. ' __' → logprob: -4.267047882080078
    3. 'if' → logprob: -6.517047882080078
    4. ' ==' → logprob: -6.767047882080078
    5. '==' → logprob: -9.017047882080078
    6. 'name' → logprob: -9.517047882080078
    7. ' if' → logprob: -10.267047882080078
    8. '.__' → logprob: -11.142047882080078
    9. '__.' → logprob: -13.267047882080078
    10. '__.__' → logprob: -13.642047882080078

Token 662: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.723352049040841e-06
    2. '==' → logprob: -12.875004768371582
    3. '__.__' → logprob: -13.250004768371582
    4. ' ==' → logprob: -15.625004768371582
    5. '__.' → logprob: -16.250003814697266
    6. '____' → logprob: -17.125003814697266
    7. '___' → logprob: -17.500003814697266
    8. 'name' → logprob: -17.875003814697266
    9. '```' → logprob: -18.000003814697266
    10. '=="' → logprob: -18.000003814697266

Token 663: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09492319077253342
    2. ' ==' → logprob: -2.844923257827759
    3. '==' → logprob: -3.469923257827759
    4. '__.__' → logprob: -7.09492301940918
    5. '=="' → logprob: -7.96992301940918
    6. '.__' → logprob: -9.71992301940918
    7. '=='' → logprob: -10.96992301940918
    8. '__.' → logprob: -11.46992301940918
    9. '.' → logprob: -11.71992301940918
    10. ' ' → logprob: -12.46992301940918

Token 664: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01108967512845993
    2. ''' → logprob: -4.51108980178833
    3. ' "__' → logprob: -10.261089324951172
    4. '__' → logprob: -12.011089324951172
    5. ' '__' → logprob: -14.761089324951172
    6. ''"' → logprob: -16.011089324951172
    7. '   ' → logprob: -16.261089324951172
    8. '("__' → logprob: -16.386089324951172
    9. '"name' → logprob: -17.761089324951172
    10. '('__' → logprob: -17.761089324951172

Token 665: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.843177233240567e-05
    2. '__' → logprob: -11.000018119812012
    3. 'name' → logprob: -13.375018119812012
    4. ' main' → logprob: -16.625019073486328
    5. '_main' → logprob: -18.250019073486328
    6. '-main' → logprob: -20.000019073486328
    7. 'built' → logprob: -20.125019073486328
    8. '(main' → logprob: -21.000019073486328
    9. 'Main' → logprob: -21.000019073486328
    10. '```' → logprob: -21.500019073486328

Token 666: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0067201098427176476
    2. '__' → logprob: -5.006720066070557
    3. '__':
' → logprob: -12.256720542907715
    4. '__:' → logprob: -17.2567195892334
    5. '_' → logprob: -20.8817195892334
    6. '__
' → logprob: -21.2567195892334
    7. '___' → logprob: -21.3817195892334
    8. '__["' → logprob: -21.5067195892334
    9. '":
' → logprob: -21.6317195892334
    10. '__.' → logprob: -21.7567195892334

Token 667: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.723352049040841e-06
    2. '```' → logprob: -13.250004768371582
    3. '    
' → logprob: -14.000004768371582
    4. 'import' → logprob: -14.250004768371582
    5. '   ' → logprob: -14.375004768371582
    6. 'input' → logprob: -15.125004768371582
    7. ' swap' → logprob: -16.375003814697266
    8. '	swap' → logprob: -16.375003814697266
    9. '       ' → logprob: -16.625003814697266
    10. 'swap' → logprob: -17.000003814697266

Token 668: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' (adapté à ' swap') → logprob: -0.07980044931173325
    2. 'import' → logprob: -2.7048003673553467
    3. '   ' → logprob: -5.579800605773926
    4. ' swap' → logprob: -5.829800605773926
    5. 'input' → logprob: -6.454800605773926
    6. 'app' → logprob: -7.704800605773926
    7. 'parser' → logprob: -7.954800605773926
    8. 'counter' → logprob: -8.329800605773926
    9. ' import' → logprob: -8.454800605773926
    10. 'from' → logprob: -8.829800605773926

Token 669: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -3.7697225252486533e-06
    2. 'counter' → logprob: -12.875003814697266
    3. '_count' → logprob: -14.125003814697266
    4. '_swap' → logprob: -15.625003814697266
    5. '_' → logprob: -16.500003814697266
    6. 'Counter' → logprob: -17.125003814697266
    7. '_controller' → logprob: -18.125003814697266
    8. '_c' → logprob: -18.375003814697266
    9. '   ' → logprob: -18.750003814697266
    10. '_COUNTER' → logprob: -19.125003814697266

Token 670: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197642162442207
    2. '=' → logprob: -2.811976432800293
    3. '   ' → logprob: -11.936976432800293
    4. '  ' → logprob: -13.311976432800293
    5. ' ' → logprob: -15.186976432800293
    6. '    ' → logprob: -15.936976432800293
    7. '	' → logprob: -16.436975479125977
    8. ' =
' → logprob: -17.811975479125977
    9. '_' → logprob: -17.936975479125977
    10. ')' → logprob: -18.311975479125977

Token 671: ' Swap' (ID: 76518)
  Prédit: 'Swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Swap' → logprob: -0.3868711292743683
    2. ' Swap' → logprob: -1.136871099472046
    3. '   ' → logprob: -17.511871337890625
    4. 'Sw' → logprob: -18.636871337890625
    5. ' swap' → logprob: -19.386871337890625
    6. '_swap' → logprob: -19.636871337890625
    7. 'swap' → logprob: -20.511871337890625
    8. ' Sw' → logprob: -20.636871337890625
    9. ' ' → logprob: -20.761871337890625
    10. '    ' → logprob: -20.886871337890625

Token 672: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: 0.0
    2. 'Count' → logprob: -19.75
    3. 'counter' → logprob: -20.375
    4. 'Swap' → logprob: -20.5
    5. ' Counter' → logprob: -20.75
    6. '_counter' → logprob: -22.25
    7. 'ounter' → logprob: -23.0
    8. '.Counter' → logprob: -23.75
    9. 'Coun' → logprob: -23.875
    10. 'Counters' → logprob: -24.625

Token 673: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004706018604338169
    2. '
' → logprob: -5.504705905914307
    3. '    
' → logprob: -8.379706382751465
    4. 'bubble' → logprob: -8.379706382751465
    5. 'b' → logprob: -9.879706382751465
    6. ',' → logprob: -10.129706382751465
    7. 'swap' → logprob: -10.504706382751465
    8. ')' → logprob: -11.004706382751465
    9. ',
' → logprob: -12.629706382751465
    10. '
' → logprob: -12.879706382751465

Token 674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08770019561052322
    2. ' bubble' → logprob: -3.212700128555298
    3. 'bubble' → logprob: -3.212700128555298
    4. 'sorting' → logprob: -6.587700366973877
    5. 'b' → logprob: -7.212700366973877
    6. ' sorting' → logprob: -7.337700366973877
    7. ' sorter' → logprob: -7.837700366973877
    8. ' bubbles' → logprob: -9.587699890136719
    9. ' b' → logprob: -9.837699890136719
    10. 'sort' → logprob: -9.837699890136719

Token 675: ' bubble' (ID: 40447)
  Prédit: 'bubble'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bubble' (adapté à ' bubble') → logprob: -0.04591573774814606
    2. 'input' → logprob: -3.2959158420562744
    3. 'sorting' → logprob: -5.670915603637695
    4. 'sort' → logprob: -6.295915603637695
    5. ' bubble' → logprob: -6.795915603637695
    6. 'parser' → logprob: -6.920915603637695
    7. 'std' → logprob: -8.670915603637695
    8. 'swap' → logprob: -9.545915603637695
    9. 'b' → logprob: -9.545915603637695
    10. '   ' → logprob: -10.295915603637695

Token 676: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.4746978282928467
    2. 'sort' → logprob: -0.9746978282928467
    3. 'Sort' → logprob: -7.474698066711426
    4. 'Sorter' → logprob: -10.099698066711426
    5. ' =' → logprob: -11.724698066711426
    6. '=' → logprob: -12.724698066711426
    7. ' sorter' → logprob: -14.849698066711426
    8. 'SORT' → logprob: -15.724698066711426
    9. ' sort' → logprob: -15.974698066711426
    10. '_sorted' → logprob: -16.22469711303711

Token 677: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04869035631418228
    2. '=' → logprob: -3.0486903190612793
    3. '   ' → logprob: -10.048690795898438
    4. '_algo' → logprob: -10.548690795898438
    5. '_app' → logprob: -11.048690795898438
    6. '_algorithm' → logprob: -12.048690795898438
    7. 'er' → logprob: -13.173690795898438
    8. ' ' → logprob: -13.173690795898438
    9. 'algo' → logprob: -13.298690795898438
    10. '_sort' → logprob: -13.423690795898438

Token 678: ' Bubble' (ID: 84882)
  Prédit: 'Bubble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bubble' → logprob: -0.0019286326132714748
    2. ' Bubble' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.376928329467773
    4. 'B' → logprob: -19.751928329467773
    5. ' ' → logprob: -19.751928329467773
    6. 'bubble' → logprob: -19.876928329467773
    7. ' bubble' → logprob: -21.001928329467773
    8. 'Ball' → logprob: -21.626928329467773
    9. '	B' → logprob: -22.001928329467773
    10. 'Batch' → logprob: -22.126928329467773

Token 679: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -4.60414821645827e-06
    2. 'sort' → logprob: -12.375004768371582
    3. 'Swap' → logprob: -15.000004768371582
    4. 'ort' → logprob: -17.625003814697266
    5. 'Bubble' → logprob: -18.250003814697266
    6. ' Sort' → logprob: -18.750003814697266
    7. 'Sorter' → logprob: -19.000003814697266
    8. '_sort' → logprob: -19.125003814697266
    9. 'Counter' → logprob: -19.500003814697266
    10. ' sort' → logprob: -20.000003814697266

Token 680: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00013321757433004677
    2. '(' → logprob: -9.000133514404297
    3. 'swap' → logprob: -12.250133514404297
    4. '(
' → logprob: -12.375133514404297
    5. '(sw' → logprob: -14.750133514404297
    6. '(b' → logprob: -16.250133514404297
    7. ' (' → logprob: -16.500133514404297
    8. '(S' → logprob: -16.750133514404297
    9. '   ' → logprob: -17.375133514404297
    10. '(sp' → logprob: -17.875133514404297

Token 681: 'wap' (ID: 32847)
  Prédit: 'wap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wap' → logprob: -1.4974866644479334e-05
    2. 'w' → logprob: -11.125015258789062
    3. 'swap' → logprob: -16.375015258789062
    4. 'ap' → logprob: -17.500015258789062
    5. '(w' → logprob: -17.750015258789062
    6. 'wa' → logprob: -17.875015258789062
    7. '(s' → logprob: -19.250015258789062
    8. ' wap' → logprob: -19.500015258789062
    9. 'wp' → logprob: -19.750015258789062
    10. '(' → logprob: -20.250015258789062

Token 682: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -2.816093228830141e-06
    2. 'counter' → logprob: -13.00000286102295
    3. 'ounter' → logprob: -14.50000286102295
    4. '_c' → logprob: -17.625001907348633
    5. '_' → logprob: -18.500001907348633
    6. '_COUNTER' → logprob: -18.750001907348633
    7. '   ' → logprob: -18.875001907348633
    8. ' _' → logprob: -19.000001907348633
    9. 'Counter' → logprob: -19.250001907348633
    10. '_count' → logprob: -19.375001907348633

Token 683: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0220980644226074
    2. ')
' → logprob: -1.0220980644226074
    3. ')' → logprob: -1.2720980644226074
    4. ')
' → logprob: -9.647098541259766
    5. 'input' → logprob: -11.772098541259766
    6. ',' → logprob: -12.522098541259766
    7. ' ' → logprob: -14.522098541259766
    8. '  ' → logprob: -14.647098541259766
    9. ')`
' → logprob: -14.647098541259766
    10. ' )
' → logprob: -15.522098541259766

Token 684: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009346862207166851
    2. 'input' → logprob: -7.000934600830078
    3. ' input' → logprob: -11.250934600830078
    4. 'app' → logprob: -11.625934600830078
    5. 'import' → logprob: -14.375934600830078
    6. 'parser' → logprob: -15.375934600830078
    7. 'stdin' → logprob: -15.500934600830078
    8. '    
' → logprob: -16.750934600830078
    9. ' app' → logprob: -16.875934600830078
    10. '   ' → logprob: -16.875934600830078

Token 685: ' input' (ID: 3422)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.48696422576904297
    2. 'input' (adapté à ' input') → logprob: -0.986964225769043
    3. 'parser' → logprob: -4.486964225769043
    4. 'std' → logprob: -6.986964225769043
    5. 'application' → logprob: -8.236964225769043
    6. 'stdin' → logprob: -8.861964225769043
    7. ' app' → logprob: -9.486964225769043
    8. '   ' → logprob: -9.611964225769043
    9. ' input' → logprob: -10.236964225769043
    10. 'import' → logprob: -10.486964225769043

Token 686: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -9.088346359931165e-07
    2. 'parser' → logprob: -14.125000953674316
    3. 'Parser' → logprob: -16.875
    4. '=' → logprob: -18.375
    5. '_parse' → logprob: -19.0
    6. '=_' → logprob: -19.0
    7. '_reader' → logprob: -20.125
    8. '_par' → logprob: -20.125
    9. '_input' → logprob: -20.375
    10. '_pr' → logprob: -20.625

Token 687: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '=
' → logprob: -18.251928329467773
    4. '   ' → logprob: -18.626928329467773
    5. '=

' → logprob: -20.001928329467773
    6. ' =
' → logprob: -20.251928329467773
    7. ' ' → logprob: -20.251928329467773
    8. '＝' → logprob: -21.376928329467773
    9. '=}' → logprob: -21.626928329467773
    10. ',' → logprob: -22.501928329467773

Token 688: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -7.493430894101039e-05
    2. ' Std' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.62507438659668
    4. 'std' → logprob: -19.00007438659668
    5. '.Std' → logprob: -20.12507438659668
    6. 'Standard' → logprob: -20.37507438659668
    7. ' ' → logprob: -21.50007438659668
    8. 'St' → logprob: -21.87507438659668
    9. 'STD' → logprob: -22.50007438659668
    10. 'Sys' → logprob: -23.12507438659668

Token 689: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. '	Input' → logprob: -23.875
    3. 'In' → logprob: -24.0
    4. '```' → logprob: -25.0
    5. ' Input' → logprob: -25.125
    6. '<Input' → logprob: -25.5
    7. '_input' → logprob: -26.25
    8. '_Input' → logprob: -26.625
    9. 'Inp' → logprob: -26.625
    10. '\Input' → logprob: -26.625

Token 690: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.0015698568895459175
    2. 'Input' → logprob: -6.501569747924805
    3. 'put' → logprob: -9.626569747924805
    4. 'Put' → logprob: -13.626569747924805
    5. 'parser' → logprob: -15.001569747924805
    6. 'Parse' → logprob: -16.876569747924805
    7. '_parser' → logprob: -17.751569747924805
    8. 'Printer' → logprob: -17.876569747924805
    9. 'PUT' → logprob: -18.376569747924805
    10. 'Processor' → logprob: -18.376569747924805

Token 691: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002651503309607506
    2. 'output' → logprob: -8.250265121459961
    3. ' output' → logprob: -12.875265121459961
    4. '
' → logprob: -14.375265121459961
    5. '(output' → logprob: -15.125265121459961
    6. '    
' → logprob: -15.750265121459961
    7. '```' → logprob: -16.25026512145996
    8. ',' → logprob: -16.62526512145996
    9. 'input' → logprob: -16.87526512145996
    10. 'stdout' → logprob: -17.12526512145996

Token 692: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06495529413223267
    2. 'output' → logprob: -2.814955234527588
    3. ' output' → logprob: -5.814955234527588
    4. '	output' → logprob: -15.439955711364746
    5. '```' → logprob: -16.06495475769043
    6. '_output' → logprob: -16.18995475769043
    7. 'Output' → logprob: -17.56495475769043
    8. '(output' → logprob: -17.68995475769043
    9. '  ' → logprob: -18.18995475769043
    10. '       ' → logprob: -18.56495475769043

Token 693: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -4.23917081207037e-05
    2. ' output' → logprob: -10.125041961669922
    3. '   ' → logprob: -13.000041961669922
    4. '
' → logprob: -18.000041961669922
    5. '	output' → logprob: -18.375041961669922
    6. 'stdout' → logprob: -18.375041961669922
    7. '```' → logprob: -19.375041961669922
    8. 'Output' → logprob: -19.375041961669922
    9. 'out' → logprob: -19.625041961669922
    10. '    
' → logprob: -19.625041961669922

Token 694: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -5.438573680294212e-06
    2. '_parser' → logprob: -13.125005722045898
    3. 'Printer' → logprob: -13.375005722045898
    4. '_writer' → logprob: -14.125005722045898
    5. '_output' → logprob: -15.375005722045898
    6. 'printer' → logprob: -15.375005722045898
    7. '_formatter' → logprob: -15.750005722045898
    8. '_print' → logprob: -15.750005722045898
    9. '   ' → logprob: -16.3750057220459
    10. '=_' → logprob: -16.6250057220459

Token 695: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -7.465036105713807e-06
    2. 'n' → logprob: -12.125007629394531
    3. '_inter' → logprob: -14.000007629394531
    4. 'int' → logprob: -14.500007629394531
    5. 'enter' → logprob: -15.750007629394531
    6. 'onter' → logprob: -16.12500762939453
    7. 'ointer' → logprob: -16.25000762939453
    8. 'iter' → logprob: -17.25000762939453
    9. 'interface' → logprob: -17.25000762939453
    10. ' inter' → logprob: -17.50000762939453

Token 696: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141461491584778
    2. '=' → logprob: -1.7014145851135254
    3. '   ' → logprob: -13.701415061950684
    4. ' ' → logprob: -16.451414108276367
    5. ' =
' → logprob: -16.576414108276367
    6. '(' → logprob: -17.201414108276367
    7. '=
' → logprob: -17.576414108276367
    8. ')' → logprob: -19.201414108276367
    9. '=

' → logprob: -19.201414108276367
    10. '()' → logprob: -20.076414108276367

Token 697: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -0.011047935113310814
    2. ' Std' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.63604736328125
    4. ' ' → logprob: -17.63604736328125
    5. '.Std' → logprob: -18.01104736328125
    6. 'Sys' → logprob: -19.13604736328125
    7. 'Standard' → logprob: -19.26104736328125
    8. 'St' → logprob: -20.13604736328125
    9. ' std' → logprob: -21.01104736328125
    10. '    ' → logprob: -21.13604736328125

Token 698: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. 'Out' → logprob: -21.125
    3. 'Ou' → logprob: -23.375
    4. 'O' → logprob: -23.5
    5. ' Output' → logprob: -23.5
    6. '	Output' → logprob: -23.75
    7. 'output' → logprob: -23.875
    8. 'Input' → logprob: -24.25
    9. '_output' → logprob: -24.375
    10. '```' → logprob: -25.75

Token 699: 'Printer' (ID: 54325)
  Prédit: 'Printer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -1.6240566083070007e-06
    2. 'Output' → logprob: -13.500001907348633
    3. 'printer' → logprob: -16.125001907348633
    4. 'Print' → logprob: -18.125001907348633
    5. 'Painter' → logprob: -18.125001907348633
    6. 'Parser' → logprob: -18.625001907348633
    7. 'Pr' → logprob: -18.750001907348633
    8. 'Prin' → logprob: -18.875001907348633
    9. ' Printer' → logprob: -19.500001907348633
    10. 'Writer' → logprob: -19.875001907348633

Token 700: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015342625556513667
    2. 'app' → logprob: -6.501534461975098
    3. ' app' → logprob: -10.751534461975098
    4. 'application' → logprob: -12.251534461975098
    5. '    
' → logprob: -13.376534461975098
    6. '
' → logprob: -13.376534461975098
    7. '```' → logprob: -13.876534461975098
    8. ' application' → logprob: -14.251534461975098
    9. '	app' → logprob: -14.501534461975098
    10. 'bubble' → logprob: -14.751534461975098

Token 701: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12749536335468292
    2. 'app' → logprob: -2.127495288848877
    3. ' app' → logprob: -7.502495288848877
    4. 'application' → logprob: -11.877495765686035
    5. '	app' → logprob: -12.502495765686035
    6. '```' → logprob: -12.627495765686035
    7. '    
' → logprob: -13.877495765686035
    8. 'bubble' → logprob: -16.00249481201172
    9. '   ' → logprob: -16.12749481201172
    10. ' application' → logprob: -16.37749481201172

Token 702: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -8.923874702304602e-05
    2. ' app' → logprob: -9.375089645385742
    3. '   ' → logprob: -12.625089645385742
    4. 'application' → logprob: -14.000089645385742
    5. 'Bubble' → logprob: -15.750089645385742
    6. '```' → logprob: -17.125089645385742
    7. '    
' → logprob: -18.000089645385742
    8. '	app' → logprob: -19.375089645385742
    9. '
' → logprob: -20.375089645385742
    10. '(app' → logprob: -20.875089645385742

Token 703: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011715330183506012
    2. '=' → logprob: -6.751171588897705
    3. '   ' → logprob: -14.251171112060547
    4. ' ' → logprob: -14.876171112060547
    5. '=B' → logprob: -16.376171112060547
    6. 'lication' → logprob: -17.001171112060547
    7. '    ' → logprob: -17.126171112060547
    8. ' =
' → logprob: -17.126171112060547
    9. '	' → logprob: -17.501171112060547
    10. '        ' → logprob: -18.001171112060547

Token 704: ' Bubble' (ID: 84882)
  Prédit: ' Bubble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bubble' → logprob: -0.313262403011322
    2. 'Bubble' → logprob: -1.3132624626159668
    3. '   ' → logprob: -14.688261985778809
    4. 'B' → logprob: -16.063262939453125
    5. ' bubble' → logprob: -16.563262939453125
    6. '	B' → logprob: -18.063262939453125
    7. 'Basket' → logprob: -18.438262939453125
    8. ' ' → logprob: -18.563262939453125
    9. ' Bub' → logprob: -18.688262939453125
    10. ' ' → logprob: -19.563262939453125

Token 705: 'Sort' (ID: 11602)
  Prédit: 'Sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -1.9361264946837764e-07
    2. 'sort' → logprob: -16.375
    3. ' Sort' → logprob: -19.375
    4. '   ' → logprob: -19.75
    5. '_sort' → logprob: -20.5
    6. ' sort' → logprob: -21.375
    7. 'Sorting' → logprob: -21.875
    8. 'SORT' → logprob: -22.0
    9. 'Swap' → logprob: -22.5
    10. 'S' → logprob: -22.625

Token 706: 'Application' (ID: 6817)
  Prédit: 'Application'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Application' → logprob: 0.0
    2. 'application' → logprob: -17.125
    3. 'App' → logprob: -19.875
    4. '_application' → logprob: -20.375
    5. '	Application' → logprob: -20.875
    6. ' application' → logprob: -21.625
    7. '<Application' → logprob: -21.75
    8. 'Applic' → logprob: -22.0
    9. '\Application' → logprob: -22.625
    10. '(Application' → logprob: -22.625

Token 707: '(input' (ID: 10054)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.19162887334823608
    2. '(' → logprob: -2.441628932952881
    3. '(input' → logprob: -2.441628932952881
    4. '   ' → logprob: -8.441628456115723
    5. '(
' → logprob: -9.816628456115723
    6. 'input' → logprob: -10.191628456115723
    7. '(

' → logprob: -10.816628456115723
    8. '(app' → logprob: -11.316628456115723
    9. '(b' → logprob: -12.441628456115723
    10. '(`' → logprob: -13.691628456115723

Token 708: '_parser' (ID: 44939)
  Prédit: '_parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parser' → logprob: -0.0005041812546551228
    2. 'Parser' → logprob: -8.000504493713379
    3. '_' → logprob: -9.625504493713379
    4. '(' → logprob: -10.500504493713379
    5. '   ' → logprob: -11.000504493713379
    6. '_input' → logprob: -11.125504493713379
    7. 'parser' → logprob: -11.375504493713379
    8. '(
' → logprob: -11.625504493713379
    9. '       ' → logprob: -11.625504493713379
    10. '(input' → logprob: -12.125504493713379

Token 709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018023744225502014
    2. '   ' → logprob: -4.76802396774292
    3. ',b' → logprob: -4.76802396774292
    4. ',
' → logprob: -7.64302396774292
    5. '=' → logprob: -7.89302396774292
    6. ' ,' → logprob: -12.393023490905762
    7. 'b' → logprob: -12.768023490905762
    8. '=b' → logprob: -13.268023490905762
    9. '```' → logprob: -13.893023490905762
    10. '       ' → logprob: -14.268023490905762

Token 710: ' bubble' (ID: 40447)
  Prédit: ' bubble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bubble' → logprob: -0.25193455815315247
    2. 'bubble' → logprob: -1.50193452835083
    3. '   ' → logprob: -12.626935005187988
    4. 'b' → logprob: -13.626935005187988
    5. '    ' → logprob: -15.626935005187988
    6. '           ' → logprob: -15.751935005187988
    7. '       ' → logprob: -15.876935005187988
    8. ' bubbles' → logprob: -16.001934051513672
    9. '               ' → logprob: -16.126934051513672
    10. 'Bubble' → logprob: -16.251934051513672

Token 711: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.00010008628305513412
    2. 'sort' → logprob: -9.250100135803223
    3. '_counter' → logprob: -12.500100135803223
    4. 'counter' → logprob: -16.875099182128906
    5. '_swap' → logprob: -16.875099182128906
    6. '_' → logprob: -17.750099182128906
    7. '_s' → logprob: -18.000099182128906
    8. ' sort' → logprob: -18.375099182128906
    9. '_count' → logprob: -19.250099182128906
    10. 's' → logprob: -19.250099182128906

Token 712: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. '   ' → logprob: -11.625015258789062
    3. ',
' → logprob: -12.500015258789062
    4. ' ,' → logprob: -13.000015258789062
    5. 'output' → logprob: -15.875015258789062
    6. ',\
' → logprob: -19.000015258789062
    7. '(output' → logprob: -19.000015258789062
    8. ')' → logprob: -19.125015258789062
    9. ',

' → logprob: -19.125015258789062
    10. '```' → logprob: -19.625015258789062

Token 713: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.12692873179912567
    2. ' output' → logprob: -2.1269288063049316
    3. '   ' → logprob: -14.626928329467773
    4. '(output' → logprob: -16.626928329467773
    5. '	output' → logprob: -16.751928329467773
    6. 'out' → logprob: -18.376928329467773
    7. '$output' → logprob: -18.376928329467773
    8. 'Output' → logprob: -19.251928329467773
    9. '.output' → logprob: -19.376928329467773
    10. '_output' → logprob: -19.501928329467773

Token 714: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -6.704273118884885e-07
    2. '_parser' → logprob: -14.375000953674316
    3. '_writer' → logprob: -17.75
    4. 'printer' → logprob: -18.5
    5. '_print' → logprob: -18.875
    6. 'Printer' → logprob: -19.25
    7. 'pr' → logprob: -19.625
    8. '_output' → logprob: -19.75
    9. '	pr' → logprob: -19.875
    10. '_Pr' → logprob: -20.5

Token 715: 'inter' (ID: 3082)
  Prédit: 'inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.011077405884861946
    2. 'n' → logprob: -4.511077404022217
    3. 'ter' → logprob: -10.761077880859375
    4. '_inter' → logprob: -12.761077880859375
    5. 'enter' → logprob: -13.136077880859375
    6. 'r' → logprob: -13.636077880859375
    7. 'onter' → logprob: -14.386077880859375
    8. 'nt' → logprob: -15.011077880859375
    9. 'Inter' → logprob: -15.511077880859375
    10. 't' → logprob: -15.636077880859375

Token 716: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4202291965484619
    2. ')' → logprob: -1.170229196548462
    3. '   ' → logprob: -3.420229196548462
    4. 'app' → logprob: -9.670228958129883
    5. ' ' → logprob: -11.420228958129883
    6. ')
' → logprob: -11.420228958129883
    7. '(app' → logprob: -11.920228958129883
    8. ' )
' → logprob: -12.795228958129883
    9. '  ' → logprob: -13.670228958129883
    10. ').' → logprob: -13.670228958129883

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10022295266389847
    2. 'app' → logprob: -2.3502230644226074
    3. ' app' → logprob: -11.72522258758545
    4. '	app' → logprob: -11.97522258758545
    5. '
' → logprob: -13.47522258758545
    6. '    
' → logprob: -14.97522258758545
    7. '(app' → logprob: -15.97522258758545
    8. '_app' → logprob: -16.350223541259766
    9. '.app' → logprob: -17.475223541259766
    10. 'App' → logprob: -17.725223541259766

Token 718: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -14.750000953674316
    3. ' app' → logprob: -16.25
    4. '	app' → logprob: -22.75
    5. '.app' → logprob: -24.75
    6. '(app' → logprob: -25.25
    7. 'App' → logprob: -26.125
    8. '_app' → logprob: -26.25
    9. '$app' → logprob: -26.75
    10. '@app' → logprob: -27.375

Token 719: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.00015872348740231246
    2. '.' → logprob: -8.750158309936523
    3. ' .' → logprob: -15.250158309936523
    4. '.
' → logprob: -19.125158309936523
    5. '.Run' → logprob: -19.500158309936523
    6. 'run' → logprob: -19.500158309936523
    7. '.start' → logprob: -19.625158309936523
    8. '.execute' → logprob: -19.875158309936523
    9. '().' → logprob: -20.125158309936523
    10. '.app' → logprob: -21.125158309936523

Token 720: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0019318510312587023
    2. '()
' → logprob: -6.251931667327881
    3. ' ()' → logprob: -13.876932144165039
    4. '()<' → logprob: -14.001932144165039
    5. '()\' → logprob: -14.251932144165039
    6. '(' → logprob: -15.126932144165039
    7. '()

' → logprob: -15.251932144165039
    8. '()`' → logprob: -16.00193214416504
    9. '()
' → logprob: -16.50193214416504
    10. '()"' → logprob: -17.00193214416504


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 718
Tokens correctement prédits (1ère position, stricte): 366
Tokens correctement prédits (1ère position, avec adaptation): 420
Tokens correctement prédits (top 10): 658
Précision stricte (1ère position): 50.97%
Précision adaptée (1ère position): 58.50%
Précision (top 10): 91.64%
================================================================================
