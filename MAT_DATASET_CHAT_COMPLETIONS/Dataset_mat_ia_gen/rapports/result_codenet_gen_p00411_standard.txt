================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a,t,r=map(int,input().split())
print(round(r*t/a,6))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',t' (ID: 26927)
  → Token d'amorce (pas de prédiction)

Token 2: ',r' (ID: 33654)
  → Token d'amorce (pas de prédiction)

Token 3: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39389294385910034
    2. '=' → logprob: -1.2688930034637451
    3. '[' → logprob: -3.893893003463745
    4. ';' → logprob: -4.518892765045166
    5. ' =' → logprob: -5.518892765045166
    6. '.' → logprob: -5.643892765045166
    7. '(' → logprob: -6.143892765045166
    8. '+' → logprob: -6.518892765045166
    9. ')' → logprob: -7.518892765045166
    10. ':' → logprob: -8.143893241882324

Token 4: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25611934065818787
    2. '1' → logprob: -2.5061192512512207
    3. '[' → logprob: -2.8811192512512207
    4. '[]' → logprob: -2.8811192512512207
    5. ' ' → logprob: -4.256119251251221
    6. '[],' → logprob: -4.881119251251221
    7. '(' → logprob: -6.256119251251221
    8. '10' → logprob: -6.381119251251221
    9. 'map' → logprob: -6.381119251251221
    10. ' [],' → logprob: -6.881119251251221

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006260562222450972
    2. '<|end|>' → logprob: -5.131260395050049
    3. '```' → logprob: -9.381260871887207
    4. ')' → logprob: -9.506260871887207
    5. '<|end|>' → logprob: -10.256260871887207
    6. ' (' → logprob: -10.881260871887207
    7. '\(' → logprob: -11.256260871887207
    8. ''' → logprob: -11.256260871887207
    9. ',' → logprob: -11.506260871887207
    10. '(
' → logprob: -11.631260871887207

Token 6: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.40885257720947266
    2. ')' → logprob: -1.1588525772094727
    3. '(' → logprob: -4.283852577209473
    4. '<|end|>' → logprob: -5.658852577209473
    5. 'input' → logprob: -6.533852577209473
    6. ',input' → logprob: -7.783852577209473
    7. '())' → logprob: -7.908852577209473
    8. '(int' → logprob: -8.533852577209473
    9. '`)' → logprob: -8.658852577209473
    10. '(raw' → logprob: -8.658852577209473

Token 7: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3035692274570465
    2. ')' → logprob: -1.9285691976547241
    3. '()' → logprob: -2.4285693168640137
    4. '(' → logprob: -4.553569316864014
    5. '`)' → logprob: -5.803569316864014
    6. '<|end|>' → logprob: -5.928569316864014
    7. '```' → logprob: -6.803569316864014
    8. '")' → logprob: -6.803569316864014
    9. '(token' → logprob: -6.928569316864014
    10. '();)' → logprob: -7.178569316864014

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00017112065688706934
    2. 'strip' → logprob: -8.750170707702637
    3. ' split' → logprob: -12.125170707702637
    4. '(split' → logprob: -12.500170707702637
    5. ')' → logprob: -13.000170707702637
    6. 'rstrip' → logprob: -14.125170707702637
    7. 'spl' → logprob: -15.250170707702637
    8. 'plit' → logprob: -16.875171661376953
    9. 'replace' → logprob: -17.250171661376953
    10. 's' → logprob: -17.500171661376953

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07428546994924545
    2. '())' → logprob: -2.6992855072021484
    3. '`)' → logprob: -6.324285507202148
    4. '))' → logprob: -6.324285507202148
    5. '()' → logprob: -7.949285507202148
    6. '(' → logprob: -9.074285507202148
    7. ')`' → logprob: -9.449285507202148
    8. '')' → logprob: -10.074285507202148
    9. '()))' → logprob: -10.824285507202148
    10. '```' → logprob: -10.824285507202148

Token 10: 'print' (ID: 1598)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0253044366836548
    2. 's' → logprob: -1.6503044366836548
    3. 'if' → logprob: -2.0253043174743652
    4. '#' → logprob: -2.7753043174743652
    5. 'd' → logprob: -2.9003043174743652
    6. ',' → logprob: -3.2753043174743652
    7. 'n' → logprob: -3.2753043174743652
    8. '
' → logprob: -3.5253043174743652
    9. 'x' → logprob: -4.775304317474365
    10. '\n' → logprob: -4.775304317474365

Token 11: '(round' (ID: 75171)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004341261519584805
    2. '(a' → logprob: -8.875433921813965
    3. '("("' → logprob: -8.875433921813965
    4. '('' → logprob: -9.000433921813965
    5. '((' → logprob: -11.125433921813965
    6. '(t' → logprob: -11.875433921813965
    7. '("""' → logprob: -13.250433921813965
    8. '()' → logprob: -13.625433921813965
    9. '(`' → logprob: -14.375433921813965
    10. '(
' → logprob: -14.625433921813965

Token 12: '(r' (ID: 4729)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.45723459124565125
    2. '(' → logprob: -1.0822346210479736
    3. '(t' → logprob: -3.8322346210479736
    4. '((' → logprob: -5.0822343826293945
    5. '(s' → logprob: -9.832234382629395
    6. '(at' → logprob: -10.457234382629395
    7. '(round' → logprob: -10.707234382629395
    8. '(float' → logprob: -10.832234382629395
    9. '(abs' → logprob: -10.832234382629395
    10. ' (' → logprob: -11.082234382629395

Token 13: '*t' (ID: 45600)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.454660028219223
    2. '/t' → logprob: -2.329659938812256
    3. '))' → logprob: -2.704659938812256
    4. '/' → logprob: -2.704659938812256
    5. '*t' → logprob: -3.204659938812256
    6. '/a' → logprob: -3.579659938812256
    7. '*a' → logprob: -4.079659938812256
    8. ' *' → logprob: -4.329659938812256
    9. '*r' → logprob: -4.954659938812256
    10. ' /' → logprob: -5.079659938812256

Token 14: '/a' (ID: 23839)
  Prédit: '/t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/t' → logprob: -0.8488100171089172
    2. '/' → logprob: -1.2238099575042725
    3. '))' → logprob: -1.5988099575042725
    4. '/r' → logprob: -3.4738099575042725
    5. '/a' → logprob: -3.5988099575042725
    6. ')' → logprob: -4.723810195922852
    7. ' /' → logprob: -6.098810195922852
    8. '*' → logprob: -6.223810195922852
    9. '*t' → logprob: -6.723810195922852
    10. '/(' → logprob: -7.598810195922852

Token 15: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02976854331791401
    2. ')' → logprob: -3.529768466949463
    3. ')))' → logprob: -11.029768943786621
    4. '))
' → logprob: -14.029768943786621
    5. '),' → logprob: -15.154768943786621
    6. ' ))' → logprob: -15.904768943786621
    7. '*' → logprob: -16.154767990112305
    8. ' ' → logprob: -16.654767990112305
    9. ')
' → logprob: -16.904767990112305
    10. ')**' → logprob: -17.029767990112305

Token 16: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09514357894659042
    2. '6' → logprob: -2.8451435565948486
    3. '3' → logprob: -4.220143795013428
    4. '1' → logprob: -4.345143795013428
    5. '4' → logprob: -6.095143795013428
    6. '5' → logprob: -6.345143795013428
    7. '0' → logprob: -7.720143795013428
    8. '7' → logprob: -8.22014331817627
    9. ' ' → logprob: -8.84514331817627
    10. '))' → logprob: -10.34514331817627

Token 17: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519325911998749
    2. '))' → logprob: -1.5019326210021973
    3. ')))' → logprob: -12.876932144165039
    4. '),' → logprob: -15.501932144165039
    5. ')
' → logprob: -15.626932144165039
    6. '))
' → logprob: -16.25193214416504
    7. ')`' → logprob: -16.37693214416504
    8. ')")' → logprob: -16.50193214416504
    9. ' )' → logprob: -16.75193214416504
    10. ')}' → logprob: -17.25193214416504


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 15
Tokens correctement prédits (1ère position, stricte): 1
Tokens correctement prédits (1ère position, avec adaptation): 1
Tokens correctement prédits (top 10): 8
Précision stricte (1ère position): 6.67%
Précision adaptée (1ère position): 6.67%
Précision (top 10): 53.33%
================================================================================
