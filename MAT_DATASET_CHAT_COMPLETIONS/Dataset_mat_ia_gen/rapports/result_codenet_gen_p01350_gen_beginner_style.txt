================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

n = int(input())
r, theta = map(float, input().split())
cities = [tuple(map(int, input().split())) for _ in range(n)]

def dist(a, b):
    return math.sqrt((a[0]-b[0])**2 + (a[1]-b[1])**2)

def angle_between(v1, v2):
    # v1 and v2 are vectors (dx, dy)
    dot = v1[0]*v2[0] + v1[1]*v2[1]
    len1 = math.sqrt(v1[0]**2 + v1[1]**2)
    len2 = math.sqrt(v2[0]**2 + v2[1]**2)
    if len1 == 0 or len2 == 0:
        return 0.0
    cos_angle = dot/(len1*len2)
    cos_angle = max(-1, min(1, cos_angle))
    return math.degrees(math.acos(cos_angle))

max_carrots = 0

# Since n is small, and r small, we try all paths using DFS.

def dfs(current_city, length_used, prev_dir, carrots):
    global max_carrots
    if carrots > max_carrots:
        max_carrots = carrots

    for next_city in range(n):
        if next_city == current_city:
            continue
        d = dist(cities[current_city], cities[next_city])
        if length_used + d > r:
            continue
        # direction vector
        cur_dir = (cities[next_city][0]-cities[current_city][0], cities[next_city][1]-cities[current_city][1])
        if prev_dir is not None:
            a = angle_between(prev_dir, cur_dir)
            if a > theta + 1e-8:
                continue
        dfs(next_city, length_used + d, cur_dir, carrots + 1)

dfs(0, 0, None, 0)
print(max_carrots)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0021836883388459682
    2. '```' → logprob: -7.37718391418457
    3. '\n' → logprob: -7.50218391418457
    4. 'import' → logprob: -7.75218391418457
    5. '\' → logprob: -8.75218391418457
    6. '<|end|>' → logprob: -9.50218391418457
    7. '.pi' → logprob: -10.00218391418457
    8. 'as' → logprob: -10.37718391418457
    9. '.e' → logprob: -10.87718391418457
    10. 'a' → logprob: -10.87718391418457

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2682790458202362
    2. '_' → logprob: -1.8932790756225586
    3. ' ' → logprob: -3.6432790756225586
    4. '=' → logprob: -4.768279075622559
    5. 'u' → logprob: -4.768279075622559
    6. '[' → logprob: -5.143279075622559
    7. 'a' → logprob: -5.268279075622559
    8. ')' → logprob: -5.393279075622559
    9. 'e' → logprob: -5.518279075622559
    10. 't' → logprob: -5.518279075622559

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005522954277694225
    2. '10' → logprob: -5.755522727966309
    3. ' int' → logprob: -6.755522727966309
    4. '0' → logprob: -7.880522727966309
    5. 'int' → logprob: -8.255522727966309
    6. '1' → logprob: -8.380522727966309
    7. '5' → logprob: -8.630522727966309
    8. ' math' → logprob: -10.130522727966309
    9. '20' → logprob: -10.505522727966309
    10. '42' → logprob: -11.505522727966309

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001684981834841892
    2. '('' → logprob: -9.750168800354004
    3. '()' → logprob: -10.375168800354004
    4. ')' → logprob: -11.000168800354004
    5. ' (' → logprob: -11.250168800354004
    6. ''' → logprob: -11.375168800354004
    7. '(
' → logprob: -11.750168800354004
    8. '(n' → logprob: -12.250168800354004
    9. '```' → logprob: -12.250168800354004
    10. '(input' → logprob: -12.375168800354004

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4853132367134094
    2. ')' → logprob: -0.9853132367134094
    3. '()' → logprob: -4.735313415527344
    4. '())' → logprob: -6.735313415527344
    5. '(
' → logprob: -7.735313415527344
    6. '))' → logprob: -8.860313415527344
    7. '('' → logprob: -8.985313415527344
    8. '")' → logprob: -9.235313415527344
    9. '')' → logprob: -9.735313415527344
    10. '```' → logprob: -9.735313415527344

Token 8: 'r' (ID: 81)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9495314359664917
    2. 'factor' → logprob: -1.5745314359664917
    3. 'if' → logprob: -1.9495314359664917
    4. 'for' → logprob: -2.1995315551757812
    5. 's' → logprob: -2.8245315551757812
    6. 'fact' → logprob: -3.3245315551757812
    7. ')' → logprob: -3.9495315551757812
    8. 'f' → logprob: -4.199531555175781
    9. 'x' → logprob: -4.449531555175781
    10. '_' → logprob: -6.949531555175781

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1156069040298462
    2. 'a' → logprob: -1.3656069040298462
    3. '(' → logprob: -1.8656069040298462
    4. '[' → logprob: -2.4906067848205566
    5. ' ' → logprob: -2.8656067848205566
    6. '**' → logprob: -2.8656067848205566
    7. '.' → logprob: -4.490606784820557
    8. '=' → logprob: -4.490606784820557
    9. '_' → logprob: -5.115606784820557
    10. ',' → logprob: -5.115606784820557

Token 10: ' theta' (ID: 43101)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.687711238861084
    2. 's' → logprob: -1.937711238861084
    3. ' ' → logprob: -2.812711238861084
    4. ' t' → logprob: -2.812711238861084
    5. ' =' → logprob: -3.187711238861084
    6. 't' → logprob: -3.562711238861084
    7. 'd' → logprob: -4.062711238861084
    8. 'k' → logprob: -4.187711238861084
    9. ' k' → logprob: -4.187711238861084
    10. 'c' → logprob: -4.187711238861084

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016222523525357246
    2. '=' → logprob: -4.1412224769592285
    3. ',' → logprob: -9.266222953796387
    4. ' ' → logprob: -9.391222953796387
    5. ')' → logprob: -12.516222953796387
    6. '_' → logprob: -13.266222953796387
    7. ' ,' → logprob: -13.391222953796387
    8. '[' → logprob: -14.266222953796387
    9. 's' → logprob: -14.266222953796387
    10. 'space' → logprob: -14.891222953796387

Token 12: ' map' (ID: 4014)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6064647436141968
    2. 'math' → logprob: -1.4814647436141968
    3. ' n' → logprob: -2.3564648628234863
    4. '0' → logprob: -2.9814648628234863
    5. ' ' → logprob: -3.7314648628234863
    6. ' map' → logprob: -3.7314648628234863
    7. 'map' → logprob: -4.481464862823486
    8. 'n' → logprob: -4.981464862823486
    9. ' input' → logprob: -5.606464862823486
    10. ' float' → logprob: -5.606464862823486

Token 13: '(float' (ID: 17830)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46240827441215515
    2. '(int' → logprob: -1.5874083042144775
    3. '(lambda' → logprob: -2.0874083042144775
    4. '<|end|>' → logprob: -3.7124083042144775
    5. '(math' → logprob: -5.587408065795898
    6. '(str' → logprob: -5.962408065795898
    7. '(range' → logprob: -6.212408065795898
    8. '(input' → logprob: -6.337408065795898
    9. '<|end|>' → logprob: -6.587408065795898
    10. '```' → logprob: -7.087408065795898

Token 14: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5331805348396301
    2. ',' → logprob: -1.1581804752349854
    3. '(input' → logprob: -2.4081804752349854
    4. ')' → logprob: -4.7831807136535645
    5. 'input' → logprob: -8.033180236816406
    6. '),' → logprob: -8.408180236816406
    7. '=input' → logprob: -9.658180236816406
    8. ' ,' → logprob: -9.908180236816406
    9. '(' → logprob: -9.908180236816406
    10. ')(' → logprob: -10.033180236816406

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4753158390522003
    2. ' input' → logprob: -0.9753158092498779
    3. ')' → logprob: -7.225316047668457
    4. '(input' → logprob: -7.850316047668457
    5. ',input' → logprob: -10.225316047668457
    6. ' ' → logprob: -10.725316047668457
    7. ' )' → logprob: -11.100316047668457
    8. 'math' → logprob: -11.350316047668457
    9. '[input' → logprob: -11.725316047668457
    10. '=input' → logprob: -11.850316047668457

Token 16: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3119484484195709
    2. ')' → logprob: -1.8119484186172485
    3. '())' → logprob: -2.311948537826538
    4. '()' → logprob: -5.311948299407959
    5. '('' → logprob: -8.686948776245117
    6. '))' → logprob: -9.061948776245117
    7. '()))' → logprob: -9.686948776245117
    8. '(' → logprob: -9.811948776245117
    9. '()[' → logprob: -10.561948776245117
    10. '());' → logprob: -10.811948776245117

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00018196819291915745
    2. 'strip' → logprob: -8.625182151794434
    3. 'rstrip' → logprob: -13.625182151794434
    4. ' split' → logprob: -13.875182151794434
    5. ')' → logprob: -16.000181198120117
    6. '(split' → logprob: -16.500181198120117
    7. 'spl' → logprob: -17.125181198120117
    8. 's' → logprob: -17.250181198120117
    9. 'plit' → logprob: -17.875181198120117
    10. '```' → logprob: -19.500181198120117

Token 18: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09946282207965851
    2. '))' → logprob: -2.4744627475738525
    3. '())' → logprob: -4.724462985992432
    4. '('' → logprob: -6.724462985992432
    5. '()' → logprob: -8.599462509155273
    6. '()))' → logprob: -9.599462509155273
    7. '')' → logprob: -10.724462509155273
    8. ')
' → logprob: -10.974462509155273
    9. '(' → logprob: -11.224462509155273
    10. '`)' → logprob: -11.224462509155273

Token 19: 'cities' (ID: 131097)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.56107097864151
    2. 'result' → logprob: -1.8110709190368652
    3. 'x' → logprob: -2.9360709190368652
    4. 'a' → logprob: -3.0610709190368652
    5. ')' → logprob: -3.3110709190368652
    6. 's' → logprob: -3.4360709190368652
    7. 'v' → logprob: -4.561070919036865
    8. 'angle' → logprob: -4.811070919036865
    9. 'r' → logprob: -4.936070919036865
    10. 'p' → logprob: -5.061070919036865

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03317369520664215
    2. '=' → logprob: -4.033173561096191
    3. '[' → logprob: -4.658173561096191
    4. ')' → logprob: -6.158173561096191
    5. '_' → logprob: -7.033173561096191
    6. '.' → logprob: -7.158173561096191
    7. 's' → logprob: -7.283173561096191
    8. '=[]' → logprob: -7.908173561096191
    9. '[]' → logprob: -8.783173561096191
    10. ',' → logprob: -9.283173561096191

Token 21: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12257153540849686
    2. ' []' → logprob: -2.3725714683532715
    3. '[' → logprob: -3.9975714683532715
    4. ' [' → logprob: -5.7475714683532715
    5. '[int' → logprob: -8.62257194519043
    6. '[list' → logprob: -8.99757194519043
    7. '{}' → logprob: -10.12257194519043
    8. '[]}' → logprob: -10.49757194519043
    9. 'list' → logprob: -10.49757194519043
    10. '[][]' → logprob: -10.74757194519043

Token 22: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.2600814700126648
    2. 'list' → logprob: -2.7600815296173096
    3. '()]' → logprob: -3.1350815296173096
    4. '(tuple' → logprob: -3.5100815296173096
    5. '[]' → logprob: -4.2600812911987305
    6. '(' → logprob: -4.2600812911987305
    7. '[' → logprob: -4.2600812911987305
    8. 'map' → logprob: -4.6350812911987305
    9. '(float' → logprob: -4.6350812911987305
    10. ']' → logprob: -4.7600812911987305

Token 23: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005987693555653095
    2. '(input' → logprob: -5.505987644195557
    3. '(float' → logprob: -7.255987644195557
    4. '(' → logprob: -7.255987644195557
    5. '(math' → logprob: -8.005988121032715
    6. '(int' → logprob: -9.005988121032715
    7. '()' → logprob: -10.755988121032715
    8. '(
' → logprob: -12.130988121032715
    9. '((' → logprob: -12.880988121032715
    10. '()]' → logprob: -13.755988121032715

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008727914653718472
    2. '(float' → logprob: -4.75872802734375
    3. 'int' → logprob: -9.63372802734375
    4. '<int' → logprob: -10.88372802734375
    5. '(' → logprob: -11.50872802734375
    6. 'float' → logprob: -12.50872802734375
    7. '[int' → logprob: -12.63372802734375
    8. '(str' → logprob: -12.63372802734375
    9. ',int' → logprob: -13.50872802734375
    10. '<float' → logprob: -13.50872802734375

Token 25: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3866201937198639
    2. ',' → logprob: -1.6366201639175415
    3. '(input' → logprob: -2.136620283126831
    4. 'input' → logprob: -5.011620044708252
    5. '(' → logprob: -7.136620044708252
    6. ')' → logprob: -8.88662052154541
    7. ' ,' → logprob: -9.38662052154541
    8. '```' → logprob: -9.76162052154541
    9. ' input' → logprob: -9.88662052154541
    10. '(),' → logprob: -10.26162052154541

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0040801819413900375
    2. ' input' → logprob: -5.504080295562744
    3. ',input' → logprob: -14.504079818725586
    4. '(input' → logprob: -14.754079818725586
    5. ')' → logprob: -15.129079818725586
    6. 'map' → logprob: -15.504079818725586
    7. 'list' → logprob: -15.754079818725586
    8. '))' → logprob: -16.254079818725586
    9. '[input' → logprob: -17.004079818725586
    10. ' ' → logprob: -17.004079818725586

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.735893965815194e-05
    2. '()))' → logprob: -11.625017166137695
    3. '()' → logprob: -12.375017166137695
    4. '())' → logprob: -13.125017166137695
    5. '.readline' → logprob: -13.625017166137695
    6. '))' → logprob: -15.250017166137695
    7. '()));' → logprob: -15.250017166137695
    8. '())))' → logprob: -16.000017166137695
    9. ')' → logprob: -16.500017166137695
    10. ' ().' → logprob: -17.000017166137695

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.362307223957032e-05
    2. 'strip' → logprob: -9.625073432922363
    3. 'rstrip' → logprob: -11.875073432922363
    4. ' split' → logprob: -15.000073432922363
    5. '(split' → logprob: -15.750073432922363
    6. 'spl' → logprob: -17.62507438659668
    7. 's' → logprob: -17.75007438659668
    8. ' ' → logprob: -18.00007438659668
    9. '```' → logprob: -18.75007438659668
    10. 'plit' → logprob: -18.75007438659668

Token 29: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.253113716840744
    2. '))' → logprob: -1.5031137466430664
    3. '())' → logprob: -7.628113746643066
    4. '()' → logprob: -7.628113746643066
    5. '()))
' → logprob: -9.128113746643066
    6. ')' → logprob: -9.753113746643066
    7. '(' → logprob: -11.128113746643066
    8. ')))' → logprob: -11.878113746643066
    9. '())))' → logprob: -12.253113746643066
    10. '))
' → logprob: -12.628113746643066

Token 30: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08087896555662155
    2. 'for' → logprob: -3.080878973007202
    3. '()' → logprob: -3.830878973007202
    4. ')]' → logprob: -5.455878734588623
    5. ' for' → logprob: -5.580878734588623
    6. '(' → logprob: -7.205878734588623
    7. '())' → logprob: -7.330878734588623
    8. '(n' → logprob: -8.455879211425781
    9. ']' → logprob: -9.580879211425781
    10. '()]' → logprob: -9.705879211425781

Token 31: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018263613805174828
    2. 'range' → logprob: -4.393263816833496
    3. '_' → logprob: -5.268263816833496
    4. '_range' → logprob: -7.518263816833496
    5. '(range' → logprob: -10.768263816833496
    6. ' _' → logprob: -11.393263816833496
    7. '	range' → logprob: -11.643263816833496
    8. ' xrange' → logprob: -15.143263816833496
    9. ' ' → logprob: -15.393263816833496
    10. '.range' → logprob: -16.76826286315918

Token 32: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7940543293952942
    2. ' in' → logprob: -1.2940542697906494
    3. ' range' → logprob: -2.0440542697906494
    4. 'in' → logprob: -2.2940542697906494
    5. '_' → logprob: -3.1690542697906494
    6. 'i' → logprob: -7.6690545082092285
    7. '(range' → logprob: -8.04405403137207
    8. 's' → logprob: -8.79405403137207
    9. '_range' → logprob: -9.16905403137207
    10. '	range' → logprob: -9.29405403137207

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234121344983578
    2. ' range' → logprob: -5.255234241485596
    3. '(range' → logprob: -15.380233764648438
    4. '	range' → logprob: -16.380233764648438
    5. '[' → logprob: -17.505233764648438
    6. ' ' → logprob: -17.755233764648438
    7. 'r' → logprob: -18.130233764648438
    8. 'rang' → logprob: -18.255233764648438
    9. '```' → logprob: -18.880233764648438
    10. '  ' → logprob: -18.880233764648438

Token 34: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004311460361350328
    2. '(' → logprob: -7.750431060791016
    3. 'n' → logprob: -15.125431060791016
    4. ' (' → logprob: -16.000431060791016
    5. ')n' → logprob: -17.625431060791016
    6. '(
' → logprob: -18.000431060791016
    7. ' n' → logprob: -18.625431060791016
    8. '(len' → logprob: -18.750431060791016
    9. ')' → logprob: -18.750431060791016
    10. '(range' → logprob: -18.875431060791016

Token 35: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00014060820103622973
    2. ')' → logprob: -9.000140190124512
    3. ']' → logprob: -11.750140190124512
    4. ')])' → logprob: -12.875140190124512
    5. '))' → logprob: -13.250140190124512
    6. ')]
' → logprob: -13.375140190124512
    7. '])]' → logprob: -13.875140190124512
    8. '')]' → logprob: -14.000140190124512
    9. ' )' → logprob: -14.750140190124512
    10. ')],' → logprob: -15.250140190124512

Token 36: 'def' (ID: 1314)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.3036102056503296
    2. 'result' → logprob: -1.6786102056503296
    3. 'max' → logprob: -1.6786102056503296
    4. 'd' → logprob: -2.803610324859619
    5. 'ans' → logprob: -2.803610324859619
    6. 'dp' → logprob: -3.053610324859619
    7. 'best' → logprob: -3.553610324859619
    8. 'distance' → logprob: -3.678610324859619
    9. 'answer' → logprob: -3.803610324859619
    10. 'min' → logprob: -4.178610324859619

Token 37: ' dist' (ID: 3601)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.8584770560264587
    2. ' distance' → logprob: -0.9834770560264587
    3. ' polar' → logprob: -2.3584771156311035
    4. ' convert' → logprob: -3.7334771156311035
    5. ' compute' → logprob: -3.9834771156311035
    6. ' find' → logprob: -4.4834771156311035
    7. ' dist' → logprob: -4.6084771156311035
    8. 'distance' → logprob: -4.7334771156311035
    9. ' calc' → logprob: -5.1084771156311035
    10. ' main' → logprob: -5.2334771156311035

Token 38: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19000574946403503
    2. '(a' → logprob: -1.9400057792663574
    3. '(x' → logprob: -4.690005779266357
    4. 'ance' → logprob: -4.690005779266357
    5. 'ence' → logprob: -5.940005779266357
    6. 'ancer' → logprob: -6.315005779266357
    7. 'anced' → logprob: -6.440005779266357
    8. 'a' → logprob: -7.065005779266357
    9. '<|end|>' → logprob: -7.440005779266357
    10. '("("' → logprob: -8.0650053024292

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.954393079970032e-05
    2. ' ,' → logprob: -10.750049591064453
    3. ',a' → logprob: -11.250049591064453
    4. ',b' → logprob: -12.250049591064453
    5. '):' → logprob: -12.875049591064453
    6. 'a' → logprob: -12.875049591064453
    7. '1' → logprob: -13.250049591064453
    8. '_,' → logprob: -13.750049591064453
    9. ',p' → logprob: -14.125049591064453
    10. ')' → logprob: -15.000049591064453

Token 40: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020774602890015
    2. ' b' → logprob: -2.350207805633545
    3. ',' → logprob: -15.225207328796387
    4. ' ' → logprob: -15.475207328796387
    5. '<|end|>' → logprob: -15.600207328796387
    6. ')' → logprob: -15.975207328796387
    7. ',b' → logprob: -16.225208282470703
    8. '   ' → logprob: -16.600208282470703
    9. '	b' → logprob: -16.600208282470703
    10. ')b' → logprob: -16.850208282470703

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003472633252386004
    2. ')' → logprob: -8.625347137451172
    3. '):
' → logprob: -9.375347137451172
    4. ',' → logprob: -10.000347137451172
    5. ' ):' → logprob: -10.500347137451172
    6. ':' → logprob: -12.000347137451172
    7. ')):' → logprob: -13.875347137451172
    8. '):
' → logprob: -14.125347137451172
    9. 'a' → logprob: -14.750347137451172
    10. '):

' → logprob: -15.000347137451172

Token 42: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7304388284683228
    2. '(' → logprob: -1.3554388284683228
    3. '():' → logprob: -2.105438709259033
    4. '):' → logprob: -2.730438709259033
    5. '   ' → logprob: -3.980438709259033
    6. '(a' → logprob: -3.980438709259033
    7. 'return' → logprob: -4.855438709259033
    8. ' return' → logprob: -5.105438709259033
    9. '(x' → logprob: -5.105438709259033
    10. ':return' → logprob: -5.480438709259033

Token 43: ' return' (ID: 622)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4884169399738312
    2. '(math' → logprob: -1.7384169101715088
    3. 'return' (adapté à ' return') → logprob: -2.488416910171509
    4. ' math' → logprob: -2.738416910171509
    5. '   ' → logprob: -3.488416910171509
    6. '(' → logprob: -3.988416910171509
    7. ' return' → logprob: -4.488417148590088
    8. ' (' → logprob: -6.863417148590088
    9. '(
' → logprob: -7.863417148590088
    10. '((' → logprob: -8.23841667175293

Token 44: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.35575997829437256
    2. 'math' → logprob: -1.3557599782943726
    3. '(math' → logprob: -3.230760097503662
    4. '((' → logprob: -7.480760097503662
    5. ' ((' → logprob: -7.605760097503662
    6. '(' → logprob: -7.730760097503662
    7. ' (' → logprob: -7.980760097503662
    8. 'int' → logprob: -9.480759620666504
    9. ' int' → logprob: -9.855759620666504
    10. '   ' → logprob: -9.980759620666504

Token 45: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.32271379232406616
    2. '.' → logprob: -1.322713851928711
    3. '.h' → logprob: -5.447713851928711
    4. '.dist' → logprob: -5.447713851928711
    5. '.s' → logprob: -7.197713851928711
    6. '.atan' → logprob: -10.697713851928711
    7. '.f' → logprob: -11.447713851928711
    8. '.ceil' → logprob: -12.822713851928711
    9. '.Sqrt' → logprob: -13.072713851928711
    10. '.pow' → logprob: -13.197713851928711

Token 46: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0788998156785965
    2. '(' → logprob: -2.57889986038208
    3. ' ((' → logprob: -12.953899383544922
    4. '(
' → logprob: -13.078899383544922
    5. '(sum' → logprob: -13.078899383544922
    6. ' (' → logprob: -14.453899383544922
    7. '(

' → logprob: -14.453899383544922
    8. '(((' → logprob: -14.453899383544922
    9. '(pow' → logprob: -14.703899383544922
    10. '(abs' → logprob: -14.953899383544922

Token 47: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0036620718892663717
    2. 'b' → logprob: -5.628662109375
    3. ' a' → logprob: -9.753662109375
    4. '(a' → logprob: -13.378662109375
    5. '	a' → logprob: -13.753662109375
    6. ' b' → logprob: -13.878662109375
    7. '   ' → logprob: -15.378662109375
    8. ')a' → logprob: -16.628662109375
    9. '(b' → logprob: -16.753662109375
    10. 'а' → logprob: -17.253662109375

Token 48: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '0' → logprob: -12.500003814697266
    3. '1' → logprob: -15.750003814697266
    4. ' [' → logprob: -16.875003814697266
    5. 'x' → logprob: -17.000003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '[
' → logprob: -18.375003814697266
    8. '][' → logprob: -18.625003814697266
    9. ' ' → logprob: -18.750003814697266
    10. '2' → logprob: -19.000003814697266

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.75
    3. ' ' → logprob: -16.5
    4. '   ' → logprob: -18.8125
    5. '۰' → logprob: -19.125
    6. '[' → logprob: -19.75
    7. '
' → logprob: -20.0
    8. '-' → logprob: -20.25
    9. '０' → logprob: -20.5
    10. '

' → logprob: -20.6875

Token 50: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6341069936752319
    2. ' -' → logprob: -0.7591069936752319
    3. '[' → logprob: -6.6341071128845215
    4. ')' → logprob: -10.259106636047363
    5. 'a' → logprob: -10.384106636047363
    6. '-b' → logprob: -10.634106636047363
    7. ']' → logprob: -10.759106636047363
    8. '<|end|>' → logprob: -10.759106636047363
    9. '-a' → logprob: -11.134106636047363
    10. ' ' → logprob: -11.384106636047363

Token 51: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001234428636962548
    2. ' b' → logprob: -9.000123023986816
    3. ')b' → logprob: -17.000123977661133
    4. '   ' → logprob: -18.000123977661133
    5. ')' → logprob: -18.000123977661133
    6. ' ' → logprob: -19.250123977661133
    7. '	b' → logprob: -19.250123977661133
    8. '  ' → logprob: -19.625123977661133
    9. 'c' → logprob: -20.875123977661133
    10. '    ' → logprob: -20.875123977661133

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9743012671824545e-05
    2. '0' → logprob: -11.375020027160645
    3. '][' → logprob: -12.125020027160645
    4. '1' → logprob: -14.375020027160645
    5. ')[' → logprob: -14.375020027160645
    6. ')' → logprob: -14.625020027160645
    7. ' [' → logprob: -14.875020027160645
    8. '```' → logprob: -15.250020027160645
    9. '[
' → logprob: -16.000019073486328
    10. '   ' → logprob: -16.500019073486328

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. '1' → logprob: -15.375001907348633
    4. '   ' → logprob: -15.875001907348633
    5. '[' → logprob: -16.187501907348633
    6. '```' → logprob: -17.250001907348633
    7. '  ' → logprob: -17.500001907348633
    8. ']' → logprob: -17.875001907348633
    9. '۰' → logprob: -17.937501907348633
    10. '<|end|>' → logprob: -18.687501907348633

Token 54: '])' (ID: 4636)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00031425125780515373
    2. ')**' → logprob: -8.625314712524414
    3. '])' → logprob: -9.375314712524414
    4. ')' → logprob: -10.375314712524414
    5. '0' → logprob: -11.500314712524414
    6. '][' → logprob: -12.000314712524414
    7. '```' → logprob: -14.625314712524414
    8. '1' → logprob: -14.625314712524414
    9. ' )' → logprob: -15.375314712524414
    10. '   ' → logprob: -15.375314712524414

Token 55: '**' (ID: 410)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.0015345009742304683
    2. ')' → logprob: -6.501534461975098
    3. '[' → logprob: -10.626534461975098
    4. '**' → logprob: -12.126534461975098
    5. ' )' → logprob: -13.126534461975098
    6. '**)' → logprob: -15.751534461975098
    7. '0' → logprob: -16.501535415649414
    8. '   ' → logprob: -17.501535415649414
    9. '2' → logprob: -17.626535415649414
    10. '```' → logprob: -17.626535415649414

Token 56: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '۲' → logprob: -16.625123977661133
    4. ')' → logprob: -16.812623977661133
    5. '   ' → logprob: -16.937623977661133
    6. '```' → logprob: -17.062623977661133
    7. '<|end|>' → logprob: -17.437623977661133
    8. '  ' → logprob: -17.625123977661133
    9. '0' → logprob: -17.625123977661133
    10. '1' → logprob: -17.750123977661133

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48546302318573
    2. ' +' → logprob: -0.98546302318573
    3. '+(' → logprob: -4.4854631423950195
    4. ' +(' → logprob: -9.98546314239502
    5. '   ' → logprob: -13.48546314239502
    6. ')+(' → logprob: -14.61046314239502
    7. '+b' → logprob: -14.98546314239502
    8. ' ' → logprob: -15.23546314239502
    9. '+[' → logprob: -15.61046314239502
    10. '+a' → logprob: -15.98546314239502

Token 58: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0008633419638499618
    2. '(a' → logprob: -7.125863552093506
    3. '<|end|>' → logprob: -10.125863075256348
    4. ' ' → logprob: -11.625863075256348
    5. '(abs' → logprob: -12.625863075256348
    6. '(' → logprob: -13.250863075256348
    7. '(b' → logprob: -13.500863075256348
    8. ')' → logprob: -14.000863075256348
    9. '  ' → logprob: -14.000863075256348
    10. '   ' → logprob: -14.750863075256348

Token 59: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.023470476269721985
    2. 'a' → logprob: -3.898470401763916
    3. ' (' → logprob: -5.898470401763916
    4. '(' → logprob: -9.148470878601074
    5. ' a' → logprob: -10.023470878601074
    6. '(b' → logprob: -11.523470878601074
    7. '   ' → logprob: -11.648470878601074
    8. ' ' → logprob: -12.398470878601074
    9. 'b' → logprob: -13.273470878601074
    10. '  ' → logprob: -13.273470878601074

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. '1' → logprob: -12.625004768371582
    3. ' [' → logprob: -14.500004768371582
    4. '0' → logprob: -15.250004768371582
    5. '   ' → logprob: -15.500004768371582
    6. '][' → logprob: -15.625004768371582
    7. '-' → logprob: -16.0000057220459
    8. '.' → logprob: -16.0000057220459
    9. '2' → logprob: -16.6250057220459
    10. '[
' → logprob: -16.6250057220459

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002535948297008872
    2. '0' → logprob: -6.002535820007324
    3. '[' → logprob: -9.877535820007324
    4. ' ' → logprob: -11.877535820007324
    5. '```' → logprob: -14.252535820007324
    6. '   ' → logprob: -14.752535820007324
    7. '][' → logprob: -15.752535820007324
    8. ']' → logprob: -15.940035820007324
    9. '.' → logprob: -16.06503677368164
    10. '#' → logprob: -16.37753677368164

Token 62: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.713168740272522
    2. '-' → logprob: -1.213168740272522
    3. '0' → logprob: -1.963168740272522
    4. '<|end|>' → logprob: -3.7131686210632324
    5. ']' → logprob: -4.213168621063232
    6. ']-' → logprob: -4.838168621063232
    7. ')' → logprob: -4.963168621063232
    8. '<|end|>' → logprob: -4.963168621063232
    9. ' -' → logprob: -5.588168621063232
    10. '][' → logprob: -5.713168621063232

Token 63: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00018089536752086133
    2. ' b' → logprob: -8.625181198120117
    3. '1' → logprob: -14.375181198120117
    4. ' ' → logprob: -15.625181198120117
    5. '0' → logprob: -15.875181198120117
    6. '[' → logprob: -16.125181198120117
    7. ')b' → logprob: -16.375181198120117
    8. ')' → logprob: -16.500181198120117
    9. '(' → logprob: -17.500181198120117
    10. '	b' → logprob: -18.125181198120117

Token 64: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008655584417283535
    2. '0' → logprob: -5.133655548095703
    3. '][' → logprob: -6.383655548095703
    4. '1' → logprob: -7.008655548095703
    5. ']' → logprob: -9.258655548095703
    6. '-' → logprob: -11.758655548095703
    7. '])' → logprob: -11.883655548095703
    8. ')' → logprob: -12.133655548095703
    9. '   ' → logprob: -12.883655548095703
    10. ')[' → logprob: -13.008655548095703

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003805064770858735
    2. '0' → logprob: -7.875380516052246
    3. ' ' → logprob: -14.875380516052246
    4. '])' → logprob: -17.62537956237793
    5. '   ' → logprob: -17.87537956237793
    6. '```' → logprob: -17.87537956237793
    7. '[' → logprob: -19.00037956237793
    8. '  ' → logprob: -19.50037956237793
    9. '-' → logprob: -19.75037956237793
    10. '１' → logprob: -20.00037956237793

Token 66: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03233417868614197
    2. ')**' → logprob: -4.032334327697754
    3. ']' → logprob: -4.657334327697754
    4. ')' → logprob: -5.407334327697754
    5. ')])' → logprob: -10.907334327697754
    6. ']))' → logprob: -11.157334327697754
    7. '-' → logprob: -11.532334327697754
    8. '0' → logprob: -11.657334327697754
    9. '[' → logprob: -11.782334327697754
    10. '**' → logprob: -11.907334327697754

Token 67: '**' (ID: 410)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.3086019456386566
    2. '[' → logprob: -2.3086018562316895
    3. '**' → logprob: -2.3086018562316895
    4. '-' → logprob: -3.1836018562316895
    5. ')' → logprob: -4.0586018562316895
    6. '2' → logprob: -5.8086018562316895
    7. '))' → logprob: -6.6836018562316895
    8. ']' → logprob: -6.6836018562316895
    9. '0' → logprob: -7.0586018562316895
    10. '])' → logprob: -7.6836018562316895

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.493430894101039e-05
    2. '1' → logprob: -9.750075340270996
    3. '```' → logprob: -11.875075340270996
    4. ' ' → logprob: -12.500075340270996
    5. ')' → logprob: -13.750075340270996
    6. '-' → logprob: -13.937575340270996
    7. '**' → logprob: -14.062575340270996
    8. '²' → logprob: -14.625075340270996
    9. '0' → logprob: -14.687575340270996
    10. '[' → logprob: -15.437575340270996

Token 69: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024382755509577692
    2. '))' → logprob: -8.375244140625
    3. ')}' → logprob: -12.250244140625
    4. ')))' → logprob: -12.625244140625
    5. ')**' → logprob: -13.500244140625
    6. '   ' → logprob: -13.625244140625
    7. ' )' → logprob: -14.500244140625
    8. '}' → logprob: -14.750244140625
    9. '})' → logprob: -14.750244140625
    10. ')
' → logprob: -15.250244140625

Token 70: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.110487461090088
    2. 'best' → logprob: -2.110487461090088
    3. 'current' → logprob: -2.485487461090088
    4. 'answer' → logprob: -2.485487461090088
    5. 'path' → logprob: -2.610487461090088
    6. 'result' → logprob: -3.110487461090088
    7. 'min' → logprob: -3.360487461090088
    8. 'max' → logprob: -3.735487461090088
    9. 'visited' → logprob: -3.735487461090088
    10. 'angle' → logprob: -3.735487461090088

Token 71: ' angle' (ID: 16538)
  Prédit: ' angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -1.4055583477020264
    2. ' solve' → logprob: -1.5305583477020264
    3. ' rotate' → logprob: -2.4055583477020264
    4. ' main' → logprob: -2.6555583477020264
    5. ' best' → logprob: -2.7805583477020264
    6. ' max' → logprob: -3.2805583477020264
    7. ' polar' → logprob: -3.5305583477020264
    8. ' calculate' → logprob: -3.6555583477020264
    9. ' closest' → logprob: -3.7805583477020264
    10. ' angular' → logprob: -4.1555585861206055

Token 72: '_between' (ID: 124874)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1802966296672821
    2. '(' → logprob: -1.8052966594696045
    3. '_between' → logprob: -8.180296897888184
    4. '_diff' → logprob: -9.680296897888184
    5. '_' → logprob: -9.930296897888184
    6. '_(' → logprob: -10.805296897888184
    7. '((' → logprob: -10.930296897888184
    8. ' (' → logprob: -10.930296897888184
    9. '_difference' → logprob: -11.055296897888184
    10. '(A' → logprob: -11.055296897888184

Token 73: '(v' (ID: 6932)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.010014478117227554
    2. '(' → logprob: -4.635014533996582
    3. '(points' → logprob: -8.885014533996582
    4. '(angle' → logprob: -10.385014533996582
    5. 's' → logprob: -10.760014533996582
    6. '(x' → logprob: -11.135014533996582
    7. '_points' → logprob: -11.260014533996582
    8. '(A' → logprob: -12.135014533996582
    9. '<|end|>' → logprob: -12.135014533996582
    10. '(`' → logprob: -12.635014533996582

Token 74: '1' (ID: 16)
  Prédit: 'ectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ectors' → logprob: -0.1120760515332222
    2. ',' → logprob: -2.9870760440826416
    3. 'a' → logprob: -3.6120760440826416
    4. 'ector' → logprob: -5.237076282501221
    5. 'ects' → logprob: -5.237076282501221
    6. '1' → logprob: -5.487076282501221
    7. 'ect' → logprob: -5.612076282501221
    8. '):' → logprob: -5.737076282501221
    9. '(a' → logprob: -5.737076282501221
    10. ')' → logprob: -6.987076282501221

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021807955636177212
    2. ',v' → logprob: -8.500218391418457
    3. ' ,' → logprob: -11.375218391418457
    4. '):' → logprob: -13.625218391418457
    5. 'v' → logprob: -14.250218391418457
    6. '<|end|>' → logprob: -14.875218391418457
    7. 's' → logprob: -15.250218391418457
    8. ',
' → logprob: -15.625218391418457
    9. ')' → logprob: -15.625218391418457
    10. '‌,' → logprob: -16.62521743774414

Token 76: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5759527087211609
    2. ' v' → logprob: -0.8259527087211609
    3. ')' → logprob: -12.700952529907227
    4. '):
' → logprob: -13.200952529907227
    5. '	v' → logprob: -13.575952529907227
    6. '):' → logprob: -13.575952529907227
    7. ',' → logprob: -13.825952529907227
    8. ' ' → logprob: -13.950952529907227
    9. ',v' → logprob: -14.075952529907227
    10. ')v' → logprob: -14.200952529907227

Token 77: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29124173521995544
    2. ',' → logprob: -1.5412417650222778
    3. '0' → logprob: -4.541241645812988
    4. 'ector' → logprob: -4.791241645812988
    5. 'ectors' → logprob: -5.041241645812988
    6. '[' → logprob: -5.041241645812988
    7. ',v' → logprob: -5.666241645812988
    8. '2' → logprob: -7.541241645812988
    9. 'ec' → logprob: -7.541241645812988
    10. ')' → logprob: -7.791241645812988

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004458044422790408
    2. ',' → logprob: -8.250445365905762
    3. '):
' → logprob: -8.875445365905762
    4. ')' → logprob: -10.250445365905762
    5. ' ):' → logprob: -12.125445365905762
    6. ':' → logprob: -13.750445365905762
    7. '):
' → logprob: -14.250445365905762
    8. '   ' → logprob: -14.375445365905762
    9. '):

' → logprob: -14.625445365905762
    10. ')):' → logprob: -15.250445365905762

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02346523478627205
    2. 'import' → logprob: -4.023465156555176
    3. ' import' → logprob: -5.523465156555176
    4. '    ' → logprob: -7.023465156555176
    5. ' math' → logprob: -9.148465156555176
    6. ' return' → logprob: -9.898465156555176
    7. '(' → logprob: -10.148465156555176
    8. '       ' → logprob: -10.148465156555176
    9. 'math' → logprob: -10.648465156555176
    10. '  ' → logprob: -11.148465156555176

Token 80: ' #' (ID: 1069)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.3754575550556183
    2. 'math' → logprob: -2.625457525253296
    3. ' dot' → logprob: -3.000457525253296
    4. 'x' → logprob: -3.250457525253296
    5. 'dx' → logprob: -3.500457525253296
    6. 'import' → logprob: -3.625457525253296
    7. '   ' → logprob: -3.625457525253296
    8. ' math' → logprob: -3.875457525253296
    9. 'v' → logprob: -4.125457763671875
    10. 'return' → logprob: -4.375457763671875

Token 81: ' v' (ID: 323)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.48563024401664734
    2. ' dx' → logprob: -2.1106302738189697
    3. 'x' → logprob: -2.6106302738189697
    4. 'import' → logprob: -3.2356302738189697
    5. '   ' → logprob: -3.6106302738189697
    6. ' dot' → logprob: -3.8606302738189697
    7. ' x' → logprob: -3.8606302738189697
    8. 'vx' → logprob: -4.235630035400391
    9. 'v' → logprob: -4.360630035400391
    10. 'dot' → logprob: -4.485630035400391

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.150950089097023
    2. 'x' → logprob: -2.5259501934051514
    3. '   ' → logprob: -3.0259501934051514
    4. 'ector' → logprob: -6.275949954986572
    5. ' =' → logprob: -6.525949954986572
    6. ' return' → logprob: -6.525949954986572
    7. 'import' → logprob: -6.650949954986572
    8. 'ectors' → logprob: -7.275949954986572
    9. '[' → logprob: -7.400949954986572
    10. 'ection' → logprob: -7.400949954986572

Token 83: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.677813708782196
    2. 'x' → logprob: -1.6778137683868408
    3. 'import' → logprob: -2.552813768386841
    4. ')' → logprob: -2.677813768386841
    5. '[' → logprob: -2.677813768386841
    6. '=' → logprob: -3.427813768386841
    7. ' import' → logprob: -3.802813768386841
    8. '_x' → logprob: -4.677813529968262
    9. ':' → logprob: -5.302813529968262
    10. ',' → logprob: -5.427813529968262

Token 84: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.32738783955574036
    2. 'v' → logprob: -1.327387809753418
    3. 'import' → logprob: -4.452387809753418
    4. '   ' → logprob: -7.577387809753418
    5. 'def' → logprob: -7.577387809753418
    6. 'from' → logprob: -8.702387809753418
    7. ' import' → logprob: -8.952387809753418
    8. 'return' → logprob: -8.952387809753418
    9. '<|end|>' → logprob: -9.077387809753418
    10. ')' → logprob: -9.202387809753418

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.45425599813461304
    2. '1' → logprob: -1.3292560577392578
    3. ' v' → logprob: -3.454256057739258
    4. '[' → logprob: -3.954256057739258
    5. '0' → logprob: -4.079256057739258
    6. ')' → logprob: -4.204256057739258
    7. 'v' → logprob: -4.829256057739258
    8. ' ' → logprob: -6.204256057739258
    9. 's' → logprob: -6.704256057739258
    10. ',' → logprob: -6.704256057739258

Token 86: ' are' (ID: 553)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.371644526720047
    2. ' )' → logprob: -1.2466444969177246
    3. '[' → logprob: -4.746644496917725
    4. '):' → logprob: -4.996644496917725
    5. '.' → logprob: -6.121644496917725
    6. ' ):' → logprob: -6.246644496917725
    7. ':' → logprob: -6.746644496917725
    8. ' ' → logprob: -7.371644496917725
    9. ',' → logprob: -7.371644496917725
    10. '<|end|>' → logprob: -8.246644973754883

Token 87: ' vectors' (ID: 52254)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6040416955947876
    2. ' (' → logprob: -0.9790416955947876
    3. '(
' → logprob: -3.104041576385498
    4. ' (
' → logprob: -4.104041576385498
    5. ' v' → logprob: -4.354041576385498
    6. 'v' → logprob: -6.229041576385498
    7. '[' → logprob: -7.729041576385498
    8. '(v' → logprob: -8.229042053222656
    9. ' a' → logprob: -8.604042053222656
    10. ')' → logprob: -9.104042053222656

Token 88: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19907277822494507
    2. ',' → logprob: -2.07407283782959
    3. '<|end|>' → logprob: -4.44907283782959
    4. '):' → logprob: -4.57407283782959
    5. '[' → logprob: -4.69907283782959
    6. '   ' → logprob: -5.19907283782959
    7. ':' → logprob: -5.32407283782959
    8. ' )' → logprob: -5.44907283782959
    9. '):
' → logprob: -6.07407283782959
    10. ' ' → logprob: -6.44907283782959

Token 89: 'dx' (ID: 22100)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09945245832204819
    2. ',' → logprob: -3.099452495574951
    3. '2' → logprob: -3.474452495574951
    4. ' )' → logprob: -5.474452495574951
    5. '1' → logprob: -6.099452495574951
    6. '(' → logprob: -6.224452495574951
    7. 'x' → logprob: -6.224452495574951
    8. 'v' → logprob: -6.474452495574951
    9. 'a' → logprob: -6.724452495574951
    10. 'tuple' → logprob: -6.974452495574951

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007673407671973109
    2. '1' → logprob: -7.500767230987549
    3. ' ,' → logprob: -9.250767707824707
    4. ')' → logprob: -10.000767707824707
    5. ',)' → logprob: -10.750767707824707
    6. '[' → logprob: -11.375767707824707
    7. '0' → logprob: -11.750767707824707
    8. ',
' → logprob: -11.875767707824707
    9. ',y' → logprob: -12.375767707824707
    10. '<|end|>' → logprob: -12.375767707824707

Token 91: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.07890543341636658
    2. ' dy' → logprob: -2.5789053440093994
    3. ')' → logprob: -11.32890510559082
    4. ' ' → logprob: -13.07890510559082
    5. '.dy' → logprob: -14.32890510559082
    6. ',' → logprob: -15.32890510559082
    7. ' )' → logprob: -15.45390510559082
    8. 'd' → logprob: -15.57890510559082
    9. '   ' → logprob: -16.20390510559082
    10. 'dym' → logprob: -16.82890510559082

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019401769386604428
    2. '):' → logprob: -6.2519402503967285
    3. '),' → logprob: -12.37693977355957
    4. ')
' → logprob: -13.12693977355957
    5. ',' → logprob: -13.37693977355957
    6. ' )' → logprob: -13.50193977355957
    7. '):
' → logprob: -14.25193977355957
    8. '   ' → logprob: -15.37693977355957
    9. ')...' → logprob: -15.50193977355957
    10. '#' → logprob: -15.75193977355957

Token 93: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6869533658027649
    2. ':' → logprob: -1.3119533061981201
    3. ')' → logprob: -1.6869533061981201
    4. '   ' → logprob: -3.56195330619812
    5. ' :' → logprob: -5.436953544616699
    6. ',' → logprob: -5.561953544616699
    7. '):
' → logprob: -5.936953544616699
    8. ' ' → logprob: -7.061953544616699
    9. ':
' → logprob: -7.561953544616699
    10. ' ):' → logprob: -7.811953544616699

Token 94: ' dot' (ID: 16579)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4009855389595032
    2. '   ' → logprob: -1.6509854793548584
    3. ' \' → logprob: -3.5259854793548584
    4. ' )' → logprob: -3.7759854793548584
    5. ')' → logprob: -4.0259857177734375
    6. '1' → logprob: -4.5259857177734375
    7. '    ' → logprob: -4.7759857177734375
    8. ',' → logprob: -4.9009857177734375
    9. ' ,' → logprob: -4.9009857177734375
    10. ' 
' → logprob: -4.9009857177734375

Token 95: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47766929864883423
    2. ')' → logprob: -1.7276692390441895
    3. '_' → logprob: -2.2276692390441895
    4. ',' → logprob: -3.1026692390441895
    5. '<|end|>' → logprob: -4.1026692390441895
    6. '(' → logprob: -4.6026692390441895
    7. ' )' → logprob: -4.7276692390441895
    8. '<|end|>' → logprob: -5.7276692390441895
    9. '=' → logprob: -6.1026692390441895
    10. '_product' → logprob: -6.7276692390441895

Token 96: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.20148447155952454
    2. 'v' → logprob: -1.7014844417572021
    3. '(v' → logprob: -10.076484680175781
    4. ' (' → logprob: -10.951484680175781
    5. '(' → logprob: -12.576484680175781
    6. '	v' → logprob: -12.701484680175781
    7. ' ' → logprob: -12.951484680175781
    8. '   ' → logprob: -14.576484680175781
    9. '1' → logprob: -14.576484680175781
    10. ' ' → logprob: -14.701484680175781

Token 97: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002304650843143463
    2. '1' → logprob: -6.502304553985596
    3. '(' → logprob: -8.377305030822754
    4. ' ' → logprob: -9.252305030822754
    5. '_' → logprob: -9.502305030822754
    6. ',' → logprob: -9.627305030822754
    7. '"' → logprob: -9.877305030822754
    8. ' [' → logprob: -10.002305030822754
    9. '.' → logprob: -10.127305030822754
    10. ''' → logprob: -10.502305030822754

Token 98: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002712976885959506
    2. '.' → logprob: -6.877713203430176
    3. ',' → logprob: -7.002713203430176
    4. ' ' → logprob: -7.752713203430176
    5. '<|end|>' → logprob: -8.877713203430176
    6. ')' → logprob: -9.252713203430176
    7. '['' → logprob: -10.877713203430176
    8. '```' → logprob: -11.377713203430176
    9. ''' → logprob: -11.940213203430176
    10. '<|end|>' → logprob: -12.002713203430176

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -12.12501049041748
    3. '[' → logprob: -12.25001049041748
    4. '1' → logprob: -18.375009536743164
    5. ']' → logprob: -19.625009536743164
    6. ')' → logprob: -19.687509536743164
    7. '۰' → logprob: -19.812509536743164
    8. '

' → logprob: -20.062509536743164
    9. 'x' → logprob: -20.250009536743164
    10. '_' → logprob: -20.250009536743164

Token 100: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5764726996421814
    2. '*' → logprob: -0.8264726996421814
    3. ')' → logprob: -8.076472282409668
    4. '*v' → logprob: -9.201472282409668
    5. '*)' → logprob: -9.701472282409668
    6. ' ' → logprob: -10.951472282409668
    7. ' )' → logprob: -11.201472282409668
    8. ' *)' → logprob: -11.451472282409668
    9. ',' → logprob: -12.326472282409668
    10. '*object' → logprob: -12.701472282409668

Token 101: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0206720617134124e-05
    2. ' v' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -18.375009536743164
    4. '2' → logprob: -18.625009536743164
    5. '	v' → logprob: -18.875009536743164
    6. ')v' → logprob: -19.125009536743164
    7. ' ' → logprob: -20.375009536743164
    8. 'vq' → logprob: -20.875009536743164
    9. '_v' → logprob: -21.000009536743164
    10. '*v' → logprob: -21.000009536743164

Token 102: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22583195567131042
    2. '1' → logprob: -1.6008319854736328
    3. 'ector' → logprob: -8.350831985473633
    4. '[' → logprob: -9.725831985473633
    5. 'ctor' → logprob: -10.225831985473633
    6. '4' → logprob: -10.850831985473633
    7. 'ectors' → logprob: -11.475831985473633
    8. '```' → logprob: -11.475831985473633
    9. 'x' → logprob: -11.725831985473633
    10. 'ct' → logprob: -11.850831985473633

Token 103: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011830847943201661
    2. '0' → logprob: -6.876183032989502
    3. ' ' → logprob: -10.00118350982666
    4. ' +' → logprob: -10.00118350982666
    5. '<|end|>' → logprob: -10.37618350982666
    6. '+' → logprob: -10.62618350982666
    7. '[
' → logprob: -13.50118350982666
    8. ',' → logprob: -14.25118350982666
    9. ' [' → logprob: -14.50118350982666
    10. '```' → logprob: -15.62618350982666

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '1' → logprob: -16.125
    4. '[' → logprob: -18.25
    5. ']' → logprob: -18.5
    6. '۰' → logprob: -18.875
    7. '<|end|>' → logprob: -19.0
    8. '   ' → logprob: -19.5
    9. '```' → logprob: -19.5
    10. ')' → logprob: -19.6875

Token 105: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20144763588905334
    2. '+' → logprob: -1.701447606086731
    3. ' ' → logprob: -11.076447486877441
    4. ')' → logprob: -11.576447486877441
    5. '-' → logprob: -12.451447486877441
    6. '+)' → logprob: -13.451447486877441
    7. ' +
' → logprob: -14.201447486877441
    8. ' +

' → logprob: -14.201447486877441
    9. '<|end|>' → logprob: -14.576447486877441
    10. ' plus' → logprob: -14.701447486877441

Token 106: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2014177292585373
    2. '+' → logprob: -1.7014176845550537
    3. ' ' → logprob: -12.576417922973633
    4. ' plus' → logprob: -14.951417922973633
    5. ' +
' → logprob: -14.951417922973633
    6. ' +

' → logprob: -16.701417922973633
    7. '+b' → logprob: -16.951417922973633
    8. '+)' → logprob: -17.326417922973633
    9. ' +
' → logprob: -17.326417922973633
    10. '-' → logprob: -17.451417922973633

Token 107: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.1602250337600708
    2. 'v' → logprob: -1.9102250337600708
    3. '	v' → logprob: -14.535224914550781
    4. ' ' → logprob: -15.035224914550781
    5. ' ' → logprob: -17.66022491455078
    6. ')v' → logprob: -17.78522491455078
    7. '1' → logprob: -18.16022491455078
    8. '_v' → logprob: -18.28522491455078
    9. '    ' → logprob: -19.53522491455078
    10. '$v' → logprob: -19.53522491455078

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. '2' → logprob: -11.500015258789062
    3. '0' → logprob: -12.750015258789062
    4. '[' → logprob: -13.750015258789062
    5. 'ector' → logprob: -14.500015258789062
    6. 'ectors' → logprob: -16.000015258789062
    7. '```' → logprob: -17.000015258789062
    8. 'ctor' → logprob: -18.125015258789062
    9. 'ektor' → logprob: -18.875015258789062
    10. ' ' → logprob: -19.250015258789062

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1279553291387856e-05
    2. '0' → logprob: -12.125011444091797
    3. '1' → logprob: -12.500011444091797
    4. '[
' → logprob: -14.000011444091797
    5. '```' → logprob: -15.250011444091797
    6. ' ' → logprob: -15.250011444091797
    7. ' [' → logprob: -15.375011444091797
    8. '][' → logprob: -16.125011444091797
    9. '2' → logprob: -16.625011444091797
    10. '.' → logprob: -16.750011444091797

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010336418636143208
    2. '0' → logprob: -6.876033782958984
    3. ' ' → logprob: -14.251033782958984
    4. '```' → logprob: -16.751033782958984
    5. 'v' → logprob: -16.876033782958984
    6. '   ' → logprob: -17.001033782958984
    7. '-' → logprob: -17.251033782958984
    8. '[' → logprob: -18.126033782958984
    9. '

' → logprob: -18.501033782958984
    10. '2' → logprob: -18.751033782958984

Token 111: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.006144576705992222
    2. ']*' → logprob: -6.0061445236206055
    3. ')*' → logprob: -6.5061445236206055
    4. '[' → logprob: -6.7561445236206055
    5. '*v' → logprob: -7.1311445236206055
    6. ')' → logprob: -9.881144523620605
    7. '0' → logprob: -10.006144523620605
    8. ']' → logprob: -10.631144523620605
    9. '()*' → logprob: -11.256144523620605
    10. '*)' → logprob: -11.381144523620605

Token 112: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.5577775128767826e-06
    2. ' v' → logprob: -12.125005722045898
    3. '	v' → logprob: -19.2500057220459
    4. ')v' → logprob: -19.3750057220459
    5. '<|end|>' → logprob: -19.7500057220459
    6. ' ' → logprob: -20.0000057220459
    7. '*v' → logprob: -20.8750057220459
    8. '(v' → logprob: -21.1250057220459
    9. '2' → logprob: -21.2500057220459
    10. 'b' → logprob: -21.3750057220459

Token 113: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.625001907348633
    3. ' ' → logprob: -16.500001907348633
    4. '```' → logprob: -16.500001907348633
    5. '0' → logprob: -17.000001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '<|end|>' → logprob: -19.500001907348633
    8. '-' → logprob: -20.000001907348633
    9. ']' → logprob: -20.250001907348633
    10. '  ' → logprob: -20.687501907348633

Token 114: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08918742835521698
    2. '1' → logprob: -2.4641873836517334
    3. '*' → logprob: -9.464187622070312
    4. ']' → logprob: -9.714187622070312
    5. '```' → logprob: -10.839187622070312
    6. '*[' → logprob: -10.964187622070312
    7. '<|end|>' → logprob: -10.964187622070312
    8. '-' → logprob: -11.464187622070312
    9. '[
' → logprob: -11.589187622070312
    10. ')' → logprob: -11.589187622070312

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.750004768371582
    3. '0' → logprob: -13.500004768371582
    4. ']' → logprob: -15.375004768371582
    5. '])' → logprob: -16.5000057220459
    6. '[' → logprob: -17.3750057220459
    7. '   ' → logprob: -17.5000057220459
    8. '```' → logprob: -17.5000057220459
    9. ')' → logprob: -18.2500057220459
    10. '  ' → logprob: -18.6875057220459

Token 116: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016265720478259027
    2. ' )' → logprob: -9.625163078308105
    3. '<|end|>' → logprob: -9.875163078308105
    4. '}' → logprob: -11.500163078308105
    5. ')
' → logprob: -12.250163078308105
    6. '   ' → logprob: -12.500163078308105
    7. ' ' → logprob: -12.625163078308105
    8. ',' → logprob: -13.000163078308105
    9. '<|end|>' → logprob: -13.000163078308105
    10. '')' → logprob: -13.125163078308105

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13855096697807312
    2. '
' → logprob: -2.3885509967803955
    3. '    
' → logprob: -3.8885509967803955
    4. '\n' → logprob: -5.138550758361816
    5. ' 
' → logprob: -5.763550758361816
    6. '\' → logprob: -6.263550758361816
    7. '  
' → logprob: -6.388550758361816
    8. '   
' → logprob: -6.638550758361816
    9. ',' → logprob: -7.013550758361816
    10. 'n' → logprob: -7.638550758361816

Token 118: ' len' (ID: 4631)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5233664512634277
    2. '\' → logprob: -1.6483664512634277
    3. '(' → logprob: -2.6483664512634277
    4. '.' → logprob: -2.7733664512634277
    5. '*' → logprob: -3.0233664512634277
    6. ' /' → logprob: -3.2733664512634277
    7. ' 
' → logprob: -3.5233664512634277
    8. ',' → logprob: -3.5233664512634277
    9. 'import' → logprob: -3.5233664512634277
    10. ' \' → logprob: -3.5233664512634277

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3283315598964691
    2. '_v' → logprob: -1.3283315896987915
    3. '(v' → logprob: -4.578331470489502
    4. 'v' → logprob: -6.203331470489502
    5. '_' → logprob: -6.828331470489502
    6. 'A' → logprob: -7.328331470489502
    7. 's' → logprob: -8.07833194732666
    8. '(' → logprob: -8.32833194732666
    9. 'a' → logprob: -9.07833194732666
    10. '_a' → logprob: -9.20333194732666

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1329624056816101
    2. '=' → logprob: -2.132962465286255
    3. ' ' → logprob: -6.507962226867676
    4. '1' → logprob: -6.507962226867676
    5. '_' → logprob: -6.757962226867676
    6. 'v' → logprob: -7.382962226867676
    7. '(' → logprob: -8.132962226867676
    8. ',' → logprob: -8.132962226867676
    9. '(v' → logprob: -8.382962226867676
    10. ' *' → logprob: -9.382962226867676

Token 121: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3528793752193451
    2. 'math' → logprob: -1.6028794050216675
    3. '(math' → logprob: -2.352879285812378
    4. ' (' → logprob: -7.852879524230957
    5. 'dist' → logprob: -8.352879524230957
    6. ' dist' → logprob: -9.102879524230957
    7. '(dist' → logprob: -9.227879524230957
    8. '(' → logprob: -9.477879524230957
    9. '((' → logprob: -11.477879524230957
    10. ' ' → logprob: -13.352879524230957

Token 122: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.001250942936167121
    2. '.' → logprob: -7.501250743865967
    3. '.h' → logprob: -7.626250743865967
    4. '.atan' → logprob: -9.126251220703125
    5. '.dist' → logprob: -9.376251220703125
    6. 'sqrt' → logprob: -11.501251220703125
    7. '.ac' → logprob: -12.376251220703125
    8. '.Sqrt' → logprob: -14.251251220703125
    9. 'dist' → logprob: -15.376251220703125
    10. '.pow' → logprob: -15.376251220703125

Token 123: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.000742803153116256
    2. 'v' → logprob: -8.00074291229248
    3. '((' → logprob: -8.50074291229248
    4. '(' → logprob: -8.50074291229248
    5. '(len' → logprob: -14.75074291229248
    6. ')v' → logprob: -16.375741958618164
    7. ' v' → logprob: -17.125741958618164
    8. '(

' → logprob: -17.625741958618164
    9. ' (' → logprob: -17.750741958618164
    10. '(
' → logprob: -18.125741958618164

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5593073964118958
    2. '[' → logprob: -0.9343073964118958
    3. '(v' → logprob: -4.30930757522583
    4. '2' → logprob: -4.55930757522583
    5. '(' → logprob: -4.68430757522583
    6. 'v' → logprob: -6.43430757522583
    7. '**' → logprob: -7.80930757522583
    8. '```' → logprob: -9.434307098388672
    9. '0' → logprob: -9.559307098388672
    10. '_' → logprob: -10.059307098388672

Token 125: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -14.500000953674316
    3. '```' → logprob: -15.125000953674316
    4. '(' → logprob: -15.500000953674316
    5. ' [' → logprob: -16.375001907348633
    6. '
' → logprob: -17.000001907348633
    7. ')' → logprob: -17.375001907348633
    8. '**' → logprob: -17.625001907348633
    9. '

' → logprob: -17.625001907348633
    10. '[
' → logprob: -17.750001907348633

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.2378600735682994e-05
    2. '[' → logprob: -10.375032424926758
    3. '01' → logprob: -14.750032424926758
    4. ' ' → logprob: -15.750032424926758
    5. '```' → logprob: -16.125032424926758
    6. '02' → logprob: -16.625032424926758
    7. '012' → logprob: -17.125032424926758
    8. '00' → logprob: -17.250032424926758
    9. '2' → logprob: -17.375032424926758
    10. '(' → logprob: -17.500032424926758

Token 127: ']' (ID: 60)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -8.006006828509271e-05
    2. ')**' → logprob: -9.500080108642578
    3. '*' → logprob: -12.625080108642578
    4. '**)' → logprob: -13.750080108642578
    5. ')' → logprob: -15.000080108642578
    6. ' **' → logprob: -15.125080108642578
    7. '**

' → logprob: -16.125080108642578
    8. '***' → logprob: -16.750080108642578
    9. ']' → logprob: -17.000080108642578
    10. '*v' → logprob: -17.250080108642578

Token 128: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -5.073596548754722e-05
    2. '*' → logprob: -10.12505054473877
    3. ')**' → logprob: -11.75005054473877
    4. '**)' → logprob: -13.50005054473877
    5. ' **' → logprob: -14.75005054473877
    6. '*v' → logprob: -14.75005054473877
    7. '***' → logprob: -15.00005054473877
    8. ')' → logprob: -15.75005054473877
    9. '```' → logprob: -17.250051498413086
    10. '2' → logprob: -17.750051498413086

Token 129: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -11.000019073486328
    3. '```' → logprob: -14.250019073486328
    4. '
' → logprob: -14.750019073486328
    5. ')' → logprob: -14.875019073486328
    6. '۲' → logprob: -15.750019073486328
    7. '²' → logprob: -15.812519073486328
    8. '   ' → logprob: -15.875019073486328
    9. '

' → logprob: -16.562519073486328
    10. ',' → logprob: -16.937519073486328

Token 130: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1128331646323204
    2. ' +' → logprob: -2.237833261489868
    3. ')' → logprob: -11.862833023071289
    4. '+)' → logprob: -13.737833023071289
    5. ')+' → logprob: -14.112833023071289
    6. ',' → logprob: -14.362833023071289
    7. '+

' → logprob: -15.112833023071289
    8. '<|end|>' → logprob: -16.11283302307129
    9. '+,' → logprob: -16.36283302307129
    10. ' ' → logprob: -16.48783302307129

Token 131: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.627176768844947e-05
    2. ' v' → logprob: -9.250096321105957
    3. '(v' → logprob: -16.62509536743164
    4. ')v' → logprob: -17.87509536743164
    5. '	v' → logprob: -18.62509536743164
    6. ')' → logprob: -20.12509536743164
    7. '[v' → logprob: -21.12509536743164
    8. '_v' → logprob: -22.12509536743164
    9. '   ' → logprob: -22.37509536743164
    10. 've' → logprob: -22.37509536743164

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20246830582618713
    2. 'v' → logprob: -1.7024682760238647
    3. ' v' → logprob: -7.577468395233154
    4. '[' → logprob: -7.702468395233154
    5. ' ' → logprob: -9.952467918395996
    6. '(v' → logprob: -11.452467918395996
    7. ')v' → logprob: -11.952467918395996
    8. ')' → logprob: -12.327467918395996
    9. '.v' → logprob: -12.452467918395996
    10. '(' → logprob: -12.452467918395996

Token 133: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3132901191711426
    2. '1' → logprob: -1.3132901191711426
    3. '(' → logprob: -11.688289642333984
    4. ' ' → logprob: -11.938289642333984
    5. ',' → logprob: -12.438289642333984
    6. '```' → logprob: -13.313289642333984
    7. '2' → logprob: -13.813289642333984
    8. '
' → logprob: -14.188289642333984
    9. '.' → logprob: -14.188289642333984
    10. ']' → logprob: -14.313289642333984

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. 'v' → logprob: -14.500001907348633
    3. '[' → logprob: -14.625001907348633
    4. ' ' → logprob: -14.875001907348633
    5. '0' → logprob: -15.375001907348633
    6. '```' → logprob: -16.000001907348633
    7. '(' → logprob: -16.500001907348633
    8. '2' → logprob: -16.750001907348633
    9. '-' → logprob: -17.250001907348633
    10. '`' → logprob: -17.687501907348633

Token 135: ']' (ID: 60)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6612085103988647
    2. ']' → logprob: -1.1612085103988647
    3. '[' → logprob: -2.0362086296081543
    4. '2' → logprob: -3.2862086296081543
    5. '0' → logprob: -6.286208629608154
    6. ' ' → logprob: -7.661208629608154
    7. '1' → logprob: -9.536208152770996
    8. ')**' → logprob: -9.786208152770996
    9. '```' → logprob: -10.036208152770996
    10. ' ]' → logprob: -10.286208152770996

Token 136: '**' (ID: 410)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.054992079734802246
    2. '**' → logprob: -2.929992198944092
    3. ' ' → logprob: -9.429991722106934
    4. '<|end|>' → logprob: -11.429991722106934
    5. '*' → logprob: -12.679991722106934
    6. ')' → logprob: -12.679991722106934
    7. '²' → logprob: -12.804991722106934
    8. '```' → logprob: -12.929991722106934
    9. ']' → logprob: -13.304991722106934
    10. '0' → logprob: -13.804991722106934

Token 137: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.73183855926618e-05
    2. ' ' → logprob: -9.500077247619629
    3. '```' → logprob: -14.250077247619629
    4. '1' → logprob: -14.750077247619629
    5. '۲' → logprob: -14.812577247619629
    6. '0' → logprob: -16.187578201293945
    7. ' ' → logprob: -16.375078201293945
    8. '   ' → logprob: -16.562578201293945
    9. '²' → logprob: -16.687578201293945
    10. '**' → logprob: -16.687578201293945

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019245444855187088
    2. '*' → logprob: -9.375192642211914
    3. ' )' → logprob: -10.000192642211914
    4. '+' → logprob: -11.250192642211914
    5. ')*' → logprob: -11.250192642211914
    6. ',' → logprob: -11.875192642211914
    7. ')
' → logprob: -12.000192642211914
    8. '),' → logprob: -12.375192642211914
    9. '   ' → logprob: -12.625192642211914
    10. '))' → logprob: -12.750192642211914

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47231122851371765
    2. ')' → logprob: -2.22231125831604
    3. '*' → logprob: -2.22231125831604
    4. ' len' → logprob: -2.59731125831604
    5. ' ' → logprob: -3.34731125831604
    6. ' *' → logprob: -4.847311019897461
    7. ',' → logprob: -4.972311019897461
    8. 'len' → logprob: -4.972311019897461
    9. ' )' → logprob: -5.097311019897461
    10. '    
' → logprob: -5.972311019897461

Token 140: ' len' (ID: 4631)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0799779891967773
    2. ''' → logprob: -1.3299779891967773
    3. ' len' → logprob: -2.0799779891967773
    4. '"' → logprob: -2.5799779891967773
    5. 'len' (adapté à ' len') → logprob: -3.3299779891967773
    6. '1' → logprob: -3.5799779891967773
    7. 'v' → logprob: -3.7049779891967773
    8. ' v' → logprob: -3.7049779891967773
    9. ' )' → logprob: -4.329977989196777
    10. ')' → logprob: -4.454977989196777

Token 141: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '(v' → logprob: -14.125000953674316
    3. '(' → logprob: -15.000000953674316
    4. '_' → logprob: -16.625001907348633
    5. 'v' → logprob: -16.875001907348633
    6. ' ' → logprob: -17.125001907348633
    7. '1' → logprob: -17.375001907348633
    8. '２' → logprob: -17.625001907348633
    9. '```' → logprob: -17.625001907348633
    10. '۲' → logprob: -18.250001907348633

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011057606898248196
    2. '=' → logprob: -4.511057376861572
    3. ')' → logprob: -12.13605785369873
    4. ' ' → logprob: -12.51105785369873
    5. ' =)' → logprob: -15.13605785369873
    6. ' )' → logprob: -15.38605785369873
    7. ')=' → logprob: -16.386056900024414
    8. ',' → logprob: -16.761056900024414
    9. '<|end|>' → logprob: -17.261056900024414
    10. '  ' → logprob: -17.386056900024414

Token 143: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.40865182876586914
    2. 'math' → logprob: -1.1586518287658691
    3. ' v' → logprob: -4.158651828765869
    4. 'v' → logprob: -5.158651828765869
    5. '(v' → logprob: -9.283651351928711
    6. '(math' → logprob: -9.783651351928711
    7. ' (' → logprob: -11.533651351928711
    8. 'm' → logprob: -12.408651351928711
    9. '(' → logprob: -13.408651351928711
    10. 'Math' → logprob: -15.158651351928711

Token 144: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0013304755557328463
    2. '.' → logprob: -6.626330375671387
    3. '.Sqrt' → logprob: -12.501330375671387
    4. 'sqrt' → logprob: -14.501330375671387
    5. '.s' → logprob: -17.126331329345703
    6. '.atan' → logprob: -17.376331329345703
    7. '.sin' → logprob: -17.376331329345703
    8. '.pi' → logprob: -17.501331329345703
    9. '```' → logprob: -17.626331329345703
    10. '.pow' → logprob: -17.751331329345703

Token 145: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.7968066206085496e-05
    2. '(' → logprob: -10.500027656555176
    3. ' (' → logprob: -14.750027656555176
    4. 'v' → logprob: -17.500028610229492
    5. '(vector' → logprob: -18.875028610229492
    6. '((' → logprob: -19.875028610229492
    7. '(var' → logprob: -20.125028610229492
    8. '(
' → logprob: -20.625028610229492
    9. '(s' → logprob: -21.375028610229492
    10. '(vec' → logprob: -21.500028610229492

Token 146: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10065669566392899
    2. '2' → logprob: -2.350656747817993
    3. 'v' → logprob: -8.225656509399414
    4. '(' → logprob: -9.225656509399414
    5. '1' → logprob: -9.600656509399414
    6. '```' → logprob: -11.725656509399414
    7. '0' → logprob: -12.225656509399414
    8. '[
' → logprob: -13.725656509399414
    9. '{' → logprob: -14.600656509399414
    10. '()[' → logprob: -15.350656509399414

Token 147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.3458322731312364e-06
    2. '0' → logprob: -11.875007629394531
    3. '**' → logprob: -15.375007629394531
    4. '```' → logprob: -16.62500762939453
    5. '<|end|>' → logprob: -16.87500762939453
    6. '[
' → logprob: -17.62500762939453
    7. ' [' → logprob: -18.37500762939453
    8. ' ' → logprob: -18.50000762939453
    9. ')' → logprob: -19.12500762939453
    10. '2' → logprob: -19.12500762939453

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001596771035110578
    2. '[' → logprob: -8.75015926361084
    3. ' ' → logprob: -14.37515926361084
    4. '1' → logprob: -14.75015926361084
    5. '```' → logprob: -16.250160217285156
    6. '2' → logprob: -17.312660217285156
    7. '(' → logprob: -17.375160217285156
    8. '-' → logprob: -17.875160217285156
    9. '۰' → logprob: -18.500160217285156
    10. ')' → logprob: -18.687660217285156

Token 149: ']' (ID: 60)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.18001848459243774
    2. '[' → logprob: -1.805018424987793
    3. '0' → logprob: -9.180018424987793
    4. '2' → logprob: -9.680018424987793
    5. ' **' → logprob: -10.180018424987793
    6. ']' → logprob: -10.180018424987793
    7. ' ' → logprob: -11.680018424987793
    8. ')**' → logprob: -11.930018424987793
    9. ')' → logprob: -12.430018424987793
    10. '```' → logprob: -12.430018424987793

Token 150: '**' (ID: 410)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04868149757385254
    2. '**' → logprob: -3.0486814975738525
    3. '0' → logprob: -9.423681259155273
    4. '2' → logprob: -11.673681259155273
    5. '```' → logprob: -13.923681259155273
    6. ' **' → logprob: -14.048681259155273
    7. ']' → logprob: -14.298681259155273
    8. '*' → logprob: -14.423681259155273
    9. ')**' → logprob: -14.423681259155273
    10. ')' → logprob: -15.048681259155273

Token 151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -10.500051498413086
    3. '```' → logprob: -11.625051498413086
    4. '**' → logprob: -12.125051498413086
    5. '[' → logprob: -13.625051498413086
    6. ')' → logprob: -13.625051498413086
    7. '²' → logprob: -13.937551498413086
    8. '1' → logprob: -14.125051498413086
    9. '0' → logprob: -14.125051498413086
    10. '۲' → logprob: -14.437551498413086

Token 152: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03395456820726395
    2. '+' → logprob: -3.408954620361328
    3. ')' → logprob: -8.283954620361328
    4. '**' → logprob: -10.283954620361328
    5. ' )' → logprob: -11.783954620361328
    6. ' ' → logprob: -12.408954620361328
    7. '*' → logprob: -13.533954620361328
    8. ' ' → logprob: -13.533954620361328
    9. '<|end|>' → logprob: -13.658954620361328
    10. ')+' → logprob: -13.783954620361328

Token 153: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.14268216490745544
    2. ' v' → logprob: -2.0176820755004883
    3. ')v' → logprob: -13.267682075500488
    4. ' ' → logprob: -13.517682075500488
    5. ')' → logprob: -14.017682075500488
    6. '	v' → logprob: -14.142682075500488
    7. '2' → logprob: -14.267682075500488
    8. '<|end|>' → logprob: -14.517682075500488
    9. '(v' → logprob: -15.017682075500488
    10. 'b' → logprob: -15.142682075500488

Token 154: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006409500492736697
    2. '1' → logprob: -8.250640869140625
    3. 'v' → logprob: -8.250640869140625
    4. '[' → logprob: -9.125640869140625
    5. '```' → logprob: -11.875640869140625
    6. '(' → logprob: -13.500640869140625
    7. '0' → logprob: -14.625640869140625
    8. ' ' → logprob: -15.125640869140625
    9. '-' → logprob: -16.000640869140625
    10. '(v' → logprob: -16.125640869140625

Token 155: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007572157774120569
    2. '1' → logprob: -7.250757217407227
    3. '**' → logprob: -10.000757217407227
    4. '```' → logprob: -13.875757217407227
    5. '2' → logprob: -15.250757217407227
    6. ' ' → logprob: -15.375757217407227
    7. ')' → logprob: -16.125757217407227
    8. ']' → logprob: -16.250757217407227
    9. ' [' → logprob: -16.500757217407227
    10. '0' → logprob: -16.750757217407227

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14308148622512817
    2. '2' → logprob: -2.0180814266204834
    3. ' ' → logprob: -8.143081665039062
    4. '[' → logprob: -10.393081665039062
    5. '0' → logprob: -10.518081665039062
    6. '```' → logprob: -10.768081665039062
    7. '21' → logprob: -11.955581665039062
    8. '20' → logprob: -12.768081665039062
    9. '**' → logprob: -12.830581665039062
    10. ']' → logprob: -13.080581665039062

Token 157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26573511958122253
    2. '2' → logprob: -1.515735149383545
    3. '**' → logprob: -4.515735149383545
    4. ' ' → logprob: -6.015735149383545
    5. '[' → logprob: -8.515734672546387
    6. '```' → logprob: -10.140734672546387
    7. '0' → logprob: -10.765734672546387
    8. '}' → logprob: -11.515734672546387
    9. ')**' → logprob: -11.640734672546387
    10. ')' → logprob: -11.640734672546387

Token 158: '**' (ID: 410)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008193961111828685
    2. '**' → logprob: -7.125819206237793
    3. ' ' → logprob: -12.000819206237793
    4. '[' → logprob: -13.000819206237793
    5. '```' → logprob: -13.000819206237793
    6. ')**' → logprob: -13.125819206237793
    7. ')' → logprob: -13.500819206237793
    8. '*' → logprob: -15.875819206237793
    9. '**)' → logprob: -15.875819206237793
    10. '²' → logprob: -16.43832015991211

Token 159: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.875003814697266
    3. '```' → logprob: -14.500003814697266
    4. '**' → logprob: -14.750003814697266
    5. ')' → logprob: -16.062503814697266
    6. '1' → logprob: -16.125003814697266
    7. '²' → logprob: -16.562503814697266
    8. '۲' → logprob: -16.875003814697266
    9. '[' → logprob: -17.812503814697266
    10. '0' → logprob: -17.875003814697266

Token 160: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3544423381972592e-05
    2. '   ' → logprob: -11.75001335144043
    3. ' )' → logprob: -13.12501335144043
    4. ')
' → logprob: -13.75001335144043
    5. '*' → logprob: -13.87501335144043
    6. '))' → logprob: -14.62501335144043
    7. ')*' → logprob: -15.25001335144043
    8. ' ' → logprob: -16.00001335144043
    9. ')**' → logprob: -16.37501335144043
    10. '**' → logprob: -16.50001335144043

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31605103611946106
    2. ')' → logprob: -1.3160510063171387
    3. ',' → logprob: -7.066051006317139
    4. ' )' → logprob: -7.941051006317139
    5. '    
' → logprob: -8.066051483154297
    6. '*' → logprob: -8.191051483154297
    7. ')
' → logprob: -8.441051483154297
    8. ' ' → logprob: -8.691051483154297
    9. '\n' → logprob: -9.316051483154297
    10. '  
' → logprob: -9.566051483154297

Token 162: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05788164585828781
    2. 'cos' → logprob: -4.307881832122803
    3. ' cos' → logprob: -4.682881832122803
    4. ' angle' → logprob: -4.932881832122803
    5. ' acos' → logprob: -5.057881832122803
    6. ' if' → logprob: -5.432881832122803
    7. 'angle' → logprob: -5.557881832122803
    8. ' cosine' → logprob: -5.682881832122803
    9. ' return' → logprob: -6.432881832122803
    10. ' a' → logprob: -6.807881832122803

Token 163: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3869483470916748
    2. 'len' → logprob: -1.1369483470916748
    3. ' min' → logprob: -10.636948585510254
    4. '	len' → logprob: -11.136948585510254
    5. ' not' → logprob: -11.386948585510254
    6. ' max' → logprob: -11.636948585510254
    7. ' ' → logprob: -12.761948585510254
    8. ' dot' → logprob: -13.011948585510254
    9. ' length' → logprob: -13.136948585510254
    10. '(len' → logprob: -13.261948585510254

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0484450437361374e-05
    2. '2' → logprob: -10.875040054321289
    3. '0' → logprob: -10.875040054321289
    4. ' ' → logprob: -13.500040054321289
    5. '_' → logprob: -14.750040054321289
    6. '```' → logprob: -15.500040054321289
    7. '==' → logprob: -15.625040054321289
    8. ' ==' → logprob: -16.62504005432129
    9. '=' → logprob: -17.12504005432129
    10. '' → logprob: -17.62504005432129

Token 165: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4745508134365082
    2. '==' → logprob: -0.9745508432388306
    3. ' <' → logprob: -8.8495512008667
    4. '*' → logprob: -9.4745512008667
    5. ' *' → logprob: -9.4745512008667
    6. ' ' → logprob: -9.7245512008667
    7. '<' → logprob: -10.2245512008667
    8. ' >' → logprob: -10.8495512008667
    9. '>' → logprob: -11.0995512008667
    10. '=' → logprob: -11.2245512008667

Token 166: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185472520068288
    2. ' ' → logprob: -6.127185344696045
    3. '۰' → logprob: -15.502185821533203
    4. '０' → logprob: -16.814685821533203
    5. ' or' → logprob: -17.002185821533203
    6. '  ' → logprob: -17.814685821533203
    7. ' ' → logprob: -18.064685821533203
    8. '٠' → logprob: -18.377185821533203
    9. '০' → logprob: -18.502185821533203
    10. 'or' → logprob: -18.752185821533203

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '۰' → logprob: -17.125045776367188
    4. '０' → logprob: -17.687545776367188
    5. '00' → logprob: -18.750045776367188
    6. '   ' → logprob: -18.812545776367188
    7. '০' → logprob: -19.062545776367188
    8. '```' → logprob: -19.062545776367188
    9. '٠' → logprob: -19.437545776367188
    10. '  ' → logprob: -19.875045776367188

Token 168: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.026423722505569458
    2. 'or' → logprob: -3.651423692703247
    3. ':' → logprob: -9.151423454284668
    4. ' ' → logprob: -11.276423454284668
    5. '	or' → logprob: -13.276423454284668
    6. ')' → logprob: -13.901423454284668
    7. ':return' → logprob: -14.776423454284668
    8. 'o' → logprob: -14.776423454284668
    9. '<|end|>' → logprob: -15.151423454284668
    10. ''or' → logprob: -15.651423454284668

Token 169: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.38687387108802795
    2. ' len' → logprob: -1.1368738412857056
    3. '   ' → logprob: -13.636874198913574
    4. '	len' → logprob: -13.761874198913574
    5. ' ' → logprob: -15.386874198913574
    6. 'length' → logprob: -15.886874198913574
    7. '    ' → logprob: -16.011873245239258
    8. '  ' → logprob: -16.511873245239258
    9. '(len' → logprob: -16.761873245239258
    10. '[len' → logprob: -17.261873245239258

Token 170: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00036715567694045603
    2. 'len' → logprob: -8.500367164611816
    3. ' len' → logprob: -9.125367164611816
    4. ' ' → logprob: -10.000367164611816
    5. '(len' → logprob: -12.375367164611816
    6. '0' → logprob: -13.250367164611816
    7. '[len' → logprob: -13.875367164611816
    8. '   ' → logprob: -14.750367164611816
    9. '<len' → logprob: -14.750367164611816
    10. '```' → logprob: -14.750367164611816

Token 171: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12709231674671173
    2. '==' → logprob: -2.1270923614501953
    3. ')==' → logprob: -9.877092361450195
    4. '0' → logprob: -10.127092361450195
    5. ' ' → logprob: -10.127092361450195
    6. '=' → logprob: -11.377092361450195
    7. ']==' → logprob: -12.002092361450195
    8. ':' → logprob: -12.752092361450195
    9. '()==' → logprob: -13.002092361450195
    10. ' ' → logprob: -13.252092361450195

Token 172: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.375204086303711
    4. '```' → logprob: -16.37520408630371
    5. ' ' → logprob: -17.12520408630371
    6. '۰' → logprob: -17.25020408630371
    7. '  ' → logprob: -18.43770408630371
    8. '00' → logprob: -18.62520408630371
    9. '０' → logprob: -18.68770408630371
    10. '012' → logprob: -19.25020408630371

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -16.500028610229492
    4. '```' → logprob: -17.250028610229492
    5. '   ' → logprob: -17.875028610229492
    6. '۰' → logprob: -17.875028610229492
    7. 'zero' → logprob: -18.375028610229492
    8. ' ' → logprob: -18.812528610229492
    9. '  ' → logprob: -18.875028610229492
    10. '０' → logprob: -19.437528610229492

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007414919091388583
    2. ':
' → logprob: -7.750741481781006
    3. '):' → logprob: -8.625741958618164
    4. ':return' → logprob: -9.125741958618164
    5. ' :' → logprob: -11.375741958618164
    6. ')' → logprob: -12.125741958618164
    7. '   ' → logprob: -12.750741958618164
    8. ' or' → logprob: -13.625741958618164
    9. ',' → logprob: -14.750741958618164
    10. '):
' → logprob: -14.875741958618164

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6728365421295166
    2. '   ' → logprob: -0.7978365421295166
    3. '0' → logprob: -3.4228365421295166
    4. '    ' → logprob: -6.1728363037109375
    5. ' ' → logprob: -6.2978363037109375
    6. '1' → logprob: -6.6728363037109375
    7. ' return' → logprob: -6.9228363037109375
    8. ':' → logprob: -8.422836303710938
    9. '     ' → logprob: -9.297836303710938
    10. ',' → logprob: -9.797836303710938

Token 176: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23097899556159973
    2. ' return' → logprob: -1.9809789657592773
    3. 'return' (adapté à ' return') → logprob: -3.1059789657592773
    4. '   ' → logprob: -4.105978965759277
    5. ' ' → logprob: -4.980978965759277
    6. '    ' → logprob: -9.605978965759277
    7. ' 
' → logprob: -10.230978965759277
    8. '1' → logprob: -10.855978965759277
    9. '  ' → logprob: -11.105978965759277
    10. ':return' → logprob: -11.355978965759277

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04865073040127754
    2. ' ' → logprob: -3.0486507415771484
    3. ' None' → logprob: -10.548650741577148
    4. ' math' → logprob: -10.798650741577148
    5. 'None' → logprob: -11.673650741577148
    6. 'math' → logprob: -12.923650741577148
    7. '1' → logprob: -13.048650741577148
    8. ' ' → logprob: -13.798650741577148
    9. '   ' → logprob: -14.423650741577148
    10. '  ' → logprob: -14.798650741577148

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00042292833677493036
    2. 'float' → logprob: -8.125422477722168
    3. 'math' → logprob: -9.125422477722168
    4. 'None' → logprob: -11.125422477722168
    5. '1' → logprob: -13.375422477722168
    6. ' ' → logprob: -14.250422477722168
    7. ' float' → logprob: -14.875422477722168
    8. '-' → logprob: -15.375422477722168
    9. '999' → logprob: -16.250423431396484
    10. ' math' → logprob: -16.500423431396484

Token 179: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2742008566856384
    2. '
' → logprob: -1.7742009162902832
    3. ')' → logprob: -3.649200916290283
    4. '    
' → logprob: -3.899200916290283
    5. '<|end|>' → logprob: -4.524200916290283
    6. '0' → logprob: -5.524200916290283
    7. '\n' → logprob: -6.399200916290283
    8. '  
' → logprob: -6.524200916290283
    9. '  ' → logprob: -7.024200916290283
    10. '   
' → logprob: -7.149200916290283

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '5' → logprob: -13.750001907348633
    3. '6' → logprob: -14.500001907348633
    4. '1' → logprob: -18.500001907348633
    5. 'None' → logprob: -18.750001907348633
    6. ' ' → logprob: -19.000001907348633
    7. '```' → logprob: -19.500001907348633
    8. 'return' → logprob: -19.625001907348633
    9. '<|end|>' → logprob: -19.625001907348633
    10. 'token' → logprob: -19.750001907348633

Token 181: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14072999358177185
    2. '
' → logprob: -2.5157299041748047
    3. '    
' → logprob: -3.1407299041748047
    4. '  
' → logprob: -6.265729904174805
    5. '\n' → logprob: -6.390729904174805
    6. '   
' → logprob: -7.015729904174805
    7. ' 
' → logprob: -7.140729904174805
    8. '<|end|>' → logprob: -7.515729904174805
    9. ')' → logprob: -8.265729904174805
    10. 'n' → logprob: -8.765729904174805

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12421807646751404
    2. '
' → logprob: -2.749217987060547
    3. '    
' → logprob: -3.374217987060547
    4. '  
' → logprob: -5.249217987060547
    5. '<|end|>' → logprob: -5.249217987060547
    6. '\n' → logprob: -6.374217987060547
    7. '   
' → logprob: -6.499217987060547
    8. ')' → logprob: -6.749217987060547
    9. ',' → logprob: -6.999217987060547
    10. ' 
' → logprob: -6.999217987060547

Token 183: ' cos' (ID: 8974)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013765116222202778
    2. ' acos' → logprob: -4.888765335083008
    3. 'cos' (adapté à ' cos') → logprob: -5.763765335083008
    4. ' cos' → logprob: -6.388765335083008
    5. ' cosine' → logprob: -7.388765335083008
    6. 'acos' → logprob: -9.013765335083008
    7. ',' → logprob: -9.138765335083008
    8. '    
' → logprob: -9.638765335083008
    9. ')' → logprob: -9.763765335083008
    10. 'import' → logprob: -9.763765335083008

Token 184: '_angle' (ID: 51505)
  Prédit: '_theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_theta' → logprob: -0.45683518052101135
    2. '_angle' → logprob: -1.831835150718689
    3. '(' → logprob: -2.2068352699279785
    4. '(angle' → logprob: -3.5818352699279785
    5. ')' → logprob: -3.9568352699279785
    6. '(theta' → logprob: -4.0818352699279785
    7. '_' → logprob: -4.0818352699279785
    8. 'theta' → logprob: -5.7068352699279785
    9. '<|end|>' → logprob: -6.2068352699279785
    10. ',' → logprob: -6.5818352699279785

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142823457717896
    2. '=' → logprob: -1.7014281749725342
    3. ')' → logprob: -11.326428413391113
    4. ' )' → logprob: -14.201428413391113
    5. ')=' → logprob: -14.701428413391113
    6. ' =)' → logprob: -14.701428413391113
    7. ' ' → logprob: -15.076428413391113
    8. ',' → logprob: -15.076428413391113
    9. '   ' → logprob: -15.701428413391113
    10. ' =
' → logprob: -15.701428413391113

Token 186: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.10321904718875885
    2. ' dot' → logprob: -2.3532190322875977
    3. 'max' → logprob: -6.228219032287598
    4. '(dot' → logprob: -7.228219032287598
    5. ' max' → logprob: -8.228219032287598
    6. 'min' → logprob: -10.353219032287598
    7. ' min' → logprob: -12.103219032287598
    8. '   ' → logprob: -13.353219032287598
    9. '-dot' → logprob: -14.228219032287598
    10. ' ' → logprob: -14.353219032287598

Token 187: '/(' (ID: 27334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5759479999542236
    2. ' /' → logprob: -0.8259479999542236
    3. '/(' → logprob: -12.325947761535645
    4. '/math' → logprob: -13.325947761535645
    5. '/max' → logprob: -13.575947761535645
    6. ')' → logprob: -14.450947761535645
    7. ' ' → logprob: -15.325947761535645
    8. ' ' → logprob: -16.07594871520996
    9. ' /(' → logprob: -16.95094871520996
    10. ' /
' → logprob: -17.07594871520996

Token 188: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0017343213548883796
    2. '(len' → logprob: -6.501734256744385
    3. ' len' → logprob: -8.376734733581543
    4. '(' → logprob: -14.751734733581543
    5. '[len' → logprob: -14.751734733581543
    6. ' (' → logprob: -14.751734733581543
    7. '	len' → logprob: -15.376734733581543
    8. '<len' → logprob: -15.501734733581543
    9. 'length' → logprob: -16.001733779907227
    10. 'leni' → logprob: -17.501733779907227

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '(' → logprob: -19.0
    3. '(len' → logprob: -19.25
    4. '```' → logprob: -19.875
    5. '2' → logprob: -20.625
    6. '(math' → logprob: -21.0
    7. '(v' → logprob: -21.0
    8. 'len' → logprob: -21.0625
    9. '[' → logprob: -21.375
    10. '(s' → logprob: -21.625

Token 190: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.02324908785521984
    2. ' *' → logprob: -3.7732491493225098
    3. '**' → logprob: -13.023248672485352
    4. ' ' → logprob: -14.398248672485352
    5. '*object' → logprob: -15.148248672485352
    6. ')' → logprob: -15.898248672485352
    7. '*)' → logprob: -16.64824867248535
    8. '*num' → logprob: -16.89824867248535
    9. ' **' → logprob: -17.14824867248535
    10. '*l' → logprob: -17.14824867248535

Token 191: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00016027313540689647
    2. ' len' → logprob: -8.750160217285156
    3. '2' → logprob: -13.875160217285156
    4. 'length' → logprob: -15.375160217285156
    5. '	len' → logprob: -15.875160217285156
    6. '(len' → logprob: -16.375160217285156
    7. ' ' → logprob: -16.500160217285156
    8. '[len' → logprob: -16.500160217285156
    9. '1' → logprob: -16.625160217285156
    10. 'leni' → logprob: -17.000160217285156

Token 192: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. ')' → logprob: -17.125
    4. '```' → logprob: -17.625
    5. '1' → logprob: -18.125
    6. '۲' → logprob: -18.9375
    7. 'angle' → logprob: -19.0
    8. '２' → logprob: -19.125
    9. '₂' → logprob: -19.625
    10. '২' → logprob: -20.25

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.35706390615087e-05
    2. ' )' → logprob: -11.250033378601074
    3. ')
' → logprob: -11.500033378601074
    4. '<|end|>' → logprob: -11.750033378601074
    5. ')return' → logprob: -14.125033378601074
    6. ' ' → logprob: -15.500033378601074
    7. '   ' → logprob: -15.500033378601074
    8. '),' → logprob: -15.500033378601074
    9. ')

' → logprob: -15.625033378601074
    10. '<|end|>' → logprob: -15.875033378601074

Token 194: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034616563469171524
    2. '<|end|>' → logprob: -4.409616470336914
    3. ',' → logprob: -4.534616470336914
    4. ']' → logprob: -5.784616470336914
    5. '   ' → logprob: -6.409616470336914
    6. ' ' → logprob: -6.659616470336914
    7. '```' → logprob: -7.409616470336914
    8. '.' → logprob: -7.659616470336914
    9. '}' → logprob: -7.909616470336914
    10. '#' → logprob: -7.909616470336914

Token 195: ' cos' (ID: 8974)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06951417028903961
    2. '1' → logprob: -3.319514274597168
    3. '   ' → logprob: -5.069514274597168
    4. 'c' → logprob: -5.194514274597168
    5. '0' → logprob: -5.819514274597168
    6. ',' → logprob: -6.069514274597168
    7. 'cos' (adapté à ' cos') → logprob: -6.194514274597168
    8. '.' → logprob: -6.319514274597168
    9. 'min' → logprob: -6.944514274597168
    10. ' ' → logprob: -6.944514274597168

Token 196: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.0006950391689315438
    2. '_' → logprob: -7.37569522857666
    3. '(angle' → logprob: -10.62569522857666
    4. '_angles' → logprob: -11.12569522857666
    5. '_theta' → logprob: -11.50069522857666
    6. 'angle' → logprob: -11.87569522857666
    7. ')' → logprob: -12.50069522857666
    8. ' angle' → logprob: -13.25069522857666
    9. '(' → logprob: -13.25069522857666
    10. '_ang' → logprob: -13.37569522857666

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407931089401245
    2. '=' → logprob: -0.9740793108940125
    3. '=max' → logprob: -14.099079132080078
    4. '   ' → logprob: -14.474079132080078
    5. '=min' → logprob: -14.849079132080078
    6. '=Math' → logprob: -14.974079132080078
    7. ')' → logprob: -16.474079132080078
    8. ')=' → logprob: -16.974079132080078
    9. ',' → logprob: -17.224079132080078
    10. '=}' → logprob: -17.599079132080078

Token 198: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.46463969349861145
    2. ' max' → logprob: -1.464639663696289
    3. 'min' → logprob: -2.214639663696289
    4. ' min' → logprob: -3.464639663696289
    5. '	max' → logprob: -16.21463966369629
    6. '	min' → logprob: -16.71463966369629
    7. ' ' → logprob: -18.08963966369629
    8. '(max' → logprob: -18.96463966369629
    9. '(min' → logprob: -19.58963966369629
    10. '   ' → logprob: -19.58963966369629

Token 199: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.03814419358968735
    2. '(min' → logprob: -3.288144111633301
    3. '-' → logprob: -9.5381441116333
    4. '(' → logprob: -10.4131441116333
    5. 'min' → logprob: -14.4131441116333
    6. '(
' → logprob: -16.413145065307617
    7. '```' → logprob: -18.788145065307617
    8. '	min' → logprob: -18.913145065307617
    9. '-min' → logprob: -19.538145065307617
    10. '()' → logprob: -19.538145065307617

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -18.75
    4. '<|end|>' → logprob: -19.75
    5. '   ' → logprob: -20.25
    6. '
' → logprob: -20.25
    7. '  ' → logprob: -20.5
    8. '１' → logprob: -21.0
    9. '0' → logprob: -21.5
    10. '

' → logprob: -21.9375

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09458465874195099
    2. '.' → logprob: -2.4695847034454346
    3. ' ,' → logprob: -5.2195844650268555
    4. ',min' → logprob: -9.094584465026855
    5. ',float' → logprob: -9.719584465026855
    6. ')' → logprob: -11.469584465026855
    7. ',max' → logprob: -11.844584465026855
    8. '1' → logprob: -11.969584465026855
    9. ',c' → logprob: -12.344584465026855
    10. '0' → logprob: -12.469584465026855

Token 202: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12693703174591064
    2. ' min' → logprob: -2.126936912536621
    3. 'cos' → logprob: -12.001936912536621
    4. '	min' → logprob: -13.251936912536621
    5. ' cos' → logprob: -14.751936912536621
    6. '-min' → logprob: -16.501937866210938
    7. '(min' → logprob: -16.501937866210938
    8. ' ' → logprob: -16.626937866210938
    9. 'minimum' → logprob: -16.626937866210938
    10. '[min' → logprob: -16.626937866210938

Token 203: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25225502252578735
    2. '1' → logprob: -1.5022549629211426
    3. 'cos' → logprob: -8.5022554397583
    4. '(c' → logprob: -9.1272554397583
    5. ' (' → logprob: -12.1272554397583
    6. ' ' → logprob: -12.3772554397583
    7. ' cos' → logprob: -13.1272554397583
    8. '(
' → logprob: -13.7522554397583
    9. '```' → logprob: -14.2522554397583
    10. ')' → logprob: -15.5022554397583

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014445222914218903
    2. 'cos' → logprob: -6.751444339752197
    3. ' ' → logprob: -8.251444816589355
    4. ' cos' → logprob: -11.626444816589355
    5. '   ' → logprob: -13.126444816589355
    6. ')' → logprob: -13.376444816589355
    7. '```' → logprob: -15.126444816589355
    8. '  ' → logprob: -15.626444816589355
    9. '+' → logprob: -16.87644386291504
    10. 'c' → logprob: -17.00144386291504

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033865992445498705
    2. ',c' → logprob: -6.253386497497559
    3. ' ,' → logprob: -6.628386497497559
    4. 'cos' → logprob: -9.253386497497559
    5. ' cos' → logprob: -11.378386497497559
    6. ',
' → logprob: -11.628386497497559
    7. ')' → logprob: -12.003386497497559
    8. '   ' → logprob: -12.253386497497559
    9. '(c' → logprob: -13.878386497497559
    10. '```' → logprob: -14.503386497497559

Token 206: ' cos' (ID: 8974)
  Prédit: ' cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cos' → logprob: -0.3132645785808563
    2. 'cos' → logprob: -1.3132646083831787
    3. ' cosine' → logprob: -13.188264846801758
    4. '_cos' → logprob: -15.438264846801758
    5. '*cos' → logprob: -15.813264846801758
    6. 'c' → logprob: -16.063264846801758
    7. ' ' → logprob: -16.063264846801758
    8. 'Cos' → logprob: -16.188264846801758
    9. '	c' → logprob: -16.688264846801758
    10. '.cos' → logprob: -16.688264846801758

Token 207: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.00046045915223658085
    2. '_' → logprob: -8.125460624694824
    3. '_cos' → logprob: -9.250460624694824
    4. '_)' → logprob: -10.250460624694824
    5. ')' → logprob: -11.000460624694824
    6. 'angle' → logprob: -12.250460624694824
    7. '_theta' → logprob: -12.500460624694824
    8. '(angle' → logprob: -13.250460624694824
    9. 'cos' → logprob: -13.250460624694824
    10. '))' → logprob: -13.375460624694824

Token 208: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.225939872208983e-05
    2. ')
' → logprob: -11.000032424926758
    3. ' )' → logprob: -11.375032424926758
    4. '   ' → logprob: -12.875032424926758
    5. '))' → logprob: -13.875032424926758
    6. ')`' → logprob: -15.875032424926758
    7. ')

' → logprob: -16.125032424926758
    8. ')
' → logprob: -16.250032424926758
    9. ' ' → logprob: -16.375032424926758
    10. ')**' → logprob: -16.875032424926758

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044647976756095886
    2. ')' → logprob: -3.2946479320526123
    3. 'return' → logprob: -5.669648170471191
    4. ' return' → logprob: -6.294648170471191
    5. '    
' → logprob: -8.669648170471191
    6. 'angle' → logprob: -8.669648170471191
    7. ',' → logprob: -8.669648170471191
    8. ' )' → logprob: -8.919648170471191
    9. ')
' → logprob: -9.169648170471191
    10. ' angle' → logprob: -9.419648170471191

Token 210: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9243972301483154
    2. 'return' (adapté à ' return') → logprob: -1.0493972301483154
    3. ' return' → logprob: -2.0493972301483154
    4. 'angle' → logprob: -2.4243972301483154
    5. ')' → logprob: -3.7993972301483154
    6. ' angle' → logprob: -4.4243974685668945
    7. 'import' → logprob: -8.049397468566895
    8. ')
' → logprob: -8.674397468566895
    9. '	return' → logprob: -8.799397468566895
    10. ' )' → logprob: -8.924397468566895

Token 211: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.20141547918319702
    2. ' math' → logprob: -1.7014155387878418
    3. '(math' → logprob: -13.701415061950684
    4. '   ' → logprob: -13.951415061950684
    5. ' ' → logprob: -16.826416015625
    6. 'Math' → logprob: -17.201416015625
    7. '.math' → logprob: -17.326416015625
    8. '_math' → logprob: -18.201416015625
    9. 'm' → logprob: -18.451416015625
    10. 'cmath' → logprob: -18.701416015625

Token 212: '.de' (ID: 3906)
  Prédit: '.ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -4.179569077678025e-05
    2. '.' → logprob: -10.125041961669922
    3. '.atan' → logprob: -13.875041961669922
    4. '.cos' → logprob: -14.625041961669922
    5. '.de' → logprob: -15.750041961669922
    6. '.pi' → logprob: -17.875041961669922
    7. ' acos' → logprob: -18.000041961669922
    8. ' .' → logprob: -18.375041961669922
    9. '.ar' → logprob: -18.500041961669922
    10. '\.' → logprob: -18.500041961669922

Token 213: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -0.013966391794383526
    2. 'g' → logprob: -4.5139665603637695
    3. 'r' → logprob: -6.8889665603637695
    4. 'f' → logprob: -6.8889665603637695
    5. 'rees' → logprob: -7.7639665603637695
    6. 'gs' → logprob: -9.01396656036377
    7. 'gr' → logprob: -9.13896656036377
    8. 'gres' → logprob: -9.76396656036377
    9. 'gress' → logprob: -10.13896656036377
    10. 'gree' → logprob: -10.26396656036377

Token 214: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.004734029993414879
    2. '(' → logprob: -5.379734039306641
    3. '(Math' → logprob: -9.25473403930664
    4. '(angle' → logprob: -12.00473403930664
    5. '(
' → logprob: -13.12973403930664
    6. '(ar' → logprob: -13.25473403930664
    7. '(abs' → logprob: -13.37973403930664
    8. ' (' → logprob: -14.00473403930664
    9. '(torch' → logprob: -14.00473403930664
    10. 'math' → logprob: -14.00473403930664

Token 215: '.ac' (ID: 25905)
  Prédit: '.ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -12.87500286102295
    3. 'acos' → logprob: -15.62500286102295
    4. '.atan' → logprob: -16.375003814697266
    5. '.cos' → logprob: -16.500003814697266
    6. ' acos' → logprob: -17.000003814697266
    7. '_ac' → logprob: -18.500003814697266
    8. '.c' → logprob: -19.125003814697266
    9. '.de' → logprob: -19.625003814697266
    10. '	ac' → logprob: -19.875003814697266

Token 216: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.00010068230039905757
    2. 's' → logprob: -9.625101089477539
    3. 'cos' → logprob: -10.375101089477539
    4. 'o' → logprob: -13.125101089477539
    5. 'ос' → logprob: -15.125101089477539
    6. 'c' → logprob: -15.375101089477539
    7. '
' → logprob: -16.12510108947754
    8. '#' → logprob: -16.62510108947754
    9. '(os' → logprob: -16.62510108947754
    10. '.cos' → logprob: -16.62510108947754

Token 217: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0013514261227101088
    2. '(' → logprob: -6.626351356506348
    3. ' (' → logprob: -10.876351356506348
    4. ')' → logprob: -13.376351356506348
    5. '(cost' → logprob: -13.501351356506348
    6. 'cos' → logprob: -13.751351356506348
    7. '(co' → logprob: -14.251351356506348
    8. '()' → logprob: -15.126351356506348
    9. '(
' → logprob: -15.126351356506348
    10. ')(' → logprob: -15.251351356506348

Token 218: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.002959631150588393
    2. 'o' → logprob: -5.877959728240967
    3. 'cos' → logprob: -9.877959251403809
    4. ')' → logprob: -10.002959251403809
    5. 'ose' → logprob: -11.127959251403809
    6. 'angle' → logprob: -11.502959251403809
    7. 'ос' → logprob: -12.127959251403809
    8. '```' → logprob: -12.377959251403809
    9. '_angle' → logprob: -12.627959251403809
    10. ')
' → logprob: -12.752959251403809

Token 219: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.00010270876373397186
    2. 'angle' → logprob: -9.250102996826172
    3. 'cos' → logprob: -12.250102996826172
    4. ')' → logprob: -14.125102996826172
    5. ' angle' → logprob: -15.000102996826172
    6. 'Angle' → logprob: -15.750102996826172
    7. '(angle' → logprob: -16.375102996826172
    8. 'ng' → logprob: -16.375102996826172
    9. '))' → logprob: -16.500102996826172
    10. '\' → logprob: -17.125102996826172

Token 220: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003181159496307373
    2. '))' → logprob: -5.753180980682373
    3. ' )' → logprob: -13.003181457519531
    4. ')))' → logprob: -14.128181457519531
    5. ')}' → logprob: -15.878181457519531
    6. ')`' → logprob: -15.878181457519531
    7. '())' → logprob: -16.25318145751953
    8. ')
' → logprob: -16.37818145751953
    9. '()' → logprob: -17.87818145751953
    10. ')**' → logprob: -18.12818145751953

Token 221: 'max' (ID: 3228)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -1.1976357698440552
    2. 'origin' → logprob: -1.3226357698440552
    3. 'def' → logprob: -2.3226356506347656
    4. 'start' → logprob: -2.3226356506347656
    5. 'valid' → logprob: -3.0726356506347656
    6. 'best' → logprob: -3.3226356506347656
    7. 'target' → logprob: -3.4476356506347656
    8. 'reference' → logprob: -3.9476356506347656
    9. 'base' → logprob: -4.197635650634766
    10. 'for' → logprob: -4.197635650634766

Token 222: '_car' (ID: 62991)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.26058876514434814
    2. '_dist' → logprob: -2.3855886459350586
    3. '_distance' → logprob: -2.5105886459350586
    4. '_city' → logprob: -3.7605886459350586
    5. '_' → logprob: -4.010588645935059
    6. '_c' → logprob: -5.260588645935059
    7. '_idx' → logprob: -5.885588645935059
    8. '_point' → logprob: -6.635588645935059
    9. '_index' → logprob: -6.885588645935059
    10. '_val' → logprob: -7.385588645935059

Token 223: 'rots' (ID: 175556)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.021295111626386642
    2. '_distance' → logprob: -5.271295070648193
    3. 't' → logprob: -5.521295070648193
    4. 'ds' → logprob: -5.896295070648193
    5. '_radius' → logprob: -6.146295070648193
    6. 's' → logprob: -6.646295070648193
    7. 'dist' → logprob: -6.646295070648193
    8. '_dist' → logprob: -7.021295070648193
    9. '_angle' → logprob: -7.021295070648193
    10. 'r' → logprob: -8.021295547485352

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18230634927749634
    2. '=' → logprob: -1.8073062896728516
    3. ',' → logprob: -6.432306289672852
    4. ' ' → logprob: -7.682306289672852
    5. '_' → logprob: -8.932306289672852
    6. '_index' → logprob: -9.932306289672852
    7. '_idx' → logprob: -10.182306289672852
    8. '_found' → logprob: -10.432306289672852
    9. '_count' → logprob: -10.432306289672852
    10. '_distance' → logprob: -10.682306289672852

Token 225: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030182336922734976
    2. '-' → logprob: -6.503018379211426
    3. ' ' → logprob: -6.628018379211426
    4. 'float' → logprob: -10.128018379211426
    5. ' -' → logprob: -10.253018379211426
    6. 'n' → logprob: -10.753018379211426
    7. '[' → logprob: -10.878018379211426
    8. 'int' → logprob: -10.878018379211426
    9. '1' → logprob: -11.128018379211426
    10. '100' → logprob: -12.128018379211426

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038912808522582054
    2. '-' → logprob: -5.628891468048096
    3. ' ' → logprob: -9.628890991210938
    4. '[' → logprob: -10.003890991210938
    5. 'float' → logprob: -10.003890991210938
    6. 'int' → logprob: -10.253890991210938
    7. 'n' → logprob: -10.753890991210938
    8. '1' → logprob: -10.878890991210938
    9. ' -' → logprob: -11.503890991210938
    10. '[int' → logprob: -12.003890991210938

Token 227: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18393976986408234
    2. ' for' → logprob: -2.0589396953582764
    3. ',' → logprob: -3.9339396953582764
    4. ' ' → logprob: -4.5589399337768555
    5. '
' → logprob: -5.5589399337768555
    6. ' 
' → logprob: -5.9339399337768555
    7. ')' → logprob: -6.9339399337768555
    8. '<|end|>' → logprob: -7.4339399337768555
    9. '.' → logprob: -7.9339399337768555
    10. '' → logprob: -8.308939933776855

Token 228: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0059496560133993626
    2. 'origin' → logprob: -6.2559494972229
    3. 'v' → logprob: -7.1309494972229
    4. 'import' → logprob: -7.3809494972229
    5. 'from' → logprob: -7.5059494972229
    6. 'reference' → logprob: -7.8809494972229
    7. 'direction' → logprob: -8.130949974060059
    8. 'start' → logprob: -8.255949974060059
    9. 'center' → logprob: -8.505949974060059
    10. 'vector' → logprob: -8.630949974060059

Token 229: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008745759725570679
    2. 'origin' → logprob: -5.0087456703186035
    3. 'center' → logprob: -7.7587456703186035
    4. 'start' → logprob: -8.133746147155762
    5. 'import' → logprob: -8.383746147155762
    6. 'from' → logprob: -8.633746147155762
    7. 'direction' → logprob: -8.883746147155762
    8. 'base' → logprob: -9.008746147155762
    9. 'v' → logprob: -9.133746147155762
    10. 'dire' → logprob: -9.133746147155762

Token 230: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7568506002426147
    2. 'r' → logprob: -1.0068506002426147
    3. ' n' → logprob: -2.8818507194519043
    4. 'cities' → logprob: -3.6318507194519043
    5. 'max' → logprob: -4.506850719451904
    6. ' r' → logprob: -4.506850719451904
    7. ' True' → logprob: -4.631850719451904
    8. ' for' → logprob: -5.006850719451904
    9. 'True' → logprob: -5.256850719451904
    10. 'for' → logprob: -5.256850719451904

Token 231: ' is' (ID: 382)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3597163259983063
    2. ' >' → logprob: -1.3597162961959839
    3. ':' → logprob: -4.609716415405273
    4. ' ==' → logprob: -5.109716415405273
    5. '==' → logprob: -5.359716415405273
    6. ' <=' → logprob: -5.484716415405273
    7. '>=' → logprob: -5.484716415405273
    8. ' >=' → logprob: -5.609716415405273
    9. '<=' → logprob: -5.859716415405273
    10. ' in' → logprob: -5.859716415405273

Token 232: ' small' (ID: 3291)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22664928436279297
    2. ' small' → logprob: -2.851649284362793
    3. 'n' → logprob: -2.976649284362793
    4. 'small' → logprob: -3.226649284362793
    5. ' ' → logprob: -3.726649284362793
    6. '1' → logprob: -4.351649284362793
    7. ' very' → logprob: -4.726649284362793
    8. ' n' → logprob: -5.851649284362793
    9. 'very' → logprob: -6.851649284362793
    10. ' not' → logprob: -7.226649284362793

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039233945310115814
    2. ':' → logprob: -3.289233922958374
    3. ',
' → logprob: -7.664234161376953
    4. 'for' → logprob: -8.164234161376953
    5. ':
' → logprob: -9.039234161376953
    6. '(' → logprob: -9.164234161376953
    7. ' for' → logprob: -9.539234161376953
    8. ',:' → logprob: -10.039234161376953
    9. 'range' → logprob: -10.539234161376953
    10. ' ,' → logprob: -11.414234161376953

Token 234: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024846628308296204
    2. 'from' → logprob: -3.7748465538024902
    3. ' for' → logprob: -6.52484655380249
    4. 'import' → logprob: -9.149847030639648
    5. ' from' → logprob: -10.524847030639648
    6. '#' → logprob: -15.524847030639648
    7. 'def' → logprob: -16.77484703063965
    8. ' import' → logprob: -17.39984703063965
    9. '
' → logprob: -19.77484703063965
    10. ')' → logprob: -19.77484703063965

Token 235: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.029014229774475
    2. 'r' → logprob: -1.154014229774475
    3. ' all' → logprob: -2.7790141105651855
    4. ' True' → logprob: -2.7790141105651855
    5. 'cities' → logprob: -3.1540141105651855
    6. ' cities' → logprob: -3.1540141105651855
    7. ' len' → logprob: -3.6540141105651855
    8. ' n' → logprob: -4.1540141105651855
    9. ' max' → logprob: -4.4040141105651855
    10. ' not' → logprob: -4.4040141105651855

Token 236: ' small' (ID: 3291)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4663010835647583
    2. ' <=' → logprob: -1.3413010835647583
    3. ' +' → logprob: -2.9663009643554688
    4. '<=' → logprob: -3.5913009643554688
    5. ' ' → logprob: -4.466300964355469
    6. '>' → logprob: -5.841300964355469
    7. ' >' → logprob: -5.841300964355469
    8. '=' → logprob: -5.841300964355469
    9. ',' → logprob: -6.216300964355469
    10. ' is' → logprob: -6.216300964355469

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04576478153467178
    2. ':' → logprob: -3.170764684677124
    3. 'for' → logprob: -6.670764923095703
    4. ' for' → logprob: -7.920764923095703
    5. ',
' → logprob: -8.295764923095703
    6. 'range' → logprob: -8.545764923095703
    7. '(' → logprob: -9.295764923095703
    8. ')' → logprob: -9.420764923095703
    9. ' range' → logprob: -9.545764923095703
    10. '=' → logprob: -9.545764923095703

Token 238: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10283762961626053
    2. ' for' → logprob: -2.352837562561035
    3. 'from' → logprob: -6.102837562561035
    4. 'import' → logprob: -8.477837562561035
    5. ' from' → logprob: -9.227837562561035
    6. 'def' → logprob: -11.227837562561035
    7. ')' → logprob: -11.227837562561035
    8. '#' → logprob: -11.602837562561035
    9. 'angle' → logprob: -12.352837562561035
    10. 'range' → logprob: -12.352837562561035

Token 239: ' try' (ID: 2075)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.28324440121650696
    2. ':' → logprob: -2.0332443714141846
    3. 'for' → logprob: -2.7832443714141846
    4. ' for' → logprob: -3.5332443714141846
    5. ' ' → logprob: -5.033244609832764
    6. '=' → logprob: -5.158244609832764
    7. 'can' → logprob: -5.533244609832764
    8. ' =' → logprob: -5.783244609832764
    9. ' have' → logprob: -6.908244609832764
    10. ' could' → logprob: -7.158244609832764

Token 240: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.08564449846744537
    2. ' all' → logprob: -2.960644483566284
    3. ':' → logprob: -4.585644721984863
    4. 'for' → logprob: -4.710644721984863
    5. 'to' → logprob: -4.960644721984863
    6. 'each' → logprob: -6.710644721984863
    7. ' to' → logprob: -6.960644721984863
    8. 'every' → logprob: -7.085644721984863
    9. 'a' → logprob: -8.335644721984863
    10. '_all' → logprob: -8.710644721984863

Token 241: ' paths' (ID: 23373)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.4415166676044464
    2. 'cities' → logprob: -1.691516637802124
    3. 'i' → logprob: -2.941516637802124
    4. ' i' → logprob: -3.691516637802124
    5. ' combinations' → logprob: -4.066516876220703
    6. 'pairs' → logprob: -4.066516876220703
    7. 'for' → logprob: -4.566516876220703
    8. ' cities' → logprob: -4.941516876220703
    9. 'possible' → logprob: -4.941516876220703
    10. 'points' → logprob: -5.066516876220703

Token 242: ' using' (ID: 2360)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.825927734375
    2. ':' → logprob: -1.325927734375
    3. 'for' → logprob: -1.825927734375
    4. '.' → logprob: -2.825927734375
    5. ' ' → logprob: -3.450927734375
    6. ',' → logprob: -3.575927734375
    7. '<|end|>' → logprob: -4.825927734375
    8. '
' → logprob: -6.450927734375
    9. 'from' → logprob: -6.950927734375
    10. ' :' → logprob: -6.950927734375

Token 243: ' DFS' (ID: 115767)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.6700989603996277
    2. 'it' → logprob: -1.5450990200042725
    3. 'from' → logprob: -1.9200990200042725
    4. 'import' → logprob: -2.9200990200042725
    5. 'back' → logprob: -3.2950990200042725
    6. 'dfs' → logprob: -3.6700990200042725
    7. ' permutations' → logprob: -5.420098781585693
    8. ' dfs' → logprob: -6.170098781585693
    9. 'def' → logprob: -6.420098781585693
    10. ' back' → logprob: -6.920098781585693

Token 244: '.

' (ID: 364)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.8197523355484009
    2. 'def' → logprob: -1.1947523355484009
    3. 'visited' → logprob: -2.4447522163391113
    4. ' stack' → logprob: -2.6947522163391113
    5. ':' → logprob: -3.1947522163391113
    6. ' visited' → logprob: -4.194752216339111
    7. '_stack' → logprob: -4.194752216339111
    8. 'for' → logprob: -4.694752216339111
    9. 'import' → logprob: -5.444752216339111
    10. ' for' → logprob: -5.819752216339111

Token 245: 'def' (ID: 1314)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.7656934857368469
    2. 'visited' → logprob: -1.2656934261322021
    3. 'def' → logprob: -1.7656934261322021
    4. 'for' → logprob: -3.015693426132202
    5. 'from' → logprob: -3.515693426132202
    6. 'start' → logprob: -6.640693664550781
    7. 'import' → logprob: -6.890693664550781
    8. ' stack' → logprob: -8.265693664550781
    9. ' visited' → logprob: -8.515693664550781
    10. 'direction' → logprob: -10.265693664550781

Token 246: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.0015073629328981042
    2. 'dfs' → logprob: -6.50150728225708
    3. ' search' → logprob: -12.501507759094238
    4. ' find' → logprob: -13.751507759094238
    5. ' solve' → logprob: -16.626506805419922
    6. ' bfs' → logprob: -17.001506805419922
    7. ' best' → logprob: -17.501506805419922
    8. ' max' → logprob: -17.626506805419922
    9. ' DFS' → logprob: -17.876506805419922
    10. ' back' → logprob: -18.126506805419922

Token 247: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.7732468247413635
    2. '(city' → logprob: -0.8982468247413635
    3. '(path' → logprob: -2.8982467651367188
    4. '(' → logprob: -4.023246765136719
    5. '(u' → logprob: -4.523246765136719
    6. '(start' → logprob: -4.648246765136719
    7. '(node' → logprob: -4.898246765136719
    8. '(pos' → logprob: -5.148246765136719
    9. '(i' → logprob: -5.398246765136719
    10. '(c' → logprob: -5.398246765136719

Token 248: '_city' (ID: 60413)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020699729793705046
    2. ' ,' → logprob: -8.62520694732666
    3. '_,' → logprob: -11.62520694732666
    4. ',current' → logprob: -12.12520694732666
    5. '_city' → logprob: -12.50020694732666
    6. '):' → logprob: -13.00020694732666
    7. ',c' → logprob: -13.12520694732666
    8. '‌,' → logprob: -13.12520694732666
    9. '_c' → logprob: -14.62520694732666
    10. 'city' → logprob: -14.87520694732666

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3319124011322856e-05
    2. ' ,' → logprob: -10.750022888183594
    3. ',current' → logprob: -13.500022888183594
    4. ',
' → logprob: -15.375022888183594
    5. '‌,' → logprob: -15.875022888183594
    6. ',c' → logprob: -17.500022888183594
    7. ',int' → logprob: -17.875022888183594
    8. ',last' → logprob: -18.000022888183594
    9. ',start' → logprob: -18.375022888183594
    10. ',n' → logprob: -18.500022888183594

Token 250: ' length' (ID: 5517)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.024793365970253944
    2. ' visited' → logprob: -4.3997931480407715
    3. 'depth' → logprob: -5.1497931480407715
    4. 'car' → logprob: -6.1497931480407715
    5. 'remaining' → logprob: -6.3997931480407715
    6. 'current' → logprob: -6.6497931480407715
    7. ' depth' → logprob: -7.7747931480407715
    8. 'path' → logprob: -8.14979362487793
    9. 'distance' → logprob: -8.52479362487793
    10. ' current' → logprob: -9.64979362487793

Token 251: '_used' (ID: 67016)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00212194980122149
    2. ' ,' → logprob: -6.252121925354004
    3. '+' → logprob: -9.502121925354004
    4. '_used' → logprob: -10.127121925354004
    5. ' +' → logprob: -10.252121925354004
    6. ',current' → logprob: -10.752121925354004
    7. ',path' → logprob: -12.002121925354004
    8. ' ' → logprob: -12.627121925354004
    9. '_,' → logprob: -13.502121925354004
    10. '_remaining' → logprob: -13.502121925354004

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.0259150157216936e-05
    2. ' ,' → logprob: -10.12505054473877
    3. '):' → logprob: -11.87505054473877
    4. ')' → logprob: -14.25005054473877
    5. ',current' → logprob: -14.37505054473877
    6. ',
' → logprob: -15.62505054473877
    7. ',length' → logprob: -15.75005054473877
    8. '=' → logprob: -16.000049591064453
    9. ',int' → logprob: -16.000049591064453
    10. '‌,' → logprob: -16.000049591064453

Token 253: ' prev' (ID: 10258)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3720778226852417
    2. ' visited' → logprob: -1.6220778226852417
    3. 'path' → logprob: -3.1220779418945312
    4. ' path' → logprob: -3.6220779418945312
    5. 'car' → logprob: -4.497077941894531
    6. 'angle' → logprob: -4.747077941894531
    7. ' carrots' → logprob: -4.747077941894531
    8. ' angle' → logprob: -5.872077941894531
    9. 'used' → logprob: -6.122077941894531
    10. 'remaining' → logprob: -6.622077941894531

Token 254: '_dir' (ID: 9526)
  Prédit: '_vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -0.21642139554023743
    2. '_vec' → logprob: -1.966421365737915
    3. '_city' → logprob: -3.591421365737915
    4. '_direction' → logprob: -4.216421604156494
    5. '_angle' → logprob: -5.341421604156494
    6. '_dir' → logprob: -5.966421604156494
    7. '_vect' → logprob: -6.216421604156494
    8. ',' → logprob: -6.591421604156494
    9. '_point' → logprob: -6.966421604156494
    10. '):' → logprob: -8.966421127319336

Token 255: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6223098039627075
    2. ',' → logprob: -0.8723098039627075
    3. 'ection' → logprob: -3.372309684753418
    4. '):
' → logprob: -4.747309684753418
    5. 'ect' → logprob: -6.872309684753418
    6. '):

' → logprob: -7.497309684753418
    7. '=None' → logprob: -8.372309684753418
    8. 'ction' → logprob: -8.497309684753418
    9. 'ector' → logprob: -9.372309684753418
    10. ')' → logprob: -9.372309684753418

Token 256: ' carrots' (ID: 91266)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2445150464773178
    2. ' visited' → logprob: -1.619515061378479
    3. 'depth' → logprob: -5.4945149421691895
    4. 'car' → logprob: -5.7445149421691895
    5. ' depth' → logprob: -5.7445149421691895
    6. ' carrots' → logprob: -5.9945149421691895
    7. 'path' → logprob: -6.3695149421691895
    8. ' path' → logprob: -6.7445149421691895
    9. 'count' → logprob: -7.2445149421691895
    10. 'used' → logprob: -7.9945149421691895

Token 257: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.072993203997612
    2. ',' → logprob: -2.822993278503418
    3. '):
' → logprob: -4.572993278503418
    4. '):
' → logprob: -8.822993278503418
    5. ' ):' → logprob: -9.322993278503418
    6. ')' → logprob: -9.322993278503418
    7. '=' → logprob: -9.822993278503418
    8. '_count' → logprob: -10.197993278503418
    9. '):

' → logprob: -10.447993278503418
    10. ':' → logprob: -10.447993278503418

Token 258: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009533300064504147
    2. '):' → logprob: -4.759533405303955
    3. ' :' → logprob: -8.384532928466797
    4. ',' → logprob: -8.384532928466797
    5. ':
' → logprob: -8.509532928466797
    6. '   ' → logprob: -9.009532928466797
    7. '():' → logprob: -9.134532928466797
    8. '):
' → logprob: -11.509532928466797
    9. '>:' → logprob: -13.134532928466797
    10. ' ' → logprob: -13.384532928466797

Token 259: ' global' (ID: 5466)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3067865371704102
    2. 'max' → logprob: -1.3067865371704102
    3. 'global' (adapté à ' global') → logprob: -1.3067865371704102
    4. ' global' → logprob: -2.68178653717041
    5. ' if' → logprob: -2.68178653717041
    6. ' max' → logprob: -3.43178653717041
    7. '	global' → logprob: -4.80678653717041
    8. 'if' → logprob: -5.30678653717041
    9. '	max' → logprob: -6.43178653717041
    10. ':' → logprob: -6.80678653717041

Token 260: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31327128410339355
    2. ' max' → logprob: -1.3132712841033936
    3. '_max' → logprob: -11.688271522521973
    4. '	max' → logprob: -14.688271522521973
    5. 'r' → logprob: -14.938271522521973
    6. '(max' → logprob: -15.938271522521973
    7. 'Max' → logprob: -16.063270568847656
    8. '=max' → logprob: -17.313270568847656
    9. '[max' → logprob: -17.438270568847656
    10. '.max' → logprob: -17.438270568847656

Token 261: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.00013095269969198853
    2. '_c' → logprob: -9.000130653381348
    3. '_' → logprob: -12.000130653381348
    4. 'car' → logprob: -13.750130653381348
    5. 'Car' → logprob: -16.250131607055664
    6. '_max' → logprob: -18.125131607055664
    7. ' carrots' → logprob: -18.125131607055664
    8. '_cat' → logprob: -18.125131607055664
    9. '<Car' → logprob: -18.125131607055664
    10. '_city' → logprob: -18.250131607055664

Token 262: 'rots' (ID: 175556)
  Prédit: 'rots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -0.003282048273831606
    2. 'ots' → logprob: -5.753282070159912
    3. 'otts' → logprob: -9.253281593322754
    4. 'rot' → logprob: -12.378281593322754
    5. 'orts' → logprob: -13.378281593322754
    6. 'r' → logprob: -14.253281593322754
    7. 'pots' → logprob: -15.003281593322754
    8. 'ro' → logprob: -15.003281593322754
    9. 'lots' → logprob: -15.378281593322754
    10. 'ot' → logprob: -15.628281593322754

Token 263: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013324812054634094
    2. '   ' → logprob: -4.638324737548828
    3. '):' → logprob: -6.513324737548828
    4. ',' → logprob: -7.263324737548828
    5. '<|end|>' → logprob: -7.263324737548828
    6. ':
' → logprob: -8.138324737548828
    7. ')' → logprob: -8.888324737548828
    8. ' :' → logprob: -9.263324737548828
    9. ':return' → logprob: -10.763324737548828
    10. ' ' → logprob: -10.888324737548828

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1255027800798416
    2. ' if' → logprob: -2.750502824783325
    3. '<|end|>' → logprob: -3.875502824783325
    4. ':' → logprob: -4.125502586364746
    5. ' ' → logprob: -5.250502586364746
    6. ',' → logprob: -5.500502586364746
    7. 'if' → logprob: -5.750502586364746
    8. '
' → logprob: -6.875502586364746
    9. '  ' → logprob: -6.875502586364746
    10. ')' → logprob: -7.250502586364746

Token 265: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5991969108581543
    2. 'max' → logprob: -0.8491969108581543
    3. 'for' → logprob: -4.099196910858154
    4. '   ' → logprob: -5.474196910858154
    5. ' if' → logprob: -6.599196910858154
    6. 'visited' → logprob: -7.474196910858154
    7. ' max' → logprob: -9.224197387695312
    8. '#' → logprob: -10.224197387695312
    9. 'global' → logprob: -10.474197387695312
    10. ' for' → logprob: -10.474197387695312

Token 266: ' carrots' (ID: 91266)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4743829369544983
    2. ' length' → logprob: -0.9743829369544983
    3. ' carrots' → logprob: -9.724383354187012
    4. 'current' → logprob: -9.849383354187012
    5. 'len' → logprob: -9.974383354187012
    6. ' current' → logprob: -10.349383354187012
    7. '	length' → logprob: -10.474383354187012
    8. '(length' → logprob: -10.724383354187012
    9. 'max' → logprob: -11.224383354187012
    10. 'r' → logprob: -11.599383354187012

Token 267: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.22555552423000336
    2. '>' → logprob: -1.6005555391311646
    3. ' >=' → logprob: -9.475555419921875
    4. ' ' → logprob: -10.475555419921875
    5. ' <=' → logprob: -10.975555419921875
    6. '>=' → logprob: -11.350555419921875
    7. '   ' → logprob: -13.100555419921875
    8. '<=' → logprob: -13.850555419921875
    9. '+' → logprob: -13.975555419921875
    10. '.' → logprob: -14.100555419921875

Token 268: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.306760805164231e-05
    2. ' max' → logprob: -11.25001335144043
    3. '_max' → logprob: -21.00001335144043
    4. '	max' → logprob: -21.50001335144043
    5. '=max' → logprob: -22.50001335144043
    6. '(max' → logprob: -23.62501335144043
    7. 'Max' → logprob: -23.87501335144043
    8. '[max' → logprob: -24.00001335144043
    9. '.max' → logprob: -24.25001335144043
    10. ':max' → logprob: -24.87501335144043

Token 269: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -5.574251918005757e-05
    2. '_c' → logprob: -9.875055313110352
    3. '_' → logprob: -12.750055313110352
    4. 'car' → logprob: -14.125055313110352
    5. 'Car' → logprob: -14.750055313110352
    6. '_max' → logprob: -16.25005531311035
    7. '<Car' → logprob: -16.25005531311035
    8. ' Car' → logprob: -17.37505531311035
    9. '_ca' → logprob: -17.75005531311035
    10. '_C' → logprob: -17.75005531311035

Token 270: 'rots' (ID: 175556)
  Prédit: 'rots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -0.0028893945273011923
    2. 'ots' → logprob: -5.877889156341553
    3. 'otts' → logprob: -9.752889633178711
    4. 'rot' → logprob: -12.127889633178711
    5. 'orts' → logprob: -12.377889633178711
    6. 'r' → logprob: -12.377889633178711
    7. 's' → logprob: -12.502889633178711
    8. '_' → logprob: -13.502889633178711
    9. '_rot' → logprob: -13.877889633178711
    10. 'ot' → logprob: -14.127889633178711

Token 271: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024287392443511635
    2. ':
' → logprob: -8.375243186950684
    3. ' :' → logprob: -12.125243186950684
    4. ':max' → logprob: -12.875243186950684
    5. 'max' → logprob: -13.250243186950684
    6. '):' → logprob: -13.625243186950684
    7. ',' → logprob: -15.250243186950684
    8. '=' → logprob: -15.875243186950684
    9. ':**' → logprob: -16.000242233276367
    10. '[' → logprob: -16.000242233276367

Token 272: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9818106293678284
    2. '       ' → logprob: -1.2318105697631836
    3. ' max' → logprob: -1.2318105697631836
    4. ':' → logprob: -4.356810569763184
    5. '	max' → logprob: -4.731810569763184
    6. '   ' → logprob: -5.231810569763184
    7. '_max' → logprob: -5.481810569763184
    8. '(max' → logprob: -5.606810569763184
    9. '[max' → logprob: -6.106810569763184
    10. ',max' → logprob: -6.856810569763184

Token 273: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6932599544525146
    2. 'max' (adapté à ' max') → logprob: -0.6932599544525146
    3. '   ' → logprob: -9.318260192871094
    4. '_max' → logprob: -11.568260192871094
    5. '       ' → logprob: -11.818260192871094
    6. '	max' → logprob: -12.318260192871094
    7. '(max' → logprob: -14.068260192871094
    8. '[max' → logprob: -14.818260192871094
    9. ',max' → logprob: -15.068260192871094
    10. '
' → logprob: -16.568260192871094

Token 274: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -0.0010598446242511272
    2. '_c' → logprob: -6.8760600090026855
    3. 'car' → logprob: -10.751059532165527
    4. 'Car' → logprob: -13.126059532165527
    5. '_' → logprob: -13.251059532165527
    6. '_max' → logprob: -14.876059532165527
    7. '<Car' → logprob: -14.876059532165527
    8. '	car' → logprob: -15.626059532165527
    9. '_ca' → logprob: -15.751059532165527
    10. ' Car' → logprob: -16.501060485839844

Token 275: 'rots' (ID: 175556)
  Prédit: 'rots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -8.0536883615423e-05
    2. 'ots' → logprob: -9.500080108642578
    3. 'otts' → logprob: -13.125080108642578
    4. 'rot' → logprob: -13.625080108642578
    5. '_ro' → logprob: -14.250080108642578
    6. 'ro' → logprob: -14.500080108642578
    7. 'rats' → logprob: -14.750080108642578
    8. 'r' → logprob: -15.250080108642578
    9. 'ats' → logprob: -16.000080108642578
    10. 'orts' → logprob: -16.125080108642578

Token 276: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141470432281494
    2. '=' → logprob: -1.701414704322815
    3. ' ' → logprob: -14.326415061950684
    4. '=max' → logprob: -15.076415061950684
    5. ' +=' → logprob: -15.576415061950684
    6. ',' → logprob: -16.826414108276367
    7. ' =
' → logprob: -16.826414108276367
    8. '+=' → logprob: -16.951414108276367
    9. '=cut' → logprob: -17.201414108276367
    10. ')' → logprob: -17.451414108276367

Token 277: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.47408822178840637
    2. ' carrots' → logprob: -0.974088191986084
    3. 'c' → logprob: -12.099088668823242
    4. 'cars' → logprob: -13.224088668823242
    5. ' carot' → logprob: -13.349088668823242
    6. ' carrot' → logprob: -14.224088668823242
    7. 'Car' → logprob: -14.599088668823242
    8. '_car' → logprob: -15.349088668823242
    9. 'caret' → logprob: -15.349088668823242
    10. 'max' → logprob: -15.974088668823242

Token 278: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0798175111413002
    2. '
' → logprob: -2.954817533493042
    3. '    
' → logprob: -3.954817533493042
    4. '\n' → logprob: -6.579817295074463
    5. '  
' → logprob: -6.704817295074463
    6. '<|end|>' → logprob: -7.454817295074463
    7. ' 
' → logprob: -7.704817295074463
    8. '.' → logprob: -7.829817295074463
    9. ',' → logprob: -7.829817295074463
    10. '   
' → logprob: -7.954817295074463

Token 279: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17442621290683746
    2. 'for' → logprob: -2.549426317214966
    3. '   ' → logprob: -2.674426317214966
    4. '	for' → logprob: -5.299426078796387
    5. '<|end|>' → logprob: -5.674426078796387
    6. ' if' → logprob: -6.424426078796387
    7. '    
' → logprob: -7.299426078796387
    8. ' 
' → logprob: -7.924426078796387
    9. '
' → logprob: -8.049426078796387
    10. ',' → logprob: -8.299426078796387

Token 280: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00038813185528852046
    2. ' for' → logprob: -7.875388145446777
    3. '   ' → logprob: -12.250388145446777
    4. 'return' → logprob: -13.750388145446777
    5. 'if' → logprob: -13.750388145446777
    6. '	for' → logprob: -14.500388145446777
    7. '    
' → logprob: -15.000388145446777
    8. 'last' → logprob: -16.50038719177246
    9. 'visited' → logprob: -16.75038719177246
    10. 'next' → logprob: -17.12538719177246

Token 281: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2028241902589798
    2. 'i' → logprob: -1.7028242349624634
    3. ' next' → logprob: -6.702824115753174
    4. 'city' → logprob: -10.077824592590332
    5. 'Next' → logprob: -10.202824592590332
    6. ' i' → logprob: -10.202824592590332
    7. ' nxt' → logprob: -10.952824592590332
    8. '[next' → logprob: -11.327824592590332
    9. '_next' → logprob: -11.452824592590332
    10. '(next' → logprob: -12.077824592590332

Token 282: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -0.001868902356363833
    2. '_' → logprob: -6.501868724822998
    3. ' in' → logprob: -8.251869201660156
    4. '_c' → logprob: -10.251869201660156
    5. 'city' → logprob: -10.376869201660156
    6. ' city' → logprob: -11.626869201660156
    7. '_idx' → logprob: -12.001869201660156
    8. ' _' → logprob: -12.126869201660156
    9. '_i' → logprob: -12.251869201660156
    10. 'City' → logprob: -12.251869201660156

Token 283: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016773734241724014
    2. 'in' → logprob: -4.141773700714111
    3. ',' → logprob: -7.266773700714111
    4. ' ,' → logprob: -11.51677417755127
    5. '_in' → logprob: -12.26677417755127
    6. '	in' → logprob: -12.64177417755127
    7. 's' → logprob: -12.64177417755127
    8. ' ' → logprob: -12.76677417755127
    9. 'n' → logprob: -12.89177417755127
    10. '_idx' → logprob: -13.01677417755127

Token 284: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08948037028312683
    2. ' range' → logprob: -2.714480400085449
    3. 'cities' → logprob: -3.964480400085449
    4. ' cities' → logprob: -7.964480400085449
    5. '(range' → logprob: -11.58948040008545
    6. 'city' → logprob: -12.21448040008545
    7. 'c' → logprob: -12.46448040008545
    8. '[' → logprob: -12.46448040008545
    9. '	range' → logprob: -13.21448040008545
    10. 'ranges' → logprob: -13.33948040008545

Token 285: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.843177233240567e-05
    2. '(len' → logprob: -11.625018119812012
    3. 'n' → logprob: -12.000018119812012
    4. '(' → logprob: -13.000018119812012
    5. '(current' → logprob: -13.875018119812012
    6. '(next' → logprob: -18.750019073486328
    7. '	n' → logprob: -19.375019073486328
    8. 'len' → logprob: -19.500019073486328
    9. ' n' → logprob: -19.625019073486328
    10. ' (' → logprob: -19.750019073486328

Token 286: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011922525009140372
    2. '):
' → logprob: -6.751192092895508
    3. ' ):' → logprob: -11.001192092895508
    4. '):
' → logprob: -13.001192092895508
    5. '   ' → logprob: -13.876192092895508
    6. ':' → logprob: -14.001192092895508
    7. ')' → logprob: -14.126192092895508
    8. '}:' → logprob: -14.876192092895508
    9. ' ' → logprob: -16.126192092895508
    10. '):

' → logprob: -16.251192092895508

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04397936910390854
    2. ':' → logprob: -3.9189794063568115
    3. ' if' → logprob: -3.9189794063568115
    4. '   ' → logprob: -6.918979167938232
    5. ':
' → logprob: -7.293979167938232
    6. ' :' → logprob: -7.668979167938232
    7. '<|end|>' → logprob: -7.918979167938232
    8. ',' → logprob: -8.54397964477539
    9. ' ' → logprob: -8.91897964477539
    10. '    ' → logprob: -9.41897964477539

Token 288: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.442848801612854
    2. ' if' → logprob: -1.067848801612854
    3. '       ' → logprob: -4.3178486824035645
    4. '   ' → logprob: -7.3178486824035645
    5. '           ' → logprob: -10.192849159240723
    6. ':' → logprob: -12.567849159240723
    7. '	if' → logprob: -12.817849159240723
    8. ' ' → logprob: -13.442849159240723
    9. ')' → logprob: -13.567849159240723
    10. ',' → logprob: -13.692849159240723

Token 289: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00976919662207365
    2. 'cities' → logprob: -5.634768962860107
    3. ' next' → logprob: -6.384768962860107
    4. 'not' → logprob: -6.509768962860107
    5. 'dist' → logprob: -6.759768962860107
    6. 'length' → logprob: -7.509768962860107
    7. 'True' → logprob: -7.509768962860107
    8. 'visited' → logprob: -8.384769439697266
    9. 'current' → logprob: -8.634769439697266
    10. '(next' → logprob: -9.134769439697266

Token 290: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -7.584239938296378e-06
    2. '_' → logprob: -13.125007629394531
    3. '_CITY' → logprob: -13.250007629394531
    4. '_c' → logprob: -13.500007629394531
    5. ' !=' → logprob: -14.750007629394531
    6. 'city' → logprob: -14.750007629394531
    7. ' ==' → logprob: -15.125007629394531
    8. '==' → logprob: -15.500007629394531
    9. '_country' → logprob: -15.625007629394531
    10. ' city' → logprob: -15.750007629394531

Token 291: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.848896861076355
    2. ' ==' → logprob: -1.223896861076355
    3. '==' → logprob: -1.973896861076355
    4. '!=' → logprob: -1.973896861076355
    5. ' ' → logprob: -8.973896980285645
    6. '=' → logprob: -10.973896980285645
    7. ' ' → logprob: -11.098896980285645
    8. ')' → logprob: -11.473896980285645
    9. ')!=' → logprob: -12.098896980285645
    10. ']==' → logprob: -12.223896980285645

Token 292: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.676292231422849e-05
    2. ' current' → logprob: -11.000017166137695
    3. '   ' → logprob: -20.750017166137695
    4. '	current' → logprob: -21.375017166137695
    5. '=current' → logprob: -21.750017166137695
    6. '[current' → logprob: -22.250017166137695
    7. '$current' → logprob: -22.250017166137695
    8. ' ' → logprob: -23.000017166137695
    9. 'curr' → logprob: -23.250017166137695
    10. '.current' → logprob: -23.375017166137695

Token 293: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -3.531315314830863e-06
    2. 'city' → logprob: -13.125003814697266
    3. '_CITY' → logprob: -14.500003814697266
    4. '_' → logprob: -14.750003814697266
    5. '_c' → logprob: -15.125003814697266
    6. 'City' → logprob: -15.875003814697266
    7. ' city' → logprob: -16.750003814697266
    8. '-city' → logprob: -16.875003814697266
    9. '_car' → logprob: -18.000003814697266
    10. '_user' → logprob: -18.125003814697266

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1473439484834671
    2. ' or' → logprob: -2.272343873977661
    3. ':
' → logprob: -3.397343873977661
    4. ' :' → logprob: -8.272343635559082
    5. ' ' → logprob: -9.897343635559082
    6. ':return' → logprob: -9.897343635559082
    7. ' :
' → logprob: -10.147343635559082
    8. 'or' → logprob: -10.397343635559082
    9. ' and' → logprob: -11.272343635559082
    10. '   ' → logprob: -11.772343635559082

Token 295: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5527415871620178
    2. ':' → logprob: -1.552741527557373
    3. '           ' → logprob: -1.802741527557373
    4. ':
' → logprob: -3.427741527557373
    5. '       ' → logprob: -4.302741527557373
    6. '   ' → logprob: -6.802741527557373
    7. ' continue' → logprob: -7.427741527557373
    8. ' ' → logprob: -9.177742004394531
    9. 'continue' → logprob: -9.677742004394531
    10. ' and' → logprob: -10.177742004394531

Token 296: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.11566964536905289
    2. 'continue' (adapté à ' continue') → logprob: -2.2406697273254395
    3. '	continue' → logprob: -6.6156697273254395
    4. '       ' → logprob: -7.6156697273254395
    5. '           ' → logprob: -7.6156697273254395
    6. '               ' → logprob: -8.115669250488281
    7. 'contin' → logprob: -9.240669250488281
    8. '   ' → logprob: -9.615669250488281
    9. '_continue' → logprob: -10.740669250488281
    10. ' ' → logprob: -12.115669250488281

Token 297: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007334125693887472
    2. '        
' → logprob: -6.132334232330322
    3. '<|end|>' → logprob: -6.257334232330322
    4. '
' → logprob: -6.382334232330322
    5. ' if' → logprob: -7.382334232330322
    6. ',' → logprob: -8.132333755493164
    7. '  
' → logprob: -9.132333755493164
    8. '        ' → logprob: -9.132333755493164
    9. ' ' → logprob: -9.507333755493164
    10. '   ' → logprob: -9.882333755493164

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05393248051404953
    2. '        
' → logprob: -3.5539324283599854
    3. '<|end|>' → logprob: -4.4289326667785645
    4. '        ' → logprob: -5.6789326667785645
    5. ' ' → logprob: -6.0539326667785645
    6. '
' → logprob: -6.4289326667785645
    7. ',' → logprob: -6.6789326667785645
    8. ' 
' → logprob: -7.4289326667785645
    9. ')' → logprob: -8.053932189941406
    10. '  
' → logprob: -8.178932189941406

Token 299: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.44101932644844055
    2. 'dx' → logprob: -2.316019296646118
    3. 'distance' → logprob: -2.691019296646118
    4. 'length' → logprob: -2.941019296646118
    5. 'dist' → logprob: -3.566019296646118
    6. '       ' → logprob: -3.941019296646118
    7. 'next' → logprob: -4.191019535064697
    8. 'new' → logprob: -4.191019535064697
    9. 'l' → logprob: -4.316019535064697
    10. 'vec' → logprob: -4.316019535064697

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10010387748479843
    2. '=' → logprob: -2.9751038551330566
    3. 'istance' → logprob: -3.4751038551330566
    4. 'ist' → logprob: -4.350103855133057
    5. '_' → logprob: -9.475104331970215
    6. 'is' → logprob: -10.225104331970215
    7. 'new' → logprob: -10.600104331970215
    8. ' ' → logprob: -10.850104331970215
    9. '_=' → logprob: -10.850104331970215
    10. '_new' → logprob: -10.975104331970215

Token 301: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.688212614681106e-05
    2. ' dist' → logprob: -11.000017166137695
    3. '	dist' → logprob: -17.000017166137695
    4. '(dist' → logprob: -17.375017166137695
    5. 'math' → logprob: -18.000017166137695
    6. 'd' → logprob: -18.125017166137695
    7. '   ' → logprob: -18.750017166137695
    8. '.dist' → logprob: -19.500017166137695
    9. '_dist' → logprob: -19.750017166137695
    10. 'dis' → logprob: -19.750017166137695

Token 302: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.008129963040119e-06
    2. 'cities' → logprob: -12.625003814697266
    3. '(' → logprob: -14.375003814697266
    4. '(city' → logprob: -16.375003814697266
    5. ' cities' → logprob: -16.875003814697266
    6. '((' → logprob: -17.875003814697266
    7. '(current' → logprob: -19.750003814697266
    8. ' (' → logprob: -19.875003814697266
    9. '	c' → logprob: -20.375003814697266
    10. 'Cities' → logprob: -21.000003814697266

Token 303: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -0.0003631137660704553
    2. 'cities' → logprob: -8.50036334991455
    3. '(c' → logprob: -9.12536334991455
    4. 'ties' → logprob: -11.12536334991455
    5. '[c' → logprob: -11.62536334991455
    6. 'ites' → logprob: -12.12536334991455
    7. 'ITIES' → logprob: -12.25036334991455
    8. 'ies' → logprob: -12.37536334991455
    9. ' cities' → logprob: -12.50036334991455
    10. 's' → logprob: -12.62536334991455

Token 304: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.20181724429130554
    2. '[c' → logprob: -1.701817274093628
    3. '[' → logprob: -8.326817512512207
    4. '(current' → logprob: -9.576817512512207
    5. '[curr' → logprob: -11.076817512512207
    6. '[next' → logprob: -11.326817512512207
    7. 'current' → logprob: -11.451817512512207
    8. ')' → logprob: -11.451817512512207
    9. ')[' → logprob: -11.576817512512207
    10. '(c' → logprob: -11.826817512512207

Token 305: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -2.3319124011322856e-05
    2. 'city' → logprob: -12.000022888183594
    3. '[' → logprob: -12.375022888183594
    4. '_c' → logprob: -12.875022888183594
    5. 'City' → logprob: -13.125022888183594
    6. ' city' → logprob: -13.625022888183594
    7. '_CITY' → logprob: -13.750022888183594
    8. '][' → logprob: -14.250022888183594
    9. '-city' → logprob: -14.250022888183594
    10. ']' → logprob: -14.500022888183594

Token 306: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.02188929170370102
    2. '][' → logprob: -3.8968892097473145
    3. '],[' → logprob: -7.2718892097473145
    4. ']' → logprob: -7.6468892097473145
    5. ',' → logprob: -9.146889686584473
    6. '[c' → logprob: -10.521889686584473
    7. ' ],' → logprob: -11.271889686584473
    8. '[' → logprob: -11.646889686584473
    9. ',c' → logprob: -11.896889686584473
    10. '   ' → logprob: -12.646889686584473

Token 307: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.004090985283255577
    2. ' cities' → logprob: -5.504090785980225
    3. 'c' → logprob: -11.629091262817383
    4. ')' → logprob: -13.629091262817383
    5. '   ' → logprob: -14.254091262817383
    6. 'city' → logprob: -14.379091262817383
    7. 'cit' → logprob: -14.754091262817383
    8. ' ' → logprob: -15.504091262817383
    9. 'cars' → logprob: -16.004091262817383
    10. '	c' → logprob: -16.379091262817383

Token 308: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.875000953674316
    3. '[c' → logprob: -15.125000953674316
    4. '
' → logprob: -16.000001907348633
    5. '][' → logprob: -17.000001907348633
    6. '[current' → logprob: -17.125001907348633
    7. '[
' → logprob: -17.500001907348633
    8. ' [' → logprob: -17.625001907348633
    9. 'next' → logprob: -17.750001907348633
    10. '[n' → logprob: -17.875001907348633

Token 309: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -4.0722858102526516e-05
    2. 'city' → logprob: -10.250041007995605
    3. 'City' → logprob: -13.375041007995605
    4. '_CITY' → logprob: -14.500041007995605
    5. 'next' → logprob: -14.625041007995605
    6. '_c' → logprob: -15.000041007995605
    7. '-city' → logprob: -15.125041007995605
    8. '```' → logprob: -15.125041007995605
    9. '_country' → logprob: -15.250041007995605
    10. '[' → logprob: -15.375041007995605

Token 310: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019889144459739327
    2. ')
' → logprob: -8.750199317932129
    3. ' )' → logprob: -10.250199317932129
    4. ')
' → logprob: -13.375199317932129
    5. ')`' → logprob: -14.125199317932129
    6. '])' → logprob: -14.500199317932129
    7. '))' → logprob: -14.500199317932129
    8. '`)' → logprob: -14.750199317932129
    9. ' ' → logprob: -15.125199317932129
    10. '）' → logprob: -15.875199317932129

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025793785229325294
    2. ' if' → logprob: -4.525793552398682
    3. '<|end|>' → logprob: -4.650793552398682
    4. ' ' → logprob: -6.400793552398682
    5. '        ' → logprob: -6.775793552398682
    6. ',' → logprob: -6.900793552398682
    7. 'if' → logprob: -7.775793552398682
    8. ' ' → logprob: -8.52579402923584
    9. ')' → logprob: -8.90079402923584
    10. '        
' → logprob: -9.02579402923584

Token 312: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12919297814369202
    2. 'if' (adapté à ' if') → logprob: -2.129193067550659
    3. '       ' → logprob: -6.12919282913208
    4. '   ' → logprob: -9.754193305969238
    5. '	if' → logprob: -12.129193305969238
    6. '        
' → logprob: -12.254193305969238
    7. '           ' → logprob: -12.629193305969238
    8. '    ' → logprob: -13.129193305969238
    9. ' ' → logprob: -13.254193305969238
    10. ' new' → logprob: -13.379193305969238

Token 313: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0790240690112114
    2. ' length' → logprob: -2.579024076461792
    3. 'd' → logprob: -9.079024314880371
    4. ' d' → logprob: -10.954024314880371
    5. '(length' → logprob: -13.454024314880371
    6. '	length' → logprob: -13.954024314880371
    7. ' ' → logprob: -15.954024314880371
    8. '   ' → logprob: -16.579023361206055
    9. 'ength' → logprob: -16.704023361206055
    10. 'leng' → logprob: -17.079023361206055

Token 314: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -7.896309739408025e-07
    2. 'used' → logprob: -15.000000953674316
    3. '_use' → logprob: -16.375
    4. '_' → logprob: -16.375
    5. '_using' → logprob: -16.625
    6. '_USED' → logprob: -17.5
    7. '_usage' → logprob: -18.0
    8. '_taken' → logprob: -18.0
    9. '_us' → logprob: -18.25
    10. '_unused' → logprob: -18.25

Token 315: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47502294182777405
    2. '+' → logprob: -0.9750229120254517
    3. '+d' → logprob: -6.975022792816162
    4. '+r' → logprob: -11.60002326965332
    5. ' ' → logprob: -14.47502326965332
    6. '+c' → logprob: -15.47502326965332
    7. '＋' → logprob: -15.72502326965332
    8. ' plus' → logprob: -16.22502326965332
    9. '+t' → logprob: -16.22502326965332
    10. '+D' → logprob: -16.60002326965332

Token 316: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0548846572637558
    2. ' d' → logprob: -2.929884672164917
    3. 'int' → logprob: -13.429884910583496
    4. ' ' → logprob: -15.304884910583496
    5. '	d' → logprob: -15.679884910583496
    6. ' int' → logprob: -15.929884910583496
    7. ' ' → logprob: -16.67988395690918
    8. ')d' → logprob: -17.05488395690918
    9. '   ' → logprob: -17.11738395690918
    10. '>d' → logprob: -17.24238395690918

Token 317: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5822206735610962
    2. ' <=' → logprob: -0.9572206735610962
    3. '>' → logprob: -3.3322205543518066
    4. '<=' → logprob: -3.8322205543518066
    5. ' ' → logprob: -12.207221031188965
    6. '+' → logprob: -14.207221031188965
    7. '<' → logprob: -14.207221031188965
    8. ' <' → logprob: -14.207221031188965
    9. ' >
' → logprob: -14.332221031188965
    10. ' ' → logprob: -14.457221031188965

Token 318: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002613358374219388
    2. ' r' → logprob: -8.250261306762695
    3. '	r' → logprob: -17.250261306762695
    4. ' ' → logprob: -20.750261306762695
    5. '   ' → logprob: -20.875261306762695
    6. '_r' → logprob: -21.000261306762695
    7. '
' → logprob: -21.625261306762695
    8. 'float' → logprob: -22.125261306762695
    9. '(r' → logprob: -22.250261306762695
    10. '­r' → logprob: -22.375261306762695

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06516975909471512
    2. ' or' → logprob: -2.8151698112487793
    3. ':
' → logprob: -5.815169811248779
    4. 'or' → logprob: -9.065169334411621
    5. ' :' → logprob: -9.815169334411621
    6. ')' → logprob: -11.190169334411621
    7. ':return' → logprob: -11.440169334411621
    8. ' ' → logprob: -11.940169334411621
    9. ' and' → logprob: -12.690169334411621
    10. '   ' → logprob: -13.065169334411621

Token 320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14820784330368042
    2. ' continue' → logprob: -2.023207902908325
    3. '       ' → logprob: -5.898207664489746
    4. 'continue' → logprob: -6.148207664489746
    5. '   ' → logprob: -8.398207664489746
    6. '	continue' → logprob: -8.523207664489746
    7. '               ' → logprob: -8.648207664489746
    8. ' continues' → logprob: -12.273207664489746
    9. ' ' → logprob: -12.273207664489746
    10. ' ' → logprob: -12.398207664489746

Token 321: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.03966952860355377
    2. 'continue' (adapté à ' continue') → logprob: -3.5396695137023926
    3. '           ' → logprob: -4.664669513702393
    4. '               ' → logprob: -8.41466999053955
    5. '       ' → logprob: -8.91466999053955
    6. '	continue' → logprob: -9.41466999053955
    7. '   ' → logprob: -12.78966999053955
    8. '_continue' → logprob: -13.03966999053955
    9. ' ' → logprob: -13.53966999053955
    10. ' continues' → logprob: -13.78966999053955

Token 322: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.130751833319664
    2. '
' → logprob: -2.755751848220825
    3. '        
' → logprob: -3.130751848220825
    4. ' 
' → logprob: -4.630751609802246
    5. '  
' → logprob: -6.630751609802246
    6. '    
' → logprob: -6.880751609802246
    7. '       
' → logprob: -7.130751609802246
    8. 'n' → logprob: -7.880751609802246
    9. '   
' → logprob: -7.880751609802246
    10. '   ' → logprob: -8.130751609802246

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37398573756217957
    2. '   ' → logprob: -1.373985767364502
    3. ' if' → logprob: -3.998985767364502
    4. '        
' → logprob: -4.498985767364502
    5. '    
' → logprob: -4.998985767364502
    6. 'if' → logprob: -5.248985767364502
    7. 'v' → logprob: -6.123985767364502
    8. '    ' → logprob: -6.123985767364502
    9. '  ' → logprob: -6.373985767364502
    10. 'n' → logprob: -6.373985767364502

Token 324: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6176020503044128
    2. '       ' → logprob: -2.2426021099090576
    3. 'if' → logprob: -2.7426021099090576
    4. 'next' → logprob: -2.8676021099090576
    5. 'dir' → logprob: -2.9926021099090576
    6. 'vec' → logprob: -3.1176021099090576
    7. '   ' → logprob: -3.4926021099090576
    8. 'direction' → logprob: -3.9926021099090576
    9. '        
' → logprob: -4.2426018714904785
    10. '
' → logprob: -4.4926018714904785

Token 325: ' direction' (ID: 9262)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2823317050933838
    2. 'if' → logprob: -1.4073317050933838
    3. 'vec' → logprob: -1.7823317050933838
    4. 'dir' → logprob: -1.7823317050933838
    5. 'direction' → logprob: -2.282331705093384
    6. 'dx' → logprob: -3.907331705093384
    7. 'next' → logprob: -4.657331466674805
    8. 'new' → logprob: -5.657331466674805
    9. 'vector' → logprob: -6.407331466674805
    10. '#' → logprob: -6.782331466674805

Token 326: ' vector' (ID: 9727)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031227095052599907
    2. '=' → logprob: -4.906227111816406
    3. '_vector' → logprob: -4.906227111816406
    4. '_vec' → logprob: -5.406227111816406
    5. '1' → logprob: -5.906227111816406
    6. '_current' → logprob: -6.031227111816406
    7. ' vector' → logprob: -6.156227111816406
    8. 'vector' → logprob: -6.781227111816406
    9. '_v' → logprob: -7.156227111816406
    10. '   ' → logprob: -7.906227111816406

Token 327: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05639177933335304
    2. '=' → logprob: -3.056391716003418
    3. 'v' → logprob: -5.181391716003418
    4. 'dx' → logprob: -6.806391716003418
    5. ' dx' → logprob: -8.306391716003418
    6. '       ' → logprob: -8.556391716003418
    7. '=(' → logprob: -8.931391716003418
    8. ' v' → logprob: -9.181391716003418
    9. 'next' → logprob: -9.556391716003418
    10. '(dx' → logprob: -10.556391716003418

Token 328: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029449129477143288
    2. '=' → logprob: -3.654449224472046
    3. 'v' → logprob: -6.529448986053467
    4. '       ' → logprob: -7.404448986053467
    5. 'current' → logprob: -8.404449462890625
    6. 'next' → logprob: -8.779449462890625
    7. '           ' → logprob: -9.029449462890625
    8. ' v' → logprob: -9.404449462890625
    9. '   ' → logprob: -9.404449462890625
    10. ' current' → logprob: -9.404449462890625

Token 329: ' cur' (ID: 4396)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2569618225097656
    2. 'dx' → logprob: -2.0069618225097656
    3. '(' → logprob: -3.6319618225097656
    4. 'dir' → logprob: -3.8819618225097656
    5. '(dx' → logprob: -4.506961822509766
    6. ' v' → logprob: -5.131961822509766
    7. ' (' → logprob: -5.131961822509766
    8. ' dx' → logprob: -5.256961822509766
    9. 'next' → logprob: -5.631961822509766
    10. 'direction' → logprob: -5.756961822509766

Token 330: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.4229009449481964
    2. '_vec' → logprob: -1.172900915145874
    3. '_vector' → logprob: -3.547900915145874
    4. '_vect' → logprob: -5.547901153564453
    5. '_' → logprob: -6.797901153564453
    6. 'rent' → logprob: -7.797901153564453
    7. 'r' → logprob: -8.047901153564453
    8. ' =' → logprob: -8.297901153564453
    9. '_direction' → logprob: -9.047901153564453
    10. '_v' → logprob: -9.047901153564453

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484526574611664
    2. '=' → logprob: -1.2234526872634888
    3. ')' → logprob: -12.3484525680542
    4. 's' → logprob: -13.9734525680542
    5. ',' → logprob: -14.2234525680542
    6. ' ' → logprob: -14.9734525680542
    7. 'x' → logprob: -15.2234525680542
    8. '[' → logprob: -15.7234525680542
    9. 'vector' → logprob: -15.8484525680542
    10. '=

' → logprob: -16.098453521728516

Token 332: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0015644963132217526
    2. ' (' → logprob: -7.0015645027160645
    3. '(city' → logprob: -7.6265645027160645
    4. '(' → logprob: -9.251564025878906
    5. '(
' → logprob: -10.251564025878906
    6. '(current' → logprob: -11.126564025878906
    7. '(next' → logprob: -11.501564025878906
    8. '   ' → logprob: -13.876564025878906
    9. '(d' → logprob: -13.876564025878906
    10. 'cities' → logprob: -13.876564025878906

Token 333: 'cities' (ID: 131097)
  Prédit: 'cities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -2.856408536899835e-05
    2. ' cities' → logprob: -10.500028610229492
    3. '   ' → logprob: -13.875028610229492
    4. 'city' → logprob: -17.000028610229492
    5. '	c' → logprob: -17.625028610229492
    6. ')' → logprob: -17.625028610229492
    7. 'c' → logprob: -18.125028610229492
    8. '(c' → logprob: -18.500028610229492
    9. ' ' → logprob: -19.000028610229492
    10. 'cars' → logprob: -19.500028610229492

Token 334: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.00018792471382766962
    2. 'next' → logprob: -8.750187873840332
    3. '[current' → logprob: -10.500187873840332
    4. '[' → logprob: -13.750187873840332
    5. '[n' → logprob: -15.750187873840332
    6. ' [' → logprob: -15.750187873840332
    7. '   ' → logprob: -16.00018882751465
    8. ' next' → logprob: -16.12518882751465
    9. '[
' → logprob: -16.75018882751465
    10. ')[' → logprob: -17.37518882751465

Token 335: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -5.8126592193730175e-05
    2. '[next' → logprob: -10.0000581741333
    3. '[' → logprob: -12.6250581741333
    4. 'next' → logprob: -13.0000581741333
    5. 'city' → logprob: -13.0000581741333
    6. '_country' → logprob: -13.8750581741333
    7. '_c' → logprob: -13.8750581741333
    8. '_CITY' → logprob: -14.2500581741333
    9. '(next' → logprob: -14.5000581741333
    10. 'City' → logprob: -15.1250581741333

Token 336: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5761165618896484
    2. '[' → logprob: -0.8261165618896484
    3. '0' → logprob: -8.826116561889648
    4. '
' → logprob: -11.826116561889648
    5. '   ' → logprob: -11.826116561889648
    6. '1' → logprob: -12.701116561889648
    7. ']' → logprob: -13.076116561889648
    8. ')[' → logprob: -13.576116561889648
    9. ' ][' → logprob: -13.576116561889648
    10. 'x' → logprob: -14.076116561889648

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '
' → logprob: -16.875
    3. '   ' → logprob: -17.0
    4. ' ' → logprob: -17.375
    5. '1' → logprob: -18.0
    6. '[' → logprob: -20.0625
    7. '```' → logprob: -20.1875
    8. '۰' → logprob: -20.5625
    9. '

' → logprob: -20.8125
    10. '"' → logprob: -20.9375

Token 338: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11292549222707748
    2. ']-' → logprob: -2.2379255294799805
    3. '-' → logprob: -9.86292552947998
    4. ' -' → logprob: -9.98792552947998
    5. ' ]' → logprob: -12.86292552947998
    6. '[' → logprob: -13.98792552947998
    7. '```' → logprob: -15.36292552947998
    8. '   ' → logprob: -15.48792552947998
    9. '][' → logprob: -15.98792552947998
    10. ']
' → logprob: -15.98792552947998

Token 339: 'cities' (ID: 131097)
  Prédit: 'cities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.0005581548321060836
    2. ' cities' → logprob: -7.500558376312256
    3. 'c' → logprob: -12.625557899475098
    4. '   ' → logprob: -14.250557899475098
    5. 'city' → logprob: -14.375557899475098
    6. '	c' → logprob: -15.125557899475098
    7. 'current' → logprob: -16.375558853149414
    8. 'cit' → logprob: -16.500558853149414
    9. ' ' → logprob: -17.125558853149414
    10. '
' → logprob: -17.250558853149414

Token 340: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.20228126645088196
    2. 'current' → logprob: -1.7022812366485596
    3. 'cities' → logprob: -7.452281475067139
    4. 'city' → logprob: -9.20228099822998
    5. ' current' → logprob: -9.57728099822998
    6. '_current' → logprob: -10.32728099822998
    7. '[' → logprob: -10.70228099822998
    8. '_city' → logprob: -10.82728099822998
    9. '(current' → logprob: -11.32728099822998
    10. '   ' → logprob: -11.95228099822998

Token 341: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -8.2994620242971e-06
    2. 'city' → logprob: -12.500008583068848
    3. '[' → logprob: -12.750008583068848
    4. '[current' → logprob: -14.875008583068848
    5. '_CITY' → logprob: -14.875008583068848
    6. 'City' → logprob: -15.125008583068848
    7. ' city' → logprob: -16.12500762939453
    8. '_c' → logprob: -16.25000762939453
    9. '[c' → logprob: -16.50000762939453
    10. 's' → logprob: -17.25000762939453

Token 342: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07036040723323822
    2. '][' → logprob: -2.6953604221343994
    3. '0' → logprob: -7.94536018371582
    4. ' [' → logprob: -10.69536018371582
    5. ' ][' → logprob: -11.32036018371582
    6. ']' → logprob: -12.19536018371582
    7. '()[' → logprob: -12.19536018371582
    8. 'x' → logprob: -12.32036018371582
    9. '   ' → logprob: -12.44536018371582
    10. '1' → logprob: -12.44536018371582

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.75001049041748
    3. '[' → logprob: -13.12501049041748
    4. '1' → logprob: -15.37501049041748
    5. '   ' → logprob: -15.93751049041748
    6. '
' → logprob: -16.687511444091797
    7. 'x' → logprob: -17.187511444091797
    8. '```' → logprob: -17.312511444091797
    9. ''s' → logprob: -18.312511444091797
    10. '  ' → logprob: -18.312511444091797

Token 344: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.588793960167095e-05
    2. ' ,' → logprob: -10.000076293945312
    3. ',
' → logprob: -11.125076293945312
    4. ',c' → logprob: -11.625076293945312
    5. '),' → logprob: -12.375076293945312
    6. ')' → logprob: -13.625076293945312
    7. ',\
' → logprob: -14.875076293945312
    8. '‌,' → logprob: -15.250076293945312
    9. ',

' → logprob: -15.625076293945312
    10. '),(' → logprob: -15.875076293945312

Token 345: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.03804412856698036
    2. ' cities' → logprob: -3.2880442142486572
    3. '   ' → logprob: -13.413043975830078
    4. 'city' → logprob: -14.913043975830078
    5. '	c' → logprob: -15.163043975830078
    6. ' ' → logprob: -15.413043975830078
    7. 'c' → logprob: -16.038043975830078
    8. '    ' → logprob: -16.163043975830078
    9. ' ' → logprob: -17.038043975830078
    10. ' cidades' → logprob: -17.038043975830078

Token 346: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.001405232702381909
    2. 'next' → logprob: -7.001405239105225
    3. '[' → logprob: -7.751405239105225
    4. '1' → logprob: -10.251404762268066
    5. ' next' → logprob: -11.376404762268066
    6. '[current' → logprob: -12.501404762268066
    7. '_next' → logprob: -13.001404762268066
    8. '   ' → logprob: -13.126404762268066
    9. '(next' → logprob: -13.501404762268066
    10. ',next' → logprob: -14.001404762268066

Token 347: '_city' (ID: 60413)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -0.8967186212539673
    2. 'next' → logprob: -1.3967186212539673
    3. '_city' → logprob: -1.6467186212539673
    4. '1' → logprob: -2.0217185020446777
    5. '[' → logprob: -4.396718502044678
    6. '_next' → logprob: -5.646718502044678
    7. 'city' → logprob: -6.271718502044678
    8. '   ' → logprob: -7.146718502044678
    9. ' next' → logprob: -8.646718978881836
    10. '
' → logprob: -8.771718978881836

Token 348: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.8113539814949036
    2. '[' → logprob: -0.9363539814949036
    3. '1' → logprob: -1.8113539218902588
    4. '0' → logprob: -9.43635368347168
    5. '   ' → logprob: -9.81135368347168
    6. ')[' → logprob: -10.68635368347168
    7. ']' → logprob: -10.93635368347168
    8. '-' → logprob: -10.93635368347168
    9. ' ][' → logprob: -11.31135368347168
    10. ' [' → logprob: -11.81135368347168

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000797715678345412
    2. '[' → logprob: -7.250797748565674
    3. '[next' → logprob: -10.125797271728516
    4. 'next' → logprob: -10.625797271728516
    5. ' ' → logprob: -11.500797271728516
    6. 'city' → logprob: -11.875797271728516
    7. 'cities' → logprob: -12.625797271728516
    8. '
' → logprob: -14.250797271728516
    9. '   ' → logprob: -14.250797271728516
    10. 'current' → logprob: -14.500797271728516

Token 350: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7214809656143188
    2. '[next' → logprob: -1.8464809656143188
    3. '-' → logprob: -1.9714809656143188
    4. ']-' → logprob: -2.2214808464050293
    5. '1' → logprob: -2.4714808464050293
    6. ']' → logprob: -4.471480846405029
    7. '-next' → logprob: -5.596480846405029
    8. '][' → logprob: -5.846480846405029
    9. 'next' → logprob: -6.346480846405029
    10. '0' → logprob: -6.471480846405029

Token 351: 'cities' (ID: 131097)
  Prédit: 'cities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.00010521204239921644
    2. '[c' → logprob: -9.500104904174805
    3. ' cities' → logprob: -10.875104904174805
    4. '0' → logprob: -12.250104904174805
    5. 'current' → logprob: -13.000104904174805
    6. '(c' → logprob: -14.000104904174805
    7. 'c' → logprob: -14.000104904174805
    8. '
' → logprob: -14.375104904174805
    9. '1' → logprob: -14.750104904174805
    10. '-c' → logprob: -15.000104904174805

Token 352: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.36639928817749023
    2. '1' → logprob: -1.8663992881774902
    3. '[next' → logprob: -2.2413992881774902
    4. '[' → logprob: -3.1163992881774902
    5. 'current' → logprob: -6.99139928817749
    6. ' ' → logprob: -8.116399765014648
    7. '0' → logprob: -9.116399765014648
    8. '-' → logprob: -10.616399765014648
    9. '[curr' → logprob: -10.866399765014648
    10. '(current' → logprob: -11.116399765014648

Token 353: '_city' (ID: 60413)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034439763985574245
    2. '_city' → logprob: -6.503444194793701
    3. ' ' → logprob: -6.878444194793701
    4. '0' → logprob: -7.628444194793701
    5. '[' → logprob: -8.378443717956543
    6. 'city' → logprob: -9.628443717956543
    7. '   ' → logprob: -9.753443717956543
    8. '-' → logprob: -10.503443717956543
    9. 'City' → logprob: -10.628443717956543
    10. ')' → logprob: -12.628443717956543

Token 354: '][' (ID: 2696)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001307617872953415
    2. '[' → logprob: -7.001307487487793
    3. '][' → logprob: -8.626307487487793
    4. ']' → logprob: -8.876307487487793
    5. ' ' → logprob: -10.501307487487793
    6. '   ' → logprob: -11.126307487487793
    7. '])' → logprob: -11.376307487487793
    8. '-' → logprob: -11.876307487487793
    9. '0' → logprob: -12.126307487487793
    10. ']-' → logprob: -12.501307487487793

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003182467306032777
    2. '0' → logprob: -5.753182411193848
    3. ' ' → logprob: -12.628182411193848
    4. 'current' → logprob: -14.128182411193848
    5. '[' → logprob: -14.878182411193848
    6. '   ' → logprob: -15.753182411193848
    7. '
' → logprob: -17.128183364868164
    8. '[current' → logprob: -17.253183364868164
    9. 'prev' → logprob: -17.878183364868164
    10. 'curr' → logprob: -17.878183364868164

Token 356: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023727134976070374
    2. ')
' → logprob: -8.375237464904785
    3. ' )' → logprob: -12.375237464904785
    4. '   ' → logprob: -13.250237464904785
    5. ')

' → logprob: -14.875237464904785
    6. ')
' → logprob: -15.125237464904785
    7. ')`' → logprob: -17.12523651123047
    8. ' ' → logprob: -18.00023651123047
    9. ')#' → logprob: -18.12523651123047
    10. ' ' → logprob: -18.25023651123047

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028173919767141342
    2. ' angle' → logprob: -4.403173923492432
    3. ' if' → logprob: -5.028173923492432
    4. 'angle' → logprob: -5.528173923492432
    5. '   ' → logprob: -5.903173923492432
    6. '        
' → logprob: -7.278173923492432
    7. 'if' → logprob: -7.528173923492432
    8. ',' → logprob: -7.528173923492432
    9. ')' → logprob: -8.403173446655273
    10. '<|end|>' → logprob: -9.903173446655273

Token 358: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25598081946372986
    2. ' if' → logprob: -2.1309807300567627
    3. 'angle' → logprob: -2.8809807300567627
    4. '   ' → logprob: -3.0059807300567627
    5. ' angle' → logprob: -7.005980968475342
    6. '       ' → logprob: -8.130980491638184
    7. '    
' → logprob: -9.130980491638184
    8. 'ang' → logprob: -9.380980491638184
    9. ')' → logprob: -10.005980491638184
    10. '        
' → logprob: -10.380980491638184

Token 359: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.06213495135307312
    2. ' prev' → logprob: -2.8121349811553955
    3. 'angle' → logprob: -10.062134742736816
    4. 'length' → logprob: -10.312134742736816
    5. ' angle' → logprob: -11.062134742736816
    6. '	prev' → logprob: -11.312134742736816
    7. 'abs' → logprob: -11.437134742736816
    8. ' length' → logprob: -11.562134742736816
    9. 'len' → logprob: -11.687134742736816
    10. '(prev' → logprob: -11.937134742736816

Token 360: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -13.625003814697266
    3. '_len' → logprob: -14.500003814697266
    4. '_direction' → logprob: -14.875003814697266
    5. 'dir' → logprob: -15.125003814697266
    6. ' is' → logprob: -15.125003814697266
    7. '_d' → logprob: -15.750003814697266
    8. ' _' → logprob: -15.750003814697266
    9. ':' → logprob: -16.125003814697266
    10. '_pos' → logprob: -16.250003814697266

Token 361: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.387440949678421
    2. 'is' → logprob: -1.1374409198760986
    3. '!=' → logprob: -7.637441158294678
    4. '==' → logprob: -10.13744068145752
    5. ' !=' → logprob: -11.01244068145752
    6. ' ' → logprob: -11.51244068145752
    7. ')' → logprob: -12.13744068145752
    8. '[' → logprob: -12.38744068145752
    9. 'and' → logprob: -13.26244068145752
    10. 'not' → logprob: -13.38744068145752

Token 362: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2787242829799652
    2. ' not' → logprob: -1.7787243127822876
    3. 'None' → logprob: -2.653724193572998
    4. ' None' → logprob: -5.528724193572998
    5. '   ' → logprob: -10.903724670410156
    6. 'Not' → logprob: -11.903724670410156
    7. ' ' → logprob: -12.403724670410156
    8. '(None' → logprob: -12.528724670410156
    9. '	not' → logprob: -13.153724670410156
    10. '(not' → logprob: -14.028724670410156

Token 363: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0011897491058334708
    2. ' None' → logprob: -6.751189708709717
    3. 'not' → logprob: -11.251190185546875
    4. '   ' → logprob: -12.126190185546875
    5. '(None' → logprob: -14.501190185546875
    6. ' not' → logprob: -15.251190185546875
    7. '_None' → logprob: -15.626190185546875
    8. 'Not' → logprob: -16.251190185546875
    9. ' ' → logprob: -16.751190185546875
    10. 'none' → logprob: -17.376190185546875

Token 364: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5439589619636536
    2. ':' → logprob: -1.1689589023590088
    3. ':
' → logprob: -2.918958902359009
    4. 'and' → logprob: -2.918958902359009
    5. '   ' → logprob: -7.668959140777588
    6. '       ' → logprob: -8.91895866394043
    7. ' :' → logprob: -9.54395866394043
    8. '           ' → logprob: -9.79395866394043
    9. ':

' → logprob: -9.79395866394043
    10. ' :
' → logprob: -10.66895866394043

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24615556001663208
    2. 'angle' → logprob: -2.2461555004119873
    3. ' angle' → logprob: -2.7461555004119873
    4. '       ' → logprob: -3.6211555004119873
    5. ' and' → logprob: -4.621155738830566
    6. ' if' → logprob: -5.246155738830566
    7. 'if' → logprob: -6.371155738830566
    8. '
' → logprob: -6.996155738830566
    9. ' or' → logprob: -6.996155738830566
    10. '            
' → logprob: -7.496155738830566

Token 366: ' a' (ID: 261)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.19720898568630219
    2. 'a' (adapté à ' a') → logprob: -2.697208881378174
    3. '           ' → logprob: -3.197208881378174
    4. 'ang' → logprob: -3.572208881378174
    5. 'if' → logprob: -3.947208881378174
    6. ' angle' → logprob: -4.697208881378174
    7. '   ' → logprob: -5.072208881378174
    8. ' if' → logprob: -5.947208881378174
    9. '               ' → logprob: -6.197208881378174
    10. ' ang' → logprob: -6.697208881378174

Token 367: ' =' (ID: 314)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.05869416519999504
    2. ' =' → logprob: -3.6836941242218018
    3. 'angle' → logprob: -3.8086941242218018
    4. '=' → logprob: -5.183694362640381
    5. '_angle' → logprob: -5.683694362640381
    6. 'gle' → logprob: -8.308693885803223
    7. 'ngulo' → logprob: -8.558693885803223
    8. 'ngel' → logprob: -9.058693885803223
    9. 'n' → logprob: -10.433693885803223
    10. '_ng' → logprob: -10.683693885803223

Token 368: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.006715370807796717
    2. ' angle' → logprob: -5.006715297698975
    3. '(angle' → logprob: -19.131715774536133
    4. 'abs' → logprob: -20.131715774536133
    5. '   ' → logprob: -20.506715774536133
    6. '.angle' → logprob: -20.756715774536133
    7. 'angel' → logprob: -21.131715774536133
    8. ' ' → logprob: -21.131715774536133
    9. 'angular' → logprob: -21.506715774536133
    10. '_angle' → logprob: -21.756715774536133

Token 369: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -6.988221684878226e-06
    2. 'between' → logprob: -12.375006675720215
    3. ' =' → logprob: -14.000006675720215
    4. '_' → logprob: -14.000006675720215
    5. '=' → logprob: -14.625006675720215
    6. '_angle' → logprob: -15.250006675720215
    7. ' between' → logprob: -15.250006675720215
    8. '_=' → logprob: -15.750006675720215
    9. 'Between' → logprob: -16.87500762939453
    10. '_b' → logprob: -17.62500762939453

Token 370: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -3.583550642360933e-05
    2. '(cur' → logprob: -10.625036239624023
    3. 'prev' → logprob: -11.625036239624023
    4. '(' → logprob: -13.250036239624023
    5. ' (' → logprob: -14.875036239624023
    6. '(pre' → logprob: -15.750036239624023
    7. '(curr' → logprob: -16.000036239624023
    8. '(previous' → logprob: -16.125036239624023
    9. ' prev' → logprob: -17.500036239624023
    10. '	prev' → logprob: -18.375036239624023

Token 371: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -2.9160102712921798e-05
    2. 'dir' → logprob: -11.000029563903809
    3. ',' → logprob: -13.000029563903809
    4. '_cur' → logprob: -13.625029563903809
    5. ' _' → logprob: -13.750029563903809
    6. '_' → logprob: -13.875029563903809
    7. ')' → logprob: -13.875029563903809
    8. '_d' → logprob: -14.000029563903809
    9. '
' → logprob: -14.250029563903809
    10. '[' → logprob: -14.250029563903809

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001605115394340828
    2. ' ,' → logprob: -8.750160217285156
    3. ',
' → logprob: -13.625160217285156
    4. 'cur' → logprob: -14.750160217285156
    5. '(cur' → logprob: -16.250160217285156
    6. ',c' → logprob: -16.375160217285156
    7. '[cur' → logprob: -16.625160217285156
    8. ',

' → logprob: -16.625160217285156
    9. '   ' → logprob: -17.375160217285156
    10. ',current' → logprob: -17.500160217285156

Token 373: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.023245595395565033
    2. ' cur' → logprob: -3.7732455730438232
    3. '(cur' → logprob: -17.273244857788086
    4. '	cur' → logprob: -17.398244857788086
    5. '[cur' → logprob: -18.273244857788086
    6. '.cur' → logprob: -20.023244857788086
    7. '_cur' → logprob: -20.023244857788086
    8. ' ' → logprob: -20.648244857788086
    9. '   ' → logprob: -20.773244857788086
    10. ')' → logprob: -20.773244857788086

Token 374: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -1.0206720617134124e-05
    2. 'dir' → logprob: -11.50001049041748
    3. 'ir' → logprob: -17.750009536743164
    4. 'ar' → logprob: -18.750009536743164
    5. 'Dir' → logprob: -18.875009536743164
    6. '-dir' → logprob: -19.000009536743164
    7. '	dir' → logprob: -19.250009536743164
    8. 'r' → logprob: -19.250009536743164
    9. '_d' → logprob: -19.750009536743164
    10. '_DIR' → logprob: -19.750009536743164

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1128842830657959
    2. ')
' → logprob: -2.237884283065796
    3. ')
' → logprob: -10.362884521484375
    4. ' )
' → logprob: -11.237884521484375
    5. ' )' → logprob: -11.362884521484375
    6. ')

' → logprob: -12.612884521484375
    7. ')>' → logprob: -14.487884521484375
    8. '           ' → logprob: -15.237884521484375
    9. '   ' → logprob: -15.362884521484375
    10. ')<' → logprob: -15.362884521484375

Token 376: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019626514986157417
    2. '       ' → logprob: -6.376962661743164
    3. ' if' → logprob: -9.001962661743164
    4. ' >' → logprob: -10.001962661743164
    5. '   ' → logprob: -10.501962661743164
    6. '>' → logprob: -11.376962661743164
    7. '               ' → logprob: -11.501962661743164
    8. 'if' → logprob: -11.501962661743164
    9. '
' → logprob: -12.001962661743164
    10. ' <=' → logprob: -12.126962661743164

Token 377: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6269333958625793
    2. '           ' → logprob: -0.8769333958625793
    3. ' if' → logprob: -3.0019333362579346
    4. '       ' → logprob: -11.876933097839355
    5. ' ' → logprob: -12.376933097839355
    6. '   ' → logprob: -12.501933097839355
    7. '               ' → logprob: -13.001933097839355
    8. '            
' → logprob: -13.126933097839355
    9. 'If' → logprob: -13.376933097839355
    10. '          ' → logprob: -14.251933097839355

Token 378: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10020796209573746
    2. ' a' → logprob: -2.350208044052124
    3. '	a' → logprob: -14.725208282470703
    4. '   ' → logprob: -14.975208282470703
    5. 'len' → logprob: -15.350208282470703
    6. ' ' → logprob: -15.975208282470703
    7. '(a' → logprob: -16.475208282470703
    8. '>a' → logprob: -17.100208282470703
    9. ' ' → logprob: -17.600208282470703
    10. 'abs' → logprob: -17.600208282470703

Token 379: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3490338921546936
    2. '>' → logprob: -1.2240338325500488
    3. ' ' → logprob: -7.849033832550049
    4. ')' → logprob: -8.974034309387207
    5. ')>' → logprob: -11.099034309387207
    6. '=' → logprob: -11.349034309387207
    7. 'and' → logprob: -11.474034309387207
    8. '">' → logprob: -12.599034309387207
    9. '[' → logprob: -12.724034309387207
    10. '<|end|>' → logprob: -12.849034309387207

Token 380: ' theta' (ID: 43101)
  Prédit: 'theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'theta' → logprob: -0.0031905474606901407
    2. ' theta' → logprob: -5.753190517425537
    3. '90' → logprob: -12.128190994262695
    4. '180' → logprob: -12.878190994262695
    5. '
' → logprob: -13.128190994262695
    6. '   ' → logprob: -13.503190994262695
    7. ' ' → logprob: -14.878190994262695
    8. '(theta' → logprob: -15.378190994262695
    9. 'thet' → logprob: -15.503190994262695
    10. 'int' → logprob: -16.003190994262695

Token 381: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07389671355485916
    2. ':
' → logprob: -2.698896646499634
    3. ' :' → logprob: -5.948896884918213
    4. ':return' → logprob: -7.323896884918213
    5. ' :
' → logprob: -7.573896884918213
    6. '):' → logprob: -9.698896408081055
    7. ' or' → logprob: -10.073896408081055
    8. '   ' → logprob: -10.823896408081055
    9. '):
' → logprob: -11.073896408081055
    10. ' ' → logprob: -11.448896408081055

Token 382: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0053256661631166935
    2. ' ' → logprob: -5.255325794219971
    3. '0' → logprob: -9.380325317382812
    4. '10' → logprob: -12.505325317382812
    5. '90' → logprob: -14.130325317382812
    6. ' ' → logprob: -14.255325317382812
    7. '  ' → logprob: -14.380325317382812
    8. '   ' → logprob: -14.630325317382812
    9. '5' → logprob: -14.755325317382812
    10. 'EPS' → logprob: -15.380325317382812

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002330992283532396
    2. '0' → logprob: -9.000232696533203
    3. ' ' → logprob: -9.500232696533203
    4. '10' → logprob: -10.375232696533203
    5. '90' → logprob: -14.250232696533203
    6. '-' → logprob: -14.500232696533203
    7. '5' → logprob: -14.500232696533203
    8. ' ' → logprob: -14.750232696533203
    9. 'EPS' → logprob: -15.000232696533203
    10. '45' → logprob: -15.125232696533203

Token 384: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -4.179569077678025e-05
    2. '0' → logprob: -10.250041961669922
    3. '.' → logprob: -12.375041961669922
    4. '.e' → logprob: -14.125041961669922
    5. '-' → logprob: -15.000041961669922
    6. 'E' → logprob: -15.750041961669922
    7. '00' → logprob: -16.000041961669922
    8. '40' → logprob: -16.125041961669922
    9. '-e' → logprob: -16.250041961669922
    10. ':' → logprob: -16.375041961669922

Token 385: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.500000953674316
    3. ' -' → logprob: -16.0
    4. 'e' → logprob: -16.75
    5. '3' → logprob: -16.75
    6. '6' → logprob: -17.375
    7. '{-' → logprob: -18.25
    8. '−' → logprob: -18.25
    9. ' ' → logprob: -18.375
    10. '  ' → logprob: -18.625

Token 386: '8' (ID: 23)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5536941289901733
    2. '8' → logprob: -1.4286941289901733
    3. '7' → logprob: -1.9286941289901733
    4. '-' → logprob: -3.678694248199463
    5. '6' → logprob: -4.428694248199463
    6. '10' → logprob: -5.928694248199463
    7. '5' → logprob: -8.178693771362305
    8. '12' → logprob: -9.678693771362305
    9. '−' → logprob: -12.303693771362305
    10. '4' → logprob: -12.553693771362305

Token 387: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4147079586982727
    2. ':
' → logprob: -1.164707899093628
    3. '           ' → logprob: -3.664707899093628
    4. '       ' → logprob: -6.914708137512207
    5. ':return' → logprob: -8.414708137512207
    6. 'continue' → logprob: -8.914708137512207
    7. '               ' → logprob: -9.164708137512207
    8. ' or' → logprob: -9.289708137512207
    9. ' continue' → logprob: -9.289708137512207
    10. ':
' → logprob: -9.539708137512207

Token 388: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09507279098033905
    2. '           ' → logprob: -2.5950727462768555
    3. 'continue' → logprob: -4.7200727462768555
    4. ' continue' → logprob: -4.9700727462768555
    5. '	continue' → logprob: -9.595072746276855
    6. '	       ' → logprob: -9.595072746276855
    7. '	           ' → logprob: -11.095072746276855
    8. '   ' → logprob: -11.220072746276855
    9. '       ' → logprob: -11.970072746276855
    10. '		' → logprob: -12.095072746276855

Token 389: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6110376119613647
    2. ' continue' → logprob: -0.8610376119613647
    3. '           ' → logprob: -4.111037731170654
    4. '               ' → logprob: -4.111037731170654
    5. '	continue' → logprob: -6.986037731170654
    6. '                   ' → logprob: -7.361037731170654
    7. '		' → logprob: -9.486037254333496
    8. '   ' → logprob: -10.611037254333496
    9. '			' → logprob: -11.361037254333496
    10. '_continue' → logprob: -11.611037254333496

Token 390: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02472485974431038
    2. '	' → logprob: -4.399724960327148
    3. '        
' → logprob: -5.024724960327148
    4. '		
' → logprob: -6.399724960327148
    5. '
' → logprob: -7.024724960327148
    6. '<|end|>' → logprob: -7.399724960327148
    7. ')' → logprob: -7.774724960327148
    8. '\t' → logprob: -7.899724960327148
    9. '           ' → logprob: -8.274724960327148
    10. '   ' → logprob: -8.524724960327148

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003976412583142519
    2. '	' → logprob: -6.378976345062256
    3. '   ' → logprob: -7.003976345062256
    4. '        
' → logprob: -7.503976345062256
    5. ')' → logprob: -8.128976821899414
    6. '\t' → logprob: -9.378976821899414
    7. '    ' → logprob: -9.753976821899414
    8. '		
' → logprob: -10.003976821899414
    9. '           ' → logprob: -10.253976821899414
    10. ',' → logprob: -10.503976821899414

Token 392: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.537984311580658
    2. '   ' → logprob: -1.5379843711853027
    3. ' dfs' → logprob: -1.6629843711853027
    4. '       ' → logprob: -4.662984371185303
    5. '	' → logprob: -7.912984371185303
    6. 'if' → logprob: -8.037983894348145
    7. '    ' → logprob: -8.037983894348145
    8. '   ' → logprob: -8.162983894348145
    9. ' if' → logprob: -8.662983894348145
    10. '	d' → logprob: -8.912983894348145

Token 393: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -8.375538163818419e-05
    2. 'next' → logprob: -9.625083923339844
    3. '(' → logprob: -11.000083923339844
    4. ' next' → logprob: -14.875083923339844
    5. '(
' → logprob: -15.250083923339844
    6. '(current' → logprob: -15.875083923339844
    7. '[next' → logprob: -15.875083923339844
    8. ',next' → logprob: -17.375083923339844
    9. ' (' → logprob: -17.625083923339844
    10. '	next' → logprob: -17.625083923339844

Token 394: '_city' (ID: 60413)
  Prédit: '_city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -2.1008713702030946e-06
    2. '_car' → logprob: -14.375001907348633
    3. '_c' → logprob: -14.625001907348633
    4. 'city' → logprob: -14.875001907348633
    5. '(city' → logprob: -15.500001907348633
    6. '_country' → logprob: -15.875001907348633
    7. '_CITY' → logprob: -15.875001907348633
    8. '_' → logprob: -17.125001907348633
    9. '(next' → logprob: -17.375001907348633
    10. ',' → logprob: -17.375001907348633

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010072666220366955
    2. ',length' → logprob: -4.885072708129883
    3. ' ,' → logprob: -6.010072708129883
    4. ',d' → logprob: -13.010072708129883
    5. ',
' → logprob: -13.135072708129883
    6. ' length' → logprob: -13.385072708129883
    7. '(length' → logprob: -13.510072708129883
    8. 'length' → logprob: -13.885072708129883
    9. ',len' → logprob: -14.385072708129883
    10. ',int' → logprob: -15.635072708129883

Token 396: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.07888978719711304
    2. ' length' → logprob: -2.578889846801758
    3. '(length' → logprob: -16.828889846801758
    4. '[length' → logprob: -17.578889846801758
    5. '	length' → logprob: -18.453889846801758
    6. 'leng' → logprob: -19.328889846801758
    7. ',length' → logprob: -19.328889846801758
    8. 'ength' → logprob: -19.578889846801758
    9. ' ' → logprob: -20.453889846801758
    10. ' lenght' → logprob: -20.453889846801758

Token 397: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.0564331205387134e-05
    2. 'used' → logprob: -12.00001049041748
    3. ' _' → logprob: -13.00001049041748
    4. '_use' → logprob: -14.25001049041748
    5. '_' → logprob: -15.12501049041748
    6. '   ' → logprob: -15.50001049041748
    7. 'Used' → logprob: -15.75001049041748
    8. ' used' → logprob: -15.75001049041748
    9. '_us' → logprob: -16.125011444091797
    10. '_user' → logprob: -16.125011444091797

Token 398: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3159007430076599
    2. '+' → logprob: -1.3159008026123047
    3. '+d' → logprob: -5.940900802612305
    4. ' ' → logprob: -12.815900802612305
    5. ',' → logprob: -14.065900802612305
    6. ' plus' → logprob: -14.190900802612305
    7. ' d' → logprob: -14.565900802612305
    8. ' ' → logprob: -15.190900802612305
    9. ' ,' → logprob: -15.315900802612305
    10. '+r' → logprob: -15.440900802612305

Token 399: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0788901224732399
    2. ' d' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.328889846801758
    4. 'int' → logprob: -17.203889846801758
    5. ')d' → logprob: -17.203889846801758
    6. '	d' → logprob: -17.328889846801758
    7. ')' → logprob: -17.453889846801758
    8. '(d' → logprob: -17.703889846801758
    9. '_d' → logprob: -17.953889846801758
    10. '```' → logprob: -18.578889846801758

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010318557906430215
    2. ' ,' → logprob: -9.250102996826172
    3. '   ' → logprob: -12.375102996826172
    4. ',
' → logprob: -13.625102996826172
    5. 'cur' → logprob: -14.250102996826172
    6. '[cur' → logprob: -15.750102996826172
    7. '`,' → logprob: -16.250102996826172
    8. ' ' → logprob: -16.625102996826172
    9. ',current' → logprob: -16.750102996826172
    10. ')' → logprob: -16.875102996826172

Token 401: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0005530327325686812
    2. ' cur' → logprob: -7.500553131103516
    3. '(cur' → logprob: -17.750553131103516
    4. '	cur' → logprob: -19.125553131103516
    5. '   ' → logprob: -20.625553131103516
    6. ' ' → logprob: -21.375553131103516
    7. '[cur' → logprob: -22.000553131103516
    8. '.cur' → logprob: -22.250553131103516
    9. '_cur' → logprob: -22.375553131103516
    10. 'curr' → logprob: -22.625553131103516

Token 402: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -1.0280383548888494e-06
    2. 'dir' → logprob: -13.875000953674316
    3. ' dir' → logprob: -18.875001907348633
    4. '-dir' → logprob: -19.000001907348633
    5. '	dir' → logprob: -19.250001907348633
    6. '(dir' → logprob: -19.500001907348633
    7. '_city' → logprob: -19.875001907348633
    8. '_DIR' → logprob: -20.000001907348633
    9. '_' → logprob: -20.375001907348633
    10. 'Dir' → logprob: -20.500001907348633

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001261845463886857
    2. ' ,' → logprob: -9.000125885009766
    3. ',c' → logprob: -13.000125885009766
    4. '   ' → logprob: -15.750125885009766
    5. ',
' → logprob: -16.375125885009766
    6. ')' → logprob: -16.625125885009766
    7. 'car' → logprob: -16.875125885009766
    8. '),' → logprob: -17.750125885009766
    9. '‌,' → logprob: -18.250125885009766
    10. ' carrots' → logprob: -19.000125885009766

Token 404: ' carrots' (ID: 91266)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0032209681812673807
    2. ' carrots' → logprob: -5.753221035003662
    3. 'cars' → logprob: -10.253220558166504
    4. '   ' → logprob: -12.503220558166504
    5. ' ' → logprob: -13.378220558166504
    6. '       ' → logprob: -14.628220558166504
    7. 'c' → logprob: -14.878220558166504
    8. '  ' → logprob: -15.253220558166504
    9. '```' → logprob: -15.253220558166504
    10. '    ' → logprob: -15.503220558166504

Token 405: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931726932525635
    2. ' +' → logprob: -0.6931726932525635
    3. ')' → logprob: -10.943172454833984
    4. '+)' → logprob: -12.568172454833984
    5. '+c' → logprob: -13.693172454833984
    6. ')+' → logprob: -13.818172454833984
    7. ' plus' → logprob: -14.318172454833984
    8. ' )' → logprob: -15.443172454833984
    9. '+r' → logprob: -15.568172454833984
    10. '+n' → logprob: -15.818172454833984

Token 406: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033290917053818703
    2. 'cities' → logprob: -6.378329277038574
    3. ' ' → logprob: -6.503329277038574
    4. 'dist' → logprob: -10.503329277038574
    5. '10' → logprob: -10.878329277038574
    6. ' cities' → logprob: -11.003329277038574
    7. '100' → logprob: -11.503329277038574
    8. '(' → logprob: -11.503329277038574
    9. 'd' → logprob: -11.628329277038574
    10. '0' → logprob: -11.628329277038574

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3150545656681061
    2. 'cities' → logprob: -1.3150545358657837
    3. 'next' → logprob: -8.065054893493652
    4. ' cities' → logprob: -8.315054893493652
    5. ' ' → logprob: -8.315054893493652
    6. '(' → logprob: -8.940054893493652
    7. 'abs' → logprob: -9.065054893493652
    8. '10' → logprob: -9.190054893493652
    9. 'dist' → logprob: -9.190054893493652
    10. '0' → logprob: -9.690054893493652

Token 408: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -13.25000286102295
    3. ')
' → logprob: -14.12500286102295
    4. '   ' → logprob: -16.375003814697266
    5. '),' → logprob: -16.750003814697266
    6. ')return' → logprob: -16.875003814697266
    7. '<|end|>' → logprob: -17.375003814697266
    8. ')#' → logprob: -17.750003814697266
    9. ',)' → logprob: -17.875003814697266
    10. '))' → logprob: -17.875003814697266

Token 409: 'dfs' (ID: 60837)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6114725470542908
    2. 'dfs' → logprob: -0.8614725470542908
    3. 'print' → logprob: -3.3614726066589355
    4. '#' → logprob: -8.486472129821777
    5. ' for' → logprob: -11.361472129821777
    6. ' dfs' → logprob: -13.361472129821777
    7. '
' → logprob: -13.361472129821777
    8. 'if' → logprob: -13.486472129821777
    9. ')' → logprob: -14.236472129821777
    10. '0' → logprob: -14.486472129821777

Token 410: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.842555426876061e-06
    2. ' (' → logprob: -12.750004768371582
    3. '(-' → logprob: -14.250004768371582
    4. '((' → logprob: -14.625004768371582
    5. '(
' → logprob: -15.250004768371582
    6. '0' → logprob: -15.875004768371582
    7. '()' → logprob: -16.1250057220459
    8. '<|end|>' → logprob: -16.3750057220459
    9. '(current' → logprob: -16.5000057220459
    10. ')(' → logprob: -17.0000057220459

Token 411: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.943783253314905e-05
    2. '-' → logprob: -10.500059127807617
    3. ' ' → logprob: -10.500059127807617
    4. ')' → logprob: -13.625059127807617
    5. ' -' → logprob: -13.875059127807617
    6. '(' → logprob: -14.375059127807617
    7. 'None' → logprob: -14.500059127807617
    8. '   ' → logprob: -14.750059127807617
    9. 'cities' → logprob: -15.750059127807617
    10. '
' → logprob: -15.750059127807617

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2842308680992573e-05
    2. '0' → logprob: -11.250022888183594
    3. ' ,' → logprob: -11.875022888183594
    4. ')' → logprob: -13.500022888183594
    5. ',
' → logprob: -14.000022888183594
    6. ',n' → logprob: -15.625022888183594
    7. '‌,' → logprob: -16.000022888183594
    8. ' ' → logprob: -17.125022888183594
    9. ',,' → logprob: -17.125022888183594
    10. '```' → logprob: -17.250022888183594

Token 413: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.50001335144043
    3. '1' → logprob: -12.62501335144043
    4. 'r' → logprob: -17.00001335144043
    5. '10' → logprob: -17.12501335144043
    6. '   ' → logprob: -17.18751335144043
    7. ' ' → logprob: -17.25001335144043
    8. '2' → logprob: -17.43751335144043
    9. '```' → logprob: -17.62501335144043
    10. 'math' → logprob: -18.00001335144043

Token 414: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. '1' → logprob: -11.750011444091797
    3. ' ' → logprob: -12.750011444091797
    4. 'r' → logprob: -15.937511444091797
    5. '10' → logprob: -16.375011444091797
    6. '2' → logprob: -16.562511444091797
    7. 'd' → logprob: -16.937511444091797
    8. 'dist' → logprob: -17.375011444091797
    9. '-' → logprob: -17.750011444091797
    10. '.' → logprob: -17.812511444091797

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.349075556499884e-05
    2. '0' → logprob: -9.7500638961792
    3. '1' → logprob: -13.0000638961792
    4. ' ,' → logprob: -13.3750638961792
    5. ')' → logprob: -13.8750638961792
    6. '2' → logprob: -16.000062942504883
    7. ',)' → logprob: -16.625062942504883
    8. ',
' → logprob: -17.125062942504883
    9. '3' → logprob: -17.125062942504883
    10. ',,' → logprob: -17.375062942504883

Token 416: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005936628440394998
    2. ' None' → logprob: -7.500593662261963
    3. '(None' → logprob: -10.125594139099121
    4. '(' → logprob: -14.625594139099121
    5. '_None' → logprob: -16.750593185424805
    6. ',None' → logprob: -16.750593185424805
    7. 'none' → logprob: -17.625593185424805
    8. '=None' → logprob: -17.750593185424805
    9. ' (' → logprob: -18.000593185424805
    10. '.None' → logprob: -18.875593185424805

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. ' ,' → logprob: -12.000011444091797
    3. '0' → logprob: -12.500011444091797
    4. '1' → logprob: -13.875011444091797
    5. ')' → logprob: -15.125011444091797
    6. ',
' → logprob: -16.125011444091797
    7. '2' → logprob: -17.125011444091797
    8. '‌,' → logprob: -17.750011444091797
    9. ',c' → logprob: -17.875011444091797
    10. '4' → logprob: -18.125011444091797

Token 418: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002509687910787761
    2. '0' → logprob: -8.875250816345215
    3. ' ' → logprob: -9.125250816345215
    4. '2' → logprob: -14.125250816345215
    5. '   ' → logprob: -14.500250816345215
    6. 'cities' → logprob: -14.687750816345215
    7. ')' → logprob: -16.50025177001953
    8. '  ' → logprob: -16.81275177001953
    9. '10' → logprob: -17.06275177001953
    10. '(' → logprob: -17.81275177001953

Token 419: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024512779782526195
    2. '0' → logprob: -8.625245094299316
    3. ' ' → logprob: -9.750245094299316
    4. 'cities' → logprob: -12.625245094299316
    5. '2' → logprob: -13.125245094299316
    6. '   ' → logprob: -14.625245094299316
    7. '10' → logprob: -15.125245094299316
    8. ')' → logprob: -15.812745094299316
    9. 'int' → logprob: -16.375246047973633
    10. '100' → logprob: -16.437746047973633

Token 420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ' )' → logprob: -13.125003814697266
    3. ')
' → logprob: -13.625003814697266
    4. '))' → logprob: -17.000003814697266
    5. ')`' → logprob: -17.000003814697266
    6. ')#' → logprob: -17.875003814697266
    7. ')

' → logprob: -18.000003814697266
    8. ')}' → logprob: -18.375003814697266
    9. '),' → logprob: -18.875003814697266
    10. ')return' → logprob: -19.000003814697266

Token 421: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.0
    3. '
' → logprob: -16.125
    4. ' print' → logprob: -16.625
    5. '#print' → logprob: -18.625
    6. '<|end|>' → logprob: -19.625
    7. 'pr' → logprob: -19.75
    8. '``' → logprob: -19.75
    9. '(print' → logprob: -20.375
    10. '  
' → logprob: -20.5

Token 422: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -1.8312570318812504e-05
    2. '(' → logprob: -11.000018119812012
    3. 'max' → logprob: -13.375018119812012
    4. ' (' → logprob: -17.000019073486328
    5. ' max' → logprob: -17.750019073486328
    6. ',max' → logprob: -19.125019073486328
    7. '(min' → logprob: -19.125019073486328
    8. '(
' → logprob: -19.625019073486328
    9. '((' → logprob: -19.750019073486328
    10. '(m' → logprob: -20.000019073486328

Token 423: '_car' (ID: 62991)
  Prédit: '_car'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_car' → logprob: -4.036524842376821e-05
    2. '_c' → logprob: -10.125040054321289
    3. '_' → logprob: -16.62504005432129
    4. '\' → logprob: -17.25004005432129
    5. 'car' → logprob: -18.00004005432129
    6. ')' → logprob: -18.00004005432129
    7. ')_' → logprob: -18.50004005432129
    8. '_max' → logprob: -18.62504005432129
    9. '(' → logprob: -18.75004005432129
    10. '_)' → logprob: -18.75004005432129

Token 424: 'rots' (ID: 175556)
  Prédit: 'rots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -0.12702690064907074
    2. 'ots' → logprob: -2.1270267963409424
    3. 'ats' → logprob: -10.752026557922363
    4. 'r' → logprob: -11.252026557922363
    5. '_car' → logprob: -11.252026557922363
    6. 'otts' → logprob: -11.627026557922363
    7. 'ts' → logprob: -11.877026557922363
    8. 'rops' → logprob: -12.252026557922363
    9. 's' → logprob: -12.252026557922363
    10. ' carrots' → logprob: -12.252026557922363

Token 425: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005729287513531744
    2. '+' → logprob: -7.50057315826416
    3. ' )' → logprob: -11.25057315826416
    4. ' +' → logprob: -12.75057315826416
    5. ')
' → logprob: -13.62557315826416
    6. '+)' → logprob: -13.87557315826416
    7. '()' → logprob: -14.62557315826416
    8. '```' → logprob: -15.00057315826416
    9. '())' → logprob: -15.37557315826416
    10. '(' → logprob: -15.37557315826416


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 423
Tokens correctement prédits (1ère position, stricte): 214
Tokens correctement prédits (1ère position, avec adaptation): 222
Tokens correctement prédits (top 10): 363
Précision stricte (1ère position): 50.59%
Précision adaptée (1ère position): 52.48%
Précision (top 10): 85.82%
================================================================================
