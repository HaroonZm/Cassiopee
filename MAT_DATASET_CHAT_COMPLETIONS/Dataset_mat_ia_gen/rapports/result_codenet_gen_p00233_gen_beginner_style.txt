================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:20:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break

    if n == 0:
        print(0)
        continue

    result = ""
    num = n
    while num != 0:
        r = num % -10
        num = num // -10
        if r < 0:
            r += 10
            num += 1
        result = str(r) + result

    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6069875359535217
    2. 'u' → logprob: -1.731987476348877
    3. '=' → logprob: -2.481987476348877
    4. 'o' → logprob: -2.481987476348877
    5. '   ' → logprob: -3.356987476348877
    6. 'e' → logprob: -4.606987476348877
    7. '_' → logprob: -4.731987476348877
    8. ' =' → logprob: -4.731987476348877
    9. '+' → logprob: -4.856987476348877
    10. '%' → logprob: -5.106987476348877

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3691587746143341
    2. ' input' → logprob: -1.2441587448120117
    3. 'input' → logprob: -4.494158744812012
    4. 'int' → logprob: -5.244158744812012
    5. ' n' → logprob: -5.619158744812012
    6. ' ' → logprob: -8.494158744812012
    7. 'n' → logprob: -9.744158744812012
    8. ' randint' → logprob: -10.619158744812012
    9. ' a' → logprob: -10.744158744812012
    10. ' eval' → logprob: -11.119158744812012

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789412334561348
    2. '(input' → logprob: -2.5789413452148438
    3. '(n' → logprob: -10.703941345214844
    4. '()' → logprob: -11.953941345214844
    5. '(
' → logprob: -12.203941345214844
    6. '('' → logprob: -12.328941345214844
    7. '(user' → logprob: -13.203941345214844
    8. 'input' → logprob: -13.453941345214844
    9. '(range' → logprob: -13.703941345214844
    10. ' (' → logprob: -13.953941345214844

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38052013516426086
    2. ')' → logprob: -1.8805201053619385
    3. '()' → logprob: -2.0055201053619385
    4. '())' → logprob: -3.7555201053619385
    5. '))' → logprob: -5.755520343780518
    6. '()))' → logprob: -7.005520343780518
    7. '('' → logprob: -7.880520343780518
    8. '(
' → logprob: -7.880520343780518
    9. ' ' → logprob: -8.63051986694336
    10. '(""))' → logprob: -8.75551986694336

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39164337515830994
    2. ' if' → logprob: -2.0166432857513428
    3. '   ' → logprob: -2.6416432857513428
    4. ')' → logprob: -3.6416432857513428
    5. ':' → logprob: -3.6416432857513428
    6. '  ' → logprob: -3.8916432857513428
    7. '<|end|>' → logprob: -4.266643524169922
    8. 'if' → logprob: -4.641643524169922
    9. '    ' → logprob: -5.391643524169922
    10. ',' → logprob: -5.641643524169922

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5625182390213013
    2. ' if' → logprob: -1.1875182390213013
    3. '<|end|>' → logprob: -3.4375181198120117
    4. ')' → logprob: -3.8125181198120117
    5. ' ' → logprob: -3.9375181198120117
    6. '```' → logprob: -4.187518119812012
    7. '    ' → logprob: -4.437518119812012
    8. 'if' (adapté à ' if') → logprob: -5.437518119812012
    9. '\n' → logprob: -5.937518119812012
    10. '  ' → logprob: -6.062518119812012

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020662404596805573
    2. ' ' → logprob: -4.020662307739258
    3. ' not' → logprob: -6.520662307739258
    4. 'n' → logprob: -6.895662307739258
    5. ' ' → logprob: -11.270662307739258
    6. 'not' → logprob: -12.145662307739258
    7. '  ' → logprob: -12.395662307739258
    8. '	n' → logprob: -14.770662307739258
    9. '(n' → logprob: -15.145662307739258
    10. '<|end|>' → logprob: -15.395662307739258

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6851745247840881
    2. ' >' → logprob: -1.0601744651794434
    3. ' <=' → logprob: -2.5601744651794434
    4. ' <' → logprob: -3.5601744651794434
    5. ' ' → logprob: -4.310174465179443
    6. '==' → logprob: -4.310174465179443
    7. '>' → logprob: -4.435174465179443
    8. ' >=' → logprob: -6.435174465179443
    9. '  ' → logprob: -7.560174465179443
    10. ')' → logprob: -7.560174465179443

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.126935675740242
    2. '0' → logprob: -2.1269357204437256
    3. ' ' → logprob: -13.001935958862305
    4. '1' → logprob: -13.626935958862305
    5. ' -' → logprob: -14.314435958862305
    6. '100' → logprob: -15.126935958862305
    7. '10' → logprob: -15.126935958862305
    8. '  ' → logprob: -15.189435958862305
    9. ')' → logprob: -15.501935958862305
    10. '=' → logprob: -15.626935958862305

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006742842961102724
    2. ' ' → logprob: -5.00674295425415
    3. '-' → logprob: -11.131742477416992
    4. '1' → logprob: -12.631742477416992
    5. ' -' → logprob: -12.631742477416992
    6. '42' → logprob: -13.006742477416992
    7. '4' → logprob: -14.631742477416992
    8. '   ' → logprob: -14.631742477416992
    9. '    ' → logprob: -14.756742477416992
    10. 's' → logprob: -15.256742477416992

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.894790981779806e-05
    2. ':
' → logprob: -10.500048637390137
    3. ' :' → logprob: -11.625048637390137
    4. '   ' → logprob: -12.625048637390137
    5. '       ' → logprob: -13.000048637390137
    6. ':return' → logprob: -13.000048637390137
    7. ':\' → logprob: -13.375048637390137
    8. '):' → logprob: -13.625048637390137
    9. '    ' → logprob: -14.625048637390137
    10. ':**' → logprob: -15.125048637390137

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00343055441044271
    2. '   ' → logprob: -6.253430366516113
    3. ' break' → logprob: -6.753430366516113
    4. '    ' → logprob: -9.253430366516113
    5. '\n' → logprob: -9.628430366516113
    6. '	break' → logprob: -10.253430366516113
    7. ':' → logprob: -10.253430366516113
    8. '     ' → logprob: -11.128430366516113
    9. '      ' → logprob: -11.128430366516113
    10. ' ' → logprob: -11.378430366516113

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0031932818237692118
    2. '       ' → logprob: -6.628193378448486
    3. 'break' (adapté à ' break') → logprob: -7.503193378448486
    4. '\n' → logprob: -8.003192901611328
    5. ' 
' → logprob: -8.253192901611328
    6. ' \' → logprob: -8.753192901611328
    7. '    ' → logprob: -9.253192901611328
    8. '	break' → logprob: -9.503192901611328
    9. '_break' → logprob: -9.503192901611328
    10. '```' → logprob: -9.503192901611328

Token 18: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15489940345287323
    2. '\n' → logprob: -3.0298993587493896
    3. '```' → logprob: -3.4048993587493896
    4. '    
' → logprob: -3.5298993587493896
    5. '\' → logprob: -4.029899597167969
    6. ':' → logprob: -5.529899597167969
    7. '
' → logprob: -6.279899597167969
    8. '\r' → logprob: -6.654899597167969
    9. 'n' → logprob: -6.779899597167969
    10. '  
' → logprob: -7.029899597167969

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034500379115343094
    2. '    
' → logprob: -3.9095003604888916
    3. '\n' → logprob: -5.159500598907471
    4. '\' → logprob: -6.034500598907471
    5. '```' → logprob: -6.159500598907471
    6. 'print' → logprob: -7.159500598907471
    7. ' 
' → logprob: -7.659500598907471
    8. '(' → logprob: -8.159500122070312
    9. '#' → logprob: -8.409500122070312
    10. '[' → logprob: -8.534500122070312

Token 20: ' if' (ID: 538)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2536376118659973
    2. '   ' → logprob: -2.3786375522613525
    3. 'sum' → logprob: -2.6286375522613525
    4. ' s' → logprob: -4.503637790679932
    5. ' sum' → logprob: -5.253637790679932
    6. 'total' → logprob: -5.378637790679932
    7. 'result' → logprob: -5.503637790679932
    8. 'print' → logprob: -5.753637790679932
    9. 'count' → logprob: -5.878637790679932
    10. 'm' → logprob: -6.003637790679932

Token 21: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0014711800031363964
    2. ' ' → logprob: -7.251471042633057
    3. 'n' → logprob: -7.376471042633057
    4. ' not' → logprob: -9.126471519470215
    5. ' ' → logprob: -11.626471519470215
    6. ' len' → logprob: -12.251471519470215
    7. ' (' → logprob: -12.626471519470215
    8. ' s' → logprob: -12.751471519470215
    9. '(n' → logprob: -14.376471519470215
    10. 's' → logprob: -14.376471519470215

Token 22: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3123793601989746
    2. ' >' → logprob: -2.0623793601989746
    3. ' ' → logprob: -2.4373793601989746
    4. '%' → logprob: -3.3123793601989746
    5. ' ==' → logprob: -5.187379360198975
    6. ' <=' → logprob: -5.562379360198975
    7. ' <' → logprob: -5.687379360198975
    8. '>' → logprob: -5.937379360198975
    9. '<|end|>' → logprob: -7.562379360198975
    10. ' >=' → logprob: -7.937379360198975

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014181484468281269
    2. '1' → logprob: -4.264181613922119
    3. ' n' → logprob: -11.639181137084961
    4. '0' → logprob: -12.889181137084961
    5. ' )' → logprob: -13.014181137084961
    6. '2' → logprob: -14.139181137084961
    7. '  ' → logprob: -14.514181137084961
    8. '"' → logprob: -14.764181137084961
    9. '<|end|>' → logprob: -14.764181137084961
    10. ''' → logprob: -14.826681137084961

Token 24: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028980709612369537
    2. ' ' → logprob: -5.877898216247559
    3. '0' → logprob: -10.127898216247559
    4. '2' → logprob: -10.252898216247559
    5. '   ' → logprob: -12.502898216247559
    6. '3' → logprob: -13.190398216247559
    7. '4' → logprob: -13.377898216247559
    8. 'n' → logprob: -13.377898216247559
    9. '  ' → logprob: -13.565398216247559
    10. '-' → logprob: -14.065398216247559

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001334559783572331
    2. ' :' → logprob: -9.375133514404297
    3. '   ' → logprob: -11.125133514404297
    4. ':
' → logprob: -11.500133514404297
    5. '       ' → logprob: -12.250133514404297
    6. ' continue' → logprob: -12.375133514404297
    7. ' ' → logprob: -12.375133514404297
    8. ' or' → logprob: -12.500133514404297
    9. ':return' → logprob: -13.250133514404297
    10. ' and' → logprob: -13.875133514404297

Token 26: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00478954566642642
    2. ' :' → logprob: -5.754789352416992
    3. '   ' → logprob: -6.754789352416992
    4. '       ' → logprob: -8.379789352416992
    5. ':
' → logprob: -9.629789352416992
    6. ' continue' → logprob: -9.879789352416992
    7. '    ' → logprob: -9.879789352416992
    8. ' ' → logprob: -11.379789352416992
    9. ' :
' → logprob: -12.129789352416992
    10. 'continue' → logprob: -12.254789352416992

Token 27: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7033601999282837
    2. '   ' → logprob: -0.9533601999282837
    3. ' continue' → logprob: -2.328360080718994
    4. 'continue' → logprob: -4.828360080718994
    5. ':' → logprob: -5.203360080718994
    6. '    ' → logprob: -6.078360080718994
    7. ' ' → logprob: -6.078360080718994
    8. ' :' → logprob: -6.953360080718994
    9. 'n' → logprob: -7.953360080718994
    10. '           ' → logprob: -7.953360080718994

Token 28: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012119431979954243
    2. '()' → logprob: -4.512119293212891
    3. '("")' → logprob: -7.512119293212891
    4. '("' → logprob: -8.26211929321289
    5. '(n' → logprob: -9.13711929321289
    6. '('' → logprob: -9.38711929321289
    7. '("("' → logprob: -10.13711929321289
    8. '(None' → logprob: -11.51211929321289
    9. '"' → logprob: -11.88711929321289
    10. '(False' → logprob: -12.01211929321289

Token 29: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2469237595796585
    2. ')' → logprob: -1.871923804283142
    3. '0' → logprob: -3.6219236850738525
    4. '")' → logprob: -3.8719236850738525
    5. 'n' → logprob: -4.746923923492432
    6. ''' → logprob: -5.746923923492432
    7. '"\' → logprob: -5.996923923492432
    8. '""' → logprob: -6.871923923492432
    9. ' ' → logprob: -7.246923923492432
    10. '   ' → logprob: -8.746923446655273

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6166903151315637e-05
    2. ')
' → logprob: -11.375016212463379
    3. ' )' → logprob: -13.375016212463379
    4. '   ' → logprob: -14.000016212463379
    5. '))' → logprob: -14.375016212463379
    6. '')' → logprob: -14.625016212463379
    7. '`)' → logprob: -14.750016212463379
    8. '()' → logprob: -15.250016212463379
    9. '")' → logprob: -15.625016212463379
    10. ')`' → logprob: -16.000015258789062

Token 31: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8150635957717896
    2. '   ' → logprob: -1.1900635957717896
    3. ' else' → logprob: -1.6900635957717896
    4. '
' → logprob: -3.5650634765625
    5. ' ' → logprob: -4.5650634765625
    6. '<|end|>' → logprob: -4.5650634765625
    7. 'elif' → logprob: -5.1900634765625
    8. '\n' → logprob: -5.8150634765625
    9. '    
' → logprob: -5.8150634765625
    10. ')' → logprob: -6.5650634765625

Token 32: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07974563539028168
    2. 'else' → logprob: -3.4547455310821533
    3. ')' → logprob: -4.454745769500732
    4. ' else' → logprob: -4.454745769500732
    5. '       ' → logprob: -4.829745769500732
    6. '\n' → logprob: -5.704745769500732
    7. ' continue' → logprob: -6.204745769500732
    8. ' ' → logprob: -6.454745769500732
    9. '
' → logprob: -6.579745769500732
    10. 'continue' (adapté à ' continue') → logprob: -7.079745769500732

Token 33: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1632576882839203
    2. '<|end|>' → logprob: -2.538257598876953
    3. '\n' → logprob: -3.663257598876953
    4. '    
' → logprob: -4.163257598876953
    5. 'n' → logprob: -4.663257598876953
    6. 'else' → logprob: -4.913257598876953
    7. '
' → logprob: -5.538257598876953
    8. ' ' → logprob: -6.538257598876953
    9. ')' → logprob: -6.663257598876953
    10. '#' → logprob: -6.913257598876953

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5240234136581421
    2. '
' → logprob: -1.524023413658142
    3. '<|end|>' → logprob: -2.6490235328674316
    4. '    
' → logprob: -3.2740235328674316
    5. '\n' → logprob: -3.5240235328674316
    6. 'n' → logprob: -3.8990235328674316
    7. ' ' → logprob: -5.024023532867432
    8. '  
' → logprob: -5.149023532867432
    9. ' 
' → logprob: -5.149023532867432
    10. '```' → logprob: -5.524023532867432

Token 35: ' result' (ID: 1534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.36582744121551514
    2. '   ' → logprob: -1.7408274412155151
    3. ' ' → logprob: -3.7408275604248047
    4. 'i' → logprob: -3.8658275604248047
    5. 's' → logprob: -3.8658275604248047
    6. 'else' → logprob: -4.740827560424805
    7. ' 
' → logprob: -4.865827560424805
    8. '#' → logprob: -5.115827560424805
    9. '    ' → logprob: -5.615827560424805
    10. '<|end|>' → logprob: -5.615827560424805

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1398809552192688
    2. '=' → logprob: -2.139880895614624
    3. ' +=' → logprob: -4.514881134033203
    4. ' ' → logprob: -7.514881134033203
    5. '_' → logprob: -8.014881134033203
    6. ' *=' → logprob: -8.139881134033203
    7. 's' → logprob: -8.764881134033203
    8. ' |=' → logprob: -8.764881134033203
    9. '[' → logprob: -8.889881134033203
    10. '+=' → logprob: -9.639881134033203

Token 37: ' ""
' (ID: 18061)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6645808815956116
    2. ' ' → logprob: -1.2895808219909668
    3. ' n' → logprob: -2.039580821990967
    4. 'n' → logprob: -3.164580821990967
    5. '0' → logprob: -3.414580821990967
    6. ' []' → logprob: -7.039580821990967
    7. 'sum' → logprob: -7.039580821990967
    8. ' sum' → logprob: -7.289580821990967
    9. '"' → logprob: -7.414580821990967
    10. ' factorial' → logprob: -8.664581298828125

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20901785790920258
    2. ' ' → logprob: -1.9590178728103638
    3. '<|end|>' → logprob: -4.209017753601074
    4. ' for' → logprob: -4.334017753601074
    5. '    ' → logprob: -5.084017753601074
    6. 'for' → logprob: -5.709017753601074
    7. '  ' → logprob: -5.834017753601074
    8. 'i' → logprob: -6.209017753601074
    9. ' 
' → logprob: -6.834017753601074
    10. '    
' → logprob: -7.334017753601074

Token 39: ' num' (ID: 2269)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07529670745134354
    2. ' for' → logprob: -3.575296640396118
    3. 'while' → logprob: -3.950296640396118
    4. '   ' → logprob: -4.200296878814697
    5. 'i' → logprob: -5.825296878814697
    6. ' while' → logprob: -6.325296878814697
    7. 'factor' → logprob: -6.700296878814697
    8. 'if' → logprob: -6.950296878814697
    9. 'digit' → logprob: -7.450296878814697
    10. 'n' → logprob: -7.950296878814697

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07981222867965698
    2. '=' → logprob: -2.9548122882843018
    3. 's' → logprob: -4.204812049865723
    4. '_digits' → logprob: -5.954812049865723
    5. '_tokens' → logprob: -6.079812049865723
    6. 'ber' → logprob: -6.829812049865723
    7. ' +=' → logprob: -7.704812049865723
    8. ' -=' → logprob: -7.704812049865723
    9. ' ' → logprob: -7.829812049865723
    10. '  ' → logprob: -7.954812049865723

Token 41: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08458810299634933
    2. 'n' → logprob: -2.709588050842285
    3. '1' → logprob: -4.834588050842285
    4. ' ' → logprob: -5.334588050842285
    5. '0' → logprob: -7.334588050842285
    6. '"' → logprob: -8.209588050842285
    7. ' abs' → logprob: -8.459588050842285
    8. ' str' → logprob: -8.584588050842285
    9. ' "' → logprob: -8.584588050842285
    10. '2' → logprob: -9.709588050842285

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9074808955192566
    2. ' ' → logprob: -1.0324809551239014
    3. '<|end|>' → logprob: -2.0324809551239014
    4. '    ' → logprob: -2.9074809551239014
    5. '  ' → logprob: -4.282480716705322
    6. ' while' → logprob: -5.032480716705322
    7. ' 
' → logprob: -5.407480716705322
    8. 'while' → logprob: -5.532480716705322
    9. '<|end|>' → logprob: -5.782480716705322
    10. '**' → logprob: -6.157480716705322

Token 44: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.7262112498283386
    2. ' while' → logprob: -0.8512112498283386
    3. '   ' → logprob: -2.6012113094329834
    4. '    ' → logprob: -5.101211071014404
    5. ' ' → logprob: -6.101211071014404
    6. 'for' → logprob: -6.101211071014404
    7. 'if' → logprob: -6.601211071014404
    8. '  ' → logprob: -7.726211071014404
    9. ' for' → logprob: -7.726211071014404
    10. ' if' → logprob: -7.976211071014404

Token 45: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.02575881965458393
    2. ' n' → logprob: -4.400758743286133
    3. 'num' → logprob: -4.400758743286133
    4. 'n' → logprob: -7.150758743286133
    5. ' ' → logprob: -9.650758743286133
    6. '(num' → logprob: -10.525758743286133
    7. '	num' → logprob: -11.650758743286133
    8. '<num' → logprob: -13.400758743286133
    9. '   ' → logprob: -13.650758743286133
    10. '  ' → logprob: -13.900758743286133

Token 46: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.12156137824058533
    2. '>' → logprob: -2.496561288833618
    3. '%' → logprob: -3.871561288833618
    4. ' %' → logprob: -4.496561527252197
    5. ' ' → logprob: -9.746561050415039
    6. ' !=' → logprob: -10.746561050415039
    7. ' ' → logprob: -12.246561050415039
    8. '```' → logprob: -12.246561050415039
    9. '!=' → logprob: -12.496561050415039
    10. '   ' → logprob: -12.621561050415039

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012577705085277557
    2. '0' → logprob: -4.387577533721924
    3. '1' → logprob: -9.637578010559082
    4. '  ' → logprob: -14.012578010559082
    5. '   ' → logprob: -14.012578010559082
    6. ' ' → logprob: -15.325078010559082
    7. ' "' → logprob: -15.450078010559082
    8. '"' → logprob: -15.700078010559082
    9. '-' → logprob: -15.762578010559082
    10. '```' → logprob: -16.075077056884766

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017132848501205444
    2. '1' → logprob: -4.392132759094238
    3. ' ' → logprob: -5.392132759094238
    4. '   ' → logprob: -10.892132759094238
    5. '-' → logprob: -11.142132759094238
    6. '```' → logprob: -11.642132759094238
    7. '  ' → logprob: -12.642132759094238
    8. '	' → logprob: -13.142132759094238
    9. '    ' → logprob: -13.329632759094238
    10. '"' → logprob: -13.454632759094238

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022491037379950285
    2. ':
' → logprob: -6.502249240875244
    3. '   ' → logprob: -7.752249240875244
    4. '       ' → logprob: -8.502248764038086
    5. '<|end|>' → logprob: -10.002248764038086
    6. '[' → logprob: -11.627248764038086
    7. ',' → logprob: -11.627248764038086
    8. '%' → logprob: -11.752248764038086
    9. '):' → logprob: -11.752248764038086
    10. '{' → logprob: -11.877248764038086

Token 50: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.256603479385376
    2. '       ' → logprob: -1.381603479385376
    3. '   ' → logprob: -1.631603479385376
    4. ' ' → logprob: -1.881603479385376
    5. '<|end|>' → logprob: -2.381603479385376
    6. '  ' → logprob: -5.381603240966797
    7. ' remainder' → logprob: -5.381603240966797
    8. ' 
' → logprob: -6.006603240966797
    9. '<|end|>' → logprob: -6.131603240966797
    10. ' num' → logprob: -6.506603240966797

Token 51: ' r' (ID: 428)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.7721619009971619
    2. ' digit' → logprob: -1.5221619606018066
    3. ' result' → logprob: -1.8971619606018066
    4. '       ' → logprob: -2.0221619606018066
    5. ' r' → logprob: -3.8971619606018066
    6. '    ' → logprob: -5.647161960601807
    7. '   ' → logprob: -6.022161960601807
    8. 'result' → logprob: -6.522161960601807
    9. ' if' → logprob: -6.522161960601807
    10. ' num' → logprob: -6.772161960601807

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0035240522120147943
    2. '=' → logprob: -6.003523826599121
    3. ' ' → logprob: -6.878523826599121
    4. 'e' → logprob: -12.378523826599121
    5. ' ' → logprob: -12.503523826599121
    6. 'ema' → logprob: -12.878523826599121
    7. '%' → logprob: -13.253523826599121
    8. '  ' → logprob: -14.128523826599121
    9. '   ' → logprob: -14.128523826599121
    10. 'em' → logprob: -14.128523826599121

Token 53: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.019267531111836433
    2. 'num' → logprob: -4.269267559051514
    3. ' str' → logprob: -5.394267559051514
    4. ' ' → logprob: -8.644267082214355
    5. 'str' → logprob: -8.644267082214355
    6. ' n' → logprob: -9.519267082214355
    7. 'n' → logprob: -10.144267082214355
    8. 'r' → logprob: -11.269267082214355
    9. '	num' → logprob: -11.269267082214355
    10. '"' → logprob: -11.644267082214355

Token 54: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.25196152925491333
    2. '%' → logprob: -1.5019614696502686
    3. ' ' → logprob: -10.751961708068848
    4. '<|end|>' → logprob: -12.126961708068848
    5. ' %=' → logprob: -13.126961708068848
    6. ' ' → logprob: -13.376961708068848
    7. ' %#' → logprob: -15.001961708068848
    8. 's' → logprob: -15.001961708068848
    9. '%i' → logprob: -15.251961708068848
    10. '<|end|>' → logprob: -15.501961708068848

Token 55: ' -' (ID: 533)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.27670302987098694
    2. '10' → logprob: -2.026703119277954
    3. '3' → logprob: -3.401703119277954
    4. '-' → logprob: -3.651703119277954
    5. '7' → logprob: -4.026702880859375
    6. '8' → logprob: -4.651702880859375
    7. '26' → logprob: -5.276702880859375
    8. '16' → logprob: -5.526702880859375
    9. '5' → logprob: -5.651702880859375
    10. '6' → logprob: -6.026702880859375

Token 56: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001911432045744732
    2. '3' → logprob: -9.875190734863281
    3. '1' → logprob: -10.000190734863281
    4. '10' → logprob: -10.000190734863281
    5. '7' → logprob: -11.625190734863281
    6. '8' → logprob: -11.750190734863281
    7. ' ' → logprob: -11.875190734863281
    8. '4' → logprob: -12.125190734863281
    9. '6' → logprob: -12.625190734863281
    10. '

' → logprob: -12.687690734863281

Token 57: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' num' (ID: 2269)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011988457292318344
    2. '=' → logprob: -5.386988639831543
    3. ' //' → logprob: -5.636988639831543
    4. '//=' → logprob: -5.636988639831543
    5. ' /=' → logprob: -8.886988639831543
    6. '//' → logprob: -10.386988639831543
    7. ' ' → logprob: -10.886988639831543
    8. '    ' → logprob: -12.011988639831543
    9. '<|end|>' → logprob: -12.261988639831543
    10. ' ' → logprob: -12.886988639831543

Token 61: ' num' (ID: 2269)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2956559956073761
    2. ' num' → logprob: -1.9206559658050537
    3. '(num' → logprob: -2.5456559658050537
    4. 'num' → logprob: -3.5456559658050537
    5. ' ' → logprob: -7.920656204223633
    6. '(' → logprob: -7.920656204223633
    7. '-' → logprob: -7.920656204223633
    8. ' -(' → logprob: -8.045656204223633
    9. ' -' → logprob: -8.295656204223633
    10. '-(' → logprob: -8.670656204223633

Token 62: ' //' (ID: 602)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6160969734191895
    2. ' ' → logprob: -1.9910969734191895
    3. ' //' → logprob: -2.1160969734191895
    4. '//' → logprob: -2.6160969734191895
    5. ' (' → logprob: -3.8660969734191895
    6. ' ' → logprob: -4.2410969734191895
    7. '        ' → logprob: -4.4910969734191895
    8. ' -' → logprob: -4.7410969734191895
    9. 'r' → logprob: -4.9910969734191895
    10. ' r' → logprob: -5.2410969734191895

Token 63: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.958325295476243e-05
    2. ' -' → logprob: -9.500079154968262
    3. '10' → logprob: -12.875079154968262
    4. '(-' → logprob: -13.250079154968262
    5. '  ' → logprob: -16.500080108642578
    6. '   ' → logprob: -16.500080108642578
    7. '[-' → logprob: -16.625080108642578
    8. '```' → logprob: -16.875080108642578
    9. ' ' → logprob: -17.250080108642578
    10. '−' → logprob: -17.375080108642578

Token 64: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '```' → logprob: -16.000001907348633
    5. '１０' → logprob: -16.625001907348633
    6. '۱۰' → logprob: -16.750001907348633
    7. '<|end|>' → logprob: -17.000001907348633
    8. '१०' → logprob: -17.750001907348633
    9. '
' → logprob: -18.125001907348633
    10. '

' → logprob: -18.125001907348633

Token 65: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.191619411110878
    2. '<|end|>' → logprob: -1.9416193962097168
    3. ' if' → logprob: -4.441619396209717
    4. '
' → logprob: -5.441619396209717
    5. '        ' → logprob: -5.566619396209717
    6. '   ' → logprob: -6.191619396209717
    7. ' ' → logprob: -6.191619396209717
    8. '        
' → logprob: -6.191619396209717
    9. 'if' → logprob: -6.441619396209717
    10. '<|end|>' → logprob: -7.191619396209717

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1132744774222374
    2. '<|end|>' → logprob: -2.613274574279785
    3. ' ' → logprob: -4.238274574279785
    4. '
' → logprob: -5.113274574279785
    5. '   ' → logprob: -5.488274574279785
    6. '        
' → logprob: -5.988274574279785
    7. ' 
' → logprob: -6.113274574279785
    8. '        ' → logprob: -6.613274574279785
    9. ' if' → logprob: -6.738274574279785
    10. '    ' → logprob: -7.363274574279785

Token 67: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23181937634944916
    2. 'if' (adapté à ' if') → logprob: -1.9818193912506104
    3. '   ' → logprob: -3.1068193912506104
    4. '<|end|>' → logprob: -4.981819152832031
    5. ' 
' → logprob: -5.231819152832031
    6. '       ' → logprob: -5.231819152832031
    7. '
' → logprob: -5.731819152832031
    8. '```' → logprob: -7.106819152832031
    9. '	if' → logprob: -7.606819152832031
    10. '  ' → logprob: -7.606819152832031

Token 68: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.0024976562708616257
    2. 'r' → logprob: -6.002497673034668
    3. ' ' → logprob: -10.877497673034668
    4. '0' → logprob: -14.627497673034668
    5. '7' → logprob: -14.627497673034668
    6. '	r' → logprob: -14.752497673034668
    7. '   ' → logprob: -15.002497673034668
    8. ' ' → logprob: -15.377497673034668
    9. '<|end|>' → logprob: -15.814997673034668
    10. '```' → logprob: -15.877497673034668

Token 69: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.030469844117760658
    2. ' <' → logprob: -3.5304698944091797
    3. ' ' → logprob: -8.28046989440918
    4. '0' → logprob: -8.90546989440918
    5. '<|end|>' → logprob: -9.65546989440918
    6. '```' → logprob: -10.03046989440918
    7. '   ' → logprob: -10.65546989440918
    8. ':' → logprob: -10.96796989440918
    9. 'a' → logprob: -11.15546989440918
    10. ')' → logprob: -11.59296989440918

Token 70: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0046227299608290195
    2. ' ' → logprob: -5.379622936248779
    3. '۰' → logprob: -14.004622459411621
    4. '=' → logprob: -15.254622459411621
    5. ')' → logprob: -15.379622459411621
    6. '```' → logprob: -15.879622459411621
    7. '０' → logprob: -16.129623413085938
    8. 'to' → logprob: -16.442123413085938
    9. ':' → logprob: -16.442123413085938
    10. 'br' → logprob: -16.629623413085938

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -14.250017166137695
    4. '０' → logprob: -15.500017166137695
    5. '০' → logprob: -16.875017166137695
    6. '٠' → logprob: -17.000017166137695
    7. '०' → logprob: -18.062517166137695
    8. ')' → logprob: -18.687517166137695
    9. 'zero' → logprob: -18.875017166137695
    10. 'o' → logprob: -19.312517166137695

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01807759329676628
    2. ':
' → logprob: -4.143077373504639
    3. '       ' → logprob: -6.518077373504639
    4. '<|end|>' → logprob: -8.018077850341797
    5. ' :' → logprob: -9.768077850341797
    6. '<|end|>' → logprob: -10.018077850341797
    7. '           ' → logprob: -10.893077850341797
    8. ' :
' → logprob: -11.143077850341797
    9. ',' → logprob: -11.393077850341797
    10. ':

' → logprob: -11.393077850341797

Token 73: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6837673783302307
    2. '       ' → logprob: -0.8087673783302307
    3. '<|end|>' → logprob: -4.058767318725586
    4. ' r' → logprob: -4.183767318725586
    5. '```' → logprob: -5.433767318725586
    6. '           ' → logprob: -5.933767318725586
    7. '<|end|>' → logprob: -6.433767318725586
    8. '        ' → logprob: -6.433767318725586
    9. '   ' → logprob: -6.808767318725586
    10. '1' → logprob: -6.808767318725586

Token 74: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.004077570512890816
    2. '           ' → logprob: -6.379077434539795
    3. ' r' → logprob: -6.504077434539795
    4. '       ' → logprob: -8.004077911376953
    5. '10' → logprob: -8.379077911376953
    6. '7' → logprob: -9.879077911376953
    7. 'num' → logprob: -9.879077911376953
    8. '1' → logprob: -10.379077911376953
    9. 'n' → logprob: -10.504077911376953
    10. '<|end|>' → logprob: -10.629077911376953

Token 75: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0380985289812088
    2. ' +=' → logprob: -3.2880985736846924
    3. '=' → logprob: -9.913098335266113
    4. '+' → logprob: -12.538098335266113
    5. ']+=' → logprob: -13.038098335266113
    6. '   ' → logprob: -14.413098335266113
    7. '+='' → logprob: -15.288098335266113
    8. ' =' → logprob: -15.413098335266113
    9. '```' → logprob: -15.538098335266113
    10. '+="' → logprob: -15.663098335266113

Token 76: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.4736459888808895e-05
    2. '1' → logprob: -11.500014305114746
    3. ' ' → logprob: -12.375014305114746
    4. '   ' → logprob: -16.625015258789062
    5. '```' → logprob: -17.125015258789062
    6. '0' → logprob: -17.437515258789062
    7. '۱۰' → logprob: -17.750015258789062
    8. '１０' → logprob: -17.937515258789062
    9. '<|end|>' → logprob: -17.937515258789062
    10. '101' → logprob: -18.312515258789062

Token 77: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00011152983643114567
    2. '1' → logprob: -9.12511157989502
    3. ' ' → logprob: -14.00011157989502
    4. '<|end|>' → logprob: -14.12511157989502
    5. '101' → logprob: -15.50011157989502
    6. '```' → logprob: -15.75011157989502
    7. '۱۰' → logprob: -16.000110626220703
    8. '１０' → logprob: -16.500110626220703
    9. '१०' → logprob: -16.500110626220703
    10. '0' → logprob: -16.687610626220703

Token 78: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03986142575740814
    2. '
' → logprob: -4.53986120223999
    3. '   ' → logprob: -4.53986120223999
    4. ' 
' → logprob: -5.03986120223999
    5. '    
' → logprob: -5.78986120223999
    6. '        
' → logprob: -5.91486120223999
    7. ' ' → logprob: -6.66486120223999
    8. '    ' → logprob: -6.91486120223999
    9. '```' → logprob: -7.03986120223999
    10. '        ' → logprob: -7.66486120223999

Token 79: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5623257756233215
    2. ' 
' → logprob: -1.3123257160186768
    3. '   ' → logprob: -2.5623257160186768
    4. '
' → logprob: -3.1873257160186768
    5. '    
' → logprob: -4.062325954437256
    6. ' ' → logprob: -4.312325954437256
    7. '        
' → logprob: -5.937325954437256
    8. '<|end|>' → logprob: -5.937325954437256
    9. '    ' → logprob: -6.187325954437256
    10. '     
' → logprob: -6.812325954437256

Token 80: ' num' (ID: 2269)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.517272024415433e-05
    2. 'num' (adapté à ' num') → logprob: -9.625075340270996
    3. ' ' → logprob: -11.750075340270996
    4. '   ' → logprob: -14.000075340270996
    5. '```' → logprob: -15.375075340270996
    6. ' num' → logprob: -16.25007438659668
    7. '  ' → logprob: -17.25007438659668
    8. '    ' → logprob: -17.50007438659668
    9. '
' → logprob: -17.75007438659668
    10. '<|end|>' → logprob: -19.00007438659668

Token 81: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.247075155377388
    2. ' +=' → logprob: -1.7470752000808716
    3. '+' → logprob: -3.122075080871582
    4. ' +' → logprob: -8.497075080871582
    5. '1' → logprob: -8.747075080871582
    6. '<|end|>' → logprob: -9.872075080871582
    7. '+++' → logprob: -10.247075080871582
    8. '=' → logprob: -10.497075080871582
    9. '+='' → logprob: -10.747075080871582
    10. '```' → logprob: -10.997075080871582

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2378600735682994e-05
    2. ' ' → logprob: -10.875032424926758
    3. '<|end|>' → logprob: -11.750032424926758
    4. '116' → logprob: -13.625032424926758
    5. '146' → logprob: -14.500032424926758
    6. '14' → logprob: -15.000032424926758
    7. '   ' → logprob: -15.062532424926758
    8. '```' → logprob: -15.125032424926758
    9. '196' → logprob: -15.250032424926758
    10. '174' → logprob: -15.437532424926758

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -12.375007629394531
    3. '<|end|>' → logprob: -12.875007629394531
    4. '   ' → logprob: -15.625007629394531
    5. '```' → logprob: -16.12500762939453
    6. '<|end|>' → logprob: -16.12500762939453
    7. '+' → logprob: -16.75000762939453
    8. '۱' → logprob: -17.12500762939453
    9. '  ' → logprob: -17.68750762939453
    10. '...' → logprob: -17.81250762939453

Token 84: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04083418846130371
    2. '   ' → logprob: -3.2908341884613037
    3. 'result' → logprob: -6.290834426879883
    4. ' result' → logprob: -7.415834426879883
    5. '```' → logprob: -9.540834426879883
    6. '<|end|>' → logprob: -10.290834426879883
    7. ')' → logprob: -10.415834426879883
    8. '  ' → logprob: -10.665834426879883
    9. '        
' → logprob: -10.790834426879883
    10. '0' → logprob: -10.915834426879883

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008924765512347221
    2. '   ' → logprob: -5.133924961090088
    3. 'result' → logprob: -6.258924961090088
    4. ' result' → logprob: -8.38392448425293
    5. ')' → logprob: -8.88392448425293
    6. '<|end|>' → logprob: -8.88392448425293
    7. '        
' → logprob: -8.88392448425293
    8. ' ' → logprob: -9.50892448425293
    9. ' 
' → logprob: -9.88392448425293
    10. '    
' → logprob: -9.88392448425293

Token 86: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.06256627291440964
    2. ' result' → logprob: -3.0625662803649902
    3. '   ' → logprob: -4.31256628036499
    4. '       ' → logprob: -7.68756628036499
    5. '	result' → logprob: -11.812565803527832
    6. '```' → logprob: -12.687565803527832
    7. '0' → logprob: -12.937565803527832
    8. '  ' → logprob: -13.062565803527832
    9. '    
' → logprob: -13.687565803527832
    10. ' 
' → logprob: -13.812565803527832

Token 87: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17844441533088684
    2. '+' → logprob: -2.0534443855285645
    3. ' +=' → logprob: -3.4284443855285645
    4. '=' → logprob: -6.3034443855285645
    5. '+='' → logprob: -7.3034443855285645
    6. '+="' → logprob: -9.428444862365723
    7. ' +' → logprob: -9.428444862365723
    8. '.append' → logprob: -11.428444862365723
    9. ']+=' → logprob: -11.428444862365723
    10. '```' → logprob: -12.553444862365723

Token 88: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6931677460670471
    2. ' str' → logprob: -0.6931677460670471
    3. '	str' → logprob: -12.068167686462402
    4. '(str' → logprob: -12.193167686462402
    5. 'chr' → logprob: -12.443167686462402
    6. ' ' → logprob: -13.193167686462402
    7. '"' → logprob: -13.693167686462402
    8. ' chr' → logprob: -13.943167686462402
    9. '`' → logprob: -15.068167686462402
    10. '=str' → logprob: -15.193167686462402

Token 89: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.9027791495318525e-05
    2. '(' → logprob: -10.875019073486328
    3. 'r' → logprob: -16.375019073486328
    4. '(
' → logprob: -18.375019073486328
    5. '	r' → logprob: -20.125019073486328
    6. '```' → logprob: -20.250019073486328
    7. ' (' → logprob: -20.375019073486328
    8. '(re' → logprob: -20.500019073486328
    9. '(rr' → logprob: -20.875019073486328
    10. '(res' → logprob: -20.875019073486328

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. ')+' → logprob: -11.250014305114746
    3. '+' → logprob: -14.125014305114746
    4. ' )' → logprob: -15.000014305114746
    5. '```' → logprob: -16.75001335144043
    6. ']' → logprob: -17.62501335144043
    7. ')
' → logprob: -17.75001335144043
    8. '   ' → logprob: -18.00001335144043
    9. '）' → logprob: -18.00001335144043
    10. '}' → logprob: -18.12501335144043

Token 91: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004885728703811765
    2. ' +' → logprob: -7.625488758087158
    3. '>' → logprob: -15.62548828125
    4. '```' → logprob: -16.00048828125
    5. '+
' → logprob: -16.75048828125
    6. ' ' → logprob: -17.12548828125
    7. ')' → logprob: -17.87548828125
    8. '<|end|>' → logprob: -18.00048828125
    9. '+r' → logprob: -18.12548828125
    10. '0' → logprob: -18.37548828125

Token 92: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3132924735546112
    2. ' result' → logprob: -1.3132925033569336
    3. ' ' → logprob: -10.438292503356934
    4. '(result' → logprob: -14.688292503356934
    5. '	result' → logprob: -15.313292503356934
    6. '$result' → logprob: -15.563292503356934
    7. '<|end|>' → logprob: -15.688292503356934
    8. '=result' → logprob: -16.688291549682617
    9. '[result' → logprob: -16.688291549682617
    10. '_result' → logprob: -17.063291549682617

Token 93: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3963862955570221
    2. '   ' → logprob: -1.3963862657546997
    3. 'print' → logprob: -2.7713863849639893
    4. '    
' → logprob: -4.39638614654541
    5. '  
' → logprob: -6.39638614654541
    6. '<|end|>' → logprob: -6.52138614654541
    7. ' print' → logprob: -7.27138614654541
    8. '   
' → logprob: -8.14638614654541
    9. '\n' → logprob: -8.52138614654541
    10. ' 
' → logprob: -8.52138614654541

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022559115663170815
    2. 'print' → logprob: -4.02255916595459
    3. '
' → logprob: -5.52255916595459
    4. '    
' → logprob: -8.39755916595459
    5. ' print' → logprob: -8.77255916595459
    6. '```' → logprob: -11.39755916595459
    7. '<|end|>' → logprob: -12.27255916595459
    8. '  
' → logprob: -13.27255916595459
    9. ' 
' → logprob: -13.39755916595459
    10. '   
' → logprob: -13.77255916595459

Token 95: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.34903591871261597
    2. '   ' → logprob: -1.3490359783172607
    3. ' print' → logprob: -3.3490359783172607
    4. '```' → logprob: -11.22403621673584
    5. '	print' → logprob: -12.84903621673584
    6. ')' → logprob: -13.47403621673584
    7. '    
' → logprob: -13.59903621673584
    8. ' ' → logprob: -14.09903621673584
    9. '`' → logprob: -14.22403621673584
    10. '(print' → logprob: -14.72403621673584

Token 96: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.5760743021965027
    2. '(' → logprob: -0.8260743021965027
    3. '('' → logprob: -9.701074600219727
    4. '("("' → logprob: -9.951074600219727
    5. '(res' → logprob: -12.451074600219727
    6. '()' → logprob: -12.576074600219727
    7. '((' → logprob: -12.576074600219727
    8. '(f' → logprob: -13.326074600219727
    9. '(resultado' → logprob: -13.326074600219727
    10. '(results' → logprob: -13.326074600219727

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -16.625
    4. ')`' → logprob: -16.625
    5. '))' → logprob: -17.75
    6. ')}' → logprob: -19.5
    7. '`)' → logprob: -20.125
    8. '')' → logprob: -20.5
    9. ')

' → logprob: -20.75
    10. '),' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 95
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 44.21%
Précision (top 10): 80.00%
================================================================================
