================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:03:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
price = {1: 6000, 2: 4000, 3: 3000, 4: 2000}

for _ in range(4):
    t, n = map(int, input().split())
    print(price[t] * n)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'price' (ID: 7629)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' {' (ID: 354)
  → Token d'amorce (pas de prédiction)

Token 3: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0109552638605237
    2. '"' → logprob: -5.010955333709717
    3. ''a' → logprob: -6.510955333709717
    4. ''}' → logprob: -7.135955333709717
    5. ''b' → logprob: -8.385954856872559
    6. ''s' → logprob: -8.385954856872559
    7. ''user' → logprob: -8.510954856872559
    8. ''ap' → logprob: -8.760954856872559
    9. ''\' → logprob: -9.010954856872559
    10. ''t' → logprob: -9.385954856872559

Token 4: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005266997031867504
    2. '}' → logprob: -8.125526428222656
    3. ',' → logprob: -8.750526428222656
    4. ' :' → logprob: -9.875526428222656
    5. ':
' → logprob: -12.125526428222656
    6. '0' → logprob: -12.250526428222656
    7. ':

' → logprob: -12.875526428222656
    8. ':,' → logprob: -13.750526428222656
    9. ' ' → logprob: -13.875526428222656
    10. '.' → logprob: -13.875526428222656

Token 5: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018331145867705345
    2. '100' → logprob: -4.143331050872803
    3. '10' → logprob: -7.018331050872803
    4. ''' → logprob: -7.518331050872803
    5. '20' → logprob: -8.518331527709961
    6. '0' → logprob: -8.768331527709961
    7. ' '' → logprob: -9.018331527709961
    8. '50' → logprob: -9.393331527709961
    9. '5' → logprob: -9.643331527709961
    10. '1' → logprob: -10.018331527709961

Token 6: '600' (ID: 6718)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.23535549640655518
    2. ' ' → logprob: -2.1103553771972656
    3. '10' → logprob: -2.7353553771972656
    4. '20' → logprob: -4.735355377197266
    5. '5' → logprob: -5.610355377197266
    6. '50' → logprob: -6.110355377197266
    7. '2' → logprob: -6.110355377197266
    8. ''' → logprob: -6.610355377197266
    9. '9' → logprob: -7.235355377197266
    10. '1' → logprob: -7.610355377197266

Token 7: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012574518099427223
    2. '}' → logprob: -4.387574672698975
    3. ' ,' → logprob: -10.387574195861816
    4. ',
' → logprob: -11.137574195861816
    5. ' }' → logprob: -11.512574195861816
    6. ' ' → logprob: -12.887574195861816
    7. ',

' → logprob: -13.387574195861816
    8. '`}' → logprob: -13.887574195861816
    9. '```' → logprob: -14.012574195861816
    10. '0' → logprob: -14.137574195861816

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005279534496366978
    2. '}' → logprob: -5.255279541015625
    3. ',
' → logprob: -10.755279541015625
    4. ' ,' → logprob: -11.380279541015625
    5. ' }' → logprob: -12.505279541015625
    6. ',

' → logprob: -12.880279541015625
    7. ' ' → logprob: -13.380279541015625
    8. '`}' → logprob: -13.380279541015625
    9. '```' → logprob: -13.755279541015625
    10. ',
' → logprob: -14.630279541015625

Token 9: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04860054701566696
    2. '2' → logprob: -3.048600435256958
    3. ''' → logprob: -12.173600196838379
    4. '```' → logprob: -13.298600196838379
    5. ' ' → logprob: -13.423600196838379
    6. 'space' → logprob: -13.923600196838379
    7. '1' → logprob: -14.048600196838379
    8. ''s' → logprob: -14.423600196838379
    9. '3' → logprob: -15.048600196838379
    10. '`' → logprob: -15.298600196838379

Token 10: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3869408965110779
    2. '2' → logprob: -1.1369409561157227
    3. ''' → logprob: -10.136940956115723
    4. '3' → logprob: -12.261940956115723
    5. ''s' → logprob: -12.449440956115723
    6. ' '' → logprob: -12.699440956115723
    7. '```' → logprob: -12.949440956115723
    8. '  ' → logprob: -13.136940956115723
    9. '5' → logprob: -13.199440956115723
    10. '"' → logprob: -13.386940956115723

Token 11: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.3458322731312364e-06
    2. ',' → logprob: -13.000007629394531
    3. ' :' → logprob: -13.375007629394531
    4. '3' → logprob: -13.625007629394531
    5. '}' → logprob: -13.750007629394531
    6. '```' → logprob: -14.875007629394531
    7. ':

' → logprob: -16.37500762939453
    8. '6' → logprob: -16.50000762939453
    9. '}:' → logprob: -16.50000762939453
    10. ':**' → logprob: -16.75000762939453

Token 12: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08191084861755371
    2. '120' → logprob: -2.9569108486175537
    3. '800' → logprob: -5.706911087036133
    4. '400' → logprob: -5.956911087036133
    5. '700' → logprob: -5.956911087036133
    6. '500' → logprob: -6.331911087036133
    7. '300' → logprob: -6.331911087036133
    8. '100' → logprob: -6.331911087036133
    9. '350' → logprob: -6.331911087036133
    10. '900' → logprob: -6.456911087036133

Token 13: '400' (ID: 4812)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5335427522659302
    2. '120' → logprob: -1.4085427522659302
    3. '800' → logprob: -3.2835426330566406
    4. '100' → logprob: -3.6585426330566406
    5. '900' → logprob: -3.7835426330566406
    6. '700' → logprob: -4.033542633056641
    7. '850' → logprob: -4.158542633056641
    8. '450' → logprob: -4.908542633056641
    9. '750' → logprob: -4.908542633056641
    10. '500' → logprob: -5.283542633056641

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033477479591965675
    2. '}' → logprob: -5.753347873687744
    3. '5' → logprob: -9.628347396850586
    4. ',' → logprob: -9.878347396850586
    5. '3' → logprob: -10.753347396850586
    6. '7' → logprob: -11.253347396850586
    7. '2' → logprob: -12.003347396850586
    8. '1' → logprob: -12.503347396850586
    9. '9' → logprob: -13.003347396850586
    10. ' }' → logprob: -13.253347396850586

Token 15: ',' (ID: 11)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.38693928718566895
    2. ',' → logprob: -1.136939287185669
    3. '```' → logprob: -10.01193904876709
    4. '`}' → logprob: -11.63693904876709
    5. ' }' → logprob: -11.88693904876709
    6. '3' → logprob: -13.38693904876709
    7. ' ' → logprob: -13.63693904876709
    8. '7' → logprob: -14.01193904876709
    9. '},' → logprob: -14.51193904876709
    10. '...' → logprob: -14.76193904876709

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.043006282299757004
    2. '3' → logprob: -3.168006181716919
    3. ' ' → logprob: -12.16800594329834
    4. ' }' → logprob: -14.79300594329834
    5. '1' → logprob: -15.04300594329834
    6. ''' → logprob: -15.04300594329834
    7. '}' → logprob: -15.41800594329834
    8. '4' → logprob: -16.168006896972656
    9. 'space' → logprob: -16.168006896972656
    10. '```' → logprob: -16.668006896972656

Token 17: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4740784466266632
    2. ' ' → logprob: -0.9740784168243408
    3. '4' → logprob: -14.724078178405762
    4. ' ' → logprob: -15.536578178405762
    5. '1' → logprob: -15.724078178405762
    6. ''' → logprob: -15.724078178405762
    7. '}' → logprob: -16.036579132080078
    8. '5' → logprob: -16.036579132080078
    9. '```' → logprob: -17.161579132080078
    10. '7' → logprob: -17.161579132080078

Token 18: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.4153549020411447e-05
    2. '}' → logprob: -10.75002384185791
    3. '}:' → logprob: -13.87502384185791
    4. ',' → logprob: -14.12502384185791
    5. '4' → logprob: -15.50002384185791
    6. ':**' → logprob: -15.50002384185791
    7. ':]' → logprob: -15.87502384185791
    8. '6' → logprob: -16.000024795532227
    9. '```' → logprob: -16.125024795532227
    10. ':

' → logprob: -17.125024795532227

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.041337136179208755
    2. '300' → logprob: -4.166337013244629
    3. '250' → logprob: -4.666337013244629
    4. '200' → logprob: -5.416337013244629
    5. '500' → logprob: -5.666337013244629
    6. '350' → logprob: -5.791337013244629
    7. '800' → logprob: -6.666337013244629
    8. '450' → logprob: -7.416337013244629
    9. '550' → logprob: -7.416337013244629
    10. '700' → logprob: -7.541337013244629

Token 20: '300' (ID: 4095)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31990155577659607
    2. '300' → logprob: -2.444901466369629
    3. '500' → logprob: -2.569901466369629
    4. '200' → logprob: -3.319901466369629
    5. '250' → logprob: -3.819901466369629
    6. '800' → logprob: -4.069901466369629
    7. '350' → logprob: -4.444901466369629
    8. '700' → logprob: -4.694901466369629
    9. '550' → logprob: -5.069901466369629
    10. '100' → logprob: -6.319901466369629

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036047017201781273
    2. '}' → logprob: -5.628604888916016
    3. ',' → logprob: -13.128604888916016
    4. ' ' → logprob: -14.253604888916016
    5. ' }' → logprob: -14.753604888916016
    6. '},' → logprob: -14.878604888916016
    7. '00' → logprob: -15.128604888916016
    8. '})' → logprob: -15.253604888916016
    9. '}}' → logprob: -15.628604888916016
    10. '```' → logprob: -15.753604888916016

Token 22: ',' (ID: 11)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0031817557755857706
    2. ',' → logprob: -5.7531819343566895
    3. ' }' → logprob: -13.378181457519531
    4. '```' → logprob: -13.378181457519531
    5. '`}' → logprob: -14.753181457519531
    6. '}
' → logprob: -15.628181457519531
    7. '},' → logprob: -15.878181457519531
    8. '}`' → logprob: -16.37818145751953
    9. ' ' → logprob: -16.75318145751953
    10. ''}' → logprob: -17.50318145751953

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0550336018204689
    2. '4' → logprob: -2.9300336837768555
    3. ' ' → logprob: -8.930033683776855
    4. ' }' → logprob: -11.180033683776855
    5. '}' → logprob: -12.680033683776855
    6. ''' → logprob: -15.180033683776855
    7. ' 
' → logprob: -15.430033683776855
    8. '`' → logprob: -15.555033683776855
    9. '1' → logprob: -15.680033683776855
    10. '...' → logprob: -16.05503273010254

Token 24: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.06210504099726677
    2. ' ' → logprob: -2.8121049404144287
    3. '}' → logprob: -9.437105178833008
    4. ' }' → logprob: -9.812105178833008
    5. ' ' → logprob: -12.937105178833008
    6. '5' → logprob: -15.937105178833008
    7. '```' → logprob: -16.187105178833008
    8. ')' → logprob: -17.312105178833008
    9. ''' → logprob: -17.437105178833008
    10. '7' → logprob: -17.562105178833008

Token 25: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.7697225252486533e-06
    2. ' :' → logprob: -13.500003814697266
    3. ',' → logprob: -13.750003814697266
    4. '}' → logprob: -14.375003814697266
    5. '6' → logprob: -15.125003814697266
    6. '}:' → logprob: -15.750003814697266
    7. '```' → logprob: -16.250003814697266
    8. '4' → logprob: -16.250003814697266
    9. '2' → logprob: -17.125003814697266
    10. '7' → logprob: -17.375003814697266

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023454520851373672
    2. '500' → logprob: -4.273454666137695
    3. '250' → logprob: -5.523454666137695
    4. '200' → logprob: -5.648454666137695
    5. '450' → logprob: -7.898454666137695
    6. '350' → logprob: -8.023454666137695
    7. '100' → logprob: -8.023454666137695
    8. '700' → logprob: -8.398454666137695
    9. '550' → logprob: -8.898454666137695
    10. '150' → logprob: -9.023454666137695

Token 27: '200' (ID: 1179)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -1.0231473445892334
    2. '200' → logprob: -1.1481473445892334
    3. '500' → logprob: -1.6481473445892334
    4. ' ' → logprob: -3.0231473445892334
    5. '350' → logprob: -3.3981473445892334
    6. '150' → logprob: -4.1481475830078125
    7. '100' → logprob: -4.3981475830078125
    8. '450' → logprob: -4.7731475830078125
    9. '700' → logprob: -6.2731475830078125
    10. '0' → logprob: -6.2731475830078125

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08015062659978867
    2. '}' → logprob: -2.580150604248047
    3. '5' → logprob: -6.955150604248047
    4. ',' → logprob: -8.205150604248047
    5. ' }' → logprob: -10.705150604248047
    6. ' ' → logprob: -12.705150604248047
    7. '1' → logprob: -13.330150604248047
    8. '})' → logprob: -13.330150604248047
    9. '},' → logprob: -13.580150604248047
    10. ')' → logprob: -13.955150604248047

Token 29: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.001706367009319365
    2. ',' → logprob: -6.376706600189209
    3. '```' → logprob: -13.00170612335205
    4. ' }' → logprob: -13.50170612335205
    5. '`}' → logprob: -15.00170612335205
    6. '}
' → logprob: -16.501707077026367
    7. ' ' → logprob: -17.126707077026367
    8. '},' → logprob: -17.376707077026367
    9. '}`' → logprob: -17.376707077026367
    10. '}

' → logprob: -17.751707077026367

Token 30: 'for' (ID: 1938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.031679801642894745
    2. '.' → logprob: -3.53167986869812
    3. ',' → logprob: -6.406679630279541
    4. '```' → logprob: -9.6566801071167
    5. ''' → logprob: -9.7816801071167
    6. '[
' → logprob: -10.0316801071167
    7. ']' → logprob: -10.6566801071167
    8. '\[' → logprob: -10.7816801071167
    9. '*' → logprob: -11.6566801071167
    10. ' [' → logprob: -11.9066801071167

Token 31: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29235464334487915
    2. ' i' → logprob: -1.6673545837402344
    3. ' item' → logprob: -2.7923545837402344
    4. '  ' → logprob: -6.417354583740234
    5. ' product' → logprob: -7.292354583740234
    6. ' ' → logprob: -8.167354583740234
    7. ' space' → logprob: -8.667354583740234
    8. ' price' → logprob: -8.792354583740234
    9. ' key' → logprob: -8.792354583740234
    10. ' ‌' → logprob: -8.792354583740234

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02313937246799469
    2. 'in' → logprob: -3.898139476776123
    3. ',' → logprob: -6.148139476776123
    4. ' ' → logprob: -8.148138999938965
    5. ' i' → logprob: -9.273138999938965
    6. ' ,' → logprob: -10.148138999938965
    7. 'i' → logprob: -11.773138999938965
    8. 'n' → logprob: -11.898138999938965
    9. '  ' → logprob: -12.773138999938965
    10. ' ```' → logprob: -13.273138999938965

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04829411953687668
    2. 'range' → logprob: -3.1732940673828125
    3. ' price' → logprob: -5.2982940673828125
    4. ' ' → logprob: -8.798294067382812
    5. 'price' → logprob: -9.673294067382812
    6. ' ran' → logprob: -10.548294067382812
    7. ' ra' → logprob: -10.923294067382812
    8. ' r' → logprob: -11.798294067382812
    9. ' rang' → logprob: -12.798294067382812
    10. 'r' → logprob: -13.048294067382812

Token 34: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002979240380227566
    2. ' (' → logprob: -8.125297546386719
    3. '(
' → logprob: -13.250297546386719
    4. '(len' → logprob: -16.50029754638672
    5. ' ' → logprob: -17.00029754638672
    6. '(

' → logprob: -17.37529754638672
    7. '```' → logprob: -17.75029754638672
    8. '(space' → logprob: -18.25029754638672
    9. '1' → logprob: -18.50029754638672
    10. '((' → logprob: -18.62529754638672

Token 35: '4' (ID: 19)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.15945543348789215
    2. '4' → logprob: -2.0344555377960205
    3. '1' → logprob: -5.159455299377441
    4. '10' → logprob: -5.409455299377441
    5. ' ' → logprob: -5.659455299377441
    6. '3' → logprob: -6.034455299377441
    7. '2' → logprob: -8.159455299377441
    8. '6' → logprob: -8.534455299377441
    9. '8' → logprob: -11.409455299377441
    10. '100' → logprob: -11.534455299377441

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03532416746020317
    2. ')' → logprob: -3.4103240966796875
    3. ':' → logprob: -6.6603240966796875
    4. ' ):' → logprob: -7.9103240966796875
    5. ' )' → logprob: -11.160324096679688
    6. '+' → logprob: -12.035324096679688
    7. '):
' → logprob: -12.785324096679688
    8. ',' → logprob: -12.910324096679688
    9. ' :' → logprob: -14.285324096679688
    10. ' ' → logprob: -14.535324096679688

Token 37: '   ' (ID: 271)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -1.2306878566741943
    2. ' product' → logprob: -1.6056878566741943
    3. '   ' → logprob: -1.8556878566741943
    4. ' input' → logprob: -2.7306878566741943
    5. ' price' → logprob: -2.8556878566741943
    6. ' 
' → logprob: -2.9806878566741943
    7. ' print' → logprob: -3.1056878566741943
    8. ' ' → logprob: -3.8556878566741943
    9. ' user' → logprob: -3.9806878566741943
    10. ' n' → logprob: -4.855688095092773

Token 38: ' t' (ID: 260)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.2177997827529907
    2. ' item' → logprob: -1.4677997827529907
    3. 'num' → logprob: -2.592799663543701
    4. 'choice' → logprob: -2.592799663543701
    5. ' choice' → logprob: -2.967799663543701
    6. 'product' → logprob: -2.967799663543701
    7. 'n' → logprob: -2.967799663543701
    8. ' product' → logprob: -3.467799663543701
    9. 'quantity' → logprob: -3.842799663543701
    10. 'i' → logprob: -3.842799663543701

Token 39: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5671020150184631
    2. 'icket' → logprob: -1.6921019554138184
    3. 'o' → logprob: -2.1921019554138184
    4. 'r' → logprob: -3.5671019554138184
    5. 'y' → logprob: -3.6921019554138184
    6. ' =' → logprob: -3.8171019554138184
    7. 'ype' → logprob: -4.067101955413818
    8. '=' → logprob: -4.942101955413818
    9. 'ry' → logprob: -4.942101955413818
    10. 'ickets' → logprob: -5.567101955413818

Token 40: ' n' (ID: 297)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4110761880874634
    2. ' p' → logprob: -1.7860761880874634
    3. 'q' → logprob: -1.9110761880874634
    4. 'n' → logprob: -2.161076068878174
    5. ' q' → logprob: -2.536076068878174
    6. ' n' → logprob: -2.536076068878174
    7. 'a' → logprob: -3.661076068878174
    8. 'c' → logprob: -4.036076068878174
    9. 'w' → logprob: -4.036076068878174
    10. 's' → logprob: -4.286076068878174

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10031266510486603
    2. '=' → logprob: -2.3503127098083496
    3. ' ' → logprob: -9.350312232971191
    4. ',' → logprob: -11.350312232971191
    5. ')' → logprob: -13.100312232971191
    6. ' ,' → logprob: -13.225312232971191
    7. '  ' → logprob: -13.975312232971191
    8. ' =
' → logprob: -14.475312232971191
    9. '   ' → logprob: -15.475312232971191
    10. '=input' → logprob: -15.475312232971191

Token 42: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05665032938122749
    2. 'map' → logprob: -2.931650400161743
    3. ' input' → logprob: -6.556650161743164
    4. 'input' → logprob: -8.056650161743164
    5. ' list' → logprob: -11.181650161743164
    6. ' ' → logprob: -12.431650161743164
    7. 'list' → logprob: -12.931650161743164
    8. ' [' → logprob: -13.556650161743164
    9. 'int' → logprob: -13.556650161743164
    10. 'm' → logprob: -13.681650161743164

Token 43: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1271129846572876
    2. '(' → logprob: -2.127112865447998
    3. '(input' → logprob: -9.502113342285156
    4. '(str' → logprob: -9.877113342285156
    5. '[int' → logprob: -10.627113342285156
    6. 'int' → logprob: -10.752113342285156
    7. '<int' → logprob: -12.127113342285156
    8. '(
' → logprob: -12.752113342285156
    9. '=int' → logprob: -13.752113342285156
    10. '```' → logprob: -14.127113342285156

Token 44: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4855428636074066
    2. 'input' → logprob: -0.985542893409729
    3. ')' → logprob: -4.8605427742004395
    4. ' input' → logprob: -6.1105427742004395
    5. ',input' → logprob: -6.7355427742004395
    6. '(' → logprob: -8.610543251037598
    7. '=input' → logprob: -10.610543251037598
    8. ',' → logprob: -11.360543251037598
    9. '<input' → logprob: -11.735543251037598
    10. '[input' → logprob: -12.360543251037598

Token 45: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693145871162415
    2. ' input' → logprob: -2.1269314289093018
    3. ')' → logprob: -13.001931190490723
    4. ' ' → logprob: -14.876931190490723
    5. '(input' → logprob: -15.376931190490723
    6. '	input' → logprob: -15.626931190490723
    7. '=input' → logprob: -16.25193214416504
    8. '   ' → logprob: -16.37693214416504
    9. ' )' → logprob: -16.50193214416504
    10. ',input' → logprob: -17.00193214416504

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.24179228907451e-05
    2. '()' → logprob: -9.750061988830566
    3. '())' → logprob: -13.500061988830566
    4. ' ().' → logprob: -13.625061988830566
    5. '(' → logprob: -14.250061988830566
    6. '()
' → logprob: -14.250061988830566
    7. '().
' → logprob: -17.875062942504883
    8. '()))' → logprob: -18.250062942504883
    9. '('').' → logprob: -18.375062942504883
    10. '()[' → logprob: -18.375062942504883

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043376852408982813
    2. 'strip' → logprob: -7.750433921813965
    3. 'rstrip' → logprob: -12.875433921813965
    4. ' split' → logprob: -14.500433921813965
    5. '(split' → logprob: -16.87543296813965
    6. 'spl' → logprob: -17.37543296813965
    7. 's' → logprob: -18.62543296813965
    8. 'sp' → logprob: -18.75043296813965
    9. 'plit' → logprob: -19.75043296813965
    10. ')' → logprob: -20.62543296813965

Token 48: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30341267585754395
    2. '())' → logprob: -1.803412675857544
    3. '))' → logprob: -2.428412675857544
    4. '()' → logprob: -5.053412437438965
    5. '()))' → logprob: -6.303412437438965
    6. '(' → logprob: -7.678412437438965
    7. '('' → logprob: -10.428412437438965
    8. ')")' → logprob: -11.053412437438965
    9. '`)' → logprob: -11.303412437438965
    10. ')`' → logprob: -11.553412437438965

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20724032819271088
    2. '
' → logprob: -2.332240343093872
    3. '    
' → logprob: -3.457240343093872
    4. 'price' → logprob: -3.832240343093872
    5. ' price' → logprob: -4.207240104675293
    6. ')' → logprob: -5.582240104675293
    7. '\n' → logprob: -5.957240104675293
    8. '<|end|>' → logprob: -6.332240104675293
    9. '  
' → logprob: -6.582240104675293
    10. ' 
' → logprob: -6.582240104675293

Token 50: ' print' (ID: 2123)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.437342882156372
    2. ' if' → logprob: -1.687342882156372
    3. ' total' → logprob: -1.937342882156372
    4. 'if' → logprob: -2.312342882156372
    5. 'cost' → logprob: -2.687342882156372
    6. 'price' → logprob: -2.812342882156372
    7. 're' → logprob: -2.937342882156372
    8. 'print' (adapté à ' print') → logprob: -3.187342882156372
    9. ' cost' → logprob: -3.312342882156372
    10. 'result' → logprob: -3.937342882156372

Token 51: '(price' (ID: 81279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18163219094276428
    2. '(price' → logprob: -1.806632161140442
    3. '((' → logprob: -7.306632041931152
    4. '('' → logprob: -7.806632041931152
    5. '(f' → logprob: -7.806632041931152
    6. '("' → logprob: -8.556632041931152
    7. 'price' → logprob: -10.306632041931152
    8. '(
' → logprob: -10.556632041931152
    9. '(round' → logprob: -10.556632041931152
    10. '(t' → logprob: -10.556632041931152

Token 52: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.000344640837283805
    2. '[' → logprob: -8.000344276428223
    3. '[n' → logprob: -12.875344276428223
    4. ' [' → logprob: -13.000344276428223
    5. ')' → logprob: -13.375344276428223
    6. '[token' → logprob: -14.375344276428223
    7. ')t' → logprob: -14.500344276428223
    8. ')[' → logprob: -14.500344276428223
    9. '[
' → logprob: -14.750344276428223
    10. '[type' → logprob: -15.625344276428223

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005259964615106583
    2. ']*' → logprob: -5.255259990692139
    3. ' ]' → logprob: -10.75525951385498
    4. '*' → logprob: -13.75525951385498
    5. '])' → logprob: -14.13025951385498
    6. ')' → logprob: -14.25525951385498
    7. '],' → logprob: -14.25525951385498
    8. '']' → logprob: -14.38025951385498
    9. '"]' → logprob: -14.38025951385498
    10. '}' → logprob: -15.00525951385498

Token 54: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4907868504524231
    2. '*' → logprob: -0.9907868504524231
    3. ')' → logprob: -4.365787029266357
    4. '*n' → logprob: -5.615787029266357
    5. '*t' → logprob: -9.2407865524292
    6. ')*' → logprob: -10.4907865524292
    7. ' ' → logprob: -10.6157865524292
    8. ' )' → logprob: -10.8657865524292
    9. '   ' → logprob: -11.1157865524292
    10. ',' → logprob: -11.8657865524292

Token 55: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47407910227775574
    2. ' n' → logprob: -0.9740791320800781
    3. ' ' → logprob: -13.474079132080078
    4. ')n' → logprob: -15.599079132080078
    5. '	n' → logprob: -15.599079132080078
    6. ' ' → logprob: -15.974079132080078
    7. ')' → logprob: -16.599079132080078
    8. '(n' → logprob: -17.849079132080078
    9. '   ' → logprob: -18.224079132080078
    10. '  ' → logprob: -18.224079132080078

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9146995327901095e-05
    2. ' )' → logprob: -11.125019073486328
    3. '))' → logprob: -13.000019073486328
    4. ')
' → logprob: -14.375019073486328
    5. '}' → logprob: -14.500019073486328
    6. '*' → logprob: -14.875019073486328
    7. ')`' → logprob: -15.500019073486328
    8. ')}' → logprob: -15.750019073486328
    9. '`)' → logprob: -15.750019073486328
    10. '**' → logprob: -17.125019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 54
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 55.56%
Précision adaptée (1ère position): 55.56%
Précision (top 10): 85.19%
================================================================================
