================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque, defaultdict

class AhoCorasick:
    """
    Implementation of Aho-Corasick automaton for multiple pattern matching.
    This allows searching for multiple patterns simultaneously in O(text_length + total_pattern_length + number_of_matches).
    """

    def __init__(self):
        self.goto = {}       # trie transitions: state -> char -> next_state
        self.out = defaultdict(set)  # output: state -> set(pattern_ids)
        self.fail = {}       # failure function: state -> fallback state
        self.states = 1      # number of states; state 0 is root

    def add_word(self, word, word_id):
        """
        Add a word in the trie with associated id.
        """
        current = 0
        for ch in word:
            if (current, ch) not in self.goto:
                self.goto[(current, ch)] = self.states
                self.states += 1
            current = self.goto[(current, ch)]
        self.out[current].add(word_id)

    def build(self):
        """
        Build failure links for the automaton using BFS.
        """
        queue = deque()
        self.fail = {0: 0}
        # Initialize failure links for depth 1 states
        for ch in 'abcdefghijklmnopqrstuvwxyz':
            nxt = self.goto.get((0, ch), None)
            if nxt is not None:
                self.fail[nxt] = 0
                queue.append(nxt)
            else:
                self.goto[(0, ch)] = 0  # Add fallback loop to root for missing edges

        # BFS to build fail links and merge output sets
        while queue:
            r = queue.popleft()
            for ch in 'abcdefghijklmnopqrstuvwxyz':
                nxt = self.goto.get((r, ch), None)
                if nxt is not None:
                    queue.append(nxt)
                    self.fail[nxt] = self.goto[(self.fail[r], ch)]
                    self.out[nxt].update(self.out[self.fail[nxt]])

def main():
    input = sys.stdin.readline

    while True:
        line = ''
        while line.strip() == '':
            line = sys.stdin.readline()
            if not line:
                return
        n, m = map(int, line.strip().split())
        if n == 0 and m == 0:
            break

        element_strings = []
        length_sum = 0
        for _ in range(n):
            s = sys.stdin.readline().strip()
            element_strings.append(s)
            length_sum += len(s)

        # Read and concatenate all m lines of text into one string ignoring newlines
        text_lines = []
        read_length = 0
        # Since total text length is given only by m lines, read exact m lines
        for _ in range(m):
            line = sys.stdin.readline()
            text_lines.append(line.strip())
        text = ''.join(text_lines)

        # Goal:
        # Find all concatenations of the n element strings in any permutation.
        # Naive permutations is n! (up to 12! ~ very big),
        # so approach:
        # - Build an Aho-Corasick automaton for the element strings
        # - Use DP on text to find positions where concatenations occur
        #
        # Approach details:
        # We want to find in the text all substrings which are concatenations of all element strings in any order.
        # Each element string must appear once, no duplicates unless duplicated strings in elements.
        #
        # Let's assign indices 0..n-1 to element strings.
        #
        # We will run the Aho automaton on the text to find all occurrences of element strings (which element matched at each position)
        #
        # Then, use DP:
        # dp[position][mask] = whether it's possible to form a concatenation using element strings in mask ending exactly at position-1 in text
        # mask is a bitmask of length n, bits set for elements matched so far.
        #
        # dp initialized with dp[0][0] = True (empty)
        #
        # For each position in text, and mask, if dp[pos][mask] = True,
        # and from pos we find an element string ej matching text[pos:pos+len(ej)]
        # then dp[pos+len(ej)][mask|(1<<j)] = True
        #
        # Finally, count the number of positions i where dp[i][full_mask] = True
        # That means a concatenation matched ending at position i-1 (0-based)
        #
        # To do this efficiently:
        # We preprocess all occurrences of element strings in text using Aho-Corasick,
        # For each ending position in text, store list of element strings that end there (their index and length)
        #
        # Then do DP forward.
        # Because n <= 12, we can store dp with mask up to 2^12 = 4096 which is feasible.
        #
        # The length of text <= 5000, so dp size ~ 5000 * 4096 = 20 million booleans -> can be too big in memory.
        #
        # Optimization:
        # - We store dp only for positions from 0 to len(text)
        # - For each position, store a dict or bitset for mask states reachable.
        # Using a queue for BFS style DP on states (position, mask)
        #
        # This reduces memory, as we only store visited states, not the full dp matrix.
        #
        # Summary:
        # 1. Build Aho automaton
        # 2. Find all matches (element string indexes) ending at each position
        # 3. BFS over states (position, mask) starting from (0,0)
        # 4. Whenever mask == full_mask, we record position as a full match ending position.
        # 5. Count distinct starting positions of full concatenations in text.
        #
        # As we want to count the number of positions where concatenation appears (starting positions),
        # note that dp tracks end positions, so starting position = end_pos - total_length + 1

        # Precompute full mask (all elements used)
        full_mask = (1 << n) - 1
        total_length = sum(len(s) for s in element_strings)

        # Build Aho automaton for element strings
        aho = AhoCorasick()
        for i, s in enumerate(element_strings):
            aho.add_word(s, i)
        aho.build()

        # Run Aho automaton on text to find matches ending at each position
        # matches_at_pos[i] = list of tuples (element_index, length) for matches ending at i-th char (0-based)
        matches_at_pos = [[] for _ in range(len(text))]
        state = 0
        for i, ch in enumerate(text):
            state = aho.goto[(state, ch)]
            if aho.out[state]:
                for pattern_id in aho.out[state]:
                    length = len(element_strings[pattern_id])
                    matches_at_pos[i].append((pattern_id, length))

        # BFS DP
        from collections import deque

        # visited states: (position, mask)
        visited = [set() for _ in range(len(text)+1)]
        queue = deque()
        # start from position 0, mask 0 (no elements matched)
        visited[0].add(0)
        queue.append((0,0))
        result_positions = set()

        while queue:
            pos, mask = queue.popleft()
            # If all elements matched, record the match starting position
            if mask == full_mask:
                # concatenation ends at pos-1 (0-based index)
                start_pos = pos - total_length
                if start_pos >= 0:
                    result_positions.add(start_pos)
                # No need to continue from here, but can continue for overlapping occurrences

            if pos == len(text):
                # Reached end of text, can't extend further
                continue

            # For all matches that start at pos
            # Our matches_at_pos is for ending positions, so we must find matches starting at pos
            # matches are recorded by their end index, so for matches that start at pos:
            # For all positions end >= pos where a pattern ends such that start = end - len + 1 == pos
            # We do reverse lookup: For position pos, check matches ending at end_pos = pos + len -1

            # Iterate all matches that end at i where i >= pos + something?
            # Instead, for each possible offset in element_strings:
            # precalc is matches_at_pos[end_pos], so check matches ending at end_pos = pos + len(e[s]) -1

            # Let's try to do it with this approach:
            # For each element string j:
            # compute end_pos = pos + len(element_strings[j]) - 1
            # if end_pos < len(text) and matches_at_pos[end_pos] contains (j, len(element_strings[j])) then possible

            for j in range(n):
                if (mask >> j) & 1 == 1:
                    continue  # element j already used
                length_j = len(element_strings[j])
                end_pos = pos + length_j - 1
                if end_pos >= len(text):
                    continue
                # Check if element j matches ending at end_pos
                # Use a fast membership check:
                # matches_at_pos[end_pos] is small (patterns ending there)
                # Check if (j, length_j) in matches_at_pos[end_pos]
                # Using a set for matches_at_pos[end_pos] for better lookup

            # To speed up membership check, prepare sets per end_pos
            # Let's prepare once outside the loop

            # So break to outer loop to prepare sets outside for speed
            break

        # Prepare sets for membership check
    # --- Re-starting after restart for membership ---

def main_full():
    import sys
    from collections import deque, defaultdict

    class AhoCorasick:
        def __init__(self):
            self.goto = {}
            self.out = defaultdict(set)
            self.fail = {}
            self.states = 1

        def add_word(self, word, word_id):
            current = 0
            for ch in word:
                if (current, ch) not in self.goto:
                    self.goto[(current, ch)] = self.states
                    self.states += 1
                current = self.goto[(current, ch)]
            self.out[current].add(word_id)

        def build(self):
            queue = deque()
            self.fail = {0: 0}
            for ch in 'abcdefghijklmnopqrstuvwxyz':
                nxt = self.goto.get((0, ch), None)
                if nxt is not None:
                    self.fail[nxt] = 0
                    queue.append(nxt)
                else:
                    self.goto[(0, ch)] = 0
            while queue:
                r = queue.popleft()
                for ch in 'abcdefghijklmnopqrstuvwxyz':
                    nxt = self.goto.get((r, ch), None)
                    if nxt is not None:
                        queue.append(nxt)
                        self.fail[nxt] = self.goto[(self.fail[r], ch)]
                        self.out[nxt].update(self.out[self.fail[nxt]])

    input = sys.stdin.readline
    while True:
        line = ''
        while line.strip() == '':
            line = sys.stdin.readline()
            if not line:
                return
        n, m = map(int, line.strip().split())
        if n == 0 and m == 0:
            break

        element_strings = []
        length_sum = 0
        for _ in range(n):
            s = sys.stdin.readline().strip()
            element_strings.append(s)
            length_sum += len(s)

        text_lines = []
        for _ in range(m):
            line = sys.stdin.readline()
            text_lines.append(line.strip())
        text = ''.join(text_lines)

        full_mask = (1 << n) - 1
        total_length = length_sum

        # Build Aho automaton
        aho = AhoCorasick()
        for i, s in enumerate(element_strings):
            aho.add_word(s, i)
        aho.build()

        matches_at_pos = [[] for _ in range(len(text))]
        state = 0
        for i, ch in enumerate(text):
            state = aho.goto[(state, ch)]
            if aho.out[state]:
                for pid in aho.out[state]:
                    length_p = len(element_strings[pid])
                    matches_at_pos[i].append((pid, length_p))

        # Prepare sets for quick membership
        matches_set_at_pos = [set(m) for m in matches_at_pos]

        from collections import deque
        visited = [set() for _ in range(len(text)+1)]
        queue = deque()
        visited[0].add(0)
        queue.append((0,0))
        result_positions = set()

        while queue:
            pos, mask = queue.popleft()
            if mask == full_mask:
                start_pos = pos - total_length
                if start_pos >= 0:
                    result_positions.add(start_pos)
                # do not return, consider overlapping occurrences

            if pos == len(text):
                continue

            # Try to extend from pos with any element string not used
            for j in range(n):
                if (mask >> j) & 1 == 1:
                    continue
                length_j = len(element_strings[j])
                end_pos = pos + length_j - 1
                if end_pos >= len(text):
                    continue
                if (j, length_j) in matches_set_at_pos[end_pos]:
                    next_mask = mask | (1 << j)
                    if next_mask not in visited[end_pos+1]:
                        visited[end_pos+1].add(next_mask)
                        queue.append((end_pos+1, next_mask))

        print(len(result_positions))


if __name__ == "__main__":
    main_full()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6409761309623718
    2. '.' → logprob: -0.8909761309623718
    3. 'import' → logprob: -4.0159759521484375
    4. 'newline' → logprob: -4.2659759521484375
    5. '\' → logprob: -4.7659759521484375
    6. '<|end|>' → logprob: -5.0159759521484375
    7. '```' → logprob: -5.3909759521484375
    8. '
' → logprob: -5.6409759521484375
    9. '<|end|>' → logprob: -6.5159759521484375
    10. '' → logprob: -6.5159759521484375

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.019724516198039055
    2. 'os' → logprob: -4.019724369049072
    3. ' pathlib' → logprob: -8.01972484588623
    4. ' math' → logprob: -8.14472484588623
    5. ' Py' → logprob: -8.14472484588623
    6. ' collections' → logprob: -8.51972484588623
    7. ' ' → logprob: -9.14472484588623
    8. 'collections' → logprob: -9.89472484588623
    9. ' datetime' → logprob: -10.01972484588623
    10. ' typing' → logprob: -10.51972484588623

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6514770984649658
    2. 'import' → logprob: -0.7764770984649658
    3. '.' → logprob: -4.026476860046387
    4. '```' → logprob: -7.776476860046387
    5. ' ' → logprob: -8.526476860046387
    6. '.import' → logprob: -9.651476860046387
    7. '_' → logprob: -10.026476860046387
    8. '<|end|>' → logprob: -10.276476860046387
    9. '	import' → logprob: -10.401476860046387
    10. '_import' → logprob: -11.026476860046387

Token 6: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.6127228736877441
    2. ' defaultdict' → logprob: -0.8627228736877441
    3. 'deque' → logprob: -3.362722873687744
    4. ' abc' → logprob: -7.237722873687744
    5. ' named' → logprob: -7.862722873687744
    6. ' Counter' → logprob: -8.612722396850586
    7. 'default' → logprob: -9.737722396850586
    8. 'abc' → logprob: -9.862722396850586
    9. 'named' → logprob: -9.987722396850586
    10. ' Ordered' → logprob: -11.737722396850586

Token 7: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9239856600761414
    2. '\n' → logprob: -1.0489857196807861
    3. '
' → logprob: -1.9239857196807861
    4. 'import' → logprob: -3.173985719680786
    5. '```' → logprob: -3.423985719680786
    6. '\' → logprob: -3.798985719680786
    7. '<|end|>' → logprob: -5.923985481262207
    8. 'newline' → logprob: -6.173985481262207
    9. '' → logprob: -6.923985481262207
    10. '<|end|>' → logprob: -7.048985481262207

Token 8: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.013615068979561329
    2. 'default' → logprob: -4.513615131378174
    3. ' named' → logprob: -6.888615131378174
    4. 'named' → logprob: -7.013615131378174
    5. 'Ordered' → logprob: -8.263614654541016
    6. ' Ordered' → logprob: -8.388614654541016
    7. 'Counter' → logprob: -9.513614654541016
    8. ' Counter' → logprob: -9.513614654541016
    9. ' default' → logprob: -12.388614654541016
    10. 'deque' → logprob: -12.763614654541016

Token 9: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.36235642433166504
    2. '```' → logprob: -2.487356424331665
    3. 'import' → logprob: -2.612356424331665
    4. '
' → logprob: -2.612356424331665
    5. ',' → logprob: -3.112356424331665
    6. '\n' → logprob: -4.237356185913086
    7. '<|end|>' → logprob: -4.987356185913086
    8. ' 

' → logprob: -6.612356185913086
    9. ',

' → logprob: -6.737356185913086
    10. '\' → logprob: -6.737356185913086

Token 10: 'class' (ID: 1444)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6755114793777466
    2. 'import' → logprob: -1.6755114793777466
    3. '`' → logprob: -2.050511360168457
    4. '

' → logprob: -2.175511360168457
    5. '\' → logprob: -2.425511360168457
    6. '```' → logprob: -2.675511360168457
    7. '#' → logprob: -2.925511360168457
    8. 'd' → logprob: -3.175511360168457
    9. 'def' → logprob: -3.425511360168457
    10. '
' → logprob: -3.425511360168457

Token 11: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2408948838710785
    2. ' My' → logprob: -2.6158947944641113
    3. ' De' → logprob: -3.3658947944641113
    4. ' BFS' → logprob: -3.4908947944641113
    5. ' Solution' → logprob: -3.6158947944641113
    6. ' B' → logprob: -4.240894794464111
    7. ' A' → logprob: -4.990894794464111
    8. ' Graph' → logprob: -5.240894794464111
    9. ' Node' → logprob: -5.740894794464111
    10. ' Stack' → logprob: -5.990894794464111

Token 12: 'ho' (ID: 1555)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18274573981761932
    2. '(' → logprob: -2.6827456951141357
    3. 'I' → logprob: -3.4327456951141357
    4. 'A' → logprob: -3.5577456951141357
    5. ' :' → logprob: -3.8077456951141357
    6. '():' → logprob: -5.057745933532715
    7. '```' → logprob: -6.307745933532715
    8. '(:' → logprob: -6.807745933532715
    9. 'C' → logprob: -7.182745933532715
    10. 'B' → logprob: -7.182745933532715

Token 13: 'Cor' (ID: 11534)
  Prédit: 'Cor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.07664164900779724
    2. '-C' → logprob: -3.57664155960083
    3. 'Coder' → logprob: -3.95164155960083
    4. 'C' → logprob: -4.57664155960083
    5. '_C' → logprob: -5.70164155960083
    6. '```' → logprob: -5.95164155960083
    7. 'Cod' → logprob: -6.45164155960083
    8. 'Corpus' → logprob: -6.57664155960083
    9. ' ' → logprob: -7.07664155960083
    10. 'Coroutine' → logprob: -7.20164155960083

Token 14: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.002368393586948514
    2. 'a' → logprob: -6.502368450164795
    3. ' as' → logprob: -7.377368450164795
    4. 'asz' → logprob: -9.127367973327637
    5. '```' → logprob: -10.252367973327637
    6. 'asp' → logprob: -10.627367973327637
    7. '``' → logprob: -10.752367973327637
    8. 'asus' → logprob: -11.377367973327637
    9. 'asu' → logprob: -12.002367973327637
    10. 'asd' → logprob: -12.127367973327637

Token 15: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.08087556064128876
    2. '```' → logprob: -2.9558756351470947
    3. '``' → logprob: -4.455875396728516
    4. ' ' → logprob: -5.955875396728516
    5. '{}' → logprob: -6.455875396728516
    6. '1' → logprob: -6.705875396728516
    7. 'ieck' → logprob: -6.955875396728516
    8. '	' → logprob: -6.955875396728516
    9. '\' → logprob: -7.205875396728516
    10. '{' → logprob: -7.455875396728516

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06389189511537552
    2. '(' → logprob: -2.938891887664795
    3. '():' → logprob: -5.688891887664795
    4. 'Trie' → logprob: -5.688891887664795
    5. '(A' → logprob: -7.688891887664795
    6. '(object' → logprob: -8.188892364501953
    7. 'Tokenizer' → logprob: -8.313892364501953
    8. '```' → logprob: -8.938892364501953
    9. ' :' → logprob: -9.188892364501953
    10. ':**' → logprob: -9.188892364501953

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7476186752319336
    2. ' ' → logprob: -2.3726186752319336
    3. '<|end|>' → logprob: -2.6226186752319336
    4. ' 
' → logprob: -2.7476186752319336
    5. '    ' → logprob: -3.1226186752319336
    6. '(object' → logprob: -3.4976186752319336
    7. ':' → logprob: -3.4976186752319336
    8. '  
' → logprob: -3.4976186752319336
    9. '(' → logprob: -3.6226186752319336
    10. ' def' → logprob: -3.7476186752319336

Token 18: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.030042849481105804
    2. 'def' → logprob: -3.530042886734009
    3. '    ' → logprob: -9.28004264831543
    4. '   ' → logprob: -9.40504264831543
    5. ' 
' → logprob: -10.03004264831543
    6. '    
' → logprob: -10.40504264831543
    7. '     
' → logprob: -11.03004264831543
    8. ' ' → logprob: -12.15504264831543
    9. 'class' → logprob: -12.15504264831543
    10. '```' → logprob: -12.53004264831543

Token 19: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7891795039176941
    2. ' """' → logprob: -1.4141795635223389
    3. '   ' → logprob: -2.039179563522339
    4. 'class' → logprob: -2.914179563522339
    5. '\n' → logprob: -3.664179563522339
    6. ' """
' → logprob: -4.28917932510376
    7. ' class' → logprob: -4.91417932510376
    8. 'A' → logprob: -4.91417932510376
    9. '```' → logprob: -5.03917932510376
    10. ' ' → logprob: -5.16417932510376

Token 20: ' Implementation' (ID: 60216)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1235064268112183
    2. ' A' → logprob: -1.3735064268112183
    3. 'Trie' → logprob: -1.4985064268112183
    4. ' Trie' → logprob: -2.373506546020508
    5. '"""' → logprob: -2.998506546020508
    6. ' """' → logprob: -3.998506546020508
    7. 'Multi' → logprob: -4.248506546020508
    8. ' Multi' → logprob: -4.748506546020508
    9. ' trie' → logprob: -5.998506546020508
    10. ' multi' → logprob: -6.248506546020508

Token 21: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.017375504598021507
    2. '<|end|>' → logprob: -4.642375469207764
    3. ' ' → logprob: -5.392375469207764
    4. 'of' → logprob: -6.892375469207764
    5. '<|end|>' → logprob: -6.892375469207764
    6. '   ' → logprob: -8.017375946044922
    7. ' for' → logprob: -8.267375946044922
    8. ' class' → logprob: -9.267375946044922
    9. '  ' → logprob: -9.392375946044922
    10. '    ' → logprob: -10.017375946044922

Token 22: ' A' (ID: 355)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3506239354610443
    2. ' A' → logprob: -1.6006239652633667
    3. 'A' → logprob: -3.225623846054077
    4. 'the' → logprob: -3.725623846054077
    5. ' a' → logprob: -4.225624084472656
    6. ' an' → logprob: -4.600624084472656
    7. ' aho' → logprob: -5.975624084472656
    8. 'a' → logprob: -6.975624084472656
    9. ' ' → logprob: -7.475624084472656
    10. ' multi' → logprob: -8.100624084472656

Token 23: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -6.587483221665025e-05
    2. ' ho' → logprob: -9.750065803527832
    3. ' aho' → logprob: -13.000065803527832
    4. '   ' → logprob: -13.250065803527832
    5. 'Ho' → logprob: -13.625065803527832
    6. 'h' → logprob: -14.500065803527832
    7. ' ' → logprob: -15.000065803527832
    8. ' A' → logprob: -15.375065803527832
    9. 'utom' → logprob: -15.375065803527832
    10. '  ' → logprob: -15.750065803527832

Token 24: '-C' (ID: 10050)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.009277860634028912
    2. 'C' → logprob: -5.884277820587158
    3. '   ' → logprob: -6.134277820587158
    4. ' Cor' → logprob: -6.884277820587158
    5. '    ' → logprob: -7.259277820587158
    6. 'Autom' → logprob: -8.009278297424316
    7. '  ' → logprob: -8.009278297424316
    8. '```' → logprob: -8.259278297424316
    9. 'Corr' → logprob: -8.384278297424316
    10. 'Corp' → logprob: -8.384278297424316

Token 25: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.006359474267810583
    2. 'o' → logprob: -6.131359577178955
    3. 'or' → logprob: -6.631359577178955
    4. 'aras' → logprob: -6.881359577178955
    5. 'ar' → logprob: -8.506359100341797
    6. 'orl' → logprob: -8.506359100341797
    7. 'oros' → logprob: -8.881359100341797
    8. '```' → logprob: -8.881359100341797
    9. 'orr' → logprob: -9.006359100341797
    10. ' or' → logprob: -9.006359100341797

Token 26: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.042916636914014816
    2. 'ich' → logprob: -3.2929165363311768
    3. 'h' → logprob: -5.417916774749756
    4. 'ik' → logprob: -9.292916297912598
    5. 'ic' → logprob: -9.417916297912598
    6. 'ch' → logprob: -9.792916297912598
    7. 'kov' → logprob: -10.167916297912598
    8. ' ' → logprob: -10.667916297912598
    9. '```' → logprob: -10.667916297912598
    10. '   ' → logprob: -10.917916297912598

Token 27: ' autom' (ID: 5099)
  Prédit: ' algorithm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' algorithm' → logprob: -0.4428267180919647
    2. ' Autom' → logprob: -2.067826747894287
    3. 'Autom' → logprob: -2.442826747894287
    4. ' autom' → logprob: -2.692826747894287
    5. ' trie' → logprob: -3.817826747894287
    6. '   ' → logprob: -4.067826747894287
    7. ' Trie' → logprob: -4.692826747894287
    8. 'Trie' → logprob: -5.192826747894287
    9. ' ' → logprob: -5.692826747894287
    10. '"""' → logprob: -5.817826747894287

Token 28: 'aton' (ID: 24850)
  Prédit: 'aton'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aton' → logprob: -0.003637011395767331
    2. 'ata' → logprob: -5.628636837005615
    3. 'a' → logprob: -10.378637313842773
    4. '```' → logprob: -13.128637313842773
    5. 'at' → logprob: -13.253637313842773
    6. 'achine' → logprob: -13.753637313842773
    7. 'ath' → logprob: -15.878637313842773
    8. 'ation' → logprob: -16.003637313842773
    9. '-' → logprob: -16.003637313842773
    10. 'atan' → logprob: -16.378637313842773

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2924340069293976
    2. '
' → logprob: -1.6674339771270752
    3. '   ' → logprob: -3.167433977127075
    4. '```' → logprob: -5.167434215545654
    5. ' algorithm' → logprob: -5.292434215545654
    6. '"""' → logprob: -5.667434215545654
    7. '\n' → logprob: -6.542434215545654
    8. '<|end|>' → logprob: -6.667434215545654
    9. '"""
' → logprob: -7.167434215545654
    10. '    
' → logprob: -7.292434215545654

Token 30: ' multiple' (ID: 7598)
  Prédit: ' multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multi' → logprob: -0.24950240552425385
    2. ' multiple' → logprob: -1.749502420425415
    3. ' pattern' → logprob: -3.749502420425415
    4. ' string' → logprob: -3.999502420425415
    5. ' keyword' → logprob: -6.249502182006836
    6. ' exact' → logprob: -6.999502182006836
    7. 'multi' → logprob: -7.499502182006836
    8. ' substring' → logprob: -7.874502182006836
    9. ' fast' → logprob: -8.249502182006836
    10. 'multiple' → logprob: -8.624502182006836

Token 31: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.10833467543125153
    2. 'pattern' → logprob: -2.35833477973938
    3. ' string' → logprob: -5.358334541320801
    4. '-pattern' → logprob: -5.858334541320801
    5. ' keyword' → logprob: -8.6083345413208
    6. 'string' → logprob: -8.6083345413208
    7. ' patterns' → logprob: -9.1083345413208
    8. 'patterns' → logprob: -10.6083345413208
    9. ' word' → logprob: -11.8583345413208
    10. 'keyword' → logprob: -12.1083345413208

Token 32: ' matching' (ID: 20238)
  Prédit: ' matching'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matching' → logprob: -0.0157233364880085
    2. ' search' → logprob: -4.89072322845459
    3. 'matching' → logprob: -5.64072322845459
    4. ' string' → logprob: -6.01572322845459
    5. 's' → logprob: -7.01572322845459
    6. ' searching' → logprob: -7.64072322845459
    7. 'search' → logprob: -7.89072322845459
    8. '   ' → logprob: -8.76572322845459
    9. '_matching' → logprob: -9.89072322845459
    10. 'string' → logprob: -10.39072322845459

Token 33: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11958560347557068
    2. '   ' → logprob: -3.1195855140686035
    3. '.' → logprob: -3.6195855140686035
    4. '```' → logprob: -3.8695855140686035
    5. ':
' → logprob: -5.2445855140686035
    6. ':' → logprob: -5.4945855140686035
    7. '\n' → logprob: -6.2445855140686035
    8. '.
' → logprob: -6.3695855140686035
    9. '    
' → logprob: -6.8695855140686035
    10. '"""
' → logprob: -6.8695855140686035

Token 34: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.41182324290275574
    2. '   ' → logprob: -1.2868232727050781
    3. '```' → logprob: -3.036823272705078
    4. '\n' → logprob: -5.411823272705078
    5. '
' → logprob: -5.661823272705078
    6. '"""
' → logprob: -6.161823272705078
    7. '    
' → logprob: -6.661823272705078
    8. '"""

' → logprob: -7.411823272705078
    9. '`' → logprob: -8.161823272705078
    10. '""' → logprob: -8.536823272705078

Token 35: ' This' (ID: 1328)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5628082752227783
    2. '   ' → logprob: -0.9378082752227783
    3. '```' → logprob: -3.4378082752227783
    4. '"""
' → logprob: -5.937808036804199
    5. '\n' → logprob: -6.312808036804199
    6. '    
' → logprob: -6.937808036804199
    7. '    ' → logprob: -8.0628080368042
    8. '
' → logprob: -8.6878080368042
    9. '"""

' → logprob: -8.8128080368042
    10. '  ' → logprob: -8.9378080368042

Token 36: ' allows' (ID: 7927)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.08501314371824265
    2. ' code' → logprob: -3.5850131511688232
    3. ' autom' → logprob: -4.085012912750244
    4. ' algorithm' → logprob: -4.085012912750244
    5. ' is' → logprob: -4.335012912750244
    6. ' implementation' → logprob: -5.710012912750244
    7. 'class' → logprob: -6.585012912750244
    8. ' can' → logprob: -7.460012912750244
    9. ' method' → logprob: -8.085013389587402
    10. '\n' → logprob: -8.085013389587402

Token 37: ' searching' (ID: 17437)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1806070804595947
    2. ' us' → logprob: -1.1806070804595947
    3. ' the' → logprob: -2.1806070804595947
    4. ' for' → logprob: -2.3056070804595947
    5. ' adding' → logprob: -2.4306070804595947
    6. ' fast' → logprob: -3.4306070804595947
    7. ' efficient' → logprob: -3.8056070804595947
    8. ' searching' → logprob: -4.680606842041016
    9. ' simultaneous' → logprob: -4.930606842041016
    10. ' multiple' → logprob: -5.305606842041016

Token 38: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2069956362247467
    2. ' multiple' → logprob: -1.9569956064224243
    3. ' ' → logprob: -4.081995487213135
    4. ' in' → logprob: -4.456995487213135
    5. ' of' → logprob: -5.206995487213135
    6. ' the' → logprob: -5.206995487213135
    7. ' over' → logprob: -6.831995487213135
    8. ' a' → logprob: -6.831995487213135
    9. ' through' → logprob: -7.081995487213135
    10. ' across' → logprob: -7.206995487213135

Token 39: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.0635768249630928
    2. ' all' → logprob: -3.5635769367218018
    3. ' patterns' → logprob: -4.188576698303223
    4. ' a' → logprob: -5.313576698303223
    5. 'multiple' → logprob: -5.688576698303223
    6. ' keywords' → logprob: -6.188576698303223
    7. ' many' → logprob: -6.313576698303223
    8. ' the' → logprob: -6.563576698303223
    9. ' substr' → logprob: -6.813576698303223
    10. 'all' → logprob: -6.813576698303223

Token 40: ' patterns' (ID: 18587)
  Prédit: ' patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -0.019577940925955772
    2. 'patterns' → logprob: -4.894577980041504
    3. ' keywords' → logprob: -5.019577980041504
    4. ' strings' → logprob: -5.394577980041504
    5. ' pattern' → logprob: -8.519577980041504
    6. ' string' → logprob: -8.644577980041504
    7. ' words' → logprob: -8.769577980041504
    8. 'pattern' → logprob: -9.894577980041504
    9. ' substr' → logprob: -10.019577980041504
    10. ' keyword' → logprob: -10.019577980041504

Token 41: ' simultaneously' (ID: 38328)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06686599552631378
    2. ' simultaneously' → logprob: -3.066865921020508
    3. ' at' → logprob: -4.816865921020508
    4. ' across' → logprob: -5.316865921020508
    5. ' within' → logprob: -6.066865921020508
    6. 'in' → logprob: -6.691865921020508
    7. ' ' → logprob: -7.691865921020508
    8. ' over' → logprob: -8.191865921020508
    9. ' efficiently' → logprob: -8.191865921020508
    10. ' concurrently' → logprob: -9.566865921020508

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.658234715461731
    2. '.' → logprob: -0.783234715461731
    3. ',' → logprob: -4.408234596252441
    4. '   ' → logprob: -5.658234596252441
    5. ' without' → logprob: -6.408234596252441
    6. '"""' → logprob: -6.408234596252441
    7. ' and' → logprob: -6.533234596252441
    8. ' by' → logprob: -6.908234596252441
    9. '."""' → logprob: -7.533234596252441
    10. ' within' → logprob: -7.658234596252441

Token 43: ' O' (ID: 532)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10844464600086212
    2. ' text' → logprob: -2.4834446907043457
    3. ' strings' → logprob: -4.983444690704346
    4. 'a' → logprob: -5.733444690704346
    5. ' large' → logprob: -5.733444690704346
    6. ' input' → logprob: -6.233444690704346
    7. ' the' → logprob: -6.608444690704346
    8. 'text' → logprob: -6.983444690704346
    9. ' linear' → logprob: -7.733444690704346
    10. ' texts' → logprob: -7.733444690704346

Token 44: '(text' (ID: 13414)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.8040378093719482
    2. '(' → logprob: -1.3040378093719482
    3. '(n' → logprob: -1.3040378093719482
    4. '(N' → logprob: -4.929038047790527
    5. '(m' → logprob: -6.804038047790527
    6. '(|' → logprob: -7.804038047790527
    7. '(M' → logprob: -8.429038047790527
    8. '(length' → logprob: -9.054038047790527
    9. '(l' → logprob: -9.179038047790527
    10. 'len' → logprob: -9.429038047790527

Token 45: '_length' (ID: 11514)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.19278624653816223
    2. ')' → logprob: -1.8177862167358398
    3. '_length' → logprob: -5.06778621673584
    4. ' length' → logprob: -6.06778621673584
    5. ' ' → logprob: -6.19278621673584
    6. '_len' → logprob: -6.44278621673584
    7. '-length' → logprob: -9.06778621673584
    8. 'length' → logprob: -9.56778621673584
    9. '_size' → logprob: -9.81778621673584
    10. ' )
' → logprob: -9.81778621673584

Token 46: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7602945566177368
    2. ')' → logprob: -1.0102945566177368
    3. '+' → logprob: -2.0102944374084473
    4. ' )' → logprob: -3.3852944374084473
    5. ' plus' → logprob: -8.885294914245605
    6. '*' → logprob: -8.885294914245605
    7. ' ' → logprob: -9.385294914245605
    8. ' *' → logprob: -9.510294914245605
    9. '+n' → logprob: -9.760294914245605
    10. '+)' → logprob: -11.260294914245605

Token 47: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.20711717009544373
    2. 'total' → logprob: -2.3321170806884766
    3. ' patterns' → logprob: -3.2071170806884766
    4. 'patterns' → logprob: -3.9571170806884766
    5. ' sum' → logprob: -4.082117080688477
    6. 'sum' → logprob: -4.582117080688477
    7. 'pattern' → logprob: -5.957117080688477
    8. ' pattern' → logprob: -7.332117080688477
    9. ' combined' → logprob: -11.332117080688477
    10. ' number' → logprob: -11.832117080688477

Token 48: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.09630182385444641
    2. '_patterns' → logprob: -2.846301794052124
    3. 'pattern' → logprob: -3.721301794052124
    4. ' pattern' → logprob: -4.846302032470703
    5. 'patterns' → logprob: -7.096302032470703
    6. '_length' → logprob: -8.221302032470703
    7. ' patterns' → logprob: -8.221302032470703
    8. '_' → logprob: -8.221302032470703
    9. '_pat' → logprob: -10.846302032470703
    10. ' _' → logprob: -11.596302032470703

Token 49: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.01626567728817463
    2. '_lengths' → logprob: -4.266265869140625
    3. 's' → logprob: -7.391265869140625
    4. '_len' → logprob: -7.516265869140625
    5. '_' → logprob: -7.891265869140625
    6. ' length' → logprob: -8.266265869140625
    7. 'length' → logprob: -9.641265869140625
    8. ')' → logprob: -9.766265869140625
    9. ' _' → logprob: -9.766265869140625
    10. ' ' → logprob: -10.016265869140625

Token 50: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008812114829197526
    2. ').' → logprob: -7.750881195068359
    3. ' )' → logprob: -8.12588119506836
    4. '+' → logprob: -9.37588119506836
    5. ')
' → logprob: -10.50088119506836
    6. ')`' → logprob: -11.62588119506836
    7. '```' → logprob: -11.87588119506836
    8. '.' → logprob: -12.12588119506836
    9. ' +' → logprob: -12.62588119506836
    10. '),' → logprob: -12.75088119506836

Token 51: ' number' (ID: 2086)
  Prédit: ' matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matches' → logprob: -0.41227373480796814
    2. ' number' → logprob: -1.9122737646102905
    3. ' patterns' → logprob: -2.537273645401001
    4. 'matches' → logprob: -2.787273645401001
    5. 'patterns' → logprob: -4.03727388381958
    6. ' occurrences' → logprob: -4.41227388381958
    7. 'number' → logprob: -4.78727388381958
    8. 'pattern' → logprob: -6.16227388381958
    9. ' pattern' → logprob: -6.28727388381958
    10. ' match' → logprob: -6.28727388381958

Token 52: '_of' (ID: 8023)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.42816489934921265
    2. ')' → logprob: -1.4281649589538574
    3. ' of' → logprob: -2.3031649589538574
    4. '_of' → logprob: -4.928164958953857
    5. 's' → logprob: -8.5531644821167
    6. 'Of' → logprob: -8.6781644821167
    7. '[' → logprob: -8.8031644821167
    8. '
' → logprob: -9.1781644821167
    9. 'ofs' → logprob: -9.1781644821167
    10. '```' → logprob: -9.3031644821167

Token 53: '_matches' (ID: 97462)
  Prédit: ' matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matches' → logprob: -0.45404353737831116
    2. 'matches' → logprob: -1.8290435075759888
    3. '_matches' → logprob: -2.2040436267852783
    4. ' patterns' → logprob: -2.8290436267852783
    5. 'patterns' → logprob: -3.9540436267852783
    6. '_patterns' → logprob: -4.704043388366699
    7. ' occurrences' → logprob: -6.079043388366699
    8. ' match' → logprob: -7.579043388366699
    9. 'outputs' → logprob: -7.704043388366699
    10. '_occ' → logprob: -7.704043388366699

Token 54: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007535886950790882
    2. ')
' → logprob: -5.257535934448242
    3. ').' → logprob: -6.132535934448242
    4. '"""' → logprob: -9.757535934448242
    5. '```' → logprob: -11.382535934448242
    6. ')
' → logprob: -11.507535934448242
    7. '.' → logprob: -12.132535934448242
    8. ').
' → logprob: -12.257535934448242
    9. '"""
' → logprob: -12.257535934448242
    10. ' )' → logprob: -12.257535934448242

Token 55: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.4765130281448364
    2. '   ' → logprob: -0.9765130281448364
    3. ' """' → logprob: -6.601512908935547
    4. '"""
' → logprob: -7.976512908935547
    5. '```' → logprob: -8.601512908935547
    6. '    ' → logprob: -8.851512908935547
    7. '""' → logprob: -8.976512908935547
    8. '"' → logprob: -9.101512908935547
    9. '\n' → logprob: -9.476512908935547
    10. '  ' → logprob: -10.726512908935547

Token 56: ' """

' (ID: 28800)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.4771542251110077
    2. '   ' → logprob: -0.9771542549133301
    3. '"""
' → logprob: -7.10215425491333
    4. '```' → logprob: -7.60215425491333
    5. ' """' → logprob: -7.72715425491333
    6. '    ' → logprob: -8.102153778076172
    7. '""' → logprob: -8.352153778076172
    8. '"' → logprob: -8.602153778076172
    9. '
' → logprob: -8.727153778076172
    10. '\n' → logprob: -8.727153778076172

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2536051571369171
    2. 'def' → logprob: -1.7536051273345947
    3. ' def' → logprob: -3.8786051273345947
    4. 'class' → logprob: -4.253605365753174
    5. '    
' → logprob: -4.753605365753174
    6. '
' → logprob: -5.128605365753174
    7. ' 
' → logprob: -7.878605365753174
    8. '    ' → logprob: -8.003604888916016
    9. ' ' → logprob: -8.878604888916016
    10. '   
' → logprob: -9.253604888916016

Token 58: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014263882301747799
    2. ' def' → logprob: -4.264264106750488
    3. 'class' → logprob: -9.639264106750488
    4. '   ' → logprob: -10.514264106750488
    5. '__' → logprob: -12.514264106750488
    6. 'IND' → logprob: -12.514264106750488
    7. 'indent' → logprob: -15.889264106750488
    8. '	def' → logprob: -16.014263153076172
    9. 'de' → logprob: -16.014263153076172
    10. 'ind' → logprob: -16.139263153076172

Token 59: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004596268758177757
    2. ' init' → logprob: -5.87959623336792
    3. ' def' → logprob: -7.25459623336792
    4. '_init' → logprob: -7.62959623336792
    5. '__' → logprob: -7.75459623336792
    6. 'init' → logprob: -9.504596710205078
    7. ' ' → logprob: -10.629596710205078
    8. ' _' → logprob: -10.754596710205078
    9. 'def' → logprob: -10.879596710205078
    10. ' ' → logprob: -11.004596710205078

Token 60: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. 'ini' → logprob: -16.5
    3. '_init' → logprob: -16.625
    4. ' init' → logprob: -18.25
    5. 'inite' → logprob: -19.375
    6. 'in' → logprob: -20.0
    7. 'innit' → logprob: -20.25
    8. 'int' → logprob: -20.875
    9. '_' → logprob: -20.875
    10. '```' → logprob: -21.5

Token 61: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5240182876586914
    2. '__(' → logprob: -1.7740182876586914
    3. '(self' → logprob: -2.2740182876586914
    4. ' (' → logprob: -2.3990182876586914
    5. '_(' → logprob: -4.274018287658691
    6. '<|end|>' → logprob: -4.524018287658691
    7. '_' → logprob: -5.024018287658691
    8. '```' → logprob: -5.274018287658691
    9. '__(
' → logprob: -6.774018287658691
    10. '__' → logprob: -6.774018287658691

Token 62: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018162114545702934
    2. ' self' → logprob: -4.018162250518799
    3. ')' → logprob: -11.51816177368164
    4. ' ' → logprob: -13.89316177368164
    5. '(self' → logprob: -14.26816177368164
    6. ' )' → logprob: -15.14316177368164
    7. ',self' → logprob: -16.51816177368164
    8. '_self' → logprob: -16.51816177368164
    9. '	self' → logprob: -16.76816177368164
    10. 'space' → logprob: -16.89316177368164

Token 63: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00808151625096798
    2. 'self' → logprob: -5.633081436157227
    3. '(self' → logprob: -6.258081436157227
    4. ' ,' → logprob: -6.883081436157227
    5. '(' → logprob: -7.133081436157227
    6. ',self' → logprob: -8.008081436157227
    7. ')' → logprob: -8.383081436157227
    8. ')(' → logprob: -9.633081436157227
    9. '):' → logprob: -10.133081436157227
    10. ' (' → logprob: -11.133081436157227

Token 64: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13852813839912415
    2. ' self' → logprob: -2.1385281085968018
    3. '(self' → logprob: -5.138528347015381
    4. '       ' → logprob: -5.388528347015381
    5. '   ' → logprob: -7.638528347015381
    6. 'def' → logprob: -7.888528347015381
    7. ' ' → logprob: -10.013527870178223
    8. '    ' → logprob: -10.138527870178223
    9. ' def' → logprob: -10.263527870178223
    10. '0' → logprob: -10.388527870178223

Token 65: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0789838656783104
    2. ' self' → logprob: -2.578983783721924
    3. '       ' → logprob: -9.328984260559082
    4. '   ' → logprob: -12.453984260559082
    5. 'from' → logprob: -14.328984260559082
    6. 'super' → logprob: -15.203984260559082
    7. ' super' → logprob: -15.578984260559082
    8. '	self' → logprob: -15.953984260559082
    9. 'def' → logprob: -16.203983306884766
    10. 'import' → logprob: -16.578983306884766

Token 66: '.goto' (ID: 119969)
  Prédit: ' .'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' .' → logprob: -0.04692922905087471
    2. '.' → logprob: -4.046929359436035
    3. '.states' → logprob: -4.046929359436035
    4. '._' → logprob: -5.296929359436035
    5. '.transitions' → logprob: -5.921929359436035
    6. '.queue' → logprob: -6.796929359436035
    7. '.state' → logprob: -8.046929359436035
    8. ' ' → logprob: -8.046929359436035
    9. '.nodes' → logprob: -8.046929359436035
    10. '_states' → logprob: -8.671929359436035

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35479313135147095
    2. '=' → logprob: -1.2297930717468262
    3. '[' → logprob: -5.479793071746826
    4. ' ' → logprob: -6.354793071746826
    5. '_' → logprob: -8.979793548583984
    6. '   ' → logprob: -9.354793548583984
    7. '{' → logprob: -10.104793548583984
    8. '.setdefault' → logprob: -10.354793548583984
    9. '  ' → logprob: -10.479793548583984
    10. '_map' → logprob: -10.604793548583984

Token 68: ' {}' (ID: 9902)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.32540789246559143
    2. '{}' → logprob: -1.325407862663269
    3. ' defaultdict' → logprob: -4.450407981872559
    4. ' {}' → logprob: -8.075407981872559
    5. 'dict' → logprob: -9.825407981872559
    6. '{' → logprob: -11.325407981872559
    7. ' default' → logprob: -11.950407981872559
    8. ' ' → logprob: -12.325407981872559
    9. '"default' → logprob: -12.950407981872559
    10. '(default' → logprob: -13.325407981872559

Token 69: '      ' (ID: 1699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' trie' (ID: 139428)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.9718303084373474
    2. ' defaultdict' → logprob: -0.9718303084373474
    3. ' {}' → logprob: -1.5968303680419922
    4. ' dict' → logprob: -3.971830368041992
    5. 'dict' → logprob: -3.971830368041992
    6. 'default' → logprob: -5.971830368041992
    7. ' ' → logprob: -9.721830368041992
    8. '{' → logprob: -10.096830368041992
    9. 'collections' → logprob: -10.096830368041992
    10. 'tr' → logprob: -10.221830368041992

Token 72: ' transitions' (ID: 59824)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' state' (ID: 2608)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.21610960364341736
    2. ' {}' → logprob: -2.34110951423645
    3. '{}' → logprob: -2.34110951423645
    4. 'default' → logprob: -7.341109752655029
    5. ' ' → logprob: -7.591109752655029
    6. '<|end|>' → logprob: -8.966109275817871
    7. 'dict' → logprob: -9.216109275817871
    8. ' dict' → logprob: -9.216109275817871
    9. '{' → logprob: -9.341109275817871
    10. ' {' → logprob: -9.716109275817871

Token 75: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.4349976181983948
    2. ' =' → logprob: -1.80999755859375
    3. '<|end|>' → logprob: -2.43499755859375
    4. ',' → logprob: -2.80999755859375
    5. ':' → logprob: -3.80999755859375
    6. ' ' → logprob: -5.55999755859375
    7. '<|end|>' → logprob: -6.05999755859375
    8. ' to' → logprob: -6.05999755859375
    9. ' :' → logprob: -6.18499755859375
    10. ' =>' → logprob: -6.18499755859375

Token 76: ' char' (ID: 1826)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8909761309623718
    2. ' {' → logprob: -1.3909761905670166
    3. '{}' → logprob: -1.3909761905670166
    4. ' {}' → logprob: -3.7659761905670166
    5. ' dict' → logprob: -3.8909761905670166
    6. ' defaultdict' → logprob: -4.1409759521484375
    7. ' char' → logprob: -4.5159759521484375
    8. 'char' → logprob: -4.6409759521484375
    9. 'dict' → logprob: -5.3909759521484375
    10. '(char' → logprob: -5.7659759521484375

Token 77: ' ->' (ID: 2747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' next' (ID: 2613)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.10056204348802567
    2. ' state' → logprob: -2.47556209564209
    3. ' next' → logprob: -5.22556209564209
    4. '{}' → logprob: -5.97556209564209
    5. ' {}' → logprob: -6.10056209564209
    6. 'next' → logprob: -6.72556209564209
    7. ' defaultdict' → logprob: -10.22556209564209
    8. '{' → logprob: -10.72556209564209
    9. 'dict' → logprob: -10.97556209564209
    10. ' ' → logprob: -10.97556209564209

Token 79: '_state' (ID: 9479)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.1703780889511108
    2. '<|end|>' → logprob: -1.1703780889511108
    3. '_state' → logprob: -1.2953780889511108
    4. ' state' → logprob: -3.1703782081604004
    5. '<|end|>' → logprob: -3.2953782081604004
    6. '_' → logprob: -5.0453782081604
    7. '_states' → logprob: -5.1703782081604
    8. ' defaultdict' → logprob: -5.6703782081604
    9. '[state' → logprob: -6.0453782081604
    10. '.setdefault' → logprob: -6.6703782081604

Token 80: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' self' (ID: 1051)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4117152988910675
    2. 'self' (adapté à ' self') → logprob: -2.161715269088745
    3. ' self' → logprob: -2.411715269088745
    4. '{}' → logprob: -2.786715269088745
    5. ' {}' → logprob: -2.911715269088745
    6. '       ' → logprob: -5.036715507507324
    7. 'default' → logprob: -5.161715507507324
    8. ' ' → logprob: -6.786715507507324
    9. '[]' → logprob: -7.161715507507324
    10. ' []' → logprob: -7.286715507507324

Token 83: '.out' (ID: 3338)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.10791762173175812
    2. 'failure' → logprob: -2.982917547225952
    3. 'output' → logprob: -3.482917547225952
    4. ' fail' → logprob: -4.232917785644531
    5. ' failure' → logprob: -5.982917785644531
    6. ' output' → logprob: -6.482917785644531
    7. 'out' → logprob: -6.857917785644531
    8. 'outputs' → logprob: -8.107917785644531
    9. '.fail' → logprob: -8.607917785644531
    10. 'fallback' → logprob: -8.732917785644531

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11099696159362793
    2. '=' → logprob: -2.610996961593628
    3. 'put' → logprob: -3.985996961593628
    4. 'puts' → logprob: -4.360997200012207
    5. '_put' → logprob: -8.985997200012207
    6. '   ' → logprob: -9.610997200012207
    7. 'p' → logprob: -11.360997200012207
    8. 'pute' → logprob: -11.610997200012207
    9. 'Put' → logprob: -12.110997200012207
    10. ' ' → logprob: -12.610997200012207

Token 85: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.009404589422047138
    2. ' {}' → logprob: -5.25940465927124
    3. 'default' → logprob: -6.13440465927124
    4. '{}' → logprob: -6.63440465927124
    5. 'set' → logprob: -8.134404182434082
    6. ' []' → logprob: -8.884404182434082
    7. ' set' → logprob: -9.134404182434082
    8. ' ' → logprob: -9.634404182434082
    9. '[]' → logprob: -9.884404182434082
    10. ' default' → logprob: -11.009404182434082

Token 86: '(set' (ID: 25904)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.44507643580436707
    2. '(set' → logprob: -1.0700764656066895
    3. 'list' → logprob: -4.5700764656066895
    4. 'set' → logprob: -5.6950764656066895
    5. ' list' → logprob: -6.9450764656066895
    6. '(' → logprob: -8.320075988769531
    7. ' (' → logprob: -8.320075988769531
    8. '[list' → logprob: -8.320075988769531
    9. ' set' → logprob: -8.570075988769531
    10. ':list' → logprob: -8.945075988769531

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020022729877382517
    2. ' )' → logprob: -6.252002239227295
    3. '())' → logprob: -10.127002716064453
    4. '   ' → logprob: -11.252002716064453
    5. '       ' → logprob: -12.127002716064453
    6. ',' → logprob: -12.502002716064453
    7. ' ' → logprob: -13.252002716064453
    8. ')
' → logprob: -13.377002716064453
    9. '))' → logprob: -13.627002716064453
    10. ')}' → logprob: -13.752002716064453

Token 88: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33452263474464417
    2. '<|end|>' → logprob: -1.3345226049423218
    3. '()' → logprob: -4.334522724151611
    4. '<|end|>' → logprob: -5.834522724151611
    5. ',' → logprob: -7.209522724151611
    6. ' ' → logprob: -7.209522724151611
    7. '(' → logprob: -7.334522724151611
    8. '
' → logprob: -7.334522724151611
    9. '   ' → logprob: -7.334522724151611
    10. '(self' → logprob: -7.709522724151611

Token 89: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12435492873191833
    2. '       ' → logprob: -2.374354839324951
    3. '(' → logprob: -4.124354839324951
    4. '   ' → logprob: -5.749354839324951
    5. ')' → logprob: -6.749354839324951
    6. ',' → logprob: -6.874354839324951
    7. '()
' → logprob: -7.249354839324951
    8. ' ' → logprob: -7.624354839324951
    9. '        ' → logprob: -8.87435531616211
    10. '=' → logprob: -8.99935531616211

Token 90: ' output' (ID: 4733)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.47601941227912903
    2. ')' → logprob: -2.2260193824768066
    3. '   ' → logprob: -2.8510193824768066
    4. 'dict' → logprob: -2.9760193824768066
    5. 'set' → logprob: -3.3510193824768066
    6. ' dict' → logprob: -3.7260193824768066
    7. 'state' → logprob: -3.7260193824768066
    8. ' set' → logprob: -4.226019382476807
    9. ' ' → logprob: -4.476019382476807
    10. '[]' → logprob: -4.601019382476807

Token 91: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.0842578411102295
    2. 'self' → logprob: -1.4592578411102295
    3. ' self' → logprob: -1.8342578411102295
    4. ')' → logprob: -2.4592578411102295
    5. ' state' → logprob: -2.5842578411102295
    6. ' defaultdict' → logprob: -2.8342578411102295
    7. ' ' → logprob: -3.5842578411102295
    8. '{}' → logprob: -5.709258079528809
    9. 'lambda' → logprob: -5.834258079528809
    10. 'dict' → logprob: -5.834258079528809

Token 93: ' ->' (ID: 2747)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7876311540603638
    2. ',' → logprob: -2.037631034851074
    3. '=' → logprob: -2.787631034851074
    4. ')' → logprob: -2.912631034851074
    5. '   ' → logprob: -2.912631034851074
    6. ' ' → logprob: -3.287631034851074
    7. ' =' → logprob: -3.412631034851074
    8. ':' → logprob: -3.537631034851074
    9. '<|end|>' → logprob: -3.537631034851074
    10. ']' → logprob: -3.787631034851074

Token 94: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.7829106450080872
    2. ' patterns' → logprob: -0.7829106450080872
    3. 'patterns' → logprob: -3.2829105854034424
    4. ' matched' → logprob: -3.5329105854034424
    5. 'set' → logprob: -4.4079108238220215
    6. ' pattern' → logprob: -5.4079108238220215
    7. 'pattern' → logprob: -7.0329108238220215
    8. 'matched' → logprob: -7.1579108238220215
    9. ' tokens' → logprob: -8.782910346984863
    10. ' states' → logprob: -8.907910346984863

Token 95: '(pattern' (ID: 62660)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7764084935188293
    2. '()' → logprob: -0.7764084935188293
    3. '[' → logprob: -3.2764084339141846
    4. ' of' → logprob: -3.5264084339141846
    5. ')' → logprob: -5.651408672332764
    6. '[int' → logprob: -6.276408672332764
    7. '[]' → logprob: -6.276408672332764
    8. '<|end|>' → logprob: -7.151408672332764
    9. '[str' → logprob: -7.276408672332764
    10. 'of' → logprob: -7.401408672332764

Token 96: '_ids' (ID: 17465)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00041970983147621155
    2. ')' → logprob: -8.375419616699219
    3. ')s' → logprob: -8.625419616699219
    4. '_ids' → logprob: -12.125419616699219
    5. ' s' → logprob: -13.375419616699219
    6. ' ' → logprob: -14.125419616699219
    7. ' )' → logprob: -14.875419616699219
    8. '}s' → logprob: -15.000419616699219
    9. '_s' → logprob: -15.500419616699219
    10. ' ids' → logprob: -15.625419616699219

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007443527574650943
    2. '}' → logprob: -7.375744342803955
    3. ' )' → logprob: -9.875744819641113
    4. '})' → logprob: -10.125744819641113
    5. ')}' → logprob: -11.000744819641113
    6. '   ' → logprob: -12.750744819641113
    7. ' ' → logprob: -12.875744819641113
    8. ' }' → logprob: -13.500744819641113
    9. '`)' → logprob: -14.625744819641113
    10. '[' → logprob: -14.625744819641113

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0050155287608504295
    2. '
' → logprob: -6.0050153732299805
    3. '   ' → logprob: -6.6300153732299805
    4. '        
' → logprob: -7.6300153732299805
    5. '    
' → logprob: -8.13001537322998
    6. 'self' → logprob: -8.88001537322998
    7. '  
' → logprob: -10.00501537322998
    8. ' 
' → logprob: -10.25501537322998
    9. '   
' → logprob: -10.50501537322998
    10. '	' → logprob: -10.75501537322998

Token 99: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.8584385514259338
    2. ' self' → logprob: -0.9834385514259338
    3. '       ' → logprob: -1.608438491821289
    4. ' ' → logprob: -6.983438491821289
    5. '   ' → logprob: -7.233438491821289
    6. '0' → logprob: -9.608438491821289
    7. '	self' → logprob: -9.733438491821289
    8. '\' → logprob: -10.233438491821289
    9. ' \' → logprob: -10.608438491821289
    10. '  ' → logprob: -11.483438491821289

Token 100: '.fail' (ID: 48738)
  Prédit: '.fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fail' → logprob: -0.45236936211586
    2. 'fail' → logprob: -1.3273693323135376
    3. '_fail' → logprob: -3.702369451522827
    4. 'failure' → logprob: -3.827369451522827
    5. ' fail' → logprob: -4.327369213104248
    6. '.failure' → logprob: -4.327369213104248
    7. '._' → logprob: -4.952369213104248
    8. '_failure' → logprob: -5.577369213104248
    9. '.states' → logprob: -6.202369213104248
    10. ' .' → logprob: -6.827369213104248

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198953464627266
    2. '=' → logprob: -2.8119895458221436
    3. ' ' → logprob: -11.311989784240723
    4. '  ' → logprob: -12.436989784240723
    5. '   ' → logprob: -12.561989784240723
    6. 's' → logprob: -13.686989784240723
    7. '_' → logprob: -15.561989784240723
    8. '    ' → logprob: -15.936989784240723
    9. '	' → logprob: -16.311988830566406
    10. '[' → logprob: -16.436988830566406

Token 102: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.025378026068210602
    2. ' {}' → logprob: -3.7753779888153076
    3. ' defaultdict' → logprob: -6.400378227233887
    4. '[]' → logprob: -8.275378227233887
    5. 'default' → logprob: -8.775378227233887
    6. '[' → logprob: -10.650378227233887
    7. '{' → logprob: -11.275378227233887
    8. ' []' → logprob: -11.275378227233887
    9. 'dict' → logprob: -11.900378227233887
    10. ' ' → logprob: -14.275378227233887

Token 103: '      ' (ID: 1699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' failure' (ID: 14090)
  Prédit: ' state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' state' → logprob: -0.31471091508865356
    2. 'state' → logprob: -1.3147108554840088
    3. ' ' → logprob: -7.689711093902588
    4. ' defaultdict' → logprob: -8.18971061706543
    5. '   ' → logprob: -9.31471061706543
    6. ' fail' → logprob: -9.56471061706543
    7. ' failure' → logprob: -9.56471061706543
    8. ' states' → logprob: -9.81471061706543
    9. 'State' → logprob: -9.93971061706543
    10. '       ' → logprob: -10.18971061706543

Token 106: ' function' (ID: 1114)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' state' (ID: 2608)
  Prédit: ' state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' state' → logprob: -0.6235746145248413
    2. 'state' → logprob: -0.8735746145248413
    3. ' {}' → logprob: -4.123574733734131
    4. '{}' → logprob: -4.373574733734131
    5. ' defaultdict' → logprob: -4.373574733734131
    6. ' ' → logprob: -5.998574733734131
    7. '[state' → logprob: -7.373574733734131
    8. '<|end|>' → logprob: -8.123574256896973
    9. '  ' → logprob: -8.623574256896973
    10. ' states' → logprob: -8.873574256896973

Token 109: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.7231165170669556
    2. ' =' → logprob: -1.0981165170669556
    3. '=' → logprob: -1.9731165170669556
    4. '->' → logprob: -3.223116397857666
    5. '<|end|>' → logprob: -7.223116397857666
    6. ' ' → logprob: -7.723116397857666
    7. '=>' → logprob: -8.098116874694824
    8. ' =>' → logprob: -8.098116874694824
    9. '<|end|>' → logprob: -8.973116874694824
    10. '→' → logprob: -9.098116874694824

Token 110: ' fallback' (ID: 66264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07064037024974823
    2. '0' → logprob: -3.4456403255462646
    3. ' state' → logprob: -4.070640563964844
    4. 'state' → logprob: -4.320640563964844
    5. ' int' → logprob: -5.570640563964844
    6. 'int' → logprob: -6.695640563964844
    7. ' next' → logprob: -7.320640563964844
    8. ' None' → logprob: -9.195640563964844
    9. 'next' → logprob: -10.695640563964844
    10. 'None' → logprob: -10.945640563964844

Token 111: ' state' (ID: 2608)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24838873744010925
    2. '
' → logprob: -2.1233887672424316
    3. '   ' → logprob: -3.7483887672424316
    4. '<|end|>' → logprob: -3.7483887672424316
    5. '    
' → logprob: -3.9983887672424316
    6. '        
' → logprob: -4.748388767242432
    7. ' 
' → logprob: -4.748388767242432
    8. '  
' → logprob: -4.873388767242432
    9. '\n' → logprob: -6.123388767242432
    10. ' ' → logprob: -6.123388767242432

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03043144755065441
    2. '
' → logprob: -4.280431270599365
    3. '   ' → logprob: -4.280431270599365
    4. '<|end|>' → logprob: -7.155431270599365
    5. ' ' → logprob: -7.905431270599365
    6. '    
' → logprob: -8.655431747436523
    7. '  
' → logprob: -8.905431747436523
    8. '	' → logprob: -8.905431747436523
    9. '        
' → logprob: -9.155431747436523
    10. 'def' → logprob: -9.155431747436523

Token 114: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7751086354255676
    2. 'self' (adapté à ' self') → logprob: -0.9001086354255676
    3. ' self' → logprob: -2.025108575820923
    4. '   ' → logprob: -7.400108814239502
    5. 'def' → logprob: -8.650108337402344
    6. '	self' → logprob: -11.025108337402344
    7. ' ' → logprob: -11.275108337402344
    8. '0' → logprob: -12.025108337402344
    9. ' def' → logprob: -12.275108337402344
    10. '	' → logprob: -12.400108337402344

Token 115: '.states' (ID: 122737)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.954208254814148
    2. 'state' → logprob: -1.454208254814148
    3. '._' → logprob: -2.8292083740234375
    4. '.num' → logprob: -2.8292083740234375
    5. 'states' → logprob: -2.9542083740234375
    6. '_states' → logprob: -3.4542083740234375
    7. 'count' → logprob: -3.5792083740234375
    8. 'new' → logprob: -3.5792083740234375
    9. '_state' → logprob: -3.5792083740234375
    10. '_num' → logprob: -3.8292083740234375

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010979432612657547
    2. '=' → logprob: -4.635979652404785
    3. ' ' → logprob: -6.760979652404785
    4. '_count' → logprob: -10.010979652404785
    5. '  ' → logprob: -11.510979652404785
    6. '_' → logprob: -12.760979652404785
    7. '_counter' → logprob: -13.635979652404785
    8. '   ' → logprob: -13.635979652404785
    9. ' _' → logprob: -14.010979652404785
    10. '_num' → logprob: -14.635979652404785

Token 117: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1392117738723755
    2. '1' → logprob: -2.389211654663086
    3. '0' → logprob: -3.264211654663086
    4. ' [' → logprob: -11.639211654663086
    5. ' {' → logprob: -12.639211654663086
    6. '[' → logprob: -12.889211654663086
    7. '{' → logprob: -12.889211654663086
    8. '   ' → logprob: -13.139211654663086
    9. '{}' → logprob: -13.139211654663086
    10. '  ' → logprob: -13.639211654663086

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3285417854785919
    2. '0' → logprob: -1.4535417556762695
    3. ' ' → logprob: -3.0785417556762695
    4. '[' → logprob: -9.20354175567627
    5. '{' → logprob: -9.20354175567627
    6. ' [' → logprob: -10.45354175567627
    7. '{}' → logprob: -11.57854175567627
    8. ' {' → logprob: -11.82854175567627
    9. 'set' → logprob: -12.45354175567627
    10. 'int' → logprob: -13.07854175567627

Token 119: '     ' (ID: 530)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' number' (ID: 2086)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6335548758506775
    2. ' ' → logprob: -0.7585548758506775
    3. '<|end|>' → logprob: -7.633554935455322
    4. '1' → logprob: -8.508554458618164
    5. '  ' → logprob: -9.758554458618164
    6. ' self' → logprob: -10.008554458618164
    7. 'self' → logprob: -10.383554458618164
    8. ' states' → logprob: -10.758554458618164
    9. '<|end|>' → logprob: -11.133554458618164
    10. ' #' → logprob: -11.383554458618164

Token 122: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.06365422159433365
    2. 'states' → logprob: -2.8136541843414307
    3. '_states' → logprob: -7.18865442276001
    4. ' ' → logprob: -7.68865442276001
    5. '<|end|>' → logprob: -8.063653945922852
    6. ' nodes' → logprob: -9.813653945922852
    7. 'state' → logprob: -10.313653945922852
    8. '<|end|>' → logprob: -11.063653945922852
    9. ' self' → logprob: -11.688653945922852
    10. ' state' → logprob: -11.938653945922852

Token 124: ';' (ID: 26)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' state' (ID: 2608)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35305240750312805
    2. '0' → logprob: -2.6030523777008057
    3. '<|end|>' → logprob: -3.1030523777008057
    4. ' the' → logprob: -3.9780523777008057
    5. ' self' → logprob: -4.103052616119385
    6. ' initialized' → logprob: -4.228052616119385
    7. '<|end|>' → logprob: -4.353052616119385
    8. ' so' → logprob: -4.728052616119385
    9. 'self' → logprob: -4.728052616119385
    10. '
' → logprob: -4.853052616119385

Token 126: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39011868834495544
    2. '_' → logprob: -2.1401185989379883
    3. '0' → logprob: -2.2651185989379883
    4. ' ' → logprob: -2.5151185989379883
    5. ' _' → logprob: -4.765118598937988
    6. '_count' → logprob: -5.390118598937988
    7. ' is' → logprob: -6.015118598937988
    8. ' =' → logprob: -6.265118598937988
    9. '_counter' → logprob: -7.015118598937988
    10. '_map' → logprob: -7.765118598937988

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7671230435371399
    2. 's' → logprob: -1.1421229839324951
    3. ' ' → logprob: -2.017122983932495
    4. ' =' → logprob: -2.642122983932495
    5. '=' → logprob: -5.142123222351074
    6. '_count' → logprob: -6.517123222351074
    7. '_counter' → logprob: -6.517123222351074
    8. ' is' → logprob: -7.267123222351074
    9. '_' → logprob: -7.642123222351074
    10. ' s' → logprob: -8.017123222351074

Token 128: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.35304465889930725
    2. '<|end|>' → logprob: -1.2280446290969849
    3. '<|end|>' → logprob: -6.228044509887695
    4. ' ' → logprob: -7.478044509887695
    5. 'is' → logprob: -7.603044509887695
    6. ' initialized' → logprob: -7.728044509887695
    7. ' represents' → logprob: -7.853044509887695
    8. ' has' → logprob: -9.103044509887695
    9. ' was' → logprob: -9.353044509887695
    10. 'initialized' → logprob: -9.478044509887695

Token 129: ' root' (ID: 6577)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.28334900736808777
    2. ' the' → logprob: -1.6583490371704102
    3. 'root' → logprob: -3.03334903717041
    4. ' root' → logprob: -4.90834903717041
    5. 'initial' → logprob: -7.65834903717041
    6. ' initial' → logprob: -8.90834903717041
    7. ' ' → logprob: -10.28334903717041
    8. 'reserved' → logprob: -10.53334903717041
    9. '0' → logprob: -10.78334903717041
    10. 'start' → logprob: -10.90834903717041

Token 130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.8086989521980286
    2. '   ' → logprob: -1.0586988925933838
    3. '    
' → logprob: -2.933698892593384
    4. '
' → logprob: -2.933698892593384
    5. ' def' → logprob: -3.308698892593384
    6. ' 
' → logprob: -3.308698892593384
    7. ' ' → logprob: -4.683699131011963
    8. '  
' → logprob: -5.308699131011963
    9. '       ' → logprob: -5.933699131011963
    10. '	def' → logprob: -6.308699131011963

Token 133: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.7016447186470032
    2. ' build' → logprob: -0.7016447186470032
    3. ' insert' → logprob: -5.3266448974609375
    4. ' ' → logprob: -6.5766448974609375
    5. 'add' → logprob: -7.2016448974609375
    6. 'build' → logprob: -7.8266448974609375
    7. ' _' → logprob: -8.701644897460938
    8. ' create' → logprob: -8.826644897460938
    9. '_build' → logprob: -8.826644897460938
    10. '_add' → logprob: -8.951644897460938

Token 134: '_word' (ID: 32074)
  Prédit: '_pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.5823904275894165
    2. '_' → logprob: -0.8323904275894165
    3. '_word' → logprob: -5.207390308380127
    4. '_token' → logprob: -8.082390785217285
    5. '_p' → logprob: -8.957390785217285
    6. '_character' → logprob: -9.207390785217285
    7. '_string' → logprob: -9.457390785217285
    8. '_pat' → logprob: -9.457390785217285
    9. '_keyword' → logprob: -10.082390785217285
    10. ' _' → logprob: -10.207390785217285

Token 135: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07697681337594986
    2. '(' → logprob: -3.076976776123047
    3. ' (' → logprob: -3.576976776123047
    4. '(s' → logprob: -10.826976776123047
    5. '(word' → logprob: -13.076976776123047
    6. ' self' → logprob: -13.201976776123047
    7. '(
' → logprob: -13.451976776123047
    8. '   ' → logprob: -13.701976776123047
    9. ' ' → logprob: -13.826976776123047
    10. 'self' → logprob: -14.201976776123047

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6072628498077393
    2. ')' → logprob: -1.7322628498077393
    3. '(self' → logprob: -1.9822628498077393
    4. '(' → logprob: -2.2322628498077393
    5. 'self' → logprob: -4.10726261138916
    6. ' ,' → logprob: -4.60726261138916
    7. ' (' → logprob: -6.60726261138916
    8. '   ' → logprob: -6.98226261138916
    9. ' ' → logprob: -7.23226261138916
    10. '       ' → logprob: -7.48226261138916

Token 137: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.07087405025959015
    2. 'word' → logprob: -2.695873975753784
    3. ' self' → logprob: -7.320874214172363
    4. 'self' → logprob: -8.320874214172363
    5. ' pattern' → logprob: -11.070874214172363
    6. '	word' → logprob: -12.070874214172363
    7. '   ' → logprob: -12.695874214172363
    8. 'pattern' → logprob: -12.695874214172363
    9. ' ' → logprob: -12.945874214172363
    10. ' palavra' → logprob: -14.570874214172363

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35071465373039246
    2. '):' → logprob: -1.2257146835327148
    3. '):
' → logprob: -6.350714683532715
    4. ')' → logprob: -9.225714683532715
    5. ':' → logprob: -9.225714683532715
    6. 'self' → logprob: -9.225714683532715
    7. ' ,' → logprob: -9.350714683532715
    8. '   ' → logprob: -9.850714683532715
    9. ' ):' → logprob: -9.850714683532715
    10. '):
' → logprob: -11.600714683532715

Token 139: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.36045533418655396
    2. ' pattern' → logprob: -1.4854552745819092
    3. 'pattern' → logprob: -3.485455274581909
    4. 'word' → logprob: -3.860455274581909
    5. ' idx' → logprob: -4.610455513000488
    6. ' index' → logprob: -5.110455513000488
    7. ' pid' → logprob: -6.360455513000488
    8. ' id' → logprob: -6.360455513000488
    9. 'index' → logprob: -6.735455513000488
    10. '   ' → logprob: -6.985455513000488

Token 140: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.6286106983898208e-05
    2. '_ids' → logprob: -11.250016212463379
    3. 'id' → logprob: -13.875016212463379
    4. '_' → logprob: -13.875016212463379
    5. '_idx' → logprob: -14.875016212463379
    6. '):' → logprob: -15.125016212463379
    7. '_i' → logprob: -15.250016212463379
    8. '_index' → logprob: -15.250016212463379
    9. ')' → logprob: -16.250017166137695
    10. 'Id' → logprob: -16.500017166137695

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01830914244055748
    2. '):
' → logprob: -4.018309116363525
    3. ')' → logprob: -9.143309593200684
    4. ' ):' → logprob: -10.018309593200684
    5. '):
' → logprob: -12.393309593200684
    6. '   ' → logprob: -13.518309593200684
    7. ':' → logprob: -14.018309593200684
    8. '):

' → logprob: -14.518309593200684
    9. ' ' → logprob: -15.143309593200684
    10. ' ):
' → logprob: -15.268309593200684

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04795341193675995
    2. ':' → logprob: -4.0479536056518555
    3. '):' → logprob: -4.1729536056518555
    4. '        
' → logprob: -5.5479536056518555
    5. '  
' → logprob: -6.0479536056518555
    6. ' ' → logprob: -6.1729536056518555
    7. '   ' → logprob: -6.6729536056518555
    8. ' 
' → logprob: -7.0479536056518555
    9. '    
' → logprob: -7.1729536056518555
    10. ',' → logprob: -7.5479536056518555

Token 143: ' """
' (ID: 7037)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.1817222684621811
    2. '       ' → logprob: -2.5567221641540527
    3. '   ' → logprob: -3.6817221641540527
    4. ' state' → logprob: -3.8067221641540527
    5. 'current' → logprob: -4.181722164154053
    6. ' node' → logprob: -4.556722164154053
    7. 'state' → logprob: -5.056722164154053
    8. '    ' → logprob: -5.306722164154053
    9. ' curr' → logprob: -6.181722164154053
    10. 'node' → logprob: -6.931722164154053

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1592472642660141
    2. ' current' → logprob: -2.7842471599578857
    3. '   ' → logprob: -3.5342471599578857
    4. '    ' → logprob: -3.6592471599578857
    5. ' ' → logprob: -4.784247398376465
    6. ' state' → logprob: -5.784247398376465
    7. 's' → logprob: -5.784247398376465
    8. 'current' → logprob: -5.784247398376465
    9. 'state' → logprob: -5.784247398376465
    10. ' node' → logprob: -6.409247398376465

Token 145: ' Add' (ID: 4063)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6435614228248596
    2. ' state' → logprob: -1.3935613632202148
    3. ' node' → logprob: -2.268561363220215
    4. 'state' → logprob: -2.893561363220215
    5. '       ' → logprob: -3.018561363220215
    6. 'current' → logprob: -4.893561363220215
    7. '   ' → logprob: -5.518561363220215
    8. ' curr' → logprob: -5.893561363220215
    9. 'node' → logprob: -6.018561363220215
    10. '    ' → logprob: -7.018561363220215

Token 146: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008706060471013188
    2. '_' → logprob: -7.875870704650879
    3. '<|end|>' → logprob: -8.375870704650879
    4. '  ' → logprob: -9.500870704650879
    5. ' a' → logprob: -9.750870704650879
    6. '    ' → logprob: -10.750870704650879
    7. ' )' → logprob: -11.125870704650879
    8. '<|end|>' → logprob: -11.250870704650879
    9. ' word' → logprob: -11.500870704650879
    10. '[word' → logprob: -11.500870704650879

Token 147: ' word' (ID: 2195)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00039135036058723927
    2. '  ' → logprob: -9.500391006469727
    3. ' word' → logprob: -9.625391006469727
    4. ' token' → logprob: -9.750391006469727
    5. ' character' → logprob: -10.125391006469727
    6. 'n' → logprob: -10.125391006469727
    7. ' char' → logprob: -10.750391006469727
    8. 'token' → logprob: -11.250391006469727
    9. ' new' → logprob: -11.500391006469727
    10. ' )' → logprob: -11.625391006469727

Token 148: ' in' (ID: 306)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6500238180160522
    2. '       ' → logprob: -2.150023937225342
    3. '   ' → logprob: -2.650023937225342
    4. '    ' → logprob: -2.775023937225342
    5. '(' → logprob: -2.900023937225342
    6. ' (' → logprob: -3.525023937225342
    7. '<|end|>' → logprob: -3.650023937225342
    8. '[' → logprob: -3.775023937225342
    9. '(self' → logprob: -4.150023937225342
    10. '_' → logprob: -4.275023937225342

Token 149: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.034014828503131866
    2. ' ' → logprob: -4.284014701843262
    3. ' a' → logprob: -4.784014701843262
    4. ' self' → logprob: -5.159014701843262
    5. 'the' → logprob: -6.034014701843262
    6. 'self' → logprob: -6.409014701843262
    7. '   ' → logprob: -7.284014701843262
    8. '       ' → logprob: -7.909014701843262
    9. '    ' → logprob: -9.284014701843262
    10. ')' → logprob: -9.409014701843262

Token 150: ' trie' (ID: 139428)
  Prédit: ' trie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trie' → logprob: -0.411409854888916
    2. ' goto' → logprob: -2.161409854888916
    3. ' ' → logprob: -2.536409854888916
    4. 'self' → logprob: -3.036409854888916
    5. 'tr' → logprob: -3.286409854888916
    6. 'goto' → logprob: -4.036409854888916
    7. ' self' → logprob: -4.411409854888916
    8. '   ' → logprob: -4.536409854888916
    9. '_tr' → logprob: -5.161409854888916
    10. '  ' → logprob: -6.661409854888916

Token 151: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06299718469381332
    2. '   ' → logprob: -2.9379971027374268
    3. '(' → logprob: -5.687997341156006
    4. '(self' → logprob: -6.562997341156006
    5. ',' → logprob: -6.937997341156006
    6. '    ' → logprob: -7.562997341156006
    7. '        
' → logprob: -8.062996864318848
    8. ':' → logprob: -8.187996864318848
    9. ')' → logprob: -8.312996864318848
    10. '[' → logprob: -9.062996864318848

Token 152: ' associated' (ID: 8668)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.1589038223028183
    2. ' the' → logprob: -2.6589038372039795
    3. 'current' → logprob: -3.2839038372039795
    4. ' a' → logprob: -3.9089038372039795
    5. ' state' → logprob: -5.1589035987854
    6. 'state' → logprob: -5.5339035987854
    7. ' self' → logprob: -5.6589035987854
    8. 'the' → logprob: -6.4089035987854
    9. 'self' → logprob: -6.7839035987854
    10. ' states' → logprob: -7.5339035987854

Token 153: ' id' (ID: 1211)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22759909927845
    2. ' a' → logprob: -1.8525991439819336
    3. ' the' → logprob: -4.102599143981934
    4. ' states' → logprob: -5.352599143981934
    5. ' word' → logprob: -5.602599143981934
    6. ' current' → logprob: -5.602599143981934
    7. ' char' → logprob: -5.602599143981934
    8. 'char' → logprob: -5.977599143981934
    9. ' an' → logprob: -6.102599143981934
    10. ' token' → logprob: -6.852599143981934

Token 154: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061899334192276
    2. '   ' → logprob: -3.311899423599243
    3. '(self' → logprob: -4.061899185180664
    4. ':' → logprob: -6.061899185180664
    5. ',' → logprob: -6.936899185180664
    6. '(' → logprob: -7.186899185180664
    7. '.' → logprob: -7.436899185180664
    8. ')' → logprob: -7.811899185180664
    9. ' (' → logprob: -8.311899185180664
    10. 'self' → logprob: -8.561899185180664

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13702455163002014
    2. ' 
' → logprob: -2.5120246410369873
    3. '        
' → logprob: -4.262024402618408
    4. ' ' → logprob: -4.762024402618408
    5. '  
' → logprob: -5.387024402618408
    6. '   ' → logprob: -5.387024402618408
    7. '    ' → logprob: -5.637024402618408
    8. '    
' → logprob: -5.887024402618408
    9. '     
' → logprob: -6.262024402618408
    10. ')' → logprob: -6.637024402618408

Token 156: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009730705991387367
    2. 'state' → logprob: -5.884730815887451
    3. ' current' → logprob: -5.884730815887451
    4. ' state' → logprob: -6.634730815887451
    5. 'current' → logprob: -7.384730815887451
    6. ' node' → logprob: -7.384730815887451
    7. ' s' → logprob: -8.009730339050293
    8. '   ' → logprob: -8.259730339050293
    9. '
' → logprob: -8.634730339050293
    10. 'node' → logprob: -9.009730339050293

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02387482114136219
    2. ' 
' → logprob: -4.398874759674072
    3. '        
' → logprob: -5.898874759674072
    4. '     
' → logprob: -6.148874759674072
    5. 'n' → logprob: -6.523874759674072
    6. '    
' → logprob: -6.898874759674072
    7. '   ' → logprob: -6.898874759674072
    8. '    ' → logprob: -7.273874759674072
    9. '   
' → logprob: -7.648874759674072
    10. '\' → logprob: -8.02387523651123

Token 158: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.12101578712463379
    2. 'current' (adapté à ' current') → logprob: -2.621015787124634
    3. 'state' → logprob: -4.121015548706055
    4. ' state' → logprob: -4.121015548706055
    5. '   ' → logprob: -4.996015548706055
    6. '       ' → logprob: -6.996015548706055
    7. ' node' → logprob: -7.246015548706055
    8. 'node' → logprob: -8.621015548706055
    9. 'cur' → logprob: -9.246015548706055
    10. ' cur' → logprob: -10.121015548706055

Token 159: ' =' (ID: 314)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.10767970234155655
    2. '_' → logprob: -2.357679605484009
    3. ' =' → logprob: -4.982679843902588
    4. '_node' → logprob: -8.35767936706543
    5. ' _' → logprob: -8.73267936706543
    6. '=' → logprob: -8.85767936706543
    7. '_states' → logprob: -10.60767936706543
    8. 'state' → logprob: -11.60767936706543
    9. '_char' → logprob: -12.48267936706543
    10. '=_' → logprob: -12.85767936706543

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048587486147880554
    2. ' ' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.673587799072266
    4. '۰' → logprob: -18.673587799072266
    5. '<|end|>' → logprob: -19.111087799072266
    6. '  ' → logprob: -19.111087799072266
    7. 's' → logprob: -20.486087799072266
    8. ' ' → logprob: -20.548587799072266
    9. '  
' → logprob: -20.611087799072266
    10. 'self' → logprob: -20.611087799072266

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. 'self' → logprob: -15.12508487701416
    4. ' self' → logprob: -19.125085830688477
    5. '   ' → logprob: -19.625085830688477
    6. '۰' → logprob: -20.500085830688477
    7. 'state' → logprob: -20.875085830688477
    8. '  ' → logprob: -22.062585830688477
    9. 'current' → logprob: -22.375085830688477
    10. '`' → logprob: -22.562585830688477

Token 162: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7213915586471558
    2. ' for' → logprob: -0.8463915586471558
    3. '<|end|>' → logprob: -3.4713916778564453
    4. ' ' → logprob: -3.9713916778564453
    5. ' 
' → logprob: -4.096391677856445
    6. '    
' → logprob: -5.471391677856445
    7. '       ' → logprob: -5.596391677856445
    8. '
' → logprob: -5.846391677856445
    9. '    ' → logprob: -6.346391677856445
    10. '  
' → logprob: -6.721391677856445

Token 163: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5975822806358337
    2. ' for' → logprob: -0.9725822806358337
    3. ' ' → logprob: -2.9725823402404785
    4. '       ' → logprob: -4.7225823402404785
    5. ' 
' → logprob: -5.0975823402404785
    6. '    ' → logprob: -7.0975823402404785
    7. '
' → logprob: -7.0975823402404785
    8. '<|end|>' → logprob: -7.4725823402404785
    9. '        
' → logprob: -7.5975823402404785
    10. '        ' → logprob: -7.7225823402404785

Token 164: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.251937597990036
    2. ' for' → logprob: -1.5019376277923584
    3. '   ' → logprob: -12.751937866210938
    4. '	for' → logprob: -13.001937866210938
    5. ' ' → logprob: -13.626937866210938
    6. ' 
' → logprob: -14.126937866210938
    7. '
' → logprob: -14.626937866210938
    8. '       ' → logprob: -14.751937866210938
    9. 'For' → logprob: -15.876937866210938
    10. '    ' → logprob: -16.251937866210938

Token 165: ' ch' (ID: 549)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.188734769821167
    2. ' c' → logprob: -1.188734769821167
    3. 'char' → logprob: -1.688734769821167
    4. ' char' → logprob: -1.938734769821167
    5. 'ch' → logprob: -2.938734769821167
    6. ' ch' → logprob: -4.688735008239746
    7. ' ' → logprob: -11.688735008239746
    8. ' character' → logprob: -12.688735008239746
    9. '_char' → logprob: -13.438735008239746
    10. 'character' → logprob: -13.813735008239746

Token 166: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0073680877685546875
    2. 'in' → logprob: -5.257368087768555
    3. ' ' → logprob: -6.257368087768555
    4. ' ,' → logprob: -10.007368087768555
    5. ',' → logprob: -10.257368087768555
    6. '  ' → logprob: -10.507368087768555
    7. ' :' → logprob: -10.507368087768555
    8. '   ' → logprob: -10.757368087768555
    9. '    ' → logprob: -11.132368087768555
    10. ':' → logprob: -11.382368087768555

Token 167: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.31326326727867126
    2. ' word' → logprob: -1.3132632970809937
    3. ' ' → logprob: -14.438262939453125
    4. '	word' → logprob: -14.938262939453125
    5. '(word' → logprob: -15.063262939453125
    6. '[word' → logprob: -15.438262939453125
    7. '   ' → logprob: -15.938262939453125
    8. '_word' → logprob: -17.313262939453125
    9. '.word' → logprob: -17.563262939453125
    10. '       ' → logprob: -18.313262939453125

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05802125856280327
    2. ':
' → logprob: -3.808021306991577
    3. ' :' → logprob: -4.058021068572998
    4. '       ' → logprob: -4.808021068572998
    5. ' :
' → logprob: -6.183021068572998
    6. '           ' → logprob: -6.433021068572998
    7. ' =' → logprob: -6.433021068572998
    8. '        ' → logprob: -6.808021068572998
    9. ',' → logprob: -7.058021068572998
    10. '=' → logprob: -7.558021068572998

Token 169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10448526591062546
    2. '       ' → logprob: -2.604485273361206
    3. '        ' → logprob: -4.104485034942627
    4. ' if' → logprob: -5.479485034942627
    5. ' ' → logprob: -6.854485034942627
    6. '            ' → logprob: -7.479485034942627
    7. '    ' → logprob: -7.729485034942627
    8. '=' → logprob: -7.854485034942627
    9. '   ' → logprob: -8.104485511779785
    10. '            
' → logprob: -8.604485511779785

Token 170: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.658786416053772
    2. ' if' → logprob: -0.783786416053772
    3. 'if' (adapté à ' if') → logprob: -4.158786296844482
    4. '        ' → logprob: -5.658786296844482
    5. ' current' → logprob: -6.158786296844482
    6. '       ' → logprob: -6.533786296844482
    7. '           ' → logprob: -6.908786296844482
    8. '            ' → logprob: -7.158786296844482
    9. ' )' → logprob: -8.15878677368164
    10. '    ' → logprob: -8.90878677368164

Token 171: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.786899209022522
    2. '(current' → logprob: -1.161899209022522
    3. '(' → logprob: -1.661899209022522
    4. ' current' → logprob: -3.2868990898132324
    5. 'current' → logprob: -5.536899089813232
    6. '(ch' → logprob: -8.03689956665039
    7. ' not' → logprob: -8.28689956665039
    8. ' ' → logprob: -9.78689956665039
    9. ' ch' → logprob: -9.91189956665039
    10. '(not' → logprob: -10.66189956665039

Token 172: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.08093063533306122
    2. ' current' → logprob: -2.830930709838867
    3. '0' → logprob: -4.205930709838867
    4. '(current' → logprob: -5.830930709838867
    5. ' (' → logprob: -7.830930709838867
    6. ' ' → logprob: -7.955930709838867
    7. '(' → logprob: -8.955930709838867
    8. ')' → logprob: -10.205930709838867
    9. ',current' → logprob: -11.580930709838867
    10. '   ' → logprob: -12.205930709838867

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031193646136671305
    2. ' ,' → logprob: -6.003119468688965
    3. ',)' → logprob: -8.253119468688965
    4. ',ch' → logprob: -8.503119468688965
    5. ' not' → logprob: -9.003119468688965
    6. ')' → logprob: -10.253119468688965
    7. 'not' → logprob: -11.253119468688965
    8. ',
' → logprob: -13.128119468688965
    9. ' )' → logprob: -13.503119468688965
    10. ',None' → logprob: -14.378119468688965

Token 174: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.16025906801223755
    2. ' ch' → logprob: -1.9102590084075928
    3. ''ch' → logprob: -10.910259246826172
    4. ')' → logprob: -11.785259246826172
    5. ''' → logprob: -12.535259246826172
    6. ' ' → logprob: -12.910259246826172
    7. '	ch' → logprob: -14.160259246826172
    8. ' '' → logprob: -14.285259246826172
    9. '(ch' → logprob: -15.410259246826172
    10. '[ch' → logprob: -15.410259246826172

Token 175: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007113590254448354
    2. ' )' → logprob: -7.250711441040039
    3. ' not' → logprob: -13.625711441040039
    4. 'not' → logprob: -16.12571144104004
    5. ']' → logprob: -18.25071144104004
    6. '   ' → logprob: -18.50071144104004
    7. ')
' → logprob: -19.62571144104004
    8. '）' → logprob: -19.62571144104004
    9. '    ' → logprob: -19.87571144104004
    10. '))' → logprob: -20.62571144104004

Token 176: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02644299529492855
    2. 'not' → logprob: -3.6514430046081543
    3. ')' → logprob: -9.276442527770996
    4. ']' → logprob: -10.026442527770996
    5. '	not' → logprob: -13.276442527770996
    6. ' )' → logprob: -13.776442527770996
    7. ' ' → logprob: -13.901442527770996
    8. ' ]' → logprob: -15.151442527770996
    9. ' no' → logprob: -15.276442527770996
    10. '[' → logprob: -15.526442527770996

Token 177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3234230875968933
    2. 'in' → logprob: -1.323423147201538
    3. '<|end|>' → logprob: -4.698422908782959
    4. ')' → logprob: -7.698422908782959
    5. '<|end|>' → logprob: -8.573423385620117
    6. ' ' → logprob: -9.448423385620117
    7. ']' → logprob: -9.573423385620117
    8. '[' → logprob: -10.198423385620117
    9. 'to' → logprob: -10.448423385620117
    10. '=' → logprob: -10.823423385620117

Token 178: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021869030315428972
    2. ' self' → logprob: -6.1271867752075195
    3. ')' → logprob: -13.75218677520752
    4. '(self' → logprob: -14.75218677520752
    5. ' ' → logprob: -16.127187728881836
    6. '	self' → logprob: -17.002187728881836
    7. '[self' → logprob: -17.002187728881836
    8. 'this' → logprob: -17.377187728881836
    9. '=self' → logprob: -17.377187728881836
    10. '
' → logprob: -17.877187728881836

Token 179: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -1.0325924449716695e-05
    2. '.' → logprob: -12.00001049041748
    3. 'goto' → logprob: -13.37501049041748
    4. '.gov' → logprob: -13.87501049041748
    5. ' .' → logprob: -14.37501049041748
    6. '.go' → logprob: -14.75001049041748
    7. '	goto' → logprob: -15.00001049041748
    8. '.gwt' → logprob: -16.750009536743164
    9. '.gateway' → logprob: -17.375009536743164
    10. '.gt' → logprob: -17.375009536743164

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009038381977006793
    2. ':
' → logprob: -7.750903606414795
    3. '):' → logprob: -8.000904083251953
    4. ']:' → logprob: -9.250904083251953
    5. ' :' → logprob: -10.625904083251953
    6. ']' → logprob: -12.750904083251953
    7. '[' → logprob: -13.000904083251953
    8. ' or' → logprob: -13.250904083251953
    9. '):
' → logprob: -13.375904083251953
    10. ' and' → logprob: -13.375904083251953

Token 181: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2258135974407196
    2. ' ' → logprob: -1.725813627243042
    3. '            ' → logprob: -4.850813388824463
    4. '                ' → logprob: -5.600813388824463
    5. '                
' → logprob: -6.100813388824463
    6. ')' → logprob: -6.225813388824463
    7. ' 
' → logprob: -6.475813388824463
    8. '           ' → logprob: -6.600813388824463
    9. ' :' → logprob: -6.725813388824463
    10. ' )' → logprob: -7.350813388824463

Token 182: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.020626910030841827
    2. '               ' → logprob: -4.520627021789551
    3. ' ' → logprob: -5.770627021789551
    4. '           ' → logprob: -6.020627021789551
    5. 'self' (adapté à ' self') → logprob: -6.270627021789551
    6. '                   ' → logprob: -6.520627021789551
    7. ' new' → logprob: -8.52062702178955
    8. '   ' → logprob: -9.27062702178955
    9. ' (' → logprob: -9.39562702178955
    10. '                ' → logprob: -10.39562702178955

Token 183: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.003560042707249522
    2. '.' → logprob: -6.0035600662231445
    3. ' .' → logprob: -7.1285600662231445
    4. 'goto' → logprob: -8.628560066223145
    5. '	goto' → logprob: -10.253560066223145
    6. '.go' → logprob: -10.253560066223145
    7. ' goto' → logprob: -11.128560066223145
    8. '   ' → logprob: -12.628560066223145
    9. ' ' → logprob: -12.628560066223145
    10. '.gov' → logprob: -13.003560066223145

Token 184: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.5762308239936829
    2. '[current' → logprob: -0.8262308239936829
    3. '[' → logprob: -9.076231002807617
    4. '(current' → logprob: -9.201231002807617
    5. ',' → logprob: -10.451231002807617
    6. ',current' → logprob: -10.576231002807617
    7. ' (' → logprob: -11.701231002807617
    8. '[
' → logprob: -12.701231002807617
    9. 'current' → logprob: -12.951231002807617
    10. ' [(' → logprob: -13.076231002807617

Token 185: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00017994173686020076
    2. ' current' → logprob: -8.6251802444458
    3. ',current' → logprob: -16.125179290771484
    4. '(current' → logprob: -16.375179290771484
    5. 'urrent' → logprob: -17.250179290771484
    6. '$current' → logprob: -17.500179290771484
    7. '
' → logprob: -17.625179290771484
    8. '[current' → logprob: -17.625179290771484
    9. ' ' → logprob: -17.875179290771484
    10. 'cur' → logprob: -18.000179290771484

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013154871703591198
    2. ' ,' → logprob: -9.000131607055664
    3. ',ch' → logprob: -12.125131607055664
    4. ',
' → logprob: -14.000131607055664
    5. ')' → logprob: -14.625131607055664
    6. '‌,' → logprob: -15.000131607055664
    7. '),' → logprob: -15.250131607055664
    8. ' ' → logprob: -15.375131607055664
    9. ',)' → logprob: -16.000131607055664
    10. '',' → logprob: -16.125131607055664

Token 187: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.3132862150669098
    2. ' ch' → logprob: -1.3132861852645874
    3. ' ' → logprob: -11.938285827636719
    4. '	ch' → logprob: -12.313285827636719
    5. ')' → logprob: -12.438285827636719
    6. '   ' → logprob: -12.563285827636719
    7. '[ch' → logprob: -13.688285827636719
    8. ',ch' → logprob: -14.063285827636719
    9. '  ' → logprob: -14.188285827636719
    10. '(ch' → logprob: -14.188285827636719

Token 188: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001858982432167977
    2. ']' → logprob: -9.0001859664917
    3. ' )' → logprob: -10.0001859664917
    4. ')' → logprob: -11.1251859664917
    5. ' ]' → logprob: -14.0001859664917
    6. '])' → logprob: -14.2501859664917
    7. ']=' → logprob: -15.3751859664917
    8. ']]' → logprob: -15.7501859664917
    9. '')]' → logprob: -16.000185012817383
    10. '")]' → logprob: -16.250185012817383

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692904472351074
    2. ' =' → logprob: -2.1269290447235107
    3. '=
' → logprob: -14.75192928314209
    4. ']=' → logprob: -15.37692928314209
    5. ']' → logprob: -15.50192928314209
    6. ' ' → logprob: -16.251928329467773
    7. '           ' → logprob: -17.251928329467773
    8. ' =
' → logprob: -17.501928329467773
    9. '=self' → logprob: -18.001928329467773
    10. ')' → logprob: -18.251928329467773

Token 190: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019425610080361366
    2. ' self' → logprob: -6.2519426345825195
    3. '           ' → logprob: -11.62694263458252
    4. '               ' → logprob: -12.62694263458252
    5. '   ' → logprob: -14.00194263458252
    6. '
' → logprob: -15.12694263458252
    7. '                   ' → logprob: -15.87694263458252
    8. '	self' → logprob: -15.87694263458252
    9. '       ' → logprob: -16.001941680908203
    10. '(self' → logprob: -16.126941680908203

Token 191: '.states' (ID: 122737)
  Prédit: '.states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.states' → logprob: -0.17810988426208496
    2. 'states' → logprob: -1.928109884262085
    3. ' states' → logprob: -4.053110122680664
    4. '_states' → logprob: -8.053110122680664
    5. '(states' → logprob: -11.178110122680664
    6. 't' → logprob: -12.053110122680664
    7. 's' → logprob: -12.178110122680664
    8. 'States' → logprob: -12.428110122680664
    9. '   ' → logprob: -12.553110122680664
    10. ' STATES' → logprob: -13.553110122680664

Token 192: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15736685693264008
    2. '
' → logprob: -3.0323667526245117
    3. '                   ' → logprob: -3.2823667526245117
    4. '           ' → logprob: -3.4073667526245117
    5. ' 
' → logprob: -4.782366752624512
    6. ' ' → logprob: -5.407366752624512
    7. '                ' → logprob: -5.907366752624512
    8. '   ' → logprob: -6.532366752624512
    9. '  
' → logprob: -6.532366752624512
    10. '       ' → logprob: -6.657366752624512

Token 193: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002686467720195651
    2. '           ' → logprob: -6.502686500549316
    3. ' 
' → logprob: -7.877686500549316
    4. '                
' → logprob: -8.002686500549316
    5. '                   ' → logprob: -8.252686500549316
    6. '
' → logprob: -10.127686500549316
    7. '  
' → logprob: -10.502686500549316
    8. '            
' → logprob: -10.877686500549316
    9. '\n' → logprob: -10.877686500549316
    10. '                ' → logprob: -11.002686500549316

Token 194: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6100113987922668
    2. '               ' → logprob: -1.360011339187622
    3. ' self' → logprob: -1.610011339187622
    4. '           ' → logprob: -9.985011100769043
    5. '                   ' → logprob: -10.485011100769043
    6. '	self' → logprob: -11.235011100769043
    7. '   ' → logprob: -12.235011100769043
    8. ' current' → logprob: -12.360011100769043
    9. 'current' → logprob: -12.360011100769043
    10. '                
' → logprob: -12.735011100769043

Token 195: '.states' (ID: 122737)
  Prédit: '.states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.states' → logprob: -0.0060790604911744595
    2. 'states' → logprob: -5.506079196929932
    3. ' states' → logprob: -6.256079196929932
    4. ' .' → logprob: -10.381078720092773
    5. '_states' → logprob: -10.381078720092773
    6. '.' → logprob: -11.256078720092773
    7. '       ' → logprob: -13.881078720092773
    8. '(states' → logprob: -14.006078720092773
    9. '   ' → logprob: -14.381078720092773
    10. 'States' → logprob: -14.631078720092773

Token 196: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06201103702187538
    2. '+=' → logprob: -2.8120110034942627
    3. '+' → logprob: -10.187010765075684
    4. ' ' → logprob: -12.812010765075684
    5. '<|end|>' → logprob: -13.312010765075684
    6. ' +' → logprob: -14.312010765075684
    7. ']+=' → logprob: -15.187010765075684
    8. '   ' → logprob: -16.31201171875
    9. '++' → logprob: -16.56201171875
    10. '[' → logprob: -16.68701171875

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. ' ' → logprob: -19.256715774536133
    4. '```' → logprob: -19.631715774536133
    5. '<|end|>' → logprob: -20.881715774536133
    6. '   ' → logprob: -21.006715774536133
    7. '۱' → logprob: -21.131715774536133
    8. '  ' → logprob: -21.256715774536133
    9. '１' → logprob: -21.506715774536133
    10. '
' → logprob: -21.756715774536133

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -21.875
    4. '   ' → logprob: -23.125
    5. '۱' → logprob: -23.625
    6. '１' → logprob: -23.875
    7. '' → logprob: -24.625
    8. '১' → logprob: -25.0
    9. '`' → logprob: -25.0
    10. '  ' → logprob: -25.125

Token 199: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009399507194757462
    2. ' current' → logprob: -5.2593994140625
    3. '               ' → logprob: -6.3843994140625
    4. 'current' → logprob: -6.6343994140625
    5. '
' → logprob: -7.5093994140625
    6. '            
' → logprob: -7.8843994140625
    7. '		' → logprob: -10.0093994140625
    8. '(current' → logprob: -10.8843994140625
    9. ',current' → logprob: -10.8843994140625
    10. '	current' → logprob: -11.0093994140625

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002432620618492365
    2. ' current' → logprob: -6.627432823181152
    3. 'current' → logprob: -7.877432823181152
    4. '            
' → logprob: -8.002432823181152
    5. '
' → logprob: -8.627432823181152
    6. '               ' → logprob: -9.377432823181152
    7. '		' → logprob: -10.502432823181152
    8. '	current' → logprob: -10.502432823181152
    9. '       ' → logprob: -11.627432823181152
    10. '   ' → logprob: -12.252432823181152

Token 201: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.20223510265350342
    2. ' current' → logprob: -1.7022351026535034
    3. '           ' → logprob: -7.452235221862793
    4. '   ' → logprob: -9.202235221862793
    5. '	current' → logprob: -9.577235221862793
    6. '(current' → logprob: -10.952235221862793
    7. '       ' → logprob: -10.952235221862793
    8. '.current' → logprob: -11.702235221862793
    9. '_current' → logprob: -11.827235221862793
    10. '$current' → logprob: -12.202235221862793

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020871460437775
    2. ' =' → logprob: -2.3502087593078613
    3. ',' → logprob: -13.100208282470703
    4. '.=' → logprob: -18.100208282470703
    5. '＝' → logprob: -18.975208282470703
    6. '=}' → logprob: -19.850208282470703
    7. ' ' → logprob: -19.975208282470703
    8. '=

' → logprob: -20.850208282470703
    9. ' ,' → logprob: -21.350208282470703
    10. ' +=' → logprob: -21.350208282470703

Token 203: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858771339058876
    2. ' self' → logprob: -3.0485877990722656
    3. '(self' → logprob: -15.423587799072266
    4. '	self' → logprob: -16.423587799072266
    5. ' ' → logprob: -17.173587799072266
    6. '[self' → logprob: -17.798587799072266
    7. '   ' → logprob: -18.423587799072266
    8. 'goto' → logprob: -18.548587799072266
    9. '       ' → logprob: -19.298587799072266
    10. '0' → logprob: -19.298587799072266

Token 204: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.01818717084825039
    2. 'goto' → logprob: -4.018187046051025
    3. '	goto' → logprob: -11.018187522888184
    4. '.' → logprob: -11.643187522888184
    5. '.gov' → logprob: -12.643187522888184
    6. '.go' → logprob: -12.643187522888184
    7. ' goto' → logprob: -13.018187522888184
    8. 'Goto' → logprob: -13.768187522888184
    9. '.states' → logprob: -14.643187522888184
    10. '.get' → logprob: -15.268187522888184

Token 205: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -6.869017852295656e-06
    2. '[current' → logprob: -12.500006675720215
    3. '(current' → logprob: -13.250006675720215
    4. '(' → logprob: -14.375006675720215
    5. '[' → logprob: -14.875006675720215
    6. '((' → logprob: -15.500006675720215
    7. '[
' → logprob: -17.00000762939453
    8. ' (' → logprob: -18.12500762939453
    9. ' [(' → logprob: -18.12500762939453
    10. '   ' → logprob: -18.87500762939453

Token 206: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -2.1888679839321412e-05
    2. ' current' → logprob: -10.750021934509277
    3. '(current' → logprob: -16.12502098083496
    4. ' ' → logprob: -16.87502098083496
    5. 'urrent' → logprob: -17.37502098083496
    6. '[current' → logprob: -18.12502098083496
    7. '.current' → logprob: -18.25002098083496
    8. 'cur' → logprob: -18.25002098083496
    9. ',current' → logprob: -18.50002098083496
    10. '$current' → logprob: -19.00002098083496

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.580929347255733e-05
    2. ',ch' → logprob: -11.500016212463379
    3. ' ,' → logprob: -12.125016212463379
    4. ',
' → logprob: -16.625015258789062
    5. ' ' → logprob: -16.625015258789062
    6. ',current' → logprob: -17.250015258789062
    7. '‌,' → logprob: -18.625015258789062
    8. '(ch' → logprob: -19.625015258789062
    9. ')' → logprob: -19.750015258789062
    10. '   ' → logprob: -19.750015258789062

Token 208: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.03364904224872589
    2. ' ch' → logprob: -3.40864896774292
    3. ' ' → logprob: -13.033649444580078
    4. ',ch' → logprob: -15.158649444580078
    5. '(ch' → logprob: -15.283649444580078
    6. ',' → logprob: -16.158649444580078
    7. '[ch' → logprob: -16.158649444580078
    8. '	ch' → logprob: -16.283649444580078
    9. '  ' → logprob: -16.408649444580078
    10. 'c' → logprob: -16.408649444580078

Token 209: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.9040898880339228e-05
    2. ')]
' → logprob: -11.625028610229492
    3. ' )' → logprob: -11.750028610229492
    4. ']' → logprob: -11.875028610229492
    5. ')' → logprob: -12.750028610229492
    6. ' ]' → logprob: -14.625028610229492
    7. '       ' → logprob: -15.500028610229492
    8. ')][' → logprob: -15.500028610229492
    9. ')].' → logprob: -15.625028610229492
    10. ')]
' → logprob: -15.625028610229492

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11589420586824417
    2. '
' → logprob: -2.490894317626953
    3. '<|end|>' → logprob: -3.740894317626953
    4. '        
' → logprob: -7.115894317626953
    5. '  
' → logprob: -7.990894317626953
    6. ' 
' → logprob: -8.115894317626953
    7. '```' → logprob: -8.365894317626953
    8. '   ' → logprob: -8.740894317626953
    9. '    
' → logprob: -8.865894317626953
    10. ' ' → logprob: -8.990894317626953

Token 211: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5046458840370178
    2. ' self' → logprob: -1.004645824432373
    3. '       ' → logprob: -3.504645824432373
    4. '   ' → logprob: -10.879646301269531
    5. '
' → logprob: -11.504646301269531
    6. '	self' → logprob: -11.504646301269531
    7. ' ' → logprob: -12.379646301269531
    8. '        
' → logprob: -13.379646301269531
    9. '```' → logprob: -14.004646301269531
    10. '           ' → logprob: -14.254646301269531

Token 212: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.0001329791557509452
    2. '.' → logprob: -9.50013256072998
    3. 'out' → logprob: -9.87513256072998
    4. ' .' → logprob: -12.50013256072998
    5. '	out' → logprob: -14.37513256072998
    6. '_out' → logprob: -14.62513256072998
    7. '`.' → logprob: -14.75013256072998
    8. '   ' → logprob: -15.62513256072998
    9. '.output' → logprob: -15.75013256072998
    10. '\.' → logprob: -16.000133514404297

Token 213: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0019486293895170093
    2. '[(' → logprob: -6.251948833465576
    3. '[' → logprob: -10.876948356628418
    4. '[cur' → logprob: -14.376948356628418
    5. '[curr' → logprob: -15.126948356628418
    6. '(current' → logprob: -15.126948356628418
    7. '.setdefault' → logprob: -18.001949310302734
    8. '[now' → logprob: -18.126949310302734
    9. '[parent' → logprob: -19.001949310302734
    10. '[self' → logprob: -19.626949310302734

Token 214: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.25100499391555786
    2. '.add' → logprob: -1.626004934310913
    3. ').' → logprob: -3.751004934310913
    4. ']' → logprob: -7.251005172729492
    5. ')' → logprob: -7.501005172729492
    6. '[' → logprob: -9.001005172729492
    7. '.' → logprob: -9.376005172729492
    8. ')].' → logprob: -9.626005172729492
    9. ')add' → logprob: -9.626005172729492
    10. 'add' → logprob: -10.126005172729492

Token 215: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -4.320199877838604e-07
    2. '.add' → logprob: -15.0
    3. ' add' → logprob: -18.0
    4. '	add' → logprob: -20.0
    5. 'append' → logprob: -21.25
    6. '_add' → logprob: -21.375
    7. ')add' → logprob: -21.75
    8. 'update' → logprob: -22.5
    9. '(add' → logprob: -23.0
    10. 'adde' → logprob: -23.25

Token 216: '(word' (ID: 35459)
  Prédit: '(word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.0007332704844884574
    2. 'word' → logprob: -7.250733375549316
    3. '(' → logprob: -11.000733375549316
    4. ' word' → logprob: -12.000733375549316
    5. '[word' → logprob: -15.625733375549316
    6. ' (' → logprob: -15.875733375549316
    7. '(
' → logprob: -16.625732421875
    8. '	word' → logprob: -17.375732421875
    9. 'Word' → logprob: -18.625732421875
    10. '_word' → logprob: -18.875732421875

Token 217: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -6.704273118884885e-07
    2. 'id' → logprob: -15.625000953674316
    3. ')' → logprob: -15.750000953674316
    4. '_' → logprob: -16.25
    5. '_ids' → logprob: -16.5
    6. '_i' → logprob: -17.875
    7. ' _' → logprob: -18.0
    8. ')_' → logprob: -18.0
    9. '```' → logprob: -18.125
    10. '[word' → logprob: -19.0

Token 218: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ')
' → logprob: -12.250008583068848
    3. ' )' → logprob: -12.625008583068848
    4. '}' → logprob: -17.12500762939453
    5. ')}' → logprob: -17.37500762939453
    6. ')

' → logprob: -18.37500762939453
    7. '),' → logprob: -18.62500762939453
    8. '       ' → logprob: -18.75000762939453
    9. '))' → logprob: -18.75000762939453
    10. '<|end|>' → logprob: -18.75000762939453

Token 219: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09078361839056015
    2. '   ' → logprob: -2.8407835960388184
    3. '<|end|>' → logprob: -3.9657835960388184
    4. '    
' → logprob: -4.965783596038818
    5. '

' → logprob: -6.715783596038818
    6. '  
' → logprob: -8.090784072875977
    7. '```' → logprob: -8.215784072875977
    8. '<|end|>' → logprob: -8.715784072875977
    9. 'def' → logprob: -8.840784072875977
    10. '\n' → logprob: -9.340784072875977

Token 220: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2834250330924988
    2. '
' → logprob: -1.9084250926971436
    3. '   ' → logprob: -2.5334250926971436
    4. ' def' → logprob: -4.1584248542785645
    5. '```' → logprob: -6.6584248542785645
    6. '    
' → logprob: -6.7834248542785645
    7. '

' → logprob: -7.9084248542785645
    8. '  
' → logprob: -8.533425331115723
    9. '	def' → logprob: -8.658425331115723
    10. ' 
' → logprob: -9.408425331115723

Token 221: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.06200510635972023
    2. 'build' → logprob: -2.812005043029785
    3. '_build' → logprob: -10.312005043029785
    4. 'def' → logprob: -14.062005043029785
    5. ' construct' → logprob: -14.187005043029785
    6. '	build' → logprob: -14.437005043029785
    7. '__' → logprob: -14.687005043029785
    8. '.build' → logprob: -14.812005043029785
    9. 'Build' → logprob: -15.562005043029785
    10. 'make' → logprob: -15.562005043029785

Token 222: '(self' (ID: 2402)
  Prédit: '_failure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_failure' → logprob: -1.001866102218628
    2. '_' → logprob: -1.251866102218628
    3. '(self' → logprob: -1.376866102218628
    4. '_fail' → logprob: -2.376866102218628
    5. '_ac' → logprob: -7.876866340637207
    6. '_suffix' → logprob: -8.501866340637207
    7. '()' → logprob: -8.751866340637207
    8. 'failure' → logprob: -8.876866340637207
    9. '_trans' → logprob: -8.876866340637207
    10. '_links' → logprob: -9.251866340637207

Token 223: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0479644313454628
    2. '):
' → logprob: -3.172964334487915
    3. ')' → logprob: -6.297964572906494
    4. 'self' → logprob: -6.422964572906494
    5. '_' → logprob: -7.047964572906494
    6. ' ):' → logprob: -9.172964096069336
    7. '(self' → logprob: -9.172964096069336
    8. ')_' → logprob: -9.172964096069336
    9. '_states' → logprob: -9.422964096069336
    10. '):
' → logprob: -9.922964096069336

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.690834273584187e-05
    2. '(self' → logprob: -10.87503719329834
    3. 'self' → logprob: -12.25003719329834
    4. '        
' → logprob: -12.37503719329834
    5. '   ' → logprob: -13.00003719329834
    6. '```' → logprob: -13.37503719329834
    7. '(' → logprob: -14.12503719329834
    8. '
' → logprob: -14.25003719329834
    9. '#' → logprob: -14.37503719329834
    10. ' self' → logprob: -14.75003719329834

Token 225: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005728855729103088
    2. ' queue' → logprob: -5.380728721618652
    3. 'queue' → logprob: -6.880728721618652
    4. '
' → logprob: -10.630728721618652
    5. '   ' → logprob: -11.005728721618652
    6. 'q' → logprob: -11.255728721618652
    7. '        
' → logprob: -11.755728721618652
    8. ' q' → logprob: -12.630728721618652
    9. '	queue' → logprob: -13.005728721618652
    10. 'que' → logprob: -13.005728721618652

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004718841519206762
    2. 'queue' → logprob: -5.629718780517578
    3. ' queue' → logprob: -6.879718780517578
    4. '   ' → logprob: -9.504718780517578
    5. 'q' → logprob: -11.504718780517578
    6. 'que' → logprob: -14.129718780517578
    7. '"""' → logprob: -14.254718780517578
    8. '     ' → logprob: -14.254718780517578
    9. '    ' → logprob: -14.379718780517578
    10. '#' → logprob: -14.629718780517578

Token 227: ' Build' (ID: 10885)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.02395186759531498
    2. 'q' → logprob: -4.523952007293701
    3. ' queue' → logprob: -4.523952007293701
    4. '       ' → logprob: -6.523952007293701
    5. '   ' → logprob: -7.773952007293701
    6. 'self' → logprob: -10.648951530456543
    7. '"""
' → logprob: -10.898951530456543
    8. ' q' → logprob: -11.148951530456543
    9. 'Q' → logprob: -11.648951530456543
    10. '"""' → logprob: -12.023951530456543

Token 228: ' failure' (ID: 14090)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5704906582832336
    2. ' queue' → logprob: -1.6954905986785889
    3. ' the' → logprob: -1.8204905986785889
    4. '()' → logprob: -3.070490598678589
    5. 'queue' → logprob: -3.945490598678589
    6. ' a' → logprob: -4.945490837097168
    7. '   ' → logprob: -5.195490837097168
    8. ' self' → logprob: -5.570490837097168
    9. 'self' → logprob: -6.445490837097168
    10. 'fail' → logprob: -6.570490837097168

Token 229: ' links' (ID: 9362)
  Prédit: ' function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.48083001375198364
    2. ' links' → logprob: -1.2308299541473389
    3. ' queue' → logprob: -3.355829954147339
    4. '   ' → logprob: -3.480829954147339
    5. '_links' → logprob: -4.855830192565918
    6. ' ' → logprob: -5.230830192565918
    7. '_function' → logprob: -6.355830192565918
    8. '       ' → logprob: -6.480830192565918
    9. ' and' → logprob: -6.605830192565918
    10. '_queue' → logprob: -6.730830192565918

Token 230: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1539679914712906
    2. '(self' → logprob: -2.028968095779419
    3. '   ' → logprob: -4.65396785736084
    4. ' and' → logprob: -6.65396785736084
    5. 'self' → logprob: -9.27896785736084
    6. '()' → logprob: -9.52896785736084
    7. '
' → logprob: -9.65396785736084
    8. 'and' → logprob: -10.27896785736084
    9. 'def' → logprob: -10.65396785736084
    10. '(' → logprob: -10.65396785736084

Token 231: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28110751509666443
    2. ' the' → logprob: -2.1561074256896973
    3. 'the' → logprob: -2.6561074256896973
    4. ' self' → logprob: -2.9061074256896973
    5. ')' → logprob: -6.031107425689697
    6. '   ' → logprob: -6.656107425689697
    7. '       ' → logprob: -7.656107425689697
    8. ' all' → logprob: -9.906107902526855
    9. 'def' → logprob: -10.031107902526855
    10. ')
' → logprob: -11.156107902526855

Token 232: ' autom' (ID: 5099)
  Prédit: 'goto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'goto' → logprob: -1.2266957759857178
    2. 'A' → logprob: -1.3516957759857178
    3. ' A' → logprob: -1.9766957759857178
    4. 'queue' → logprob: -2.3516957759857178
    5. ' goto' → logprob: -2.4766957759857178
    6. ' aho' → logprob: -3.1016957759857178
    7. ' queue' → logprob: -3.4766957759857178
    8. '   ' → logprob: -3.7266957759857178
    9. ' trie' → logprob: -5.101696014404297
    10. 'def' → logprob: -5.226696014404297

Token 233: 'aton' (ID: 24850)
  Prédit: 'aton'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aton' → logprob: -4.320199877838604e-07
    2. 'a' → logprob: -15.375
    3. 'ation' → logprob: -15.875
    4. '```' → logprob: -16.875
    5. 'achine' → logprob: -17.0
    6. '   ' → logprob: -17.125
    7. 'ate' → logprob: -17.25
    8. 'ata' → logprob: -18.125
    9. 'atic' → logprob: -18.375
    10. 'at' → logprob: -18.375

Token 234: ' using' (ID: 2360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030029003974050283
    2. '
' → logprob: -6.128003120422363
    3. ',' → logprob: -7.753003120422363
    4. '        
' → logprob: -8.628003120422363
    5. '   ' → logprob: -9.753003120422363
    6. '.' → logprob: -9.753003120422363
    7. '(self' → logprob: -10.628003120422363
    8. 'self' → logprob: -10.753003120422363
    9. '.
' → logprob: -11.378003120422363
    10. ' and' → logprob: -11.878003120422363

Token 235: ' BFS' (ID: 190016)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17310215532779694
    2. ' bfs' → logprob: -3.1731021404266357
    3. ' queue' → logprob: -3.2981021404266357
    4. ' deque' → logprob: -3.2981021404266357
    5. 'queue' → logprob: -4.673102378845215
    6. 'b' → logprob: -4.798102378845215
    7. ' BFS' → logprob: -4.923102378845215
    8. 'self' → logprob: -5.048102378845215
    9. '       ' → logprob: -5.673102378845215
    10. 'deque' → logprob: -5.923102378845215

Token 236: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007930614985525608
    2. '.' → logprob: -5.757930755615234
    3. '
' → logprob: -6.007930755615234
    4. '(self' → logprob: -7.257930755615234
    5. ',' → logprob: -7.757930755615234
    6. '        
' → logprob: -7.882930755615234
    7. '.
' → logprob: -8.007930755615234
    8. '   ' → logprob: -9.132930755615234
    9. 'self' → logprob: -10.132930755615234
    10. '(queue' → logprob: -10.257930755615234

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017982310382649302
    2. '
' → logprob: -6.376798152923584
    3. '        
' → logprob: -9.626798629760742
    4. '```' → logprob: -11.626798629760742
    5. ' queue' → logprob: -12.001798629760742
    6. 'queue' → logprob: -12.876798629760742
    7. '' → logprob: -13.376798629760742
    8. '  
' → logprob: -13.376798629760742
    9. '    
' → logprob: -13.626798629760742
    10. '	' → logprob: -13.626798629760742

Token 238: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009515985148027539
    2. '
' → logprob: -7.250951766967773
    3. '        
' → logprob: -8.875951766967773
    4. '```' → logprob: -9.750951766967773
    5. ' queue' → logprob: -10.750951766967773
    6. 'queue' → logprob: -12.250951766967773
    7. '  
' → logprob: -12.500951766967773
    8. '    
' → logprob: -12.750951766967773
    9. '   ' → logprob: -13.000951766967773
    10. '\n' → logprob: -13.125951766967773

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16067534685134888
    2. ' queue' → logprob: -2.160675287246704
    3. 'queue' → logprob: -3.410675287246704
    4. 'q' → logprob: -9.535675048828125
    5. '   ' → logprob: -9.660675048828125
    6. '	queue' → logprob: -11.410675048828125
    7. ' q' → logprob: -11.535675048828125
    8. ' que' → logprob: -13.035675048828125
    9. '	' → logprob: -13.285675048828125
    10. 'que' → logprob: -13.785675048828125

Token 240: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.015721341595053673
    2. 'q' → logprob: -4.265721321105957
    3. ' queue' → logprob: -6.515721321105957
    4. '   ' → logprob: -10.015721321105957
    5. '       ' → logprob: -11.015721321105957
    6. 'Q' → logprob: -11.390721321105957
    7. ' q' → logprob: -12.890721321105957
    8. '	queue' → logprob: -14.265721321105957
    9. 'from' → logprob: -15.140721321105957
    10. 'que' → logprob: -15.765721321105957

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889044284820557
    2. '=' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.328890800476074
    4. ' =
' → logprob: -17.328889846801758
    5. '   ' → logprob: -18.328889846801758
    6. '  ' → logprob: -18.578889846801758
    7. ',' → logprob: -19.328889846801758
    8. '	' → logprob: -19.453889846801758
    9. '.' → logprob: -19.453889846801758
    10. '=sys' → logprob: -19.953889846801758

Token 242: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.07888989895582199
    2. ' deque' → logprob: -2.578889846801758
    3. 'Deque' → logprob: -16.578889846801758
    4. ' ' → logprob: -19.578889846801758
    5. '	de' → logprob: -19.953889846801758
    6. 'queue' → logprob: -20.078889846801758
    7. 'de' → logprob: -20.328889846801758
    8. '   ' → logprob: -20.953889846801758
    9. 'collections' → logprob: -21.328889846801758
    10. '  ' → logprob: -21.953889846801758

Token 243: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4000389277935028
    2. '([' → logprob: -1.1500389575958252
    3. '()
' → logprob: -4.400038719177246
    4. '([(' → logprob: -8.275038719177246
    5. '()

' → logprob: -8.650038719177246
    6. '(' → logprob: -8.775038719177246
    7. '([]' → logprob: -9.400038719177246
    8. '(self' → logprob: -9.900038719177246
    9. '([])
' → logprob: -10.650038719177246
    10. '(range' → logprob: -10.775038719177246

Token 244: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.633857011795044
    2. 'for' → logprob: -0.883857011795044
    3. '       ' → logprob: -2.883857011795044
    4. '	for' → logprob: -8.008856773376465
    5. '   ' → logprob: -11.633856773376465
    6. '	' → logprob: -12.508856773376465
    7. '#' → logprob: -12.633856773376465
    8. '        
' → logprob: -13.258856773376465
    9. ' ' → logprob: -14.008856773376465
    10. '	   ' → logprob: -14.508856773376465

Token 245: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038082581013441086
    2. ' for' → logprob: -3.2880825996398926
    3. '       ' → logprob: -10.788082122802734
    4. '#' → logprob: -11.163082122802734
    5. '	for' → logprob: -12.038082122802734
    6. '   ' → logprob: -15.163082122802734
    7. '        
' → logprob: -16.788082122802734
    8. ' #' → logprob: -17.288082122802734
    9. 'root' → logprob: -18.288082122802734
    10. ' ' → logprob: -18.913082122802734

Token 246: '.fail' (ID: 48738)
  Prédit: '.fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fail' → logprob: -0.14498242735862732
    2. 'fail' → logprob: -2.26998233795166
    3. ' fail' → logprob: -4.39498233795166
    4. 'for' → logprob: -4.51998233795166
    5. ' for' → logprob: -5.76998233795166
    6. '.for' → logprob: -6.76998233795166
    7. '.' → logprob: -7.01998233795166
    8. '.states' → logprob: -7.01998233795166
    9. '_fail' → logprob: -7.76998233795166
    10. ' =' → logprob: -8.26998233795166

Token 247: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027700252830982208
    2. ' =' → logprob: -3.777700185775757
    3. '=' → logprob: -5.652700424194336
    4. '.update' → logprob: -7.777700424194336
    5. ' [' → logprob: -7.902700424194336
    6. '0' → logprob: -10.027700424194336
    7. ' ' → logprob: -10.402700424194336
    8. '.setdefault' → logprob: -11.402700424194336
    9. '[(' → logprob: -11.402700424194336
    10. '=[' → logprob: -11.777700424194336

Token 248: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2478112280368805
    2. '{}' → logprob: -1.997811198234558
    3. 'default' → logprob: -2.4978113174438477
    4. '[' → logprob: -6.622811317443848
    5. '{}
' → logprob: -9.247811317443848
    6. ' {' → logprob: -9.497811317443848
    7. ' defaultdict' → logprob: -9.622811317443848
    8. ' {}' → logprob: -11.497811317443848
    9. 'dict' → logprob: -11.622811317443848
    10. '{}

' → logprob: -12.497811317443848

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03541725501418114
    2. 'state' → logprob: -3.785417318344116
    3. ' ' → logprob: -5.535417079925537
    4. '}' → logprob: -5.660417079925537
    5. 'i' → logprob: -6.035417079925537
    6. 's' → logprob: -6.285417079925537
    7. 'k' → logprob: -9.035417556762695
    8. '(' → logprob: -9.285417556762695
    9. ' state' → logprob: -10.035417556762695
    10. '(state' → logprob: -10.785417556762695

Token 250: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010950337309623137
    2. ' :' → logprob: -9.125109672546387
    3. '0' → logprob: -15.250109672546387
    4. '   ' → logprob: -17.00010871887207
    5. '}' → logprob: -17.25010871887207
    6. ':
' → logprob: -18.00010871887207
    7. '=' → logprob: -18.00010871887207
    8. '       ' → logprob: -18.37510871887207
    9. '	' → logprob: -18.50010871887207
    10. '    ' → logprob: -18.50010871887207

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002615742268972099
    2. ' ' → logprob: -8.250261306762695
    3. '۰' → logprob: -16.625261306762695
    4. '   ' → logprob: -17.000261306762695
    5. ' ' → logprob: -17.625261306762695
    6. '  ' → logprob: -18.625261306762695
    7. '０' → logprob: -18.687761306762695
    8. '	' → logprob: -18.875261306762695
    9. '00' → logprob: -18.937761306762695
    10. '000' → logprob: -19.125261306762695

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '۰' → logprob: -16.375139236450195
    4. ' ' → logprob: -17.375139236450195
    5. '   ' → logprob: -17.750139236450195
    6. '０' → logprob: -18.250139236450195
    7. '  ' → logprob: -18.750139236450195
    8. '}' → logprob: -18.875139236450195
    9. '	' → logprob: -19.000139236450195
    10. '00' → logprob: -19.875139236450195

Token 253: '}
' (ID: 739)
  Prédit: '}
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}
' → logprob: -0.25267937779426575
    2. '}' → logprob: -1.5026793479919434
    3. '}

' → logprob: -8.252679824829102
    4. '       ' → logprob: -8.252679824829102
    5. ' }
' → logprob: -8.877679824829102
    6. '}
' → logprob: -9.752679824829102
    7. ' }' → logprob: -10.627679824829102
    8. '   ' → logprob: -12.627679824829102
    9. '	' → logprob: -13.377679824829102
    10. ',' → logprob: -14.252679824829102

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1898660510778427
    2. ' for' → logprob: -2.314866065979004
    3. '
' → logprob: -2.814866065979004
    4. 'for' → logprob: -4.939866065979004
    5. '        
' → logprob: -6.189866065979004
    6. ' 
' → logprob: -6.314866065979004
    7. '	for' → logprob: -6.314866065979004
    8. '		
' → logprob: -7.814866065979004
    9. '	
' → logprob: -8.689866065979004
    10. '	' → logprob: -8.689866065979004

Token 255: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.93448489275761e-05
    2. ' for' → logprob: -9.500079154968262
    3. '       ' → logprob: -12.875079154968262
    4. '	for' → logprob: -13.625079154968262
    5. '#' (adapté à ' #') → logprob: -14.375079154968262
    6. '   ' → logprob: -16.875080108642578
    7. '        
' → logprob: -20.000080108642578
    8. '	' → logprob: -20.500080108642578
    9. ' ' → logprob: -21.375080108642578
    10. 'For' → logprob: -21.875080108642578

Token 256: ' Initialize' (ID: 19496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.3795937522663735e-05
    2. ' for' → logprob: -11.25002384185791
    3. '       ' → logprob: -11.50002384185791
    4. '#' → logprob: -14.50002384185791
    5. '	for' → logprob: -16.000022888183594
    6. '   ' → logprob: -17.500022888183594
    7. '        
' → logprob: -19.000022888183594
    8. 'queue' → logprob: -20.375022888183594
    9. 'For' → logprob: -21.750022888183594
    10. ' ' → logprob: -21.875022888183594

Token 257: ' failure' (ID: 14090)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011742709903046489
    2. ' for' → logprob: -6.751174449920654
    3. '   ' → logprob: -13.376173973083496
    4. '	for' → logprob: -14.001173973083496
    5. '#' → logprob: -14.126173973083496
    6. '       ' → logprob: -14.376173973083496
    7. 'queue' → logprob: -15.126173973083496
    8. '0' → logprob: -18.001174926757812
    9. ' ' → logprob: -18.876174926757812
    10. '        
' → logprob: -19.376174926757812

Token 258: ' links' (ID: 9362)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1397349834442139
    2. 'links' → logprob: -1.1397349834442139
    3. ' for' → logprob: -1.5147349834442139
    4. ' links' → logprob: -2.014734983444214
    5. ' edges' → logprob: -5.514735221862793
    6. ' states' → logprob: -6.889735221862793
    7. 'states' → logprob: -7.139735221862793
    8. '   ' → logprob: -7.889735221862793
    9. 'edges' → logprob: -8.014735221862793
    10. ' of' → logprob: -9.139735221862793

Token 259: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1468317061662674
    2. '       ' → logprob: -2.021831750869751
    3. 'for' → logprob: -5.646831512451172
    4. '	for' → logprob: -7.771831512451172
    5. ' with' → logprob: -9.771831512451172
    6. '	' → logprob: -10.271831512451172
    7. ' and' → logprob: -10.646831512451172
    8. '	   ' → logprob: -10.896831512451172
    9. '   ' → logprob: -11.271831512451172
    10. ' to' → logprob: -11.396831512451172

Token 260: ' depth' (ID: 13636)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6848191022872925
    2. 'state' → logprob: -1.6848191022872925
    3. 'ch' → logprob: -2.434819221496582
    4. 'states' → logprob: -2.809819221496582
    5. '0' → logprob: -3.934819221496582
    6. '[(' → logprob: -4.059819221496582
    7. ' for' → logprob: -4.309819221496582
    8. '(ch' → logprob: -4.559819221496582
    9. '((' → logprob: -4.559819221496582
    10. ' (' → logprob: -4.684819221496582

Token 261: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6355542540550232
    2. '1' → logprob: -1.135554313659668
    3. ' ' → logprob: -2.010554313659668
    4. ' =' → logprob: -4.510554313659668
    5. '-' → logprob: -5.885554313659668
    6. 'one' → logprob: -7.010554313659668
    7. ' one' → logprob: -8.635554313659668
    8. '-one' → logprob: -9.135554313659668
    9. '   ' → logprob: -9.260554313659668
    10. 'One' → logprob: -10.135554313659668

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006025957991369069
    2. '=' → logprob: -7.750602722167969
    3. ' ' → logprob: -9.125602722167969
    4. 'one' → logprob: -9.750602722167969
    5. ' =' → logprob: -13.375602722167969
    6. ' one' → logprob: -13.875602722167969
    7. '==' → logprob: -14.000602722167969
    8. '-' → logprob: -14.125602722167969
    9. '   ' → logprob: -14.875602722167969
    10. '0' → logprob: -16.00060272216797

Token 263: ' states' (ID: 9407)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002932775765657425
    2. ' for' → logprob: -6.127932548522949
    3. '	' → logprob: -7.752932548522949
    4. 'for' → logprob: -9.75293254852295
    5. '	   ' → logprob: -9.75293254852295
    6. '        
' → logprob: -9.87793254852295
    7. ',' → logprob: -10.75293254852295
    8. '   ' → logprob: -10.87793254852295
    9. ' ' → logprob: -11.12793254852295
    10. ':' → logprob: -11.12793254852295

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002978648990392685
    2. ' for' → logprob: -6.002978801727295
    3. 'for' → logprob: -8.002978324890137
    4. '	' → logprob: -9.502978324890137
    5. '
' → logprob: -10.127978324890137
    6. '	for' → logprob: -10.877978324890137
    7. '   ' → logprob: -11.502978324890137
    8. '        
' → logprob: -11.627978324890137
    9. '	   ' → logprob: -12.252978324890137
    10. ',' → logprob: -13.127978324890137

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004322591237723827
    2. ' for' → logprob: -5.504322528839111
    3. 'for' → logprob: -9.00432300567627
    4. '	' → logprob: -9.75432300567627
    5. '
' → logprob: -10.75432300567627
    6. '        
' → logprob: -11.25432300567627
    7. '   ' → logprob: -11.50432300567627
    8. '	for' → logprob: -11.62932300567627
    9. '	   ' → logprob: -12.62932300567627
    10. '```' → logprob: -14.12932300567627

Token 266: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25284916162490845
    2. ' for' → logprob: -1.5028491020202637
    3. '       ' → logprob: -7.002849102020264
    4. '	for' → logprob: -11.752849578857422
    5. '   ' → logprob: -13.002849578857422
    6. ' ' → logprob: -16.252849578857422
    7. '	' → logprob: -16.752849578857422
    8. '        
' → logprob: -16.752849578857422
    9. '  ' → logprob: -18.627849578857422
    10. 'queue' → logprob: -18.877849578857422

Token 267: ' ch' (ID: 549)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -1.1942431926727295
    2. '(ch' → logprob: -1.4442431926727295
    3. 'ch' → logprob: -1.5692431926727295
    4. 'state' → logprob: -2.0692431926727295
    5. ' ch' → logprob: -3.4442431926727295
    6. ' (' → logprob: -3.6942431926727295
    7. '((' → logprob: -4.069243431091309
    8. '(' → logprob: -4.569243431091309
    9. '(c' → logprob: -4.944243431091309
    10. ' state' → logprob: -4.944243431091309

Token 268: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47477418184280396
    2. 'in' → logprob: -0.974774181842804
    3. ' ' → logprob: -8.099774360656738
    4. ',' → logprob: -8.724774360656738
    5. '_in' → logprob: -9.599774360656738
    6. '   ' → logprob: -10.474774360656738
    7. '  ' → logprob: -10.974774360656738
    8. 'for' → logprob: -11.099774360656738
    9. 'import' → logprob: -11.224774360656738
    10. '
' → logprob: -11.349774360656738

Token 269: ' '' (ID: 461)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.7665141820907593
    2. '(chr' → logprob: -2.016514301300049
    3. 'set' → logprob: -2.266514301300049
    4. '{' → logprob: -2.516514301300049
    5. 'range' → logprob: -2.766514301300049
    6. '(ch' → logprob: -2.766514301300049
    7. ' [' → logprob: -2.766514301300049
    8. '[' → logprob: -2.766514301300049
    9. ' set' → logprob: -3.016514301300049
    10. ' range' → logprob: -3.266514301300049

Token 270: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.0007898556068539619
    2. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -7.500789642333984
    3. ''' → logprob: -8.875789642333984
    4. '"' → logprob: -10.750789642333984
    5. ' abc' → logprob: -11.000789642333984
    6. 'range' → logprob: -11.500789642333984
    7. 'abc' → logprob: -11.625789642333984
    8. '012' → logprob: -11.750789642333984
    9. ''+' → logprob: -12.375789642333984
    10. 'ascii' → logprob: -12.375789642333984

Token 271: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.3160804808139801
    2. '':' → logprob: -1.3160804510116577
    3. ' '' → logprob: -6.941080570220947
    4. ''' → logprob: -7.066080570220947
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -7.566080570220947
    6. ' ':' → logprob: -8.066080093383789
    7. ':' → logprob: -9.566080093383789
    8. '':
' → logprob: -10.316080093383789
    9. '):
' → logprob: -11.316080093383789
    10. '':

' → logprob: -11.566080093383789

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021292777732014656
    2. '       ' → logprob: -4.021292686462402
    3. ' if' → logprob: -6.396292686462402
    4. '	       ' → logprob: -7.771292686462402
    5. '<|end|>' → logprob: -8.271292686462402
    6. '   ' → logprob: -8.521292686462402
    7. '	   ' → logprob: -9.271292686462402
    8. ':' → logprob: -10.021292686462402
    9. ' ' → logprob: -10.021292686462402
    10. '    	   ' → logprob: -10.021292686462402

Token 273: ' nxt' (ID: 160200)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0506038665771484
    2. '           ' → logprob: -1.1756038665771484
    3. 'if' → logprob: -1.1756038665771484
    4. 'key' → logprob: -4.050603866577148
    5. ' key' → logprob: -4.925603866577148
    6. 's' → logprob: -5.800603866577148
    7. 'next' → logprob: -6.175603866577148
    8. 'state' → logprob: -6.925603866577148
    9. ' next' → logprob: -7.300603866577148
    10. ' s' → logprob: -7.550603866577148

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024229420349001884
    2. '=' → logprob: -3.7742295265197754
    3. '_state' → logprob: -7.399229526519775
    4. '_key' → logprob: -8.149229049682617
    5. 'state' → logprob: -10.024229049682617
    6. ' ' → logprob: -11.649229049682617
    7. '=(' → logprob: -12.024229049682617
    8. ' =(' → logprob: -12.274229049682617
    9. 'key' → logprob: -12.524229049682617
    10. '   ' → logprob: -13.024229049682617

Token 275: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6978376507759094
    2. 'self' → logprob: -0.6978376507759094
    3. '(self' → logprob: -5.572837829589844
    4. ' (' → logprob: -7.197837829589844
    5. '(' → logprob: -9.197837829589844
    6. '   ' → logprob: -11.322837829589844
    7. '           ' → logprob: -12.072837829589844
    8. ' ' → logprob: -12.197837829589844
    9. '	self' → logprob: -12.572837829589844
    10. '       ' → logprob: -13.947837829589844

Token 276: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.04376259818673134
    2. 'goto' → logprob: -3.168762683868408
    3. '.get' → logprob: -8.54376220703125
    4. '	goto' → logprob: -8.79376220703125
    5. ' ' → logprob: -9.41876220703125
    6. ' goto' → logprob: -9.54376220703125
    7. '.go' → logprob: -9.79376220703125
    8. 'self' → logprob: -10.04376220703125
    9. '.' → logprob: -10.29376220703125
    10. ' .' → logprob: -10.29376220703125

Token 277: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0005975929088890553
    2. '((' → logprob: -7.8755974769592285
    3. '(' → logprob: -9.875597953796387
    4. '.' → logprob: -9.875597953796387
    5. 'get' → logprob: -9.875597953796387
    6. '[(' → logprob: -10.000597953796387
    7. '.setdefault' → logprob: -12.125597953796387
    8. ' .' → logprob: -12.250597953796387
    9. '0' → logprob: -13.125597953796387
    10. '   ' → logprob: -13.750597953796387

Token 278: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0788901224732399
    2. '(' → logprob: -2.578890085220337
    3. ' (' → logprob: -15.078889846801758
    4. ' ' → logprob: -17.203889846801758
    5. '[(' → logprob: -17.828889846801758
    6. ' ((' → logprob: -17.828889846801758
    7. '(
' → logprob: -18.328889846801758
    8. '({' → logprob: -19.203889846801758
    9. '   ' → logprob: -21.078889846801758
    10. '  ' → logprob: -21.078889846801758

Token 279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.37501335144043
    4. '   ' → logprob: -18.87501335144043
    5. ' (' → logprob: -19.00001335144043
    6. '۰' → logprob: -20.50001335144043
    7. '{' → logprob: -20.87501335144043
    8. ')' → logprob: -21.25001335144043
    9. '(
' → logprob: -21.62501335144043
    10. '[' → logprob: -21.62501335144043

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034297199454158545
    2. ',ch' → logprob: -8.000343322753906
    3. ' ,' → logprob: -11.875343322753906
    4. ',
' → logprob: -16.000343322753906
    5. ' ' → logprob: -16.500343322753906
    6. ',char' → logprob: -16.625343322753906
    7. '   ' → logprob: -17.000343322753906
    8. '‌,' → logprob: -17.000343322753906
    9. '',' → logprob: -17.125343322753906
    10. ',c' → logprob: -17.500343322753906

Token 281: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.005236360710114241
    2. ' ch' → logprob: -5.2552361488342285
    3. '[ch' → logprob: -13.755236625671387
    4. ' ' → logprob: -14.630236625671387
    5. '	ch' → logprob: -14.880236625671387
    6. '(ch' → logprob: -15.505236625671387
    7. ''ch' → logprob: -15.755236625671387
    8. ',ch' → logprob: -15.880236625671387
    9. '   ' → logprob: -16.25523567199707
    10. '_ch' → logprob: -16.63023567199707

Token 282: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5591905117034912
    2. '),' → logprob: -1.1841905117034912
    3. ',' → logprob: -2.559190511703491
    4. '))' → logprob: -3.559190511703491
    5. ')
' → logprob: -4.55919075012207
    6. '))
' → logprob: -5.18419075012207
    7. ' )' → logprob: -8.30919075012207
    8. ' ),' → logprob: -9.43419075012207
    9. ' )
' → logprob: -10.43419075012207
    10. ' ,' → logprob: -11.05919075012207

Token 283: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016051262617111206
    2. ' ' → logprob: -4.141051292419434
    3. 'None' → logprob: -11.391051292419434
    4. ' None' → logprob: -12.641051292419434
    5. ')' → logprob: -13.516051292419434
    6. '   ' → logprob: -14.766051292419434
    7. '  ' → logprob: -15.141051292419434
    8. ' ' → logprob: -16.016050338745117
    9. '    ' → logprob: -16.141050338745117
    10. ' -' → logprob: -16.391050338745117

Token 284: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.027608178555965424
    2. ')' → logprob: -3.6526081562042236
    3. '           ' → logprob: -6.777608394622803
    4. ' )
' → logprob: -8.902607917785645
    5. '):
' → logprob: -11.402607917785645
    6. ')
' → logprob: -11.652607917785645
    7. '       ' → logprob: -12.277607917785645
    8. ' )' → logprob: -12.527607917785645
    9. ')

' → logprob: -13.902607917785645
    10. '   ' → logprob: -14.152607917785645

Token 285: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006004398223012686
    2. ' if' → logprob: -5.381004333496094
    3. 'if' → logprob: -7.506004333496094
    4. '       ' → logprob: -7.506004333496094
    5. '   ' → logprob: -9.131004333496094
    6. '	       ' → logprob: -9.506004333496094
    7. '		' → logprob: -10.381004333496094
    8. ' ' → logprob: -10.881004333496094
    9. '	   ' → logprob: -11.381004333496094
    10. '	if' → logprob: -11.631004333496094

Token 286: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0223296880722046
    2. ' if' → logprob: -1.0223296880722046
    3. '           ' → logprob: -1.2723296880722046
    4. ' ' → logprob: -8.897329330444336
    5. '	if' → logprob: -9.647329330444336
    6. '	       ' → logprob: -10.147329330444336
    7. '		' → logprob: -10.772329330444336
    8. '   ' → logprob: -11.022329330444336
    9. '       ' → logprob: -12.022329330444336
    10. 'If' → logprob: -12.522329330444336

Token 287: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01815837249159813
    2. ' nxt' → logprob: -4.018158435821533
    3. '	n' → logprob: -12.143157958984375
    4. '(n' → logprob: -14.018157958984375
    5. '   ' → logprob: -14.268157958984375
    6. ' n' → logprob: -14.643157958984375
    7. ' ' → logprob: -14.768157958984375
    8. '  ' → logprob: -15.518157958984375
    9. '[n' → logprob: -15.893157958984375
    10. 'n't' → logprob: -16.268157958984375

Token 288: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0024925414472818375
    2. 'is' → logprob: -6.002492427825928
    3. ' not' → logprob: -12.002492904663086
    4. ')' → logprob: -12.752492904663086
    5. '    ' → logprob: -13.002492904663086
    6. '            ' → logprob: -13.627492904663086
    7. ' isn't' → logprob: -13.627492904663086
    8. ' ' → logprob: -14.002492904663086
    9. ' )' → logprob: -14.252492904663086
    10. '	is' → logprob: -15.002492904663086

Token 289: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06266749650239944
    2. ' not' → logprob: -2.8126676082611084
    3. 'None' → logprob: -7.312667369842529
    4. ' None' → logprob: -11.562667846679688
    5. 'n' → logprob: -12.187667846679688
    6. '	not' → logprob: -12.187667846679688
    7. 'none' → logprob: -12.812667846679688
    8. '0' → logprob: -12.812667846679688
    9. ' ' → logprob: -13.062667846679688
    10. 'Not' → logprob: -13.312667846679688

Token 290: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.407366916188039e-05
    2. ' None' → logprob: -9.875054359436035
    3. 'none' → logprob: -13.250054359436035
    4. 'not' → logprob: -14.875054359436035
    5. '_None' → logprob: -15.375054359436035
    6. '   ' → logprob: -16.37505340576172
    7. 'N' → logprob: -16.50005340576172
    8. '0' → logprob: -16.75005340576172
    9. '=None' → logprob: -17.12505340576172
    10. '       ' → logprob: -17.75005340576172

Token 291: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12645885348320007
    2. ':' → logprob: -2.3764588832855225
    3. '               ' → logprob: -3.7514588832855225
    4. '):
' → logprob: -6.251458644866943
    5. ' and' → logprob: -8.251459121704102
    6. '           ' → logprob: -9.126459121704102
    7. ' :
' → logprob: -10.251459121704102
    8. ',' → logprob: -10.626459121704102
    9. '):' → logprob: -10.751459121704102
    10. '():
' → logprob: -11.626459121704102

Token 292: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025329671800136566
    2. 'queue' → logprob: -3.90032958984375
    3. ' queue' → logprob: -5.40032958984375
    4. 'self' → logprob: -8.52532958984375
    5. '           ' → logprob: -10.02532958984375
    6. '   ' → logprob: -12.27532958984375
    7. '.queue' → logprob: -12.90032958984375
    8. '(queue' → logprob: -13.02532958984375
    9. '_queue' → logprob: -13.27532958984375
    10. '	queue' → logprob: -13.27532958984375

Token 293: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0035072958562523127
    2. '                   ' → logprob: -6.753507137298584
    3. ' self' → logprob: -6.753507137298584
    4. '               ' → logprob: -7.128507137298584
    5. '   ' → logprob: -8.753507614135742
    6. 'queue' → logprob: -8.753507614135742
    7. '           ' → logprob: -10.253507614135742
    8. ' ' → logprob: -11.753507614135742
    9. '	self' → logprob: -13.003507614135742
    10. ' queue' → logprob: -13.503507614135742

Token 294: '.fail' (ID: 48738)
  Prédit: '.fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fail' → logprob: -0.10025336593389511
    2. 'fail' → logprob: -2.3502533435821533
    3. ' fail' → logprob: -10.475253105163574
    4. '	fail' → logprob: -11.600253105163574
    5. 'queue' → logprob: -12.100253105163574
    6. '.queue' → logprob: -13.225253105163574
    7. '_fail' → logprob: -14.600253105163574
    8. '.' → logprob: -14.725253105163574
    9. ' .' → logprob: -15.600253105163574
    10. 'fails' → logprob: -15.600253105163574

Token 295: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0076858894899487495
    2. '[(' → logprob: -4.882685661315918
    3. '[' → logprob: -9.632685661315918
    4. '[self' → logprob: -11.882685661315918
    5. '[next' → logprob: -12.257685661315918
    6. 'n' → logprob: -13.882685661315918
    7. '(n' → logprob: -14.757685661315918
    8. '[((' → logprob: -14.882685661315918
    9. '[now' → logprob: -15.882685661315918
    10. ' [' → logprob: -15.882685661315918

Token 296: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -6.153795766294934e-06
    2. '[' → logprob: -12.625005722045898
    3. '(' → logprob: -13.125005722045898
    4. 't' → logprob: -14.750005722045898
    5. 'ext' → logprob: -16.2500057220459
    6. '[(' → logprob: -16.8750057220459
    7. 'st' → logprob: -17.1250057220459
    8. ']' → logprob: -17.3750057220459
    9. '0' → logprob: -17.6250057220459
    10. 'ct' → logprob: -17.7500057220459

Token 297: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018454380333423615
    2. '=' → logprob: -4.518454551696777
    3. ' =' → logprob: -5.143454551696777
    4. ']=' → logprob: -6.643454551696777
    5. ')' → logprob: -8.893454551696777
    6. ' ]' → logprob: -9.393454551696777
    7. '[' → logprob: -11.643454551696777
    8. ' ' → logprob: -12.018454551696777
    9. '   ' → logprob: -13.518454551696777
    10. ')=' → logprob: -14.393454551696777

Token 298: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.72520637512207
    4. ']' → logprob: -17.22520637512207
    5. ')' → logprob: -17.85020637512207
    6. '[' → logprob: -17.97520637512207
    7. ']=' → logprob: -18.60020637512207
    8. '=
' → logprob: -19.85020637512207
    9. ')=' → logprob: -19.85020637512207
    10. '＝' → logprob: -20.10020637512207

Token 299: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۰' → logprob: -19.625001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '00' → logprob: -22.500001907348633
    6. '０' → logprob: -22.750001907348633
    7. '000' → logprob: -23.125001907348633
    8. '০' → logprob: -23.750001907348633
    9. '  ' → logprob: -24.000001907348633
    10. '٠' → logprob: -24.500001907348633

Token 300: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -20.25
    4. '   ' → logprob: -21.375
    5. '০' → logprob: -22.875
    6. '00' → logprob: -23.125
    7. '000' → logprob: -23.25
    8. '０' → logprob: -23.375
    9. '  ' → logprob: -24.3125
    10. '```' → logprob: -24.5

Token 301: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.5107177862082608e-05
    2. ' queue' → logprob: -11.125024795532227
    3. ',' → logprob: -12.500024795532227
    4. 'queue' → logprob: -13.125024795532227
    5. '           ' → logprob: -13.375024795532227
    6. '		       ' → logprob: -14.000024795532227
    7. '       ' → logprob: -15.125024795532227
    8. '              ' → logprob: -15.250024795532227
    9. '<|end|>' → logprob: -15.375024795532227
    10. '.queue' → logprob: -15.500024795532227

Token 302: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003039154689759016
    2. ' queue' → logprob: -6.003039360046387
    3. '           ' → logprob: -8.003039360046387
    4. 'queue' → logprob: -8.878039360046387
    5. '```' → logprob: -10.753039360046387
    6. '       ' → logprob: -11.128039360046387
    7. '.queue' → logprob: -11.878039360046387
    8. ',' → logprob: -11.878039360046387
    9. '(queue' → logprob: -11.878039360046387
    10. 'Queue' → logprob: -12.003039360046387

Token 303: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.005671606864780188
    2. '               ' → logprob: -5.255671501159668
    3. ' queue' → logprob: -7.755671501159668
    4. '           ' → logprob: -11.755671501159668
    5. '	queue' → logprob: -14.255671501159668
    6. '       ' → logprob: -14.505671501159668
    7. '   ' → logprob: -15.005671501159668
    8. '.queue' → logprob: -15.880671501159668
    9. '(queue' → logprob: -17.380672454833984
    10. '_queue' → logprob: -17.755672454833984

Token 304: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011661761673167348
    2. '.' → logprob: -6.876166343688965
    3. '.enqueue' → logprob: -9.501166343688965
    4. '.put' → logprob: -10.251166343688965
    5. '.extend' → logprob: -11.001166343688965
    6. '.app' → logprob: -12.876166343688965
    7. '.add' → logprob: -13.126166343688965
    8. '.push' → logprob: -14.251166343688965
    9. ').' → logprob: -14.751166343688965
    10. '.ap' → logprob: -15.626166343688965

Token 305: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.500004768371582
    3. 'n' → logprob: -13.750004768371582
    4. '((' → logprob: -15.375004768371582
    5. '(next' → logprob: -17.8750057220459
    6. ' (' → logprob: -19.0000057220459
    7. '(
' → logprob: -19.3750057220459
    8. '	n' → logprob: -19.6250057220459
    9. '(nx' → logprob: -19.7500057220459
    10. ')n' → logprob: -20.3750057220459

Token 306: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.9361264946837764e-07
    2. 'n' → logprob: -17.5
    3. 't' → logprob: -18.25
    4. 'q' → logprob: -18.375
    5. 'j' → logprob: -18.625
    6. '(n' → logprob: -18.75
    7. 'x' → logprob: -18.75
    8. ' nxt' → logprob: -18.75
    9. '(' → logprob: -19.0
    10. 'o' → logprob: -19.75

Token 307: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000940046738833189
    2. '       ' → logprob: -7.125939846038818
    3. ')
' → logprob: -9.125940322875977
    4. '
' → logprob: -11.500940322875977
    5. ' )' → logprob: -12.375940322875977
    6. '   ' → logprob: -12.625940322875977
    7. '<|end|>' → logprob: -13.125940322875977
    8. '           ' → logprob: -13.625940322875977
    9. '")' → logprob: -14.000940322875977
    10. '```' → logprob: -14.500940322875977

Token 308: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22931762039661407
    2. '
' → logprob: -1.6043176651000977
    3. '        
' → logprob: -6.479317665100098
    4. '   ' → logprob: -6.604317665100098
    5. '```' → logprob: -7.854317665100098
    6. '    
' → logprob: -8.604317665100098
    7. '\n' → logprob: -9.604317665100098
    8. 'for' → logprob: -9.729317665100098
    9. '  
' → logprob: -9.979317665100098
    10. '	' → logprob: -10.354317665100098

Token 309: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7965303659439087
    2. '       ' → logprob: -1.0465303659439087
    3. 'for' → logprob: -2.296530246734619
    4. ' else' → logprob: -2.671530246734619
    5. ' for' → logprob: -4.296530246734619
    6. '
' → logprob: -4.546530246734619
    7. 'self' → logprob: -7.046530246734619
    8. '#' → logprob: -7.171530246734619
    9. 'elif' → logprob: -7.421530246734619
    10. '   ' → logprob: -7.546530246734619

Token 310: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7057246565818787
    2. '               ' → logprob: -0.8307246565818787
    3. ':' → logprob: -2.7057247161865234
    4. '           ' → logprob: -6.580724716186523
    5. ' :
' → logprob: -6.580724716186523
    6. ' :' → logprob: -8.580724716186523
    7. '):
' → logprob: -8.955724716186523
    8. '              ' → logprob: -9.205724716186523
    9. ' self' → logprob: -9.330724716186523
    10. '       ' → logprob: -9.580724716186523

Token 311: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0160770695656538
    2. 'self' → logprob: -4.141077041625977
    3. ' self' → logprob: -10.766077041625977
    4. '	           ' → logprob: -11.891077041625977
    5. '           ' → logprob: -12.266077041625977
    6. '              ' → logprob: -13.016077041625977
    7. '		       ' → logprob: -13.266077041625977
    8. '	self' → logprob: -13.266077041625977
    9. '   ' → logprob: -14.016077041625977
    10. '			' → logprob: -14.141077041625977

Token 312: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007011363282799721
    2. ' self' → logprob: -5.007011413574219
    3. '               ' → logprob: -8.132011413574219
    4. '                   ' → logprob: -14.507011413574219
    5. '	self' → logprob: -14.632011413574219
    6. '   ' → logprob: -14.757011413574219
    7. '           ' → logprob: -15.132011413574219
    8. ' ' → logprob: -15.507011413574219
    9. '0' → logprob: -17.13201141357422
    10. '              ' → logprob: -17.38201141357422

Token 313: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.009792094118893147
    2. 'goto' → logprob: -4.634792327880859
    3. '.go' → logprob: -11.00979232788086
    4. '.fail' → logprob: -11.63479232788086
    5. '	goto' → logprob: -12.38479232788086
    6. '.setdefault' → logprob: -13.50979232788086
    7. 'Goto' → logprob: -13.63479232788086
    8. '.' → logprob: -13.75979232788086
    9. 'got' → logprob: -14.63479232788086
    10. '.g' → logprob: -14.75979232788086

Token 314: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.7835754988482222e-05
    2. '[' → logprob: -11.375018119812012
    3. '(' → logprob: -12.000018119812012
    4. '((' → logprob: -16.125017166137695
    5. '[
' → logprob: -16.750017166137695
    6. '[((' → logprob: -19.125017166137695
    7. ' (' → logprob: -19.750017166137695
    8. '   ' → logprob: -19.875017166137695
    9. ' [(' → logprob: -20.000017166137695
    10. '
' → logprob: -20.125017166137695

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.000000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '   ' → logprob: -19.250001907348633
    5. ')' → logprob: -20.000001907348633
    6. ' (' → logprob: -20.625001907348633
    7. '۰' → logprob: -20.750001907348633
    8. '```' → logprob: -21.125001907348633
    9. '  ' → logprob: -21.500001907348633
    10. '[' → logprob: -22.000001907348633

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.190178904333152e-05
    2. ' ,' → logprob: -10.500031471252441
    3. ',ch' → logprob: -12.500031471252441
    4. ',
' → logprob: -14.500031471252441
    5. ' ' → logprob: -17.125032424926758
    6. '',' → logprob: -17.750032424926758
    7. '‌,' → logprob: -18.375032424926758
    8. ',char' → logprob: -19.000032424926758
    9. ',c' → logprob: -19.375032424926758
    10. ')' → logprob: -19.500032424926758

Token 317: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -9.662937372922897e-05
    2. ' ch' → logprob: -9.250096321105957
    3. '[ch' → logprob: -14.750096321105957
    4. ''ch' → logprob: -17.125097274780273
    5. 'c' → logprob: -17.625097274780273
    6. '	ch' → logprob: -17.875097274780273
    7. ',ch' → logprob: -18.000097274780273
    8. '_ch' → logprob: -18.125097274780273
    9. ' ' → logprob: -18.500097274780273
    10. '-ch' → logprob: -18.625097274780273

Token 318: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003890854713972658
    2. ']=' → logprob: -8.000389099121094
    3. ' ]' → logprob: -9.875389099121094
    4. ']=(' → logprob: -13.500389099121094
    5. ')]' → logprob: -15.500389099121094
    6. ')' → logprob: -15.750389099121094
    7. '=' → logprob: -15.875389099121094
    8. ']=-' → logprob: -16.000389099121094
    9. '   ' → logprob: -16.625389099121094
    10. ']
' → logprob: -16.875389099121094

Token 319: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. ']=' → logprob: -17.578889846801758
    4. ')=' → logprob: -18.453889846801758
    5. '＝' → logprob: -18.578889846801758
    6. ')' → logprob: -18.578889846801758
    7. ']' → logprob: -18.828889846801758
    8. '=(' → logprob: -18.828889846801758
    9. '=
' → logprob: -18.953889846801758
    10. ' ' → logprob: -19.203889846801758

Token 320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -20.750003814697266
    4. '00' → logprob: -23.000003814697266
    5. '000' → logprob: -23.250003814697266
    6. '   ' → logprob: -23.500003814697266
    7. '  ' → logprob: -23.750003814697266
    8. ' ' → logprob: -24.250003814697266
    9. '０' → logprob: -24.250003814697266
    10. '٠' → logprob: -25.000003814697266

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۰' → logprob: -20.375
    4. '00' → logprob: -22.0
    5. '000' → logprob: -22.8125
    6. '０' → logprob: -23.3125
    7. '  ' → logprob: -23.625
    8. '٠' → logprob: -23.625
    9. '০' → logprob: -23.75
    10. '   ' → logprob: -23.875

Token 322: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029943475499749184
    2. '       ' → logprob: -4.029943466186523
    3. '<|end|>' → logprob: -5.279943466186523
    4. '\n' → logprob: -6.404943466186523
    5. '  
' → logprob: -6.654943466186523
    6. '        
' → logprob: -6.779943466186523
    7. '    
' → logprob: -6.904943466186523
    8. ' 
' → logprob: -7.279943466186523
    9. '	
' → logprob: -8.654943466186523
    10. '		
' → logprob: -9.029943466186523

Token 323: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5718013644218445
    2. '<|end|>' → logprob: -0.9468013644218445
    3. '\n' → logprob: -3.5718014240264893
    4. '       ' → logprob: -4.44680118560791
    5. ')' → logprob: -6.32180118560791
    6. '<|end|>' → logprob: -6.57180118560791
    7. '```' → logprob: -7.19680118560791
    8. 'newline' → logprob: -7.32180118560791
    9. '' → logprob: -7.57180118560791
    10. '#' → logprob: -7.69680118560791

Token 324: ' Add' (ID: 4063)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: ' fallback' (ID: 66264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: ' loop' (ID: 11453)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ' root' (ID: 6577)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. 'root' → logprob: -12.500006675720215
    3. 'state' → logprob: -13.250006675720215
    4. 'self' → logprob: -13.875006675720215
    5. ' ' → logprob: -14.375006675720215
    6. 'zero' → logprob: -18.75000762939453
    7. 'the' → logprob: -18.87500762939453
    8. 'it' → logprob: -19.25000762939453
    9. ' itself' → logprob: -19.37500762939453
    10. 'empty' → logprob: -19.75000762939453

Token 329: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7498118877410889
    2. '<|end|>' → logprob: -1.1248118877410889
    3. '       ' → logprob: -2.249811887741089
    4. '\n' → logprob: -2.624811887741089
    5. '<|end|>' → logprob: -4.624812126159668
    6. 'newline' → logprob: -5.624812126159668
    7. '```' → logprob: -5.999812126159668
    8. '        
' → logprob: -6.124812126159668
    9. ')' → logprob: -6.624812126159668
    10. '  
' → logprob: -6.749812126159668

Token 330: ' missing' (ID: 12486)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.20950289070606232
    2. ' ch' → logprob: -1.709502935409546
    3. 'missing' → logprob: -5.959502696990967
    4. '(ch' → logprob: -6.209502696990967
    5. ' missing' → logprob: -7.084502696990967
    6. ' ' → logprob: -7.959502696990967
    7. '(' → logprob: -8.209503173828125
    8. ' the' → logprob: -8.334503173828125
    9. 'characters' → logprob: -8.334503173828125
    10. ' all' → logprob: -8.459503173828125

Token 331: ' edges' (ID: 22569)
  Prédit: ' transitions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transitions' → logprob: -0.8208792805671692
    2. ' characters' → logprob: -1.4458792209625244
    3. 'trans' → logprob: -1.6958792209625244
    4. 'chars' → logprob: -3.1958792209625244
    5. 'characters' → logprob: -3.4458792209625244
    6. ' letters' → logprob: -3.8208792209625244
    7. '<|end|>' → logprob: -4.4458794593811035
    8. ' edges' → logprob: -4.5708794593811035
    9. ' chars' → logprob: -5.0708794593811035
    10. ' keys' → logprob: -5.9458794593811035

Token 332: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015893474221229553
    2. 'while' → logprob: -4.515893459320068
    3. '   ' → logprob: -6.015893459320068
    4. '
' → logprob: -6.390893459320068
    5. ' while' → logprob: -8.390893936157227
    6. '        
' → logprob: -8.390893936157227
    7. '```' → logprob: -9.765893936157227
    8. '    
' → logprob: -9.890893936157227
    9. 'for' → logprob: -10.140893936157227
    10. '	while' → logprob: -10.390893936157227

Token 334: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1051720455288887
    2. '       ' → logprob: -2.3551721572875977
    3. ' while' → logprob: -5.355172157287598
    4. '   ' → logprob: -8.480172157287598
    5. '	while' → logprob: -11.105172157287598
    6. '
' → logprob: -12.480172157287598
    7. '```' → logprob: -13.730172157287598
    8. '        
' → logprob: -13.980172157287598
    9. ' ' → logprob: -14.980172157287598
    10. 'While' → logprob: -14.980172157287598

Token 335: ' BFS' (ID: 190016)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -5.2166411478538066e-05
    2. ' while' → logprob: -10.250052452087402
    3. '       ' → logprob: -11.000052452087402
    4. '	while' → logprob: -17.625051498413086
    5. '   ' → logprob: -18.750051498413086
    6. '
' → logprob: -18.875051498413086
    7. 'While' → logprob: -19.500051498413086
    8. '        
' → logprob: -19.875051498413086
    9. 'for' → logprob: -24.375051498413086
    10. '#' → logprob: -24.500051498413086

Token 336: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012954773847013712
    2. ' while' → logprob: -8.00129508972168
    3. ' queue' → logprob: -8.00129508972168
    4. ' for' → logprob: -8.12629508972168
    5. 'while' → logprob: -9.37629508972168
    6. '<|end|>' → logprob: -9.75129508972168
    7. ' to' → logprob: -10.37629508972168
    8. ',' → logprob: -10.62629508972168
    9. '   ' → logprob: -11.00129508972168
    10. '
' → logprob: -11.00129508972168

Token 337: ' build' (ID: 3024)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.2001289278268814
    2. 'process' → logprob: -1.9501289129257202
    3. ' build' → logprob: -3.7001290321350098
    4. 'build' → logprob: -5.20012903213501
    5. 'populate' → logprob: -6.20012903213501
    6. ' update' → logprob: -6.57512903213501
    7. ' while' → logprob: -6.82512903213501
    8. ' populate' → logprob: -7.20012903213501
    9. ' fill' → logprob: -7.45012903213501
    10. 'while' → logprob: -7.57512903213501

Token 338: ' fail' (ID: 7111)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6200527548789978
    2. ' queue' → logprob: -1.6200528144836426
    3. ' while' → logprob: -2.6200528144836426
    4. 'while' → logprob: -2.7450528144836426
    5. 'fail' → logprob: -3.4950528144836426
    6. '   ' → logprob: -3.6200528144836426
    7. 'queue' → logprob: -3.7450528144836426
    8. ' fail' → logprob: -4.245052814483643
    9. ' self' → logprob: -4.370052814483643
    10. ' failure' → logprob: -4.995052814483643

Token 339: ' links' (ID: 9362)
  Prédit: ' links'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' links' → logprob: -0.2585190534591675
    2. '   ' → logprob: -2.258519172668457
    3. '_links' → logprob: -2.758519172668457
    4. '       ' → logprob: -3.883519172668457
    5. ' queue' → logprob: -4.008519172668457
    6. 'links' → logprob: -4.008519172668457
    7. 'queue' → logprob: -7.008519172668457
    8. 'ure' → logprob: -7.508519172668457
    9. '()' → logprob: -7.758519172668457
    10. 'ures' → logprob: -8.133519172668457

Token 340: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030442550778388977
    2. '
' → logprob: -3.530442476272583
    3. '        
' → logprob: -8.405442237854004
    4. '  
' → logprob: -8.655442237854004
    5. '<|end|>' → logprob: -9.655442237854004
    6. ' while' → logprob: -9.905442237854004
    7. 'while' → logprob: -10.155442237854004
    8. '   ' → logprob: -10.280442237854004
    9. '```' → logprob: -10.905442237854004
    10. ' 
' → logprob: -11.030442237854004

Token 341: ' merge' (ID: 20345)
  Prédit: ' propagate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' propagate' → logprob: -0.9265608191490173
    2. 'prop' → logprob: -1.426560878753662
    3. 'output' → logprob: -2.301560878753662
    4. 'update' → logprob: -2.676560878753662
    5. 'out' → logprob: -3.051560878753662
    6. 'process' → logprob: -3.551560878753662
    7. 'populate' → logprob: -4.051560878753662
    8. '       ' → logprob: -4.051560878753662
    9. ' output' → logprob: -4.176560878753662
    10. '   ' → logprob: -4.426560878753662

Token 342: ' output' (ID: 4733)
  Prédit: ' outputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' outputs' → logprob: -0.7896692752838135
    2. ' output' → logprob: -1.5396692752838135
    3. ' out' → logprob: -1.7896692752838135
    4. 'output' → logprob: -2.9146692752838135
    5. 'outputs' → logprob: -2.9146692752838135
    6. 'out' → logprob: -4.039669036865234
    7. '   ' → logprob: -4.164669036865234
    8. '       ' → logprob: -4.289669036865234
    9. ' self' → logprob: -5.289669036865234
    10. 'self' → logprob: -5.789669036865234

Token 343: ' sets' (ID: 11982)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14723777770996094
    2. '
' → logprob: -2.022237777709961
    3. '        
' → logprob: -6.397237777709961
    4. ' queue' → logprob: -6.897237777709961
    5. ' for' → logprob: -8.272237777709961
    6. 'queue' → logprob: -8.397237777709961
    7. '  
' → logprob: -8.772237777709961
    8. '   ' → logprob: -8.772237777709961
    9. '()
' → logprob: -9.022237777709961
    10. '_queue' → logprob: -9.272237777709961

Token 344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4297393560409546
    2. '
' → logprob: -1.0547393560409546
    3. '        
' → logprob: -7.429739475250244
    4. '  
' → logprob: -8.679738998413086
    5. '```' → logprob: -9.554738998413086
    6. ' while' → logprob: -10.429738998413086
    7. '<|end|>' → logprob: -10.429738998413086
    8. '    
' → logprob: -10.679738998413086
    9. ',
' → logprob: -10.679738998413086
    10. '   ' → logprob: -10.929738998413086

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034552767872810364
    2. '
' → logprob: -3.409552812576294
    3. '        
' → logprob: -7.784552574157715
    4. '```' → logprob: -8.284552574157715
    5. '  
' → logprob: -9.159552574157715
    6. ' while' → logprob: -10.534552574157715
    7. 'while' → logprob: -10.659552574157715
    8. '<|end|>' → logprob: -10.784552574157715
    9. '   ' → logprob: -10.909552574157715
    10. '    
' → logprob: -11.159552574157715

Token 346: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7644293904304504
    2. 'while' (adapté à ' while') → logprob: -1.0144293308258057
    3. '       ' → logprob: -1.7644293308258057
    4. '   ' → logprob: -8.014429092407227
    5. '	while' → logprob: -9.514429092407227
    6. '
' → logprob: -9.639429092407227
    7. '        
' → logprob: -11.139429092407227
    8. ' 
' → logprob: -12.014429092407227
    9. '	' → logprob: -12.514429092407227
    10. ' ' → logprob: -12.889429092407227

Token 347: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.023297304287552834
    2. ' queue' → logprob: -3.7732973098754883
    3. 'len' → logprob: -9.898297309875488
    4. '(queue' → logprob: -14.273297309875488
    5. ' len' → logprob: -14.523297309875488
    6. '	queue' → logprob: -15.023297309875488
    7. '   ' → logprob: -17.773296356201172
    8. 'Queue' → logprob: -18.023296356201172
    9. ' ' → logprob: -18.273296356201172
    10. '.queue' → logprob: -18.523296356201172

Token 348: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018155979923903942
    2. ':
' → logprob: -6.3768157958984375
    3. '.p' → logprob: -9.376815795898438
    4. '.append' → logprob: -11.751815795898438
    5. '.' → logprob: -12.626815795898438
    6. ':not' → logprob: -12.626815795898438
    7. '):' → logprob: -13.001815795898438
    8. '.pop' → logprob: -13.251815795898438
    9. '.:' → logprob: -13.376815795898438
    10. 'opleft' → logprob: -13.626815795898438

Token 349: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07748771458864212
    2. ' current' → logprob: -2.9524877071380615
    3. ' queue' → logprob: -5.077487945556641
    4. ' state' → logprob: -5.327487945556641
    5. '       ' → logprob: -5.702487945556641
    6. 'current' → logprob: -6.327487945556641
    7. 'state' → logprob: -6.577487945556641
    8. ' node' → logprob: -6.952487945556641
    9. ' s' → logprob: -7.202487945556641
    10. 'u' → logprob: -7.452487945556641

Token 350: ' r' (ID: 428)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.22821547091007233
    2. 'r' (adapté à ' r') → logprob: -1.7282154560089111
    3. 'current' → logprob: -3.978215456008911
    4. ' r' → logprob: -5.22821569442749
    5. '   ' → logprob: -6.85321569442749
    6. ' state' → logprob: -7.35321569442749
    7. 'u' → logprob: -7.72821569442749
    8. ' current' → logprob: -9.228215217590332
    9. 'curr' → logprob: -9.603215217590332
    10. 'cur' → logprob: -11.103215217590332

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282049119472504
    2. 'state' → logprob: -2.7378203868865967
    3. '=' → logprob: -3.3628203868865967
    4. 'node' → logprob: -6.112820625305176
    5. 'e' → logprob: -6.362820625305176
    6. 't' → logprob: -6.737820625305176
    7. '_state' → logprob: -7.612820625305176
    8. 'current' → logprob: -7.862820625305176
    9. 'r' → logprob: -8.112820625305176
    10. 'oot' → logprob: -8.237820625305176

Token 352: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.20141343772411346
    2. ' queue' → logprob: -1.7014133930206299
    3. '	queue' → logprob: -16.076414108276367
    4. 'que' → logprob: -17.951414108276367
    5. ' ' → logprob: -18.451414108276367
    6. '   ' → logprob: -19.951414108276367
    7. '(queue' → logprob: -19.951414108276367
    8. '.queue' → logprob: -20.201414108276367
    9. 'deque' → logprob: -21.326414108276367
    10. '  ' → logprob: -21.576414108276367

Token 353: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.5822400857578032e-05
    2. '.' → logprob: -11.000025749206543
    3. '.pop' → logprob: -12.125025749206543
    4. '=' → logprob: -13.375025749206543
    5. 'p' → logprob: -13.500025749206543
    6. ' =' → logprob: -14.875025749206543
    7. ' .' → logprob: -15.375025749206543
    8. ' p' → logprob: -16.37502670288086
    9. '   ' → logprob: -17.62502670288086
    10. '=p' → logprob: -17.75002670288086

Token 354: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.011077405884861946
    2. 'op' → logprob: -4.511077404022217
    3. 'ople' → logprob: -10.511077880859375
    4. 'opl' → logprob: -13.261077880859375
    5. 'opf' → logprob: -15.261077880859375
    6. 'opup' → logprob: -15.636077880859375
    7. 'opt' → logprob: -16.761077880859375
    8. 'opy' → logprob: -17.511077880859375
    9. 'ope' → logprob: -17.636077880859375
    10. 'oplevel' → logprob: -17.886077880859375

Token 355: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012387090362608433
    2. ')' → logprob: -5.012387275695801
    3. '()
' → logprob: -5.262387275695801
    4. '           ' → logprob: -8.3873872756958
    5. ',' → logprob: -10.2623872756958
    6. ']' → logprob: -10.3873872756958
    7. '
' → logprob: -10.3873872756958
    8. '(' → logprob: -10.6373872756958
    9. '       ' → logprob: -10.7623872756958
    10. ' ' → logprob: -10.7623872756958

Token 356: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4162905216217041
    2. 'for' → logprob: -1.166290521621704
    3. ' for' → logprob: -3.541290521621704
    4. '   ' → logprob: -12.416290283203125
    5. '       ' → logprob: -12.666290283203125
    6. '	for' → logprob: -12.791290283203125
    7. '               ' → logprob: -13.041290283203125
    8. '            
' → logprob: -14.166290283203125
    9. '          ' → logprob: -14.416290283203125
    10. '		' → logprob: -14.666290283203125

Token 357: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.376848902320489e-05
    2. ' for' → logprob: -9.750093460083008
    3. '           ' → logprob: -10.250093460083008
    4. '   ' → logprob: -17.875093460083008
    5. '            
' → logprob: -18.750093460083008
    6. '       ' → logprob: -19.250093460083008
    7. '	for' → logprob: -19.625093460083008
    8. '               ' → logprob: -19.750093460083008
    9. ' ' → logprob: -22.125093460083008
    10. '                   ' → logprob: -22.750093460083008

Token 358: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0007842566701583564
    2. 'c' → logprob: -7.500784397125244
    3. '(ch' → logprob: -8.625783920288086
    4. 'a' → logprob: -10.250783920288086
    5. ' ch' → logprob: -11.625783920288086
    6. 'char' → logprob: -13.000783920288086
    7. '(c' → logprob: -13.125783920288086
    8. 'chr' → logprob: -13.625783920288086
    9. '[ch' → logprob: -14.000783920288086
    10. 'key' → logprob: -14.750783920288086

Token 359: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03373076021671295
    2. 'in' → logprob: -3.4087307453155518
    3. ' ' → logprob: -9.533730506896973
    4. 'a' → logprob: -13.033730506896973
    5. 'n' → logprob: -13.158730506896973
    6. ',' → logprob: -13.533730506896973
    7. '  ' → logprob: -14.158730506896973
    8. 's' → logprob: -14.283730506896973
    9. '	in' → logprob: -14.283730506896973
    10. '<|end|>' → logprob: -14.283730506896973

Token 360: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6826969981193542
    2. ''' → logprob: -0.8076969981193542
    3. ''a' → logprob: -3.682697057723999
    4. ''al' → logprob: -4.93269681930542
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.05769681930542
    6. ''ch' → logprob: -5.80769681930542
    7. ''z' → logprob: -5.93269681930542
    8. '"' → logprob: -6.18269681930542
    9. ' [' → logprob: -6.93269681930542
    10. ''ab' → logprob: -8.182697296142578

Token 361: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.014168089255690575
    2. ''' → logprob: -4.2641682624816895
    3. ' '' → logprob: -13.889167785644531
    4. '"' → logprob: -14.014167785644531
    5. 'a' → logprob: -14.139167785644531
    6. ''z' → logprob: -14.639167785644531
    7. 'abcdefghijkl' → logprob: -14.639167785644531
    8. ''ab' → logprob: -14.889167785644531
    9. ''a' → logprob: -15.639167785644531
    10. ''s' → logprob: -16.13916778564453

Token 362: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12727758288383484
    2. ':
' → logprob: -2.1272776126861572
    3. ' :' → logprob: -8.627277374267578
    4. '):
' → logprob: -9.377277374267578
    5. ' :
' → logprob: -10.377277374267578
    6. '):' → logprob: -10.502277374267578
    7. '':' → logprob: -12.377277374267578
    8. '           ' → logprob: -12.502277374267578
    9. ',' → logprob: -12.502277374267578
    10. ':
' → logprob: -13.002277374267578

Token 363: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015487664379179478
    2. ' nxt' → logprob: -4.3904876708984375
    3. 'n' → logprob: -6.1404876708984375
    4. ' n' → logprob: -7.6404876708984375
    5. ' next' → logprob: -8.515487670898438
    6. '           ' → logprob: -10.140487670898438
    7. 'next' → logprob: -10.390487670898438
    8. '	           ' → logprob: -11.390487670898438
    9. '                
' → logprob: -12.015487670898438
    10. ',n' → logprob: -12.140487670898438

Token 364: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.1753062605857849
    2. 'n' → logprob: -2.0503063201904297
    3. 'next' → logprob: -3.9253063201904297
    4. ' next' → logprob: -4.55030632019043
    5. '               ' → logprob: -7.67530632019043
    6. '                   ' → logprob: -8.17530632019043
    7. ' n' → logprob: -8.30030632019043
    8. 'nx' → logprob: -8.67530632019043
    9. 'child' → logprob: -9.05030632019043
    10. 's' → logprob: -9.55030632019043

Token 365: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141363143920898
    2. ' =' → logprob: -1.701413631439209
    3. ' ' → logprob: -15.201414108276367
    4. '   ' → logprob: -18.201414108276367
    5. 'n' → logprob: -18.201414108276367
    6. '           ' → logprob: -18.451414108276367
    7. ')' → logprob: -19.451414108276367
    8. '=n' → logprob: -19.701414108276367
    9. '＝' → logprob: -19.701414108276367
    10. ',' → logprob: -19.826414108276367

Token 366: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024773201439529657
    2. ' self' → logprob: -6.002477169036865
    3. '(self' → logprob: -13.377477645874023
    4. '	self' → logprob: -16.627477645874023
    5. '           ' → logprob: -17.002477645874023
    6. ' ' → logprob: -17.502477645874023
    7. '   ' → logprob: -17.627477645874023
    8. '       ' → logprob: -18.627477645874023
    9. '               ' → logprob: -18.752477645874023
    10. '                   ' → logprob: -19.127477645874023

Token 367: '.goto' (ID: 119969)
  Prédit: 'goto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goto' → logprob: -0.1539248526096344
    2. '.goto' → logprob: -2.6539249420166016
    3. '.get' → logprob: -3.0289249420166016
    4. 'self' → logprob: -3.9039249420166016
    5. 'get' → logprob: -5.778924942016602
    6. ' goto' → logprob: -7.778924942016602
    7. '	goto' → logprob: -9.653924942016602
    8. ' self' → logprob: -9.653924942016602
    9. 'got' → logprob: -10.778924942016602
    10. 'go' → logprob: -10.778924942016602

Token 368: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -9.13388703338569e-06
    2. 'get' → logprob: -12.000009536743164
    3. '.' → logprob: -13.500009536743164
    4. ' .' → logprob: -14.000009536743164
    5. '((' → logprob: -14.625009536743164
    6. '(' → logprob: -16.250009536743164
    7. '   ' → logprob: -16.375009536743164
    8. '[(' → logprob: -16.500009536743164
    9. '(get' → logprob: -17.250009536743164
    10. '.setdefault' → logprob: -17.375009536743164

Token 369: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00409656623378396
    2. '(r' → logprob: -5.504096508026123
    3. '(' → logprob: -11.004096984863281
    4. ' ' → logprob: -13.879096984863281
    5. ' (' → logprob: -15.004096984863281
    6. '(
' → logprob: -15.879096984863281
    7. ' ((' → logprob: -16.00409698486328
    8. '   ' → logprob: -16.50409698486328
    9. '[(' → logprob: -17.87909698486328
    10. '  ' → logprob: -18.00409698486328

Token 370: 'r' (ID: 81)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.2519926428794861
    2. 'r' → logprob: -1.5019927024841309
    3. ' (' → logprob: -10.001992225646973
    4. ' r' → logprob: -11.376992225646973
    5. '(' → logprob: -12.251992225646973
    6. '(
' → logprob: -14.751992225646973
    7. '   ' → logprob: -15.001992225646973
    8. '[r' → logprob: -15.126992225646973
    9. ',r' → logprob: -15.251992225646973
    10. ')' → logprob: -15.376992225646973

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.514650183613412e-05
    2. ',ch' → logprob: -10.125055313110352
    3. ' ,' → logprob: -11.125055313110352
    4. ',
' → logprob: -16.37505531311035
    5. ' ' → logprob: -17.50005531311035
    6. '',' → logprob: -17.62505531311035
    7. '`,' → logprob: -17.75005531311035
    8. '‌,' → logprob: -18.00005531311035
    9. ',c' → logprob: -18.25005531311035
    10. '),' → logprob: -18.25005531311035

Token 372: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.3868747651576996
    2. ' ch' → logprob: -1.136874794960022
    3. ',ch' → logprob: -14.13687515258789
    4. ''ch' → logprob: -14.38687515258789
    5. '[ch' → logprob: -14.38687515258789
    6. '(ch' → logprob: -14.51187515258789
    7. ' ' → logprob: -14.76187515258789
    8. '	ch' → logprob: -15.01187515258789
    9. '_ch' → logprob: -15.13687515258789
    10. '-ch' → logprob: -15.88687515258789

Token 373: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002606333466246724
    2. ')' → logprob: -6.127606391906738
    3. '),' → logprob: -7.877606391906738
    4. ' ,' → logprob: -10.127606391906738
    5. ',)' → logprob: -13.877606391906738
    6. ' )' → logprob: -14.752606391906738
    7. ',None' → logprob: -15.252606391906738
    8. ' ' → logprob: -15.627606391906738
    9. ' ),' → logprob: -15.877606391906738
    10. '))' → logprob: -16.127605438232422

Token 374: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007101670489646494
    2. ' None' → logprob: -7.2507100105285645
    3. 'none' → logprob: -16.250709533691406
    4. ',None' → logprob: -16.750709533691406
    5. '_None' → logprob: -17.875709533691406
    6. '=None' → logprob: -17.875709533691406
    7. '(None' → logprob: -18.875709533691406
    8. ')' → logprob: -19.375709533691406
    9. '0' → logprob: -20.250709533691406
    10. '.None' → logprob: -20.375709533691406

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09907454252243042
    2. '               ' → logprob: -2.474074602127075
    3. '):
' → logprob: -5.099074363708496
    4. '<|end|>' → logprob: -6.349074363708496
    5. ')
' → logprob: -6.599074363708496
    6. ':' → logprob: -8.974074363708496
    7. '):' → logprob: -9.099074363708496
    8. '           ' → logprob: -9.224074363708496
    9. '<|end|>' → logprob: -9.599074363708496
    10. '                   ' → logprob: -9.849074363708496

Token 376: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006289352662861347
    2. ':' → logprob: -5.256289482116699
    3. '           ' → logprob: -8.0062894821167
    4. ':
' → logprob: -8.1312894821167
    5. ')' → logprob: -9.2562894821167
    6. '):
' → logprob: -9.8812894821167
    7. ',' → logprob: -10.0062894821167
    8. '       ' → logprob: -10.0062894821167
    9. '                   ' → logprob: -10.0062894821167
    10. '	           ' → logprob: -10.6312894821167

Token 377: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018861806020140648
    2. 'if' (adapté à ' if') → logprob: -4.143861770629883
    3. ' if' → logprob: -5.893861770629883
    4. '           ' → logprob: -10.393861770629883
    5. '   ' → logprob: -11.768861770629883
    6. '			' → logprob: -12.018861770629883
    7. '       ' → logprob: -12.393861770629883
    8. '                   ' → logprob: -12.518861770629883
    9. '	           ' → logprob: -12.518861770629883
    10. '	if' → logprob: -12.643861770629883

Token 378: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006304710987024009
    2. ' nxt' → logprob: -7.3756303787231445
    3. '   ' → logprob: -13.375630378723145
    4. '	n' → logprob: -14.125630378723145
    5. 'n't' → logprob: -14.875630378723145
    6. ' n' → logprob: -15.000630378723145
    7. '(n' → logprob: -15.750630378723145
    8. ' ' → logprob: -16.00063133239746
    9. '       ' → logprob: -16.12563133239746
    10. 'not' → logprob: -16.62563133239746

Token 379: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00861729308962822
    2. 'is' → logprob: -4.758617401123047
    3. ' not' → logprob: -13.508617401123047
    4. ')' → logprob: -14.258617401123047
    5. '	is' → logprob: -15.133617401123047
    6. ')is' → logprob: -16.133617401123047
    7. 'not' → logprob: -16.258617401123047
    8. ':' → logprob: -16.883617401123047
    9. ' ' → logprob: -17.133617401123047
    10. '!=' → logprob: -18.008617401123047

Token 380: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2105068415403366
    2. ' not' → logprob: -1.710506796836853
    3. 'None' → logprob: -4.835506916046143
    4. ' None' → logprob: -6.835506916046143
    5. 'none' → logprob: -11.085506439208984
    6. '	not' → logprob: -11.710506439208984
    7. ' ' → logprob: -12.585506439208984
    8. 'n' → logprob: -12.710506439208984
    9. 'Not' → logprob: -13.460506439208984
    10. '   ' → logprob: -14.460506439208984

Token 381: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002084277366520837
    2. ' None' → logprob: -8.500208854675293
    3. 'not' → logprob: -12.625208854675293
    4. 'none' → logprob: -13.375208854675293
    5. '_None' → logprob: -18.125207901000977
    6. '=None' → logprob: -18.250207901000977
    7. '   ' → logprob: -18.500207901000977
    8. '0' → logprob: -19.250207901000977
    9. 'N' → logprob: -19.625207901000977
    10. 'No' → logprob: -19.750207901000977

Token 382: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044333625584840775
    2. ':
' → logprob: -3.1693336963653564
    3. '                   ' → logprob: -6.919333457946777
    4. '               ' → logprob: -8.919333457946777
    5. '):
' → logprob: -9.794333457946777
    6. ' :' → logprob: -10.169333457946777
    7. ',' → logprob: -10.419333457946777
    8. '):' → logprob: -10.794333457946777
    9. '                       ' → logprob: -11.419333457946777
    10. '<|end|>' → logprob: -11.419333457946777

Token 383: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.024621350690722466
    2. '               ' → logprob: -3.7746212482452393
    3. '                       ' → logprob: -7.899621486663818
    4. '<|end|>' → logprob: -8.52462100982666
    5. '                ' → logprob: -8.64962100982666
    6. '           ' → logprob: -9.14962100982666
    7. ':' → logprob: -9.27462100982666
    8. '                  ' → logprob: -9.64962100982666
    9. '   ' → logprob: -9.89962100982666
    10. '```' → logprob: -10.14962100982666

Token 384: ' queue' (ID: 13661)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09006367623806
    2. ' self' → logprob: -3.2150635719299316
    3. '                       ' → logprob: -3.4650635719299316
    4. '                   ' → logprob: -4.340063571929932
    5. '       ' → logprob: -7.465063571929932
    6. '   ' → logprob: -7.965063571929932
    7. '	self' → logprob: -8.84006404876709
    8. '               ' → logprob: -9.09006404876709
    9. '           ' → logprob: -9.34006404876709
    10. 'fail' → logprob: -9.46506404876709

Token 385: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003189832204952836
    2. '.' → logprob: -5.753190040588379
    3. '.put' → logprob: -12.378190040588379
    4. '.app' → logprob: -12.503190040588379
    5. '.enqueue' → logprob: -12.878190040588379
    6. 'append' → logprob: -14.503190040588379
    7. '.ap' → logprob: -14.753190040588379
    8. '.Append' → logprob: -15.503190040588379
    9. '.extend' → logprob: -15.628190040588379
    10. ').' → logprob: -16.128189086914062

Token 386: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0802738870552275e-05
    2. '(' → logprob: -11.75001049041748
    3. 'n' → logprob: -12.87501049041748
    4. '(
' → logprob: -15.75001049041748
    5. '(next' → logprob: -16.625011444091797
    6. '((' → logprob: -17.250011444091797
    7. '	n' → logprob: -18.375011444091797
    8. ' (' → logprob: -19.250011444091797
    9. ')n' → logprob: -19.625011444091797
    10. '<n' → logprob: -20.000011444091797

Token 387: 'xt' (ID: 711)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3135027289390564
    2. '(n' → logprob: -1.3135027885437012
    3. '(' → logprob: -8.688502311706543
    4. ')' → logprob: -10.688502311706543
    5. ' nxt' → logprob: -10.688502311706543
    6. '((' → logprob: -11.188502311706543
    7. '[n' → logprob: -12.813502311706543
    8. 'nt' → logprob: -12.813502311706543
    9. ' (' → logprob: -13.313502311706543
    10. '(next' → logprob: -13.438502311706543

Token 388: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12058421969413757
    2. ')' → logprob: -2.49558424949646
    3. '                   ' → logprob: -3.49558424949646
    4. 'n' → logprob: -8.870584487915039
    5. '                       ' → logprob: -8.995584487915039
    6. ' )
' → logprob: -8.995584487915039
    7. '(n' → logprob: -9.245584487915039
    8. '               ' → logprob: -9.495584487915039
    9. '
' → logprob: -9.995584487915039
    10. ')
' → logprob: -10.120584487915039

Token 389: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008113090880215168
    2. ')' → logprob: -5.508112907409668
    3. '               ' → logprob: -5.883112907409668
    4. '
' → logprob: -8.508112907409668
    5. 'self' → logprob: -8.508112907409668
    6. '                    
' → logprob: -8.758112907409668
    7. '           ' → logprob: -9.008112907409668
    8. ' self' → logprob: -9.133112907409668
    9. '                       ' → logprob: -9.633112907409668
    10. '       ' → logprob: -9.758112907409668

Token 390: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014140591956675053
    2. ' self' → logprob: -4.764140605926514
    3. '                   ' → logprob: -5.264140605926514
    4. '   ' → logprob: -9.264140129089355
    5. 'fail' → logprob: -10.264140129089355
    6. '                       ' → logprob: -10.514140129089355
    7. '	self' → logprob: -10.639140129089355
    8. '           ' → logprob: -10.764140129089355
    9. '=self' → logprob: -10.764140129089355
    10. 's' → logprob: -11.014140129089355

Token 391: '.fail' (ID: 48738)
  Prédit: '.fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fail' → logprob: -0.0007193420315161347
    2. 'fail' → logprob: -7.2507195472717285
    3. '.' → logprob: -12.62571907043457
    4. ' .' → logprob: -12.87571907043457
    5. '	fail' → logprob: -13.12571907043457
    6. ' fail' → logprob: -15.00071907043457
    7. '   ' → logprob: -15.25071907043457
    8. ').' → logprob: -16.00071907043457
    9. '_fail' → logprob: -16.25071907043457
    10. '
' → logprob: -16.37571907043457

Token 392: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00010866894444916397
    2. 'n' → logprob: -9.75010871887207
    3. '[next' → logprob: -10.75010871887207
    4. '[' → logprob: -11.25010871887207
    5. '[(' → logprob: -11.87510871887207
    6. '[self' → logprob: -13.50010871887207
    7. '_n' → logprob: -13.87510871887207
    8. '(n' → logprob: -14.00010871887207
    9. '[new' → logprob: -14.25010871887207
    10. ']' → logprob: -14.37510871887207

Token 393: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0001696902181720361
    2. 't' → logprob: -9.75016975402832
    3. '[' → logprob: -10.12516975402832
    4. '[n' → logprob: -10.75016975402832
    5. '[t' → logprob: -11.00016975402832
    6. '[next' → logprob: -11.00016975402832
    7. ']' → logprob: -11.87516975402832
    8. 'x' → logprob: -12.25016975402832
    9. '[x' → logprob: -12.62516975402832
    10. '[(' → logprob: -14.87516975402832

Token 394: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01088357251137495
    2. ' =' → logprob: -4.885883808135986
    3. '=' → logprob: -6.260883808135986
    4. ' ]' → logprob: -7.135883808135986
    5. ')' → logprob: -8.635883331298828
    6. ']=' → logprob: -8.635883331298828
    7. '[r' → logprob: -9.135883331298828
    8. '[' → logprob: -9.385883331298828
    9. '=r' → logprob: -11.510883331298828
    10. ' ' → logprob: -12.760883331298828

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141655206680298
    2. ' =' → logprob: -1.7014164924621582
    3. ']' → logprob: -12.826416969299316
    4. ')' → logprob: -15.076416969299316
    5. ']=' → logprob: -15.576416969299316
    6. '=self' → logprob: -17.326416015625
    7. ' ' → logprob: -17.576416015625
    8. '[' → logprob: -17.576416015625
    9. '=
' → logprob: -17.576416015625
    10. ')=' → logprob: -17.826416015625

Token 396: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019286326132714748
    2. ' self' → logprob: -6.251928806304932
    3. '	self' → logprob: -18.876928329467773
    4. '(self' → logprob: -19.001928329467773
    5. '[self' → logprob: -19.001928329467773
    6. '   ' → logprob: -19.126928329467773
    7. '           ' → logprob: -19.501928329467773
    8. '=self' → logprob: -20.376928329467773
    9. '
' → logprob: -20.876928329467773
    10. '               ' → logprob: -21.001928329467773

Token 397: '.goto' (ID: 119969)
  Prédit: '.fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.fail' → logprob: -7.64839569455944e-05
    2. 'fail' → logprob: -9.500076293945312
    3. '.' → logprob: -14.250076293945312
    4. '	fail' → logprob: -14.625076293945312
    5. ' fail' → logprob: -15.000076293945312
    6. ' .' → logprob: -17.250076293945312
    7. '_fail' → logprob: -17.625076293945312
    8. '.Fail' → logprob: -18.000076293945312
    9. '.failed' → logprob: -18.000076293945312
    10. 'Fail' → logprob: -18.375076293945312

Token 398: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.39774781465530396
    2. '(r' → logprob: -1.1477477550506592
    3. '(self' → logprob: -5.397747993469238
    4. '.get' → logprob: -6.022747993469238
    5. '(' → logprob: -6.272747993469238
    6. '[r' → logprob: -6.522747993469238
    7. '[self' → logprob: -8.147747993469238
    8. '((' → logprob: -9.022747993469238
    9. '[' → logprob: -9.397747993469238
    10. '[
' → logprob: -12.397747993469238

Token 399: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32888099551200867
    2. '(self' → logprob: -1.328881025314331
    3. 'r' → logprob: -4.328880786895752
    4. ' self' → logprob: -7.078880786895752
    5. '(r' → logprob: -7.078880786895752
    6. ' (' → logprob: -7.453880786895752
    7. '(' → logprob: -11.32888126373291
    8. ' r' → logprob: -11.45388126373291
    9. '[self' → logprob: -11.95388126373291
    10. '           ' → logprob: -12.32888126373291

Token 400: '.fail' (ID: 48738)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5505868196487427
    2. '(self' → logprob: -1.8005868196487427
    3. 'r' → logprob: -2.675586700439453
    4. ',' → logprob: -2.925586700439453
    5. ',self' → logprob: -3.050586700439453
    6. ',r' → logprob: -3.175586700439453
    7. '[self' → logprob: -3.800586700439453
    8. '(r' → logprob: -3.925586700439453
    9. ' self' → logprob: -6.300586700439453
    10. '[r' → logprob: -6.925586700439453

Token 401: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.013238699175417423
    2. '(r' → logprob: -4.638238906860352
    3. '[(' → logprob: -6.013238906860352
    4. 'r' → logprob: -7.013238906860352
    5. ',r' → logprob: -9.263238906860352
    6. ',' → logprob: -10.513238906860352
    7. '[' → logprob: -12.763238906860352
    8. ' (' → logprob: -13.138238906860352
    9. ',(' → logprob: -13.763238906860352
    10. '(' → logprob: -14.013238906860352

Token 402: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001769616355886683
    2. ',ch' → logprob: -8.750177383422852
    3. '),' → logprob: -11.500177383422852
    4. ' ,' → logprob: -11.750177383422852
    5. '[ch' → logprob: -15.000177383422852
    6. '],' → logprob: -15.750177383422852
    7. ',
' → logprob: -17.12517738342285
    8. ',r' → logprob: -17.62517738342285
    9. '(ch' → logprob: -18.00017738342285
    10. ' ' → logprob: -18.12517738342285

Token 403: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0009115827269852161
    2. ' ch' → logprob: -7.000911712646484
    3. '	ch' → logprob: -17.125911712646484
    4. ',ch' → logprob: -17.750911712646484
    5. '[ch' → logprob: -18.000911712646484
    6. '-ch' → logprob: -18.875911712646484
    7. '_ch' → logprob: -20.250911712646484
    8. '(ch' → logprob: -20.500911712646484
    9. ''ch' → logprob: -20.500911712646484
    10. 'Ch' → logprob: -21.125911712646484

Token 404: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38791346549987793
    2. ')]' → logprob: -1.137913465499878
    3. ')' → logprob: -6.887913703918457
    4. ' ]' → logprob: -11.512913703918457
    5. ']
' → logprob: -12.012913703918457
    6. '])' → logprob: -12.512913703918457
    7. ']]' → logprob: -14.762913703918457
    8. ' )' → logprob: -14.762913703918457
    9. ')]
' → logprob: -15.262913703918457
    10. ']}' → logprob: -15.387913703918457

Token 405: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013178583467379212
    2. '
' → logprob: -7.001317977905273
    3. '               ' → logprob: -8.751317977905273
    4. '           ' → logprob: -9.501317977905273
    5. '```' → logprob: -10.001317977905273
    6. '                    
' → logprob: -10.376317977905273
    7. '       ' → logprob: -10.501317977905273
    8. 'self' → logprob: -10.626317977905273
    9. '                  ' → logprob: -11.501317977905273
    10. '   ' → logprob: -11.751317977905273

Token 406: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.741137283621356e-05
    2. '                   ' → logprob: -10.000057220458984
    3. ' self' → logprob: -11.375057220458984
    4. '               ' → logprob: -15.000057220458984
    5. '	self' → logprob: -16.250057220458984
    6. '           ' → logprob: -16.875057220458984
    7. '   ' → logprob: -17.500057220458984
    8. '=self' → logprob: -18.000057220458984
    9. '
' → logprob: -18.625057220458984
    10. '(self' → logprob: -18.750057220458984

Token 407: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -14.000001907348633
    3. 'out' → logprob: -14.250001907348633
    4. '[out' → logprob: -17.125001907348633
    5. '$out' → logprob: -17.625001907348633
    6. '	out' → logprob: -17.750001907348633
    7. '_out' → logprob: -18.000001907348633
    8. '.output' → logprob: -18.125001907348633
    9. ' .' → logprob: -19.125001907348633
    10. '.Out' → logprob: -19.375001907348633

Token 408: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.762356209335849e-05
    2. 'n' → logprob: -10.62503719329834
    3. '[next' → logprob: -11.75003719329834
    4. '[' → logprob: -13.00003719329834
    5. '[r' → logprob: -13.25003719329834
    6. '[current' → logprob: -15.25003719329834
    7. '.setdefault' → logprob: -15.50003719329834
    8. '[tmp' → logprob: -16.000038146972656
    9. '[
' → logprob: -16.250038146972656
    10. '(n' → logprob: -16.250038146972656

Token 409: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -2.117345684382599e-05
    2. 't' → logprob: -11.250020980834961
    3. '[n' → logprob: -12.375020980834961
    4. '```' → logprob: -13.875020980834961
    5. '[t' → logprob: -14.125020980834961
    6. 'ext' → logprob: -14.375020980834961
    7. '[' → logprob: -14.625020980834961
    8. '[next' → logprob: -14.875020980834961
    9. '``' → logprob: -15.500020980834961
    10. ']' → logprob: -15.875020980834961

Token 410: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03680554777383804
    2. '.update' → logprob: -3.5368056297302246
    3. '|' → logprob: -5.036805629730225
    4. ']' → logprob: -7.786805629730225
    5. '.' → logprob: -9.411805152893066
    6. 'update' → logprob: -11.161805152893066
    7. ').' → logprob: -11.411805152893066
    8. ' |=' → logprob: -11.536805152893066
    9. ']|' → logprob: -13.786805152893066
    10. '}.' → logprob: -14.161805152893066

Token 411: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -2.339278580620885e-06
    2. '.update' → logprob: -13.250001907348633
    3. '|' → logprob: -15.250001907348633
    4. ' update' → logprob: -15.500001907348633
    5. '_update' → logprob: -18.750001907348633
    6. ' |=' → logprob: -18.750001907348633
    7. '	update' → logprob: -18.750001907348633
    8. 'upd' → logprob: -20.250001907348633
    9. '(update' → logprob: -20.375001907348633
    10. 'union' → logprob: -20.750001907348633

Token 412: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. 'self' → logprob: -15.62500286102295
    4. '((' → logprob: -18.250001907348633
    5. '(
' → logprob: -19.000001907348633
    6. ' (' → logprob: -19.125001907348633
    7. ' self' → logprob: -21.375001907348633
    8. '=self' → logprob: -21.875001907348633
    9. '(this' → logprob: -22.000001907348633
    10. '[self' → logprob: -22.000001907348633

Token 413: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.008670826442539692
    2. '[self' → logprob: -5.008670806884766
    3. '[out' → logprob: -6.633670806884766
    4. 'out' → logprob: -8.133670806884766
    5. 'self' → logprob: -8.383670806884766
    6. '[r' → logprob: -10.633670806884766
    7. '[' → logprob: -10.883670806884766
    8. ' .' → logprob: -11.508670806884766
    9. '.self' → logprob: -11.633670806884766
    10. '.' → logprob: -11.883670806884766

Token 414: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.250007629394531
    3. '[n' → logprob: -13.500007629394531
    4. '[r' → logprob: -14.125007629394531
    5. 'self' → logprob: -15.375007629394531
    6. '[(' → logprob: -15.375007629394531
    7. '(self' → logprob: -17.37500762939453
    8. '[
' → logprob: -19.00000762939453
    9. ' [' → logprob: -19.87500762939453
    10. '[f' → logprob: -20.00000762939453

Token 415: '.fail' (ID: 48738)
  Prédit: '.fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fail' → logprob: -6.2729995988775045e-06
    2. 'fail' → logprob: -12.000006675720215
    3. '	fail' → logprob: -17.6250057220459
    4. '.' → logprob: -17.7500057220459
    5. ' fail' → logprob: -17.7500057220459
    6. ' .' → logprob: -19.5000057220459
    7. '.failed' → logprob: -20.0000057220459
    8. '.Fail' → logprob: -21.1250057220459
    9. '_fail' → logprob: -21.1250057220459
    10. '[f' → logprob: -22.1250057220459

Token 416: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5760664939880371
    2. '[r' → logprob: -0.8260664939880371
    3. 'r' → logprob: -9.576066970825195
    4. '[' → logprob: -9.951066970825195
    5. 'n' → logprob: -11.701066970825195
    6. '[next' → logprob: -13.576066970825195
    7. ' [' → logprob: -15.326066970825195
    8. '[
' → logprob: -16.951066970825195
    9. ' r' → logprob: -17.451066970825195
    10. '[q' → logprob: -17.576066970825195

Token 417: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.05134480074048042
    2. '[r' → logprob: -3.176344871520996
    3. '[n' → logprob: -4.926344871520996
    4. 'x' → logprob: -7.551344871520996
    5. '[t' → logprob: -8.301344871520996
    6. 'r' → logprob: -8.926344871520996
    7. 't' → logprob: -10.051344871520996
    8. '[' → logprob: -10.051344871520996
    9. '[next' → logprob: -10.676344871520996
    10. '[x' → logprob: -11.926344871520996

Token 418: ']])

' (ID: 186741)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00100422790274024
    2. ']' → logprob: -7.501004219055176
    3. ']])' → logprob: -8.626004219055176
    4. '])
' → logprob: -9.376004219055176
    5. ' ])' → logprob: -9.376004219055176
    6. ')])' → logprob: -9.876004219055176
    7. '])]' → logprob: -10.501004219055176
    8. ']))' → logprob: -11.501004219055176
    9. '[n' → logprob: -12.376004219055176
    10. '])

' → logprob: -13.501004219055176

Token 419: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 420: ' main' (ID: 2758)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.006306292489171028
    2. ' find' → logprob: -5.506306171417236
    3. 'search' → logprob: -6.506306171417236
    4. ' match' → logprob: -7.756306171417236
    5. ' ' → logprob: -8.881306648254395
    6. ' predict' → logprob: -9.881306648254395
    7. ' process' → logprob: -10.506306648254395
    8. 'earch' → logprob: -11.381306648254395
    9. ' main' → logprob: -11.381306648254395
    10. ' query' → logprob: -11.506306648254395

Token 421: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.380904672667384e-05
    2. '():
' → logprob: -11.000033378601074
    3. ' ():' → logprob: -11.750033378601074
    4. '(' → logprob: -12.125033378601074
    5. '()' → logprob: -13.125033378601074
    6. ':' → logprob: -13.625033378601074
    7. '(":' → logprob: -15.500033378601074
    8. '():
' → logprob: -16.12503433227539
    9. '(:' → logprob: -16.75003433227539
    10. '()>' → logprob: -16.87503433227539

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009667263948358595
    2. 'import' → logprob: -7.750966548919678
    3. ' import' → logprob: -8.000967025756836
    4. '       ' → logprob: -9.375967025756836
    5. '```' → logprob: -10.250967025756836
    6. '	import' → logprob: -11.125967025756836
    7. '    ' → logprob: -11.500967025756836
    8. 'n' → logprob: -11.875967025756836
    9. '<|end|>' → logprob: -12.000967025756836
    10. ' readline' → logprob: -12.000967025756836

Token 423: ' input' (ID: 3422)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5081853270530701
    2. '   ' → logprob: -1.0081853866577148
    3. 'import' → logprob: -3.633185386657715
    4. ' sys' → logprob: -6.008185386657715
    5. ' text' → logprob: -6.633185386657715
    6. ' ac' → logprob: -6.883185386657715
    7. ' input' → logprob: -7.133185386657715
    8. ' aho' → logprob: -7.883185386657715
    9. ' n' → logprob: -8.258185386657715
    10. ' patterns' → logprob: -8.633185386657715

Token 424: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003038558876141906
    2. ' =' → logprob: -6.50303840637207
    3. '_data' → logprob: -7.50303840637207
    4. '_' → logprob: -8.12803840637207
    5. '_line' → logprob: -8.50303840637207
    6. '=' → logprob: -8.87803840637207
    7. '_text' → logprob: -9.50303840637207
    8. '().' → logprob: -9.62803840637207
    9. '(' → logprob: -10.00303840637207
    10. ' ()' → logprob: -10.12803840637207

Token 425: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16022838652133942
    2. 'sys' → logprob: -1.9102283716201782
    3. '	sys' → logprob: -13.535228729248047
    4. '(sys' → logprob: -13.785228729248047
    5. 'input' → logprob: -14.035228729248047
    6. '=sys' → logprob: -14.160228729248047
    7. ' input' → logprob: -14.785228729248047
    8. ' lambda' → logprob: -17.535228729248047
    9. 'lambda' → logprob: -17.660228729248047
    10. '```' → logprob: -18.285228729248047

Token 426: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5780380368232727
    2. '.stdin' → logprob: -0.8280380368232727
    3. '.readline' → logprob: -6.203038215637207
    4. '.stdout' → logprob: -10.328038215637207
    5. '.argv' → logprob: -10.953038215637207
    6. '.​' → logprob: -12.328038215637207
    7. '.std' → logprob: -12.453038215637207
    8. ' .' → logprob: -12.453038215637207
    9. 'stdin' → logprob: -12.953038215637207
    10. '.input' → logprob: -13.203038215637207

Token 427: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0007594806957058609
    2. '.read' → logprob: -7.250759601593018
    3. '.' → logprob: -10.75075912475586
    4. 'read' → logprob: -10.87575912475586
    5. ' readline' → logprob: -12.12575912475586
    6. '_read' → logprob: -13.00075912475586
    7. '.readlines' → logprob: -13.50075912475586
    8. '
' → logprob: -16.87575912475586
    9. '.stdin' → logprob: -17.75075912475586
    10. '.Read' → logprob: -18.00075912475586

Token 428: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10322581976652145
    2. '   ' → logprob: -2.7282257080078125
    3. '()
' → logprob: -3.4782257080078125
    4. '    
' → logprob: -7.2282257080078125
    5. '
' → logprob: -7.4782257080078125
    6. '().' → logprob: -9.478225708007812
    7. '(' → logprob: -9.478225708007812
    8. '()\' → logprob: -9.728225708007812
    9. '  
' → logprob: -9.853225708007812
    10. '  ' → logprob: -9.853225708007812

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008650107774883509
    2. '    
' → logprob: -7.2508649826049805
    3. 'text' → logprob: -9.37586498260498
    4. '
' → logprob: -10.87586498260498
    5. 'n' → logprob: -11.62586498260498
    6. ' text' → logprob: -11.62586498260498
    7. '       ' → logprob: -11.75086498260498
    8. '	text' → logprob: -12.37586498260498
    9. '<|end|>' → logprob: -13.00086498260498
    10. '```' → logprob: -13.00086498260498

Token 430: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.056004106998443604
    2. ' n' → logprob: -2.931004047393799
    3. 'num' → logprob: -7.806004047393799
    4. '   ' → logprob: -8.181004524230957
    5. 'N' → logprob: -8.806004524230957
    6. 'q' → logprob: -9.431004524230957
    7. 'patterns' → logprob: -10.181004524230957
    8. 't' → logprob: -10.306004524230957
    9. ' patterns' → logprob: -10.431004524230957
    10. 'k' → logprob: -11.056004524230957

Token 431: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01844829134643078
    2. 'True' → logprob: -4.018448352813721
    3. '(True' → logprob: -8.143447875976562
    4. ' ' → logprob: -12.893447875976562
    5. ' Tru' → logprob: -13.018447875976562
    6. '1' → logprob: -13.643447875976562
    7. '=True' → logprob: -13.643447875976562
    8. ' (' → logprob: -15.643447875976562
    9. '  ' → logprob: -16.143447875976562
    10. '_true' → logprob: -16.643447875976562

Token 432: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006592809222638607
    2. '():' → logprob: -5.131592750549316
    3. ':
' → logprob: -7.881592750549316
    4. '():
' → logprob: -9.631592750549316
    5. ',' → logprob: -10.006592750549316
    6. '       ' → logprob: -10.131592750549316
    7. '):' → logprob: -10.256592750549316
    8. '   ' → logprob: -10.381592750549316
    9. ' :' → logprob: -10.631592750549316
    10. '(' → logprob: -10.756592750549316

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025802843272686005
    2. ' line' → logprob: -4.1508026123046875
    3. '   ' → logprob: -4.7758026123046875
    4. 'line' → logprob: -7.5258026123046875
    5. '    ' → logprob: -7.9008026123046875
    6. '      ' → logprob: -9.525802612304688
    7. '     ' → logprob: -9.650802612304688
    8. '```' → logprob: -9.775802612304688
    9. '           ' → logprob: -10.400802612304688
    10. '#line' → logprob: -10.525802612304688

Token 434: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6123864054679871
    2. 'n' → logprob: -1.6123864650726318
    3. ' n' → logprob: -1.6123864650726318
    4. 'line' (adapté à ' line') → logprob: -3.112386465072632
    5. '   ' → logprob: -5.237386226654053
    6. 's' → logprob: -6.237386226654053
    7. ' s' → logprob: -6.237386226654053
    8. 'N' → logprob: -6.612386226654053
    9. ' N' → logprob: -7.362386226654053
    10. ' text' → logprob: -7.487386226654053

Token 435: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365053981542587
    2. '=' → logprob: -3.4086506366729736
    3. '=line' → logprob: -12.408650398254395
    4. ' ' → logprob: -15.783650398254395
    5. '()' → logprob: -16.40865135192871
    6. '   ' → logprob: -16.53365135192871
    7. '=input' → logprob: -16.53365135192871
    8. 's' → logprob: -16.53365135192871
    9. ' =
' → logprob: -16.78365135192871
    10. '.' → logprob: -17.15865135192871

Token 436: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6538241505622864
    2. ' input' → logprob: -1.1538240909576416
    3. ' sys' → logprob: -2.2788240909576416
    4. 'sys' → logprob: -2.7788240909576416
    5. ' ' → logprob: -14.278823852539062
    6. '=sys' → logprob: -14.653823852539062
    7. '(sys' → logprob: -14.778823852539062
    8. 'line' → logprob: -15.278823852539062
    9. '=input' → logprob: -16.278823852539062
    10. 's' → logprob: -16.278823852539062

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8292121887207031
    2. ' =' → logprob: -0.8292121887207031
    3. '=' → logprob: -2.079212188720703
    4. '=line' → logprob: -6.579212188720703
    5. ' line' → logprob: -7.954212188720703
    6. '   ' → logprob: -9.454212188720703
    7. '        ' → logprob: -9.579212188720703
    8. 'while' → logprob: -9.954212188720703
    9. ' while' → logprob: -10.204212188720703
    10. '<|end|>' → logprob: -10.329212188720703

Token 438: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.312687486410141
    2. ' line' → logprob: -1.6876875162124634
    3. '       ' → logprob: -2.562687397003174
    4. 'try' → logprob: -5.562687397003174
    5. '   ' → logprob: -7.062687397003174
    6. 'while' (adapté à ' while') → logprob: -7.062687397003174
    7. ' try' → logprob: -7.937687397003174
    8. ' while' → logprob: -8.312687873840332
    9. '           ' → logprob: -9.312687873840332
    10. '#line' → logprob: -10.187687873840332

Token 439: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.800155520439148
    2. ' not' → logprob: -1.050155520439148
    3. 'line' → logprob: -1.675155520439148
    4. 'not' → logprob: -4.6751556396484375
    5. ' True' → logprob: -6.0501556396484375
    6. '(line' → logprob: -7.0501556396484375
    7. ' len' → logprob: -7.9251556396484375
    8. 'len' → logprob: -8.050155639648438
    9. 'True' → logprob: -8.300155639648438
    10. '(not' → logprob: -10.050155639648438

Token 440: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7445576786994934
    2. '.strip' → logprob: -0.7445576786994934
    3. ' ==' → logprob: -3.2445576190948486
    4. '.' → logprob: -5.119557857513428
    5. '=' → logprob: -5.619557857513428
    6. ' =' → logprob: -7.869557857513428
    7. '!=' → logprob: -7.994557857513428
    8. ' !=' → logprob: -8.49455738067627
    9. ':=' → logprob: -8.74455738067627
    10. '.rstrip' → logprob: -9.49455738067627

Token 441: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09002097696065903
    2. '()==' → logprob: -2.8400208950042725
    3. '==' → logprob: -3.5900208950042725
    4. ' ==' → logprob: -9.715021133422852
    5. '=' → logprob: -12.590021133422852
    6. '()<' → logprob: -14.340021133422852
    7. '()!=' → logprob: -15.090021133422852
    8. '===' → logprob: -15.090021133422852
    9. '```' → logprob: -15.215021133422852
    10. '()=="' → logprob: -16.09002113342285

Token 442: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.016721799969673157
    2. ' ==' → logprob: -4.516721725463867
    3. '()==' → logprob: -5.266721725463867
    4. '()' → logprob: -7.641721725463867
    5. '=' → logprob: -11.141721725463867
    6. '===' → logprob: -13.391721725463867
    7. '==
' → logprob: -14.391721725463867
    8. ')==' → logprob: -15.391721725463867
    9. '=='' → logprob: -15.516721725463867
    10. ' =' → logprob: -15.891721725463867

Token 443: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.126937136054039
    2. ''' → logprob: -2.1269371509552
    3. '''
' → logprob: -12.751936912536621
    4. '""' → logprob: -13.501936912536621
    5. ' '':
' → logprob: -13.501936912536621
    6. '"":' → logprob: -13.751936912536621
    7. ''',' → logprob: -14.251936912536621
    8. ''''' → logprob: -14.251936912536621
    9. '''.' → logprob: -14.751936912536621
    10. '':' → logprob: -15.251936912536621

Token 444: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00719435466453433
    2. '       ' → logprob: -5.257194519042969
    3. ',' → logprob: -7.257194519042969
    4. ':
' → logprob: -7.382194519042969
    5. ':' → logprob: -8.382194519042969
    6. ' line' → logprob: -9.257194519042969
    7. ' and' → logprob: -9.632194519042969
    8. '<|end|>' → logprob: -10.507194519042969
    9. '(line' → logprob: -10.757194519042969
    10. '\' → logprob: -10.882194519042969

Token 445: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.033911120146512985
    2. ' line' → logprob: -3.4089112281799316
    3. '           ' → logprob: -8.408910751342773
    4. 'l' → logprob: -11.158910751342773
    5. 'try' → logprob: -12.033910751342773
    6. ' l' → logprob: -12.658910751342773
    7. '       ' → logprob: -12.908910751342773
    8. 'c' → logprob: -13.033910751342773
    9. '   ' → logprob: -13.283910751342773
    10. 't' → logprob: -13.283910751342773

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759522914886475
    2. '=' → logprob: -0.8259522914886475
    3. '=line' → logprob: -11.450952529907227
    4. '=sys' → logprob: -13.075952529907227
    5. ' ' → logprob: -16.575952529907227
    6. 'line' → logprob: -17.575952529907227
    7. '=
' → logprob: -18.075952529907227
    8. '+=' → logprob: -18.200952529907227
    9. '   ' → logprob: -18.325952529907227
    10. '＝' → logprob: -18.825952529907227

Token 447: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5195499658584595
    2. 'sys' → logprob: -1.0195499658584595
    3. ' sys' → logprob: -3.39454984664917
    4. ' input' → logprob: -4.51954984664917
    5. 'stdin' → logprob: -12.769550323486328
    6. '=sys' → logprob: -14.519550323486328
    7. '   ' → logprob: -14.894550323486328
    8. '(sys' → logprob: -15.019550323486328
    9. 'import' → logprob: -15.019550323486328
    10. 'line' → logprob: -16.019550323486328

Token 448: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001967457792488858
    2. 'stdin' → logprob: -8.62519645690918
    3. '.stdout' → logprob: -11.62519645690918
    4. 'in' → logprob: -12.00019645690918
    5. '.std' → logprob: -14.37519645690918
    6. '.' → logprob: -14.50019645690918
    7. '.readline' → logprob: -14.62519645690918
    8. '.argv' → logprob: -16.37519645690918
    9. '.in' → logprob: -16.37519645690918
    10. '(stdin' → logprob: -16.50019645690918

Token 449: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.60414821645827e-06
    2. '.stdin' → logprob: -12.875004768371582
    3. '.' → logprob: -13.250004768371582
    4. '.read' → logprob: -16.500003814697266
    5. ' readline' → logprob: -17.500003814697266
    6. '.readlines' → logprob: -17.500003814697266
    7. 'stdin' → logprob: -18.250003814697266
    8. 'read' → logprob: -19.000003814697266
    9. '._' → logprob: -20.125003814697266
    10. '.stdout' → logprob: -20.250003814697266

Token 450: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4741845428943634
    2. '       ' → logprob: -0.974184513092041
    3. '<|end|>' → logprob: -10.4741849899292
    4. '<|end|>' → logprob: -10.4741849899292
    5. '               ' → logprob: -11.4741849899292
    6. '   ' → logprob: -12.0991849899292
    7. '
' → logprob: -12.2241849899292
    8. '        ' → logprob: -12.3491849899292
    9. ',' → logprob: -12.4741849899292
    10. '          ' → logprob: -13.0991849899292

Token 451: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28120237588882446
    2. '       ' → logprob: -1.4062023162841797
    3. '<|end|>' → logprob: -10.78120231628418
    4. '```' → logprob: -11.40620231628418
    5. '   ' → logprob: -11.90620231628418
    6. '               ' → logprob: -12.40620231628418
    7. '<|end|>' → logprob: -12.65620231628418
    8. '                   ' → logprob: -14.03120231628418
    9. '         ' → logprob: -14.03120231628418
    10. '          ' → logprob: -14.15620231628418

Token 452: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023203661665320396
    2. '       ' → logprob: -4.3982038497924805
    3. ' if' → logprob: -5.0232038497924805
    4. 'if' (adapté à ' if') → logprob: -5.5232038497924805
    5. 'If' → logprob: -11.39820384979248
    6. '```' → logprob: -11.39820384979248
    7. '   ' → logprob: -11.77320384979248
    8. '<|end|>' → logprob: -12.02320384979248
    9. '
' → logprob: -12.27320384979248
    10. '               ' → logprob: -12.27320384979248

Token 453: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6601418256759644
    2. 'line' → logprob: -1.1601418256759644
    3. ' line' → logprob: -2.160141944885254
    4. 'not' → logprob: -2.910141944885254
    5. '#line' → logprob: -13.785141944885254
    6. '(line' → logprob: -14.160141944885254
    7. '	line' → logprob: -14.160141944885254
    8. ' ' → logprob: -14.535141944885254
    9. '[line' → logprob: -16.035140991210938
    10. '=line' → logprob: -16.160140991210938

Token 454: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.20141403377056122
    2. ' line' → logprob: -1.7014139890670776
    3. '#line' → logprob: -14.951414108276367
    4. '	line' → logprob: -15.201414108276367
    5. '(line' → logprob: -15.951414108276367
    6. '[line' → logprob: -17.201414108276367
    7. '=line' → logprob: -17.826414108276367
    8. '_line' → logprob: -19.451414108276367
    9. 'Line' → logprob: -19.826414108276367
    10. ' ' → logprob: -19.951414108276367

Token 455: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6941116452217102
    2. ':
' → logprob: -0.6941116452217102
    3. ':return' → logprob: -7.0691118240356445
    4. ' :' → logprob: -10.069111824035645
    5. ':
' → logprob: -10.819111824035645
    6. '):
' → logprob: -11.444111824035645
    7. ' :
' → logprob: -11.694111824035645
    8. '   ' → logprob: -11.694111824035645
    9. ':

' → logprob: -12.319111824035645
    10. '       ' → logprob: -12.444111824035645

Token 456: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.959636033978313e-05
    2. ' return' → logprob: -9.875089645385742
    3. 'return' → logprob: -10.625089645385742
    4. '           ' → logprob: -12.125089645385742
    5. '                   ' → logprob: -12.250089645385742
    6. '       ' → logprob: -14.250089645385742
    7. ':return' → logprob: -14.500089645385742
    8. '   ' → logprob: -14.750089645385742
    9. '```' → logprob: -14.875089645385742
    10. '                       ' → logprob: -14.875089645385742

Token 457: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10038285702466965
    2. ' return' → logprob: -2.3503828048706055
    3. '               ' → logprob: -9.225382804870605
    4. 'break' → logprob: -10.100382804870605
    5. '           ' → logprob: -10.850382804870605
    6. '                   ' → logprob: -11.600382804870605
    7. ' break' → logprob: -12.225382804870605
    8. '	return' → logprob: -13.850382804870605
    9. ':return' → logprob: -14.600382804870605
    10. '
' → logprob: -14.725382804870605

Token 458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04164408519864082
    2. '<|end|>' → logprob: -3.4166440963745117
    3. '
' → logprob: -5.291644096374512
    4. '        
' → logprob: -6.041644096374512
    5. '<|end|>' → logprob: -8.166644096374512
    6. '\n' → logprob: -9.916644096374512
    7. ',' → logprob: -10.541644096374512
    8. '  
' → logprob: -10.541644096374512
    9. '   ' → logprob: -10.916644096374512
    10. '```' → logprob: -11.041644096374512

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015596594661474228
    2. '<|end|>' → logprob: -4.265596389770508
    3. '<|end|>' → logprob: -7.140596389770508
    4. '        
' → logprob: -8.515596389770508
    5. '        ' → logprob: -9.265596389770508
    6. ')' → logprob: -10.015596389770508
    7. '   ' → logprob: -10.015596389770508
    8. '           ' → logprob: -10.140596389770508
    9. '
' → logprob: -10.390596389770508
    10. '      ' → logprob: -10.640596389770508

Token 460: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01959044300019741
    2. ' word' → logprob: -5.144590377807617
    3. ' text' → logprob: -5.394590377807617
    4. ' words' → logprob: -5.894590377807617
    5. ' s' → logprob: -6.894590377807617
    6. ' patterns' → logprob: -7.269590377807617
    7. ' pattern' → logprob: -7.519590377807617
    8. ' n' → logprob: -7.894590377807617
    9. ' code' → logprob: -8.019590377807617
    10. 's' → logprob: -8.019590377807617

Token 461: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005972165614366531
    2. '=' → logprob: -5.130972385406494
    3. '=int' → logprob: -10.255971908569336
    4. ' ' → logprob: -12.380971908569336
    5. ',' → logprob: -12.505971908569336
    6. ' ,' → logprob: -15.755971908569336
    7. ' ' → logprob: -16.380971908569336
    8. 'int' → logprob: -16.630971908569336
    9. ' =
' → logprob: -16.755971908569336
    10. 'space' → logprob: -16.880971908569336

Token 462: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.1658615916967392
    2. 'm' → logprob: -1.9158616065979004
    3. ' k' → logprob: -5.6658616065979
    4. ' =' → logprob: -7.1658616065979
    5. ' ' → logprob: -7.9158616065979
    6. '=' → logprob: -8.165861129760742
    7. 'k' → logprob: -8.540861129760742
    8. ' line' → logprob: -8.540861129760742
    9. ' q' → logprob: -9.665861129760742
    10. '*' → logprob: -9.665861129760742

Token 463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759698748588562
    2. '=' → logprob: -0.8259698748588562
    3. '=line' → logprob: -10.450969696044922
    4. ',' → logprob: -14.075969696044922
    5. ' ' → logprob: -14.950969696044922
    6. ')' → logprob: -15.950969696044922
    7. '=int' → logprob: -16.200969696044922
    8. '=input' → logprob: -16.575969696044922
    9. '    ' → logprob: -17.075969696044922
    10. '=n' → logprob: -17.325969696044922

Token 464: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0111074885353446
    2. 'map' → logprob: -4.511107444763184
    3. ' line' → logprob: -9.761107444763184
    4. 'line' → logprob: -13.261107444763184
    5. ' list' → logprob: -16.2611083984375
    6. '	map' → logprob: -17.0111083984375
    7. '[' → logprob: -17.5111083984375
    8. '   ' → logprob: -17.6361083984375
    9. ' ' → logprob: -17.8861083984375
    10. '(map' → logprob: -18.0111083984375

Token 465: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02403741329908371
    2. '(str' → logprob: -3.7740373611450195
    3. '(lambda' → logprob: -7.5240373611450195
    4. '(line' → logprob: -8.64903736114502
    5. '(' → logprob: -9.89903736114502
    6. '(list' → logprob: -11.27403736114502
    7. 'int' → logprob: -11.89903736114502
    8. 'str' → logprob: -13.14903736114502
    9. '(tuple' → logprob: -13.52403736114502
    10. '(len' → logprob: -13.52403736114502

Token 466: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0007201764383353293
    2. '(' → logprob: -8.250720024108887
    3. ',line' → logprob: -8.750720024108887
    4. ',' → logprob: -8.875720024108887
    5. 'line' → logprob: -9.250720024108887
    6. '=line' → logprob: -10.625720024108887
    7. ')' → logprob: -11.500720024108887
    8. '[line' → logprob: -11.750720024108887
    9. ' line' → logprob: -11.875720024108887
    10. '(str' → logprob: -12.375720024108887

Token 467: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04858771339058876
    2. ' line' → logprob: -3.0485877990722656
    3. 'str' → logprob: -15.798587799072266
    4. '	line' → logprob: -16.548587799072266
    5. '(line' → logprob: -16.923587799072266
    6. '[line' → logprob: -17.298587799072266
    7. '   ' → logprob: -17.423587799072266
    8. '#line' → logprob: -17.548587799072266
    9. 'map' → logprob: -17.923587799072266
    10. ' ' → logprob: -18.548587799072266

Token 468: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.6675306558609009
    2. '().' → logprob: -0.9175306558609009
    3. '.split' → logprob: -2.6675305366516113
    4. '.' → logprob: -4.042530536651611
    5. ' .' → logprob: -7.667530536651611
    6. 'split' → logprob: -10.16753101348877
    7. '.readline' → logprob: -10.66753101348877
    8. 'strip' → logprob: -11.41753101348877
    9. '.rstrip' → logprob: -13.54253101348877
    10. '()' → logprob: -14.16753101348877

Token 469: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '.split' → logprob: -15.250000953674316
    3. '()' → logprob: -15.500000953674316
    4. 'split' → logprob: -16.75
    5. ' ().' → logprob: -18.375
    6. '(' → logprob: -19.625
    7. '()
' → logprob: -20.125
    8. '   ' → logprob: -20.375
    9. 'Split' → logprob: -21.5
    10. '_split' → logprob: -21.625

Token 470: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. '(split' → logprob: -14.250000953674316
    3. ' split' → logprob: -16.000001907348633
    4. ')' → logprob: -16.125001907348633
    5. '.split' → logprob: -16.750001907348633
    6. 'sp' → logprob: -17.500001907348633
    7. 'spl' → logprob: -18.625001907348633
    8. '```' → logprob: -18.625001907348633
    9. 'plit' → logprob: -20.125001907348633
    10. '   ' → logprob: -20.250001907348633

Token 471: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08152537047863007
    2. '()' → logprob: -2.5815253257751465
    3. '('' → logprob: -6.9565253257751465
    4. ')' → logprob: -7.2065253257751465
    5. '(' → logprob: -7.3315253257751465
    6. '())
' → logprob: -9.081525802612305
    7. '(),' → logprob: -9.456525802612305
    8. '(','' → logprob: -9.831525802612305
    9. '(',' → logprob: -11.081525802612305
    10. '()
' → logprob: -11.706525802612305

Token 472: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038905765395611525
    2. '<|end|>' → logprob: -6.128890514373779
    3. '        
' → logprob: -6.753890514373779
    4. '```' → logprob: -8.628890991210938
    5. '   ' → logprob: -9.003890991210938
    6. ',' → logprob: -9.753890991210938
    7. '  
' → logprob: -10.628890991210938
    8. ')' → logprob: -10.878890991210938
    9. '
' → logprob: -11.003890991210938
    10. '      ' → logprob: -11.253890991210938

Token 473: ' if' (ID: 538)
  Prédit: ' patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -0.44988903403282166
    2. 'ac' → logprob: -1.824889063835144
    3. 'patterns' → logprob: -2.3248889446258545
    4. ' ac' → logprob: -3.3248889446258545
    5. ' trie' → logprob: -3.9498889446258545
    6. ' autom' → logprob: -4.699889183044434
    7. 'tr' → logprob: -4.824889183044434
    8. ' words' → logprob: -4.824889183044434
    9. ' if' → logprob: -5.074889183044434
    10. '       ' → logprob: -5.199889183044434

Token 474: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06196846812963486
    2. 'n' → logprob: -2.8119685649871826
    3. ' not' → logprob: -14.061968803405762
    4. '(n' → logprob: -16.811967849731445
    5. '	n' → logprob: -17.061967849731445
    6. ' ' → logprob: -17.311967849731445
    7. 'not' → logprob: -17.811967849731445
    8. ' ' → logprob: -18.186967849731445
    9. 'n't' → logprob: -19.186967849731445
    10. 'm' → logprob: -19.686967849731445

Token 475: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2014927715063095
    2. '==' → logprob: -1.7014927864074707
    3. ' ' → logprob: -9.826492309570312
    4. ' <' → logprob: -11.201492309570312
    5. '=' → logprob: -12.201492309570312
    6. '<' → logprob: -12.576492309570312
    7. ' <=' → logprob: -14.326492309570312
    8. ' =' → logprob: -14.326492309570312
    9. '<=' → logprob: -14.701492309570312
    10. '>' → logprob: -15.201492309570312

Token 476: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013267839094623923
    2. ' ' → logprob: -6.626326560974121
    3. 'm' → logprob: -14.376326560974121
    4. '   ' → logprob: -16.251327514648438
    5. ' m' → logprob: -16.751327514648438
    6. '  ' → logprob: -17.688827514648438
    7. '=' → logprob: -18.063827514648438
    8. '۰' → logprob: -18.063827514648438
    9. '```' → logprob: -18.126327514648438
    10. ' ' → logprob: -18.313827514648438

Token 477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. 'm' → logprob: -15.875035285949707
    4. '-' → logprob: -17.125036239624023
    5. 'n' → logprob: -17.812536239624023
    6. 'and' → logprob: -17.937536239624023
    7. '```' → logprob: -18.187536239624023
    8. '۰' → logprob: -18.625036239624023
    9. '   ' → logprob: -18.687536239624023
    10. 's' → logprob: -18.750036239624023

Token 478: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858850687742233
    2. 'and' → logprob: -3.048588514328003
    3. ' ' → logprob: -14.298588752746582
    4. '	and' → logprob: -15.048588752746582
    5. '   ' → logprob: -16.923587799072266
    6. ':' → logprob: -17.048587799072266
    7. ' an' → logprob: -17.298587799072266
    8. ' ' → logprob: -17.423587799072266
    9. ' a' → logprob: -17.673587799072266
    10. ',' → logprob: -17.923587799072266

Token 479: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015023599844425917
    2. ' m' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.126502990722656
    4. '	m' → logprob: -19.501502990722656
    5. '  ' → logprob: -19.751502990722656
    6. ' ' → logprob: -22.126502990722656
    7. ' ' → logprob: -22.251502990722656
    8. '    ' → logprob: -22.376502990722656
    9. 'ｍ' → logprob: -23.251502990722656
    10. '_m' → logprob: -23.376502990722656

Token 480: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6328151822090149
    2. '==' → logprob: -0.7578151822090149
    3. '=' → logprob: -9.00781536102295
    4. '0' → logprob: -9.75781536102295
    5. ' ' → logprob: -11.00781536102295
    6. ')==' → logprob: -12.00781536102295
    7. ']==' → logprob: -12.88281536102295
    8. ' =' → logprob: -12.88281536102295
    9. ')' → logprob: -13.00781536102295
    10. '<|end|>' → logprob: -13.50781536102295

Token 481: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.878177642822266
    4. '۰' → logprob: -19.378177642822266
    5. '  ' → logprob: -19.503177642822266
    6. '   ' → logprob: -20.940677642822266
    7. '<|end|>' → logprob: -20.940677642822266
    8. '```' → logprob: -21.253177642822266
    9. '=' → logprob: -21.628177642822266
    10. '０' → logprob: -21.940677642822266

Token 482: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '۰' → logprob: -19.750024795532227
    4. '  ' → logprob: -20.500024795532227
    5. '```' → logprob: -20.937524795532227
    6. '<|end|>' → logprob: -21.062524795532227
    7. '   ' → logprob: -21.125024795532227
    8. ' ' → logprob: -21.250024795532227
    9. '০' → logprob: -21.375024795532227
    10. '=' → logprob: -21.500024795532227

Token 483: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3879430890083313
    2. ':
' → logprob: -1.1379430294036865
    3. '           ' → logprob: -7.012943267822266
    4. '       ' → logprob: -9.387943267822266
    5. ':return' → logprob: -9.637943267822266
    6. ':
' → logprob: -11.512943267822266
    7. '   ' → logprob: -11.512943267822266
    8. ',' → logprob: -14.762943267822266
    9. '               ' → logprob: -15.137943267822266
    10. '():
' → logprob: -15.262943267822266

Token 484: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2471589798224159e-05
    2. '               ' → logprob: -12.125012397766113
    3. '       ' → logprob: -12.125012397766113
    4. '		' → logprob: -14.000012397766113
    5. '          ' → logprob: -15.000012397766113
    6. '	       ' → logprob: -16.12501335144043
    7. '   ' → logprob: -16.25001335144043
    8. '
' → logprob: -16.75001335144043
    9. ' break' → logprob: -17.00001335144043
    10. '                   ' → logprob: -17.12501335144043

Token 485: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19279173016548157
    2. 'return' → logprob: -2.442791700363159
    3. 'break' (adapté à ' break') → logprob: -2.692791700363159
    4. ' break' → logprob: -4.442791938781738
    5. ' return' → logprob: -5.192791938781738
    6. '               ' → logprob: -5.692791938781738
    7. '       ' → logprob: -10.942791938781738
    8. '	break' → logprob: -11.317791938781738
    9. '		' → logprob: -12.067791938781738
    10. '	       ' → logprob: -12.567791938781738

Token 486: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6423969864845276
    2. '
' → logprob: -1.3923969268798828
    3. '<|end|>' → logprob: -2.142396926879883
    4. '        
' → logprob: -2.267396926879883
    5. '    
' → logprob: -6.767396926879883
    6. '  
' → logprob: -6.892396926879883
    7. '<|end|>' → logprob: -7.267396926879883
    8. '```' → logprob: -7.892396926879883
    9. '            
' → logprob: -8.017396926879883
    10. ' 
' → logprob: -8.517396926879883

Token 487: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8063783645629883
    2. '       ' → logprob: -1.1813783645629883
    3. ' patterns' → logprob: -2.1813783645629883
    4. 'patterns' → logprob: -3.1813783645629883
    5. ' aho' → logprob: -3.3063783645629883
    6. ' ac' → logprob: -3.8063783645629883
    7. 'ac' → logprob: -4.681378364562988
    8. '        
' → logprob: -4.931378364562988
    9. '```' → logprob: -5.681378364562988
    10. '    
' → logprob: -5.931378364562988

Token 488: ' element' (ID: 3577)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.8606929779052734
    2. ' patterns' → logprob: -0.9856929779052734
    3. 'ac' → logprob: -1.8606929779052734
    4. ' ac' → logprob: -3.7356929779052734
    5. 'words' → logprob: -4.860692977905273
    6. ' words' → logprob: -5.235692977905273
    7. ' autom' → logprob: -5.735692977905273
    8. ' aho' → logprob: -6.360692977905273
    9. 'autom' → logprob: -6.485692977905273
    10. 'tr' → logprob: -6.735692977905273

Token 489: '_strings' (ID: 87251)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00034261439577676356
    2. ' =' → logprob: -9.37534236907959
    3. '_ids' → logprob: -9.37534236907959
    4. ' s' → logprob: -9.50034236907959
    5. '_names' → logprob: -10.37534236907959
    6. '_s' → logprob: -10.50034236907959
    7. '_list' → logprob: -11.75034236907959
    8. '_counts' → logprob: -12.50034236907959
    9. '=' → logprob: -12.62534236907959
    10. '_' → logprob: -12.62534236907959

Token 490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031825865153223276
    2. '=' → logprob: -5.753182411193848
    3. '=[]' → logprob: -13.003182411193848
    4. ' ' → logprob: -14.003182411193848
    5. ',' → logprob: -14.253182411193848
    6. '   ' → logprob: -15.003182411193848
    7. '[]' → logprob: -15.378182411193848
    8. '[' → logprob: -15.503182411193848
    9. '=[]
' → logprob: -16.128183364868164
    10. 's' → logprob: -16.753183364868164

Token 491: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6827294230461121
    2. ' [' → logprob: -0.9327294230461121
    3. '[]' → logprob: -2.682729482650757
    4. ' []' → logprob: -4.182729244232178
    5. '[input' → logprob: -5.432729244232178
    6. '[n' → logprob: -5.932729244232178
    7. '[str' → logprob: -6.557729244232178
    8. '[data' → logprob: -6.932729244232178
    9. '[list' → logprob: -7.057729244232178
    10. '[s' → logprob: -7.057729244232178

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5926591753959656
    2. ' for' → logprob: -0.9676591753959656
    3. 'for' → logprob: -3.7176592350006104
    4. '<|end|>' → logprob: -3.9676592350006104
    5. '
' → logprob: -4.717658996582031
    6. '	' → logprob: -5.217658996582031
    7. '        
' → logprob: -6.217658996582031
    8. '[' → logprob: -6.592658996582031
    9. '	for' → logprob: -6.842658996582031
    10. '  
' → logprob: -6.842658996582031

Token 493: ' length' (ID: 5517)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6980552077293396
    2. 'for' → logprob: -0.6980552077293396
    3. '       ' → logprob: -5.323055267333984
    4. ' ' → logprob: -11.823055267333984
    5. '	for' → logprob: -12.698055267333984
    6. ' ' → logprob: -13.573055267333984
    7. '   ' → logprob: -13.823055267333984
    8. 'elements' → logprob: -14.073055267333984
    9. 'element' → logprob: -14.198055267333984
    10. '
' → logprob: -14.448055267333984

Token 494: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21883852779865265
    2. '=' → logprob: -2.3438384532928467
    3. 's' → logprob: -2.3438384532928467
    4. '_' → logprob: -5.843838691711426
    5. '   ' → logprob: -7.593838691711426
    6. '       ' → logprob: -7.968838691711426
    7. '_tokens' → logprob: -8.218838691711426
    8. '_s' → logprob: -9.218838691711426
    9. '    ' → logprob: -9.593838691711426
    10. '        ' → logprob: -9.968838691711426

Token 495: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868883550167084
    2. '=' → logprob: -1.1368883848190308
    3. ' +=' → logprob: -11.51188850402832
    4. ',' → logprob: -12.76188850402832
    5. ' ' → logprob: -13.26188850402832
    6. '+=' → logprob: -14.13688850402832
    7. '_' → logprob: -14.88688850402832
    8. '   ' → logprob: -15.13688850402832
    9. '=[]' → logprob: -15.13688850402832
    10. 's' → logprob: -15.26188850402832

Token 496: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05489831045269966
    2. ' ' → logprob: -2.929898262023926
    3. '   ' → logprob: -11.804898262023926
    4. '[' → logprob: -12.554898262023926
    5. ' [' → logprob: -13.304898262023926
    6. ' ' → logprob: -13.679898262023926
    7. '  ' → logprob: -14.679898262023926
    8. '=' → logprob: -15.242398262023926
    9. 'n' → logprob: -15.429898262023926
    10. 's' → logprob: -15.554898262023926

Token 497: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000718030845746398
    2. ' ' → logprob: -7.250718116760254
    3. '[' → logprob: -12.500718116760254
    4. ' [' → logprob: -14.188218116760254
    5. '   ' → logprob: -14.188218116760254
    6. 'len' → logprob: -14.813218116760254
    7. ' ' → logprob: -15.125718116760254
    8. 'int' → logprob: -15.375718116760254
    9. 'n' → logprob: -15.438218116760254
    10. '[]' → logprob: -15.563218116760254

Token 498: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15152528882026672
    2. '
' → logprob: -2.1515252590179443
    3. ' for' → logprob: -4.776525497436523
    4. '<|end|>' → logprob: -4.776525497436523
    5. '        
' → logprob: -5.651525497436523
    6. 'for' → logprob: -6.526525497436523
    7. '  
' → logprob: -7.401525497436523
    8. '<|end|>' → logprob: -8.026525497436523
    9. '	' → logprob: -8.526525497436523
    10. '```' → logprob: -8.651525497436523

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08135734498500824
    2. '<|end|>' → logprob: -2.83135724067688
    3. ' for' → logprob: -5.081357479095459
    4. '
' → logprob: -5.581357479095459
    5. '        
' → logprob: -5.581357479095459
    6. '<|end|>' → logprob: -6.706357479095459
    7. 'for' → logprob: -6.956357479095459
    8. ',' → logprob: -7.581357479095459
    9. '	' → logprob: -7.831357479095459
    10. '```' → logprob: -7.831357479095459

Token 500: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.68264240026474
    2. '       ' → logprob: -0.93264240026474
    3. 'for' (adapté à ' for') → logprob: -2.3076424598693848
    4. '	' → logprob: -8.182641983032227
    5. '	for' → logprob: -8.432641983032227
    6. '```' → logprob: -8.557641983032227
    7. '   ' → logprob: -8.682641983032227
    8. '        
' → logprob: -8.932641983032227
    9. '[' → logprob: -9.307641983032227
    10. ' ' → logprob: -9.432641983032227

Token 501: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006983299273997545
    2. ' _' → logprob: -5.006983280181885
    3. '_i' → logprob: -8.256983757019043
    4. ' i' → logprob: -12.131983757019043
    5. 'i' → logprob: -12.881983757019043
    6. '_in' → logprob: -16.006982803344727
    7. '_element' → logprob: -16.506982803344727
    8. '_idx' → logprob: -16.881982803344727
    9. '_range' → logprob: -17.006982803344727
    10. '_elements' → logprob: -17.256982803344727

Token 502: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8712851405143738
    2. 'range' → logprob: -1.1212852001190186
    3. ' in' → logprob: -1.3712852001190186
    4. ' range' → logprob: -6.3712849617004395
    5. ' ' → logprob: -8.996285438537598
    6. '_' → logprob: -10.621285438537598
    7. '  ' → logprob: -10.746285438537598
    8. 'n' → logprob: -10.996285438537598
    9. 'i' → logprob: -10.996285438537598
    10. ' _' → logprob: -11.371285438537598

Token 503: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033784625702537596
    2. ' range' → logprob: -8.000337600708008
    3. 'element' → logprob: -13.000337600708008
    4. ' ' → logprob: -17.375337600708008
    5. 'input' → logprob: -17.500337600708008
    6. '	range' → logprob: -17.875337600708008
    7. '(range' → logprob: -18.000337600708008
    8. 'rang' → logprob: -18.125337600708008
    9. '   ' → logprob: -18.250337600708008
    10. 'ra' → logprob: -18.500337600708008

Token 504: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001025895617203787
    2. '(m' → logprob: -9.250102996826172
    3. 'n' → logprob: -12.500102996826172
    4. '(' → logprob: -13.000102996826172
    5. ' n' → logprob: -14.875102996826172
    6. ' (' → logprob: -17.125102996826172
    7. 'm' → logprob: -17.375102996826172
    8. '_n' → logprob: -20.375102996826172
    9. '	n' → logprob: -20.500102996826172
    10. '(
' → logprob: -21.250102996826172

Token 505: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00830533541738987
    2. '):' → logprob: -4.883305549621582
    3. '       ' → logprob: -7.633305549621582
    4. ':
' → logprob: -9.133305549621582
    5. '):
' → logprob: -10.508305549621582
    6. ' ):
' → logprob: -10.508305549621582
    7. ':' → logprob: -11.133305549621582
    8. '           ' → logprob: -11.258305549621582
    9. '   ' → logprob: -11.383305549621582
    10. '():
' → logprob: -12.508305549621582

Token 506: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010402000043541193
    2. '```' → logprob: -10.500103950500488
    3. '<|end|>' → logprob: -11.000103950500488
    4. '   ' → logprob: -11.125103950500488
    5. '       ' → logprob: -12.000103950500488
    6. ' line' → logprob: -12.250103950500488
    7. '    	   ' → logprob: -12.500103950500488
    8. '	       ' → logprob: -12.625103950500488
    9. '	   ' → logprob: -12.750103950500488
    10. '<|end|>' → logprob: -12.750103950500488

Token 507: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3550301492214203
    2. 's' (adapté à ' s') → logprob: -1.3550301790237427
    3. 'element' → logprob: -4.230030059814453
    4. ' element' → logprob: -4.605030059814453
    5. 'elem' → logprob: -5.355030059814453
    6. ' elem' → logprob: -5.605030059814453
    7. ' word' → logprob: -5.855030059814453
    8. 'word' → logprob: -6.105030059814453
    9. 'el' → logprob: -6.355030059814453
    10. ' el' → logprob: -8.480030059814453

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0789048820734024
    2. '=' → logprob: -2.578904867172241
    3. '=sys' → logprob: -12.07890510559082
    4. 'tr' → logprob: -12.70390510559082
    5. ' ' → logprob: -13.07890510559082
    6. '   ' → logprob: -13.45390510559082
    7. '=input' → logprob: -14.07890510559082
    8. '=line' → logprob: -14.45390510559082
    9. 'tring' → logprob: -14.70390510559082
    10. '           ' → logprob: -15.07890510559082

Token 509: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.026841843500733376
    2. ' sys' → logprob: -4.026841640472412
    3. 'input' → logprob: -4.776841640472412
    4. ' input' → logprob: -8.40184211730957
    5. '   ' → logprob: -13.15184211730957
    6. '	sys' → logprob: -13.65184211730957
    7. '=sys' → logprob: -13.90184211730957
    8. '(sys' → logprob: -14.15184211730957
    9. 'line' → logprob: -14.27684211730957
    10. 'stdin' → logprob: -14.52684211730957

Token 510: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.2762428822461516e-05
    2. 'stdin' → logprob: -10.000052452087402
    3. '.stdout' → logprob: -11.875052452087402
    4. '.readline' → logprob: -15.375052452087402
    5. '.argv' → logprob: -16.25005340576172
    6. '.std' → logprob: -17.25005340576172
    7. '.' → logprob: -17.37505340576172
    8. ' stdin' → logprob: -18.00005340576172
    9. '(stdin' → logprob: -18.50005340576172
    10. '.stderr' → logprob: -20.00005340576172

Token 511: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -16.0
    3. '.stdin' → logprob: -16.75
    4. 'read' → logprob: -16.75
    5. ' readline' → logprob: -16.875
    6. 'stdin' → logprob: -17.75
    7. 'rstrip' → logprob: -18.0
    8. '.read' → logprob: -19.5
    9. 'line' → logprob: -19.625
    10. '().' → logprob: -19.875

Token 512: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003138497471809387
    2. '.strip' → logprob: -5.878138542175293
    3. '.rstrip' → logprob: -8.128138542175293
    4. '()' → logprob: -10.878138542175293
    5. '.readline' → logprob: -11.753138542175293
    6. '.' → logprob: -12.628138542175293
    7. 'rstrip' → logprob: -12.878138542175293
    8. '           ' → logprob: -13.503138542175293
    9. ' ().' → logprob: -13.628138542175293
    10. '()
' → logprob: -14.003138542175293

Token 513: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.001173917087726295
    2. 'rstrip' → logprob: -6.751173973083496
    3. ' strip' → logprob: -12.501173973083496
    4. '_strip' → logprob: -18.50117301940918
    5. '.strip' → logprob: -20.00117301940918
    6. '(strip' → logprob: -21.12617301940918
    7. 'str' → logprob: -21.25117301940918
    8. '```' → logprob: -21.50117301940918
    9. '-strip' → logprob: -21.87617301940918
    10. 'decode' → logprob: -22.87617301940918

Token 514: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013495712541043758
    2. '
' → logprob: -5.513495922088623
    3. '()' → logprob: -6.013495922088623
    4. '<|end|>' → logprob: -6.013495922088623
    5. '            
' → logprob: -6.763495922088623
    6. ')' → logprob: -6.888495922088623
    7. '               ' → logprob: -7.513495922088623
    8. '<|end|>' → logprob: -7.638495922088623
    9. '       ' → logprob: -7.763495922088623
    10. '()
' → logprob: -8.763495445251465

Token 515: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006932401098310947
    2. 'element' → logprob: -5.381932258605957
    3. '<|end|>' → logprob: -7.006932258605957
    4. ' element' → logprob: -7.631932258605957
    5. '       ' → logprob: -8.506932258605957
    6. '
' → logprob: -9.006932258605957
    7. '[element' → logprob: -9.256932258605957
    8. '<|end|>' → logprob: -9.256932258605957
    9. '            
' → logprob: -9.381932258605957
    10. 's' → logprob: -9.756932258605957

Token 516: ' element' (ID: 3577)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24080756306648254
    2. ' element' → logprob: -2.24080753326416
    3. 'element' (adapté à ' element') → logprob: -2.24080753326416
    4. ' length' → logprob: -7.49080753326416
    5. 'length' → logprob: -7.86580753326416
    6. '       ' → logprob: -8.74080753326416
    7. '	       ' → logprob: -10.61580753326416
    8. '	element' → logprob: -10.99080753326416
    9. '```' → logprob: -11.11580753326416
    10. '[element' → logprob: -11.11580753326416

Token 517: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -1.0325924449716695e-05
    2. '_s' → logprob: -11.62501049041748
    3. 's' → logprob: -13.87501049041748
    4. '_' → logprob: -15.25001049041748
    5. '_str' → logprob: -16.375009536743164
    6. 'strings' → logprob: -17.500009536743164
    7. ' _' → logprob: -17.750009536743164
    8. 'Strings' → logprob: -18.625009536743164
    9. ')_' → logprob: -18.625009536743164
    10. '_elements' → logprob: -18.625009536743164

Token 518: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009548133239150047
    2. '.' → logprob: -7.000954627990723
    3. '.extend' → logprob: -10.625954627990723
    4. ' .' → logprob: -11.500954627990723
    5. '+=' → logprob: -12.375954627990723
    6. 'append' → logprob: -13.250954627990723
    7. ' +=' → logprob: -13.250954627990723
    8. '=' → logprob: -14.750954627990723
    9. '.app' → logprob: -15.000954627990723
    10. '.ap' → logprob: -15.500954627990723

Token 519: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00014525714504998177
    2. 's' → logprob: -9.000144958496094
    3. '(' → logprob: -10.750144958496094
    4. ' s' → logprob: -15.000144958496094
    5. ' (' → logprob: -18.500144958496094
    6. '(
' → logprob: -18.875144958496094
    7. '((' → logprob: -19.125144958496094
    8. '	s' → logprob: -22.000144958496094
    9. '{s' → logprob: -22.250144958496094
    10. ')s' → logprob: -22.500144958496094

Token 520: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024105500429868698
    2. ')
' → logprob: -4.274105548858643
    3. '           ' → logprob: -4.649105548858643
    4. '<|end|>' → logprob: -8.399105072021484
    5. '<|end|>' → logprob: -10.649105072021484
    6. '
' → logprob: -10.649105072021484
    7. ',' → logprob: -12.024105072021484
    8. '               ' → logprob: -12.024105072021484
    9. ' )' → logprob: -12.149105072021484
    10. '		' → logprob: -12.399105072021484

Token 521: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 522: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.31846392154693604
    2. ' length' → logprob: -1.443463921546936
    3. '           ' → logprob: -3.3184638023376465
    4. '   ' → logprob: -8.443464279174805
    5. '       ' → logprob: -8.943464279174805
    6. '	length' → logprob: -10.318464279174805
    7. ',length' → logprob: -12.193464279174805
    8. '[length' → logprob: -12.443464279174805
    9. '(length' → logprob: -12.568464279174805
    10. '_length' → logprob: -12.818464279174805

Token 523: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.1432991325855255
    2. '+=' → logprob: -2.143299102783203
    3. ' +=' → logprob: -4.643299102783203
    4. '_' → logprob: -5.143299102783203
    5. '+' → logprob: -7.643299102783203
    6. '=' → logprob: -9.393299102783203
    7. ' _' → logprob: -10.018299102783203
    8. '_s' → logprob: -10.143299102783203
    9. 'sum' → logprob: -10.268299102783203
    10. 's' → logprob: -10.643299102783203

Token 524: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.575965404510498
    2. ' +=' → logprob: -0.825965404510498
    3. '+' → logprob: -10.825965881347656
    4. ' +' → logprob: -12.700965881347656
    5. '=' → logprob: -13.700965881347656
    6. ']+=' → logprob: -14.200965881347656
    7. '   ' → logprob: -14.325965881347656
    8. ' ' → logprob: -15.950965881347656
    9. '+=(' → logprob: -15.950965881347656
    10. '+='' → logprob: -15.950965881347656

Token 525: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001170460251159966
    2. ' len' → logprob: -6.751170635223389
    3. '(len' → logprob: -15.37617015838623
    4. '1' → logprob: -20.751171112060547
    5. '   ' → logprob: -20.876171112060547
    6. '[len' → logprob: -21.001171112060547
    7. '	len' → logprob: -21.001171112060547
    8. '=len' → logprob: -21.501171112060547
    9. ',len' → logprob: -22.001171112060547
    10. 's' → logprob: -22.126171112060547

Token 526: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.702754474943504e-05
    2. 's' → logprob: -10.25003719329834
    3. '(' → logprob: -13.37503719329834
    4. ' s' → logprob: -20.250036239624023
    5. ' (' → logprob: -20.625036239624023
    6. '(
' → logprob: -21.625036239624023
    7. '()' → logprob: -21.875036239624023
    8. '_s' → logprob: -22.000036239624023
    9. '('' → logprob: -23.750036239624023
    10. '	s' → logprob: -23.875036239624023

Token 527: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001488792710006237
    2. '<|end|>' → logprob: -7.00148868560791
    3. ')
' → logprob: -7.87648868560791
    4. '
' → logprob: -9.25148868560791
    5. ' )' → logprob: -10.37648868560791
    6. '+' → logprob: -10.75148868560791
    7. '<|end|>' → logprob: -10.87648868560791
    8. ')+' → logprob: -11.50148868560791
    9. '       ' → logprob: -12.87648868560791
    10. ' +' → logprob: -13.37648868560791

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1033100113272667
    2. '<|end|>' → logprob: -2.9783101081848145
    3. '
' → logprob: -3.1033101081848145
    4. '<|end|>' → logprob: -7.1033101081848145
    5. '```' → logprob: -7.2283101081848145
    6. '        
' → logprob: -7.8533101081848145
    7. ' for' → logprob: -9.728309631347656
    8. ' pattern' → logprob: -9.853309631347656
    9. ' next' → logprob: -10.478309631347656
    10. 'Next' → logprob: -10.728309631347656

Token 529: ' #' (ID: 1069)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.41515564918518066
    2. 'pattern' → logprob: -1.9151556491851807
    3. ' patterns' → logprob: -2.4151556491851807
    4. '       ' → logprob: -4.540155410766602
    5. 'for' → logprob: -4.540155410766602
    6. 'ac' → logprob: -4.540155410766602
    7. ' pattern' → logprob: -4.665155410766602
    8. 'words' → logprob: -5.165155410766602
    9. 'search' → logprob: -5.165155410766602
    10. 'matches' → logprob: -5.415155410766602

Token 530: ' Read' (ID: 5405)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.7723614573478699
    2. 'patterns' → logprob: -0.8973614573478699
    3. 'pattern' → logprob: -3.2723615169525146
    4. ' patterns' → logprob: -4.0223612785339355
    5. 'for' → logprob: -4.5223612785339355
    6. '#' → logprob: -4.8973612785339355
    7. 'word' → logprob: -5.7723612785339355
    8. 'query' → logprob: -5.8973612785339355
    9. 'words' → logprob: -6.0223612785339355
    10. 'result' → logprob: -6.0223612785339355

Token 531: ' and' (ID: 326)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.5904099345207214
    2. 'pattern' → logprob: -1.7154099941253662
    3. ' patterns' → logprob: -2.590409994125366
    4. 'queries' → logprob: -2.965409994125366
    5. 'query' → logprob: -3.465409994125366
    6. ' pattern' → logprob: -3.965409994125366
    7. 'm' → logprob: -4.090409755706787
    8. ' queries' → logprob: -4.340409755706787
    9. 'target' → logprob: -5.340409755706787
    10. ' query' → logprob: -5.340409755706787

Token 532: ' concatenate' (ID: 192808)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.5179662704467773
    2. ' process' → logprob: -1.8929662704467773
    3. 'build' → logprob: -2.3929662704467773
    4. 'pattern' → logprob: -2.6429662704467773
    5. 'store' → logprob: -4.517966270446777
    6. ' build' → logprob: -4.642966270446777
    7. 'query' → logprob: -4.767966270446777
    8. 'index' → logprob: -4.767966270446777
    9. 'initialize' → logprob: -4.892966270446777
    10. 'prepare' → logprob: -5.017966270446777

Token 533: ' all' (ID: 722)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.4433302581310272
    2. 'patterns' → logprob: -2.1933302879333496
    3. 'text' → logprob: -2.4433302879333496
    4. 'target' → logprob: -3.9433302879333496
    5. '       ' → logprob: -4.06833028793335
    6. 'query' → logprob: -4.19333028793335
    7. 'p' → logprob: -4.31833028793335
    8. ' pattern' → logprob: -4.56833028793335
    9. 'sequence' → logprob: -5.06833028793335
    10. '   ' → logprob: -5.19333028793335

Token 534: ' m' (ID: 284)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5074944496154785
    2. 'patterns' → logprob: -1.3824944496154785
    3. 'query' → logprob: -3.5074944496154785
    4. 'text' → logprob: -4.3824944496154785
    5. 'queries' → logprob: -4.3824944496154785
    6. 'elements' → logprob: -4.6324944496154785
    7. ' pattern' → logprob: -4.6324944496154785
    8. 'code' → logprob: -4.8824944496154785
    9. '   ' → logprob: -5.0074944496154785
    10. ' patterns' → logprob: -5.2574944496154785

Token 535: ' lines' (ID: 8698)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.7761578559875488
    2. 'patterns' → logprob: -1.9011578559875488
    3. 'query' → logprob: -2.526157855987549
    4. ' pattern' → logprob: -3.276157855987549
    5. 'queries' → logprob: -3.276157855987549
    6. 'lines' → logprob: -3.401157855987549
    7. ' query' → logprob: -3.526157855987549
    8. 'element' → logprob: -3.526157855987549
    9. 'strings' → logprob: -3.651157855987549
    10. 'elements' → logprob: -4.151157855987549

Token 536: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36644473671913147
    2. 'text' → logprob: -1.741444706916809
    3. ' text' → logprob: -2.9914448261260986
    4. 'pattern' → logprob: -3.1164448261260986
    5. 'query' → logprob: -4.7414445877075195
    6. ' pattern' → logprob: -4.9914445877075195
    7. 'patterns' → logprob: -5.9914445877075195
    8. 's' → logprob: -6.3664445877075195
    9. 'texts' → logprob: -6.3664445877075195
    10. ' lines' → logprob: -6.7414445877075195

Token 537: ' text' (ID: 2201)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -1.2716008424758911
    2. 'pattern' → logprob: -1.6466008424758911
    3. 'text' → logprob: -2.1466007232666016
    4. 'input' → logprob: -2.6466007232666016
    5. 'code' → logprob: -3.0216007232666016
    6. 'element' → logprob: -3.1466007232666016
    7. ' text' → logprob: -3.2716007232666016
    8. 'elements' → logprob: -3.6466007232666016
    9. 'queries' → logprob: -3.6466007232666016
    10. ' patterns' → logprob: -3.7716007232666016

Token 538: ' into' (ID: 1511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014769778586924076
    2. 'text' → logprob: -4.264769554138184
    3. '
' → logprob: -8.514769554138184
    4. '        
' → logprob: -8.889769554138184
    5. ' text' → logprob: -8.889769554138184
    6. ',' → logprob: -10.389769554138184
    7. 'txt' → logprob: -10.889769554138184
    8. 'texts' → logprob: -10.889769554138184
    9. '   ' → logprob: -11.514769554138184
    10. '```' → logprob: -11.764769554138184

Token 539: ' one' (ID: 1001)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.049289919435977936
    2. ' text' → logprob: -3.1742899417877197
    3. 'txt' → logprob: -6.799289703369141
    4. 'buffer' → logprob: -7.174289703369141
    5. 'a' → logprob: -7.799289703369141
    6. ''' → logprob: -7.799289703369141
    7. '[]' → logprob: -7.924289703369141
    8. 's' → logprob: -7.924289703369141
    9. 'lines' → logprob: -8.04928970336914
    10. ' a' → logprob: -8.04928970336914

Token 540: ' string' (ID: 1621)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.2743770182132721
    2. ' text' → logprob: -2.0243771076202393
    3. '       ' → logprob: -2.2743771076202393
    4. '
' → logprob: -5.77437686920166
    5. '   ' → logprob: -7.77437686920166
    6. 'txt' → logprob: -7.77437686920166
    7. ' full' → logprob: -8.64937686920166
    8. '```' → logprob: -8.64937686920166
    9. 'full' → logprob: -9.27437686920166
    10. '_text' → logprob: -9.27437686920166

Token 541: ' ignoring' (ID: 68244)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13584157824516296
    2. 'text' → logprob: -2.1358416080474854
    3. '
' → logprob: -5.260841369628906
    4. ' text' → logprob: -5.885841369628906
    5. '        
' → logprob: -7.510841369628906
    6. 'txt' → logprob: -9.510841369628906
    7. '```' → logprob: -9.760841369628906
    8. '   ' → logprob: -10.510841369628906
    9. ',' → logprob: -10.510841369628906
    10. '{text' → logprob: -10.760841369628906

Token 542: ' new' (ID: 620)
  Prédit: ' spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spaces' → logprob: -0.2529337704181671
    2. ' whitespace' → logprob: -2.0029337406158447
    3. 'spaces' → logprob: -3.8779337406158447
    4. ''\' → logprob: -4.377933979034424
    5. ''' → logprob: -4.752933979034424
    6. ' whites' → logprob: -4.877933979034424
    7. 'newline' → logprob: -4.877933979034424
    8. ' new' → logprob: -5.127933979034424
    9. '\n' → logprob: -5.252933979034424
    10. 'new' → logprob: -5.627933979034424

Token 543: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.575993537902832
    2. 'line' → logprob: -0.825993537902832
    3. '_line' → logprob: -9.950993537902832
    4. '_lines' → logprob: -12.575993537902832
    5. ' line' → logprob: -13.075993537902832
    6. ' lines' → logprob: -15.075993537902832
    7. 'lin' → logprob: -15.325993537902832
    8. 'l' → logprob: -16.200992584228516
    9. '```' → logprob: -16.450992584228516
    10. 's' → logprob: -16.825992584228516

Token 544: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025899164378643036
    2. 'text' → logprob: -3.9008991718292236
    3. ' text' → logprob: -5.6508989334106445
    4. '        
' → logprob: -7.2758989334106445
    5. '
' → logprob: -7.6508989334106445
    6. ',' → logprob: -8.025898933410645
    7. 'txt' → logprob: -9.900898933410645
    8. '{text' → logprob: -9.900898933410645
    9. ',text' → logprob: -10.025898933410645
    10. '           ' → logprob: -10.650898933410645

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008348373696208
    2. 'text' → logprob: -5.00834846496582
    3. ' text' → logprob: -7.00834846496582
    4. '        
' → logprob: -7.88334846496582
    5. '```' → logprob: -8.50834846496582
    6. ',' → logprob: -10.00834846496582
    7. '
' → logprob: -10.88334846496582
    8. '`' → logprob: -11.75834846496582
    9. '``' → logprob: -11.75834846496582
    10. '           ' → logprob: -11.88334846496582

Token 546: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -0.22889594733715057
    2. ' text' → logprob: -1.978895902633667
    3. '       ' → logprob: -2.728895902633667
    4. '
' → logprob: -7.978896141052246
    5. 'txt' → logprob: -8.228896141052246
    6. '        
' → logprob: -9.603896141052246
    7. 't' → logprob: -9.728896141052246
    8. 'texts' → logprob: -10.103896141052246
    9. 'lines' → logprob: -10.228896141052246
    10. ' lines' → logprob: -10.228896141052246

Token 547: '_lines' (ID: 42980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761308073997498
    2. '=' → logprob: -0.8261308073997498
    3. '_lines' → logprob: -9.326130867004395
    4. '_parts' → logprob: -10.451130867004395
    5. '_text' → logprob: -10.951130867004395
    6. '=''' → logprob: -11.326130867004395
    7. '_' → logprob: -11.576130867004395
    8. '   ' → logprob: -11.576130867004395
    9. 's' → logprob: -12.076130867004395
    10. '_chars' → logprob: -12.701130867004395

Token 548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741533696651459
    2. ' =' → logprob: -0.9741533994674683
    3. '=[]' → logprob: -9.974153518676758
    4. '=[]
' → logprob: -10.724153518676758
    5. '   ' → logprob: -12.099153518676758
    6. '[]' → logprob: -13.724153518676758
    7. '.append' → logprob: -15.724153518676758
    8. ' ' → logprob: -15.724153518676758
    9. '    ' → logprob: -16.099153518676758
    10. '=[]
' → logprob: -16.099153518676758

Token 549: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6110802888870239
    2. '[]
' → logprob: -0.8610802888870239
    3. '[]' → logprob: -3.8610801696777344
    4. '[m' → logprob: -5.361080169677734
    5. '[n' → logprob: -6.111080169677734
    6. '[s' → logprob: -6.111080169677734
    7. ' [' → logprob: -6.986080169677734
    8. '[str' → logprob: -7.486080169677734
    9. '[t' → logprob: -8.361080169677734
    10. '[p' → logprob: -8.611080169677734

Token 550: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07290732115507126
    2. ' for' → logprob: -3.4479072093963623
    3. 'for' → logprob: -3.6979072093963623
    4. '	' → logprob: -4.822907447814941
    5. '<|end|>' → logprob: -6.197907447814941
    6. '	for' → logprob: -6.572907447814941
    7. '        
' → logprob: -7.947907447814941
    8. '		
' → logprob: -8.072907447814941
    9. '	       ' → logprob: -8.322907447814941
    10. '<|end|>' → logprob: -8.447907447814941

Token 551: ' read' (ID: 1729)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.59921795129776
    2. ' for' → logprob: -0.84921795129776
    3. '       ' → logprob: -3.8492178916931152
    4. 'while' → logprob: -7.224217891693115
    5. '	for' → logprob: -7.724217891693115
    6. ' while' → logprob: -9.224218368530273
    7. '   ' → logprob: -9.224218368530273
    8. '           ' → logprob: -9.224218368530273
    9. '        ' → logprob: -9.724218368530273
    10. ' ' → logprob: -9.974218368530273

Token 552: '_length' (ID: 11514)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7549583911895752
    2. '_count' → logprob: -1.1299583911895752
    3. 'count' → logprob: -2.504958391189575
    4. '_lines' → logprob: -2.879958391189575
    5. '_' → logprob: -4.004958152770996
    6. 'ed' → logprob: -4.254958152770996
    7. 'for' → logprob: -4.629958152770996
    8. '=' → logprob: -5.129958152770996
    9. ' =' → logprob: -5.504958152770996
    10. '_chars' → logprob: -5.754958152770996

Token 553: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869387209415436
    2. ' =' → logprob: -1.1369386911392212
    3. 'd' → logprob: -10.51193904876709
    4. ' +=' → logprob: -11.38693904876709
    5. '+=' → logprob: -12.26193904876709
    6. '   ' → logprob: -12.38693904876709
    7. '_count' → logprob: -12.63693904876709
    8. '_' → logprob: -12.88693904876709
    9. ' ' → logprob: -12.88693904876709
    10. 'ed' → logprob: -13.26193904876709

Token 554: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036004253197461367
    2. ' ' → logprob: -5.628600597381592
    3. '   ' → logprob: -15.378600120544434
    4. 'length' → logprob: -16.06610107421875
    5. '  ' → logprob: -17.25360107421875
    6. ' ' → logprob: -17.50360107421875
    7. 'len' → logprob: -17.75360107421875
    8. '۰' → logprob: -18.50360107421875
    9. '=' → logprob: -18.56610107421875
    10. '[' → logprob: -18.56610107421875

Token 555: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015028368216007948
    2. ' ' → logprob: -6.501502990722656
    3. 'length' → logprob: -15.251502990722656
    4. '   ' → logprob: -16.439002990722656
    5. 'len' → logprob: -16.501502990722656
    6. ' ' → logprob: -17.376502990722656
    7. '  ' → logprob: -17.689002990722656
    8. 'sum' → logprob: -18.314002990722656
    9. '۰' → logprob: -18.314002990722656
    10. 's' → logprob: -18.376502990722656

Token 556: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049600787460803986
    2. '<|end|>' → logprob: -4.924600601196289
    3. '
' → logprob: -5.049600601196289
    4. '        
' → logprob: -5.174600601196289
    5. '	' → logprob: -5.299600601196289
    6. '	while' → logprob: -5.424600601196289
    7. '		
' → logprob: -5.549600601196289
    8. 'while' → logprob: -5.799600601196289
    9. ' while' → logprob: -6.174600601196289
    10. '        ' → logprob: -6.174600601196289

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01095479167997837
    2. '	' → logprob: -5.010954856872559
    3. '        
' → logprob: -7.510954856872559
    4. '        ' → logprob: -7.635954856872559
    5. ' while' → logprob: -8.010954856872559
    6. '	       ' → logprob: -8.135954856872559
    7. '
' → logprob: -8.510954856872559
    8. '\t' → logprob: -8.510954856872559
    9. '<|end|>' → logprob: -8.510954856872559
    10. '	while' → logprob: -8.635954856872559

Token 558: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017226938158273697
    2. '	' → logprob: -5.0172271728515625
    3. ' while' → logprob: -5.5172271728515625
    4. '	while' → logprob: -6.1422271728515625
    5. '	       ' → logprob: -6.5172271728515625
    6. '        ' → logprob: -7.7672271728515625
    7. 'while' → logprob: -7.7672271728515625
    8. '           ' → logprob: -7.8922271728515625
    9. '	   ' → logprob: -8.017227172851562
    10. '   ' → logprob: -8.142227172851562

Token 559: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35103002190589905
    2. 'while' → logprob: -1.8510299921035767
    3. ' while' → logprob: -1.9760299921035767
    4. ' for' → logprob: -9.226030349731445
    5. '   ' → logprob: -9.351030349731445
    6. 'for' → logprob: -9.601030349731445
    7. '
' → logprob: -10.226030349731445
    8. '           ' → logprob: -10.976030349731445
    9. '	while' → logprob: -10.976030349731445
    10. ' ' → logprob: -12.101030349731445

Token 560: ' total' (ID: 3609)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.11997180432081223
    2. 'read' → logprob: -2.369971752166748
    3. ' length' → logprob: -4.119971752166748
    4. 'length' → logprob: -5.869971752166748
    5. ' m' → logprob: -8.244972229003906
    6. ' not' → logprob: -9.244972229003906
    7. ' text' → logprob: -10.244972229003906
    8. 'm' → logprob: -10.369972229003906
    9. ' n' → logprob: -10.744972229003906
    10. 'n' → logprob: -11.494972229003906

Token 561: ' text' (ID: 2201)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4371866285800934
    2. '_length' → logprob: -1.562186598777771
    3. 'text' → logprob: -2.1871867179870605
    4. 'read' → logprob: -4.0621867179870605
    5. '_text' → logprob: -5.1871867179870605
    6. ' length' → logprob: -5.4371867179870605
    7. '_read' → logprob: -6.5621867179870605
    8. ' text' → logprob: -7.4371867179870605
    9. 'len' → logprob: -7.9371867179870605
    10. '   ' → logprob: -8.187186241149902

Token 562: ' length' (ID: 5517)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.04545271769165993
    2. 'length' → logprob: -3.795452833175659
    3. '=' → logprob: -5.17045259475708
    4. ' =' → logprob: -5.17045259475708
    5. '_lines' → logprob: -5.42045259475708
    6. '_size' → logprob: -6.42045259475708
    7. '_len' → logprob: -6.92045259475708
    8. ' length' → logprob: -7.04545259475708
    9. '_lengths' → logprob: -7.54545259475708
    10. '_tokens' → logprob: -7.92045259475708

Token 563: ' is' (ID: 382)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.49263203144073486
    2. ' is' → logprob: -1.7426320314407349
    3. '<' → logprob: -1.9926320314407349
    4. ' <=' → logprob: -3.3676319122314453
    5. 'is' → logprob: -4.242631912231445
    6. '<=' → logprob: -4.492631912231445
    7. '=' → logprob: -5.992631912231445
    8. ' =' → logprob: -6.117631912231445
    9. '<n' → logprob: -6.367631912231445
    10. '<m' → logprob: -6.367631912231445

Token 564: ' given' (ID: 4335)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.8552089929580688
    2. 'm' → logprob: -0.9802089929580688
    3. ' length' → logprob: -2.4802088737487793
    4. ' m' → logprob: -2.4802088737487793
    5. ' not' → logprob: -4.605208873748779
    6. 'not' → logprob: -4.605208873748779
    7. 'unknown' → logprob: -5.355208873748779
    8. ' unknown' → logprob: -5.480208873748779
    9. '   ' → logprob: -6.980208873748779
    10. 'n' → logprob: -7.480208873748779

Token 565: ' only' (ID: 1606)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.456588864326477
    2. 'while' → logprob: -1.831588864326477
    3. '       ' → logprob: -2.0815887451171875
    4. ' <' → logprob: -2.2065887451171875
    5. '<=' → logprob: -2.3315887451171875
    6. ' =' → logprob: -3.0815887451171875
    7. ':' → logprob: -3.4565887451171875
    8. '<' → logprob: -3.5815887451171875
    9. ' while' → logprob: -3.5815887451171875
    10. ',' → logprob: -3.7065887451171875

Token 566: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.7095999121665955
    2. 'by' → logprob: -1.3345999717712402
    3. ',' → logprob: -2.0845999717712402
    4. ' as' → logprob: -3.3345999717712402
    5. ' in' → logprob: -3.8345999717712402
    6. 'in' → logprob: -4.20959997177124
    7. 'as' → logprob: -4.58459997177124
    8. 'while' → logprob: -4.70959997177124
    9. '=' → logprob: -5.20959997177124
    10. ' ' → logprob: -5.95959997177124

Token 567: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8814123272895813
    2. 'length' → logprob: -1.3814122676849365
    3. 'read' → logprob: -1.5064122676849365
    4. 'n' → logprob: -2.7564122676849365
    5. '0' → logprob: -4.631412506103516
    6. ' read' → logprob: -4.756412506103516
    7. 'sum' → logprob: -4.756412506103516
    8. ' length' → logprob: -4.881412506103516
    9. ' m' → logprob: -5.006412506103516
    10. ' n' → logprob: -5.506412506103516

Token 568: ' lines' (ID: 8698)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20686468482017517
    2. ',' → logprob: -2.081864595413208
    3. ':
' → logprob: -4.331864833831787
    4. '   ' → logprob: -4.581864833831787
    5. '       ' → logprob: -4.581864833831787
    6. ' and' → logprob: -5.206864833831787
    7. '=' → logprob: -6.081864833831787
    8. ' lines' → logprob: -6.331864833831787
    9. 'and' → logprob: -6.456864833831787
    10. '):' → logprob: -6.456864833831787

Token 569: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2214432805776596
    2. ',' → logprob: -1.7214432954788208
    3. ':' → logprob: -4.846443176269531
    4. '<|end|>' → logprob: -5.971443176269531
    5. '<|end|>' → logprob: -6.471443176269531
    6. ':
' → logprob: -6.596443176269531
    7. '   ' → logprob: -6.721443176269531
    8. ',
' → logprob: -6.846443176269531
    9. ' and' → logprob: -7.221443176269531
    10. ' while' → logprob: -7.346443176269531

Token 570: ' read' (ID: 1729)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015085450373589993
    2. ' while' → logprob: -4.890085220336914
    3. 'while' → logprob: -5.140085220336914
    4. '   ' → logprob: -7.390085220336914
    5. '           ' → logprob: -7.640085220336914
    6. '	   ' → logprob: -8.890085220336914
    7. '	while' → logprob: -9.515085220336914
    8. '<|end|>' → logprob: -9.640085220336914
    9. '        
' → logprob: -10.140085220336914
    10. '<|end|>' → logprob: -10.390085220336914

Token 571: ' exact' (ID: 6354)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.20670540630817413
    2. ' m' → logprob: -3.081705331802368
    3. '   ' → logprob: -3.206705331802368
    4. '       ' → logprob: -3.206705331802368
    5. '1' → logprob: -4.831705570220947
    6. 'lines' → logprob: -4.831705570220947
    7. '    ' → logprob: -5.206705570220947
    8. 'newline' → logprob: -5.456705570220947
    9. ' ' → logprob: -5.581705570220947
    10. 'read' → logprob: -5.706705570220947

Token 572: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.45376089215278625
    2. ' m' → logprob: -1.5787608623504639
    3. 'length' → logprob: -3.453760862350464
    4. 'tokens' → logprob: -3.578760862350464
    5. '    ' → logprob: -3.953760862350464
    6. 'read' → logprob: -4.078761100769043
    7. ' lines' → logprob: -4.453761100769043
    8. '   ' → logprob: -4.703761100769043
    9. ' length' → logprob: -4.703761100769043
    10. ' tokens' → logprob: -5.078761100769043

Token 573: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.02545984834432602
    2. 'lines' → logprob: -4.9004597663879395
    3. ' times' → logprob: -5.9004597663879395
    4. '_lines' → logprob: -6.0254597663879395
    5. 'for' → logprob: -6.2754597663879395
    6. 'tokens' → logprob: -6.5254597663879395
    7. '<|end|>' → logprob: -6.6504597663879395
    8. '(lines' → logprob: -6.7754597663879395
    9. '<|end|>' → logprob: -6.7754597663879395
    10. ')' → logprob: -6.7754597663879395

Token 574: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02983217127621174
    2. 'for' → logprob: -4.404832363128662
    3. ' for' → logprob: -4.529832363128662
    4. '
' → logprob: -6.154832363128662
    5. '<|end|>' → logprob: -6.654832363128662
    6. '   ' → logprob: -7.279832363128662
    7. '	for' → logprob: -7.654832363128662
    8. ',' → logprob: -7.779832363128662
    9. '<|end|>' → logprob: -7.904832363128662
    10. '	' → logprob: -8.904831886291504

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0048590730875730515
    2. ' for' → logprob: -6.00485897064209
    3. '   ' → logprob: -7.25485897064209
    4. 'for' → logprob: -7.50485897064209
    5. '	' → logprob: -7.75485897064209
    6. '<|end|>' → logprob: -8.50485897064209
    7. '	   ' → logprob: -9.12985897064209
    8. '	for' → logprob: -9.25485897064209
    9. ',' → logprob: -9.25485897064209
    10. '           ' → logprob: -10.37985897064209

Token 576: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10413374751806259
    2. ' for' → logprob: -2.4791338443756104
    3. 'for' (adapté à ' for') → logprob: -4.229133605957031
    4. '   ' → logprob: -8.229133605957031
    5. '           ' → logprob: -8.979133605957031
    6. '	for' → logprob: -9.729133605957031
    7. '	' → logprob: -10.479133605957031
    8. '```' → logprob: -11.479133605957031
    9. '	   ' → logprob: -11.979133605957031
    10. ' ' → logprob: -12.479133605957031

Token 577: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.976922744186595e-05
    2. ' _' → logprob: -10.250040054321289
    3. '_range' → logprob: -13.000040054321289
    4. '_i' → logprob: -14.250040054321289
    5. ' in' → logprob: -14.875040054321289
    6. '_line' → logprob: -15.000040054321289
    7. 'range' → logprob: -15.125040054321289
    8. '_=' → logprob: -15.625040054321289
    9. ' range' → logprob: -16.12504005432129
    10. 'i' → logprob: -16.87504005432129

Token 578: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37025901675224304
    2. ' in' → logprob: -1.2452590465545654
    3. 'in' → logprob: -4.620258808135986
    4. ' _' → logprob: -4.870258808135986
    5. ' range' → logprob: -6.245258808135986
    6. 'range' → logprob: -6.245258808135986
    7. 'i' → logprob: -9.620259284973145
    8. '_range' → logprob: -9.745259284973145
    9. '_in' → logprob: -10.620259284973145
    10. ' ' → logprob: -11.495259284973145

Token 579: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00671584764495492
    2. ' range' → logprob: -5.006715774536133
    3. '_' → logprob: -15.256715774536133
    4. ' ' → logprob: -16.131715774536133
    5. '_range' → logprob: -16.131715774536133
    6. '	range' → logprob: -17.381715774536133
    7. '   ' → logprob: -17.756715774536133
    8. 'ran' → logprob: -17.756715774536133
    9. 'rang' → logprob: -18.006715774536133
    10. '(range' → logprob: -18.131715774536133

Token 580: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1345444768667221
    2. '(m' → logprob: -2.1345443725585938
    3. ' m' → logprob: -4.884544372558594
    4. ' (' → logprob: -11.759544372558594
    5. '(' → logprob: -12.009544372558594
    6. '   ' → logprob: -12.259544372558594
    7. '	m' → logprob: -12.884544372558594
    8. ')m' → logprob: -13.509544372558594
    9. 'range' → logprob: -14.134544372558594
    10. '_m' → logprob: -14.634544372558594

Token 581: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05060741677880287
    2. '):' → logprob: -3.050607442855835
    3. '):
' → logprob: -6.550607204437256
    4. '       ' → logprob: -8.175607681274414
    5. '           ' → logprob: -8.550607681274414
    6. ':
' → logprob: -10.425607681274414
    7. ')' → logprob: -10.425607681274414
    8. '   ' → logprob: -10.800607681274414
    9. ',' → logprob: -11.425607681274414
    10. ':' → logprob: -11.925607681274414

Token 582: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00691618025302887
    2. '       ' → logprob: -6.256916046142578
    3. ' text' → logprob: -6.631916046142578
    4. '	       ' → logprob: -6.631916046142578
    5. '   ' → logprob: -7.006916046142578
    6. 'text' → logprob: -7.756916046142578
    7. ' line' → logprob: -8.506916046142578
    8. '               ' → logprob: -8.881916046142578
    9. '	   ' → logprob: -9.131916046142578
    10. ' lines' → logprob: -9.756916046142578

Token 583: ' line' (ID: 2543)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.7178577780723572
    2. 'line' (adapté à ' line') → logprob: -1.467857837677002
    3. ' text' → logprob: -1.967857837677002
    4. ' line' → logprob: -2.342857837677002
    5. 's' → logprob: -4.467857837677002
    6. '           ' → logprob: -4.717857837677002
    7. 'txt' → logprob: -5.092857837677002
    8. 'l' → logprob: -5.342857837677002
    9. 't' → logprob: -5.467857837677002
    10. ' s' → logprob: -5.717857837677002

Token 584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759890675544739
    2. '=' → logprob: -0.8259890675544739
    3. '=line' → logprob: -10.82598876953125
    4. '           ' → logprob: -11.57598876953125
    5. 's' → logprob: -11.70098876953125
    6. '=sys' → logprob: -12.57598876953125
    7. ' ' → logprob: -13.45098876953125
    8. 'text' → logprob: -13.95098876953125
    9. '_text' → logprob: -14.20098876953125
    10. '_' → logprob: -14.32598876953125

Token 585: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1602383404970169
    2. ' sys' → logprob: -1.9102383852005005
    3. 'input' → logprob: -11.410238265991211
    4. '=sys' → logprob: -13.285238265991211
    5. '           ' → logprob: -14.660238265991211
    6. '	sys' → logprob: -14.910238265991211
    7. '(sys' → logprob: -15.160238265991211
    8. ' input' → logprob: -15.285238265991211
    9. '.sys' → logprob: -17.41023826599121
    10. '_sys' → logprob: -18.16023826599121

Token 586: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00014478032244369388
    2. '=sys' → logprob: -9.750144958496094
    3. 'stdin' → logprob: -10.375144958496094
    4. 'in' → logprob: -10.375144958496094
    5. '.readline' → logprob: -11.125144958496094
    6. '.stdout' → logprob: -12.250144958496094
    7. 'sys' → logprob: -12.750144958496094
    8. '(stdin' → logprob: -14.500144958496094
    9. 's' → logprob: -15.000144958496094
    10. '.' → logprob: -15.625144958496094

Token 587: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.8908587662735954e-05
    2. 'sys' → logprob: -11.625019073486328
    3. 'stdin' → logprob: -12.125019073486328
    4. '.stdin' → logprob: -13.375019073486328
    5. 'read' → logprob: -13.500019073486328
    6. 'strip' → logprob: -14.500019073486328
    7. '.' → logprob: -15.250019073486328
    8. 'rstrip' → logprob: -15.750019073486328
    9. '().' → logprob: -16.000019073486328
    10. '```' → logprob: -16.250019073486328

Token 588: '()
' (ID: 1234)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.10792510956525803
    2. '.strip' → logprob: -2.9829251766204834
    3. '().' → logprob: -4.107924938201904
    4. '           ' → logprob: -4.107924938201904
    5. 'rstrip' → logprob: -4.107924938201904
    6. '               ' → logprob: -7.732924938201904
    7. '.readline' → logprob: -7.857924938201904
    8. ')' → logprob: -8.232925415039062
    9. ').' → logprob: -8.732925415039062
    10. '
' → logprob: -8.732925415039062

Token 589: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31781718134880066
    2. '.rstrip' → logprob: -1.567817211151123
    3. '.strip' → logprob: -2.817817211151123
    4. 'rstrip' → logprob: -5.692817211151123
    5. '       ' → logprob: -8.692816734313965
    6. '               ' → logprob: -9.942816734313965
    7. ' =' → logprob: -9.942816734313965
    8. '().' → logprob: -10.192816734313965
    9. '.readline' → logprob: -10.192816734313965
    10. '[:-' → logprob: -10.317816734313965

Token 590: ' text' (ID: 2201)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10200599581003189
    2. ' text' → logprob: -2.602005958557129
    3. 'text' (adapté à ' text') → logprob: -3.977005958557129
    4. '   ' → logprob: -6.477005958557129
    5. '       ' → logprob: -6.727005958557129
    6. '               ' → logprob: -7.602005958557129
    7. '{text' → logprob: -8.352005958557129
    8. '	       ' → logprob: -8.477005958557129
    9. '	text' → logprob: -9.602005958557129
    10. ' if' → logprob: -9.602005958557129

Token 591: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0005430232849903405
    2. ' =' → logprob: -8.000542640686035
    3. '=' → logprob: -9.000542640686035
    4. 'lines' → logprob: -10.750542640686035
    5. '.rstrip' → logprob: -12.000542640686035
    6. '+=' → logprob: -12.125542640686035
    7. '=line' → logprob: -12.250542640686035
    8. '.strip' → logprob: -12.500542640686035
    9. '_tokens' → logprob: -12.500542640686035
    10. '.append' → logprob: -12.500542640686035

Token 592: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024190605618059635
    2. '           ' → logprob: -6.6274189949035645
    3. '.' → logprob: -7.3774189949035645
    4. 'append' → logprob: -8.252419471740723
    5. '=' → logprob: -9.502419471740723
    6. '.rstrip' → logprob: -10.752419471740723
    7. 'rstrip' → logprob: -11.127419471740723
    8. '       ' → logprob: -11.127419471740723
    9. ' =' → logprob: -11.252419471740723
    10. ' .' → logprob: -11.377419471740723

Token 593: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0009328982559964061
    2. '(line' → logprob: -7.000932693481445
    3. ' line' → logprob: -10.750932693481445
    4. '	line' → logprob: -18.375932693481445
    5. '[line' → logprob: -18.750932693481445
    6. '=line' → logprob: -18.750932693481445
    7. '#line' → logprob: -19.250932693481445
    8. '(' → logprob: -20.375932693481445
    9. ',line' → logprob: -20.875932693481445
    10. '_line' → logprob: -21.000932693481445

Token 594: '.strip' (ID: 40613)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.07735786586999893
    2. ')' → logprob: -3.077357769012451
    3. '.strip' → logprob: -3.577357769012451
    4. 'rstrip' → logprob: -8.20235824584961
    5. '[:-' → logprob: -9.70235824584961
    6. '.replace' → logprob: -9.95235824584961
    7. '.' → logprob: -10.82735824584961
    8. '       ' → logprob: -13.20235824584961
    9. ')
' → logprob: -13.45235824584961
    10. '<|end|>' → logprob: -13.57735824584961

Token 595: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5763750672340393
    2. '())' → logprob: -0.8263750672340393
    3. '()' → logprob: -8.201375007629395
    4. '())
' → logprob: -9.451375007629395
    5. ')
' → logprob: -10.326375007629395
    6. ' )' → logprob: -10.826375007629395
    7. '')' → logprob: -10.826375007629395
    8. ' ())' → logprob: -13.451375007629395
    9. '('' → logprob: -13.576375007629395
    10. '))' → logprob: -13.576375007629395

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030584193766117096
    2. '
' → logprob: -3.6555840969085693
    3. '        
' → logprob: -6.030584335327148
    4. 'text' → logprob: -7.780584335327148
    5. '    
' → logprob: -7.780584335327148
    6. '  
' → logprob: -7.905584335327148
    7. ' 
' → logprob: -8.405584335327148
    8. '   ' → logprob: -9.280584335327148
    9. '<|end|>' → logprob: -9.655584335327148
    10. ')' → logprob: -9.905584335327148

Token 597: ' text' (ID: 2201)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2347269356250763
    2. '
' → logprob: -1.734726905822754
    3. 'text' (adapté à ' text') → logprob: -3.984726905822754
    4. '        
' → logprob: -4.734726905822754
    5. ' text' → logprob: -6.734726905822754
    6. ' 
' → logprob: -6.984726905822754
    7. '  
' → logprob: -7.234726905822754
    8. '    
' → logprob: -7.484726905822754
    9. '
' → logprob: -8.109726905822754
    10. '```' → logprob: -8.109726905822754

Token 598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3251796364784241
    2. '=' → logprob: -1.5751795768737793
    3. ' +=' → logprob: -2.8251795768737793
    4. '+=' → logprob: -4.575179576873779
    5. '_' → logprob: -7.325179576873779
    6. '_text' → logprob: -8.575180053710938
    7. ' ' → logprob: -10.325180053710938
    8. '.extend' → logprob: -10.325180053710938
    9. '+='' → logprob: -10.450180053710938
    10. '='' → logprob: -11.825180053710938

Token 599: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.020573651418089867
    2. ' ''.' → logprob: -4.270573616027832
    3. '"' → logprob: -5.520573616027832
    4. ''' → logprob: -6.270573616027832
    5. '''' → logprob: -7.770573616027832
    6. ' "".' → logprob: -9.645573616027832
    7. '''
' → logprob: -13.145573616027832
    8. ' ' → logprob: -13.270573616027832
    9. '""' → logprob: -13.395573616027832
    10. '   ' → logprob: -13.895573616027832

Token 600: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0280383548888494e-06
    2. ' join' → logprob: -15.000000953674316
    3. 'j' → logprob: -15.500000953674316
    4. '''.' → logprob: -15.500000953674316
    5. 'jo' → logprob: -15.750000953674316
    6. '```' → logprob: -17.250001907348633
    7. '.join' → logprob: -17.500001907348633
    8. '(join' → logprob: -18.000001907348633
    9. ''.' → logprob: -18.125001907348633
    10. '.' → logprob: -18.500001907348633

Token 601: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.0019286326132714748
    2. 'text' → logprob: -6.251928806304932
    3. ' text' → logprob: -17.251928329467773
    4. '{text' → logprob: -18.626928329467773
    5. '[text' → logprob: -18.751928329467773
    6. '(' → logprob: -19.376928329467773
    7. ',text' → logprob: -19.626928329467773
    8. '(line' → logprob: -19.751928329467773
    9. '	text' → logprob: -20.001928329467773
    10. '=text' → logprob: -20.501928329467773

Token 602: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.08476806432008743
    2. 'text' → logprob: -2.834768056869507
    3. 'lines' → logprob: -3.959768056869507
    4. ')' → logprob: -6.334768295288086
    5. 'Lines' → logprob: -7.834768295288086
    6. '_text' → logprob: -8.459768295288086
    7. '_strings' → logprob: -8.834768295288086
    8. 'token' → logprob: -8.959768295288086
    9. '_tokens' → logprob: -8.959768295288086
    10. '_LINES' → logprob: -9.209768295288086

Token 603: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 604: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06239156797528267
    2. '   ' → logprob: -3.437391519546509
    3. '    
' → logprob: -3.937391519546509
    4. '<|end|>' → logprob: -5.562391757965088
    5. '        
' → logprob: -6.187391757965088
    6. '       ' → logprob: -6.437391757965088
    7. '  
' → logprob: -7.812391757965088
    8. '

' → logprob: -8.43739128112793
    9. '```' → logprob: -8.56239128112793
    10. ' 
' → logprob: -8.56239128112793

Token 605: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5118670463562012
    2. 'ac' → logprob: -1.0118670463562012
    3. '       ' → logprob: -3.511867046356201
    4. 'autom' → logprob: -6.136867046356201
    5. 'patterns' → logprob: -6.886867046356201
    6. 'tr' → logprob: -7.011867046356201
    7. '
' → logprob: -7.011867046356201
    8. '    
' → logprob: -8.01186752319336
    9. '        
' → logprob: -8.01186752319336
    10. 'aho' → logprob: -8.26186752319336

Token 606: ' Goal' (ID: 67160)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.08478832989931107
    2. '   ' → logprob: -2.9597883224487305
    3. 'autom' → logprob: -4.3347883224487305
    4. '       ' → logprob: -5.3347883224487305
    5. 'aho' → logprob: -5.4597883224487305
    6. 'ah' → logprob: -6.2097883224487305
    7. ' ac' → logprob: -7.2097883224487305
    8. 'AC' → logprob: -7.4597883224487305
    9. ' autom' → logprob: -7.5847883224487305
    10. '
' → logprob: -7.9597883224487305

Token 607: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09661542624235153
    2. '   ' → logprob: -3.0966153144836426
    3. 'ac' → logprob: -3.4716153144836426
    4. '
' → logprob: -5.346615314483643
    5. ' ac' → logprob: -6.096615314483643
    6. '        
' → logprob: -6.346615314483643
    7. '#' → logprob: -6.471615314483643
    8. 'ach' → logprob: -7.096615314483643
    9. ' aho' → logprob: -7.346615314483643
    10. 'autom' → logprob: -7.471615314483643

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02949739806354046
    2. '#' → logprob: -4.4044976234436035
    3. 'ac' → logprob: -4.6544976234436035
    4. '   ' → logprob: -6.0294976234436035
    5. ' ac' → logprob: -6.6544976234436035
    6. '        
' → logprob: -6.9044976234436035
    7. ' #' → logprob: -6.9044976234436035
    8. '
' → logprob: -7.4044976234436035
    9. 'ach' → logprob: -8.529497146606445
    10. ' aho' → logprob: -8.654497146606445

Token 609: ' #' (ID: 1069)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.5113996267318726
    2. '#' (adapté à ' #') → logprob: -1.8863996267318726
    3. '       ' → logprob: -2.011399745941162
    4. '   ' → logprob: -3.261399745941162
    5. ' #' → logprob: -4.011399745941162
    6. ' ac' → logprob: -4.136399745941162
    7. 'autom' → logprob: -4.386399745941162
    8. ' autom' → logprob: -4.511399745941162
    9. '
' → logprob: -5.261399745941162
    10. '        
' → logprob: -6.636399745941162

Token 610: ' Find' (ID: 9764)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.6150425672531128
    2. '#' → logprob: -1.1150425672531128
    3. '   ' → logprob: -3.1150426864624023
    4. '       ' → logprob: -3.9900426864624023
    5. 'Build' → logprob: -4.615042686462402
    6. 'autom' → logprob: -4.740042686462402
    7. 'aho' → logprob: -4.865042686462402
    8. ' Build' → logprob: -5.240042686462402
    9. ' #' → logprob: -5.240042686462402
    10. 'ah' → logprob: -5.490042686462402

Token 611: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8495205044746399
    2. ' all' → logprob: -1.5995204448699951
    3. ' occurrences' → logprob: -1.8495204448699951
    4. ' which' → logprob: -2.349520444869995
    5. 'the' → logprob: -3.474520444869995
    6. ' patterns' → logprob: -3.724520444869995
    7. 'all' → logprob: -4.349520683288574
    8. 'which' → logprob: -4.724520683288574
    9. ' matches' → logprob: -4.724520683288574
    10. ' indices' → logprob: -4.974520683288574

Token 612: ' concaten' (ID: 121942)
  Prédit: ' occurrences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' occurrences' → logprob: -0.8884072303771973
    2. 'element' → logprob: -1.8884072303771973
    3. 'patterns' → logprob: -2.0134072303771973
    4. 'positions' → logprob: -2.2634072303771973
    5. ' patterns' → logprob: -3.0134072303771973
    6. 'occ' → logprob: -3.2634072303771973
    7. 'elements' → logprob: -3.6384072303771973
    8. 'indices' → logprob: -3.8884072303771973
    9. ' positions' → logprob: -4.138407230377197
    10. 'matches' → logprob: -4.763407230377197

Token 613: 'ations' (ID: 929)
  Prédit: 'ated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.46788930892944336
    2. 'ate' → logprob: -1.2178893089294434
    3. 'ation' → logprob: -2.5928893089294434
    4. 'ations' → logprob: -6.592889308929443
    5. 'at' → logprob: -6.967889308929443
    6. 'ating' → logprob: -8.342889785766602
    7. 'ates' → logprob: -8.717889785766602
    8. 'e' → logprob: -9.217889785766602
    9. ' at' → logprob: -9.842889785766602
    10. 'ed' → logprob: -10.217889785766602

Token 614: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3607984483242035
    2. 'of' → logprob: -2.2357983589172363
    3. '       ' → logprob: -2.8607983589172363
    4. '(' → logprob: -3.1107983589172363
    5. '_' → logprob: -3.3607983589172363
    6. '(element' → logprob: -4.360798358917236
    7. ' (' → logprob: -4.860798358917236
    8. ''' → logprob: -5.110798358917236
    9. '<|end|>' → logprob: -5.110798358917236
    10. '"' → logprob: -5.235798358917236

Token 615: ' the' (ID: 290)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.47868573665618896
    2. 'element' → logprob: -1.228685736656189
    3. 'any' → logprob: -3.4786858558654785
    4. 'one' → logprob: -3.8536858558654785
    5. ' two' → logprob: -4.4786858558654785
    6. '2' → logprob: -4.6036858558654785
    7. 'elements' → logprob: -5.3536858558654785
    8. 'k' → logprob: -5.9786858558654785
    9. '1' → logprob: -6.3536858558654785
    10. 'pairs' → logprob: -6.8536858558654785

Token 616: ' n' (ID: 297)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.13415926694869995
    2. 'elements' → logprob: -2.3841593265533447
    3. 'strings' → logprob: -3.7591593265533447
    4. ' element' → logprob: -6.009159088134766
    5. 'two' → logprob: -6.384159088134766
    6. ' elements' → logprob: -6.634159088134766
    7. 'words' → logprob: -7.259159088134766
    8. '[element' → logprob: -7.634159088134766
    9. 'sequence' → logprob: -7.884159088134766
    10. ' strings' → logprob: -8.009159088134766

Token 617: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.22426216304302216
    2. ' element' → logprob: -1.8492621183395386
    3. ' elements' → logprob: -3.849262237548828
    4. 'elements' → logprob: -4.224262237548828
    5. ' strings' → logprob: -5.349262237548828
    6. 'strings' → logprob: -6.224262237548828
    7. 'patterns' → logprob: -8.349262237548828
    8. ' words' → logprob: -8.474262237548828
    9. ' patterns' → logprob: -9.099262237548828
    10. '(element' → logprob: -9.349262237548828

Token 618: ' strings' (ID: 18279)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.053721118718385696
    2. 's' → logprob: -3.5537211894989014
    3. '_' → logprob: -3.8037211894989014
    4. '_s' → logprob: -6.928720951080322
    5. ' _' → logprob: -8.55372142791748
    6. 'strings' → logprob: -9.17872142791748
    7. '_tokens' → logprob: -10.55372142791748
    8. ''_' → logprob: -10.55372142791748
    9. ' strings' → logprob: -11.17872142791748
    10. '_sequences' → logprob: -11.30372142791748

Token 619: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9469281435012817
    2. ',' → logprob: -1.9469281435012817
    3. '#' → logprob: -2.196928024291992
    4. ' in' → logprob: -2.571928024291992
    5. '.' → logprob: -2.821928024291992
    6. '<|end|>' → logprob: -2.821928024291992
    7. '
' → logprob: -3.321928024291992
    8. ' that' → logprob: -3.571928024291992
    9. '   ' → logprob: -4.071928024291992
    10. 'in' → logprob: -4.321928024291992

Token 620: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.03216300159692764
    2. ' any' → logprob: -4.032163143157959
    3. 'element' → logprob: -4.907163143157959
    4. 'order' → logprob: -6.032163143157959
    5. 'the' → logprob: -6.407163143157959
    6. 'all' → logprob: -7.157163143157959
    7. 'some' → logprob: -7.282163143157959
    8. 'sequence' → logprob: -8.7821626663208
    9. 'exact' → logprob: -9.2821626663208
    10. ' element' → logprob: -9.4071626663208

Token 621: ' permutation' (ID: 135200)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.07079464197158813
    2. ' order' → logprob: -2.6957945823669434
    3. 'per' → logprob: -7.695794582366943
    4. '(order' → logprob: -8.320795059204102
    5. ' permutation' → logprob: -9.695795059204102
    6. 'possible' → logprob: -10.820795059204102
    7. '_order' → logprob: -11.570795059204102
    8. 'ordering' → logprob: -11.570795059204102
    9. 'sequence' → logprob: -11.695795059204102
    10. 'comb' → logprob: -11.695795059204102

Token 622: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9925413727760315
    2. '       ' → logprob: -1.3675413131713867
    3. '#' → logprob: -1.8675413131713867
    4. '.' → logprob: -2.9925413131713867
    5. '<|end|>' → logprob: -3.1175413131713867
    6. '
' → logprob: -3.7425413131713867
    7. '_' → logprob: -4.117541313171387
    8. ' and' → logprob: -4.367541313171387
    9. ' in' → logprob: -4.742541313171387
    10. 'def' → logprob: -4.867541313171387

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5332901477813721
    2. '
' → logprob: -1.158290147781372
    3. '#' → logprob: -2.908290147781372
    4. '        
' → logprob: -4.408289909362793
    5. '   ' → logprob: -5.033289909362793
    6. 'ac' → logprob: -5.158289909362793
    7. 'patterns' → logprob: -5.658289909362793
    8. ' 
' → logprob: -6.283289909362793
    9. ' #' → logprob: -6.283289909362793
    10. '```' → logprob: -6.408289909362793

Token 624: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9458880424499512
    2. '
' → logprob: -1.8208880424499512
    3. 'patterns' → logprob: -2.070888042449951
    4. '#' (adapté à ' #') → logprob: -2.195888042449951
    5. 'ac' → logprob: -2.320888042449951
    6. '   ' → logprob: -3.320888042449951
    7. '        
' → logprob: -4.070888042449951
    8. ' patterns' → logprob: -4.445888042449951
    9. 'autom' → logprob: -5.195888042449951
    10. ' #' → logprob: -5.320888042449951

Token 625: ' Na' (ID: 6888)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.189560055732727
    2. '#' → logprob: -1.439560055732727
    3. 'from' → logprob: -1.814560055732727
    4. '       ' → logprob: -2.6895599365234375
    5. 'tr' → logprob: -2.9395599365234375
    6. 'patterns' → logprob: -3.0645599365234375
    7. '   ' → logprob: -3.4395599365234375
    8. 'pattern' → logprob: -3.5645599365234375
    9. 'autom' → logprob: -4.4395599365234375
    10. 'perm' → logprob: -4.6895599365234375

Token 626: 'ive' (ID: 585)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08038198947906494
    2. 'me' → logprob: -2.5803818702697754
    3. 't' → logprob: -7.455381870269775
    4. '#' → logprob: -7.955381870269775
    5. 'mes' → logprob: -8.705382347106934
    6. 'med' → logprob: -8.830382347106934
    7. '```' → logprob: -9.955382347106934
    8. 'import' → logprob: -10.580382347106934
    9. 'i' → logprob: -11.080382347106934
    10. 'ï' → logprob: -11.205382347106934

Token 627: ' permutations' (ID: 174595)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.7532929182052612
    2. '#' → logprob: -1.5032929182052612
    3. '       ' → logprob: -2.503293037414551
    4. 'for' → logprob: -3.003293037414551
    5. '_' → logprob: -3.753293037414551
    6. ' #' → logprob: -3.753293037414551
    7. ' for' → logprob: -4.003293037414551
    8. '   ' → logprob: -4.128293037414551
    9. 'appro' → logprob: -5.378293037414551
    10. ',' → logprob: -5.503293037414551

Token 628: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 629: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2879968583583832
    2. ' too' → logprob: -1.5379968881607056
    3. 'not' → logprob: -4.912996768951416
    4. ' infe' → logprob: -5.287996768951416
    5. ' factorial' → logprob: -5.662996768951416
    6. ' very' → logprob: -5.912996768951416
    7. ' impossible' → logprob: -6.287996768951416
    8. ' impr' → logprob: -6.412996768951416
    9. ' extremely' → logprob: -6.537996768951416
    10. 'n' → logprob: -6.537996768951416

Token 630: '!' (ID: 0)
  Prédit: '!'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!' → logprob: -0.005305619910359383
    2. ' factorial' → logprob: -5.880305767059326
    3. '**' → logprob: -7.630305767059326
    4. '#' → logprob: -7.630305767059326
    5. 'factor' → logprob: -7.755305767059326
    6. '>' → logprob: -8.130305290222168
    7. '!
' → logprob: -9.130305290222168
    8. '=' → logprob: -9.130305290222168
    9. '_factor' → logprob: -9.255305290222168
    10. '*' → logprob: -9.630305290222168

Token 631: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5493360757827759
    2. '<|end|>' → logprob: -1.0493360757827759
    3. '       ' → logprob: -2.9243359565734863
    4. '<|end|>' → logprob: -4.549335956573486
    5. '#' → logprob: -5.424335956573486
    6. '        
' → logprob: -6.424335956573486
    7. ',' → logprob: -7.549335956573486
    8. '

' → logprob: -8.174336433410645
    9. ',
' → logprob: -8.299336433410645
    10. '```' → logprob: -8.799336433410645

Token 632: 'up' (ID: 817)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1707199215888977
    2. '),' → logprob: -2.545719861984253
    3. ',' → logprob: -3.295719861984253
    4. '
' → logprob: -3.545719861984253
    5. '!' → logprob: -5.420720100402832
    6. ')
' → logprob: -7.295720100402832
    7. ' to' → logprob: -7.420720100402832
    8. ' but' → logprob: -7.420720100402832
    9. '...' → logprob: -7.420720100402832
    10. ',
' → logprob: -7.420720100402832

Token 633: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3789075016975403
    2. '       ' → logprob: -2.0039074420928955
    3. 'ntil' → logprob: -3.2539074420928955
    4. '   ' → logprob: -3.3789074420928955
    5. '+' → logprob: -4.003907680511475
    6. ' to' → logprob: -4.253907680511475
    7. 'to' → logprob: -4.628907680511475
    8. '=' → logprob: -5.253907680511475
    9. ')
' → logprob: -5.378907680511475
    10. '           ' → logprob: -5.503907680511475

Token 634: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '12' → logprob: -0.5342450141906738
    2. '10' → logprob: -1.4092450141906738
    3. '20' → logprob: -2.659245014190674
    4. '9' → logprob: -3.409245014190674
    5. '100' → logprob: -3.909245014190674
    6. '8' → logprob: -5.159245014190674
    7. 'n' → logprob: -5.159245014190674
    8. '```' → logprob: -5.284245014190674
    9. '6' → logprob: -5.409245014190674
    10. '16' → logprob: -5.534245014190674

Token 635: '12' (ID: 899)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7734426259994507
    2. '8' → logprob: -1.7734426259994507
    3. '9' → logprob: -2.0234427452087402
    4. '12' → logprob: -2.7734427452087402
    5. '6' → logprob: -3.0234427452087402
    6. 'n' → logprob: -3.1484427452087402
    7. '20' → logprob: -3.2734427452087402
    8. '```' → logprob: -4.77344274520874
    9. '7' → logprob: -4.89844274520874
    10. '100' → logprob: -5.14844274520874

Token 636: '!' (ID: 0)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.171418234705925
    2. '),' → logprob: -2.1714181900024414
    3. ')
' → logprob: -3.9214181900024414
    4. '!' → logprob: -4.296418190002441
    5. ',' → logprob: -6.171418190002441
    6. '!)' → logprob: -6.171418190002441
    7. ')!' → logprob: -6.296418190002441
    8. ').' → logprob: -6.796418190002441
    9. '
' → logprob: -7.671418190002441
    10. ' factorial' → logprob: -7.671418190002441

Token 637: ' ~' (ID: 6574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1868424117565155
    2. '),' → logprob: -2.061842441558838
    3. ')
' → logprob: -4.061842441558838
    4. ').' → logprob: -4.436842441558838
    5. '
' → logprob: -5.186842441558838
    6. ',' → logprob: -5.186842441558838
    7. ' )' → logprob: -7.311842441558838
    8. '#' → logprob: -7.811842441558838
    9. ').
' → logprob: -7.936842441558838
    10. ');' → logprob: -8.43684196472168

Token 638: ' very' (ID: 1869)
  Prédit: '479'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '479' → logprob: -0.00014418430509977043
    2. ' ' → logprob: -9.875144004821777
    3. '4' → logprob: -10.750144004821777
    4. '477' → logprob: -11.625144004821777
    5. '```' → logprob: -11.625144004821777
    6. '466' → logprob: -11.750144004821777
    7. '480' → logprob: -12.125144004821777
    8. '>' → logprob: -12.250144004821777
    9. '10' → logprob: -12.375144004821777
    10. '478' → logprob: -12.500144004821777

Token 639: ' big' (ID: 3464)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.38664698600769043
    2. ' large' → logprob: -1.3866469860076904
    3. 'exp' → logprob: -3.6366469860076904
    4. 'slow' → logprob: -4.2616472244262695
    5. ' expensive' → logprob: -4.5116472244262695
    6. 'big' → logprob: -4.6366472244262695
    7. 'high' → logprob: -5.6366472244262695
    8. ' big' → logprob: -6.8866472244262695
    9. 'long' → logprob: -7.0116472244262695
    10. ' high' → logprob: -7.1366472244262695

Token 640: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09151632338762283
    2. '),' → logprob: -2.8415162563323975
    3. ').' → logprob: -4.341516494750977
    4. ',' → logprob: -4.966516494750977
    5. ')
' → logprob: -5.466516494750977
    6. ' for' → logprob: -6.591516494750977
    7. '
' → logprob: -6.841516494750977
    8. '<|end|>' → logprob: -7.091516494750977
    9. ' )' → logprob: -8.091516494750977
    10. ').
' → logprob: -8.341516494750977

Token 641: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1278838813304901
    2. ' but' → logprob: -2.7528839111328125
    3. ' so' → logprob: -3.7528839111328125
    4. ' continue' → logprob: -4.5028839111328125
    5. '#' → logprob: -5.1278839111328125
    6. '        
' → logprob: -5.7528839111328125
    7. '        ' → logprob: -6.0028839111328125
    8. ' ' → logprob: -6.2528839111328125
    9. '<|end|>' → logprob: -6.2528839111328125
    10. ')' → logprob: -6.7528839111328125

Token 642: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2726627588272095
    2. '       ' → logprob: -1.7726627588272095
    3. ' so' → logprob: -3.02266263961792
    4. ' but' → logprob: -4.77266263961792
    5. 'but' → logprob: -5.14766263961792
    6. 'so' → logprob: -5.64766263961792
    7. 'continue' → logprob: -7.27266263961792
    8. ' #' → logprob: -7.64766263961792
    9. '
' → logprob: -7.64766263961792
    10. '        
' → logprob: -9.147663116455078

Token 643: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02046573907136917
    2. '       ' → logprob: -4.270465850830078
    3. '
' → logprob: -5.895465850830078
    4. 'but' → logprob: -6.270465850830078
    5. 'so' → logprob: -7.645465850830078
    6. ' so' → logprob: -9.020465850830078
    7. 'But' → logprob: -9.020465850830078
    8. 'import' → logprob: -9.145465850830078
    9. ' but' → logprob: -9.270465850830078
    10. 'So' → logprob: -9.520465850830078

Token 644: ' approach' (ID: 7139)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5866047739982605
    2. 'we' → logprob: -2.2116048336029053
    3. ' #' → logprob: -2.3366048336029053
    4. ' we' → logprob: -2.7116048336029053
    5. '   ' → logprob: -3.5866048336029053
    6. 'ac' → logprob: -3.7116048336029053
    7. 'the' → logprob: -4.086604595184326
    8. '       ' → logprob: -4.211604595184326
    9. ' the' → logprob: -4.461604595184326
    10. ' use' → logprob: -4.711604595184326

Token 645: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5155236721038818
    2. ':' → logprob: -1.2655236721038818
    3. ' is' → logprob: -3.140523672103882
    4. ' =' → logprob: -3.265523672103882
    5. '=' → logprob: -4.140523910522461
    6. 'is' → logprob: -5.015523910522461
    7. '           ' → logprob: -5.390523910522461
    8. '#' → logprob: -5.890523910522461
    9. '   ' → logprob: -6.140523910522461
    10. '```' → logprob: -6.765523910522461

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007418495370075107
    2. '#' → logprob: -8.000741958618164
    3. '        
' → logprob: -8.250741958618164
    4. '   ' → logprob: -10.875741958618164
    5. ' #' → logprob: -11.000741958618164
    6. '      ' → logprob: -11.000741958618164
    7. '
' → logprob: -11.125741958618164
    8. '        ' → logprob: -11.250741958618164
    9. '```' → logprob: -11.375741958618164
    10. 'import' → logprob: -11.500741958618164

Token 647: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4462324380874634
    2. '       ' → logprob: -1.1962324380874634
    3. ' #' → logprob: -3.696232318878174
    4. 'ac' → logprob: -4.321232318878174
    5. ' ac' → logprob: -5.571232318878174
    6. 'tr' → logprob: -6.196232318878174
    7. '
' → logprob: -6.321232318878174
    8. 'import' → logprob: -6.446232318878174
    9. ' patterns' → logprob: -6.571232318878174
    10. '        
' → logprob: -6.696232318878174

Token 648: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07828953862190247
    2. 'ac' → logprob: -3.07828950881958
    3. '       ' → logprob: -4.32828950881958
    4. 'tr' → logprob: -5.82828950881958
    5. '   ' → logprob: -6.07828950881958
    6. ' #' → logprob: -6.20328950881958
    7. 'from' → logprob: -6.57828950881958
    8. '
' → logprob: -7.20328950881958
    9. 'patterns' → logprob: -7.20328950881958
    10. 'autom' → logprob: -7.32828950881958

Token 649: ' Build' (ID: 10885)
  Prédit: 'Build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Build' → logprob: -0.8428766131401062
    2. '#' → logprob: -1.342876672744751
    3. 'Use' → logprob: -2.467876672744751
    4. ' Build' → logprob: -2.592876672744751
    5. 'ac' → logprob: -3.217876672744751
    6. 'Insert' → logprob: -3.717876672744751
    7. 'Create' → logprob: -4.092876434326172
    8. 'Add' → logprob: -4.592876434326172
    9. 'from' → logprob: -4.717876434326172
    10. 'import' → logprob: -4.717876434326172

Token 650: ' an' (ID: 448)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aho' → logprob: -0.6822357177734375
    2. ' aho' → logprob: -1.0572357177734375
    3. 'ac' → logprob: -2.9322357177734375
    4. 'autom' → logprob: -3.8072357177734375
    5. ' the' → logprob: -4.0572357177734375
    6. 'the' → logprob: -4.3072357177734375
    7. ' ac' → logprob: -4.9322357177734375
    8. ' an' → logprob: -5.3072357177734375
    9. 'from' → logprob: -5.3072357177734375
    10. 'tr' → logprob: -5.5572357177734375

Token 651: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5712641477584839
    2. 'A' → logprob: -0.9462641477584839
    3. ' aho' → logprob: -3.6962642669677734
    4. ' autom' → logprob: -4.321264266967773
    5. 'autom' → logprob: -5.696264266967773
    6. 'aho' → logprob: -6.196264266967773
    7. '```' → logprob: -6.696264266967773
    8. '   ' → logprob: -7.696264266967773
    9. 'AC' → logprob: -8.071264266967773
    10. '#' → logprob: -8.696264266967773

Token 652: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.004043614026159048
    2. 'Cor' → logprob: -6.2540435791015625
    3. 'C' → logprob: -7.2540435791015625
    4. 'cor' → logprob: -8.254043579101562
    5. 'h' → logprob: -8.754043579101562
    6. '_C' → logprob: -8.879043579101562
    7. '_c' → logprob: -9.129043579101562
    8. 'hoc' → logprob: -9.879043579101562
    9. '_' → logprob: -10.129043579101562
    10. 'c' → logprob: -10.191543579101562

Token 653: '-C' (ID: 10050)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.002358167665079236
    2. '-C' → logprob: -6.1273579597473145
    3. '-' → logprob: -9.752358436584473
    4. 'Autom' → logprob: -10.752358436584473
    5. '```' → logprob: -11.127358436584473
    6. '_C' → logprob: -11.252358436584473
    7. '
' → logprob: -11.377358436584473
    8. 'C' → logprob: -11.502358436584473
    9. ' Cor' → logprob: -11.752358436584473
    10. 'cor' → logprob: -12.252358436584473

Token 654: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.19725401699543
    2. 'or' → logprob: -2.197253942489624
    3. 'Cor' → logprob: -2.947253942489624
    4. '```' → logprob: -5.572254180908203
    5. 'Or' → logprob: -5.697254180908203
    6. 'oris' → logprob: -6.697254180908203
    7. '_' → logprob: -7.072254180908203
    8. 'ors' → logprob: -7.572254180908203
    9. 'o' → logprob: -7.822254180908203
    10. 'Patterns' → logprob: -8.072254180908203

Token 655: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.004853853490203619
    2. 's' → logprob: -6.37985372543335
    3. 'isk' → logprob: -7.00485372543335
    4. 'ck' → logprob: -7.62985372543335
    5. 'ic' → logprob: -8.004854202270508
    6. 'sk' → logprob: -8.379854202270508
    7. '```' → logprob: -9.004854202270508
    8. '
' → logprob: -9.129854202270508
    9. 'ik' → logprob: -9.254854202270508
    10. 'k' → logprob: -9.504854202270508

Token 656: ' autom' (ID: 5099)
  Prédit: ' autom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autom' → logprob: -0.2078186273574829
    2. 'autom' → logprob: -1.707818627357483
    3. '
' → logprob: -5.707818508148193
    4. ' trie' → logprob: -6.957818508148193
    5. 'Autom' → logprob: -7.082818508148193
    6. ' Autom' → logprob: -8.207818984985352
    7. '```' → logprob: -8.707818984985352
    8. '   ' → logprob: -9.082818984985352
    9. 'automat' → logprob: -9.082818984985352
    10. ' aho' → logprob: -9.457818984985352

Token 657: 'aton' (ID: 24850)
  Prédit: 'aton'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aton' → logprob: -0.004428694024682045
    2. 'at' → logprob: -5.629428863525391
    3. 'atin' → logprob: -7.629428863525391
    4. 'aten' → logprob: -9.37942886352539
    5. 'ac' → logprob: -9.75442886352539
    6. '```' → logprob: -9.87942886352539
    7. 'ata' → logprob: -10.00442886352539
    8. 'atan' → logprob: -10.62942886352539
    9. 'ation' → logprob: -11.25442886352539
    10. '
' → logprob: -11.37942886352539

Token 658: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24565403163433075
    2. ' for' → logprob: -1.9956539869308472
    3. '<|end|>' → logprob: -2.9956541061401367
    4. 'for' → logprob: -3.9956541061401367
    5. ' to' → logprob: -4.745654106140137
    6. '<|end|>' → logprob: -6.120654106140137
    7. '   ' → logprob: -7.495654106140137
    8. ')' → logprob: -7.620654106140137
    9. ',' → logprob: -7.870654106140137
    10. ' with' → logprob: -8.495654106140137

Token 659: ' the' (ID: 290)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.03716708719730377
    2. 'the' → logprob: -4.412167072296143
    3. ' element' → logprob: -4.537167072296143
    4. 'each' → logprob: -4.787167072296143
    5. '[element' → logprob: -6.162167072296143
    6. 'all' → logprob: -6.912167072296143
    7. 'word' → logprob: -7.037167072296143
    8. ' the' → logprob: -7.287167072296143
    9. '(element' → logprob: -8.6621675491333
    10. ' each' → logprob: -9.0371675491333

Token 660: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.012579113245010376
    2. ' element' → logprob: -4.637578964233398
    3. 'elements' → logprob: -7.137578964233398
    4. 'word' → logprob: -7.637578964233398
    5. 'n' → logprob: -7.762578964233398
    6. '[element' → logprob: -8.012578964233398
    7. '"' → logprob: -8.887578964233398
    8. '
' → logprob: -8.887578964233398
    9. 'words' → logprob: -9.762578964233398
    10. 's' → logprob: -9.887578964233398

Token 661: ' strings' (ID: 18279)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.015034601092338562
    2. 's' → logprob: -5.0150346755981445
    3. ' strings' → logprob: -5.3900346755981445
    4. '_' → logprob: -6.2650346755981445
    5. 'strings' → logprob: -7.5150346755981445
    6. '_s' → logprob: -7.5150346755981445
    7. ' _' → logprob: -8.140034675598145
    8. '_words' → logprob: -8.390034675598145
    9. 'Strings' → logprob: -9.640034675598145
    10. '   ' → logprob: -10.140034675598145

Token 662: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026022402569651604
    2. '   ' → logprob: -4.151022434234619
    3. '        
' → logprob: -6.401022434234619
    4. '<|end|>' → logprob: -6.401022434234619
    5. ',' → logprob: -6.526022434234619
    6. 'for' → logprob: -6.651022434234619
    7. ' for' → logprob: -6.651022434234619
    8. 'ac' → logprob: -7.026022434234619
    9. ' and' → logprob: -7.901022434234619
    10. '<|end|>' → logprob: -8.526021957397461

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004301337990909815
    2. '<|end|>' → logprob: -6.00430154800415
    3. '
' → logprob: -7.37930154800415
    4. ',' → logprob: -8.004301071166992
    5. '        
' → logprob: -8.254301071166992
    6. '<|end|>' → logprob: -8.754301071166992
    7. ' for' → logprob: -8.879301071166992
    8. ' to' → logprob: -9.504301071166992
    9. ' and' → logprob: -9.629301071166992
    10. ')' → logprob: -10.004301071166992

Token 664: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018765047192573547
    2. '<|end|>' → logprob: -4.518764972686768
    3. '
' → logprob: -5.893764972686768
    4. '        
' → logprob: -6.018764972686768
    5. '   ' → logprob: -7.518764972686768
    6. ',' → logprob: -7.643764972686768
    7. '<|end|>' → logprob: -7.893764972686768
    8. ')' → logprob: -8.268765449523926
    9. '    
' → logprob: -9.018765449523926
    10. ' and' → logprob: -9.018765449523926

Token 665: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03213933855295181
    2. 'ac' → logprob: -4.407139301300049
    3. '   ' → logprob: -4.907139301300049
    4. '
' → logprob: -5.657139301300049
    5. '        
' → logprob: -5.782139301300049
    6. 'autom' → logprob: -6.282139301300049
    7. '#' → logprob: -7.157139301300049
    8. 'ach' → logprob: -7.907139301300049
    9. '#ac' → logprob: -8.157139778137207
    10. ' ac' → logprob: -8.532139778137207

Token 666: ' Use' (ID: 7649)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8841961026191711
    2. 'ac' → logprob: -1.3841960430145264
    3. '       ' → logprob: -2.7591960430145264
    4. '   ' → logprob: -3.0091960430145264
    5. 'count' → logprob: -3.2591960430145264
    6. 'search' → logprob: -4.2591962814331055
    7. 'dp' → logprob: -4.2591962814331055
    8. 'counts' → logprob: -4.3841962814331055
    9. 'occ' → logprob: -4.6341962814331055
    10. '
' → logprob: -4.7591962814331055

Token 667: ' DP' (ID: 51992)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.44186723232269287
    2. 'A' → logprob: -2.0668673515319824
    3. ' the' → logprob: -2.8168673515319824
    4. ' dynamic' → logprob: -3.0668673515319824
    5. 'dynamic' → logprob: -3.1918673515319824
    6. 'DP' → logprob: -3.6918673515319824
    7. ' aho' → logprob: -4.441867351531982
    8. 'dp' → logprob: -4.816867351531982
    9. ' DP' → logprob: -4.816867351531982
    10. ' A' → logprob: -5.066867351531982

Token 668: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34151506423950195
    2. '<|end|>' → logprob: -2.466515064239502
    3. '
' → logprob: -3.091515064239502
    4. ' =' → logprob: -3.341515064239502
    5. ',' → logprob: -3.841515064239502
    6. 'import' → logprob: -4.466515064239502
    7. '   ' → logprob: -4.591515064239502
    8. '(n' → logprob: -4.716515064239502
    9. '#' → logprob: -5.091515064239502
    10. '(' → logprob: -5.091515064239502

Token 669: ' text' (ID: 2201)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9507622718811035
    2. ' the' → logprob: -1.4507622718811035
    3. 'states' → logprob: -1.9507622718811035
    4. 'text' → logprob: -2.5757622718811035
    5. ' states' → logprob: -2.8257622718811035
    6. ' text' → logprob: -3.4507622718811035
    7. 'positions' → logprob: -3.5757622718811035
    8. ' subsets' → logprob: -4.2007622718811035
    9. ' positions' → logprob: -4.9507622718811035
    10. 'length' → logprob: -5.0757622718811035

Token 670: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4708265960216522
    2. '<|end|>' → logprob: -1.2208266258239746
    3. '
' → logprob: -3.2208266258239746
    4. '<|end|>' → logprob: -4.595826625823975
    5. '   ' → logprob: -4.970826625823975
    6. '_' → logprob: -5.470826625823975
    7. '        
' → logprob: -5.470826625823975
    8. ',' → logprob: -5.595826625823975
    9. ')' → logprob: -6.595826625823975
    10. '#' → logprob: -6.970826625823975

Token 671: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.21934650838375092
    2. ' detect' → logprob: -1.969346523284912
    3. ' process' → logprob: -4.094346523284912
    4. ' track' → logprob: -4.219346523284912
    5. ' match' → logprob: -4.594346523284912
    6. 'detect' → logprob: -4.969346523284912
    7. ' count' → logprob: -6.094346523284912
    8. ' check' → logprob: -6.344346523284912
    9. 'find' → logprob: -6.469346523284912
    10. ' search' → logprob: -7.594346523284912

Token 672: ' positions' (ID: 15897)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8276923298835754
    2. ' all' → logprob: -1.5776922702789307
    3. ' occurrences' → logprob: -2.2026922702789307
    4. ' matches' → logprob: -2.3276922702789307
    5. 'matches' → logprob: -3.0776922702789307
    6. 'positions' → logprob: -3.2026922702789307
    7. ' the' → logprob: -3.8276922702789307
    8. 'the' → logprob: -4.45269250869751
    9. 'occ' → logprob: -4.95269250869751
    10. ' substr' → logprob: -5.07769250869751

Token 673: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04417557269334793
    2. ',' → logprob: -4.419175624847412
    3. '   ' → logprob: -4.669175624847412
    4. '_' → logprob: -5.169175624847412
    5. '
' → logprob: -5.419175624847412
    6. ')' → logprob: -5.919175624847412
    7. '<|end|>' → logprob: -6.669175624847412
    8. '(' → logprob: -7.169175624847412
    9. '        
' → logprob: -7.544175624847412
    10. '(n' → logprob: -7.669175624847412

Token 674: ' concaten' (ID: 121942)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.35912832617759705
    2. 'element' → logprob: -2.85912823677063
    3. 'the' → logprob: -2.85912823677063
    4. 'matches' → logprob: -3.23412823677063
    5. ' each' → logprob: -3.35912823677063
    6. 'patterns' → logprob: -3.73412823677063
    7. 'all' → logprob: -4.234128475189209
    8. 'a' → logprob: -4.484128475189209
    9. 'any' → logprob: -4.484128475189209
    10. 'words' → logprob: -4.609128475189209

Token 675: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.9270532131195068
    2. 'ation' → logprob: -1.0520532131195068
    3. 'ated' → logprob: -2.177053213119507
    4. 'ate' → logprob: -2.177053213119507
    5. 'a' → logprob: -4.177053451538086
    6. 'at' → logprob: -4.552053451538086
    7. '   ' → logprob: -7.052053451538086
    8. 'e' → logprob: -7.802053451538086
    9. '       ' → logprob: -8.177053451538086
    10. '#' → logprob: -8.427053451538086

Token 676: ' occur' (ID: 11416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2646035850048065
    2. '
' → logprob: -1.889603614807129
    3. '   ' → logprob: -3.389603614807129
    4. '<|end|>' → logprob: -4.639603614807129
    5. '        
' → logprob: -5.014603614807129
    6. '_' → logprob: -5.014603614807129
    7. ',' → logprob: -5.264603614807129
    8. ' ' → logprob: -6.139603614807129
    9. '<|end|>' → logprob: -6.389603614807129
    10. ' of' → logprob: -6.514603614807129

Token 677: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2455647885799408
    2. '
' → logprob: -1.7455648183822632
    3. '        
' → logprob: -3.6205646991729736
    4. '<|end|>' → logprob: -4.620564937591553
    5. '#' → logprob: -6.620564937591553
    6. 'dp' → logprob: -6.745564937591553
    7. 'n' → logprob: -7.245564937591553
    8. ',' → logprob: -7.870564937591553
    9. '<|end|>' → logprob: -7.870564937591553
    10. 'length' → logprob: -7.870564937591553

Token 678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15745240449905396
    2. '
' → logprob: -2.657452344894409
    3. '<|end|>' → logprob: -2.657452344894409
    4. '        
' → logprob: -6.532452583312988
    5. '<|end|>' → logprob: -6.532452583312988
    6. '   ' → logprob: -6.657452583312988
    7. '```' → logprob: -8.157452583312988
    8. ')' → logprob: -8.657452583312988
    9. ',' → logprob: -9.032452583312988
    10. '#' → logprob: -9.407452583312988

Token 679: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45553135871887207
    2. '       ' → logprob: -1.330531358718872
    3. '<|end|>' → logprob: -2.580531358718872
    4. '        
' → logprob: -4.705531120300293
    5. '   ' → logprob: -4.705531120300293
    6. '    
' → logprob: -6.080531120300293
    7. '<|end|>' → logprob: -7.080531120300293
    8. ',' → logprob: -7.080531120300293
    9. ' 
' → logprob: -7.580531120300293
    10. ')' → logprob: -7.580531120300293

Token 680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38834449648857117
    2. '
' → logprob: -1.6383445262908936
    3. '<|end|>' → logprob: -2.3883445262908936
    4. '        
' → logprob: -4.2633442878723145
    5. '   ' → logprob: -4.3883442878723145
    6. '<|end|>' → logprob: -5.6383442878723145
    7. '    
' → logprob: -6.2633442878723145
    8. '#' → logprob: -7.0133442878723145
    9. '```' → logprob: -7.8883442878723145
    10. 'import' → logprob: -8.013344764709473

Token 681: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5285075902938843
    2. '       ' → logprob: -1.9035075902938843
    3. '#' (adapté à ' #') → logprob: -2.153507709503174
    4. '   ' → logprob: -2.403507709503174
    5. '
' → logprob: -4.278507709503174
    6. 'pattern' → logprob: -4.528507709503174
    7. 'full' → logprob: -4.778507709503174
    8. 'from' → logprob: -5.528507709503174
    9. 'n' → logprob: -5.778507709503174
    10. 'word' → logprob: -6.528507709503174

Token 682: ' Approach' (ID: 86383)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.32730981707572937
    2. '   ' → logprob: -1.5773098468780518
    3. '#' → logprob: -3.7023098468780518
    4. '       ' → logprob: -3.9523098468780518
    5. 'autom' → logprob: -4.577309608459473
    6. '
' → logprob: -5.577309608459473
    7. 'dp' → logprob: -5.577309608459473
    8. 'AC' → logprob: -5.702309608459473
    9. 'patterns' → logprob: -6.577309608459473
    10. '    
' → logprob: -6.952309608459473

Token 683: ' details' (ID: 4878)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5410565137863159
    2. ':' → logprob: -1.541056513786316
    3. '   ' → logprob: -1.791056513786316
    4. ' =' → logprob: -3.9160566329956055
    5. '=' → logprob: -4.6660566329956055
    6. '#' → logprob: -6.1660566329956055
    7. ':
' → logprob: -7.2910566329956055
    8. '
' → logprob: -7.2910566329956055
    9. 'import' → logprob: -7.2910566329956055
    10. ',' → logprob: -7.9160566329956055

Token 684: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3782554268836975
    2. ':' → logprob: -2.1282553672790527
    3. '
' → logprob: -2.1282553672790527
    4. '<|end|>' → logprob: -3.7532553672790527
    5. '        
' → logprob: -4.128255367279053
    6. '   ' → logprob: -4.878255367279053
    7. ',' → logprob: -5.003255367279053
    8. '<|end|>' → logprob: -5.253255367279053
    9. '#' → logprob: -5.378255367279053
    10. ':
' → logprob: -6.003255367279053

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008010093122720718
    2. '
' → logprob: -5.758009910583496
    3. '        
' → logprob: -5.758009910583496
    4. '   ' → logprob: -7.633009910583496
    5. '#' → logprob: -8.008009910583496
    6. '<|end|>' → logprob: -8.508009910583496
    7. '    
' → logprob: -8.758009910583496
    8. '```' → logprob: -8.883009910583496
    9. 'import' → logprob: -10.383009910583496
    10. '<|end|>' → logprob: -10.633009910583496

Token 686: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007290224079042673
    2. '
' → logprob: -5.757290363311768
    3. '        
' → logprob: -6.382290363311768
    4. '#' (adapté à ' #') → logprob: -6.882290363311768
    5. '   ' → logprob: -7.632290363311768
    6. ' #' → logprob: -8.25728988647461
    7. '        ' → logprob: -9.50728988647461
    8. '    
' → logprob: -9.63228988647461
    9. 'dp' → logprob: -9.75728988647461
    10. ' 
' → logprob: -10.00728988647461

Token 687: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09475003927946091
    2. 'dp' → logprob: -2.594749927520752
    3. '#' → logprob: -4.594749927520752
    4. '
' → logprob: -6.094749927520752
    5. ' dp' → logprob: -7.219749927520752
    6. '        
' → logprob: -7.344749927520752
    7. 'import' → logprob: -7.469749927520752
    8. 'from' → logprob: -7.844749927520752
    9. '   ' → logprob: -7.969749927520752
    10. ' #' → logprob: -8.96975040435791

Token 688: ' want' (ID: 1682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1848410367965698
    2. ' continue' → logprob: -1.3098410367965698
    3. ' =' → logprob: -1.6848410367965698
    4. ' will' → logprob: -2.9348411560058594
    5. '   ' → logprob: -3.1848411560058594
    6. '
' → logprob: -3.3098411560058594
    7. 'continue' → logprob: -4.184841156005859
    8. ' need' → logprob: -4.684841156005859
    9. ' can' → logprob: -4.934841156005859
    10. ' ' → logprob: -5.059841156005859

Token 689: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4749026596546173
    2. 'to' → logprob: -0.9749026298522949
    3. '       ' → logprob: -7.224902629852295
    4. '   ' → logprob: -10.224903106689453
    5. '    ' → logprob: -11.474903106689453
    6. '_to' → logprob: -11.724903106689453
    7. '        ' → logprob: -11.849903106689453
    8. 'def' → logprob: -12.474903106689453
    9. '	to' → logprob: -12.974903106689453
    10. '```' → logprob: -12.974903106689453

Token 690: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.2627888023853302
    2. ' find' → logprob: -2.637788772583008
    3. 'detect' → logprob: -3.262788772583008
    4. 'match' → logprob: -3.512788772583008
    5. 'use' → logprob: -3.637788772583008
    6. 'track' → logprob: -4.137788772583008
    7. ' use' → logprob: -4.387788772583008
    8. ' track' → logprob: -4.762788772583008
    9. 'check' → logprob: -5.137788772583008
    10. ' match' → logprob: -5.262788772583008

Token 691: ' in' (ID: 306)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.39557933807373047
    2. 'all' → logprob: -2.1455793380737305
    3. 'positions' → logprob: -2.5205793380737305
    4. ' positions' → logprob: -3.8955793380737305
    5. ' occurrences' → logprob: -3.8955793380737305
    6. ' matches' → logprob: -4.2705793380737305
    7. ' to' → logprob: -4.3955793380737305
    8. ' substr' → logprob: -4.5205793380737305
    9. ' the' → logprob: -4.7705793380737305
    10. 'matches' → logprob: -4.8955793380737305

Token 692: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7399396300315857
    2. 'text' → logprob: -1.2399396896362305
    3. ' the' → logprob: -1.9899396896362305
    4. ' text' → logprob: -2.3649396896362305
    5. 'positions' → logprob: -6.6149396896362305
    6. ' all' → logprob: -7.9899396896362305
    7. 'all' → logprob: -8.11493968963623
    8. ' positions' → logprob: -8.48993968963623
    9. 'each' → logprob: -9.23993968963623
    10. ' each' → logprob: -9.36493968963623

Token 693: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.524387776851654
    2. ' text' → logprob: -0.899387776851654
    3. ' next' → logprob: -8.02438735961914
    4. 'next' → logprob: -8.14938735961914
    5. 'A' → logprob: -9.02438735961914
    6. ' code' → logprob: -9.27438735961914
    7. 'code' → logprob: -9.77438735961914
    8. ' A' → logprob: -10.27438735961914
    9. '_text' → logprob: -10.27438735961914
    10. 'positions' → logprob: -10.39938735961914

Token 694: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.26996052265167236
    2. 'all' → logprob: -2.269960403442383
    3. ' positions' → logprob: -2.894960403442383
    4. 'positions' → logprob: -3.269960403442383
    5. ' where' → logprob: -4.269960403442383
    6. ' substr' → logprob: -5.019960403442383
    7. ' the' → logprob: -5.144960403442383
    8. ' occurrences' → logprob: -5.394960403442383
    9. ' sequences' → logprob: -5.894960403442383
    10. ' at' → logprob: -6.644960403442383

Token 695: ' substr' (ID: 29234)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.28284138441085815
    2. ' occurrences' → logprob: -2.532841444015503
    3. ' positions' → logprob: -2.657841444015503
    4. ' substr' → logprob: -3.157841444015503
    5. 'occ' → logprob: -3.907841444015503
    6. ' starting' → logprob: -4.907841205596924
    7. 'indices' → logprob: -5.532841205596924
    8. 'starting' → logprob: -5.657841205596924
    9. 'sub' → logprob: -5.782841205596924
    10. 'possible' → logprob: -6.032841205596924

Token 696: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.6068163514137268
    2. '       ' → logprob: -1.731816291809082
    3. 's' → logprob: -2.731816291809082
    4. ''' → logprob: -3.606816291809082
    5. '_positions' → logprob: -3.606816291809082
    6. 'et' → logprob: -3.731816291809082
    7. '   ' → logprob: -4.356816291809082
    8. '_set' → logprob: -4.481816291809082
    9. 'es' → logprob: -4.856816291809082
    10. '')' → logprob: -5.106816291809082

Token 697: ' which' (ID: 1118)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.05395800247788429
    2. 'that' → logprob: -3.803957939147949
    3. ' of' → logprob: -4.303957939147949
    4. ' consisting' → logprob: -5.303957939147949
    5. '<|end|>' → logprob: -5.803957939147949
    6. ' where' → logprob: -5.928957939147949
    7. 's' → logprob: -6.928957939147949
    8. ' composed' → logprob: -7.178957939147949
    9. ' (' → logprob: -7.928957939147949
    10. ' s' → logprob: -8.05395793914795

Token 698: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.5822606086730957
    2. ' are' → logprob: -0.9572606086730957
    3. ' consist' → logprob: -3.4572606086730957
    4. 'cons' → logprob: -4.832260608673096
    5. ' can' → logprob: -5.332260608673096
    6. 'can' → logprob: -5.832260608673096
    7. 'start' → logprob: -6.332260608673096
    8. ' match' → logprob: -6.332260608673096
    9. ' correspond' → logprob: -6.832260608673096
    10. ' start' → logprob: -7.082260608673096

Token 699: ' concaten' (ID: 121942)
  Prédit: ' concaten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' concaten' → logprob: -0.4930472671985626
    2. 'conc' → logprob: -1.2430472373962402
    3. 'exact' → logprob: -3.3680472373962402
    4. 'com' → logprob: -3.4930472373962402
    5. 'a' → logprob: -4.49304723739624
    6. ' exactly' → logprob: -5.36804723739624
    7. ' composed' → logprob: -5.36804723739624
    8. ' a' → logprob: -5.74304723739624
    9. 'formed' → logprob: -6.24304723739624
    10. ' formed' → logprob: -6.36804723739624

Token 700: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.5099216103553772
    2. 'ated' → logprob: -1.0099215507507324
    3. 'ation' → logprob: -3.7599215507507324
    4. 'ate' → logprob: -5.509921550750732
    5. 's' → logprob: -6.259921550750732
    6. 'ed' → logprob: -6.384921550750732
    7. 'at' → logprob: -6.509921550750732
    8. 'ates' → logprob: -7.134921550750732
    9. 'a' → logprob: -7.509921550750732
    10. ' of' → logprob: -8.25992202758789

Token 701: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.016720743849873543
    2. 'of' → logprob: -5.141720771789551
    3. '<|end|>' → logprob: -5.266720771789551
    4. '       ' → logprob: -5.766720771789551
    5. '   ' → logprob: -7.516720771789551
    6. '_' → logprob: -8.01672077178955
    7. '    ' → logprob: -8.01672077178955
    8. ')' → logprob: -8.26672077178955
    9. '        ' → logprob: -8.89172077178955
    10. ' ' → logprob: -9.26672077178955

Token 702: ' all' (ID: 722)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.6530809998512268
    2. 'the' → logprob: -1.153080940246582
    3. ' the' → logprob: -2.278080940246582
    4. ' element' → logprob: -3.528080940246582
    5. 'all' → logprob: -4.153080940246582
    6. ' all' → logprob: -4.903080940246582
    7. 'elements' → logprob: -5.903080940246582
    8. 'n' → logprob: -6.278080940246582
    9. '[element' → logprob: -6.903080940246582
    10. ' elements' → logprob: -7.028080940246582

Token 703: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.5472900867462158
    2. ' element' → logprob: -1.5472900867462158
    3. ' the' → logprob: -2.922290086746216
    4. 'the' → logprob: -3.172290086746216
    5. ' elements' → logprob: -3.172290086746216
    6. 'elements' → logprob: -3.297290086746216
    7. 'n' → logprob: -4.047289848327637
    8. ' n' → logprob: -5.172289848327637
    9. 'words' → logprob: -5.672289848327637
    10. 'tokens' → logprob: -6.297289848327637

Token 704: ' strings' (ID: 18279)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.05141296237707138
    2. '_' → logprob: -3.176413059234619
    3. 's' → logprob: -5.051413059234619
    4. ' _' → logprob: -6.926413059234619
    5. '_s' → logprob: -7.426413059234619
    6. 'strings' → logprob: -8.551412582397461
    7. ' strings' → logprob: -9.176412582397461
    8. '_string' → logprob: -10.301412582397461
    9. ' ' → logprob: -11.176412582397461
    10. ''_' → logprob: -11.676412582397461

Token 705: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3062131702899933
    2. ',' → logprob: -1.556213140487671
    3. ' in' → logprob: -4.18121337890625
    4. '.' → logprob: -4.30621337890625
    5. ' (' → logprob: -4.93121337890625
    6. ' with' → logprob: -5.43121337890625
    7. '   ' → logprob: -6.05621337890625
    8. ' without' → logprob: -6.30621337890625
    9. ' at' → logprob: -6.93121337890625
    10. ',
' → logprob: -6.93121337890625

Token 706: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.10262765735387802
    2. 'some' → logprob: -2.477627754211426
    3. ' any' → logprob: -4.477627754211426
    4. ' some' → logprob: -6.477627754211426
    5. 'element' → logprob: -8.352627754211426
    6. 'the' → logprob: -8.602627754211426
    7. 'order' → logprob: -9.852627754211426
    8. 'exact' → logprob: -10.227627754211426
    9. 'all' → logprob: -10.352627754211426
    10. '_any' → logprob: -10.727627754211426

Token 707: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.6553025245666504
    2. ' order' → logprob: -1.0303025245666504
    3. 'possible' → logprob: -3.0303025245666504
    4. 'subset' → logprob: -3.6553025245666504
    5. ' permutation' → logprob: -4.03030252456665
    6. ' possible' → logprob: -4.40530252456665
    7. ' subset' → logprob: -4.65530252456665
    8. ' combination' → logprob: -5.78030252456665
    9. ' permutations' → logprob: -6.65530252456665
    10. 'comb' → logprob: -6.90530252456665

Token 708: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16995181143283844
    2. '<|end|>' → logprob: -2.669951915740967
    3. ',' → logprob: -3.044951915740967
    4. '
' → logprob: -4.044951915740967
    5. '        
' → logprob: -5.294951915740967
    6. '.' → logprob: -5.294951915740967
    7. '<|end|>' → logprob: -5.419951915740967
    8. '   ' → logprob: -6.294951915740967
    9. ',
' → logprob: -6.294951915740967
    10. ' and' → logprob: -6.669951915740967

Token 709: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3243473768234253
    2. '       ' → logprob: -1.3243473768234253
    3. '        
' → logprob: -4.824347496032715
    4. '```' → logprob: -7.949347496032715
    5. '   ' → logprob: -8.074347496032715
    6. '

' → logprob: -8.074347496032715
    7. '  
' → logprob: -8.324347496032715
    8. '    
' → logprob: -8.324347496032715
    9. '<|end|>' → logprob: -8.574347496032715
    10. '
' → logprob: -8.699347496032715

Token 710: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13434991240501404
    2. '       ' → logprob: -2.134349822998047
    3. '        
' → logprob: -5.259349822998047
    4. '```' → logprob: -7.509349822998047
    5. '    
' → logprob: -8.384349822998047
    6. '   ' → logprob: -8.634349822998047
    7. '\n' → logprob: -8.759349822998047
    8. '  
' → logprob: -8.759349822998047
    9. ' 
' → logprob: -9.259349822998047
    10. '#' (adapté à ' #') → logprob: -9.259349822998047

Token 711: ' Each' (ID: 11555)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12287911772727966
    2. '
' → logprob: -2.4978790283203125
    3. 'dp' → logprob: -3.6228790283203125
    4. '   ' → logprob: -5.9978790283203125
    5. '        
' → logprob: -6.4978790283203125
    6. '#' → logprob: -6.8728790283203125
    7. 'DP' → logprob: -7.4978790283203125
    8. '```' → logprob: -8.247879028320312
    9. 'visited' → logprob: -9.247879028320312
    10. '    
' → logprob: -9.622879028320312

Token 712: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.6096057891845703
    2. ' element' → logprob: -0.8596057891845703
    3. 'word' → logprob: -4.35960578918457
    4. ' word' → logprob: -5.35960578918457
    5. '#' → logprob: -5.60960578918457
    6. 'state' → logprob: -5.73460578918457
    7. 'string' → logprob: -6.73460578918457
    8. '       ' → logprob: -6.98460578918457
    9. 'pattern' → logprob: -6.98460578918457
    10. 'position' → logprob: -7.10960578918457

Token 713: ' string' (ID: 1621)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4613790214061737
    2. ' _' → logprob: -1.461379051208496
    3. '_strings' → logprob: -2.086379051208496
    4. 's' → logprob: -4.836379051208496
    5. '_s' → logprob: -5.836379051208496
    6. ' s' → logprob: -7.211379051208496
    7. ' ' → logprob: -7.836379051208496
    8. ')' → logprob: -8.461379051208496
    9. '_string' → logprob: -8.461379051208496
    10. ')_' → logprob: -8.836379051208496

Token 714: ' must' (ID: 2804)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.3460458517074585
    2. ' has' → logprob: -1.7210458517074585
    3. ' is' → logprob: -2.096045970916748
    4. 'can' → logprob: -2.346045970916748
    5. '_id' → logprob: -2.596045970916748
    6. 'has' → logprob: -2.721045970916748
    7. 'is' → logprob: -3.471045970916748
    8. 's' → logprob: -3.846045970916748
    9. 'length' → logprob: -4.096045970916748
    10. '_length' → logprob: -4.096045970916748

Token 715: ' appear' (ID: 7680)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.4052845537662506
    2. ' be' → logprob: -1.4052845239639282
    3. 'appear' → logprob: -2.5302846431732178
    4. ' appear' → logprob: -5.030284404754639
    5. 'have' → logprob: -7.030284404754639
    6. 'occur' → logprob: -7.905284404754639
    7. ' have' → logprob: -9.655284881591797
    8. '#' → logprob: -9.905284881591797
    9. 'appe' → logprob: -10.155284881591797
    10. 'not' → logprob: -10.530284881591797

Token 716: ' once' (ID: 4730)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.3418012857437134
    2. 'exact' → logprob: -1.7168012857437134
    3. ' at' → logprob: -2.466801166534424
    4. 'in' → logprob: -4.591801166534424
    5. ' exactly' → logprob: -4.716801166534424
    6. 'as' → logprob: -6.216801166534424
    7. ' in' → logprob: -6.591801166534424
    8. '_exact' → logprob: -7.091801166534424
    9. 'once' → logprob: -7.591801166534424
    10. ' as' → logprob: -8.091801643371582

Token 717: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1349024474620819
    2. ',' → logprob: -2.3849024772644043
    3. ' in' → logprob: -4.884902477264404
    4. '
' → logprob: -5.134902477264404
    5. '.' → logprob: -5.259902477264404
    6. ' and' → logprob: -5.634902477264404
    7. '<|end|>' → logprob: -5.634902477264404
    8. ' at' → logprob: -6.134902477264404
    9. '        
' → logprob: -6.259902477264404
    10. '   ' → logprob: -7.384902477264404

Token 718: ' no' (ID: 860)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.45381417870521545
    2. '#' → logprob: -1.578814148902893
    3. '       ' → logprob: -2.3288142681121826
    4. ' and' → logprob: -3.4538142681121826
    5. 'so' → logprob: -5.2038140296936035
    6. 'each' → logprob: -5.9538140296936035
    7. 'all' → logprob: -5.9538140296936035
    8. 'tokens' → logprob: -6.0788140296936035
    9. 'current' → logprob: -6.3288140296936035
    10. 'with' → logprob: -6.3288140296936035

Token 719: ' duplicates' (ID: 91135)
  Prédit: ' duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.5046765208244324
    2. ' repeats' → logprob: -2.004676580429077
    3. 'duplicates' → logprob: -2.504676580429077
    4. ' overlap' → logprob: -2.629676580429077
    5. ' overlaps' → logprob: -3.379676580429077
    6. 'over' → logprob: -3.504676580429077
    7. ' extra' → logprob: -4.379676342010498
    8. ' more' → logprob: -4.379676342010498
    9. ' duplicate' → logprob: -5.754676342010498
    10. 'more' → logprob: -6.254676342010498

Token 720: ' unless' (ID: 12604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16135282814502716
    2. ',' → logprob: -2.1613528728485107
    3. '
' → logprob: -4.536352634429932
    4. '.' → logprob: -4.536352634429932
    5. '        
' → logprob: -5.911352634429932
    6. ',
' → logprob: -6.536352634429932
    7. ' and' → logprob: -6.661352634429932
    8. '_' → logprob: -7.036352634429932
    9. ' (' → logprob: -7.161352634429932
    10. ')' → logprob: -7.286352634429932

Token 721: ' duplicated' (ID: 107680)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.5009305477142334
    2. 'they' → logprob: -2.1259305477142334
    3. ' element' → logprob: -3.0009305477142334
    4. 'duplicates' → logprob: -3.3759305477142334
    5. 'the' → logprob: -3.7509305477142334
    6. 'allowed' → logprob: -3.7509305477142334
    7. ' they' → logprob: -3.7509305477142334
    8. 'there' → logprob: -4.0009307861328125
    9. ' there' → logprob: -4.0009307861328125
    10. ' the' → logprob: -4.1259307861328125

Token 722: ' strings' (ID: 18279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8978012204170227
    2. '_' → logprob: -1.897801160812378
    3. 's' → logprob: -2.022801160812378
    4. '
' → logprob: -2.647801160812378
    5. ')' → logprob: -3.272801160812378
    6. ' in' → logprob: -3.397801160812378
    7. 'def' → logprob: -3.522801160812378
    8. ' of' → logprob: -3.647801160812378
    9. '   ' → logprob: -4.147801399230957
    10. ',' → logprob: -4.147801399230957

Token 723: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4393475651741028
    2. '
' → logprob: -1.064347505569458
    3. '        
' → logprob: -5.564347743988037
    4. ',' → logprob: -6.689347743988037
    5. '#' → logprob: -7.064347743988037
    6. '<|end|>' → logprob: -7.189347743988037
    7. ',
' → logprob: -7.814347743988037
    8. 'dp' → logprob: -7.814347743988037
    9. '

' → logprob: -7.939347743988037
    10. ')' → logprob: -8.314347267150879

Token 724: ' elements' (ID: 8632)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.029120923951268196
    2. 'the' → logprob: -3.654120922088623
    3. ' element' → logprob: -6.779120922088623
    4. ' the' → logprob: -7.029120922088623
    5. 'input' → logprob: -7.404120922088623
    6. 'elements' → logprob: -9.154121398925781
    7. '[element' → logprob: -10.404121398925781
    8. ' input' → logprob: -10.904121398925781
    9. 'list' → logprob: -11.279121398925781
    10. '```' → logprob: -11.904121398925781

Token 725: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21094129979610443
    2. '       ' → logprob: -1.7109413146972656
    3. '        
' → logprob: -5.585941314697266
    4. '<|end|>' → logprob: -6.210941314697266
    5. '

' → logprob: -6.835941314697266
    6. '
' → logprob: -8.210941314697266
    7. '#' → logprob: -8.335941314697266
    8. ',' → logprob: -8.460941314697266
    9. '   ' → logprob: -8.460941314697266
    10. 'dp' → logprob: -8.710941314697266

Token 726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15401212871074677
    2. '
' → logprob: -2.0290122032165527
    3. '        
' → logprob: -4.904012203216553
    4. '<|end|>' → logprob: -5.779012203216553
    5. '#' → logprob: -8.279011726379395
    6. '<|end|>' → logprob: -9.404011726379395
    7. '```' → logprob: -9.529011726379395
    8. '   ' → logprob: -9.779011726379395
    9. 'dp' → logprob: -10.154011726379395
    10. '    
' → logprob: -10.279011726379395

Token 727: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5362072587013245
    2. '       ' → logprob: -0.9112072587013245
    3. '        
' → logprob: -5.03620719909668
    4. 'dp' → logprob: -6.91120719909668
    5. '<|end|>' → logprob: -7.03620719909668
    6. '#' → logprob: -7.16120719909668
    7. '   ' → logprob: -7.28620719909668
    8. '```' → logprob: -7.53620719909668
    9. '

' → logprob: -8.53620719909668
    10. '    
' → logprob: -8.53620719909668

Token 728: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13229341804981232
    2. '
' → logprob: -2.132293462753296
    3. '        
' → logprob: -5.757293224334717
    4. '   ' → logprob: -7.632293224334717
    5. '#' → logprob: -7.882293224334717
    6. 'dp' → logprob: -8.132293701171875
    7. '<|end|>' → logprob: -8.382293701171875
    8. '    
' → logprob: -9.132293701171875
    9. '```' → logprob: -9.382293701171875
    10. 'DP' → logprob: -9.757293701171875

Token 729: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11136069148778915
    2. '
' → logprob: -3.486360788345337
    3. 'dp' → logprob: -3.486360788345337
    4. 'used' → logprob: -4.236360549926758
    5. '#' (adapté à ' #') → logprob: -4.361360549926758
    6. 'visited' → logprob: -5.486360549926758
    7. '        
' → logprob: -6.361360549926758
    8. 'mask' → logprob: -6.486360549926758
    9. 'pattern' → logprob: -6.986360549926758
    10. 'available' → logprob: -6.986360549926758

Token 730: ' Let's' (ID: 41021)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.3719397485256195
    2. '   ' → logprob: -1.496939778327942
    3. '#' → logprob: -3.6219396591186523
    4. '       ' → logprob: -3.7469396591186523
    5. 'autom' → logprob: -3.7469396591186523
    6. 'AC' → logprob: -5.746939659118652
    7. 'tr' → logprob: -5.871939659118652
    8. '
' → logprob: -6.996939659118652
    9. 'dp' → logprob: -7.121939659118652
    10. '    
' → logprob: -7.371939659118652

Token 731: ' assign' (ID: 14975)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.728686511516571
    2. 'build' → logprob: -1.2286865711212158
    3. 'initialize' → logprob: -2.478686571121216
    4. 'define' → logprob: -3.478686571121216
    5. 'create' → logprob: -4.228686332702637
    6. '#' → logprob: -4.353686332702637
    7. '   ' → logprob: -4.478686332702637
    8. 'implement' → logprob: -4.728686332702637
    9. 'dp' → logprob: -5.103686332702637
    10. 'prepare' → logprob: -5.228686332702637

Token 732: ' indices' (ID: 30378)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.17445413768291473
    2. 'ids' → logprob: -2.0494542121887207
    3. ' word' → logprob: -3.6744542121887207
    4. 'token' → logprob: -5.924454212188721
    5. ' ids' → logprob: -6.299454212188721
    6. 'indices' → logprob: -7.924454212188721
    7. 'each' → logprob: -7.924454212188721
    8. 'pattern' → logprob: -8.924453735351562
    9. 'unique' → logprob: -9.049453735351562
    10. 'id' → logprob: -9.424453735351562

Token 733: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1541040986776352
    2. ' to' → logprob: -2.904103994369507
    3. '=' → logprob: -3.529103994369507
    4. 'to' → logprob: -3.904103994369507
    5. '<|end|>' → logprob: -4.279104232788086
    6. '_to' → logprob: -4.404104232788086
    7. ',' → logprob: -6.154104232788086
    8. 's' → logprob: -6.279104232788086
    9. '0' → logprob: -6.529104232788086
    10. '_' → logprob: -6.779104232788086

Token 734: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7050265073776245
    2. 'to' → logprob: -1.8300265073776245
    3. ' =' → logprob: -2.080026626586914
    4. ' to' → logprob: -2.580026626586914
    5. '<|end|>' → logprob: -2.830026626586914
    6. '       ' → logprob: -3.955026626586914
    7. '0' → logprob: -4.330026626586914
    8. '   ' → logprob: -4.455026626586914
    9. '<|end|>' → logprob: -5.080026626586914
    10. 'for' → logprob: -5.205026626586914

Token 735: '..' (ID: 485)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 736: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33229124546051025
    2. '(n' → logprob: -2.0822911262512207
    3. ' n' → logprob: -2.0822911262512207
    4. '
' → logprob: -4.582291126251221
    5. ' (' → logprob: -4.957291126251221
    6. ' ' → logprob: -5.707291126251221
    7. '<n' → logprob: -5.957291126251221
    8. ',' → logprob: -6.082291126251221
    9. ',n' → logprob: -6.207291126251221
    10. '   ' → logprob: -6.457291126251221

Token 737: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12781789898872375
    2. ' -' → logprob: -2.8778178691864014
    3. '<|end|>' → logprob: -3.3778178691864014
    4. '       ' → logprob: -4.5028181076049805
    5. ' to' → logprob: -5.0028181076049805
    6. '...' → logprob: -5.7528181076049805
    7. 'to' → logprob: -6.1278181076049805
    8. '<|end|>' → logprob: -7.0028181076049805
    9. '   ' → logprob: -7.2528181076049805
    10. ' ' → logprob: -7.3778181076049805

Token 738: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03730939328670502
    2. '1' → logprob: -3.412309408187866
    3. ' -' → logprob: -5.662309169769287
    4. ' ' → logprob: -9.287309646606445
    5. 'n' → logprob: -10.287309646606445
    6. '```' → logprob: -11.412309646606445
    7. '19' → logprob: -11.787309646606445
    8. 's' → logprob: -11.912309646606445
    9. ' n' → logprob: -12.037309646606445
    10. ')' → logprob: -12.537309646606445

Token 739: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3324550688266754
    2. '       ' → logprob: -1.707455039024353
    3. 'to' → logprob: -3.3324551582336426
    4. '
' → logprob: -3.9574551582336426
    5. ' and' → logprob: -4.457455158233643
    6. ',' → logprob: -4.582455158233643
    7. ' for' → logprob: -4.832455158233643
    8. '   ' → logprob: -6.082455158233643
    9. ')' → logprob: -6.707455158233643
    10. 'for' → logprob: -6.832455158233643

Token 740: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.3003528118133545
    2. 'each' → logprob: -1.5503528118133545
    3. 'the' → logprob: -3.6753528118133545
    4. ' element' → logprob: -4.550353050231934
    5. ' each' → logprob: -4.925353050231934
    6. ' the' → logprob: -5.800353050231934
    7. 'elements' → logprob: -7.550353050231934
    8. 'strings' → logprob: -9.300353050231934
    9. 'words' → logprob: -9.675353050231934
    10. '	element' → logprob: -9.925353050231934

Token 741: ' strings' (ID: 18279)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.3204405903816223
    2. 's' → logprob: -1.3204405307769775
    3. ' _' → logprob: -6.195440769195557
    4. '_s' → logprob: -6.570440769195557
    5. ' strings' → logprob: -6.570440769195557
    6. ' s' → logprob: -6.820440769195557
    7. '_' → logprob: -7.070440769195557
    8. 'strings' → logprob: -8.320440292358398
    9. '_string' → logprob: -10.070440292358398
    10. '_indices' → logprob: -11.195440292358398

Token 742: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27911555767059326
    2. '
' → logprob: -2.154115676879883
    3. '       ' → logprob: -3.279115676879883
    4. '    
' → logprob: -3.779115676879883
    5. 'ac' → logprob: -4.154115676879883
    6. '        
' → logprob: -4.404115676879883
    7. ',' → logprob: -4.529115676879883
    8. 'autom' → logprob: -4.779115676879883
    9. ' and' → logprob: -4.904115676879883
    10. 'aho' → logprob: -6.154115676879883

Token 743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027167657390236855
    2. '<|end|>' → logprob: -4.652167797088623
    3. '        
' → logprob: -4.902167797088623
    4. '
' → logprob: -5.027167797088623
    5. '   ' → logprob: -7.277167797088623
    6. '```' → logprob: -7.652167797088623
    7. '<|end|>' → logprob: -7.902167797088623
    8. '#' → logprob: -8.027167320251465
    9. '    
' → logprob: -8.902167320251465
    10. ',' → logprob: -9.152167320251465

Token 744: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15381701290607452
    2. '        
' → logprob: -3.1538169384002686
    3. '
' → logprob: -3.2788169384002686
    4. '   ' → logprob: -3.4038169384002686
    5. 'ac' → logprob: -4.778817176818848
    6. '#' → logprob: -5.528817176818848
    7. 'autom' → logprob: -5.653817176818848
    8. '    
' → logprob: -5.653817176818848
    9. '```' → logprob: -7.028817176818848
    10. 'dp' → logprob: -7.403817176818848

Token 745: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034540721680969
    2. '
' → logprob: -6.628454208374023
    3. '        
' → logprob: -6.628454208374023
    4. '#' → logprob: -8.003454208374023
    5. 'dp' → logprob: -8.128454208374023
    6. 'from' → logprob: -10.503454208374023
    7. '   ' → logprob: -10.878454208374023
    8. '    
' → logprob: -11.128454208374023
    9. '<|end|>' → logprob: -11.503454208374023
    10. 'mask' → logprob: -11.628454208374023

Token 746: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9622505903244019
    2. '       ' → logprob: -1.3372505903244019
    3. 'ac' → logprob: -1.3372505903244019
    4. 'autom' → logprob: -3.3372507095336914
    5. '#' (adapté à ' #') → logprob: -3.7122507095336914
    6. '
' → logprob: -4.212250709533691
    7. 'tr' → logprob: -5.587250709533691
    8. '        
' → logprob: -5.962250709533691
    9. '    
' → logprob: -6.337250709533691
    10. 'AC' → logprob: -6.962250709533691

Token 747: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5167890191078186
    2. 'dp' → logprob: -1.1417889595031738
    3. 'ac' → logprob: -3.266788959503174
    4. '   ' → logprob: -3.641788959503174
    5. '#' → logprob: -4.516788959503174
    6. 'autom' → logprob: -6.016788959503174
    7. 'visited' → logprob: -7.016788959503174
    8. '
' → logprob: -7.266788959503174
    9. '        
' → logprob: -7.266788959503174
    10. 'AC' → logprob: -7.766788959503174

Token 748: ' will' (ID: 738)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47925347089767456
    2. '   ' → logprob: -1.9792535305023193
    3. ' continue' → logprob: -2.8542535305023193
    4. ' want' → logprob: -3.1042535305023193
    5. 'continue' → logprob: -3.7292535305023193
    6. ' need' → logprob: -3.7292535305023193
    7. ' have' → logprob: -3.9792535305023193
    8. ' will' → logprob: -4.10425329208374
    9. '
' → logprob: -4.22925329208374
    10. ' =' → logprob: -4.60425329208374

Token 749: ' run' (ID: 2461)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -1.196754813194275
    2. 'process' → logprob: -1.696754813194275
    3. 'continue' → logprob: -1.946754813194275
    4. 'build' → logprob: -1.946754813194275
    5. ' use' → logprob: -2.9467549324035645
    6. '   ' → logprob: -2.9467549324035645
    7. 'initialize' → logprob: -3.0717549324035645
    8. 'implement' → logprob: -4.1967549324035645
    9. 'create' → logprob: -4.8217549324035645
    10. 'define' → logprob: -4.8217549324035645

Token 750: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7031148076057434
    2. 'ac' → logprob: -1.0781147480010986
    3. ' ac' → logprob: -2.7031147480010986
    4. 'aho' → logprob: -3.4531147480010986
    5. ' aho' → logprob: -3.9531147480010986
    6. 'autom' → logprob: -4.203114986419678
    7. '       ' → logprob: -4.453114986419678
    8. ' autom' → logprob: -4.953114986419678
    9. 'acy' → logprob: -5.578114986419678
    10. ' the' → logprob: -5.578114986419678

Token 751: ' A' (ID: 355)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.3661330938339233
    2. 'autom' → logprob: -1.4911330938339233
    3. 'A' → logprob: -1.9911330938339233
    4. 'aho' → logprob: -2.116133213043213
    5. ' aho' → logprob: -2.241133213043213
    6. '   ' → logprob: -2.366133213043213
    7. ' A' → logprob: -4.366133213043213
    8. ' autom' → logprob: -4.491133213043213
    9. ' ac' → logprob: -4.866133213043213
    10. '       ' → logprob: -4.991133213043213

Token 752: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.013171765953302383
    2. 'cor' → logprob: -5.013171672821045
    3. '_' → logprob: -6.388171672821045
    4. '_c' → logprob: -6.513171672821045
    5. 'co' → logprob: -7.138171672821045
    6. 'c' → logprob: -7.388171672821045
    7. 'hoc' → logprob: -8.263172149658203
    8. '_cor' → logprob: -8.513172149658203
    9. 'cho' → logprob: -8.888172149658203
    10. 'uto' → logprob: -9.138172149658203

Token 753: ' autom' (ID: 5099)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.0031724870204925537
    2. '-C' → logprob: -5.878172397613525
    3. '.C' → logprob: -9.628172874450684
    4. 'Autom' → logprob: -9.753172874450684
    5. '-' → logprob: -10.253172874450684
    6. '.' → logprob: -10.253172874450684
    7. '_C' → logprob: -10.378172874450684
    8. '
' → logprob: -10.878172874450684
    9. '   ' → logprob: -11.128172874450684
    10. 'cor' → logprob: -11.378172874450684

Token 754: 'aton' (ID: 24850)
  Prédit: 'aton'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aton' → logprob: -0.1383255124092102
    2. 'at' → logprob: -2.3883254528045654
    3. 'ac' → logprob: -4.2633256912231445
    4. 'achine' → logprob: -4.3883256912231445
    5. '```' → logprob: -5.6383256912231445
    6. 'atic' → logprob: -5.7633256912231445
    7. 'acor' → logprob: -7.6383256912231445
    8. 'on' → logprob: -7.7633256912231445
    9. 'ait' → logprob: -7.8883256912231445
    10. 'atch' → logprob: -8.138325691223145

Token 755: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.9831384420394897
    2. '.search' → logprob: -1.6081384420394897
    3. '.' → logprob: -2.3581385612487793
    4. '.run' → logprob: -2.4831385612487793
    5. ' over' → logprob: -2.9831385612487793
    6. '   ' → logprob: -3.1081385612487793
    7. 'on' → logprob: -3.3581385612487793
    8. ' to' → logprob: -4.358138561248779
    9. '.match' → logprob: -4.483138561248779
    10. ' through' → logprob: -4.733138561248779

Token 756: ' the' (ID: 290)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.00991734117269516
    2. ' text' → logprob: -4.759917259216309
    3. 'the' → logprob: -6.759917259216309
    4. ' the' → logprob: -8.884917259216309
    5. '   ' → logprob: -12.634917259216309
    6. '{text' → logprob: -14.134917259216309
    7. '
' → logprob: -16.509918212890625
    8. '	text' → logprob: -17.509918212890625
    9. '       ' → logprob: -17.509918212890625
    10. '_text' → logprob: -18.134918212890625

Token 757: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.0028062984347343445
    2. ' text' → logprob: -5.877806186676025
    3. '
' → logprob: -14.377806663513184
    4. '{text' → logprob: -15.002806663513184
    5. 'code' → logprob: -16.002805709838867
    6. 'next' → logprob: -16.752805709838867
    7. '   ' → logprob: -16.752805709838867
    8. 'token' → logprob: -16.752805709838867
    9. '_text' → logprob: -16.752805709838867
    10. '"text' → logprob: -17.252805709838867

Token 758: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014580178074538708
    2. ' for' → logprob: -5.264580249786377
    3. ',' → logprob: -5.389580249786377
    4. '   ' → logprob: -6.514580249786377
    5. ' and' → logprob: -6.514580249786377
    6. '
' → logprob: -7.639580249786377
    7. 'for' → logprob: -7.639580249786377
    8. ' =' → logprob: -8.639579772949219
    9. ',
' → logprob: -9.014579772949219
    10. ' to' → logprob: -9.264579772949219

Token 759: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.40929579734802246
    2. 'find' → logprob: -1.4092957973480225
    3. 'detect' → logprob: -3.1592957973480225
    4. ' detect' → logprob: -3.5342957973480225
    5. 'process' → logprob: -5.409296035766602
    6. ' process' → logprob: -5.409296035766602
    7. '   ' → logprob: -5.909296035766602
    8. 'search' → logprob: -6.784296035766602
    9. 'match' → logprob: -6.909296035766602
    10. 'get' → logprob: -7.659296035766602

Token 760: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.47437384724617004
    2. ' all' → logprob: -1.2243738174438477
    3. 'matches' → logprob: -3.3493738174438477
    4. ' matches' → logprob: -3.8493738174438477
    5. ' occurrences' → logprob: -3.8493738174438477
    6. 'occ' → logprob: -5.974373817443848
    7. '   ' → logprob: -6.599373817443848
    8. 'positions' → logprob: -6.974373817443848
    9. 'match' → logprob: -8.474373817443848
    10. ' the' → logprob: -8.724373817443848

Token 761: ' occurrences' (ID: 108073)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.7130857706069946
    2. ' matches' → logprob: -1.3380857706069946
    3. ' occurrences' → logprob: -1.8380857706069946
    4. 'occ' → logprob: -3.463085651397705
    5. 'positions' → logprob: -3.588085651397705
    6. ' positions' → logprob: -4.588085651397705
    7. 'occur' → logprob: -5.713085651397705
    8. 'match' → logprob: -5.838085651397705
    9. ' match' → logprob: -6.088085651397705
    10. ' occur' → logprob: -6.213085651397705

Token 762: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1177641972899437
    2. ' of' → logprob: -2.2427642345428467
    3. ',' → logprob: -6.242763996124268
    4. '   ' → logprob: -7.117763996124268
    5. '.' → logprob: -7.867763996124268
    6. ' in' → logprob: -7.992763996124268
    7. ' for' → logprob: -8.117764472961426
    8. ' at' → logprob: -8.242764472961426
    9. 'of' → logprob: -8.867764472961426
    10. '           ' → logprob: -8.867764472961426

Token 763: ' element' (ID: 3577)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.6040633916854858
    2. 'element' → logprob: -0.9790633916854858
    3. 'the' → logprob: -2.9790635108947754
    4. 'any' → logprob: -4.979063510894775
    5. 'all' → logprob: -5.104063510894775
    6. 'words' → logprob: -5.479063510894775
    7. ' each' → logprob: -5.604063510894775
    8. 'elements' → logprob: -6.604063510894775
    9. 'patterns' → logprob: -6.729063510894775
    10. 'tokens' → logprob: -6.854063510894775

Token 764: ' strings' (ID: 18279)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.18021689355373383
    2. '_' → logprob: -2.0552167892456055
    3. ' strings' → logprob: -3.8052167892456055
    4. 's' → logprob: -5.0552167892456055
    5. 'strings' → logprob: -5.3052167892456055
    6. ' _' → logprob: -6.3052167892456055
    7. ' ' → logprob: -7.3052167892456055
    8. '       ' → logprob: -8.805216789245605
    9. ')' → logprob: -8.805216789245605
    10. '_s' → logprob: -9.180216789245605

Token 765: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061914458870887756
    2. ',' → logprob: -3.0619144439697266
    3. '.' → logprob: -4.936914443969727
    4. '   ' → logprob: -5.936914443969727
    5. ' and' → logprob: -6.561914443969727
    6. ' in' → logprob: -7.811914443969727
    7. ' at' → logprob: -8.311914443969727
    8. '           ' → logprob: -8.311914443969727
    9. '        
' → logprob: -8.561914443969727
    10. ')' → logprob: -8.936914443969727

Token 766: 'which' (ID: 13980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38160860538482666
    2. ').' → logprob: -1.6316086053848267
    3. ' at' → logprob: -2.881608486175537
    4. '),' → logprob: -4.006608486175537
    5. ' in' → logprob: -4.381608486175537
    6. '.' → logprob: -4.506608486175537
    7. ')
' → logprob: -5.006608486175537
    8. '       ' → logprob: -5.381608486175537
    9. ').
' → logprob: -6.131608486175537
    10. ',' → logprob: -6.256608486175537

Token 767: ' element' (ID: 3577)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6524094343185425
    2. ' are' → logprob: -1.6524094343185425
    3. 'occur' → logprob: -1.9024094343185425
    4. 'appear' → logprob: -2.402409553527832
    5. 'are' → logprob: -2.777409553527832
    6. ' can' → logprob: -3.152409553527832
    7. ' have' → logprob: -3.402409553527832
    8. ' will' → logprob: -3.652409553527832
    9. ' appear' → logprob: -3.902409553527832
    10. 'have' → logprob: -3.902409553527832

Token 768: ' matched' (ID: 31366)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9556180834770203
    2. '_' → logprob: -1.580618143081665
    3. '_strings' → logprob: -2.080618143081665
    4. ' strings' → logprob: -2.330618143081665
    5. ')' → logprob: -2.705618143081665
    6. '_ids' → logprob: -3.205618143081665
    7. ' _' → logprob: -3.705618143081665
    8. '_s' → logprob: -3.705618143081665
    9. ' indices' → logprob: -5.455617904663086
    10. '_indices' → logprob: -5.580617904663086

Token 769: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5506770014762878
    2. ')' → logprob: -1.4256770610809326
    3. ').' → logprob: -2.1756770610809326
    4. 'at' → logprob: -3.0506770610809326
    5. ',' → logprob: -4.5506768226623535
    6. 's' → logprob: -5.3006768226623535
    7. ')
' → logprob: -6.3006768226623535
    8. '),' → logprob: -6.3006768226623535
    9. ').
' → logprob: -6.6756768226623535
    10. ' and' → logprob: -8.425677299499512

Token 770: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.206015706062317
    2. ' which' → logprob: -1.581015706062317
    3. 'which' → logprob: -1.956015706062317
    4. 'a' → logprob: -2.2060155868530273
    5. ' each' → logprob: -2.4560155868530273
    6. ' a' → logprob: -3.3310155868530273
    7. 'position' → logprob: -3.5810155868530273
    8. 'positions' → logprob: -3.8310155868530273
    9. ' position' → logprob: -4.206015586853027
    10. ' positions' → logprob: -4.831015586853027

Token 771: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.49058130383491516
    2. 'position' → logprob: -0.9905812740325928
    3. ')' → logprob: -5.240581512451172
    4. ' )' → logprob: -5.615581512451172
    5. 'index' → logprob: -5.740581512451172
    6. ' index' → logprob: -5.740581512451172
    7. 'pos' → logprob: -8.115581512451172
    8. 'text' → logprob: -9.365581512451172
    9. 'positions' → logprob: -9.490581512451172
    10. ' step' → logprob: -9.615581512451172

Token 772: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09041821956634521
    2. ').' → logprob: -2.7154183387756348
    3. '):' → logprob: -4.340418338775635
    4. ' in' → logprob: -6.090418338775635
    5. ',' → logprob: -6.965418338775635
    6. ' )' → logprob: -7.090418338775635
    7. '),' → logprob: -7.215418338775635
    8. ':' → logprob: -7.590418338775635
    9. '       ' → logprob: -7.590418338775635
    10. '.' → logprob: -7.715418338775635

Token 773: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04763828217983246
    2. '
' → logprob: -3.297638177871704
    3. '        
' → logprob: -5.547638416290283
    4. '<|end|>' → logprob: -5.797638416290283
    5. ',' → logprob: -6.672638416290283
    6. '<|end|>' → logprob: -7.672638416290283
    7. ' and' → logprob: -8.297637939453125
    8. '.' → logprob: -8.547637939453125
    9. '   ' → logprob: -9.297637939453125
    10. ',
' → logprob: -9.797637939453125

Token 774: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06012186408042908
    2. '
' → logprob: -3.185121774673462
    3. '        
' → logprob: -4.935122013092041
    4. ',' → logprob: -5.060122013092041
    5. '.' → logprob: -6.810122013092041
    6. ',
' → logprob: -8.060121536254883
    7. ')' → logprob: -8.060121536254883
    8. '   ' → logprob: -8.060121536254883
    9. '
' → logprob: -8.685121536254883
    10. '#' → logprob: -8.685121536254883

Token 775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06962714344263077
    2. '
' → logprob: -2.819627046585083
    3. '        
' → logprob: -4.944627285003662
    4. '<|end|>' → logprob: -8.694626808166504
    5. '    
' → logprob: -9.069626808166504
    6. '   ' → logprob: -9.319626808166504
    7. '<|end|>' → logprob: -10.319626808166504
    8. ',' → logprob: -11.444626808166504
    9. '

' → logprob: -11.444626808166504
    10. '        

' → logprob: -11.569626808166504

Token 776: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.142433762550354
    2. '
' → logprob: -2.1424336433410645
    3. '   ' → logprob: -4.6424336433410645
    4. '        
' → logprob: -5.3924336433410645
    5. '    
' → logprob: -7.3924336433410645
    6. 'ac' → logprob: -8.642434120178223
    7. '#' (adapté à ' #') → logprob: -8.892434120178223
    8. '
' → logprob: -10.017434120178223
    9. 'autom' → logprob: -10.142434120178223
    10. '            
' → logprob: -11.267434120178223

Token 777: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40369921922683716
    2. '   ' → logprob: -1.9036991596221924
    3. 'matches' → logprob: -3.0286991596221924
    4. 'ac' → logprob: -3.1536991596221924
    5. 'dp' → logprob: -3.6536991596221924
    6. 'occ' → logprob: -3.7786991596221924
    7. '#' → logprob: -3.9036991596221924
    8. 'occur' → logprob: -4.7786993980407715
    9. 'autom' → logprob: -5.1536993980407715
    10. '        
' → logprob: -6.2786993980407715

Token 778: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009753846563398838
    2. '
' → logprob: -5.259753704071045
    3. '#' → logprob: -6.759753704071045
    4. '   ' → logprob: -7.384753704071045
    5. '        
' → logprob: -7.634753704071045
    6. 'dp' → logprob: -8.259754180908203
    7. 'def' → logprob: -8.259754180908203
    8. 'import' → logprob: -8.634754180908203
    9. ',' → logprob: -8.634754180908203
    10. 'occur' → logprob: -8.884754180908203

Token 779: ' use' (ID: 1199)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.47174957394599915
    2. '       ' → logprob: -2.3467495441436768
    3. '#' → logprob: -2.4717495441436768
    4. 'matches' → logprob: -2.7217495441436768
    5. ' dp' → logprob: -2.8467495441436768
    6. ' matches' → logprob: -4.971749782562256
    7. 'occ' → logprob: -4.971749782562256
    8. 'found' → logprob: -4.971749782562256
    9. 'mask' → logprob: -5.096749782562256
    10. 'visited' → logprob: -5.346749782562256

Token 780: ' DP' (ID: 51992)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8743612170219421
    2. 'dp' → logprob: -1.624361276626587
    3. ' bit' → logprob: -1.624361276626587
    4. ' the' → logprob: -3.124361276626587
    5. 'bit' → logprob: -3.124361276626587
    6. 'n' → logprob: -3.749361276626587
    7. 'a' → logprob: -3.999361276626587
    8. ' dp' → logprob: -4.249361038208008
    9. ' n' → logprob: -4.749361038208008
    10. ' an' → logprob: -4.874361038208008

Token 781: ':
' (ID: 734)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.4982982873916626
    2. '
' → logprob: -1.6232982873916626
    3. ' =' → logprob: -1.7482982873916626
    4. '_states' → logprob: -2.248298168182373
    5. '       ' → logprob: -2.873298168182373
    6. '_' → logprob: -3.248298168182373
    7. '   ' → logprob: -3.623298168182373
    8. '_size' → logprob: -3.748298168182373
    9. ' to' → logprob: -3.998298168182373
    10. '_state' → logprob: -4.373298168182373

Token 782: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00790743064135313
    2. '
' → logprob: -5.257907390594482
    3. '        
' → logprob: -6.507907390594482
    4. '   ' → logprob: -8.25790786743164
    5. '<|end|>' → logprob: -8.75790786743164
    6. '        ' → logprob: -9.13290786743164
    7. '      ' → logprob: -9.25790786743164
    8. ',' → logprob: -10.00790786743164
    9. '           ' → logprob: -10.00790786743164
    10. '#' → logprob: -10.13290786743164

Token 783: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01145025622099638
    2. 'dp' → logprob: -4.886450290679932
    3. '        
' → logprob: -6.886450290679932
    4. '   ' → logprob: -7.011450290679932
    5. 'mask' → logprob: -7.511450290679932
    6. '
' → logprob: -7.761450290679932
    7. '#' (adapté à ' #') → logprob: -8.386449813842773
    8. 'n' → logprob: -9.386449813842773
    9. 'visited' → logprob: -9.511449813842773
    10. ' dp' → logprob: -9.636449813842773

Token 784: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01692764274775982
    2. 'dp' → logprob: -4.141927719116211
    3. '
' → logprob: -7.516927719116211
    4. ' dp' → logprob: -8.391927719116211
    5. '   ' → logprob: -10.016927719116211
    6. '```' → logprob: -10.641927719116211
    7. '        
' → logprob: -10.891927719116211
    8. 'visited' → logprob: -11.891927719116211
    9. 'mask' → logprob: -12.141927719116211
    10. 'from' → logprob: -12.516927719116211

Token 785: '[position' (ID: 75596)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030216693878173828
    2. '[' → logprob: -4.155216693878174
    3. '=' → logprob: -4.780216693878174
    4. '_' → logprob: -5.905216693878174
    5. '   ' → logprob: -6.655216693878174
    6. ' ' → logprob: -7.280216693878174
    7. ' [' → logprob: -8.155216217041016
    8. '```' → logprob: -8.155216217041016
    9. '[i' → logprob: -8.905216217041016
    10. '    ' → logprob: -10.530216217041016

Token 786: '][' (ID: 2696)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04334193468093872
    2. ']' → logprob: -3.793341875076294
    3. '=' → logprob: -4.918342113494873
    4. ',' → logprob: -5.918342113494873
    5. '[' → logprob: -6.043342113494873
    6. '   ' → logprob: -6.168342113494873
    7. ')' → logprob: -6.793342113494873
    8. '][' → logprob: -6.918342113494873
    9. '_' → logprob: -7.168342113494873
    10. '```' → logprob: -7.543342113494873

Token 787: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.46429648995399475
    2. '(' → logprob: -1.8392964601516724
    3. 'bit' → logprob: -2.089296579360962
    4. 'used' → logprob: -2.839296579360962
    5. '1' → logprob: -3.964296579360962
    6. ' (' → logprob: -6.089296340942383
    7. 'state' → logprob: -6.589296340942383
    8. ' mask' → logprob: -6.589296340942383
    9. '(mask' → logprob: -6.964296340942383
    10. 'visited' → logprob: -6.964296340942383

Token 788: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004725007340312004
    2. '][' → logprob: -5.504724979400635
    3. ' ]' → logprob: -7.754724979400635
    4. ']=' → logprob: -9.629725456237793
    5. '   ' → logprob: -10.879725456237793
    6. '][]' → logprob: -10.879725456237793
    7. '       ' → logprob: -11.129725456237793
    8. ']==' → logprob: -11.379725456237793
    9. ' ][' → logprob: -11.504725456237793
    10. '+' → logprob: -11.504725456237793

Token 789: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10361602157354355
    2. '=' → logprob: -2.7286159992218018
    3. ' =' → logprob: -4.478616237640381
    4. '```' → logprob: -4.978616237640381
    5. '_' → logprob: -5.728616237640381
    6. ''' → logprob: -6.228616237640381
    7. '   ' → logprob: -6.353616237640381
    8. ']' → logprob: -6.353616237640381
    9. ',' → logprob: -6.728616237640381
    10. '[
' → logprob: -6.978616237640381

Token 790: ' whether' (ID: 5588)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2394465059041977
    2. 'set' → logprob: -1.7394465208053589
    3. ' False' → logprob: -3.6144464015960693
    4. 'True' → logprob: -5.364446640014648
    5. ' set' → logprob: -5.614446640014648
    6. '0' → logprob: -7.364446640014648
    7. ' True' → logprob: -7.739446640014648
    8. '{}' → logprob: -8.114446640014648
    9. 'default' → logprob: -8.614446640014648
    10. '[' → logprob: -8.739446640014648

Token 791: ' it's' (ID: 4275)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.027483627200126648
    2. ' ' → logprob: -4.2774834632873535
    3. 'True' → logprob: -4.4024834632873535
    4. '_' → logprob: -8.402483940124512
    5. ' found' → logprob: -9.027483940124512
    6. ' False' → logprob: -9.277483940124512
    7. '[' → logprob: -9.402483940124512
    8. ')' → logprob: -9.902483940124512
    9. ' a' → logprob: -10.027483940124512
    10. ' (' → logprob: -10.402483940124512

Token 792: ' possible' (ID: 4149)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.06504499912261963
    2. ' possible' → logprob: -2.94004487991333
    3. 'True' → logprob: -4.69004487991333
    4. 'possible' → logprob: -7.56504487991333
    5. ' valid' → logprob: -9.190045356750488
    6. ' space' → logprob: -9.315045356750488
    7. ' true' → logprob: -9.940045356750488
    8. ' )' → logprob: -10.315045356750488
    9. '_possible' → logprob: -10.565045356750488
    10. ' `' → logprob: -10.565045356750488

Token 793: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.027381563559174538
    2. 'to' → logprob: -5.152381420135498
    3. '<|end|>' → logprob: -5.152381420135498
    4. '=' → logprob: -5.902381420135498
    5. '   ' → logprob: -6.027381420135498
    6. ')' → logprob: -6.027381420135498
    7. '[' → logprob: -6.277381420135498
    8. ' =' → logprob: -6.402381420135498
    9. ' ' → logprob: -6.527381420135498
    10. '       ' → logprob: -7.527381420135498

Token 794: ' form' (ID: 1625)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5763020515441895
    2. ' True' → logprob: -0.8263020515441895
    3. ' reach' → logprob: -8.576301574707031
    4. ' ' → logprob: -10.326301574707031
    5. 'reach' → logprob: -10.326301574707031
    6. 'ach' → logprob: -11.076301574707031
    7. '1' → logprob: -11.076301574707031
    8. '
' → logprob: -11.326301574707031
    9. '   ' → logprob: -11.576301574707031
    10. ' have' → logprob: -11.826301574707031

Token 795: ' a' (ID: 261)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5951717495918274
    2. 'True' → logprob: -0.8451717495918274
    3. 'False' → logprob: -5.345171928405762
    4. ''' → logprob: -5.845171928405762
    5. ' False' → logprob: -6.220171928405762
    6. ' a' → logprob: -6.220171928405762
    7. ' ' → logprob: -6.220171928405762
    8. '[' → logprob: -7.470171928405762
    9. '   ' → logprob: -7.595171928405762
    10. '(True' → logprob: -7.595171928405762

Token 796: ' concaten' (ID: 121942)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -1.0598353147506714
    2. ' substring' → logprob: -1.8098353147506714
    3. ' concaten' → logprob: -1.9348353147506714
    4. 'substring' → logprob: -2.059835433959961
    5. ' ' → logprob: -2.559835433959961
    6. 'match' → logprob: -3.059835433959961
    7. 'conc' → logprob: -3.809835433959961
    8. 'space' → logprob: -4.309835433959961
    9. ' valid' → logprob: -4.559835433959961
    10. '```' → logprob: -5.059835433959961

Token 797: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0010693699587136507
    2. 'a' → logprob: -7.12606954574585
    3. 'ated' → logprob: -9.376069068908691
    4. '   ' → logprob: -9.751069068908691
    5. '_' → logprob: -10.126069068908691
    6. '       ' → logprob: -10.751069068908691
    7. 'at' → logprob: -11.001069068908691
    8. 'e' → logprob: -11.751069068908691
    9. ' at' → logprob: -12.001069068908691
    10. ' ' → logprob: -12.251069068908691

Token 798: ' using' (ID: 2360)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4383653998374939
    2. '[' → logprob: -1.8133654594421387
    3. '   ' → logprob: -2.5633654594421387
    4. ' of' → logprob: -3.8133654594421387
    5. ',' → logprob: -4.188365459442139
    6. ' with' → logprob: -4.313365459442139
    7. ' ' → logprob: -4.563365459442139
    8. '=' → logprob: -4.813365459442139
    9. '{' → logprob: -5.313365459442139
    10. '       ' → logprob: -5.438365459442139

Token 799: ' element' (ID: 3577)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6996692419052124
    2. 'position' → logprob: -1.9496692419052124
    3. 'the' → logprob: -2.199669361114502
    4. ' position' → logprob: -2.449669361114502
    5. ' a' → logprob: -3.324669361114502
    6. '[position' → logprob: -4.074669361114502
    7. ' one' → logprob: -4.199669361114502
    8. ' True' → logprob: -4.324669361114502
    9. 'element' → logprob: -4.574669361114502
    10. '1' → logprob: -4.699669361114502

Token 800: ' strings' (ID: 18279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7018482685089111
    2. '_strings' → logprob: -0.9518482685089111
    3. 's' → logprob: -2.826848268508911
    4. ' _' → logprob: -3.326848268508911
    5. '[' → logprob: -5.201848030090332
    6. ']' → logprob: -5.201848030090332
    7. 'strings' → logprob: -6.201848030090332
    8. ' ' → logprob: -6.326848030090332
    9. '_s' → logprob: -6.451848030090332
    10. ')' → logprob: -7.451848030090332

Token 801: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2705185413360596
    2. ']' → logprob: -1.2705185413360596
    3. '_' → logprob: -1.7705185413360596
    4. '   ' → logprob: -2.5205185413360596
    5. ' at' → logprob: -3.2705185413360596
    6. ' ' → logprob: -3.2705185413360596
    7. '       ' → logprob: -4.3955183029174805
    8. ' with' → logprob: -4.3955183029174805
    9. '][' → logprob: -4.5205183029174805
    10. ',' → logprob: -4.6455183029174805

Token 802: ' mask' (ID: 10910)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.101410150527954
    2. 'position' → logprob: -1.226410150527954
    3. ' the' → logprob: -1.851410150527954
    4. 'dp' → logprob: -2.851410150527954
    5. ' position' → logprob: -3.351410150527954
    6. 'text' → logprob: -3.726410150527954
    7. 'positions' → logprob: -4.101409912109375
    8. ' dp' → logprob: -4.476409912109375
    9. 'used' → logprob: -4.601409912109375
    10. 'previous' → logprob: -4.851409912109375

Token 803: ' ending' (ID: 22013)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27183830738067627
    2. '
' → logprob: -1.8968383073806763
    3. '   ' → logprob: -3.6468381881713867
    4. ']' → logprob: -3.8968381881713867
    5. '
' → logprob: -5.271838188171387
    6. ' =' → logprob: -5.521838188171387
    7. ',' → logprob: -5.521838188171387
    8. '[' → logprob: -5.646838188171387
    9. '_' → logprob: -5.646838188171387
    10. '```' → logprob: -5.646838188171387

Token 804: ' exactly' (ID: 9707)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.09895846992731094
    2. 'at' → logprob: -2.9739584922790527
    3. '_' → logprob: -3.8489584922790527
    4. '_at' → logprob: -4.223958492279053
    5. '   ' → logprob: -6.723958492279053
    6. ' ' → logprob: -6.848958492279053
    7. '=' → logprob: -7.223958492279053
    8. ' _' → logprob: -7.223958492279053
    9. '    ' → logprob: -7.473958492279053
    10. ')' → logprob: -7.598958492279053

Token 805: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.31833407282829285
    2. 'at' → logprob: -1.3183341026306152
    3. '_at' → logprob: -5.568334102630615
    4. 'with' → logprob: -7.943334102630615
    5. ' here' → logprob: -8.693333625793457
    6. '_' → logprob: -8.693333625793457
    7. '```' → logprob: -9.068333625793457
    8. ' with' → logprob: -9.818333625793457
    9. '_here' → logprob: -9.818333625793457
    10. '   ' → logprob: -10.068333625793457

Token 806: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.18016265332698822
    2. 'position' → logprob: -1.8051626682281494
    3. '[position' → logprob: -8.55516242980957
    4. '`' → logprob: -9.18016242980957
    5. ' text' → logprob: -10.18016242980957
    6. 'text' → logprob: -11.30516242980957
    7. '   ' → logprob: -11.30516242980957
    8. '(position' → logprob: -11.43016242980957
    9. '	position' → logprob: -11.68016242980957
    10. '```' → logprob: -11.80516242980957

Token 807: '-' (ID: 12)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14838996529579163
    2. '       ' → logprob: -2.023390054702759
    3. '        
' → logprob: -6.39838981628418
    4. '
' → logprob: -6.77338981628418
    5. '\n' → logprob: -7.64838981628418
    6. '   ' → logprob: -7.77338981628418
    7. ' =' → logprob: -8.27338981628418
    8. ',' → logprob: -8.27338981628418
    9. '```' → logprob: -8.27338981628418
    10. '`
' → logprob: -8.39838981628418

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35391250252723694
    2. ']' → logprob: -1.7289124727249146
    3. '_' → logprob: -3.103912591934204
    4. ' ' → logprob: -3.478912591934204
    5. ')' → logprob: -3.978912591934204
    6. '+' → logprob: -4.978912353515625
    7. ' ]' → logprob: -4.978912353515625
    8. 'position' → logprob: -6.353912353515625
    9. '```' → logprob: -6.603912353515625
    10. '`' → logprob: -6.853912353515625

Token 809: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3876200020313263
    2. '       ' → logprob: -1.262619972229004
    3. '\' → logprob: -4.637619972229004
    4. '   ' → logprob: -5.137619972229004
    5. '\n' → logprob: -5.387619972229004
    6. '
' → logprob: -5.887619972229004
    7. '_' → logprob: -6.012619972229004
    8. ' =' → logprob: -6.262619972229004
    9. '        
' → logprob: -6.512619972229004
    10. ',' → logprob: -6.512619972229004

Token 810: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.35467568039894104
    2. ' text' → logprob: -1.4796756505966187
    3. ' the' → logprob: -3.354675769805908
    4. 'the' → logprob: -3.479675769805908
    5. 'dp' → logprob: -5.979675769805908
    6. ']' → logprob: -7.479675769805908
    7. ' dp' → logprob: -7.479675769805908
    8. '   ' → logprob: -7.979675769805908
    9. ')' → logprob: -7.979675769805908
    10. ' code' → logprob: -8.60467529296875

Token 811: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48651328682899475
    2. '       ' → logprob: -0.9865132570266724
    3. '        
' → logprob: -5.736513137817383
    4. '   ' → logprob: -6.236513137817383
    5. '\' → logprob: -6.361513137817383
    6. '
' → logprob: -7.236513137817383
    7. '\n' → logprob: -7.236513137817383
    8. '    
' → logprob: -7.236513137817383
    9. ',' → logprob: -7.986513137817383
    10. ' =' → logprob: -7.986513137817383

Token 812: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.312114953994751
    2. '
' → logprob: -1.562114953994751
    3. '   ' → logprob: -3.562114953994751
    4. ')' → logprob: -5.437114715576172
    5. '        
' → logprob: -5.562114715576172
    6. ',' → logprob: -5.687114715576172
    7. '_' → logprob: -5.937114715576172
    8. '[' → logprob: -5.937114715576172
    9. '\' → logprob: -6.187114715576172
    10. ' ' → logprob: -6.312114715576172

Token 813: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2942945063114166
    2. '
' → logprob: -1.4192944765090942
    3. '   ' → logprob: -5.794294357299805
    4. '        
' → logprob: -5.919294357299805
    5. '\n' → logprob: -6.294294357299805
    6. '\' → logprob: -6.294294357299805
    7. '    
' → logprob: -7.169294357299805
    8. '`
' → logprob: -7.669294357299805
    9. '`' → logprob: -8.169294357299805
    10. '[' → logprob: -8.294294357299805

Token 814: ' mask' (ID: 10910)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25771862268447876
    2. '       ' → logprob: -1.507718563079834
    3. '   ' → logprob: -6.882718563079834
    4. '        
' → logprob: -7.007718563079834
    5. '\n' → logprob: -7.007718563079834
    6. '\' → logprob: -7.132718563079834
    7. '```' → logprob: -7.882718563079834
    8. '    
' → logprob: -8.257719039916992
    9. ',' → logprob: -8.382719039916992
    10. '  
' → logprob: -8.507719039916992

Token 815: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015548002906143665
    2. '=' → logprob: -4.515548229217529
    3. '[' → logprob: -6.140548229217529
    4. '   ' → logprob: -6.765548229217529
    5. ',' → logprob: -8.140547752380371
    6. '       ' → logprob: -8.640547752380371
    7. '```' → logprob: -8.765547752380371
    8. ')' → logprob: -8.890547752380371
    9. ']' → logprob: -9.765547752380371
    10. '    ' → logprob: -10.015547752380371

Token 816: ' a' (ID: 261)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.45961058139801025
    2. '(' → logprob: -1.2096105813980103
    3. '1' → logprob: -2.8346104621887207
    4. ' ' → logprob: -5.334610462188721
    5. '(position' → logprob: -6.334610462188721
    6. '0' → logprob: -6.584610462188721
    7. '(n' → logprob: -6.709610462188721
    8. 'position' → logprob: -7.209610462188721
    9. '   ' → logprob: -8.209610939025879
    10. '[' → logprob: -8.459610939025879

Token 817: ' bit' (ID: 3546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6941764950752258
    2. '1' → logprob: -1.069176435470581
    3. '(n' → logprob: -2.944176435470581
    4. '(' → logprob: -3.944176435470581
    5. ' bit' → logprob: -3.944176435470581
    6. 'int' → logprob: -4.44417667388916
    7. ' (' → logprob: -4.69417667388916
    8. 'bit' → logprob: -4.69417667388916
    9. '0' → logprob: -4.81917667388916
    10. ' ' → logprob: -4.94417667388916

Token 818: 'mask' (ID: 22527)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4166294038295746
    2. ' _' → logprob: -1.666629433631897
    3. '[' → logprob: -3.0416293144226074
    4. ''' → logprob: -3.0416293144226074
    5. '_
' → logprob: -4.541629314422607
    6. 'space' → logprob: -4.791629314422607
    7. ' ' → logprob: -4.916629314422607
    8. '`' → logprob: -5.166629314422607
    9. '   ' → logprob: -5.541629314422607
    10. '
' → logprob: -5.791629314422607

Token 819: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4868663549423218
    2. '   ' → logprob: -2.3618664741516113
    3. '_' → logprob: -2.6118664741516113
    4. '[
' → logprob: -2.7368664741516113
    5. '       ' → logprob: -2.7368664741516113
    6. '```' → logprob: -3.2368664741516113
    7. '
' → logprob: -4.611866474151611
    8. ',' → logprob: -4.736866474151611
    9. '_
' → logprob: -5.611866474151611
    10. '\[' → logprob: -5.611866474151611

Token 820: ' length' (ID: 5517)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.24912606179714203
    2. 'n' → logprob: -2.2491259574890137
    3. '1' → logprob: -2.3741259574890137
    4. ' ' → logprob: -4.624125957489014
    5. ' size' → logprob: -5.749125957489014
    6. ' the' → logprob: -5.999125957489014
    7. ' all' → logprob: -5.999125957489014
    8. ' elements' → logprob: -6.999125957489014
    9. ' (' → logprob: -7.374125957489014
    10. ' integers' → logprob: -7.499125957489014

Token 821: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20143741369247437
    2. ' n' → logprob: -1.7014374732971191
    3. '(n' → logprob: -12.326436996459961
    4. '<n' → logprob: -12.451436996459961
    5. ' ' → logprob: -12.701436996459961
    6. '=n' → logprob: -12.826436996459961
    7. '   ' → logprob: -12.826436996459961
    8. '[n' → logprob: -13.326436996459961
    9. '```' → logprob: -13.576436996459961
    10. '	n' → logprob: -14.201436996459961

Token 822: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5465962290763855
    2. '       ' → logprob: -0.9215962290763855
    3. '   ' → logprob: -5.046596050262451
    4. '        
' → logprob: -5.421596050262451
    5. ' =' → logprob: -5.671596050262451
    6. '\' → logprob: -6.296596050262451
    7. ',' → logprob: -6.546596050262451
    8. '    
' → logprob: -7.046596050262451
    9. '=' → logprob: -7.296596050262451
    10. ',
' → logprob: -7.421596050262451

Token 823: ' bits' (ID: 18189)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17459091544151306
    2. '[' → logprob: -2.674590826034546
    3. ' 
' → logprob: -4.299591064453125
    4. ' ' → logprob: -4.424591064453125
    5. '   ' → logprob: -4.424591064453125
    6. ',' → logprob: -4.674591064453125
    7. '        
' → logprob: -4.924591064453125
    8. ')' → logprob: -5.174591064453125
    9. '    ' → logprob: -5.424591064453125
    10. '           ' → logprob: -5.549591064453125

Token 824: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29541006684303284
    2. ')' → logprob: -2.79541015625
    3. '<|end|>' → logprob: -2.92041015625
    4. ' ' → logprob: -3.54541015625
    5. '```' → logprob: -4.04541015625
    6. ''' → logprob: -4.17041015625
    7. '=' → logprob: -4.29541015625
    8. '_' → logprob: -4.54541015625
    9. '1' → logprob: -4.67041015625
    10. '[
' → logprob: -4.79541015625

Token 825: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0049117803573608
    2. '```' → logprob: -1.5049117803573608
    3. '[' → logprob: -1.7549117803573608
    4. ' ' → logprob: -2.5049118995666504
    5. ' =' → logprob: -3.2549118995666504
    6. '1' → logprob: -3.5049118995666504
    7. '[
' → logprob: -4.37991189956665
    8. '   ' → logprob: -4.37991189956665
    9. '_' → logprob: -4.50491189956665
    10. ')' → logprob: -4.75491189956665

Token 826: ' elements' (ID: 8632)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41994667053222656
    2. 'used' → logprob: -1.7949466705322266
    3. ' used' → logprob: -2.2949466705322266
    4. ' ' → logprob: -3.6699466705322266
    5. ' the' → logprob: -4.544946670532227
    6. ')' → logprob: -4.919946670532227
    7. 'the' → logprob: -5.044946670532227
    8. 'element' → logprob: -5.544946670532227
    9. ' n' → logprob: -5.669946670532227
    10. 'n' → logprob: -5.919946670532227

Token 827: ' matched' (ID: 31366)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7588434815406799
    2. ']' → logprob: -1.7588434219360352
    3. '[' → logprob: -1.8838434219360352
    4. '   ' → logprob: -2.758843421936035
    5. '
' → logprob: -3.633843421936035
    6. '][' → logprob: -3.758843421936035
    7. '```' → logprob: -4.133843421936035
    8. ',' → logprob: -4.508843421936035
    9. '[
' → logprob: -4.633843421936035
    10. '_
' → logprob: -4.758843421936035

Token 828: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4920601546764374
    2. '
' → logprob: -0.9920601844787598
    3. '   ' → logprob: -5.24206018447876
    4. ')' → logprob: -5.61706018447876
    5. ',' → logprob: -6.61706018447876
    6. ' =' → logprob: -6.99206018447876
    7. '        
' → logprob: -6.99206018447876
    8. '[' → logprob: -7.11706018447876
    9. '[
' → logprob: -7.74206018447876
    10. '.' → logprob: -7.74206018447876

Token 829: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.02082260511815548
    2. ' far' → logprob: -3.895822525024414
    3. '_far' → logprob: -8.520822525024414
    4. '1' → logprob: -10.770822525024414
    5. '   ' → logprob: -11.145822525024414
    6. '       ' → logprob: -11.395822525024414
    7. 'in' → logprob: -11.520822525024414
    8. 'Far' → logprob: -11.645822525024414
    9. 'on' → logprob: -11.770822525024414
    10. '           ' → logprob: -13.520822525024414

Token 830: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07472848892211914
    2. '       ' → logprob: -2.699728488922119
    3. '        
' → logprob: -6.074728488922119
    4. '   ' → logprob: -6.699728488922119
    5. '    
' → logprob: -7.324728488922119
    6. '  
' → logprob: -9.199728012084961
    7. '
' → logprob: -9.199728012084961
    8. ',
' → logprob: -9.824728012084961
    9. '\n' → logprob: -10.074728012084961
    10. ',' → logprob: -10.199728012084961

Token 831: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1892527937889099
    2. '       ' → logprob: -1.8142528533935547
    3. '        
' → logprob: -5.564252853393555
    4. '\' → logprob: -6.314252853393555
    5. '    
' → logprob: -7.189252853393555
    6. '\n' → logprob: -7.564252853393555
    7. '   ' → logprob: -7.564252853393555
    8. ' 
' → logprob: -8.064252853393555
    9. '  
' → logprob: -8.314252853393555
    10. '`
' → logprob: -8.314252853393555

Token 832: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.590444028377533
    2. '       ' → logprob: -0.840444028377533
    3. '\n' → logprob: -5.590444087982178
    4. '        
' → logprob: -5.965444087982178
    5. '\' → logprob: -6.090444087982178
    6. '   ' → logprob: -6.465444087982178
    7. ',' → logprob: -6.590444087982178
    8. '    
' → logprob: -7.715444087982178
    9. ',
' → logprob: -7.840444087982178
    10. '
' → logprob: -8.34044361114502

Token 833: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48114249110221863
    2. '
' → logprob: -1.356142520904541
    3. '   ' → logprob: -2.106142520904541
    4. '    
' → logprob: -6.481142520904541
    5. '        
' → logprob: -6.981142520904541
    6. 'dp' → logprob: -11.106142044067383
    7. '    ' → logprob: -11.231142044067383
    8. '           ' → logprob: -11.731142044067383
    9. ' 
' → logprob: -11.731142044067383
    10. '\n' → logprob: -11.856142044067383

Token 834: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1654219776391983
    2. '
' → logprob: -1.915421962738037
    3. '   ' → logprob: -5.915421962738037
    4. '        
' → logprob: -6.290421962738037
    5. 'dp' → logprob: -8.540422439575195
    6. '    
' → logprob: -8.915422439575195
    7. ' 
' → logprob: -9.665422439575195
    8. '	' → logprob: -10.665422439575195
    9. '  
' → logprob: -10.790422439575195
    10. '\n' → logprob: -10.915422439575195

Token 835: ' dp' (ID: 21546)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5257235765457153
    2. '       ' → logprob: -0.9007235765457153
    3. 'dp' → logprob: -6.525723457336426
    4. '        
' → logprob: -7.150723457336426
    5. '   ' → logprob: -8.900723457336426
    6. '    
' → logprob: -9.650723457336426
    7. 'for' → logprob: -10.400723457336426
    8. '\n' → logprob: -10.525723457336426
    9. '```' → logprob: -10.900723457336426
    10. '\
' → logprob: -11.650723457336426

Token 836: ' initialized' (ID: 40319)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37470054626464844
    2. '[' → logprob: -1.3747005462646484
    3. '=' → logprob: -2.9997005462646484
    4. ' ' → logprob: -5.749700546264648
    5. ')' → logprob: -6.249700546264648
    6. '   ' → logprob: -6.374700546264648
    7. '[position' → logprob: -6.624700546264648
    8. '    ' → logprob: -7.999700546264648
    9. ']' → logprob: -8.249700546264648
    10. '=[' → logprob: -8.999700546264648

Token 837: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030010230839252472
    2. '=' → logprob: -3.655010223388672
    3. '   ' → logprob: -5.905010223388672
    4. '       ' → logprob: -7.030010223388672
    5. '[' → logprob: -10.030010223388672
    6. '=[' → logprob: -11.155010223388672
    7. '```' → logprob: -11.905010223388672
    8. '           ' → logprob: -12.530010223388672
    9. '=
' → logprob: -12.655010223388672
    10. ' ' → logprob: -12.905010223388672

Token 838: ' dp' (ID: 21546)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.40332838892936707
    2. 'False' → logprob: -1.4033284187316895
    3. '[' → logprob: -2.6533284187316895
    4. '[[' → logprob: -5.1533284187316895
    5. 'True' → logprob: -5.4033284187316895
    6. ' {' → logprob: -6.2783284187316895
    7. 'import' → logprob: -6.6533284187316895
    8. 'dp' → logprob: -7.0283284187316895
    9. ' [' → logprob: -7.6533284187316895
    10. ' False' → logprob: -8.028327941894531

Token 839: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017212345264852047
    2. ' =' → logprob: -6.501721382141113
    3. '\[' → logprob: -9.876721382141113
    4. '0' → logprob: -10.251721382141113
    5. ' ' → logprob: -10.501721382141113
    6. ' [' → logprob: -10.751721382141113
    7. '   ' → logprob: -10.876721382141113
    8. '=[' → logprob: -11.126721382141113
    9. '
' → logprob: -11.126721382141113
    10. '=' → logprob: -11.376721382141113

Token 840: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00505917938426137
    2. '{' → logprob: -5.630059242248535
    3. '[' → logprob: -7.130059242248535
    4. ' ' → logprob: -8.255059242248535
    5. '][' → logprob: -8.630059242248535
    6. ']' → logprob: -9.130059242248535
    7. '   ' → logprob: -10.130059242248535
    8. ' {' → logprob: -11.005059242248535
    9. '(' → logprob: -11.255059242248535
    10. '       ' → logprob: -11.755059242248535

Token 841: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05061931535601616
    2. ']' → logprob: -3.05061936378479
    3. '[' → logprob: -6.925619125366211
    4. ' ][' → logprob: -7.800619125366211
    5. '   ' → logprob: -8.425619125366211
    6. ']=' → logprob: -8.425619125366211
    7. ']={' → logprob: -9.925619125366211
    8. '][]' → logprob: -10.550619125366211
    9. '```' → logprob: -10.675619125366211
    10. '       ' → logprob: -10.800619125366211

Token 842: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04667714610695839
    2. '1' → logprob: -3.1716771125793457
    3. '(' → logprob: -5.671677112579346
    4. ' ' → logprob: -9.296677589416504
    5. '{' → logprob: -10.296677589416504
    6. '
' → logprob: -10.421677589416504
    7. '[' → logprob: -10.546677589416504
    8. ']' → logprob: -10.671677589416504
    9. '   ' → logprob: -11.671677589416504
    10. ' (' → logprob: -11.921677589416504

Token 843: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016053172294050455
    2. ']=' → logprob: -6.75160551071167
    3. ' ]' → logprob: -8.501605033874512
    4. '   ' → logprob: -9.376605033874512
    5. '[' → logprob: -9.501605033874512
    6. '       ' → logprob: -10.126605033874512
    7. '][' → logprob: -11.251605033874512
    8. '```' → logprob: -12.376605033874512
    9. ']
' → logprob: -12.751605033874512
    10. ']={' → logprob: -13.126605033874512

Token 844: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006567468401044607
    2. '       ' → logprob: -5.381567478179932
    3. '   ' → logprob: -6.631567478179932
    4. '=' → logprob: -7.506567478179932
    5. '
' → logprob: -10.256567001342773
    6. ':' → logprob: -11.631567001342773
    7. ',' → logprob: -12.006567001342773
    8. ' ' → logprob: -12.256567001342773
    9. '```' → logprob: -12.506567001342773
    10. '[' → logprob: -12.756567001342773

Token 845: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007102862582542002
    2. ' True' → logprob: -7.250710487365723
    3. '1' → logprob: -15.375710487365723
    4. '   ' → logprob: -17.000709533691406
    5. '=True' → logprob: -17.625709533691406
    6. '(True' → logprob: -18.000709533691406
    7. '{' → logprob: -18.375709533691406
    8. '
' → logprob: -18.625709533691406
    9. '       ' → logprob: -21.500709533691406
    10. '`' → logprob: -21.625709533691406

Token 846: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26031315326690674
    2. '       ' → logprob: -1.5103131532669067
    3. '   ' → logprob: -5.010313034057617
    4. '    
' → logprob: -7.260313034057617
    5. '        
' → logprob: -7.385313034057617
    6. '
' → logprob: -9.010313034057617
    7. '\n' → logprob: -9.635313034057617
    8. '```' → logprob: -9.635313034057617
    9. '  
' → logprob: -10.885313034057617
    10. ',
' → logprob: -10.885313034057617

Token 847: 'empty' (ID: 6857)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029073921963572502
    2. ')
' → logprob: -3.90407395362854
    3. '       ' → logprob: -4.904073715209961
    4. '
' → logprob: -7.529073715209961
    5. '   ' → logprob: -8.529073715209961
    6. '\n' → logprob: -9.779073715209961
    7. ').' → logprob: -10.029073715209961
    8. '```' → logprob: -10.279073715209961
    9. ')

' → logprob: -10.404073715209961
    10. ')\' → logprob: -10.654073715209961

Token 848: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12628814578056335
    2. '```' → logprob: -3.5012881755828857
    3. '_' → logprob: -3.8762881755828857
    4. ')' → logprob: -3.8762881755828857
    5. '   ' → logprob: -4.876287937164307
    6. ']_' → logprob: -5.001287937164307
    7. '       ' → logprob: -5.626287937164307
    8. '
' → logprob: -5.751287937164307
    9. ']
' → logprob: -5.751287937164307
    10. '_]' → logprob: -6.126287937164307

Token 849: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11931552737951279
    2. '       ' → logprob: -2.2443156242370605
    3. '   ' → logprob: -5.8693156242370605
    4. '        
' → logprob: -6.6193156242370605
    5. '    
' → logprob: -7.1193156242370605
    6. '```' → logprob: -7.4943156242370605
    7. '  
' → logprob: -8.244315147399902
    8. '\n' → logprob: -8.244315147399902
    9. '
' → logprob: -9.244315147399902
    10. '`
' → logprob: -9.494315147399902

Token 850: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44560980796813965
    2. '
' → logprob: -1.0706098079681396
    3. '   ' → logprob: -4.320610046386719
    4. '        
' → logprob: -6.570610046386719
    5. '    
' → logprob: -6.820610046386719
    6. '\n' → logprob: -7.695610046386719
    7. '```' → logprob: -9.320610046386719
    8. '\' → logprob: -9.570610046386719
    9. '`
' → logprob: -9.695610046386719
    10. ' 
' → logprob: -10.070610046386719

Token 851: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0656777024269104
    2. '
' → logprob: -2.8156776428222656
    3. '        
' → logprob: -6.315677642822266
    4. '   ' → logprob: -6.440677642822266
    5. '    
' → logprob: -8.440677642822266
    6. '```' → logprob: -10.565677642822266
    7. '           ' → logprob: -11.440677642822266
    8. 'dp' → logprob: -12.065677642822266
    9. '  
' → logprob: -12.315677642822266
    10. '`
' → logprob: -12.565677642822266

Token 852: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25283554196357727
    2. '
' → logprob: -1.5028355121612549
    3. '        
' → logprob: -7.877835750579834
    4. '   ' → logprob: -8.002835273742676
    5. '```' → logprob: -9.627835273742676
    6. '
' → logprob: -10.377835273742676
    7. '    
' → logprob: -10.752835273742676
    8. 'for' → logprob: -11.377835273742676
    9. '           ' → logprob: -11.377835273742676
    10. '`' → logprob: -11.752835273742676

Token 853: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06276467442512512
    2. 'dp' → logprob: -2.8127646446228027
    3. '
' → logprob: -7.937764644622803
    4. '   ' → logprob: -8.437765121459961
    5. 'for' → logprob: -8.937765121459961
    6. ' dp' → logprob: -10.187765121459961
    7. 'import' → logprob: -10.437765121459961
    8. '        
' → logprob: -11.937765121459961
    9. 'from' → logprob: -12.312765121459961
    10. '```' → logprob: -12.687765121459961

Token 854: ' each' (ID: 2454)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.3293781578540802
    2. 'pos' → logprob: -1.3293781280517578
    3. ' position' → logprob: -4.579378128051758
    4. ' i' → logprob: -5.704378128051758
    5. 'position' → logprob: -7.079378128051758
    6. ' p' → logprob: -7.579378128051758
    7. 'i' → logprob: -7.704378128051758
    8. ' ' → logprob: -8.079378128051758
    9. 'p' → logprob: -8.829378128051758
    10. '   ' → logprob: -10.079378128051758

Token 855: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.8603665828704834
    2. ' i' → logprob: -1.6103665828704834
    3. ' pos' → logprob: -1.7353665828704834
    4. 'pos' → logprob: -2.2353665828704834
    5. ' p' → logprob: -3.1103665828704834
    6. 'position' → logprob: -3.6103665828704834
    7. 'i' → logprob: -4.2353668212890625
    8. 'p' → logprob: -5.3603668212890625
    9. '   ' → logprob: -7.2353668212890625
    10. ' ' → logprob: -7.2353668212890625

Token 856: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1995476335287094
    2. ',' → logprob: -2.074547529220581
    3. '   ' → logprob: -4.44954776763916
    4. '_' → logprob: -5.07454776763916
    5. ' in' → logprob: -5.07454776763916
    6. ']' → logprob: -5.07454776763916
    7. '][' → logprob: -5.44954776763916
    8. ':' → logprob: -5.57454776763916
    9. '```' → logprob: -5.69954776763916
    10. '[
' → logprob: -5.94954776763916

Token 857: ' text' (ID: 2201)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8406047821044922
    2. ' range' → logprob: -1.2156047821044922
    3. 'text' → logprob: -1.4656047821044922
    4. ' text' → logprob: -3.215604782104492
    5. '   ' → logprob: -7.590604782104492
    6. '1' → logprob: -8.090604782104492
    7. '```' → logprob: -10.340604782104492
    8. ' ' → logprob: -10.965604782104492
    9. ' the' → logprob: -11.465604782104492
    10. '`' → logprob: -11.465604782104492

Token 858: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17183764278888702
    2. ',' → logprob: -2.421837568283081
    3. '       ' → logprob: -3.796837568283081
    4. '[
' → logprob: -4.54683780670166
    5. ':' → logprob: -4.67183780670166
    6. '   ' → logprob: -4.92183780670166
    7. '][' → logprob: -4.92183780670166
    8. '```' → logprob: -5.67183780670166
    9. '           ' → logprob: -6.17183780670166
    10. '[i' → logprob: -6.29683780670166

Token 859: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14223401248455048
    2. '   ' → logprob: -2.6422340869903564
    3. '           ' → logprob: -3.5172340869903564
    4. '\t' → logprob: -5.142233848571777
    5. ' ' → logprob: -5.267233848571777
    6. ',' → logprob: -5.392233848571777
    7. '[' → logprob: -5.892233848571777
    8. ' for' → logprob: -6.142233848571777
    9. '    ' → logprob: -6.642233848571777
    10. '               ' → logprob: -6.767233848571777

Token 860: ' mask' (ID: 10910)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4113043546676636
    2. 'for' → logprob: -1.1613043546676636
    3. ' each' → logprob: -4.911304473876953
    4. '   ' → logprob: -5.286304473876953
    5. ' ' → logprob: -5.536304473876953
    6. '       ' → logprob: -6.161304473876953
    7. 'each' → logprob: -6.786304473876953
    8. '[' → logprob: -7.286304473876953
    9. '           ' → logprob: -7.786304473876953
    10. ' in' → logprob: -7.911304473876953

Token 861: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.068224310874939
    2. '[' → logprob: -1.193224310874939
    3. ':' → logprob: -2.5682244300842285
    4. '][' → logprob: -2.6932244300842285
    5. '       ' → logprob: -2.8182244300842285
    6. '```' → logprob: -3.0682244300842285
    7. '           ' → logprob: -3.1932244300842285
    8. '   ' → logprob: -4.4432244300842285
    9. ']' → logprob: -4.5682244300842285
    10. ':
' → logprob: -4.8182244300842285

Token 862: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7042641043663025
    2. '               ' → logprob: -1.8292641639709473
    3. '                       ' → logprob: -2.7042641639709473
    4. '   ' → logprob: -3.0792641639709473
    5. '                   ' → logprob: -3.0792641639709473
    6. '       ' → logprob: -3.2042641639709473
    7. ' ' → logprob: -3.3292641639709473
    8. '                               ' → logprob: -3.4542641639709473
    9. '                           ' → logprob: -3.9542641639709473
    10. ' for' → logprob: -4.329264163970947

Token 863: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.07965283840894699
    2. 'dp' → logprob: -2.579652786254883
    3. ' text' → logprob: -8.079652786254883
    4. ' ' → logprob: -8.454652786254883
    5. 'text' → logprob: -10.079652786254883
    6. ' self' → logprob: -10.329652786254883
    7. '(dp' → logprob: -10.329652786254883
    8. ' not' → logprob: -10.454652786254883
    9. ' ' → logprob: -10.704652786254883
    10. ' (' → logprob: -11.454652786254883

Token 864: '[pos' (ID: 48272)
  Prédit: '[position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[position' → logprob: -0.12253378331661224
    2. '[' → logprob: -2.2475337982177734
    3. '[pos' → logprob: -4.747533798217773
    4. ' [' → logprob: -8.247533798217773
    5. '[i' → logprob: -8.372533798217773
    6. '```' → logprob: -8.622533798217773
    7. '   ' → logprob: -8.997533798217773
    8. '       ' → logprob: -10.122533798217773
    9. '           ' → logprob: -10.497533798217773
    10. '\[' → logprob: -10.872533798217773

Token 865: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.40977612137794495
    2. ']' → logprob: -1.1597760915756226
    3. '       ' → logprob: -5.034776210784912
    4. '[' → logprob: -5.409776210784912
    5. '   ' → logprob: -5.784776210784912
    6. '```' → logprob: -6.659776210784912
    7. '[pos' → logprob: -6.784776210784912
    8. '           ' → logprob: -6.909776210784912
    9. '+' → logprob: -7.284776210784912
    10. ' ][' → logprob: -7.534776210784912

Token 866: 'mask' (ID: 22527)
  Prédit: ' ]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ]' → logprob: -0.6484228372573853
    2. ']' → logprob: -0.8984228372573853
    3. ' ][' → logprob: -3.8984227180480957
    4. '[' → logprob: -4.398422718048096
    5. '][' → logprob: -4.648422718048096
    6. ' ' → logprob: -4.773422718048096
    7. 'mask' → logprob: -5.273422718048096
    8. '
' → logprob: -5.398422718048096
    9. '[pos' → logprob: -6.023422718048096
    10. 'pos' → logprob: -6.148422718048096

Token 867: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5224153995513916
    2. ']:
' → logprob: -1.1474153995513916
    3. '][' → logprob: -3.1474153995513916
    4. ']:' → logprob: -3.8974153995513916
    5. '+' → logprob: -5.2724151611328125
    6. '       ' → logprob: -5.3974151611328125
    7. '           ' → logprob: -5.7724151611328125
    8. ']==' → logprob: -5.8974151611328125
    9. '               ' → logprob: -6.0224151611328125
    10. '                   ' → logprob: -6.7724151611328125

Token 868: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0887129306793213
    2. '           ' → logprob: -1.9637129306793213
    3. '               ' → logprob: -2.2137129306793213
    4. '[next' → logprob: -2.3387129306793213
    5. '[pos' → logprob: -2.9637129306793213
    6. '```' → logprob: -3.3387129306793213
    7. ' is' → logprob: -3.4637129306793213
    8. ' and' → logprob: -3.5887129306793213
    9. '][' → logprob: -3.5887129306793213
    10. ':
' → logprob: -3.8387129306793213

Token 869: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16042529046535492
    2. 'True' → logprob: -1.9104253053665161
    3. ' ' → logprob: -8.660425186157227
    4. '1' → logprob: -11.160425186157227
    5. '    ' → logprob: -12.785425186157227
    6. '   ' → logprob: -12.910425186157227
    7. ' ' → logprob: -13.035425186157227
    8. ' 
' → logprob: -13.035425186157227
    9. 'T' → logprob: -14.160425186157227
    10. '[' → logprob: -14.785425186157227

Token 870: ',
' (ID: 412)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9424057006835938
    2. ':' → logprob: -1.3174057006835938
    3. ',' → logprob: -1.4424057006835938
    4. ' and' → logprob: -2.9424057006835938
    5. '           ' → logprob: -4.067405700683594
    6. '```' → logprob: -4.817405700683594
    7. ':
' → logprob: -5.192405700683594
    8. '   ' → logprob: -5.567405700683594
    9. '       ' → logprob: -5.942405700683594
    10. '                   ' → logprob: -6.192405700683594

Token 871: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17678587138652802
    2. ',' → logprob: -2.301785945892334
    3. ':' → logprob: -3.676785945892334
    4. '       ' → logprob: -4.051785945892334
    5. '               ' → logprob: -4.551785945892334
    6. '                       ' → logprob: -6.301785945892334
    7. '                   ' → logprob: -6.301785945892334
    8. ' and' → logprob: -7.051785945892334
    9. ':
' → logprob: -7.176785945892334
    10. '                           ' → logprob: -7.301785945892334

Token 872: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05786186084151268
    2. '               ' → logprob: -3.807861804962158
    3. ',' → logprob: -4.557861804962158
    4. ':' → logprob: -4.682861804962158
    5. ' then' → logprob: -5.432861804962158
    6. ':
' → logprob: -5.557861804962158
    7. '                   ' → logprob: -6.182861804962158
    8. '                       ' → logprob: -6.807861804962158
    9. '       ' → logprob: -7.057861804962158
    10. '   ' → logprob: -7.682861804962158

Token 873: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2262324094772339
    2. '           ' → logprob: -1.8512324094772339
    3. ' then' → logprob: -1.8512324094772339
    4. '                   ' → logprob: -2.2262325286865234
    5. ',' → logprob: -2.8512325286865234
    6. '                           ' → logprob: -3.4762325286865234
    7. '                               ' → logprob: -3.6012325286865234
    8. '[' → logprob: -3.7262325286865234
    9. '                       ' → logprob: -3.8512325286865234
    10. '   ' → logprob: -3.8512325286865234

Token 874: ' from' (ID: 591)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.9967333078384399
    2. ' there' → logprob: -1.62173330783844
    3. ' text' → logprob: -2.4967331886291504
    4. ' the' → logprob: -2.8717331886291504
    5. ' next' → logprob: -2.8717331886291504
    6. 'we' → logprob: -2.8717331886291504
    7. 'text' → logprob: -2.9967331886291504
    8. ' for' → logprob: -3.3717331886291504
    9. 'there' → logprob: -3.7467331886291504
    10. 'the' → logprob: -4.49673318862915

Token 875: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3940874934196472
    2. ' pos' → logprob: -1.144087553024292
    3. '[pos' → logprob: -6.519087314605713
    4. ' position' → logprob: -6.894087314605713
    5. 'position' → logprob: -6.894087314605713
    6. ' text' → logprob: -7.144087314605713
    7. 'text' → logprob: -7.519087314605713
    8. ' the' → logprob: -7.769087314605713
    9. '(pos' → logprob: -8.269087791442871
    10. ' here' → logprob: -8.394087791442871

Token 876: ' we' (ID: 581)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8596978783607483
    2. '][' → logprob: -1.1096978187561035
    3. '```' → logprob: -2.3596978187561035
    4. ']' → logprob: -2.6096978187561035
    5. '           ' → logprob: -4.2346978187561035
    6. ' +' → logprob: -4.3596978187561035
    7. '[' → logprob: -4.7346978187561035
    8. '       ' → logprob: -5.1096978187561035
    9. ' ][' → logprob: -5.3596978187561035
    10. '``' → logprob: -5.4846978187561035

Token 877: ' find' (ID: 1646)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19964711368083954
    2. ']' → logprob: -2.6996471881866455
    3. '][' → logprob: -3.0746471881866455
    4. '[' → logprob: -3.5746471881866455
    5. ' can' → logprob: -4.699646949768066
    6. ' +' → logprob: -5.074646949768066
    7. '       ' → logprob: -5.824646949768066
    8. ' have' → logprob: -5.949646949768066
    9. '           ' → logprob: -6.074646949768066
    10. ' [' → logprob: -6.074646949768066

Token 878: ' an' (ID: 448)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7576426267623901
    2. ' a' → logprob: -1.2576426267623901
    3. 'a' → logprob: -2.8826427459716797
    4. ' ' → logprob: -2.8826427459716797
    5. '[' → logprob: -3.1326427459716797
    6. ' an' → logprob: -3.8826427459716797
    7. '_' → logprob: -4.25764274597168
    8. ' (' → logprob: -4.50764274597168
    9. '(' → logprob: -5.00764274597168
    10. '```' → logprob: -5.13264274597168

Token 879: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.24893563985824585
    2. 'element' → logprob: -2.6239356994628906
    3. ' occurrence' → logprob: -2.7489356994628906
    4. '_' → logprob: -3.6239356994628906
    5. ' ' → logprob: -4.123935699462891
    6. 'occ' → logprob: -5.248935699462891
    7. '```' → logprob: -5.373935699462891
    8. '_occ' → logprob: -5.748935699462891
    9. ' extension' → logprob: -5.873935699462891
    10. ' (' → logprob: -5.998935699462891

Token 880: ' string' (ID: 1621)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1795816570520401
    2. '[' → logprob: -2.179581642150879
    3. ' _' → logprob: -4.554581642150879
    4. '```' → logprob: -4.804581642150879
    5. ']' → logprob: -5.054581642150879
    6. ' ' → logprob: -5.429581642150879
    7. '[(' → logprob: -5.554581642150879
    8. ')' → logprob: -6.054581642150879
    9. ' (' → logprob: -6.304581642150879
    10. '       ' → logprob: -6.554581642150879

Token 881: ' ej' (ID: 11665)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6485410928726196
    2. '_' → logprob: -1.6485410928726196
    3. ''' → logprob: -2.39854097366333
    4. '```' → logprob: -2.39854097366333
    5. '`' → logprob: -3.27354097366333
    6. '       ' → logprob: -4.77354097366333
    7. '``' → logprob: -4.77354097366333
    8. '           ' → logprob: -4.77354097366333
    9. '"' → logprob: -5.02354097366333
    10. '[
' → logprob: -5.39854097366333

Token 882: ' matching' (ID: 20238)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6501641869544983
    2. '[' → logprob: -1.4001641273498535
    3. '```' → logprob: -2.5251641273498535
    4. ']' → logprob: -2.9001641273498535
    5. 's' → logprob: -4.1501641273498535
    6. '       ' → logprob: -4.2751641273498535
    7. '   ' → logprob: -5.0251641273498535
    8. ''' → logprob: -5.0251641273498535
    9. ')' → logprob: -5.1501641273498535
    10. '           ' → logprob: -5.1501641273498535

Token 883: ' text' (ID: 2201)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.022376298904419
    2. ' at' → logprob: -1.772376298904419
    3. '[' → logprob: -2.147376298904419
    4. '[pos' → logprob: -2.272376298904419
    5. '_' → logprob: -3.397376298904419
    6. '`' → logprob: -3.397376298904419
    7. ''' → logprob: -3.772376298904419
    8. '_at' → logprob: -3.897376298904419
    9. '``' → logprob: -3.897376298904419
    10. ']' → logprob: -4.14737606048584

Token 884: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.41313499212265015
    2. '[' → logprob: -1.288135051727295
    3. '_' → logprob: -3.913135051727295
    4. '```' → logprob: -4.538135051727295
    5. '[
' → logprob: -4.913135051727295
    6. ']' → logprob: -5.413135051727295
    7. '[_' → logprob: -5.538135051727295
    8. '           ' → logprob: -5.913135051727295
    9. '][' → logprob: -6.038135051727295
    10. '       ' → logprob: -6.413135051727295

Token 885: ':' (ID: 25)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28050389885902405
    2. '+' → logprob: -1.9055038690567017
    3. '[' → logprob: -2.780503988265991
    4. '[pos' → logprob: -4.155503749847412
    5. '[
' → logprob: -5.405503749847412
    6. ' +' → logprob: -6.155503749847412
    7. '+]' → logprob: -6.155503749847412
    8. '][' → logprob: -6.655503749847412
    9. '']' → logprob: -6.655503749847412
    10. ' ]' → logprob: -6.905503749847412

Token 886: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.008169608190655708
    2. '+' → logprob: -5.633169651031494
    3. '[pos' → logprob: -6.258169651031494
    4. ' pos' → logprob: -6.383169651031494
    5. ']' → logprob: -8.258169174194336
    6. ',pos' → logprob: -9.008169174194336
    7. '```' → logprob: -9.133169174194336
    8. '(pos' → logprob: -9.133169174194336
    9. '   ' → logprob: -9.883169174194336
    10. '[' → logprob: -10.133169174194336

Token 887: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09165458381175995
    2. '[pos' → logprob: -2.9666545391082764
    3. ']' → logprob: -3.7166545391082764
    4. '```' → logprob: -5.4666547775268555
    5. '[' → logprob: -5.7166547775268555
    6. ' +' → logprob: -5.9666547775268555
    7. ':' → logprob: -7.3416547775268555
    8. '   ' → logprob: -7.7166547775268555
    9. '``' → logprob: -9.341654777526855
    10. '+
' → logprob: -9.966654777526855

Token 888: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01508416049182415
    2. 'length' → logprob: -4.765084266662598
    3. ']' → logprob: -5.765084266662598
    4. ' len' → logprob: -6.890084266662598
    5. '```' → logprob: -7.265084266662598
    6. '(len' → logprob: -8.265084266662598
    7. '_len' → logprob: -8.640084266662598
    8. 'l' → logprob: -8.890084266662598
    9. '_length' → logprob: -9.390084266662598
    10. ' length' → logprob: -9.390084266662598

Token 889: '(e' (ID: 3454)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5867323875427246
    2. '[' → logprob: -1.0867323875427246
    3. '+' → logprob: -3.9617323875427246
    4. 'e' → logprob: -4.086732387542725
    5. '[j' → logprob: -4.086732387542725
    6. '[e' → logprob: -4.586732387542725
    7. 'ej' → logprob: -5.336732387542725
    8. 's' → logprob: -5.336732387542725
    9. '```' → logprob: -5.586732387542725
    10. '           ' → logprob: -5.836732387542725

Token 890: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.14642947912216187
    2. 'lement' → logprob: -2.0214295387268066
    3. 'l' → logprob: -7.271429538726807
    4. ']' → logprob: -7.396429538726807
    5. 'lements' → logprob: -7.396429538726807
    6. 'lem' → logprob: -7.396429538726807
    7. '[j' → logprob: -8.271429061889648
    8. 'lems' → logprob: -8.646429061889648
    9. '_j' → logprob: -8.771429061889648
    10. 'le' → logprob: -9.021429061889648

Token 891: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.46897172927856445
    2. ')],' → logprob: -1.7189717292785645
    3. ']]' → logprob: -2.4689717292785645
    4. ']' → logprob: -3.2189717292785645
    5. ']],' → logprob: -3.3439717292785645
    6. ']],
' → logprob: -4.9689717292785645
    7. ')' → logprob: -4.9689717292785645
    8. ')],
' → logprob: -5.0939717292785645
    9. ']]:
' → logprob: -5.5939717292785645
    10. ']+' → logprob: -5.9689717292785645

Token 892: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.043100357055664
    2. '           ' → logprob: -1.543100357055664
    3. ']' → logprob: -2.418100357055664
    4. '```' → logprob: -2.543100357055664
    5. '                   ' → logprob: -2.668100357055664
    6. '               ' → logprob: -2.918100357055664
    7. '][' → logprob: -3.293100357055664
    8. '       ' → logprob: -3.543100357055664
    9. '[
' → logprob: -4.168100357055664
    10. ':' → logprob: -4.543100357055664

Token 893: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9600223898887634
    2. '[' → logprob: -1.2100224494934082
    3. ':' → logprob: -2.710022449493408
    4. '       ' → logprob: -2.960022449493408
    5. ' ' → logprob: -3.335022449493408
    6. '           ' → logprob: -3.585022449493408
    7. '<|end|>' → logprob: -3.585022449493408
    8. '.' → logprob: -4.460022449493408
    9. '   ' → logprob: -4.585022449493408
    10. '\' → logprob: -4.585022449493408

Token 894: ' then' (ID: 1815)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3586767911911011
    2. ',' → logprob: -2.7336769104003906
    3. '_' → logprob: -3.6086769104003906
    4. '       ' → logprob: -3.7336769104003906
    5. ''' → logprob: -4.233676910400391
    6. '#' → logprob: -4.358676910400391
    7. '                               ' → logprob: -4.483676910400391
    8. '           ' → logprob: -4.608676910400391
    9. '[
' → logprob: -4.608676910400391
    10. '\' → logprob: -4.733676910400391

Token 895: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3470836579799652
    2. '               ' → logprob: -2.347083568572998
    3. '           ' → logprob: -3.347083568572998
    4. '                   ' → logprob: -3.472083568572998
    5. ' ' → logprob: -3.847083568572998
    6. '                       ' → logprob: -4.222083568572998
    7. 'dp' → logprob: -4.347083568572998
    8. '                               ' → logprob: -4.722083568572998
    9. ' we' → logprob: -4.847083568572998
    10. '                           ' → logprob: -4.847083568572998

Token 896: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.02416297420859337
    2. '[' → logprob: -3.774163007736206
    3. '\[' → logprob: -7.774162769317627
    4. ' [' → logprob: -8.899163246154785
    5. '   ' → logprob: -9.524163246154785
    6. '
' → logprob: -9.649163246154785
    7. '```' → logprob: -9.774163246154785
    8. '[position' → logprob: -10.524163246154785
    9. '][' → logprob: -10.524163246154785
    10. '[next' → logprob: -10.899163246154785

Token 897: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.045311011373996735
    2. '[' → logprob: -3.7953109741210938
    3. '+' → logprob: -5.045310974121094
    4. ']' → logprob: -5.545310974121094
    5. '```' → logprob: -5.545310974121094
    6. '       ' → logprob: -6.045310974121094
    7. '
' → logprob: -6.920310974121094
    8. '[pos' → logprob: -7.045310974121094
    9. '           ' → logprob: -7.295310974121094
    10. '   ' → logprob: -7.420310974121094

Token 898: 'len' (ID: 3303)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28666725754737854
    2. '][' → logprob: -1.7866672277450562
    3. 'len' → logprob: -3.1616673469543457
    4. '+' → logprob: -4.536667346954346
    5. ']' → logprob: -5.161667346954346
    6. '[' → logprob: -5.911667346954346
    7. '   ' → logprob: -5.911667346954346
    8. ' ][' → logprob: -5.911667346954346
    9. '(len' → logprob: -6.036667346954346
    10. ' ' → logprob: -6.286667346954346

Token 899: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.6937645077705383
    2. '_' → logprob: -1.5687644481658936
    3. '[' → logprob: -2.1937644481658936
    4. ']' → logprob: -2.9437644481658936
    5. '[e' → logprob: -3.4437644481658936
    6. '][' → logprob: -3.8187644481658936
    7. '```' → logprob: -3.9437644481658936
    8. '_e' → logprob: -4.193764686584473
    9. '(' → logprob: -4.943764686584473
    10. '_[' → logprob: -5.443764686584473

Token 900: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2044793963432312
    2. ']' → logprob: -2.579479455947876
    3. '][' → logprob: -2.954479455947876
    4. '[' → logprob: -3.954479455947876
    5. '[j' → logprob: -3.954479455947876
    6. '])' → logprob: -5.579479217529297
    7. '_' → logprob: -6.079479217529297
    8. ')' → logprob: -6.204479217529297
    9. '_j' → logprob: -6.829479217529297
    10. '   ' → logprob: -7.079479217529297

Token 901: ')][' (ID: 112886)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09043792635202408
    2. ')][' → logprob: -2.465437889099121
    3. ']][' → logprob: -7.465437889099121
    4. ']' → logprob: -7.840437889099121
    5. '       ' → logprob: -8.965437889099121
    6. '[' → logprob: -8.965437889099121
    7. '   ' → logprob: -9.465437889099121
    8. '           ' → logprob: -10.090437889099121
    9. ')]' → logprob: -10.965437889099121
    10. ' ][' → logprob: -11.090437889099121

Token 902: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.5354530215263367
    2. '[' → logprob: -1.5354530811309814
    3. '][' → logprob: -1.6604530811309814
    4. '(mask' → logprob: -5.660452842712402
    5. ' ][' → logprob: -6.035452842712402
    6. ']' → logprob: -8.035452842712402
    7. '{' → logprob: -8.035452842712402
    8. ' [' → logprob: -8.160452842712402
    9. '```' → logprob: -8.160452842712402
    10. '|' → logprob: -8.160452842712402

Token 903: '|(' (ID: 153684)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.3346236050128937
    2. ' |' → logprob: -1.3346235752105713
    3. '][' → logprob: -4.70962381362915
    4. ']' → logprob: -4.83462381362915
    5. ' |=' → logprob: -6.20962381362915
    6. ']|' → logprob: -6.58462381362915
    7. '[' → logprob: -8.084623336791992
    8. '|(' → logprob: -8.459623336791992
    9. '```' → logprob: -9.959623336791992
    10. '|
' → logprob: -10.459623336791992

Token 904: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7994282795116305e-05
    2. '(' → logprob: -10.00004768371582
    3. ' ' → logprob: -13.25004768371582
    4. '   ' → logprob: -15.25004768371582
    5. '           ' → logprob: -15.87504768371582
    6. ' (' → logprob: -16.37504768371582
    7. '  ' → logprob: -16.87504768371582
    8. '```' → logprob: -17.12504768371582
    9. ' ' → logprob: -17.37504768371582
    10. '{' → logprob: -17.37504768371582

Token 905: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0620475672185421
    2. ' <<' → logprob: -2.8120474815368652
    3. '<<(' → logprob: -10.562047958374023
    4. '|' → logprob: -10.812047958374023
    5. ']<<' → logprob: -11.437047958374023
    6. ' |' → logprob: -11.937047958374023
    7. '1' → logprob: -12.187047958374023
    8. ')<<' → logprob: -13.062047958374023
    9. '()<<' → logprob: -13.312047958374023
    10. '<<<' → logprob: -13.562047958374023

Token 906: 'j' (ID: 73)
  Prédit: 'ej'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ej' → logprob: -0.06782309710979462
    2. 'j' → logprob: -2.8178231716156006
    3. 'e' → logprob: -5.1928229331970215
    4. '   ' → logprob: -9.69282341003418
    5. 'ei' → logprob: -9.69282341003418
    6. ' ej' → logprob: -10.19282341003418
    7. 'element' → logprob: -10.44282341003418
    8. 'elem' → logprob: -10.56782341003418
    9. '```' → logprob: -11.56782341003418
    10. '       ' → logprob: -12.06782341003418

Token 907: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.341087570646778e-05
    2. ')' → logprob: -9.875093460083008
    3. '[j' → logprob: -11.500093460083008
    4. ']' → logprob: -11.625093460083008
    5. ' )' → logprob: -12.250093460083008
    6. '|' → logprob: -12.500093460083008
    7. ')]
' → logprob: -13.000093460083008
    8. '')]' → logprob: -13.000093460083008
    9. 'j' → logprob: -13.625093460083008
    10. '```' → logprob: -13.750093460083008

Token 908: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09987499564886093
    2. ']' → logprob: -2.599874973297119
    3. ' =' → logprob: -4.349874973297119
    4. ']=' → logprob: -4.974874973297119
    5. '=
' → logprob: -8.224875450134277
    6. '[' → logprob: -8.349875450134277
    7. '           ' → logprob: -9.474875450134277
    8. '```' → logprob: -9.474875450134277
    9. '               ' → logprob: -9.599875450134277
    10. '                   ' → logprob: -9.599875450134277

Token 909: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007099286303855479
    2. ' True' → logprob: -7.2507100105285645
    3. '(True' → logprob: -17.750709533691406
    4. '=True' → logprob: -18.750709533691406
    5. '                   ' → logprob: -19.125709533691406
    6. '               ' → logprob: -19.500709533691406
    7. '           ' → logprob: -20.250709533691406
    8. '                       ' → logprob: -20.875709533691406
    9. 'true' → logprob: -21.125709533691406
    10. '   ' → logprob: -21.375709533691406

Token 910: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5467127561569214
    2. '
' → logprob: -0.9217127561569214
    3. '        
' → logprob: -4.546712875366211
    4. '\' → logprob: -6.046712875366211
    5. '\n' → logprob: -6.296712875366211
    6. '   ' → logprob: -6.296712875366211
    7. '           ' → logprob: -6.546712875366211
    8. '    
' → logprob: -6.796712875366211
    9. '
' → logprob: -7.546712875366211
    10. '               ' → logprob: -7.921712875366211

Token 911: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6485443711280823
    2. '
' → logprob: -0.7735443711280823
    3. '<|end|>' → logprob: -4.8985443115234375
    4. '   ' → logprob: -6.1485443115234375
    5. '        
' → logprob: -6.6485443115234375
    6. '\' → logprob: -6.8985443115234375
    7. '```' → logprob: -7.1485443115234375
    8. ' 
' → logprob: -7.6485443115234375
    9. '           ' → logprob: -7.7735443115234375
    10. '    
' → logprob: -7.8985443115234375

Token 912: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46657848358154297
    2. '
' → logprob: -1.091578483581543
    3. '<|end|>' → logprob: -3.466578483581543
    4. '   ' → logprob: -6.716578483581543
    5. '        
' → logprob: -6.841578483581543
    6. '```' → logprob: -7.466578483581543
    7. '<|end|>' → logprob: -7.591578483581543
    8. ')' → logprob: -7.591578483581543
    9. '\' → logprob: -8.216578483581543
    10. ',' → logprob: -8.216578483581543

Token 913: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5641807913780212
    2. '
' → logprob: -0.9391807913780212
    3. '<|end|>' → logprob: -3.689180850982666
    4. '        
' → logprob: -4.564180850982666
    5. '   ' → logprob: -6.689180850982666
    6. '<|end|>' → logprob: -7.064180850982666
    7. '    
' → logprob: -7.689180850982666
    8. '```' → logprob: -7.814180850982666
    9. '           ' → logprob: -7.939180850982666
    10. '        ' → logprob: -8.064180374145508

Token 914: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6358086466789246
    2. '
' → logprob: -0.7608086466789246
    3. '        
' → logprob: -6.26080846786499
    4. '   ' → logprob: -7.13580846786499
    5. 'from' → logprob: -9.135808944702148
    6. 'import' → logprob: -9.635808944702148
    7. '```' → logprob: -9.760808944702148
    8. '    
' → logprob: -10.260808944702148
    9. '
' → logprob: -10.510808944702148
    10. '            
' → logprob: -10.635808944702148

Token 915: ' Finally' (ID: 23568)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7896878719329834
    2. '       ' → logprob: -1.1646878719329834
    3. 'dp' → logprob: -1.6646878719329834
    4. 'ac' → logprob: -4.1646881103515625
    5. '
' → logprob: -4.6646881103515625
    6. 'tr' → logprob: -5.6646881103515625
    7. 'autom' → logprob: -5.6646881103515625
    8. 'visited' → logprob: -5.9146881103515625
    9. 'pos' → logprob: -6.1646881103515625
    10. 'from' → logprob: -6.2896881103515625

Token 916: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6354392766952515
    2. '
' → logprob: -0.7604392766952515
    3. '   ' → logprob: -6.635439395904541
    4. '        
' → logprob: -7.635439395904541
    5. ':
' → logprob: -7.885439395904541
    6. ',' → logprob: -8.510438919067383
    7. ' for' → logprob: -9.760438919067383
    8. '```' → logprob: -10.135438919067383
    9. '           ' → logprob: -10.260438919067383
    10. '[' → logprob: -10.510438919067383

Token 917: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4951092004776001
    2. 'result' → logprob: -2.1201090812683105
    3. 'for' → logprob: -2.2451090812683105
    4. '#' → logprob: -3.3701090812683105
    5. ' for' → logprob: -3.3701090812683105
    6. 'return' → logprob: -4.1201090812683105
    7. 'full' → logprob: -4.3701090812683105
    8. 'dp' → logprob: -4.4951090812683105
    9. ' result' → logprob: -4.6201090812683105
    10. ' full' → logprob: -4.7451090812683105

Token 918: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6415929794311523
    2. '       ' → logprob: -1.7665929794311523
    3. '_' → logprob: -1.8915929794311523
    4. ' =' → logprob: -3.7665929794311523
    5. ']' → logprob: -4.641592979431152
    6. '
' → logprob: -4.766592979431152
    7. ')' → logprob: -4.766592979431152
    8. '[' → logprob: -4.766592979431152
    9. '_
' → logprob: -4.766592979431152
    10. '```' → logprob: -4.766592979431152

Token 919: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.12334256619215012
    2. ' number' → logprob: -2.248342514038086
    3. 'total' → logprob: -5.373342514038086
    4. 'positions' → logprob: -5.623342514038086
    5. ' total' → logprob: -6.623342514038086
    6. 'result' → logprob: -8.373342514038086
    7. '   ' → logprob: -8.998342514038086
    8. ' positions' → logprob: -9.123342514038086
    9. '
' → logprob: -9.248342514038086
    10. ' occurrences' → logprob: -9.373342514038086

Token 920: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.315813422203064
    2. '_' → logprob: -1.565813422203064
    3. '[
' → logprob: -1.940813422203064
    4. '_
' → logprob: -2.3158135414123535
    5. '
' → logprob: -2.8158135414123535
    6. '_of' → logprob: -2.8158135414123535
    7. '\' → logprob: -3.8158135414123535
    8. '       ' → logprob: -4.0658135414123535
    9. 'Of' → logprob: -4.1908135414123535
    10. ' of' → logprob: -4.1908135414123535

Token 921: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.019171161577105522
    2. ' positions' → logprob: -4.144171237945557
    3. 'matches' → logprob: -7.519171237945557
    4. 'dp' → logprob: -8.144170761108398
    5. 'valid' → logprob: -8.269170761108398
    6. 'pos' → logprob: -8.394170761108398
    7. 'True' → logprob: -8.519170761108398
    8. 'occ' → logprob: -8.519170761108398
    9. ' True' → logprob: -8.769170761108398
    10. 'substring' → logprob: -8.769170761108398

Token 922: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6235077977180481
    2. '[' → logprob: -1.8735077381134033
    3. '```' → logprob: -2.2485077381134033
    4. '+' → logprob: -3.6235077381134033
    5. '   ' → logprob: -3.7485077381134033
    6. ':' → logprob: -3.7485077381134033
    7. ')' → logprob: -4.123507976531982
    8. '[
' → logprob: -4.123507976531982
    9. '       ' → logprob: -4.248507976531982
    10. '`' → logprob: -4.373507976531982

Token 923: ' where' (ID: 1919)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8520663380622864
    2. '_' → logprob: -1.4770662784576416
    3. '```' → logprob: -2.4770662784576416
    4. '[' → logprob: -2.6020662784576416
    5. '`' → logprob: -3.2270662784576416
    6. ']' → logprob: -3.2270662784576416
    7. '=' → logprob: -4.227066516876221
    8. 's' → logprob: -4.727066516876221
    9. '[i' → logprob: -4.727066516876221
    10. ' +' → logprob: -5.102066516876221

Token 924: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013376681134104729
    2. ' dp' → logprob: -4.388376712799072
    3. '```' → logprob: -7.388376712799072
    4. '`' → logprob: -8.513376235961914
    5. 'i' → logprob: -11.513376235961914
    6. '``' → logprob: -11.638376235961914
    7. 'the' → logprob: -11.763376235961914
    8. '   ' → logprob: -12.263376235961914
    9. ' `' → logprob: -12.513376235961914
    10. 'all' → logprob: -13.138376235961914

Token 925: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009488902054727077
    2. '[len' → logprob: -4.884489059448242
    3. '[' → logprob: -7.009489059448242
    4. '[pos' → logprob: -7.384489059448242
    5. '```' → logprob: -8.884489059448242
    6. '   ' → logprob: -9.509489059448242
    7. ' [' → logprob: -10.759489059448242
    8. '[n' → logprob: -10.759489059448242
    9. '[size' → logprob: -10.884489059448242
    10. 'i' → logprob: -10.884489059448242

Token 926: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016991980373859406
    2. '[' → logprob: -4.891992092132568
    3. ']' → logprob: -5.516992092132568
    4. '[n' → logprob: -7.141992092132568
    5. '   ' → logprob: -7.266992092132568
    6. '```' → logprob: -7.266992092132568
    7. '==' → logprob: -7.391992092132568
    8. '
' → logprob: -8.01699161529541
    9. '=' → logprob: -8.26699161529541
    10. '[len' → logprob: -8.39199161529541

Token 927: 'full' (ID: 15393)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8916966319084167
    2. '1' → logprob: -1.2666966915130615
    3. '][' → logprob: -1.6416966915130615
    4. 'n' → logprob: -2.7666966915130615
    5. '(n' → logprob: -4.016696453094482
    6. '[' → logprob: -5.141696453094482
    7. ']' → logprob: -5.141696453094482
    8. '   ' → logprob: -5.641696453094482
    9. ' (' → logprob: -6.141696453094482
    10. '```' → logprob: -6.141696453094482

Token 928: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.24541975557804108
    2. ']' → logprob: -2.49541974067688
    3. '_' → logprob: -2.62041974067688
    4. ']_' → logprob: -4.120419979095459
    5. 'mask' → logprob: -4.745419979095459
    6. '1' → logprob: -5.245419979095459
    7. '][' → logprob: -5.245419979095459
    8. '"]' → logprob: -5.745419979095459
    9. ''_' → logprob: -5.870419979095459
    10. '']' → logprob: -5.995419979095459

Token 929: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28914159536361694
    2. '][' → logprob: -1.7891416549682617
    3. '```' → logprob: -3.2891416549682617
    4. '[' → logprob: -3.5391416549682617
    5. '']' → logprob: -5.664141654968262
    6. '`]' → logprob: -5.914141654968262
    7. '[
' → logprob: -6.039141654968262
    8. '[i' → logprob: -6.289141654968262
    9. '`' → logprob: -6.664141654968262
    10. '``' → logprob: -6.789141654968262

Token 930: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4879727363586426
    2. '```' → logprob: -1.6129727363586426
    3. ']' → logprob: -2.6129727363586426
    4. '[i' → logprob: -3.6129727363586426
    5. '[
' → logprob: -3.6129727363586426
    6. '`' → logprob: -4.737972736358643
    7. '``' → logprob: -4.737972736358643
    8. '   ' → logprob: -5.112972736358643
    9. '\[' → logprob: -5.112972736358643
    10. '][' → logprob: -5.237972736358643

Token 931: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005234713666141033
    2. ' True' → logprob: -5.255234718322754
    3. '1' → logprob: -14.880234718322754
    4. '   ' → logprob: -15.380234718322754
    5. 'true' → logprob: -16.130233764648438
    6. '
' → logprob: -16.255233764648438
    7. '=True' → logprob: -16.755233764648438
    8. '```' → logprob: -16.755233764648438
    9. '`' → logprob: -17.130233764648438
    10. '(True' → logprob: -17.630233764648438

Token 932: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1069287434220314
    2. '
' → logprob: -2.356928825378418
    3. '        
' → logprob: -6.356928825378418
    4. ':' → logprob: -6.731928825378418
    5. ':
' → logprob: -6.981928825378418
    6. '   ' → logprob: -6.981928825378418
    7. '           ' → logprob: -7.356928825378418
    8. '
' → logprob: -8.231928825378418
    9. '```' → logprob: -8.231928825378418
    10. '    
' → logprob: -9.356928825378418

Token 933: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4714440405368805
    2. '       ' → logprob: -1.096444010734558
    3. '   ' → logprob: -3.4714441299438477
    4. '```' → logprob: -5.846444129943848
    5. '    
' → logprob: -6.346444129943848
    6. '        
' → logprob: -6.346444129943848
    7. '`
' → logprob: -6.721444129943848
    8. '\' → logprob: -6.971444129943848
    9. '\n' → logprob: -7.971444129943848
    10. ':' → logprob: -8.221444129943848

Token 934: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10293474793434143
    2. '       ' → logprob: -2.4779348373413086
    3. '   ' → logprob: -5.727934837341309
    4. '\n' → logprob: -6.102934837341309
    5. '        
' → logprob: -6.227934837341309
    6. '    
' → logprob: -6.602934837341309
    7. '\' → logprob: -6.602934837341309
    8. '

' → logprob: -7.102934837341309
    9. '```' → logprob: -7.227934837341309
    10. '`
' → logprob: -7.352934837341309

Token 935: ' That' (ID: 4569)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10995098203420639
    2. '       ' → logprob: -2.3599510192871094
    3. '   ' → logprob: -4.859951019287109
    4. '\n' → logprob: -7.359951019287109
    5. '        
' → logprob: -7.734951019287109
    6. '    
' → logprob: -8.48495101928711
    7. '```' → logprob: -8.73495101928711
    8. '

' → logprob: -9.10995101928711
    9. '`
' → logprob: -9.35995101928711
    10. '\' → logprob: -9.98495101928711

Token 936: ' means' (ID: 4748)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2225513458251953
    2. '
' → logprob: -1.4725513458251953
    3. '[' → logprob: -1.7225513458251953
    4. ']' → logprob: -2.3475513458251953
    5. '=' → logprob: -2.9725513458251953
    6. '   ' → logprob: -3.4725513458251953
    7. '[i' → logprob: -3.7225513458251953
    8. ' =' → logprob: -3.9725513458251953
    9. '_' → logprob: -4.597551345825195
    10. ' is' → logprob: -4.597551345825195

Token 937: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6334513425827026
    2. 'i' → logprob: -1.6334513425827026
    3. ' we' → logprob: -2.258451461791992
    4. 'dp' → logprob: -3.008451461791992
    5. ' the' → logprob: -3.258451461791992
    6. ' dp' → logprob: -3.633451461791992
    7. ' at' → logprob: -4.258451461791992
    8. '```' → logprob: -4.258451461791992
    9. ' there' → logprob: -4.633451461791992
    10. '`' → logprob: -5.633451461791992

Token 938: ' concaten' (ID: 121942)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6110024452209473
    2. ' substring' → logprob: -1.9860024452209473
    3. 'll' → logprob: -2.8610024452209473
    4. '[' → logprob: -2.8610024452209473
    5. 'substring' → logprob: -2.9860024452209473
    6. '
' → logprob: -3.4860024452209473
    7. 'l' → logprob: -4.111002445220947
    8. 'b' → logprob: -4.361002445220947
    9. 'dp' → logprob: -4.736002445220947
    10. '`' → logprob: -4.861002445220947

Token 939: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.001485939254052937
    2. 'ated' → logprob: -7.376485824584961
    3. 'a' → logprob: -8.001485824584961
    4. '_' → logprob: -8.376485824584961
    5. 'ate' → logprob: -9.376485824584961
    6. 'e' → logprob: -9.876485824584961
    7. '       ' → logprob: -10.126485824584961
    8. '   ' → logprob: -10.626485824584961
    9. 'at' → logprob: -11.001485824584961
    10. '[' → logprob: -11.501485824584961

Token 940: ' matched' (ID: 31366)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8470925688743591
    2. '[' → logprob: -1.722092628479004
    3. '       ' → logprob: -2.472092628479004
    4. '_' → logprob: -2.972092628479004
    5. '[
' → logprob: -3.097092628479004
    6. ':' → logprob: -3.472092628479004
    7. '```' → logprob: -3.472092628479004
    8. '
' → logprob: -3.722092628479004
    9. '[(' → logprob: -3.972092628479004
    10. '(
' → logprob: -4.347092628479004

Token 941: ' ending' (ID: 22013)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46343234181404114
    2. '
' → logprob: -1.2134323120117188
    3. '   ' → logprob: -3.9634323120117188
    4. ':' → logprob: -4.088432312011719
    5. ':
' → logprob: -4.588432312011719
    6. '\n' → logprob: -4.838432312011719
    7. '        
' → logprob: -5.088432312011719
    8. '\' → logprob: -5.213432312011719
    9. '    
' → logprob: -6.338432312011719
    10. '[' → logprob: -6.588432312011719

Token 942: ' at' (ID: 540)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27682262659072876
    2. ' at' → logprob: -2.651822566986084
    3. '_at' → logprob: -2.901822566986084
    4. 'at' → logprob: -3.401822566986084
    5. '```' → logprob: -4.026822566986084
    6. '   ' → logprob: -4.151822566986084
    7. ' exactly' → logprob: -4.401822566986084
    8. '[' → logprob: -5.026822566986084
    9. '=' → logprob: -5.276822566986084
    10. '
' → logprob: -6.276822566986084

Token 943: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002509070560336113
    2. ' i' → logprob: -6.127509117126465
    3. '`' → logprob: -9.127509117126465
    4. 'position' → logprob: -9.252509117126465
    5. 'text' → logprob: -10.002509117126465
    6. '```' → logprob: -10.502509117126465
    7. ' position' → logprob: -10.752509117126465
    8. 'the' → logprob: -11.627509117126465
    9. ' the' → logprob: -12.252509117126465
    10. ' text' → logprob: -12.502509117126465

Token 944: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5563716292381287
    2. '+' → logprob: -1.3063716888427734
    3. ']' → logprob: -2.3063716888427734
    4. '[' → logprob: -4.056371688842773
    5. '```' → logprob: -4.681371688842773
    6. '_
' → logprob: -5.056371688842773
    7. '][' → logprob: -5.806371688842773
    8. '+
' → logprob: -5.931371688842773
    9. '   ' → logprob: -5.931371688842773
    10. ':' → logprob: -6.306371688842773

Token 945: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34126994013786316
    2. '
' → logprob: -2.3412699699401855
    3. ':' → logprob: -2.4662699699401855
    4. '   ' → logprob: -2.9662699699401855
    5. ':
' → logprob: -3.3412699699401855
    6. '\' → logprob: -5.4662699699401855
    7. '\n' → logprob: -5.9662699699401855
    8. '
' → logprob: -6.2162699699401855
    9. '        
' → logprob: -6.4662699699401855
    10. '[' → logprob: -6.4662699699401855

Token 946: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012701898231171072
    2. '```' → logprob: -9.375126838684082
    3. '``' → logprob: -11.125126838684082
    4. ']' → logprob: -11.625126838684082
    5. ' ' → logprob: -12.625126838684082
    6. '`' → logprob: -13.125126838684082
    7. '_' → logprob: -13.250126838684082
    8. '   ' → logprob: -13.500126838684082
    9. '"""
' → logprob: -13.500126838684082
    10. '-' → logprob: -13.625126838684082

Token 947: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39165955781936646
    2. '
' → logprob: -1.1416594982147217
    3. '   ' → logprob: -6.391659736633301
    4. '        
' → logprob: -6.891659736633301
    5. '           ' → logprob: -7.516659736633301
    6. '\n' → logprob: -8.2666597366333
    7. '
' → logprob: -8.3916597366333
    8. '\' → logprob: -9.0166597366333
    9. ':' → logprob: -9.1416597366333
    10. '```' → logprob: -9.2666597366333

Token 948: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09755302220582962
    2. ')' → logprob: -2.597553014755249
    3. '       ' → logprob: -4.847553253173828
    4. ']
' → logprob: -5.847553253173828
    5. '   ' → logprob: -6.222553253173828
    6. '+' → logprob: -6.597553253173828
    7. '           ' → logprob: -7.347553253173828
    8. '```' → logprob: -7.722553253173828
    9. '][' → logprob: -7.847553253173828
    10. '[' → logprob: -7.972553253173828

Token 949: '-based' (ID: 8235)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06662847101688385
    2. '+' → logprob: -3.1916284561157227
    3. ')' → logprob: -4.691628456115723
    4. ']
' → logprob: -5.441628456115723
    5. 'x' → logprob: -5.566628456115723
    6. '```' → logprob: -6.441628456115723
    7. '
' → logprob: -6.566628456115723
    8. '[' → logprob: -7.191628456115723
    9. '+
' → logprob: -7.816628456115723
    10. ')
' → logprob: -7.941628456115723

Token 950: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0773794874548912
    2. '+' → logprob: -2.8273794651031494
    3. ')' → logprob: -4.3273797035217285
    4. ']
' → logprob: -7.3273797035217285
    5. '```' → logprob: -7.4523797035217285
    6. ' ]' → logprob: -8.70237922668457
    7. ']:' → logprob: -9.20237922668457
    8. ' +' → logprob: -9.20237922668457
    9. ')
' → logprob: -9.70237922668457
    10. ':' → logprob: -9.82737922668457

Token 951: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06505437195301056
    2. '
' → logprob: -2.815054416656494
    3. '   ' → logprob: -6.315054416656494
    4. '        
' → logprob: -7.690054416656494
    5. '```' → logprob: -7.815054416656494
    6. '<|end|>' → logprob: -8.690053939819336
    7. '           ' → logprob: -9.815053939819336
    8. '    
' → logprob: -9.940053939819336
    9. ',' → logprob: -10.565053939819336
    10. '
' → logprob: -10.940053939819336

Token 952: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.412131667137146
    2. '       ' → logprob: -1.162131667137146
    3. '   ' → logprob: -3.9121317863464355
    4. '        
' → logprob: -6.0371317863464355
    5. '    
' → logprob: -7.2871317863464355
    6. '```' → logprob: -7.4121317863464355
    7. '\n' → logprob: -8.412131309509277
    8. '<|end|>' → logprob: -8.537131309509277
    9. '
' → logprob: -8.787131309509277
    10. '

' → logprob: -8.912131309509277

Token 953: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.535886824131012
    2. '       ' → logprob: -0.910886824131012
    3. '   ' → logprob: -4.660886764526367
    4. '        
' → logprob: -6.160886764526367
    5. '    
' → logprob: -7.910886764526367
    6. '```' → logprob: -7.910886764526367
    7. '<|end|>' → logprob: -9.160886764526367
    8. ',' → logprob: -9.785886764526367
    9. '
' → logprob: -10.660886764526367
    10. '\n' → logprob: -10.910886764526367

Token 954: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6125162839889526
    2. '
' → logprob: -1.4875162839889526
    3. '       ' → logprob: -1.4875162839889526
    4. '    
' → logprob: -5.987516403198242
    5. '        
' → logprob: -6.612516403198242
    6. 'ac' → logprob: -7.112516403198242
    7. 'dp' → logprob: -8.112516403198242
    8. 'tr' → logprob: -8.362516403198242
    9. '#' (adapté à ' #') → logprob: -8.737516403198242
    10. '
' → logprob: -8.987516403198242

Token 955: ' To' (ID: 2514)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15096381306648254
    2. 'ac' → logprob: -2.65096378326416
    3. '       ' → logprob: -3.02596378326416
    4. 'dp' → logprob: -5.15096378326416
    5. '#' → logprob: -5.27596378326416
    6. 'autom' → logprob: -5.40096378326416
    7. '
' → logprob: -6.65096378326416
    8. 'tr' → logprob: -6.77596378326416
    9. '    
' → logprob: -8.15096378326416
    10. 'visited' → logprob: -8.15096378326416

Token 956: ' do' (ID: 621)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7783423066139221
    2. 'continue' → logprob: -1.9033422470092773
    3. ' complete' → logprob: -2.0283422470092773
    4. '
' → logprob: -2.0283422470092773
    5. '   ' → logprob: -3.2783422470092773
    6. '       ' → logprob: -4.028342247009277
    7. ' find' → logprob: -4.653342247009277
    8. ']' → logprob: -4.903342247009277
    9. 'complete' → logprob: -4.903342247009277
    10. 'count' → logprob: -5.028342247009277

Token 957: ' this' (ID: 495)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5688590407371521
    2. '       ' → logprob: -0.9438590407371521
    3. ':
' → logprob: -4.193859100341797
    4. ':' → logprob: -4.693859100341797
    5. '
' → logprob: -4.943859100341797
    6. '           ' → logprob: -5.443859100341797
    7. ' ' → logprob: -6.818859100341797
    8. '        
' → logprob: -6.818859100341797
    9. 'def' → logprob: -7.193859100341797
    10. '    ' → logprob: -7.318859100341797

Token 958: ' efficiently' (ID: 34229)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9498531818389893
    2. ':' → logprob: -1.5748531818389893
    3. '       ' → logprob: -1.6998531818389893
    4. ':
' → logprob: -1.9498531818389893
    5. '
' → logprob: -3.0748531818389893
    6. '   ' → logprob: -3.8248531818389893
    7. 'def' → logprob: -5.94985294342041
    8. '```' → logprob: -6.82485294342041
    9. '):
' → logprob: -6.94985294342041
    10. 'import' → logprob: -6.94985294342041

Token 959: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.611473023891449
    2. '       ' → logprob: -0.861473023891449
    3. '
' → logprob: -4.486473083496094
    4. ':' → logprob: -4.861473083496094
    5. ' we' → logprob: -5.236473083496094
    6. ':
' → logprob: -5.736473083496094
    7. '   ' → logprob: -5.986473083496094
    8. ' for' → logprob: -6.611473083496094
    9. ',
' → logprob: -7.361473083496094
    10. 'import' → logprob: -7.361473083496094

Token 960: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032696877606213093
    2. '
' → logprob: -5.878269672393799
    3. '        
' → logprob: -7.878269672393799
    4. '           ' → logprob: -10.378270149230957
    5. ',' → logprob: -10.878270149230957
    6. '   ' → logprob: -12.003270149230957
    7. '    
' → logprob: -12.128270149230957
    8. ' for' → logprob: -12.503270149230957
    9. '```' → logprob: -12.878270149230957
    10. '      ' → logprob: -13.378270149230957

Token 961: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034446881618350744
    2. '   ' → logprob: -5.753444671630859
    3. '
' → logprob: -8.37844467163086
    4. '        
' → logprob: -11.50344467163086
    5. '           ' → logprob: -12.12844467163086
    6. 'ac' → logprob: -12.50344467163086
    7. '#' (adapté à ' #') → logprob: -12.62844467163086
    8. 'import' → logprob: -12.87844467163086
    9. 'from' → logprob: -13.12844467163086
    10. '    
' → logprob: -13.62844467163086

Token 962: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.215604767203331
    2. '   ' → logprob: -1.7156047821044922
    3. '
' → logprob: -5.340604782104492
    4. 'ac' → logprob: -5.840604782104492
    5. '#' → logprob: -6.340604782104492
    6. 'state' → logprob: -6.965604782104492
    7. 'current' → logprob: -7.215604782104492
    8. 'autom' → logprob: -7.340604782104492
    9. '```' → logprob: -7.965604782104492
    10. 'run' → logprob: -8.715604782104492

Token 963: ' preprocess' (ID: 122926)
  Prédit: ' will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' will' → logprob: -0.4568621814250946
    2. ' can' → logprob: -1.706862211227417
    3. '#' → logprob: -3.081862211227417
    4. ' need' → logprob: -3.456862211227417
    5. 'will' → logprob: -3.956862211227417
    6. '       ' → logprob: -4.206861972808838
    7. '   ' → logprob: -4.331861972808838
    8. 'def' → logprob: -4.581861972808838
    9. ' #' → logprob: -4.831861972808838
    10. ''ll' → logprob: -4.956861972808838

Token 964: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6631689071655273
    2. '   ' → logprob: -1.1631689071655273
    3. 'self' → logprob: -3.7881689071655273
    4. 'matches' → logprob: -4.038168907165527
    5. 'positions' → logprob: -4.288168907165527
    6. 'occur' → logprob: -4.413168907165527
    7. 'occ' → logprob: -4.663168907165527
    8. 'state' → logprob: -5.038168907165527
    9. 'text' → logprob: -5.163168907165527
    10. ' for' → logprob: -5.163168907165527

Token 965: ' occurrences' (ID: 108073)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.9295191168785095
    2. 'positions' → logprob: -1.5545191764831543
    3. '_matches' → logprob: -2.4295191764831543
    4. '       ' → logprob: -2.6795191764831543
    5. ' matches' → logprob: -2.6795191764831543
    6. 'occ' → logprob: -3.4295191764831543
    7. '_occ' → logprob: -3.5545191764831543
    8. '_positions' → logprob: -3.9295191764831543
    9. 'element' → logprob: -4.054519176483154
    10. ' positions' → logprob: -4.679519176483154

Token 966: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03509100154042244
    2. '
' → logprob: -3.535090923309326
    3. '        
' → logprob: -6.035090923309326
    4. '           ' → logprob: -6.660090923309326
    5. '
' → logprob: -8.035091400146484
    6. ',' → logprob: -8.285091400146484
    7. '\n' → logprob: -8.660091400146484
    8. '```' → logprob: -9.285091400146484
    9. '   ' → logprob: -9.660091400146484
    10. '                   ' → logprob: -10.035091400146484

Token 967: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.5449974536895752
    2. 'the' → logprob: -1.4199974536895752
    3. 'each' → logprob: -2.169997453689575
    4. ' the' → logprob: -4.169997215270996
    5. 'elements' → logprob: -4.419997215270996
    6. 'matches' → logprob: -4.669997215270996
    7. ' each' → logprob: -5.419997215270996
    8. 'words' → logprob: -5.669997215270996
    9. 'patterns' → logprob: -5.669997215270996
    10. ' element' → logprob: -5.794997215270996

Token 968: ' strings' (ID: 18279)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.03445511311292648
    2. '_' → logprob: -3.6594550609588623
    3. ' _' → logprob: -6.034455299377441
    4. 's' → logprob: -6.159455299377441
    5. ' strings' → logprob: -6.284455299377441
    6. 'strings' → logprob: -7.034455299377441
    7. '_s' → logprob: -8.034455299377441
    8. ')_' → logprob: -9.284455299377441
    9. '_string' → logprob: -9.409455299377441
    10. '_str' → logprob: -9.784455299377441

Token 969: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12948185205459595
    2. '
' → logprob: -2.254481792449951
    3. ':' → logprob: -5.629481792449951
    4. '        
' → logprob: -5.879481792449951
    5. '\n' → logprob: -6.504481792449951
    6. '
' → logprob: -6.879481792449951
    7. ',' → logprob: -7.129481792449951
    8. '```' → logprob: -7.129481792449951
    9. '   ' → logprob: -7.254481792449951
    10. '           ' → logprob: -7.254481792449951

Token 970: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.7024601697921753
    2. 'the' → logprob: -0.7024601697921753
    3. ' text' → logprob: -5.577460289001465
    4. ' the' → logprob: -5.577460289001465
    5. 'positions' → logprob: -6.827460289001465
    6. 'each' → logprob: -8.077460289001465
    7. '
' → logprob: -9.202460289001465
    8. '#' → logprob: -9.702460289001465
    9. 'range' → logprob: -10.827460289001465
    10. 'all' → logprob: -10.827460289001465

Token 971: ' using' (ID: 2360)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6715322136878967
    2. '       ' → logprob: -0.7965322136878967
    3. '   ' → logprob: -4.546532154083252
    4. '\n' → logprob: -4.796532154083252
    5. '#' → logprob: -5.296532154083252
    6. '
' → logprob: -5.921532154083252
    7. '        
' → logprob: -6.046532154083252
    8. '\' → logprob: -6.671532154083252
    9. 'def' → logprob: -6.921532154083252
    10. '```' → logprob: -7.296532154083252

Token 972: ' A' (ID: 355)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9441673159599304
    2. 'ac' → logprob: -1.0691673755645752
    3. 'self' → logprob: -2.069167375564575
    4. 'autom' → logprob: -2.944167375564575
    5. 'aho' → logprob: -3.069167375564575
    6. '   ' → logprob: -3.944167375564575
    7. 'A' → logprob: -4.944167137145996
    8. ' the' → logprob: -5.194167137145996
    9. '
' → logprob: -5.944167137145996
    10. '       ' → logprob: -6.694167137145996

Token 973: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.006927666254341602
    2. '_' → logprob: -5.881927490234375
    3. 'uto' → logprob: -6.381927490234375
    4. 'cho' → logprob: -7.256927490234375
    5. 'h' → logprob: -8.131927490234375
    6. 'utom' → logprob: -8.256927490234375
    7. '_c' → logprob: -8.506927490234375
    8. 'хо' → logprob: -8.631927490234375
    9. '
' → logprob: -9.506927490234375
    10. '   ' → logprob: -10.006927490234375

Token 974: '-C' (ID: 10050)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.1450348198413849
    2. '       ' → logprob: -3.0200347900390625
    3. '-C' → logprob: -3.6450347900390625
    4. '-' → logprob: -4.1450347900390625
    5. '   ' → logprob: -4.2700347900390625
    6. ')' → logprob: -5.0200347900390625
    7. '
' → logprob: -5.2700347900390625
    8. ')-' → logprob: -5.5200347900390625
    9. ')
' → logprob: -5.8950347900390625
    10. '_C' → logprob: -6.5200347900390625

Token 975: 'oras' (ID: 41056)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.7231888175010681
    2. 'or' → logprob: -0.8481888175010681
    3. '_' → logprob: -3.723188877105713
    4. '_C' → logprob: -4.098188877105713
    5. 'ar' → logprob: -4.223188877105713
    6. 'C' → logprob: -4.473188877105713
    7. '```' → logprob: -5.223188877105713
    8. 'Or' → logprob: -5.473188877105713
    9. '
' → logprob: -5.973188877105713
    10. 'oras' → logprob: -7.223188877105713

Token 976: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.2549890875816345
    2. 'h' → logprob: -1.6299891471862793
    3. '
' → logprob: -4.879989147186279
    4. 'ich' → logprob: -5.004989147186279
    5. 'ch' → logprob: -5.879989147186279
    6. '```' → logprob: -5.879989147186279
    7. 'ik' → logprob: -6.379989147186279
    8. 'hik' → logprob: -6.629989147186279
    9. '   ' → logprob: -7.129989147186279
    10. '#' → logprob: -7.129989147186279

Token 977: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3196173310279846
    2. '
' → logprob: -1.3196172714233398
    3. '
' → logprob: -6.69461727142334
    4. ',' → logprob: -7.06961727142334
    5. '        
' → logprob: -7.31961727142334
    6. '   ' → logprob: -7.44461727142334
    7. '```' → logprob: -7.56961727142334
    8. '           ' → logprob: -8.19461727142334
    9. ')' → logprob: -8.31961727142334
    10. '#' → logprob: -8.44461727142334

Token 978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007916655391454697
    2. ' then' → logprob: -5.882916450500488
    3. ' and' → logprob: -6.257916450500488
    4. '        
' → logprob: -7.007916450500488
    5. '           ' → logprob: -7.132916450500488
    6. ',' → logprob: -8.257916450500488
    7. '
' → logprob: -8.382916450500488
    8. '   ' → logprob: -8.507916450500488
    9. '.' → logprob: -9.007916450500488
    10. ')' → logprob: -9.007916450500488

Token 979: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005421581212431192
    2. '
' → logprob: -5.8804216384887695
    3. ' and' → logprob: -7.3804216384887695
    4. ' then' → logprob: -7.3804216384887695
    5. '        
' → logprob: -7.6304216384887695
    6. '           ' → logprob: -8.25542163848877
    7. '   ' → logprob: -8.75542163848877
    8. '#' (adapté à ' #') → logprob: -8.75542163848877
    9. 'and' → logprob: -10.13042163848877
    10. ',' → logprob: -10.25542163848877

Token 980: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003497319296002388
    2. '
' → logprob: -6.378497123718262
    3. '           ' → logprob: -7.503497123718262
    4. '   ' → logprob: -8.003497123718262
    5. '        
' → logprob: -8.253497123718262
    6. ',' → logprob: -8.753497123718262
    7. ' for' → logprob: -9.003497123718262
    8. ')' → logprob: -9.628497123718262
    9. ' and' → logprob: -10.378497123718262
    10. '
' → logprob: -10.878497123718262

Token 981: ' each' (ID: 2454)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6493787169456482
    2. ' pos' → logprob: -0.7743787169456482
    3. ' i' → logprob: -5.524378776550293
    4. ' each' → logprob: -5.649378776550293
    5. 'each' → logprob: -5.649378776550293
    6. 'i' → logprob: -6.024378776550293
    7. ' position' → logprob: -7.274378776550293
    8. 'position' → logprob: -7.524378776550293
    9. 'state' → logprob: -8.024378776550293
    10. ' ' → logprob: -8.274378776550293

Token 982: ' ending' (ID: 22013)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.7717225551605225
    2. 'pos' → logprob: -1.2717225551605225
    3. ' position' → logprob: -1.7717225551605225
    4. ' pos' → logprob: -4.021722793579102
    5. ' match' → logprob: -4.521722793579102
    6. 'state' → logprob: -4.521722793579102
    7. ' i' → logprob: -4.896722793579102
    8. 'match' → logprob: -4.896722793579102
    9. 'index' → logprob: -5.146722793579102
    10. ' index' → logprob: -5.396722793579102

Token 983: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.5445582866668701
    2. '_' → logprob: -1.6695582866668701
    3. 'position' → logprob: -2.04455828666687
    4. '_pos' → logprob: -2.16955828666687
    5. ' at' → logprob: -2.41955828666687
    6. ' position' → logprob: -2.79455828666687
    7. '   ' → logprob: -2.91955828666687
    8. '_positions' → logprob: -3.41955828666687
    9. '_position' → logprob: -3.66955828666687
    10. ')' → logprob: -3.66955828666687

Token 984: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9179825186729431
    2. ' in' → logprob: -1.042982578277588
    3. 'in' → logprob: -1.667982578277588
    4. ' of' → logprob: -5.042982578277588
    5. '
' → logprob: -5.292982578277588
    6. 'of' → logprob: -5.292982578277588
    7. 'pos' → logprob: -5.417982578277588
    8. '       ' → logprob: -5.542982578277588
    9. ']' → logprob: -5.667982578277588
    10. '           ' → logprob: -5.917982578277588

Token 985: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.2725750803947449
    2. 'range' → logprob: -1.5225751399993896
    3. ' text' → logprob: -4.2725749015808105
    4. ' range' → logprob: -5.1475749015808105
    5. '   ' → logprob: -8.522575378417969
    6. 'the' → logprob: -8.522575378417969
    7. '
' → logprob: -9.272575378417969
    8. 'enumer' → logprob: -9.772575378417969
    9. '```' → logprob: -10.647575378417969
    10. ' the' → logprob: -11.272575378417969

Token 986: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18159480392932892
    2. ':
' → logprob: -2.6815948486328125
    3. '       ' → logprob: -2.9315948486328125
    4. ':' → logprob: -3.8065948486328125
    5. ',
' → logprob: -5.4315948486328125
    6. '
' → logprob: -5.5565948486328125
    7. '   ' → logprob: -6.4315948486328125
    8. '           ' → logprob: -6.4315948486328125
    9. '):
' → logprob: -6.5565948486328125
    10. ' ,' → logprob: -6.9315948486328125

Token 987: ' store' (ID: 4897)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.7085767984390259
    2. '       ' → logprob: -1.9585767984390259
    3. ' matches' → logprob: -1.9585767984390259
    4. ' occurrences' → logprob: -2.3335766792297363
    5. 'occ' → logprob: -3.2085766792297363
    6. 'positions' → logprob: -3.8335766792297363
    7. 'for' → logprob: -4.333576679229736
    8. ' for' → logprob: -4.708576679229736
    9. '#' → logprob: -4.708576679229736
    10. ' we' → logprob: -4.833576679229736

Token 988: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02232971228659153
    2. 'the' → logprob: -5.272329807281494
    3. 'matches' → logprob: -5.897329807281494
    4. 'element' → logprob: -6.022329807281494
    5. '[' → logprob: -6.147329807281494
    6. ' []' → logprob: -6.397329807281494
    7. '[])' → logprob: -6.522329807281494
    8. 'list' → logprob: -6.897329807281494
    9. '[]
' → logprob: -7.272329807281494
    10. 'a' → logprob: -7.397329807281494

Token 989: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.11430994421243668
    2. 'of' → logprob: -2.4893100261688232
    3. '[' → logprob: -5.239309787750244
    4. '_of' → logprob: -5.364309787750244
    5. ' =' → logprob: -5.739309787750244
    6. '       ' → logprob: -5.989309787750244
    7. '[]' → logprob: -6.114309787750244
    8. '           ' → logprob: -6.364309787750244
    9. 's' → logprob: -6.864309787750244
    10. '   ' → logprob: -6.864309787750244

Token 990: ' element' (ID: 3577)
  Prédit: '(element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(element' → logprob: -0.962607204914093
    2. 'matched' → logprob: -1.3376071453094482
    3. 'element' → logprob: -1.4626071453094482
    4. 'matches' → logprob: -2.7126071453094482
    5. '(' → logprob: -4.962607383728027
    6. 'indices' → logprob: -4.962607383728027
    7. '(j' → logprob: -4.962607383728027
    8. '(word' → logprob: -5.087607383728027
    9. '(pattern' → logprob: -5.712607383728027
    10. 'indexes' → logprob: -5.712607383728027

Token 991: ' strings' (ID: 18279)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9536943435668945
    2. '_ids' → logprob: -0.9536943435668945
    3. '_strings' → logprob: -2.0786943435668945
    4. '_indices' → logprob: -3.4536943435668945
    5. '_s' → logprob: -3.5786943435668945
    6. '_' → logprob: -3.5786943435668945
    7. '_indexes' → logprob: -5.0786943435668945
    8. '_idxs' → logprob: -5.9536943435668945
    9. ' _' → logprob: -6.0786943435668945
    10. ']' → logprob: -6.5786943435668945

Token 992: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12251965701580048
    2. '
' → logprob: -3.2475197315216064
    3. '```' → logprob: -4.497519493103027
    4. ':' → logprob: -4.622519493103027
    5. ')' → logprob: -4.747519493103027
    6. '                   ' → logprob: -4.872519493103027
    7. '               ' → logprob: -5.122519493103027
    8. ':
' → logprob: -5.622519493103027
    9. '           ' → logprob: -5.747519493103027
    10. '
' → logprob: -6.122519493103027

Token 993: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.13407118618488312
    2. ' end' → logprob: -2.134071111679077
    3. 'match' → logprob: -5.759071350097656
    4. ' ended' → logprob: -6.884071350097656
    5. ' match' → logprob: -7.009071350097656
    6. 'ended' → logprob: -7.259071350097656
    7. 'matched' → logprob: -7.509071350097656
    8. '
' → logprob: -8.134071350097656
    9. ' matched' → logprob: -8.384071350097656
    10. 'finish' → logprob: -9.384071350097656

Token 994: ' there' (ID: 1354)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.33228200674057007
    2. ' at' → logprob: -1.5822820663452148
    3. '_here' → logprob: -3.207282066345215
    4. ' there' → logprob: -4.082282066345215
    5. 'at' → logprob: -4.582282066345215
    6. 'At' → logprob: -6.457282066345215
    7. ']' → logprob: -6.707282066345215
    8. 'there' → logprob: -6.957282066345215
    9. '   ' → logprob: -7.082282066345215
    10. '[]' → logprob: -7.082282066345215

Token 995: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5808166861534119
    2. '
' → logprob: -0.8308166861534119
    3. '
' → logprob: -6.455816745758057
    4. '   ' → logprob: -7.455816745758057
    5. '        
' → logprob: -7.455816745758057
    6. '           ' → logprob: -7.705816745758057
    7. '```' → logprob: -8.705816268920898
    8. '\n' → logprob: -8.830816268920898
    9. 'def' → logprob: -8.955816268920898
    10. ',' → logprob: -8.955816268920898

Token 996: 'their' (ID: 90587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020389238372445107
    2. '])' → logprob: -4.145389080047607
    3. ']' → logprob: -6.395389080047607
    4. '):' → logprob: -6.770389080047607
    5. ').' → logprob: -7.145389080047607
    6. '       ' → logprob: -8.520389556884766
    7. ')]' → logprob: -9.020389556884766
    8. ':' → logprob: -9.520389556884766
    9. ')])' → logprob: -9.770389556884766
    10. ')
' → logprob: -10.020389556884766

Token 997: ' index' (ID: 3472)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.1160159707069397
    2. 'length' → logprob: -3.366015911102295
    3. ' indices' → logprob: -3.741015911102295
    4. ')' → logprob: -4.116015911102295
    5. 'indexes' → logprob: -4.491015911102295
    6. '_ids' → logprob: -5.116015911102295
    7. '_indices' → logprob: -5.116015911102295
    8. '_lengths' → logprob: -5.616015911102295
    9. ' lengths' → logprob: -6.366015911102295
    10. ',' → logprob: -6.616015911102295

Token 998: ' and' (ID: 326)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.40126851201057434
    2. ')' → logprob: -2.026268482208252
    3. ']' → logprob: -2.026268482208252
    4. ')]' → logprob: -2.901268482208252
    5. 's' → logprob: -5.151268482208252
    6. '):' → logprob: -6.651268482208252
    7. ']:' → logprob: -7.401268482208252
    8. ')])' → logprob: -7.526268482208252
    9. '])
' → logprob: -7.651268482208252
    10. ':' → logprob: -7.776268482208252

Token 999: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.038159001618623734
    2. ' length' → logprob: -3.288158893585205
    3. 'len' → logprob: -9.413159370422363
    4. ' lengths' → logprob: -10.538159370422363
    5. 'start' → logprob: -12.538159370422363
    6. '
' → logprob: -13.163159370422363
    7. 'their' → logprob: -13.413159370422363
    8. ' their' → logprob: -14.538159370422363
    9. 'position' → logprob: -15.038159370422363
    10. ')' → logprob: -15.288159370422363

Token 1000: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1414455622434616
    2. ')
' → logprob: -2.6414456367492676
    3. '       ' → logprob: -3.0164456367492676
    4. '):
' → logprob: -5.766445636749268
    5. ']' → logprob: -6.016445636749268
    6. '):' → logprob: -6.516445636749268
    7. '])' → logprob: -6.891445636749268
    8. ').' → logprob: -7.016445636749268
    9. '           ' → logprob: -7.516445636749268
    10. ')]' → logprob: -7.766445636749268

Token 1001: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2845291197299957
    2. '       ' → logprob: -1.4095290899276733
    3. '        
' → logprob: -6.034529209136963
    4. '
' → logprob: -8.659528732299805
    5. '```' → logprob: -8.909528732299805
    6. '

' → logprob: -9.409528732299805
    7. ',' → logprob: -9.534528732299805
    8. '<|end|>' → logprob: -9.534528732299805
    9. '   ' → logprob: -9.784528732299805
    10. 'def' → logprob: -10.034528732299805

Token 1002: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09440038353204727
    2. '       ' → logprob: -2.469400405883789
    3. '

' → logprob: -6.094400405883789
    4. '<|end|>' → logprob: -6.969400405883789
    5. '        
' → logprob: -7.094400405883789
    6. '
' → logprob: -7.844400405883789
    7. '\n' → logprob: -8.344400405883789
    8. ',' → logprob: -8.969400405883789
    9. '```' → logprob: -9.094400405883789
    10. ')' → logprob: -9.469400405883789

Token 1003: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21229374408721924
    2. '
' → logprob: -1.7122937440872192
    3. '        
' → logprob: -4.58729362487793
    4. '<|end|>' → logprob: -7.96229362487793
    5. '    
' → logprob: -9.83729362487793
    6. '```' → logprob: -10.08729362487793
    7. '<|end|>' → logprob: -10.33729362487793
    8. '#' → logprob: -10.58729362487793
    9. '   ' → logprob: -10.71229362487793
    10. '            
' → logprob: -11.21229362487793

Token 1004: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38072431087493896
    2. '
' → logprob: -1.255724310874939
    3. '        
' → logprob: -4.1307244300842285
    4. 'occ' → logprob: -4.8807244300842285
    5. 'matches' → logprob: -5.7557244300842285
    6. '#' (adapté à ' #') → logprob: -6.5057244300842285
    7. 'occur' → logprob: -7.0057244300842285
    8. 'positions' → logprob: -7.6307244300842285
    9. '   ' → logprob: -7.7557244300842285
    10. '```' → logprob: -8.63072395324707

Token 1005: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03286217525601387
    2. '
' → logprob: -4.532862186431885
    3. '   ' → logprob: -5.032862186431885
    4. 'matches' → logprob: -5.032862186431885
    5. 'occ' → logprob: -6.032862186431885
    6. '#' → logprob: -6.032862186431885
    7. 'pos' → logprob: -6.907862186431885
    8. 'occur' → logprob: -7.282862186431885
    9. '        
' → logprob: -8.157861709594727
    10. 'ac' → logprob: -8.157861709594727

Token 1006: ' do' (ID: 621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026785198599100113
    2. '
' → logprob: -3.651785135269165
    3. 'for' → logprob: -8.401784896850586
    4. ' for' → logprob: -9.401784896850586
    5. '   ' → logprob: -10.026784896850586
    6. '        
' → logprob: -10.401784896850586
    7. ',' → logprob: -10.901784896850586
    8. 'continue' → logprob: -10.901784896850586
    9. 'import' → logprob: -11.151784896850586
    10. 'from' → logprob: -11.151784896850586

Token 1007: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30368390679359436
    2. '       ' → logprob: -1.553683876991272
    3. ' dp' → logprob: -3.3036839962005615
    4. '```' → logprob: -5.178683757781982
    5. '
' → logprob: -5.803683757781982
    6. '   ' → logprob: -6.303683757781982
    7. ' for' → logprob: -6.553683757781982
    8. 'for' → logprob: -6.928683757781982
    9. '``' → logprob: -7.803683757781982
    10. 'n' → logprob: -8.55368423461914

Token 1008: ' forward' (ID: 6687)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11457276344299316
    2. '       ' → logprob: -2.239572763442993
    3. '        
' → logprob: -6.864572525024414
    4. '
' → logprob: -7.989572525024414
    5. '\n' → logprob: -9.489572525024414
    6. '

' → logprob: -9.864572525024414
    7. '   ' → logprob: -10.489572525024414
    8. '```' → logprob: -10.739572525024414
    9. '
        
' → logprob: -10.864572525024414
    10. '#' → logprob: -10.864572525024414

Token 1009: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18130041658878326
    2. '       ' → logprob: -1.806300401687622
    3. '        
' → logprob: -7.181300640106201
    4. '
' → logprob: -8.181300163269043
    5. '   ' → logprob: -8.806300163269043
    6. '```' → logprob: -9.181300163269043
    7. 'dp' → logprob: -9.806300163269043
    8. '\n' → logprob: -10.056300163269043
    9. '    
' → logprob: -10.681300163269043
    10. ',' → logprob: -10.806300163269043

Token 1010: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22829081118106842
    2. '       ' → logprob: -1.6032907962799072
    3. '        
' → logprob: -5.978291034698486
    4. '```' → logprob: -8.853290557861328
    5. '   ' → logprob: -9.478290557861328
    6. '    
' → logprob: -10.103290557861328
    7. '
' → logprob: -10.478290557861328
    8. '

' → logprob: -11.103290557861328
    9. '\n' → logprob: -12.978290557861328
    10. '            
' → logprob: -12.978290557861328

Token 1011: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9465094208717346
    2. '       ' → logprob: -1.0715093612670898
    3. '   ' → logprob: -1.3215093612670898
    4. '    
' → logprob: -6.82150936126709
    5. '        
' → logprob: -7.07150936126709
    6. '```' → logprob: -8.57150936126709
    7. '
' → logprob: -8.69650936126709
    8. 'ac' → logprob: -9.19650936126709
    9. '#' (adapté à ' #') → logprob: -9.57150936126709
    10. 'tr' → logprob: -10.32150936126709

Token 1012: ' Because' (ID: 13602)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05023960396647453
    2. '       ' → logprob: -3.0502395629882812
    3. '   ' → logprob: -7.550239562988281
    4. '        
' → logprob: -7.550239562988281
    5. '```' → logprob: -8.175239562988281
    6. '
' → logprob: -9.425239562988281
    7. '    
' → logprob: -9.425239562988281
    8. 'dp' → logprob: -9.800239562988281
    9. 'import' → logprob: -10.800239562988281
    10. '

' → logprob: -11.300239562988281

Token 1013: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.715118408203125
    2. '       ' → logprob: -0.965118408203125
    3. ' dp' → logprob: -2.590118408203125
    4. 'n' → logprob: -3.965118408203125
    5. '   ' → logprob: -4.090118408203125
    6. ' n' → logprob: -4.840118408203125
    7. '
' → logprob: -5.090118408203125
    8. ' ' → logprob: -7.340118408203125
    9. '           ' → logprob: -7.340118408203125
    10. '        
' → logprob: -7.840118408203125

Token 1014: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0252246856689453
    2. '+' → logprob: -1.1502246856689453
    3. '<=' → logprob: -1.9002246856689453
    4. ' <' → logprob: -2.7752246856689453
    5. '       ' → logprob: -3.6502246856689453
    6. ' +' → logprob: -3.9002246856689453
    7. '<n' → logprob: -4.400224685668945
    8. '=' → logprob: -4.775224685668945
    9. '
' → logprob: -5.275224685668945
    10. '   ' → logprob: -5.400224685668945

Token 1015: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.0003267639840487391
    2. ' ' → logprob: -8.250327110290527
    3. '20' → logprob: -9.875327110290527
    4. '```' → logprob: -12.875327110290527
    5. '1' → logprob: -13.500327110290527
    6. '15' → logprob: -13.625327110290527
    7. '13' → logprob: -13.750327110290527
    8. '=' → logprob: -13.750327110290527
    9. '
' → logprob: -14.000327110290527
    10. '30' → logprob: -14.125327110290527

Token 1016: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.00012523093027994037
    2. '20' → logprob: -10.00012493133545
    3. ' ' → logprob: -10.12512493133545
    4. '
' → logprob: -11.12512493133545
    5. '100' → logprob: -12.37512493133545
    6. 'n' → logprob: -12.37512493133545
    7. '50' → logprob: -13.00012493133545
    8. '10' → logprob: -13.12512493133545
    9. '15' → logprob: -13.25012493133545
    10. '11' → logprob: -13.25012493133545

Token 1017: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2700987458229065
    2. '
' → logprob: -1.5200986862182617
    3. ':' → logprob: -5.145098686218262
    4. ':
' → logprob: -5.645098686218262
    5. '```' → logprob: -6.270098686218262
    6. '   ' → logprob: -6.395098686218262
    7. '        
' → logprob: -7.145098686218262
    8. ',' → logprob: -7.520098686218262
    9. '\' → logprob: -7.645098686218262
    10. '()
' → logprob: -7.895098686218262

Token 1018: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06720088422298431
    2. '           ' → logprob: -3.3172008991241455
    3. '
' → logprob: -4.942200660705566
    4. '   ' → logprob: -4.942200660705566
    5. '```' → logprob: -5.692200660705566
    6. '               ' → logprob: -5.942200660705566
    7. '        ' → logprob: -6.817200660705566
    8. ',' → logprob: -7.567200660705566
    9. ' dp' → logprob: -7.692200660705566
    10. '                   ' → logprob: -7.692200660705566

Token 1019: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.14260785281658173
    2. 'can' → logprob: -3.3926079273223877
    3. '   ' → logprob: -3.5176079273223877
    4. '
' → logprob: -3.5176079273223877
    5. ' will' → logprob: -4.517607688903809
    6. '       ' → logprob: -4.642607688903809
    7. ' have' → logprob: -5.017607688903809
    8. '#' → logprob: -5.642607688903809
    9. '```' → logprob: -6.017607688903809
    10. 'have' → logprob: -7.517607688903809

Token 1020: ' store' (ID: 4897)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.269980549812317
    2. '   ' → logprob: -1.394980549812317
    3. 'do' → logprob: -2.0199804306030273
    4. ' use' → logprob: -2.7699804306030273
    5. ' store' → logprob: -2.8949804306030273
    6. 'store' → logprob: -2.8949804306030273
    7. 'use' → logprob: -3.5199804306030273
    8. 'continue' → logprob: -3.5199804306030273
    9. ' implement' → logprob: -3.8949804306030273
    10. 'implement' → logprob: -4.144980430603027

Token 1021: ' dp' (ID: 21546)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.9713716506958008
    2. ')' → logprob: -2.221371650695801
    3. 'dp' → logprob: -2.221371650695801
    4. '[' → logprob: -2.221371650695801
    5. '[
' → logprob: -2.471371650695801
    6. '
' → logprob: -2.846371650695801
    7. '       ' → logprob: -2.846371650695801
    8. 'n' → logprob: -3.096371650695801
    9. '   ' → logprob: -3.596371650695801
    10. ']' → logprob: -3.846371650695801

Token 1022: ' with' (ID: 483)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7482450604438782
    2. '[' → logprob: -1.4982450008392334
    3. ' =' → logprob: -1.9982450008392334
    4. '=' → logprob: -3.2482450008392334
    5. '[
' → logprob: -3.4982450008392334
    6. '```' → logprob: -3.8732450008392334
    7. '\' → logprob: -3.9982450008392334
    8. '   ' → logprob: -4.3732452392578125
    9. '_
' → logprob: -4.8732452392578125
    10. '\n' → logprob: -4.9982452392578125

Token 1023: ' mask' (ID: 10910)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7674254179000854
    2. '1' → logprob: -2.392425537109375
    3. 'bit' → logprob: -2.642425537109375
    4. 'bits' → logprob: -2.642425537109375
    5. ' [' → logprob: -2.767425537109375
    6. '2' → logprob: -3.017425537109375
    7. 'n' → logprob: -3.392425537109375
    8. '[n' → logprob: -3.642425537109375
    9. ' bit' → logprob: -3.642425537109375
    10. 'byte' → logprob: -3.642425537109375

Token 1024: ' up' (ID: 869)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1025041341781616
    2. '[' → logprob: -1.4775041341781616
    3. ']' → logprob: -1.6025041341781616
    4. '   ' → logprob: -3.227504253387451
    5. '_
' → logprob: -3.352504253387451
    6. '```' → logprob: -3.602504253387451
    7. ' =' → logprob: -3.977504253387451
    8. ',' → logprob: -4.227504253387451
    9. ')' → logprob: -4.352504253387451
    10. '[
' → logprob: -4.352504253387451

Token 1025: ' to' (ID: 316)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3991146385669708
    2. '[' → logprob: -2.0241146087646484
    3. '=' → logprob: -3.0241146087646484
    4. 'date' → logprob: -3.8991146087646484
    5. '32' → logprob: -4.024114608764648
    6. 'size' → logprob: -4.274114608764648
    7. '_' → logprob: -4.399114608764648
    8. '[
' → logprob: -5.024114608764648
    9. '16' → logprob: -5.149114608764648
    10. 'n' → logprob: -5.149114608764648

Token 1026: ' ' (ID: 220)
  Prédit: '409'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '409' → logprob: -0.6057142615318298
    2. ' (' → logprob: -1.7307143211364746
    3. '1' → logprob: -2.1057143211364746
    4. ' ' → logprob: -2.3557143211364746
    5. '(' → logprob: -3.3557143211364746
    6. ' n' → logprob: -4.730714321136475
    7. '12' → logprob: -5.105714321136475
    8. '13' → logprob: -5.855714321136475
    9. 'n' → logprob: -6.105714321136475
    10. '   ' → logprob: -6.730714321136475

Token 1027: '2' (ID: 17)
  Prédit: '409'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '409' → logprob: -0.6835644841194153
    2. '1' → logprob: -1.4335644245147705
    3. '(' → logprob: -1.5585644245147705
    4. ' (' → logprob: -4.30856466293335
    5. '12' → logprob: -4.55856466293335
    6. '13' → logprob: -4.68356466293335
    7. '
' → logprob: -5.80856466293335
    8. ' ' → logprob: -5.93356466293335
    9. '(n' → logprob: -6.18356466293335
    10. '   ' → logprob: -6.43356466293335

Token 1028: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5821582674980164
    2. '^' → logprob: -1.4571583271026611
    3. '
' → logprob: -2.457158327102661
    4. '0' → logprob: -2.957158327102661
    5. '12' → logprob: -3.207158327102661
    6. '```' → logprob: -5.082158088684082
    7. ' ' → logprob: -5.332158088684082
    8. '1' → logprob: -5.582158088684082
    9. '13' → logprob: -5.582158088684082
    10. ' **' → logprob: -5.707158088684082

Token 1029: '12' (ID: 899)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0821515321731567
    2. ' ' → logprob: -1.3321515321731567
    3. 'n' → logprob: -1.7071515321731567
    4. '12' → logprob: -1.8321515321731567
    5. '(n' → logprob: -3.832151412963867
    6. '<n' → logprob: -4.832151412963867
    7. '```' → logprob: -5.082151412963867
    8. '13' → logprob: -5.332151412963867
    9. '           ' → logprob: -5.832151412963867
    10. '
' → logprob: -5.957151412963867

Token 1030: ' =' (ID: 314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0360524654388428
    2. '       ' → logprob: -1.6610524654388428
    3. '   ' → logprob: -1.9110524654388428
    4. '[' → logprob: -1.9110524654388428
    5. '```' → logprob: -2.6610524654388428
    6. ']' → logprob: -3.6610524654388428
    7. '[
' → logprob: -4.411052703857422
    8. ')' → logprob: -4.411052703857422
    9. '][' → logprob: -5.536052703857422
    10. ',' → logprob: -5.536052703857422

Token 1031: ' ' (ID: 220)
  Prédit: '409'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '409' → logprob: -0.018302230164408684
    2. ' ' → logprob: -4.0183024406433105
    3. '   ' → logprob: -9.643301963806152
    4. '  ' → logprob: -10.643301963806152
    5. '1' → logprob: -11.143301963806152
    6. ' ' → logprob: -11.768301963806152
    7. '(' → logprob: -12.018301963806152
    8. '`' → logprob: -12.393301963806152
    9. '```' → logprob: -12.393301963806152
    10. ''' → logprob: -12.768301963806152

Token 1032: '409' (ID: 24928)
  Prédit: '409'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '409' → logprob: -0.00032831361750140786
    2. ' ' → logprob: -9.000328063964844
    3. '(' → logprob: -9.375328063964844
    4. '1' → logprob: -9.875328063964844
    5. '   ' → logprob: -10.625328063964844
    6. '13' → logprob: -11.750328063964844
    7. '
' → logprob: -11.750328063964844
    8. '0' → logprob: -12.125328063964844
    9. '\' → logprob: -13.250328063964844
    10. ',' → logprob: -13.375328063964844

Token 1033: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.943783253314905e-05
    2. '5' → logprob: -10.750059127807617
    3. '[' → logprob: -11.250059127807617
    4. ')' → logprob: -11.875059127807617
    5. '
' → logprob: -12.750059127807617
    6. '3' → logprob: -12.875059127807617
    7. ',' → logprob: -13.000059127807617
    8. '```' → logprob: -13.000059127807617
    9. '   ' → logprob: -13.750059127807617
    10. '[
' → logprob: -14.125059127807617

Token 1034: ' which' (ID: 1118)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4441174566745758
    2. '       ' → logprob: -1.0691174268722534
    3. '   ' → logprob: -5.694117546081543
    4. '\n' → logprob: -6.319117546081543
    5. ',' → logprob: -6.694117546081543
    6. '[' → logprob: -6.944117546081543
    7. '        
' → logprob: -6.944117546081543
    8. '
' → logprob: -6.944117546081543
    9. ')' → logprob: -7.069117546081543
    10. '```' → logprob: -7.069117546081543

Token 1035: ' is' (ID: 382)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2133810818195343
    2. ' is' → logprob: -2.088381052017212
    3. '\n' → logprob: -3.463381052017212
    4. ' can' → logprob: -4.963381290435791
    5. '   ' → logprob: -5.088381290435791
    6. '```' → logprob: -5.088381290435791
    7. ' <=' → logprob: -6.338381290435791
    8. '       ' → logprob: -6.713381290435791
    9. ':
' → logprob: -6.838381290435791
    10. ' 
' → logprob: -6.963381290435791

Token 1036: ' feasible' (ID: 58866)
  Prédit: ' feasible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' feasible' → logprob: -0.8862247467041016
    2. '\n' → logprob: -1.1362247467041016
    3. ' manageable' → logprob: -2.1362247467041016
    4. '```' → logprob: -3.3862247467041016
    5. ' reasonable' → logprob: -3.6362247467041016
    6. 'manageable' → logprob: -4.136224746704102
    7. 'fe' → logprob: -4.386224746704102
    8. 'reasonable' → logprob: -5.011224746704102
    9. 'possible' → logprob: -5.136224746704102
    10. ' possible' → logprob: -5.386224746704102

Token 1037: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10752587765455246
    2. '
' → logprob: -2.3575258255004883
    3. '   ' → logprob: -6.107525825500488
    4. '        
' → logprob: -6.232525825500488
    5. '```' → logprob: -6.732525825500488
    6. ',' → logprob: -7.857525825500488
    7. '           ' → logprob: -8.107525825500488
    8. ':' → logprob: -8.357525825500488
    9. '    
' → logprob: -8.732525825500488
    10. ':
' → logprob: -9.732525825500488

Token 1038: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2570866346359253
    2. '
' → logprob: -1.5070866346359253
    3. '        
' → logprob: -6.007086753845215
    4. '   ' → logprob: -6.757086753845215
    5. '```' → logprob: -6.757086753845215
    6. '<|end|>' → logprob: -8.882086753845215
    7. '    
' → logprob: -9.132086753845215
    8. '`' → logprob: -11.257086753845215
    9. '<|end|>' → logprob: -11.632086753845215
    10. '           ' → logprob: -11.757086753845215

Token 1039: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10183276981115341
    2. '       ' → logprob: -2.351832866668701
    3. '        
' → logprob: -6.726832866668701
    4. 'dp' → logprob: -9.351832389831543
    5. '```' → logprob: -9.476832389831543
    6. '
' → logprob: -9.976832389831543
    7. '

' → logprob: -10.101832389831543
    8. '\n' → logprob: -10.351832389831543
    9. '`
' → logprob: -10.351832389831543
    10. 'import' → logprob: -11.101832389831543

Token 1040: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4351085424423218
    2. '       ' → logprob: -1.0601085424423218
    3. '   ' → logprob: -5.560108661651611
    4. '        
' → logprob: -6.185108661651611
    5. '    
' → logprob: -8.060108184814453
    6. '```' → logprob: -10.060108184814453
    7. '\n' → logprob: -10.560108184814453
    8. '

' → logprob: -10.685108184814453
    9. '<|end|>' → logprob: -11.560108184814453
    10. '`
' → logprob: -12.185108184814453

Token 1041: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08226665109395981
    2. '
' → logprob: -2.5822665691375732
    3. 'dp' → logprob: -5.957266807556152
    4. '        
' → logprob: -7.832266807556152
    5. '#' (adapté à ' #') → logprob: -8.832266807556152
    6. '   ' → logprob: -9.707266807556152
    7. 'text' → logprob: -10.457266807556152
    8. 'import' → logprob: -10.457266807556152
    9. '```' → logprob: -10.957266807556152
    10. 'n' → logprob: -11.332266807556152

Token 1042: ' The' (ID: 623)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40045854449272156
    2. '       ' → logprob: -1.400458574295044
    3. '
' → logprob: -3.025458574295044
    4. '   ' → logprob: -3.525458574295044
    5. '#' → logprob: -6.775458335876465
    6. 'text' → logprob: -6.900458335876465
    7. 'occ' → logprob: -7.275458335876465
    8. '        
' → logprob: -7.400458335876465
    9. 'import' → logprob: -7.775458335876465
    10. 'matches' → logprob: -8.400458335876465

Token 1043: ' length' (ID: 5517)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.26268264651298523
    2. '       ' → logprob: -2.2626826763153076
    3. '
' → logprob: -3.1376826763153076
    4. '#' → logprob: -3.2626826763153076
    5. ' dp' → logprob: -4.2626824378967285
    6. 'n' → logprob: -4.8876824378967285
    7. '   ' → logprob: -5.2626824378967285
    8. ' #' → logprob: -5.2626824378967285
    9. 'for' → logprob: -5.3876824378967285
    10. 'def' → logprob: -6.0126824378967285

Token 1044: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15852423012256622
    2. '
' → logprob: -3.53352427482605
    3. '=' → logprob: -3.78352427482605
    4. ' of' → logprob: -4.158524036407471
    5. 'of' → logprob: -4.283524036407471
    6. '_
' → logprob: -4.283524036407471
    7. ' =' → logprob: -4.408524036407471
    8. ' _' → logprob: -4.908524036407471
    9. 's' → logprob: -5.033524036407471
    10. '(' → logprob: -5.658524036407471

Token 1045: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.17315146327018738
    2. ' text' → logprob: -1.9231514930725098
    3. 'element' → logprob: -4.54815149307251
    4. 'the' → logprob: -7.17315149307251
    5. ' element' → logprob: -7.42315149307251
    6. ' the' → logprob: -8.298151016235352
    7. '(text' → logprob: -8.548151016235352
    8. '```' → logprob: -8.798151016235352
    9. '   ' → logprob: -9.923151016235352
    10. ' code' → logprob: -10.298151016235352

Token 1046: ' <=' (ID: 5017)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.379072666168213
    2. '
' → logprob: -1.879072666168213
    3. '_' → logprob: -2.879072666168213
    4. '=' → logprob: -3.004072666168213
    5. ' is' → logprob: -3.004072666168213
    6. ']' → logprob: -3.004072666168213
    7. ' =' → logprob: -3.254072666168213
    8. ')' → logprob: -3.379072666168213
    9. '       ' → logprob: -3.379072666168213
    10. 's' → logprob: -3.504072666168213

Token 1047: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2916748821735382
    2. '100' → logprob: -1.5416748523712158
    3. '200' → logprob: -3.666674852371216
    4. ' ' → logprob: -5.041675090789795
    5. '400' → logprob: -6.041675090789795
    6. '500' → logprob: -6.166675090789795
    7. '300' → logprob: -7.041675090789795
    8. '120' → logprob: -8.166674613952637
    9. '250' → logprob: -8.416674613952637
    10. '150' → logprob: -8.791674613952637

Token 1048: '500' (ID: 3234)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.061399683356285095
    2. '100' → logprob: -3.9363996982574463
    3. ' ' → logprob: -4.436399459838867
    4. ')' → logprob: -5.186399459838867
    5. '```' → logprob: -5.311399459838867
    6. '1' → logprob: -6.061399459838867
    7. '409' → logprob: -6.186399459838867
    8. '\n' → logprob: -6.311399459838867
    9. ''\' → logprob: -7.186399459838867
    10. ' 
' → logprob: -7.186399459838867

Token 1049: '0' (ID: 15)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22359494864940643
    2. '   ' → logprob: -2.473594903945923
    3. ':' → logprob: -2.973594903945923
    4. ':
' → logprob: -4.223595142364502
    5. '
' → logprob: -4.473595142364502
    6. '\n' → logprob: -4.723595142364502
    7. '[' → logprob: -4.723595142364502
    8. '\' → logprob: -5.973595142364502
    9. '           ' → logprob: -5.973595142364502
    10. ')' → logprob: -6.223595142364502

Token 1050: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26805058121681213
    2. '       ' → logprob: -1.5180505514144897
    3. '   ' → logprob: -5.268050670623779
    4. '

' → logprob: -6.393050670623779
    5. '        
' → logprob: -6.518050670623779
    6. '
' → logprob: -6.643050670623779
    7. '```' → logprob: -6.643050670623779
    8. ':' → logprob: -6.893050670623779
    9. ',' → logprob: -7.018050670623779
    10. '\n' → logprob: -7.393050670623779

Token 1051: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0787791758775711
    2. '
' → logprob: -2.7037792205810547
    3. '   ' → logprob: -5.953779220581055
    4. '```' → logprob: -6.453779220581055
    5. ' and' → logprob: -6.828779220581055
    6. ',' → logprob: -7.453779220581055
    7. '\n' → logprob: -7.703779220581055
    8. '        
' → logprob: -7.703779220581055
    9. 'dp' → logprob: -7.953779220581055
    10. 'import' → logprob: -8.453779220581055

Token 1052: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0919681116938591
    2. ' dp' → logprob: -3.841968059539795
    3. '```' → logprob: -3.966968059539795
    4. '
' → logprob: -4.216968059539795
    5. '   ' → logprob: -4.591968059539795
    6. 'dp' → logprob: -4.841968059539795
    7. '           ' → logprob: -6.341968059539795
    8. ')' → logprob: -6.341968059539795
    9. '        ' → logprob: -6.466968059539795
    10. '[' → logprob: -6.841968059539795

Token 1053: ' size' (ID: 2349)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5985845327377319
    2. '
' → logprob: -1.973584532737732
    3. ' =' → logprob: -2.7235846519470215
    4. '[pos' → logprob: -2.7235846519470215
    5. '[
' → logprob: -2.9735846519470215
    6. '   ' → logprob: -3.2235846519470215
    7. '```' → logprob: -3.2235846519470215
    8. '       ' → logprob: -4.4735846519470215
    9. '``' → logprob: -4.9735846519470215
    10. '[position' → logprob: -5.4735846519470215

Token 1054: ' ~' (ID: 6574)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37769007682800293
    2. '[
' → logprob: -2.002690076828003
    3. '```' → logprob: -2.627690076828003
    4. '   ' → logprob: -3.127690076828003
    5. ' =' → logprob: -4.377690315246582
    6. ']' → logprob: -4.752690315246582
    7. '=' → logprob: -5.127690315246582
    8. '
' → logprob: -5.377690315246582
    9. '[i' → logprob: -5.627690315246582
    10. ')' → logprob: -5.877690315246582

Token 1055: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1212667226791382
    2. ' ' → logprob: -2.2462668418884277
    3. '500' → logprob: -2.2462668418884277
    4. '\n' → logprob: -2.7462668418884277
    5. ' (' → logprob: -2.9962668418884277
    6. '
' → logprob: -3.1212668418884277
    7. ')' → logprob: -3.2462668418884277
    8. '```' → logprob: -3.4962668418884277
    9. ']' → logprob: -3.7462668418884277
    10. ' [' → logprob: -3.8712668418884277

Token 1056: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.6988409161567688
    2. '(' → logprob: -0.9488409161567688
    3. ' ' → logprob: -2.823840856552124
    4. ' (' → logprob: -3.323840856552124
    5. 'dp' → logprob: -5.573841094970703
    6. '501' → logprob: -6.198841094970703
    7. '[' → logprob: -6.323841094970703
    8. '10' → logprob: -6.448841094970703
    9. '510' → logprob: -6.448841094970703
    10. '5' → logprob: -6.698841094970703

Token 1057: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.328300416469574
    2. '[
' → logprob: -2.5783004760742188
    3. '       ' → logprob: -3.3283004760742188
    4. '[' → logprob: -3.3283004760742188
    5. '
' → logprob: -3.7033004760742188
    6. '   ' → logprob: -4.078300476074219
    7. '][' → logprob: -4.203300476074219
    8. ']' → logprob: -4.703300476074219
    9. '1' → logprob: -4.828300476074219
    10. '2' → logprob: -5.078300476074219

Token 1058: ' *' (ID: 425)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -1.0680996179580688
    2. '+' → logprob: -1.8180996179580688
    3. '   ' → logprob: -2.3180994987487793
    4. '
' → logprob: -2.5680994987487793
    5. '       ' → logprob: -2.5680994987487793
    6. ' +' → logprob: -3.0680994987487793
    7. '[' → logprob: -3.0680994987487793
    8. '```' → logprob: -3.8180994987487793
    9. '+
' → logprob: -3.9430994987487793
    10. ']' → logprob: -3.9430994987487793

Token 1059: ' ' (ID: 220)
  Prédit: '409'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '409' → logprob: -0.00508527597412467
    2. ' ' → logprob: -6.005085468292236
    3. ' (' → logprob: -7.130085468292236
    4. '(' → logprob: -7.255085468292236
    5. '```' → logprob: -8.005084991455078
    6. '`' → logprob: -9.130084991455078
    7. '+' → logprob: -9.130084991455078
    8. '   ' → logprob: -9.505084991455078
    9. '2' → logprob: -9.630084991455078
    10. '410' → logprob: -9.880084991455078

Token 1060: '409' (ID: 24928)
  Prédit: '409'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '409' → logprob: -0.5764566659927368
    2. '(' → logprob: -0.8264566659927368
    3. ' (' → logprob: -7.951456546783447
    4. '2' → logprob: -10.326457023620605
    5. ' ' → logprob: -10.576457023620605
    6. '(m' → logprob: -10.576457023620605
    7. '
' → logprob: -10.701457023620605
    8. '410' → logprob: -10.951457023620605
    9. '(n' → logprob: -11.201457023620605
    10. '   ' → logprob: -11.951457023620605

Token 1061: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. '
' → logprob: -19.25
    3. '60' → logprob: -19.375
    4. '2' → logprob: -19.5
    5. '۶' → logprob: -19.625
    6. '4' → logprob: -19.875
    7. '６' → logprob: -20.0
    8. '0' → logprob: -20.125
    9. '٦' → logprob: -20.125
    10. '   ' → logprob: -20.25

Token 1062: ' =' (ID: 314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02810206077992916
    2. '       ' → logprob: -3.778102159500122
    3. '   ' → logprob: -7.153101921081543
    4. '

' → logprob: -7.528101921081543
    5. '        
' → logprob: -7.528101921081543
    6. '[' → logprob: -7.653101921081543
    7. '\n' → logprob: -7.653101921081543
    8. '[
' → logprob: -7.903101921081543
    9. '```' → logprob: -8.153101921081543
    10. ' =' → logprob: -8.403101921081543

Token 1063: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3103928565979004
    2. '\n' → logprob: -1.9353928565979004
    3. '```' → logprob: -1.9353928565979004
    4. '10' → logprob: -2.0603928565979004
    5. '1' → logprob: -2.8103928565979004
    6. '500' → logprob: -3.1853928565979004
    7. ' 
' → logprob: -3.1853928565979004
    8. '[' → logprob: -3.4353928565979004
    9. '
' → logprob: -3.5603928565979004
    10. '  
' → logprob: -4.5603928565979

Token 1064: '20' (ID: 455)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40798649191856384
    2. ''' → logprob: -1.5329865217208862
    3. 'b' → logprob: -3.5329864025115967
    4. '204' → logprob: -4.032986640930176
    5. '\n' → logprob: -4.407986640930176
    6. '205' → logprob: -5.657986640930176
    7. ' b' → logprob: -5.657986640930176
    8. '\' → logprob: -5.657986640930176
    9. '200' → logprob: -5.782986640930176
    10. '   ' → logprob: -5.907986640930176

Token 1065: ' million' (ID: 5749)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '24' → logprob: -0.3285236656665802
    2. '48' → logprob: -2.328523635864258
    3. '00' → logprob: -2.828523635864258
    4. '4' → logprob: -4.078523635864258
    5. '   ' → logprob: -4.328523635864258
    6. ',' → logprob: -4.328523635864258
    7. '
' → logprob: -4.453523635864258
    8. '       ' → logprob: -4.453523635864258
    9. '0' → logprob: -4.578523635864258
    10. '^' → logprob: -5.078523635864258

Token 1066: ' bo' (ID: 1581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5528057813644409
    2. '
' → logprob: -0.9278057813644409
    3. '[' → logprob: -4.9278059005737305
    4. '[
' → logprob: -5.1778059005737305
    5. '        
' → logprob: -5.3028059005737305
    6. '   ' → logprob: -6.4278059005737305
    7. '```' → logprob: -6.6778059005737305
    8. '[n' → logprob: -7.0528059005737305
    9. ',' → logprob: -7.3028059005737305
    10. ':
' → logprob: -7.4278059005737305

Token 1067: 'ole' (ID: 1491)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.5519118309020996
    2. 'olean' → logprob: -1.8019118309020996
    3. '
' → logprob: -2.5519118309020996
    4. '0' → logprob: -3.6769118309020996
    5. 'w' → logprob: -3.8019118309020996
    6. '   ' → logprob: -3.9269118309020996
    7. '\' → logprob: -4.1769118309021
    8. 'OLEAN' → logprob: -4.4269118309021
    9. 'b' → logprob: -4.5519118309021
    10. '[' → logprob: -4.8019118309021

Token 1068: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.28158995509147644
    2. 'an' → logprob: -1.4065899848937988
    3. 'a' → logprob: -8.65658950805664
    4. '
' → logprob: -9.90658950805664
    5. '       ' → logprob: -10.78158950805664
    6. '#' → logprob: -10.90658950805664
    7. '   ' → logprob: -10.90658950805664
    8. 'at' → logprob: -11.65658950805664
    9. ']' → logprob: -11.90658950805664
    10. 'al' → logprob: -11.90658950805664

Token 1069: ' ->' (ID: 2747)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5928593277931213
    2. '       ' → logprob: -0.8428593277931213
    3. '        
' → logprob: -5.467859268188477
    4. '           ' → logprob: -5.592859268188477
    5. '\n' → logprob: -6.467859268188477
    6. ':
' → logprob: -6.717859268188477
    7. '                   ' → logprob: -6.717859268188477
    8. '   ' → logprob: -6.967859268188477
    9. '    
' → logprob: -7.342859268188477
    10. '               ' → logprob: -7.592859268188477

Token 1070: ' can' (ID: 665)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6651402115821838
    2. ' False' → logprob: -1.290140151977539
    3. '
' → logprob: -3.540140151977539
    4. 'False' → logprob: -3.540140151977539
    5. 'True' → logprob: -3.665140151977539
    6. ' bool' → logprob: -4.540140151977539
    7. ' bytes' → logprob: -4.540140151977539
    8. '\n' → logprob: -4.790140151977539
    9. ' can' → logprob: -4.915140151977539
    10. '[' → logprob: -4.915140151977539

Token 1071: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.05865414813160896
    2. '
' → logprob: -4.308654308319092
    3. '```' → logprob: -4.433654308319092
    4. '\n' → logprob: -4.558654308319092
    5. '[' → logprob: -5.933654308319092
    6. ' ' → logprob: -6.183654308319092
    7. '[]' → logprob: -6.183654308319092
    8. ' ' → logprob: -6.308654308319092
    9. ' 
' → logprob: -6.933654308319092
    10. ' =' → logprob: -6.933654308319092

Token 1072: ' too' (ID: 3101)
  Prédit: 'compressed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compressed' → logprob: -0.6290441155433655
    2. 'packed' → logprob: -1.8790440559387207
    3. '```' → logprob: -2.2540440559387207
    4. 'stored' → logprob: -3.0040440559387207
    5. ' stored' → logprob: -3.3790440559387207
    6. ' compressed' → logprob: -3.3790440559387207
    7. 'optimized' → logprob: -3.8790440559387207
    8. 'byte' → logprob: -4.379044055938721
    9. ' optimized' → logprob: -4.629044055938721
    10. 'import' → logprob: -4.629044055938721

Token 1073: ' big' (ID: 3464)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6502731442451477
    2. '```' → logprob: -1.775273084640503
    3. '\n' → logprob: -2.650273084640503
    4. '``' → logprob: -2.775273084640503
    5. '
' → logprob: -3.150273084640503
    6. '[' → logprob: -3.775273084640503
    7. 'n' → logprob: -3.900273084640503
    8. ' ' → logprob: -4.525273323059082
    9. '\t' → logprob: -4.900273323059082
    10. '  
' → logprob: -5.150273323059082

Token 1074: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6638255715370178
    2. '
' → logprob: -1.163825511932373
    3. '[
' → logprob: -3.413825511932373
    4. '[' → logprob: -3.413825511932373
    5. '   ' → logprob: -3.538825511932373
    6. '\n' → logprob: -3.913825511932373
    7. ',' → logprob: -4.413825511932373
    8. '\' → logprob: -4.538825511932373
    9. '_' → logprob: -5.413825511932373
    10. '```' → logprob: -5.413825511932373

Token 1075: ' memory' (ID: 8197)
  Prédit: ' memory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memory' → logprob: -1.2787580490112305
    2. 'memory' → logprob: -1.2787580490112305
    3. ' code' → logprob: -1.4037580490112305
    4. ' Python' → logprob: -2.7787580490112305
    5. 'Python' → logprob: -3.0287580490112305
    6. ' bytes' → logprob: -4.0287580490112305
    7. 'bytes' → logprob: -4.5287580490112305
    8. 'python' → logprob: -4.6537580490112305
    9. 'code' → logprob: -4.7787580490112305
    10. ' C' → logprob: -5.0287580490112305

Token 1076: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29833927750587463
    2. '       ' → logprob: -1.4233392477035522
    3. '\n' → logprob: -6.048339366912842
    4. '[
' → logprob: -6.048339366912842
    5. ',' → logprob: -6.423339366912842
    6. '[' → logprob: -6.548339366912842
    7. '```' → logprob: -6.673339366912842
    8. ',
' → logprob: -6.798339366912842
    9. '   ' → logprob: -6.923339366912842
    10. '[n' → logprob: -7.298339366912842

Token 1077: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5329048037528992
    2. '       ' → logprob: -0.9079048037528992
    3. '        
' → logprob: -6.032904624938965
    4. '\n' → logprob: -6.407904624938965
    5. ',
' → logprob: -7.282904624938965
    6. '`
' → logprob: -7.282904624938965
    7. ',' → logprob: -7.407904624938965
    8. '```' → logprob: -7.407904624938965
    9. '

' → logprob: -7.532904624938965
    10. '   ' → logprob: -7.907904624938965

Token 1078: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5307013988494873
    2. '       ' → logprob: -0.9057013988494873
    3. '\n' → logprob: -5.655701637268066
    4. '        
' → logprob: -6.155701637268066
    5. '`
' → logprob: -7.405701637268066
    6. '   ' → logprob: -8.405701637268066
    7. '[' → logprob: -8.530701637268066
    8. '

' → logprob: -8.905701637268066
    9. '"\' → logprob: -9.280701637268066
    10. '    
' → logprob: -9.405701637268066

Token 1079: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3502763509750366
    2. '
' → logprob: -1.2252763509750366
    3. '        
' → logprob: -6.850276470184326
    4. '   ' → logprob: -8.475275993347168
    5. '```' → logprob: -8.725275993347168
    6. 'import' → logprob: -9.225275993347168
    7. '    
' → logprob: -9.475275993347168
    8. '

' → logprob: -9.475275993347168
    9. '`
' → logprob: -9.975275993347168
    10. '\
' → logprob: -10.975275993347168

Token 1080: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5769169926643372
    2. '       ' → logprob: -0.8269169926643372
    3. '```' → logprob: -7.7019171714782715
    4. '        
' → logprob: -7.8269171714782715
    5. '

' → logprob: -10.201916694641113
    6. 'import' → logprob: -10.201916694641113
    7. '``' → logprob: -11.826916694641113
    8. '
' → logprob: -11.826916694641113
    9. '\
' → logprob: -12.201916694641113
    10. '   ' → logprob: -12.326916694641113

Token 1081: ' Optimization' (ID: 78012)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22682149708271027
    2. '
' → logprob: -1.6018215417861938
    3. '        
' → logprob: -7.351821422576904
    4. 'import' → logprob: -8.226821899414062
    5. 'dp' → logprob: -8.476821899414062
    6. '

' → logprob: -8.976821899414062
    7. '   ' → logprob: -9.601821899414062
    8. '    
' → logprob: -11.351821899414062
    9. '           ' → logprob: -11.601821899414062
    10. '#' → logprob: -11.726821899414062

Token 1082: ':
' (ID: 734)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.0854016542434692
    2. '[' → logprob: -1.7104016542434692
    3. '_' → logprob: -2.2104015350341797
    4. '
' → logprob: -2.5854015350341797
    5. ' =' → logprob: -2.7104015350341797
    6. '_
' → logprob: -2.9604015350341797
    7. '   ' → logprob: -3.2104015350341797
    8. ':' → logprob: -3.2104015350341797
    9. '       ' → logprob: -3.7104015350341797
    10. ':
' → logprob: -4.33540153503418

Token 1083: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03348558768630028
    2. '
' → logprob: -3.5334856510162354
    3. '        
' → logprob: -5.783485412597656
    4. '```' → logprob: -9.283485412597656
    5. '`' → logprob: -9.783485412597656
    6. '           ' → logprob: -9.908485412597656
    7. '#' → logprob: -9.908485412597656
    8. 'import' → logprob: -10.283485412597656
    9. 'Let's' → logprob: -10.408485412597656
    10. '`
' → logprob: -10.533485412597656

Token 1084: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020974453072994947
    2. '
' → logprob: -7.0020976066589355
    3. '        
' → logprob: -8.252097129821777
    4. 'from' → logprob: -8.377097129821777
    5. '   ' → logprob: -9.127097129821777
    6. ' from' → logprob: -9.377097129821777
    7. '      ' → logprob: -9.502097129821777
    8. '        ' → logprob: -9.752097129821777
    9. '#' (adapté à ' #') → logprob: -9.752097129821777
    10. '           ' → logprob: -9.877097129821777

Token 1085: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06082463264465332
    2. 'from' → logprob: -4.060824394226074
    3. '
' → logprob: -4.560824394226074
    4. '#' → logprob: -4.810824394226074
    5. 'dp' → logprob: -4.810824394226074
    6. '   ' → logprob: -6.310824394226074
    7. 'import' → logprob: -6.560824394226074
    8. 'prev' → logprob: -6.560824394226074
    9. ' from' → logprob: -6.810824394226074
    10. 'for' → logprob: -6.935824394226074

Token 1086: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.47029489278793335
    2. 'dp' → logprob: -1.7202949523925781
    3. 'import' → logprob: -2.595294952392578
    4. '       ' → logprob: -3.220294952392578
    5. '#' → logprob: -3.470294952392578
    6. 'visited' → logprob: -4.095294952392578
    7. 'for' → logprob: -5.095294952392578
    8. '
' → logprob: -5.220294952392578
    9. ' from' → logprob: -5.220294952392578
    10. 'prev' → logprob: -5.345294952392578

Token 1087: ' store' (ID: 4897)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.656316339969635
    2. 'can' → logprob: -1.6563162803649902
    3. ' use' → logprob: -2.5313162803649902
    4. 'use' → logprob: -2.6563162803649902
    5. ' will' → logprob: -3.2813162803649902
    6. 'import' → logprob: -3.5313162803649902
    7. '
' → logprob: -4.15631628036499
    8. '#' → logprob: -4.53131628036499
    9. '       ' → logprob: -4.90631628036499
    10. 'will' → logprob: -4.90631628036499

Token 1088: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.35343441367149353
    2. '[' → logprob: -2.2284343242645264
    3. '       ' → logprob: -2.6034343242645264
    4. '[
' → logprob: -3.2284343242645264
    5. '
' → logprob: -3.9784343242645264
    6. ' dp' → logprob: -4.6034345626831055
    7. '[]' → logprob: -4.8534345626831055
    8. '   ' → logprob: -5.3534345626831055
    9. ' ' → logprob: -5.6034345626831055
    10. ' only' → logprob: -5.6034345626831055

Token 1089: ' only' (ID: 1606)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21993832290172577
    2. '   ' → logprob: -2.469938278198242
    3. '=' → logprob: -2.719938278198242
    4. '       ' → logprob: -3.844938278198242
    5. ' ' → logprob: -4.844938278198242
    6. '[' → logprob: -5.719938278198242
    7. '.append' → logprob: -5.844938278198242
    8. '_' → logprob: -5.844938278198242
    9. ',' → logprob: -6.844938278198242
    10. '_prev' → logprob: -7.094938278198242

Token 1090: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8333370089530945
    2. '=' → logprob: -1.7083370685577393
    3. '   ' → logprob: -2.0833370685577393
    4. ' =' → logprob: -2.5833370685577393
    5. '[
' → logprob: -3.0833370685577393
    6. '_' → logprob: -3.8333370685577393
    7. '       ' → logprob: -4.08333683013916
    8. 'prev' → logprob: -4.08333683013916
    9. 'current' → logprob: -4.58333683013916
    10. 'n' → logprob: -4.58333683013916

Token 1091: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8141716718673706
    2. 'current' → logprob: -1.1891716718673706
    3. ' positions' → logprob: -2.18917179107666
    4. ' current' → logprob: -2.81417179107666
    5. 'the' → logprob: -3.81417179107666
    6. 'two' → logprob: -3.93917179107666
    7. ' two' → logprob: -4.31417179107666
    8. ' the' → logprob: -4.56417179107666
    9. '   ' → logprob: -5.43917179107666
    10. 'previous' → logprob: -5.81417179107666

Token 1092: ' from' (ID: 591)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.623772919178009
    2. '_' → logprob: -1.6237728595733643
    3. '[
' → logprob: -2.7487728595733643
    4. '   ' → logprob: -2.9987728595733643
    5. '=' → logprob: -3.3737728595733643
    6. '```' → logprob: -3.7487728595733643
    7. '       ' → logprob: -4.123773097991943
    8. ' =' → logprob: -4.248773097991943
    9. '[]' → logprob: -4.748773097991943
    10. '
' → logprob: -4.873773097991943

Token 1093: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.362625390291214
    2. 'pos' → logprob: -2.6126253604888916
    3. '[' → logprob: -3.1126253604888916
    4. '`' → logprob: -3.6126253604888916
    5. '[]
' → logprob: -3.9876253604888916
    6. 'prev' → logprob: -3.9876253604888916
    7. 'previous' → logprob: -4.362625598907471
    8. '1' → logprob: -4.362625598907471
    9. 'i' → logprob: -4.612625598907471
    10. 'positions' → logprob: -4.612625598907471

Token 1094: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29997771978378296
    2. '[' → logprob: -2.9249777793884277
    3. 'pos' → logprob: -3.1749777793884277
    4. '`' → logprob: -3.2999777793884277
    5. 'prev' → logprob: -3.4249777793884277
    6. 'position' → logprob: -3.7999777793884277
    7. 'previous' → logprob: -4.424977779388428
    8. '[]
' → logprob: -4.549977779388428
    9. 'dp' → logprob: -4.799977779388428
    10. 'positions' → logprob: -5.049977779388428

Token 1095: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6554441452026367
    2. '
' → logprob: -2.1554441452026367
    3. '```' → logprob: -2.5304441452026367
    4. '   ' → logprob: -3.1554441452026367
    5. '``' → logprob: -3.1554441452026367
    6. ',' → logprob: -3.2804441452026367
    7. 'to' → logprob: -3.4054441452026367
    8. '       ' → logprob: -3.5304441452026367
    9. '`' → logprob: -3.6554441452026367
    10. '[' → logprob: -4.155444145202637

Token 1096: ' len' (ID: 4631)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.609432578086853
    2. 'i' → logprob: -1.109432578086853
    3. 'n' → logprob: -3.4844326972961426
    4. 'len' → logprob: -3.8594326972961426
    5. '500' → logprob: -3.8594326972961426
    6. '`' → logprob: -4.484432697296143
    7. ' text' → logprob: -4.859432697296143
    8. 'pos' → logprob: -4.859432697296143
    9. '0' → logprob: -5.234432697296143
    10. '   ' → logprob: -5.734432697296143

Token 1097: '(text' (ID: 13414)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.40556541085243225
    2. '(text' → logprob: -1.1555653810501099
    3. ' text' → logprob: -5.15556526184082
    4. '
' → logprob: -5.78056526184082
    5. 'ext' → logprob: -6.40556526184082
    6. 'dp' → logprob: -6.40556526184082
    7. '(dp' → logprob: -6.53056526184082
    8. '(' → logprob: -6.90556526184082
    9. 't' → logprob: -7.03056526184082
    10. '```' → logprob: -7.53056526184082

Token 1098: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06549550592899323
    2. ' +' → logprob: -3.690495491027832
    3. '
' → logprob: -4.565495491027832
    4. ']' → logprob: -4.690495491027832
    5. '+
' → logprob: -5.565495491027832
    6. '```' → logprob: -5.565495491027832
    7. ')' → logprob: -5.815495491027832
    8. '       ' → logprob: -6.815495491027832
    9. ')
' → logprob: -7.065495491027832
    10. '   ' → logprob: -7.065495491027832

Token 1099: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04017559438943863
    2. '
' → logprob: -3.540175676345825
    3. '```' → logprob: -5.665175437927246
    4. ',' → logprob: -6.290175437927246
    5. '[' → logprob: -6.540175437927246
    6. '   ' → logprob: -7.790175437927246
    7. '_' → logprob: -7.790175437927246
    8. '`' → logprob: -7.790175437927246
    9. '           ' → logprob: -7.790175437927246
    10. '        
' → logprob: -7.790175437927246

Token 1100: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1674920618534088
    2. '
' → logprob: -1.9174920320510864
    3. '        
' → logprob: -6.167491912841797
    4. '\n' → logprob: -6.542491912841797
    5. '   ' → logprob: -6.792491912841797
    6. '`
' → logprob: -7.292491912841797
    7. '```' → logprob: -8.167491912841797
    8. '           ' → logprob: -8.542491912841797
    9. '\' → logprob: -8.667491912841797
    10. ',' → logprob: -8.667491912841797

Token 1101: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.435457468032837
    2. '[' → logprob: -1.685457468032837
    3. '   ' → logprob: -2.060457468032837
    4. '
' → logprob: -2.060457468032837
    5. '_' → logprob: -2.185457468032837
    6. '_
' → logprob: -3.185457468032837
    7. '```' → logprob: -3.685457468032837
    8. ',' → logprob: -3.685457468032837
    9. '\n' → logprob: -3.810457468032837
    10. '`' → logprob: -4.185457229614258

Token 1102: ' For' (ID: 2214)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8792691826820374
    2. '       ' → logprob: -1.8792691230773926
    3. '[' → logprob: -2.6292691230773926
    4. '#' → logprob: -3.0042691230773926
    5. 'dp' → logprob: -3.0042691230773926
    6. '[
' → logprob: -3.3792691230773926
    7. '\n' → logprob: -3.6292691230773926
    8. '   ' → logprob: -3.6292691230773926
    9. ' 
' → logprob: -3.7542691230773926
    10. ' ' → logprob: -4.379269123077393

Token 1103: ' each' (ID: 2454)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5972281694412231
    2. '   ' → logprob: -1.5972281694412231
    3. 'i' → logprob: -2.3472280502319336
    4. '
' → logprob: -2.3472280502319336
    5. '       ' → logprob: -2.9722280502319336
    6. ' each' → logprob: -3.0972280502319336
    7. 'pos' → logprob: -3.0972280502319336
    8. ' i' → logprob: -3.3472280502319336
    9. 'n' → logprob: -3.4722280502319336
    10. 'dp' → logprob: -3.5972280502319336

Token 1104: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.6913414597511292
    2. 'pos' → logprob: -1.0663414001464844
    3. ' position' → logprob: -2.4413414001464844
    4. '```' → logprob: -3.9413414001464844
    5. '`' → logprob: -4.441341400146484
    6. ' pos' → logprob: -5.441341400146484
    7. '   ' → logprob: -5.691341400146484
    8. '       ' → logprob: -5.816341400146484
    9. 'i' → logprob: -6.066341400146484
    10. 'dp' → logprob: -6.191341400146484

Token 1105: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3685524463653564
    2. ',' → logprob: -1.4935524463653564
    3. '
' → logprob: -1.6185524463653564
    4. '_' → logprob: -2.4935524463653564
    5. '[' → logprob: -2.4935524463653564
    6. ':' → logprob: -3.7435524463653564
    7. '][' → logprob: -3.7435524463653564
    8. '```' → logprob: -3.7435524463653564
    9. '   ' → logprob: -4.493552207946777
    10. ']' → logprob: -4.493552207946777

Token 1106: ' store' (ID: 4897)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.321738064289093
    2. '
' → logprob: -2.4467380046844482
    3. '   ' → logprob: -3.3217380046844482
    4. '`' → logprob: -3.6967380046844482
    5. '[' → logprob: -4.321738243103027
    6. '```' → logprob: -4.446738243103027
    7. ' 
' → logprob: -4.571738243103027
    8. '           ' → logprob: -4.571738243103027
    9. '        
' → logprob: -4.571738243103027
    10. '_' → logprob: -4.946738243103027

Token 1107: ' a' (ID: 261)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.9752068519592285
    2. '```' → logprob: -2.2252068519592285
    3. ' only' → logprob: -2.3502068519592285
    4. 'dp' → logprob: -2.3502068519592285
    5. 'a' → logprob: -2.7252068519592285
    6. ' a' → logprob: -2.9752068519592285
    7. '[
' → logprob: -2.9752068519592285
    8. '[' → logprob: -3.1002068519592285
    9. '`' → logprob: -3.2252068519592285
    10. '[]
' → logprob: -3.2252068519592285

Token 1108: ' dict' (ID: 11878)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.8329718112945557
    2. 'bit' → logprob: -1.4579718112945557
    3. '
' → logprob: -2.3329718112945557
    4. 'dict' → logprob: -2.7079718112945557
    5. 'set' → logprob: -2.9579718112945557
    6. 's' → logprob: -3.5829718112945557
    7. ' bit' → logprob: -3.8329718112945557
    8. 'list' → logprob: -3.9579718112945557
    9. '`' → logprob: -5.207971572875977
    10. 'byte' → logprob: -5.332971572875977

Token 1109: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30206501483917236
    2. '{' → logprob: -2.927064895629883
    3. '   ' → logprob: -3.052064895629883
    4. ' =' → logprob: -3.177064895629883
    5. '=' → logprob: -3.927064895629883
    6. '```' → logprob: -3.927064895629883
    7. '
' → logprob: -4.302064895629883
    8. '[' → logprob: -4.677064895629883
    9. '           ' → logprob: -5.052064895629883
    10. ']' → logprob: -5.427064895629883

Token 1110: ' bit' (ID: 3546)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.15298627316951752
    2. 'default' → logprob: -2.2779862880706787
    3. 'set' → logprob: -3.6529862880706787
    4. ' list' → logprob: -4.6529860496521
    5. 'bit' → logprob: -6.7779860496521
    6. '
' → logprob: -7.4029860496521
    7. ' defaultdict' → logprob: -7.5279860496521
    8. 'array' → logprob: -7.7779860496521
    9. '       ' → logprob: -8.277986526489258
    10. 'byte' → logprob: -8.402986526489258

Token 1111: 'set' (ID: 977)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.4852874279022217
    2. 'set' → logprob: -1.1102874279022217
    3. 'mask' → logprob: -2.9852874279022217
    4. '   ' → logprob: -6.360287666320801
    5. 'm' → logprob: -7.110287666320801
    6. '
' → logprob: -7.985287666320801
    7. 'arrays' → logprob: -8.1102876663208
    8. 's' → logprob: -8.4852876663208
    9. '```' → logprob: -8.4852876663208
    10. ' array' → logprob: -8.8602876663208

Token 1112: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4679500162601471
    2. '   ' → logprob: -2.2179501056671143
    3. '[' → logprob: -2.3429501056671143
    4. '[
' → logprob: -3.0929501056671143
    5. '_' → logprob: -3.7179501056671143
    6. '```' → logprob: -3.7179501056671143
    7. '`' → logprob: -4.217949867248535
    8. '``' → logprob: -4.842949867248535
    9. 's' → logprob: -5.092949867248535
    10. '{' → logprob: -5.217949867248535

Token 1113: ' mask' (ID: 10910)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.28551772236824036
    2. 'mask' → logprob: -2.410517692565918
    3. 'dp' → logprob: -3.160517692565918
    4. ' masks' → logprob: -3.410517692565918
    5. ' the' → logprob: -4.285517692565918
    6. ' mask' → logprob: -4.660517692565918
    7. ' dp' → logprob: -4.660517692565918
    8. 'positions' → logprob: -4.910517692565918
    9. ' True' → logprob: -5.035517692565918
    10. 'pos' → logprob: -5.285517692565918

Token 1114: ' states' (ID: 9407)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07293758541345596
    2. '
' → logprob: -2.822937488555908
    3. '   ' → logprob: -5.322937488555908
    4. '           ' → logprob: -6.822937488555908
    5. '        
' → logprob: -6.822937488555908
    6. '`' → logprob: -7.572937488555908
    7. '_' → logprob: -7.822937488555908
    8. ',' → logprob: -7.947937488555908
    9. '```' → logprob: -7.947937488555908
    10. '[' → logprob: -8.072937965393066

Token 1115: ' reachable' (ID: 143580)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11879231780767441
    2. '
' → logprob: -3.1187922954559326
    3. '   ' → logprob: -3.7437922954559326
    4. '[' → logprob: -4.493792533874512
    5. ',' → logprob: -4.868792533874512
    6. ']' → logprob: -5.868792533874512
    7. '_' → logprob: -5.868792533874512
    8. '[
' → logprob: -5.993792533874512
    9. '`' → logprob: -6.243792533874512
    10. '```' → logprob: -6.618792533874512

Token 1116: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14746759831905365
    2. '
' → logprob: -2.022467613220215
    3. ' =' → logprob: -6.772467613220215
    4. ',' → logprob: -7.022467613220215
    5. '           ' → logprob: -7.647467613220215
    6. '   ' → logprob: -7.647467613220215
    7. '        
' → logprob: -7.772467613220215
    8. '[' → logprob: -8.772467613220215
    9. '
' → logprob: -8.897467613220215
    10. '=' → logprob: -9.272467613220215

Token 1117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004016310907900333
    2. '
' → logprob: -5.629016399383545
    3. '        
' → logprob: -8.504015922546387
    4. '           ' → logprob: -9.379015922546387
    5. '   ' → logprob: -10.129015922546387
    6. '`' → logprob: -10.254015922546387
    7. '```' → logprob: -10.504015922546387
    8. '    
' → logprob: -12.254015922546387
    9. '`
' → logprob: -12.254015922546387
    10. 'dp' → logprob: -12.504015922546387

Token 1118: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14395040273666382
    2. '
' → logprob: -2.0189504623413086
    3. '        
' → logprob: -6.893950462341309
    4. '   ' → logprob: -9.643950462341309
    5. '```' → logprob: -9.643950462341309
    6. '           ' → logprob: -10.393950462341309
    7. '\n' → logprob: -10.518950462341309
    8. '    
' → logprob: -10.768950462341309
    9. '`' → logprob: -11.643950462341309
    10. ' 
' → logprob: -11.893950462341309

Token 1119: ' Using' (ID: 17511)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47761374711990356
    2. '       ' → logprob: -0.9776137471199036
    3. '        
' → logprob: -5.852613925933838
    4. '```' → logprob: -8.47761344909668
    5. '    
' → logprob: -9.60261344909668
    6. '   ' → logprob: -9.60261344909668
    7. '`
' → logprob: -9.72761344909668
    8. '           ' → logprob: -10.10261344909668
    9. '`' → logprob: -10.10261344909668
    10. ' 
' → logprob: -10.22761344909668

Token 1120: ' a' (ID: 261)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6425959467887878
    2. 'default' → logprob: -1.8925960063934326
    3. 'a' → logprob: -2.1425960063934326
    4. 'byte' → logprob: -2.6425960063934326
    5. 'list' → logprob: -3.2675960063934326
    6. ' bit' → logprob: -3.6425960063934326
    7. 'array' → logprob: -3.8925960063934326
    8. ' a' → logprob: -4.3925957679748535
    9. '[]' → logprob: -4.7675957679748535
    10. '
' → logprob: -5.2675957679748535

Token 1121: ' queue' (ID: 13661)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6480103135108948
    2. 'default' → logprob: -1.14801025390625
    3. ' list' → logprob: -2.39801025390625
    4. 'bit' → logprob: -3.27301025390625
    5. 'byte' → logprob: -4.52301025390625
    6. ' bit' → logprob: -5.52301025390625
    7. '
' → logprob: -5.64801025390625
    8. '`' → logprob: -6.02301025390625
    9. ' defaultdict' → logprob: -6.39801025390625
    10. 'array' → logprob: -6.52301025390625

Token 1122: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6265002489089966
    2. ' =' → logprob: -1.3765002489089966
    3. '=' → logprob: -2.251500129699707
    4. ',' → logprob: -3.501500129699707
    5. '   ' → logprob: -3.751500129699707
    6. '
' → logprob: -5.251500129699707
    7. ':' → logprob: -5.376500129699707
    8. ':
' → logprob: -5.751500129699707
    9. 'import' → logprob: -5.751500129699707
    10. ' to' → logprob: -5.751500129699707

Token 1123: ' BFS' (ID: 190016)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.147899329662323
    2. '
' → logprob: -3.7728993892669678
    3. ' dp' → logprob: -3.7728993892669678
    4. '   ' → logprob: -3.8978993892669678
    5. ' bfs' → logprob: -4.147899150848389
    6. 'b' → logprob: -4.272899150848389
    7. 'visited' → logprob: -4.772899150848389
    8. ' BFS' → logprob: -4.897899150848389
    9. ' states' → logprob: -5.522899150848389
    10. ' ' → logprob: -6.272899150848389

Token 1124: ' style' (ID: 2713)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7530550360679626
    2. '
' → logprob: -1.3780550956726074
    3. ':
' → logprob: -2.1280550956726074
    4. '   ' → logprob: -2.6280550956726074
    5. ':' → logprob: -3.1280550956726074
    6. ' =' → logprob: -4.253055095672607
    7. '()
' → logprob: -5.628055095672607
    8. ',' → logprob: -5.878055095672607
    9. '=' → logprob: -5.878055095672607
    10. '```' → logprob: -6.003055095672607

Token 1125: ' DP' (ID: 51992)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9059681296348572
    2. '   ' → logprob: -1.655968189239502
    3. '[' → logprob: -2.405968189239502
    4. '
' → logprob: -2.530968189239502
    5. '_' → logprob: -2.780968189239502
    6. '```' → logprob: -3.155968189239502
    7. ':' → logprob: -4.280968189239502
    8. '[
' → logprob: -4.530968189239502
    9. ' =' → logprob: -4.530968189239502
    10. '`' → logprob: -4.530968189239502

Token 1126: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35275089740753174
    2. '
' → logprob: -1.2277508974075317
    3. '        
' → logprob: -5.852750778198242
    4. '```' → logprob: -7.852750778198242
    5. '   ' → logprob: -7.977750778198242
    6. '    
' → logprob: -9.227750778198242
    7. '
' → logprob: -9.602750778198242
    8. '`
' → logprob: -9.727750778198242
    9. '           ' → logprob: -9.852750778198242
    10. 'from' → logprob: -9.852750778198242

Token 1127: ' states' (ID: 9407)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.0746046304702759
    2. ' states' → logprob: -1.6996046304702759
    3. 'dp' → logprob: -1.9496046304702759
    4. ' dp' → logprob: -2.0746045112609863
    5. 'positions' → logprob: -2.3246045112609863
    6. ' the' → logprob: -2.5746045112609863
    7. 'states' → logprob: -4.324604511260986
    8. 'the' → logprob: -4.449604511260986
    9. ' masks' → logprob: -6.824604511260986
    10. ' each' → logprob: -6.824604511260986

Token 1128: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31856420636177063
    2. '
' → logprob: -1.3185641765594482
    3. '        
' → logprob: -6.443564414978027
    4. '   ' → logprob: -6.693564414978027
    5. ' =' → logprob: -7.693564414978027
    6. '```' → logprob: -7.818564414978027
    7. ',' → logprob: -7.943564414978027
    8. '           ' → logprob: -8.068564414978027
    9. '=' → logprob: -9.193564414978027
    10. '`' → logprob: -9.318564414978027

Token 1129: 'position' (ID: 4504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2327439934015274
    2. '       ' → logprob: -2.482743978500366
    3. ')
' → logprob: -3.482743978500366
    4. '   ' → logprob: -3.857743978500366
    5. '`' → logprob: -4.857744216918945
    6. '
' → logprob: -4.857744216918945
    7. '```' → logprob: -4.857744216918945
    8. ' )' → logprob: -5.107744216918945
    9. '):
' → logprob: -5.232744216918945
    10. ',' → logprob: -5.357744216918945

Token 1130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1554797887802124
    2. '[' → logprob: -2.655479907989502
    3. ')' → logprob: -3.405479907989502
    4. ',
' → logprob: -4.655479907989502
    5. '[
' → logprob: -4.905479907989502
    6. '   ' → logprob: -5.530479907989502
    7. '       ' → logprob: -5.530479907989502
    8. '```' → logprob: -5.655479907989502
    9. '
' → logprob: -5.905479907989502
    10. '+' → logprob: -6.155479907989502

Token 1131: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.014053969644010067
    2. ',' → logprob: -4.389053821563721
    3. ' mask' → logprob: -7.014053821563721
    4. ')' → logprob: -8.514054298400879
    5. '   ' → logprob: -9.389054298400879
    6. 'm' → logprob: -9.639054298400879
    7. '
' → logprob: -9.764054298400879
    8. 'state' → logprob: -10.389054298400879
    9. ' ,' → logprob: -10.389054298400879
    10. ',
' → logprob: -10.389054298400879

Token 1132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5134839415550232
    2. ',' → logprob: -1.263484001159668
    3. '       ' → logprob: -3.513484001159668
    4. ',
' → logprob: -3.638484001159668
    5. ')
' → logprob: -3.763484001159668
    6. '):
' → logprob: -4.263484001159668
    7. '):' → logprob: -4.513484001159668
    8. '   ' → logprob: -5.513484001159668
    9. '_' → logprob: -6.388484001159668
    10. '[' → logprob: -6.513484001159668

Token 1133: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7049458026885986
    2. '       ' → logprob: -0.7049458026885986
    3. ',' → logprob: -6.2049455642700195
    4. '        
' → logprob: -6.3299455642700195
    5. ',
' → logprob: -6.4549455642700195
    6. '   ' → logprob: -6.5799455642700195
    7. ')
' → logprob: -6.8299455642700195
    8. ')' → logprob: -7.0799455642700195
    9. '    
' → logprob: -7.5799455642700195
    10. ':
' → logprob: -8.07994556427002

Token 1134: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12139730900526047
    2. '       ' → logprob: -2.2463972568511963
    3. '   ' → logprob: -5.246397495269775
    4. '        
' → logprob: -6.746397495269775
    5. '    
' → logprob: -6.996397495269775
    6. ',
' → logprob: -7.746397495269775
    7. ',' → logprob: -8.746397018432617
    8. ' 
' → logprob: -9.621397018432617
    9. '
' → logprob: -9.871397018432617
    10. ')' → logprob: -9.996397018432617

Token 1135: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012460798025131226
    2. '       ' → logprob: -4.512460708618164
    3. '        
' → logprob: -7.512460708618164
    4. '    
' → logprob: -7.887460708618164
    5. '   ' → logprob: -8.137460708618164
    6. '```' → logprob: -9.262460708618164
    7. '  
' → logprob: -10.762460708618164
    8. ' 
' → logprob: -10.762460708618164
    9. '

' → logprob: -11.512460708618164
    10. '`
' → logprob: -11.637460708618164

Token 1136: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41453447937965393
    2. '   ' → logprob: -1.6645344495773315
    3. '       ' → logprob: -1.9145344495773315
    4. '    
' → logprob: -6.789534568786621
    5. 'from' → logprob: -7.664534568786621
    6. '        
' → logprob: -7.664534568786621
    7. 'dp' → logprob: -8.164534568786621
    8. 'visited' → logprob: -8.539534568786621
    9. '```' → logprob: -10.289534568786621
    10. 'queue' → logprob: -10.539534568786621

Token 1137: ' This' (ID: 1328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7308321595191956
    2. 'visited' → logprob: -1.4808320999145508
    3. '       ' → logprob: -1.7308320999145508
    4. '
' → logprob: -2.355832099914551
    5. 'dp' → logprob: -4.230832099914551
    6. 'queue' → logprob: -6.230832099914551
    7. 'from' → logprob: -6.480832099914551
    8. '    
' → logprob: -7.605832099914551
    9. '        
' → logprob: -8.35583209991455
    10. 'seen' → logprob: -9.23083209991455

Token 1138: ' reduces' (ID: 38566)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4818337857723236
    2. ' is' → logprob: -2.1068336963653564
    3. ' will' → logprob: -3.3568336963653564
    4. '       ' → logprob: -3.4818336963653564
    5. '   ' → logprob: -3.6068336963653564
    6. '_' → logprob: -3.7318336963653564
    7. ' approach' → logprob: -3.7318336963653564
    8. '```' → logprob: -3.9818336963653564
    9. ' continues' → logprob: -4.1068339347839355
    10. ')' → logprob: -4.8568339347839355

Token 1139: ' memory' (ID: 8197)
  Prédit: ' memory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memory' → logprob: -0.7687885165214539
    2. ' the' → logprob: -1.3937885761260986
    3. '
' → logprob: -2.7687885761260986
    4. 'the' → logprob: -3.0187885761260986
    5. 'memory' → logprob: -3.2687885761260986
    6. '```' → logprob: -3.2687885761260986
    7. '(
' → logprob: -3.3937885761260986
    8. ' (' → logprob: -4.6437883377075195
    9. '``' → logprob: -4.8937883377075195
    10. '   ' → logprob: -4.8937883377075195

Token 1140: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.027674674987793
    2. '[
' → logprob: -1.777674674987793
    3. '       ' → logprob: -1.902674674987793
    4. '[' → logprob: -2.777674674987793
    5. '_' → logprob: -2.902674674987793
    6. '   ' → logprob: -3.027674674987793
    7. ',' → logprob: -3.277674674987793
    8. '_
' → logprob: -3.652674674987793
    9. ',
' → logprob: -3.777674674987793
    10. ' =' → logprob: -4.652674674987793

Token 1141: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03563746064901352
    2. '
' → logprob: -3.535637378692627
    3. '        
' → logprob: -6.785637378692627
    4. '   ' → logprob: -7.035637378692627
    5. ',
' → logprob: -7.035637378692627
    6. ',' → logprob: -7.035637378692627
    7. ' and' → logprob: -7.285637378692627
    8. '           ' → logprob: -8.035637855529785
    9. '```' → logprob: -9.285637855529785
    10. ' 
' → logprob: -9.285637855529785

Token 1142: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09421856701374054
    2. '   ' → logprob: -4.219218730926514
    3. 'visited' → logprob: -4.469218730926514
    4. 'from' → logprob: -4.844218730926514
    5. ' we' → logprob: -5.219218730926514
    6. '        ' → logprob: -5.219218730926514
    7. ' visited' → logprob: -5.219218730926514
    8. '
' → logprob: -5.344218730926514
    9. ' ' → logprob: -5.594218730926514
    10. ' from' → logprob: -5.719218730926514

Token 1143: ' only' (ID: 1606)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43045124411582947
    2. ' continue' → logprob: -2.6804511547088623
    3. ' will' → logprob: -3.0554511547088623
    4. ' can' → logprob: -3.1804511547088623
    5. 'continue' → logprob: -3.5554511547088623
    6. '_' → logprob: -3.9304511547088623
    7. ' use' → logprob: -4.430451393127441
    8. ' 
' → logprob: -4.430451393127441
    9. 'push' → logprob: -4.805451393127441
    10. 'enqueue' → logprob: -5.055451393127441

Token 1144: ' store' (ID: 4897)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.325076699256897
    2. 'keep' → logprob: -1.825076699256897
    3. '   ' → logprob: -2.5750765800476074
    4. 'store' → logprob: -2.8250765800476074
    5. 'enqueue' → logprob: -2.8250765800476074
    6. 'process' → logprob: -3.2000765800476074
    7. 'visit' → logprob: -3.2000765800476074
    8. 'need' → logprob: -3.4500765800476074
    9. ' need' → logprob: -3.8250765800476074
    10. ' store' → logprob: -3.8250765800476074

Token 1145: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.13231335580348969
    2. 'states' → logprob: -3.6323132514953613
    3. '
' → logprob: -4.382313251495361
    4. 'a' → logprob: -4.507313251495361
    5. ' states' → logprob: -4.507313251495361
    6. ' visited' → logprob: -4.507313251495361
    7. ' a' → logprob: -4.507313251495361
    8. '```' → logprob: -4.632313251495361
    9. ' (' → logprob: -5.507313251495361
    10. 'current' → logprob: -5.757313251495361

Token 1146: ' states' (ID: 9407)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.31412550806999207
    2. '_' → logprob: -1.6891255378723145
    3. 'states' → logprob: -4.1891255378723145
    4. '   ' → logprob: -4.4391255378723145
    5. ' states' → logprob: -4.4391255378723145
    6. ',' → logprob: -4.8141255378723145
    7. '[' → logprob: -5.0641255378723145
    8. '_positions' → logprob: -5.0641255378723145
    9. '```' → logprob: -5.6891255378723145
    10. '
' → logprob: -5.8141255378723145

Token 1147: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3229297697544098
    2. '       ' → logprob: -1.8229297399520874
    3. ',' → logprob: -3.697929859161377
    4. '   ' → logprob: -4.072929859161377
    5. '```' → logprob: -4.072929859161377
    6. ',
' → logprob: -4.197929859161377
    7. '        
' → logprob: -5.072929859161377
    8. '(' → logprob: -5.447929859161377
    9. ':' → logprob: -5.822929859161377
    10. ':
' → logprob: -5.822929859161377

Token 1148: ' not' (ID: 625)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6032651662826538
    2. '
' → logprob: -0.8532651662826538
    3. '        
' → logprob: -4.353265285491943
    4. ' 
' → logprob: -6.103265285491943
    5. '           ' → logprob: -6.228265285491943
    6. '    
' → logprob: -6.353265285491943
    7. ' and' → logprob: -6.353265285491943
    8. '   ' → logprob: -6.353265285491943
    9. ' (' → logprob: -7.228265285491943
    10. '\n' → logprob: -7.353265285491943

Token 1149: ' the' (ID: 290)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.5210764408111572
    2. 'visited' → logprob: -1.5210764408111572
    3. '
' → logprob: -1.6460764408111572
    4. ' all' → logprob: -1.7710764408111572
    5. ' full' → logprob: -2.5210764408111572
    6. '```' → logprob: -3.6460764408111572
    7. ' visited' → logprob: -4.021076202392578
    8. 'explicit' → logprob: -4.271076202392578
    9. '       ' → logprob: -4.896076202392578
    10. ' a' → logprob: -5.146076202392578

Token 1150: ' full' (ID: 3149)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.08444438129663467
    2. '
' → logprob: -3.959444284439087
    3. '```' → logprob: -4.834444522857666
    4. 'states' → logprob: -5.334444522857666
    5. 'full' → logprob: -5.459444522857666
    6. '(
' → logprob: -5.709444522857666
    7. '{
' → logprob: -5.709444522857666
    8. 'next' → logprob: -5.834444522857666
    9. 'queue' → logprob: -5.834444522857666
    10. ' visited' → logprob: -5.959444522857666

Token 1151: ' dp' (ID: 21546)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6741763949394226
    2. 'visited' → logprob: -0.9241763949394226
    3. ' 
' → logprob: -4.674176216125488
    4. '_' → logprob: -4.674176216125488
    5. 'dp' → logprob: -4.924176216125488
    6. 'set' → logprob: -4.924176216125488
    7. '``' → logprob: -5.049176216125488
    8. ' ' → logprob: -5.049176216125488
    9. '_
' → logprob: -5.299176216125488
    10. 'array' → logprob: -5.299176216125488

Token 1152: ' matrix' (ID: 12248)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06142468377947807
    2. '       ' → logprob: -3.186424732208252
    3. '   ' → logprob: -4.311424732208252
    4. '        
' → logprob: -6.561424732208252
    5. '    
' → logprob: -7.436424732208252
    6. ',
' → logprob: -7.936424732208252
    7. ',' → logprob: -8.061424255371094
    8. '
' → logprob: -8.061424255371094
    9. ')
' → logprob: -8.436424255371094
    10. '_' → logprob: -8.686424255371094

Token 1153: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02327168732881546
    2. '       ' → logprob: -3.8982717990875244
    3. '   ' → logprob: -7.023271560668945
    4. '        
' → logprob: -7.273271560668945
    5. '    
' → logprob: -8.273271560668945
    6. ',
' → logprob: -8.398271560668945
    7. '```' → logprob: -9.023271560668945
    8. ',' → logprob: -9.148271560668945
    9. '
' → logprob: -9.398271560668945
    10. '`
' → logprob: -9.773271560668945

Token 1154: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0031582305673509836
    2. '       ' → logprob: -6.128158092498779
    3. '    
' → logprob: -8.003158569335938
    4. '        
' → logprob: -8.128158569335938
    5. '   ' → logprob: -8.753158569335938
    6. '```' → logprob: -9.503158569335938
    7. '

' → logprob: -10.378158569335938
    8. '`
' → logprob: -10.753158569335938
    9. '  
' → logprob: -11.003158569335938
    10. ' 
' → logprob: -11.628158569335938

Token 1155: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8847673535346985
    2. '
' → logprob: -1.1347672939300537
    3. '   ' → logprob: -1.5097672939300537
    4. 'visited' → logprob: -3.3847672939300537
    5. 'from' → logprob: -5.009767532348633
    6. 'dp' → logprob: -6.009767532348633
    7. '        
' → logprob: -7.759767532348633
    8. '    
' → logprob: -7.884767532348633
    9. 'import' → logprob: -8.259767532348633
    10. '```' → logprob: -8.384767532348633

Token 1156: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.262082040309906
    2. '       ' → logprob: -1.5120820999145508
    3. '   ' → logprob: -5.387082099914551
    4. '        
' → logprob: -5.762082099914551
    5. '    
' → logprob: -6.262082099914551
    6. '```' → logprob: -8.76208209991455
    7. '  
' → logprob: -10.01208209991455
    8. ' 
' → logprob: -10.01208209991455
    9. '

' → logprob: -10.63708209991455
    10. '    ' → logprob: -10.76208209991455

Token 1157: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05659545958042145
    2. '
' → logprob: -2.93159556388855
    3. '   ' → logprob: -6.681595325469971
    4. '        
' → logprob: -8.681595802307129
    5. 'visited' → logprob: -8.681595802307129
    6. 'dp' → logprob: -10.431595802307129
    7. '    
' → logprob: -10.431595802307129
    8. 'from' → logprob: -10.931595802307129
    9. 'import' → logprob: -10.931595802307129
    10. ' visited' → logprob: -12.556595802307129

Token 1158: ' Summary' (ID: 31653)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9123395681381226
    2. '       ' → logprob: -1.1623395681381226
    3. 'visited' → logprob: -1.6623395681381226
    4. 'ac' → logprob: -2.787339687347412
    5. 'dp' → logprob: -4.662339687347412
    6. '#' → logprob: -5.287339687347412
    7. 'aho' → logprob: -5.412339687347412
    8. 'autom' → logprob: -5.787339687347412
    9. '
' → logprob: -6.037339687347412
    10. 'ah' → logprob: -6.162339687347412

Token 1159: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.374763160943985
    2. '       ' → logprob: -1.7497631311416626
    3. '   ' → logprob: -1.9997631311416626
    4. '    
' → logprob: -6.624763011932373
    5. '        
' → logprob: -6.999763011932373
    6. 'visited' → logprob: -7.874763011932373
    7. '```' → logprob: -8.499763488769531
    8. '
' → logprob: -8.624763488769531
    9. 'from' → logprob: -10.124763488769531
    10. ' visited' → logprob: -10.374763488769531

Token 1160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03279883787035942
    2. '
' → logprob: -3.5327987670898438
    3. '        
' → logprob: -5.907798767089844
    4. '   ' → logprob: -9.157798767089844
    5. '    
' → logprob: -9.657798767089844
    6. '```' → logprob: -9.657798767089844
    7. '        ' → logprob: -10.907798767089844
    8. 'visited' → logprob: -11.282798767089844
    9. 'from' → logprob: -11.532798767089844
    10. '      ' → logprob: -11.532798767089844

Token 1161: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008647779934108257
    2. '
' → logprob: -5.508647918701172
    3. 'visited' → logprob: -6.133647918701172
    4. '   ' → logprob: -6.508647918701172
    5. 'from' → logprob: -7.633647918701172
    6. '```' → logprob: -9.258647918701172
    7. '        
' → logprob: -9.508647918701172
    8. '#' (adapté à ' #') → logprob: -9.508647918701172
    9. 'dp' → logprob: -10.008647918701172
    10. 'import' → logprob: -10.508647918701172

Token 1162: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5576573014259338
    2. 'visited' → logprob: -0.9326573014259338
    3. '   ' → logprob: -4.057657241821289
    4. 'from' → logprob: -5.307657241821289
    5. ' visited' → logprob: -5.307657241821289
    6. 'dp' → logprob: -5.807657241821289
    7. '
' → logprob: -6.432657241821289
    8. '#' → logprob: -6.932657241821289
    9. 'queue' → logprob: -8.307657241821289
    10. ' from' → logprob: -8.557657241821289

Token 1163: '1' (ID: 16)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.07273010164499283
    2. '       ' → logprob: -3.32273006439209
    3. 'from' → logprob: -4.32273006439209
    4. '   ' → logprob: -4.69773006439209
    5. 'dp' → logprob: -4.82273006439209
    6. '
' → logprob: -6.19773006439209
    7. '#' → logprob: -7.07273006439209
    8. 'queue' → logprob: -7.94773006439209
    9. 'seen' → logprob: -9.19773006439209
    10. 'import' → logprob: -9.32273006439209

Token 1164: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8227233290672302
    2. 'from' → logprob: -1.447723388671875
    3. '   ' → logprob: -1.822723388671875
    4. ' =' → logprob: -2.822723388671875
    5. ')' → logprob: -3.072723388671875
    6. '.' → logprob: -3.572723388671875
    7. '=' → logprob: -5.072723388671875
    8. 'import' → logprob: -5.197723388671875
    9. 'queue' → logprob: -5.822723388671875
    10. 'def' → logprob: -6.197723388671875

Token 1165: ' Build' (ID: 10885)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.5200579762458801
    2. '#' → logprob: -1.1450579166412354
    3. 'aho' → logprob: -3.7700579166412354
    4. 'Build' → logprob: -4.0200581550598145
    5. 'for' → logprob: -4.5200581550598145
    6. 'autom' → logprob: -4.6450581550598145
    7. '   ' → logprob: -4.7700581550598145
    8. 'Create' → logprob: -6.1450581550598145
    9. ' Build' → logprob: -6.3950581550598145
    10. 'Initialize' → logprob: -6.6450581550598145

Token 1166: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.45171320438385
    2. 'aho' → logprob: -1.82671320438385
    3. 'autom' → logprob: -1.82671320438385
    4. 'ac' → logprob: -1.95171320438385
    5. ' the' → logprob: -2.9517130851745605
    6. 'the' → logprob: -3.3267130851745605
    7. ' aho' → logprob: -3.3267130851745605
    8. 'queue' → logprob: -3.5767130851745605
    9. '       ' → logprob: -3.5767130851745605
    10. 'AC' → logprob: -3.8267130851745605

Token 1167: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.015619011595845222
    2. '_' → logprob: -5.015618801116943
    3. 'co' → logprob: -5.765618801116943
    4. 'C' → logprob: -6.515618801116943
    5. '_c' → logprob: -6.640618801116943
    6. '_co' → logprob: -7.390618801116943
    7. 'uto' → logprob: -7.390618801116943
    8. 'cho' → logprob: -7.890618801116943
    9. 'c' → logprob: -8.640619277954102
    10. 'utom' → logprob: -8.890619277954102

Token 1168: ' autom' (ID: 5099)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.585050106048584
    2. '-C' → logprob: -0.835050106048584
    3. '   ' → logprob: -5.710050106048584
    4. '       ' → logprob: -6.085050106048584
    5. '_C' → logprob: -6.460050106048584
    6. '-' → logprob: -7.335050106048584
    7. 'C' → logprob: -8.335050582885742
    8. 'Coroutine' → logprob: -8.835050582885742
    9. 'Autom' → logprob: -8.835050582885742
    10. '-cor' → logprob: -8.960050582885742

Token 1169: 'aton' (ID: 24850)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.013694167137146
    2. 'at' → logprob: -1.513694167137146
    3. '.' → logprob: -1.763694167137146
    4. '```' → logprob: -2.0136942863464355
    5. 'aton' → logprob: -3.8886942863464355
    6. 'achine' → logprob: -4.2636942863464355
    7. '`.' → logprob: -5.0136942863464355
    8. 'Cor' → logprob: -5.0136942863464355
    9. '.ac' → logprob: -5.1386942863464355
    10. 'atch' → logprob: -5.1386942863464355

Token 1170: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01068603340536356
    2. '
' → logprob: -5.010685920715332
    3. '        
' → logprob: -7.135685920715332
    4. '   ' → logprob: -7.510685920715332
    5. '.' → logprob: -7.635685920715332
    6. ' for' → logprob: -7.885685920715332
    7. '```' → logprob: -7.885685920715332
    8. ',' → logprob: -8.010685920715332
    9. '()' → logprob: -8.885685920715332
    10. 'for' → logprob: -9.010685920715332

Token 1171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003242607053834945
    2. '
' → logprob: -9.500324249267578
    3. '   ' → logprob: -9.625324249267578
    4. '```' → logprob: -9.750324249267578
    5. 'for' → logprob: -10.375324249267578
    6. '#' → logprob: -10.375324249267578
    7. '        
' → logprob: -10.750324249267578
    8. '           ' → logprob: -11.500324249267578
    9. '      ' → logprob: -12.000324249267578
    10. ',' → logprob: -12.250324249267578

Token 1172: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006223243661224842
    2. 'for' → logprob: -6.131223201751709
    3. '   ' → logprob: -6.631223201751709
    4. ' for' → logprob: -6.756223201751709
    5. '
' → logprob: -6.881223201751709
    6. '        
' → logprob: -8.131223678588867
    7. 'ac' → logprob: -9.506223678588867
    8. '```' → logprob: -10.506223678588867
    9. '#' (adapté à ' #') → logprob: -10.756223678588867
    10. '    
' → logprob: -11.256223678588867

Token 1173: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002983883023262024
    2. '
' → logprob: -6.627984046936035
    3. '   ' → logprob: -6.752984046936035
    4. '        
' → logprob: -8.752984046936035
    5. 'for' → logprob: -9.002984046936035
    6. '#' → logprob: -9.752984046936035
    7. 'ac' → logprob: -10.877984046936035
    8. '```' → logprob: -11.127984046936035
    9. 'states' → logprob: -11.252984046936035
    10. ' for' → logprob: -11.377984046936035

Token 1174: '2' (ID: 17)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7518903017044067
    2. '       ' → logprob: -1.0018903017044067
    3. 'ac' → logprob: -2.376890182495117
    4. '#' → logprob: -3.126890182495117
    5. 'for' → logprob: -4.751890182495117
    6. 'autom' → logprob: -5.376890182495117
    7. '
' → logprob: -5.626890182495117
    8. '```' → logprob: -6.126890182495117
    9. 'aho' → logprob: -7.001890182495117
    10. ' ' → logprob: -7.251890182495117

Token 1175: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5865728259086609
    2. '   ' → logprob: -0.8365728259086609
    3. '
' → logprob: -4.961572647094727
    4. ' =' → logprob: -6.961572647094727
    5. '.' → logprob: -7.586572647094727
    6. '```' → logprob: -8.086572647094727
    7. '#' → logprob: -8.336572647094727
    8. '      ' → logprob: -8.836572647094727
    9. '    ' → logprob: -8.836572647094727
    10. ')' → logprob: -8.836572647094727

Token 1176: ' Find' (ID: 9764)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.9278382658958435
    2. '   ' → logprob: -1.6778383255004883
    3. 'queue' → logprob: -1.9278383255004883
    4. '       ' → logprob: -2.9278383255004883
    5. '#' → logprob: -2.9278383255004883
    6. 'autom' → logprob: -3.4278383255004883
    7. 'visited' → logprob: -3.6778383255004883
    8. 'run' → logprob: -4.052838325500488
    9. 'current' → logprob: -4.052838325500488
    10. 'aho' → logprob: -4.552838325500488

Token 1177: ' all' (ID: 722)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.5981561541557312
    2. 'occ' → logprob: -1.973156213760376
    3. '       ' → logprob: -2.723156213760376
    4. 'all' → logprob: -2.723156213760376
    5. 'positions' → logprob: -2.848156213760376
    6. ' matches' → logprob: -3.723156213760376
    7. ' occurrences' → logprob: -3.723156213760376
    8. '   ' → logprob: -3.848156213760376
    9. '#' → logprob: -4.723155975341797
    10. ' all' → logprob: -4.973155975341797

Token 1178: ' matches' (ID: 15248)
  Prédit: '_occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_occ' → logprob: -1.242653250694275
    2. 'matches' → logprob: -1.367653250694275
    3. 'occ' → logprob: -1.617653250694275
    4. '_matches' → logprob: -2.3676533699035645
    5. 'positions' → logprob: -2.8676533699035645
    6. 'element' → logprob: -3.4926533699035645
    7. '_positions' → logprob: -4.1176533699035645
    8. '_oc' → logprob: -4.4926533699035645
    9. '_states' → logprob: -4.8676533699035645
    10. '_' → logprob: -4.9926533699035645

Token 1179: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007931088097393513
    2. '
' → logprob: -5.257931232452393
    3. '        
' → logprob: -7.007931232452393
    4. ',' → logprob: -8.007930755615234
    5. ' for' → logprob: -8.007930755615234
    6. '           ' → logprob: -8.632930755615234
    7. 'for' → logprob: -8.882930755615234
    8. '#' → logprob: -9.132930755615234
    9. '```' → logprob: -9.132930755615234
    10. '   ' → logprob: -9.257930755615234

Token 1180: 'element' (ID: 13565)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2062538862228394
    2. 'positions' → logprob: -1.7062538862228394
    3. ' (' → logprob: -2.331254005432129
    4. ')' → logprob: -2.581254005432129
    5. '   ' → logprob: -2.581254005432129
    6. ')
' → logprob: -2.831254005432129
    7. '(' → logprob: -3.206254005432129
    8. ' for' → logprob: -3.956254005432129
    9. ' positions' → logprob: -3.956254005432129
    10. 'for' → logprob: -4.456254005432129

Token 1181: ' string' (ID: 1621)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.5288662314414978
    2. 's' → logprob: -2.2788662910461426
    3. ')_' → logprob: -2.4038662910461426
    4. ')' → logprob: -2.7788662910461426
    5. '_positions' → logprob: -2.7788662910461426
    6. '       ' → logprob: -3.4038662910461426
    7. '_ids' → logprob: -4.528866291046143
    8. '_s' → logprob: -4.778866291046143
    9. '_occ' → logprob: -4.778866291046143
    10. '_' → logprob: -4.903866291046143

Token 1182: ' indexes' (ID: 50739)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06398594379425049
    2. ')' → logprob: -3.813985824584961
    3. '_positions' → logprob: -4.063985824584961
    4. '   ' → logprob: -5.438985824584961
    5. '_occ' → logprob: -5.938985824584961
    6. '_s' → logprob: -6.313985824584961
    7. ']' → logprob: -6.438985824584961
    8. ' at' → logprob: -6.688985824584961
    9. '[' → logprob: -7.063985824584961
    10. 'es' → logprob: -7.188985824584961

Token 1183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.113340139389038
    2. ' at' → logprob: -1.113340139389038
    3. '       ' → logprob: -2.488340139389038
    4. ',' → logprob: -2.488340139389038
    5. ')
' → logprob: -2.863340139389038
    6. 'at' → logprob: -3.363340139389038
    7. '```' → logprob: -4.238340377807617
    8. '_at' → logprob: -4.363340377807617
    9. '
' → logprob: -4.488340377807617
    10. '   ' → logprob: -4.988340377807617

Token 1184: ' ending' (ID: 22013)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006009494885802269
    2. '
' → logprob: -5.756009578704834
    3. ' at' → logprob: -7.506009578704834
    4. ',' → logprob: -7.881009578704834
    5. 'for' → logprob: -7.881009578704834
    6. ' for' → logprob: -8.006009101867676
    7. '   ' → logprob: -8.506009101867676
    8. '        
' → logprob: -8.756009101867676
    9. '           ' → logprob: -9.256009101867676
    10. 'from' → logprob: -9.256009101867676

Token 1185: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.3248576819896698
    2. 'at' → logprob: -1.4498577117919922
    3. '_at' → logprob: -3.199857711791992
    4. '   ' → logprob: -7.324857711791992
    5. '_positions' → logprob: -7.824857711791992
    6. '_here' → logprob: -8.574857711791992
    7. 'positions' → logprob: -8.699857711791992
    8. '[pos' → logprob: -9.324857711791992
    9. 'here' → logprob: -9.449857711791992
    10. '[position' → logprob: -9.699857711791992

Token 1186: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3996696174144745
    2. 'text' → logprob: -2.024669647216797
    3. 'positions' → logprob: -2.524669647216797
    4. 'position' → logprob: -3.524669647216797
    5. 'each' → logprob: -3.524669647216797
    6. 'pos' → logprob: -4.024669647216797
    7. ' i' → logprob: -4.899669647216797
    8. ' each' → logprob: -5.024669647216797
    9. ' positions' → logprob: -5.149669647216797
    10. ')' → logprob: -5.399669647216797

Token 1187: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.2612031102180481
    2. 'position' → logprob: -1.8862030506134033
    3. '_' → logprob: -3.6362030506134033
    4. '_position' → logprob: -3.6362030506134033
    5. '_pos' → logprob: -4.636203289031982
    6. 'pos' → logprob: -4.761203289031982
    7. ' _' → logprob: -6.386203289031982
    8. '   ' → logprob: -6.386203289031982
    9. '_positions' → logprob: -7.761203289031982
    10. '       ' → logprob: -8.011202812194824

Token 1188: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03494688868522644
    2. '
' → logprob: -3.409946918487549
    3. '        
' → logprob: -7.659946918487549
    4. '   ' → logprob: -8.28494644165039
    5. ',' → logprob: -9.03494644165039
    6. ')' → logprob: -9.15994644165039
    7. '
' → logprob: -9.40994644165039
    8. '           ' → logprob: -9.53494644165039
    9. '```' → logprob: -9.78494644165039
    10. '<|end|>' → logprob: -10.90994644165039

Token 1189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3277595043182373
    2. '
' → logprob: -1.3277595043182373
    3. '        
' → logprob: -4.452759742736816
    4. '```' → logprob: -6.202759742736816
    5. '
' → logprob: -9.327759742736816
    6. ',' → logprob: -9.577759742736816
    7. '<|end|>' → logprob: -9.577759742736816
    8. '`
' → logprob: -9.577759742736816
    9. '\n' → logprob: -9.702759742736816
    10. '    
' → logprob: -9.827759742736816

Token 1190: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2267814725637436
    2. '
' → logprob: -1.6017814874649048
    3. '        
' → logprob: -7.101781368255615
    4. '
' → logprob: -8.476781845092773
    5. '   ' → logprob: -9.351781845092773
    6. '```' → logprob: -9.476781845092773
    7. '

' → logprob: -9.601781845092773
    8. ',' → logprob: -11.476781845092773
    9. '    
' → logprob: -11.476781845092773
    10. '           ' → logprob: -11.601781845092773

Token 1191: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31257733702659607
    2. 'matches' → logprob: -1.5625773668289185
    3. '
' → logprob: -3.437577247619629
    4. 'occ' → logprob: -4.812577247619629
    5. '        
' → logprob: -5.312577247619629
    6. 'positions' → logprob: -5.437577247619629
    7. '   ' → logprob: -5.937577247619629
    8. 'match' → logprob: -6.562577247619629
    9. 'occur' → logprob: -6.562577247619629
    10. '#' → logprob: -6.562577247619629

Token 1192: '3' (ID: 18)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.5230207443237305
    2. '       ' → logprob: -1.1480207443237305
    3. 'positions' → logprob: -3.3980207443237305
    4. '#' → logprob: -4.1480207443237305
    5. 'occ' → logprob: -4.3980207443237305
    6. '   ' → logprob: -4.5230207443237305
    7. 'match' → logprob: -5.3980207443237305
    8. 'pos' → logprob: -5.7730207443237305
    9. 'end' → logprob: -6.1480207443237305
    10. 'occur' → logprob: -6.3980207443237305

Token 1193: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07914379984140396
    2. '
' → logprob: -2.704143762588501
    3. '   ' → logprob: -5.07914400100708
    4. '#' → logprob: -6.82914400100708
    5. 'matches' → logprob: -7.07914400100708
    6. '        
' → logprob: -7.70414400100708
    7. ' matches' → logprob: -8.954143524169922
    8. 'match' → logprob: -9.829143524169922
    9. '      ' → logprob: -10.079143524169922
    10. '
' → logprob: -10.079143524169922

Token 1194: ' BFS' (ID: 190016)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.07073111087083817
    2. 'visited' → logprob: -4.070731163024902
    3. 'occ' → logprob: -4.195731163024902
    4. 'positions' → logprob: -4.570731163024902
    5. '#' → logprob: -5.070731163024902
    6. 'dp' → logprob: -5.445731163024902
    7. 'matched' → logprob: -5.445731163024902
    8. 'match' → logprob: -5.695731163024902
    9. 'pos' → logprob: -6.445731163024902
    10. 'from' → logprob: -6.570731163024902

Token 1195: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3163953721523285
    2. '   ' → logprob: -2.5663952827453613
    3. 'from' → logprob: -2.6913952827453613
    4. '
' → logprob: -2.8163952827453613
    5. 'queue' → logprob: -3.6913952827453613
    6. ' from' → logprob: -3.8163952827453613
    7. ' queue' → logprob: -4.941395282745361
    8. '(queue' → logprob: -5.941395282745361
    9. 'visited' → logprob: -6.816395282745361
    10. ' states' → logprob: -6.816395282745361

Token 1196: ' states' (ID: 9407)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.07702261954545975
    2. 'positions' → logprob: -3.4520225524902344
    3. '   ' → logprob: -3.9520225524902344
    4. 'queue' → logprob: -5.327022552490234
    5. 'visited' → logprob: -5.452022552490234
    6. 'dp' → logprob: -5.827022552490234
    7. '       ' → logprob: -6.202022552490234
    8. '
' → logprob: -6.202022552490234
    9. '(text' → logprob: -6.702022552490234
    10. 'states' → logprob: -6.702022552490234

Token 1197: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3828897178173065
    2. '   ' → logprob: -1.257889747619629
    3. '
' → logprob: -3.757889747619629
    4. 'from' → logprob: -4.882889747619629
    5. ' from' → logprob: -7.382889747619629
    6. 'queue' → logprob: -7.507889747619629
    7. '```' → logprob: -8.132889747619629
    8. '        
' → logprob: -8.632889747619629
    9. 'visited' → logprob: -8.757889747619629
    10. ',' → logprob: -8.757889747619629

Token 1198: 'position' (ID: 4504)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0009819269180298
    2. 'text' → logprob: -1.2509819269180298
    3. 'position' → logprob: -1.5009819269180298
    4. 'positions' → logprob: -3.3759818077087402
    5. ' (' → logprob: -3.7509818077087402
    6. '   ' → logprob: -4.12598180770874
    7. '(' → logprob: -4.50098180770874
    8. '           ' → logprob: -4.62598180770874
    9. '(position' → logprob: -4.87598180770874
    10. ')' → logprob: -5.00098180770874

Token 1199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040660519152879715
    2. ',
' → logprob: -5.879065990447998
    3. '       ' → logprob: -7.254065990447998
    4. ' ,' → logprob: -9.004066467285156
    5. '           ' → logprob: -9.004066467285156
    6. '`,' → logprob: -9.754066467285156
    7. '   ' → logprob: -9.879066467285156
    8. ',(' → logprob: -10.504066467285156
    9. '',' → logprob: -10.629066467285156
    10. '	' → logprob: -10.629066467285156

Token 1200: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.08926365524530411
    2. ' mask' → logprob: -2.464263677597046
    3. ',' → logprob: -8.339263916015625
    4. '   ' → logprob: -10.589263916015625
    5. '
' → logprob: -11.214263916015625
    6. ')' → logprob: -11.839263916015625
    7. '	mask' → logprob: -11.964263916015625
    8. '_mask' → logprob: -12.089263916015625
    9. '       ' → logprob: -12.214263916015625
    10. ' ,' → logprob: -12.839263916015625

Token 1201: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.58903968334198
    2. ')' → logprob: -1.58903968334198
    3. '
' → logprob: -1.83903968334198
    4. ')
' → logprob: -3.2140398025512695
    5. '):
' → logprob: -3.7140398025512695
    6. '           ' → logprob: -5.7140398025512695
    7. '   ' → logprob: -5.8390398025512695
    8. '):' → logprob: -5.8390398025512695
    9. ',' → logprob: -6.4640398025512695
    10. ' =' → logprob: -6.7140398025512695

Token 1202: ' starting' (ID: 8601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5798076391220093
    2. '
' → logprob: -0.8298076391220093
    3. '   ' → logprob: -6.329807758331299
    4. '        
' → logprob: -6.829807758331299
    5. '
' → logprob: -8.32980728149414
    6. '    
' → logprob: -8.45480728149414
    7. '           ' → logprob: -8.95480728149414
    8. ',' → logprob: -9.45480728149414
    9. ')' → logprob: -9.45480728149414
    10. '```' → logprob: -10.20480728149414

Token 1203: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.669779360294342
    2. 'from' → logprob: -0.919779360294342
    3. ')' → logprob: -3.6697793006896973
    4. '   ' → logprob: -3.7947793006896973
    5. '       ' → logprob: -4.544779300689697
    6. '    ' → logprob: -5.044779300689697
    7. ',' → logprob: -5.169779300689697
    8. ' with' → logprob: -5.419779300689697
    9. ' at' → logprob: -6.169779300689697
    10. '	from' → logprob: -6.294779300689697

Token 1204: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4362773001194
    2. '0' → logprob: -1.1862772703170776
    3. ' (' → logprob: -3.061277389526367
    4. ' ' → logprob: -6.811277389526367
    5. 'position' → logprob: -9.061277389526367
    6. '   ' → logprob: -9.686277389526367
    7. '
' → logprob: -10.811277389526367
    8. '`' → logprob: -10.936277389526367
    9. ' position' → logprob: -11.186277389526367
    10. '```' → logprob: -11.311277389526367

Token 1205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001544321421533823
    2. '(' → logprob: -9.375154495239258
    3. ' ' → logprob: -10.000154495239258
    4. '   ' → logprob: -11.500154495239258
    5. '
' → logprob: -11.875154495239258
    6. '       ' → logprob: -13.125154495239258
    7. ' (' → logprob: -13.875154495239258
    8. ')' → logprob: -14.000154495239258
    9. '           ' → logprob: -14.000154495239258
    10. '```' → logprob: -14.500154495239258

Token 1206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010521204239921644
    2. ' ,' → logprob: -9.875104904174805
    3. ',(' → logprob: -10.750104904174805
    4. ',
' → logprob: -11.375104904174805
    5. ')' → logprob: -11.625104904174805
    6. '   ' → logprob: -12.000104904174805
    7. '       ' → logprob: -13.750104904174805
    8. '
' → logprob: -14.250104904174805
    9. '0' → logprob: -14.375104904174805
    10. '```' → logprob: -14.500104904174805

Token 1207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004338877333793789
    2. ' ' → logprob: -7.750433921813965
    3. ')' → logprob: -13.500433921813965
    4. '
' → logprob: -13.875433921813965
    5. '   ' → logprob: -15.750433921813965
    6. ',' → logprob: -16.00043296813965
    7. '{' → logprob: -16.12543296813965
    8. '    ' → logprob: -16.87543296813965
    9. '  ' → logprob: -17.25043296813965
    10. 'True' → logprob: -17.37543296813965

Token 1208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053024157881736755
    2. ')
' → logprob: -3.0530240535736084
    3. '       ' → logprob: -6.4280242919921875
    4. '):' → logprob: -6.5530242919921875
    5. '):
' → logprob: -6.9280242919921875
    6. '   ' → logprob: -8.553024291992188
    7. ')
' → logprob: -9.428024291992188
    8. '),' → logprob: -9.678024291992188
    9. ')

' → logprob: -11.303024291992188
    10. ')`' → logprob: -11.428024291992188

Token 1209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18436335027217865
    2. '
' → logprob: -1.8093633651733398
    3. '   ' → logprob: -5.80936336517334
    4. '        
' → logprob: -7.05936336517334
    5. '```' → logprob: -8.05936336517334
    6. '    
' → logprob: -8.93436336517334
    7. '
' → logprob: -9.68436336517334
    8. ',' → logprob: -10.05936336517334
    9. '  
' → logprob: -10.55936336517334
    10. '           ' → logprob: -10.68436336517334

Token 1210: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047337599098682404
    2. '
' → logprob: -3.172337532043457
    3. '        
' → logprob: -6.047337532043457
    4. '   ' → logprob: -6.672337532043457
    5. ',' → logprob: -8.547337532043457
    6. '    
' → logprob: -8.922337532043457
    7. ')' → logprob: -9.297337532043457
    8. '```' → logprob: -9.672337532043457
    9. '           ' → logprob: -10.172337532043457
    10. '      ' → logprob: -10.922337532043457

Token 1211: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10366395860910416
    2. '
' → logprob: -2.353663921356201
    3. 'matches' → logprob: -6.728663921356201
    4. '   ' → logprob: -6.978663921356201
    5. '        
' → logprob: -7.228663921356201
    6. '```' → logprob: -8.22866439819336
    7. ' matches' → logprob: -9.72866439819336
    8. 'match' → logprob: -10.22866439819336
    9. 'visited' → logprob: -10.35366439819336
    10. '    
' → logprob: -10.60366439819336

Token 1212: '4' (ID: 19)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1928328275680542
    2. 'visited' → logprob: -2.5678329467773438
    3. 'matches' → logprob: -3.0678329467773438
    4. '   ' → logprob: -3.6928329467773438
    5. '
' → logprob: -3.8178329467773438
    6. 'from' → logprob: -6.942832946777344
    7. 'matched' → logprob: -7.317832946777344
    8. 'queue' → logprob: -7.442832946777344
    9. 'dp' → logprob: -7.692832946777344
    10. 'next' → logprob: -7.817832946777344

Token 1213: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13241934776306152
    2. '       ' → logprob: -2.1324193477630615
    3. '
' → logprob: -5.757419586181641
    4. '    ' → logprob: -6.882419586181641
    5. '  ' → logprob: -8.50741958618164
    6. '	' → logprob: -8.88241958618164
    7. ' ' → logprob: -9.00741958618164
    8. ')' → logprob: -9.13241958618164
    9. ' queue' → logprob: -9.38241958618164
    10. '     ' → logprob: -9.38241958618164

Token 1214: ' Whenever' (ID: 64638)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.015662075951695442
    2. ' visited' → logprob: -5.01566219329834
    3. 'from' → logprob: -5.26566219329834
    4. '   ' → logprob: -6.64066219329834
    5. 'seen' → logprob: -7.14066219329834
    6. 'queue' → logprob: -7.39066219329834
    7. '       ' → logprob: -7.64066219329834
    8. ' from' → logprob: -9.01566219329834
    9. 'dist' → logprob: -9.64066219329834
    10. 'result' → logprob: -9.76566219329834

Token 1215: ' mask' (ID: 10910)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5340784788131714
    2. '(' → logprob: -0.9090784788131714
    3. ' position' → logprob: -6.159078598022461
    4. ' we' → logprob: -6.409078598022461
    5. 'position' → logprob: -6.659078598022461
    6. '(position' → logprob: -6.659078598022461
    7. '(
' → logprob: -6.909078598022461
    8. ' dp' → logprob: -7.284078598022461
    9. ' (
' → logprob: -7.409078598022461
    10. 'dp' → logprob: -7.409078598022461

Token 1216: ' ==' (ID: 951)
  Prédit: '|('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|(' → logprob: -1.3814512491226196
    2. ' !=' → logprob: -1.5064512491226196
    3. '|' → logprob: -1.6314512491226196
    4. ' ==' → logprob: -2.25645112991333
    5. '==' → logprob: -2.50645112991333
    6. '==(' → logprob: -2.75645112991333
    7. '!=' → logprob: -3.38145112991333
    8. ')' → logprob: -4.75645112991333
    9. '!=(' → logprob: -5.00645112991333
    10. ',' → logprob: -5.13145112991333

Token 1217: ' full' (ID: 3149)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3572065830230713
    2. ' (' → logprob: -2.2322065830230713
    3. 'full' → logprob: -2.2322065830230713
    4. '(full' → logprob: -2.9822065830230713
    5. ' full' → logprob: -3.3572065830230713
    6. '(n' → logprob: -9.357206344604492
    7. '   ' → logprob: -9.857206344604492
    8. '_full' → logprob: -10.232206344604492
    9. '
' → logprob: -11.107206344604492
    10. '((' → logprob: -11.232206344604492

Token 1218: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.004119480960071087
    2. '_' → logprob: -6.504119396209717
    3. ''_' → logprob: -6.629119396209717
    4. '"_' → logprob: -7.504119396209717
    5. 'mask' → logprob: -8.129119873046875
    6. '_match' → logprob: -8.754119873046875
    7. ' _' → logprob: -9.254119873046875
    8. '```' → logprob: -10.379119873046875
    9. '`' → logprob: -11.254119873046875
    10. '"' → logprob: -11.254119873046875

Token 1219: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.39254969358444214
    2. '           ' → logprob: -2.517549753189087
    3. 'and' → logprob: -2.642549753189087
    4. '==' → logprob: -2.642549753189087
    5. ' ==' → logprob: -3.017549753189087
    6. ':
' → logprob: -3.892549753189087
    7. ':' → logprob: -4.017549514770508
    8. '               ' → logprob: -5.517549514770508
    9. '=' → logprob: -5.642549514770508
    10. ',' → logprob: -5.892549514770508

Token 1220: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5944295525550842
    2. '               ' → logprob: -1.2194294929504395
    3. '                   ' → logprob: -1.9694294929504395
    4. '                       ' → logprob: -5.7194294929504395
    5. ':' → logprob: -6.3444294929504395
    6. '            ' → logprob: -6.4694294929504395
    7. '   ' → logprob: -6.9694294929504395
    8. '                ' → logprob: -7.3444294929504395
    9. ' queue' → logprob: -7.5944294929504395
    10. ':
' → logprob: -7.7194294929504395

Token 1221: ' record' (ID: 3704)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12301014363765717
    2. ' can' → logprob: -3.4980101585388184
    3. '       ' → logprob: -3.7480101585388184
    4. ' continue' → logprob: -4.123010158538818
    5. '               ' → logprob: -4.248010158538818
    6. 'continue' → logprob: -5.373010158538818
    7. ' have' → logprob: -5.748010158538818
    8. '   ' → logprob: -5.748010158538818
    9. '                   ' → logprob: -6.123010158538818
    10. ' add' → logprob: -6.623010158538818

Token 1222: ' position' (ID: 4010)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.0375465154647827
    2. ' a' → logprob: -1.7875465154647827
    3. '           ' → logprob: -2.4125466346740723
    4. 'position' → logprob: -2.9125466346740723
    5. ' True' → logprob: -2.9125466346740723
    6. ' positions' → logprob: -2.9125466346740723
    7. ' (' → logprob: -3.1625466346740723
    8. ' the' → logprob: -3.9125466346740723
    9. ' position' → logprob: -4.037546634674072
    10. ')' → logprob: -4.162546634674072

Token 1223: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5502288937568665
    2. '
' → logprob: -0.9252288937568665
    3. '```' → logprob: -4.925229072570801
    4. '        
' → logprob: -5.175229072570801
    5. '
' → logprob: -5.800229072570801
    6. ',' → logprob: -6.175229072570801
    7. '           ' → logprob: -6.175229072570801
    8. '               ' → logprob: -6.925229072570801
    9. '                   ' → logprob: -7.300229072570801
    10. ':' → logprob: -7.675229072570801

Token 1224: ' a' (ID: 261)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.35500118136405945
    2. 'a' → logprob: -1.7300012111663818
    3. 'match' → logprob: -2.480001211166382
    4. ' valid' → logprob: -4.730000972747803
    5. 'possible' → logprob: -4.855000972747803
    6. 'an' → logprob: -5.355000972747803
    7. 'True' → logprob: -5.855000972747803
    8. 'reachable' → logprob: -6.355000972747803
    9. ' a' → logprob: -6.480000972747803
    10. 'ending' → logprob: -6.605000972747803

Token 1225: ' full' (ID: 3149)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.1252501755952835
    2. 'valid' → logprob: -3.1252501010894775
    3. ' match' → logprob: -3.5002501010894775
    4. 'possible' → logprob: -4.000250339508057
    5. 'result' → logprob: -4.500250339508057
    6. ' valid' → logprob: -5.000250339508057
    7. 'found' → logprob: -5.875250339508057
    8. 'matching' → logprob: -7.375250339508057
    9. ' possible' → logprob: -7.750250339508057
    10. ' result' → logprob: -7.875250339508057

Token 1226: ' match' (ID: 3981)
  Prédit: '_match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.05779220908880234
    2. '_' → logprob: -3.0577921867370605
    3. ' match' → logprob: -6.1827921867370605
    4. '_mat' → logprob: -6.4327921867370605
    5. '_concat' → logprob: -6.4327921867370605
    6. 'match' → logprob: -6.5577921867370605
    7. ' _' → logprob: -6.8077921867370605
    8. '_state' → logprob: -7.6827921867370605
    9. '_mask' → logprob: -7.6827921867370605
    10. ')' → logprob: -9.557792663574219

Token 1227: ' ending' (ID: 22013)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031231021508574486
    2. '
' → logprob: -3.656230926513672
    3. '   ' → logprob: -5.531230926513672
    4. '           ' → logprob: -8.281230926513672
    5. '        
' → logprob: -8.281230926513672
    6. '```' → logprob: -9.281230926513672
    7. ',' → logprob: -9.406230926513672
    8. '
' → logprob: -9.531230926513672
    9. ')' → logprob: -10.156230926513672
    10. '    
' → logprob: -10.906230926513672

Token 1228: ' position' (ID: 4010)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11484763026237488
    2. '
' → logprob: -2.8648476600646973
    3. ' at' → logprob: -4.489847660064697
    4. '   ' → logprob: -4.489847660064697
    5. ':
' → logprob: -4.739847660064697
    6. ':' → logprob: -5.114847660064697
    7. ',' → logprob: -5.614847660064697
    8. '           ' → logprob: -6.489847660064697
    9. '(' → logprob: -6.614847660064697
    10. '.
' → logprob: -6.989847660064697

Token 1229: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011468642391264439
    2. '
' → logprob: -4.636468410491943
    3. '   ' → logprob: -6.511468410491943
    4. '        
' → logprob: -9.136468887329102
    5. '           ' → logprob: -9.636468887329102
    6. '
' → logprob: -11.011468887329102
    7. '    
' → logprob: -12.261468887329102
    8. '<|end|>' → logprob: -12.511468887329102
    9. ',' → logprob: -12.636468887329102
    10. '```' → logprob: -13.011468887329102

Token 1230: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5783547163009644
    2. '       ' → logprob: -0.8283547163009644
    3. '        
' → logprob: -6.453354835510254
    4. '   ' → logprob: -7.453354835510254
    5. '```' → logprob: -9.203354835510254
    6. '    
' → logprob: -9.953354835510254
    7. '
' → logprob: -10.328354835510254
    8. ',' → logprob: -11.203354835510254
    9. ' 
' → logprob: -12.203354835510254
    10. 'import' → logprob: -12.328354835510254

Token 1231: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48502060770988464
    2. '       ' → logprob: -0.985020637512207
    3. '   ' → logprob: -4.735020637512207
    4. '        
' → logprob: -6.610020637512207
    5. '    
' → logprob: -7.985020637512207
    6. '```' → logprob: -9.485020637512207
    7. '
' → logprob: -9.610020637512207
    8. ' 
' → logprob: -10.610020637512207
    9. 'import' → logprob: -10.860020637512207
    10. '  
' → logprob: -10.860020637512207

Token 1232: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6690869331359863
    2. '       ' → logprob: -0.7940869331359863
    3. '   ' → logprob: -3.4190869331359863
    4. '        
' → logprob: -6.169086933135986
    5. '    
' → logprob: -7.794086933135986
    6. 'visited' → logprob: -8.544086456298828
    7. '
' → logprob: -10.044086456298828
    8. 'matches' → logprob: -10.044086456298828
    9. ')' → logprob: -10.544086456298828
    10. '```' → logprob: -10.919086456298828

Token 1233: '5' (ID: 20)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5234431028366089
    2. '       ' → logprob: -1.3984431028366089
    3. '
' → logprob: -1.8984431028366089
    4. 'visited' → logprob: -5.023443222045898
    5. 'full' → logprob: -7.148443222045898
    6. 'matches' → logprob: -7.523443222045898
    7. 'queue' → logprob: -7.523443222045898
    8. '    
' → logprob: -7.898443222045898
    9. '        
' → logprob: -8.398443222045898
    10. 'from' → logprob: -8.523443222045898

Token 1234: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42594847083091736
    2. '   ' → logprob: -1.4259485006332397
    3. '
' → logprob: -2.42594838142395
    4. 'visited' → logprob: -4.300948619842529
    5. ' visited' → logprob: -6.550948619842529
    6. '    ' → logprob: -7.425948619842529
    7. '  ' → logprob: -7.800948619842529
    8. 'from' → logprob: -7.925948619842529
    9. ' ' → logprob: -8.300948143005371
    10. '     ' → logprob: -8.675948143005371

Token 1235: ' Count' (ID: 6789)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1067328080534935
    2. 'matches' → logprob: -3.1067328453063965
    3. 'from' → logprob: -3.6067328453063965
    4. 'results' → logprob: -4.8567328453063965
    5. 'result' → logprob: -5.2317328453063965
    6. '   ' → logprob: -5.3567328453063965
    7. 'seen' → logprob: -5.7317328453063965
    8. 'full' → logprob: -6.6067328453063965
    9. 'found' → logprob: -6.7317328453063965
    10. 'matched' → logprob: -6.9817328453063965

Token 1236: ' distinct' (ID: 16913)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5978033542633057
    2. '   ' → logprob: -0.9728033542633057
    3. '
' → logprob: -2.9728033542633057
    4. 'import' → logprob: -5.597803115844727
    5. ')' → logprob: -5.722803115844727
    6. '    ' → logprob: -6.222803115844727
    7. '        
' → logprob: -6.722803115844727
    8. 'states' → logprob: -6.972803115844727
    9. '      ' → logprob: -7.097803115844727
    10. '_states' → logprob: -7.097803115844727

Token 1237: ' starting' (ID: 8601)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7892082929611206
    2. 'matches' → logprob: -2.03920841217041
    3. '_positions' → logprob: -2.03920841217041
    4. '_states' → logprob: -2.53920841217041
    5. 'states' → logprob: -3.03920841217041
    6. '   ' → logprob: -3.28920841217041
    7. '
' → logprob: -3.91420841217041
    8. '_matches' → logprob: -3.91420841217041
    9. '_' → logprob: -4.03920841217041
    10. '       ' → logprob: -4.41420841217041

Token 1238: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.027729008346796036
    2. '_' → logprob: -4.027729034423828
    3. 'positions' → logprob: -4.902729034423828
    4. ' positions' → logprob: -7.527729034423828
    5. '_pos' → logprob: -7.652729034423828
    6. '_points' → logprob: -7.902729034423828
    7. '_
' → logprob: -8.277729034423828
    8. '_position' → logprob: -9.277729034423828
    9. '_states' → logprob: -9.527729034423828
    10. '
' → logprob: -9.652729034423828

Token 1239: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1456412672996521
    2. '
' → logprob: -2.020641326904297
    3. '   ' → logprob: -6.395641326904297
    4. '        
' → logprob: -7.270641326904297
    5. ',' → logprob: -8.895641326904297
    6. '
' → logprob: -9.270641326904297
    7. '           ' → logprob: -9.770641326904297
    8. '    
' → logprob: -10.145641326904297
    9. '```' → logprob: -10.270641326904297
    10. '`' → logprob: -10.645641326904297

Token 1240: ' full' (ID: 3149)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.623968243598938
    2. ' matches' → logprob: -0.873968243598938
    3. 'full' → logprob: -4.373968124389648
    4. 'the' → logprob: -4.498968124389648
    5. ' full' → logprob: -4.998968124389648
    6. ' the' → logprob: -5.123968124389648
    7. 'found' → logprob: -5.748968124389648
    8. 'matched' → logprob: -6.123968124389648
    9. 'valid' → logprob: -6.373968124389648
    10. ' matched' → logprob: -7.373968124389648

Token 1241: ' concaten' (ID: 121942)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7956956028938293
    2. '_matches' → logprob: -0.9206956028938293
    3. '_match' → logprob: -2.2956955432891846
    4. '_mask' → logprob: -3.6706955432891846
    5. ' _' → logprob: -4.795695781707764
    6. '_
' → logprob: -5.295695781707764
    7. 'matches' → logprob: -5.670695781707764
    8. ' matches' → logprob: -5.670695781707764
    9. '_masks' → logprob: -6.420695781707764
    10. '_mat' → logprob: -7.545695781707764

Token 1242: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.3882039487361908
    2. 'ation' → logprob: -1.1382039785385132
    3. '   ' → logprob: -7.138204097747803
    4. '       ' → logprob: -8.388203620910645
    5. ')
' → logprob: -9.513203620910645
    6. ')' → logprob: -9.638203620910645
    7. 'at' → logprob: -9.638203620910645
    8. 'ated' → logprob: -10.513203620910645
    9. '           ' → logprob: -10.638203620910645
    10. 's' → logprob: -11.388203620910645

Token 1243: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26345476508140564
    2. '   ' → logprob: -1.763454794883728
    3. '
' → logprob: -2.8884546756744385
    4. '        
' → logprob: -7.013454914093018
    5. ')' → logprob: -7.263454914093018
    6. ',' → logprob: -7.763454914093018
    7. '
' → logprob: -8.01345443725586
    8. '```' → logprob: -8.01345443725586
    9. '    
' → logprob: -8.13845443725586
    10. 'state' → logprob: -8.26345443725586

Token 1244: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.02215925231575966
    2. ' text' → logprob: -3.8971593379974365
    3. 'the' → logprob: -6.522159099578857
    4. ' the' → logprob: -9.147159576416016
    5. '
' → logprob: -10.772159576416016
    6. 'range' → logprob: -12.647159576416016
    7. '   ' → logprob: -12.647159576416016
    8. '```' → logprob: -12.897159576416016
    9. '`' → logprob: -13.022159576416016
    10. '{text' → logprob: -13.522159576416016

Token 1245: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1344083845615387
    2. '
' → logprob: -2.509408473968506
    3. '   ' → logprob: -3.134408473968506
    4. '
' → logprob: -8.384407997131348
    5. '        
' → logprob: -8.634407997131348
    6. '```' → logprob: -9.259407997131348
    7. '           ' → logprob: -9.759407997131348
    8. ')' → logprob: -10.009407997131348
    9. '    
' → logprob: -10.134407997131348
    10. 'state' → logprob: -10.384407997131348

Token 1246: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13108398020267487
    2. '       ' → logprob: -2.1310839653015137
    3. '        
' → logprob: -6.131083965301514
    4. '   ' → logprob: -7.006083965301514
    5. '```' → logprob: -7.381083965301514
    6. '    
' → logprob: -8.756084442138672
    7. '
' → logprob: -8.881084442138672
    8. '`
' → logprob: -10.756084442138672
    9. '

' → logprob: -11.381084442138672
    10. ',' → logprob: -11.381084442138672

Token 1247: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1694597601890564
    2. '       ' → logprob: -1.9194598197937012
    3. '        
' → logprob: -5.544459819793701
    4. '   ' → logprob: -5.669459819793701
    5. '    
' → logprob: -7.669459819793701
    6. '```' → logprob: -7.919459819793701
    7. '

' → logprob: -8.419459342956543
    8. '
' → logprob: -9.169459342956543
    9. '' → logprob: -9.419459342956543
    10. '        

' → logprob: -9.794459342956543

Token 1248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5809845328330994
    2. '
' → logprob: -0.8309845328330994
    3. '        
' → logprob: -5.705984592437744
    4. '```' → logprob: -7.205984592437744
    5. '   ' → logprob: -7.455984592437744
    6. '    
' → logprob: -9.330984115600586
    7. '#' → logprob: -10.080984115600586
    8. '
' → logprob: -10.330984115600586
    9. '`' → logprob: -11.018484115600586
    10. ',' → logprob: -11.330984115600586

Token 1249: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12830904126167297
    2. '
' → logprob: -2.2533090114593506
    3. '   ' → logprob: -4.50330924987793
    4. '        
' → logprob: -6.25330924987793
    5. 'full' → logprob: -7.75330924987793
    6. 'matches' → logprob: -7.75330924987793
    7. '```' → logprob: -8.12830924987793
    8. '#' (adapté à ' #') → logprob: -8.37830924987793
    9. '    
' → logprob: -8.37830924987793
    10. ' full' → logprob: -9.12830924987793

Token 1250: ' As' (ID: 1877)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07724664360284805
    2. 'matches' → logprob: -3.95224666595459
    3. '   ' → logprob: -4.07724666595459
    4. '
' → logprob: -4.07724666595459
    5. 'full' → logprob: -5.07724666595459
    6. '#' → logprob: -5.70224666595459
    7. 'element' → logprob: -5.82724666595459
    8. 'visited' → logprob: -6.45224666595459
    9. '```' → logprob: -6.82724666595459
    10. 'ac' → logprob: -7.07724666595459

Token 1251: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025431018322706223
    2. '
' → logprob: -3.900430917739868
    3. '```' → logprob: -5.775431156158447
    4. '   ' → logprob: -7.650431156158447
    5. ' follows' → logprob: -8.400430679321289
    6. '        ' → logprob: -8.525430679321289
    7. 'def' → logprob: -9.525430679321289
    8. '#' → logprob: -9.900430679321289
    9. '      ' → logprob: -10.025430679321289
    10. ' =' → logprob: -10.025430679321289

Token 1252: ' want' (ID: 1682)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.2861980199813843
    2. '   ' → logprob: -1.4111980199813843
    3. 'continue' → logprob: -1.5361980199813843
    4. '.' → logprob: -2.411198139190674
    5. '.append' → logprob: -3.536198139190674
    6. ')' → logprob: -3.661198139190674
    7. '_' → logprob: -3.911198139190674
    8. '       ' → logprob: -4.161198139190674
    9. '_continue' → logprob: -4.411198139190674
    10. ' =' → logprob: -4.911198139190674

Token 1253: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.09676671028137207
    2. 'to' → logprob: -2.721766710281372
    3. '       ' → logprob: -3.846766710281372
    4. '```' → logprob: -6.471766471862793
    5. '   ' → logprob: -6.596766471862793
    6. ')' → logprob: -8.471766471862793
    7. 'continue' → logprob: -8.596766471862793
    8. 'positions' → logprob: -8.721766471862793
    9. '_to' → logprob: -9.096766471862793
    10. '
' → logprob: -9.221766471862793

Token 1254: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9890249371528625
    2. 'find' → logprob: -0.9890249371528625
    3. 'continue' → logprob: -1.9890248775482178
    4. 'process' → logprob: -2.4890248775482178
    5. 'start' → logprob: -4.864025115966797
    6. 'use' → logprob: -5.489025115966797
    7. ' find' → logprob: -5.614025115966797
    8. 'store' → logprob: -6.114025115966797
    9. 'search' → logprob: -6.364025115966797
    10. 'record' → logprob: -6.614025115966797

Token 1255: ' the' (ID: 290)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7866923213005066
    2. 'all' → logprob: -1.7866923809051514
    3. ' the' → logprob: -2.6616923809051514
    4. ' all' → logprob: -2.7866923809051514
    5. 'the' → logprob: -3.4116923809051514
    6. ' matches' → logprob: -3.4116923809051514
    7. 'matches' → logprob: -3.5366923809051514
    8. ' full' → logprob: -3.6616923809051514
    9. 'full' → logprob: -3.9116923809051514
    10. '_' → logprob: -4.036692142486572

Token 1256: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.3343270421028137
    2. 'number' → logprob: -1.334326982498169
    3. 'positions' → logprob: -5.459327220916748
    4. '_' → logprob: -5.959327220916748
    5. ' positions' → logprob: -6.209327220916748
    6. 'n' → logprob: -6.334327220916748
    7. 'result' → logprob: -6.959327220916748
    8. ' next' → logprob: -6.959327220916748
    9. ' result' → logprob: -6.959327220916748
    10. 'count' → logprob: -7.084327220916748

Token 1257: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.7480747103691101
    2. '_' → logprob: -1.2480747699737549
    3. ' of' → logprob: -2.248074769973755
    4. '_tokens' → logprob: -3.248074769973755
    5. '
' → logprob: -3.498074769973755
    6. 'of' → logprob: -3.623074769973755
    7. '_positions' → logprob: -4.248074531555176
    8. ' _' → logprob: -5.748074531555176
    9. '_token' → logprob: -5.998074531555176
    10. '_
' → logprob: -6.123074531555176

Token 1258: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.4637422263622284
    2. ')' → logprob: -2.588742256164551
    3. '(' → logprob: -2.713742256164551
    4. 'distinct' → logprob: -3.213742256164551
    5. '_' → logprob: -3.463742256164551
    6. ' full' → logprob: -3.838742256164551
    7. ' positions' → logprob: -3.838742256164551
    8. ' (' → logprob: -3.963742256164551
    9. ' ' → logprob: -4.338742256164551
    10. 'states' → logprob: -4.963742256164551

Token 1259: ' where' (ID: 1919)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10406457632780075
    2. '=' → logprob: -3.729064464569092
    3. '(' → logprob: -4.104064464569092
    4. '[' → logprob: -4.104064464569092
    5. '
' → logprob: -4.854064464569092
    6. ',' → logprob: -4.979064464569092
    7. '+' → logprob: -5.479064464569092
    8. '```' → logprob: -5.479064464569092
    9. ')' → logprob: -5.854064464569092
    10. ' where' → logprob: -6.229064464569092

Token 1260: ' concaten' (ID: 121942)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4203874170780182
    2. ' dp' → logprob: -2.2953875064849854
    3. ' full' → logprob: -2.2953875064849854
    4. 'full' → logprob: -2.4203875064849854
    5. ' the' → logprob: -4.170387268066406
    6. 'the' → logprob: -4.170387268066406
    7. 'a' → logprob: -4.920387268066406
    8. ' a' → logprob: -5.045387268066406
    9. ')' → logprob: -6.420387268066406
    10. '
' → logprob: -7.170387268066406

Token 1261: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.05802373215556145
    2. 'ations' → logprob: -4.183023929595947
    3. '_' → logprob: -4.683023929595947
    4. '   ' → logprob: -4.933023929595947
    5. 'ated' → logprob: -5.183023929595947
    6. ')' → logprob: -5.808023929595947
    7. ' =' → logprob: -6.058023929595947
    8. '       ' → logprob: -6.058023929595947
    9. '=' → logprob: -6.183023929595947
    10. 'ate' → logprob: -6.558023929595947

Token 1262: ' appears' (ID: 14518)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12635979056358337
    2. ' is' → logprob: -3.626359701156616
    3. ')' → logprob: -4.001359939575195
    4. '_occ' → logprob: -4.126359939575195
    5. ' _' → logprob: -4.501359939575195
    6. ' occurs' → logprob: -4.501359939575195
    7. '   ' → logprob: -5.126359939575195
    8. 's' → logprob: -5.501359939575195
    9. '       ' → logprob: -5.876359939575195
    10. ' ' → logprob: -6.001359939575195

Token 1263: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0799841359257698
    2. ':' → logprob: -3.079984188079834
    3. ',' → logprob: -4.204984188079834
    4. ' at' → logprob: -5.829984188079834
    5. '):' → logprob: -5.954984188079834
    6. '   ' → logprob: -6.454984188079834
    7. ')' → logprob: -6.579984188079834
    8. ' (' → logprob: -6.954984188079834
    9. ' in' → logprob: -7.204984188079834
    10. '.' → logprob: -7.454984188079834

Token 1264: 'starting' (ID: 78149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07476023584604263
    2. '),' → logprob: -4.074760437011719
    3. ' ending' → logprob: -4.324760437011719
    4. 'ending' → logprob: -5.324760437011719
    5. '):
' → logprob: -5.699760437011719
    6. ' )' → logprob: -5.699760437011719
    7. 'text' → logprob: -5.824760437011719
    8. '#' → logprob: -5.949760437011719
    9. ')
' → logprob: -6.199760437011719
    10. ' the' → logprob: -6.449760437011719

Token 1265: ' positions' (ID: 15897)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5466657876968384
    2. '_positions' → logprob: -1.4216657876968384
    3. ')' → logprob: -2.046665668487549
    4. 'from' → logprob: -4.296665668487549
    5. '_position' → logprob: -5.171665668487549
    6. '=' → logprob: -5.296665668487549
    7. '_pos' → logprob: -5.421665668487549
    8. ')_' → logprob: -5.671665668487549
    9. '_points' → logprob: -5.921665668487549
    10. 'positions' → logprob: -5.921665668487549

Token 1266: '),
' (ID: 2313)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06745287030935287
    2. ' +' → logprob: -3.567452907562256
    3. '):' → logprob: -4.442452907562256
    4. ')' → logprob: -4.817452907562256
    5. '       ' → logprob: -5.067452907562256
    6. '):
' → logprob: -5.192452907562256
    7. ':' → logprob: -6.817452907562256
    8. '=' → logprob: -7.067452907562256
    9. '   ' → logprob: -7.442452907562256
    10. ',' → logprob: -7.442452907562256

Token 1267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019329203059896827
    2. '
' → logprob: -8.001933097839355
    3. '           ' → logprob: -8.126933097839355
    4. '   ' → logprob: -8.126933097839355
    5. ',' → logprob: -8.501933097839355
    6. ')' → logprob: -8.626933097839355
    7. '        
' → logprob: -8.876933097839355
    8. ' (' → logprob: -9.626933097839355
    9. '```' → logprob: -9.751933097839355
    10. '(' → logprob: -10.126933097839355

Token 1268: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025349983479827642
    2. '
' → logprob: -6.752534866333008
    3. '        
' → logprob: -7.127534866333008
    4. '#' (adapté à ' #') → logprob: -8.127534866333008
    5. '           ' → logprob: -8.877534866333008
    6. '```' → logprob: -10.127534866333008
    7. '   ' → logprob: -10.377534866333008
    8. ',' → logprob: -11.627534866333008
    9. ')' → logprob: -12.002534866333008
    10. ' and' → logprob: -12.502534866333008

Token 1269: ' note' (ID: 7477)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04783250391483307
    2. '#' → logprob: -3.172832489013672
    3. '
' → logprob: -5.422832489013672
    4. ' #' → logprob: -8.672832489013672
    5. '        
' → logprob: -9.297832489013672
    6. '   ' → logprob: -10.422832489013672
    7. 'positions' → logprob: -10.422832489013672
    8. '           ' → logprob: -10.922832489013672
    9. '```' → logprob: -10.922832489013672
    10. '#
' → logprob: -11.797832489013672

Token 1270: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34192612767219543
    2. ' that' → logprob: -2.091926097869873
    3. ' =' → logprob: -2.591926097869873
    4. '        ' → logprob: -4.591926097869873
    5. ',' → logprob: -4.716926097869873
    6. '   ' → logprob: -4.966926097869873
    7. '=' → logprob: -4.966926097869873
    8. 'that' → logprob: -5.216926097869873
    9. '    ' → logprob: -5.341926097869873
    10. ':' → logprob: -5.466926097869873

Token 1271: ' dp' (ID: 21546)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2172129154205322
    2. '       ' → logprob: -1.9672129154205322
    3. '#' → logprob: -2.0922129154205322
    4. 'the' → logprob: -2.5922129154205322
    5. ' full' → logprob: -2.7172129154205322
    6. ' for' → logprob: -3.2172129154205322
    7. ' #' → logprob: -3.4672129154205322
    8. 'length' → logprob: -3.4672129154205322
    9. 'full' → logprob: -3.5922129154205322
    10. ' length' → logprob: -3.9672129154205322

Token 1272: ' tracks' (ID: 22172)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1978418231010437
    2. '_' → logprob: -3.0728418827056885
    3. '[(' → logprob: -3.3228418827056885
    4. '```' → logprob: -3.4478418827056885
    5. 'pos' → logprob: -4.197841644287109
    6. '[pos' → logprob: -4.322841644287109
    7. '_pos' → logprob: -4.447841644287109
    8. '   ' → logprob: -4.822841644287109
    9. ')' → logprob: -5.697841644287109
    10. '       ' → logprob: -6.072841644287109

Token 1273: ' end' (ID: 1268)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.22064030170440674
    2. 'the' → logprob: -3.095640182495117
    3. 'matches' → logprob: -3.595640182495117
    4. ' positions' → logprob: -3.845640182495117
    5. ' matches' → logprob: -4.220640182495117
    6. ' the' → logprob: -4.720640182495117
    7. 'ending' → logprob: -4.970640182495117
    8. '       ' → logprob: -5.220640182495117
    9. 'position' → logprob: -5.220640182495117
    10. ' ending' → logprob: -5.220640182495117

Token 1274: ' positions' (ID: 15897)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2849979102611542
    2. '_positions' → logprob: -2.1599979400634766
    3. '_pos' → logprob: -2.4099979400634766
    4. '_position' → logprob: -3.9099979400634766
    5. ')' → logprob: -4.659997940063477
    6. 'pos' → logprob: -6.034997940063477
    7. '[' → logprob: -6.159997940063477
    8. '
' → logprob: -6.284997940063477
    9. '   ' → logprob: -6.784997940063477
    10. ' positions' → logprob: -7.409997940063477

Token 1275: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47944122552871704
    2. '
' → logprob: -0.979441225528717
    3. '        
' → logprob: -6.104441165924072
    4. '
' → logprob: -7.229441165924072
    5. ',' → logprob: -7.354441165924072
    6. '```' → logprob: -7.979441165924072
    7. ',
' → logprob: -8.72944164276123
    8. ')' → logprob: -8.97944164276123
    9. '   ' → logprob: -8.97944164276123
    10. '           ' → logprob: -9.22944164276123

Token 1276: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011125401593744755
    2. '           ' → logprob: -5.511125564575195
    3. ' and' → logprob: -6.136125564575195
    4. ' but' → logprob: -7.136125564575195
    5. '<|end|>' → logprob: -7.386125564575195
    6. '
' → logprob: -7.511125564575195
    7. '        
' → logprob: -7.511125564575195
    8. '   ' → logprob: -8.011125564575195
    9. '               ' → logprob: -8.386125564575195
    10. ',' → logprob: -8.386125564575195

Token 1277: ' starting' (ID: 8601)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.0162832736968994
    2. ' we' → logprob: -1.5162832736968994
    3. ' start' → logprob: -1.8912832736968994
    4. '#' → logprob: -2.6412832736968994
    5. 'we' → logprob: -3.0162832736968994
    6. ' for' → logprob: -3.7662832736968994
    7. 'starting' → logprob: -3.7662832736968994
    8. 'positions' → logprob: -4.01628303527832
    9. ' the' → logprob: -4.14128303527832
    10. ' starting' → logprob: -4.14128303527832

Token 1278: ' position' (ID: 4010)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43030664324760437
    2. '_positions' → logprob: -1.1803066730499268
    3. '_pos' → logprob: -3.1803066730499268
    4. '_position' → logprob: -7.555306434631348
    5. 'pos' → logprob: -9.430306434631348
    6. ' _' → logprob: -10.055306434631348
    7. 'positions' → logprob: -10.180306434631348
    8. '_points' → logprob: -10.180306434631348
    9. '_
' → logprob: -10.305306434631348
    10. '```' → logprob: -10.680306434631348

Token 1279: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8632596731185913
    2. '=' → logprob: -1.2382596731185913
    3. ' =' → logprob: -1.7382596731185913
    4. 's' → logprob: -2.488259792327881
    5. ' +' → logprob: -3.863259792327881
    6. '-' → logprob: -5.488259792327881
    7. '_' → logprob: -6.488259792327881
    8. '+=' → logprob: -7.738259792327881
    9. ' is' → logprob: -7.863259792327881
    10. ')' → logprob: -7.863259792327881

Token 1280: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.7442982792854309
    2. 'pos' → logprob: -1.4942982196807861
    3. 'dp' → logprob: -2.119298219680786
    4. 'i' → logprob: -2.619298219680786
    5. 'position' → logprob: -2.994298219680786
    6. ' end' → logprob: -3.494298219680786
    7. ' pos' → logprob: -5.244298458099365
    8. ' i' → logprob: -5.244298458099365
    9. ' dp' → logprob: -5.369298458099365
    10. ' position' → logprob: -5.619298458099365

Token 1281: '_pos' (ID: 14692)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9249587059020996
    2. '-' → logprob: -1.0499587059020996
    3. ' -' → logprob: -2.4249587059020996
    4. '_pos' → logprob: -3.4249587059020996
    5. ' +' → logprob: -3.6749587059020996
    6. '_positions' → logprob: -3.6749587059020996
    7. '_' → logprob: -3.9249587059020996
    8. '_position' → logprob: -3.9249587059020996
    9. ')' → logprob: -4.6749587059021
    10. 'pos' → logprob: -5.1749587059021

Token 1282: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1135849952697754
    2. ' +' → logprob: -1.1135849952697754
    3. '+' → logprob: -1.4885849952697754
    4. '
' → logprob: -3.1135849952697754
    5. '   ' → logprob: -3.7385849952697754
    6. ' =' → logprob: -4.613584995269775
    7. '           ' → logprob: -4.863584995269775
    8. ')' → logprob: -5.238584995269775
    9. ',' → logprob: -5.988584995269775
    10. '```' → logprob: -6.113584995269775

Token 1283: ' total' (ID: 3609)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.030404167249798775
    2. ' length' → logprob: -3.5304040908813477
    3. 'sum' → logprob: -7.530404090881348
    4. '(length' → logprob: -10.030404090881348
    5. ' sum' → logprob: -10.405404090881348
    6. 'total' → logprob: -11.030404090881348
    7. '   ' → logprob: -12.530404090881348
    8. 'len' → logprob: -12.655404090881348
    9. ' total' → logprob: -12.905404090881348
    10. ' (' → logprob: -13.030404090881348

Token 1284: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0132450545206666
    2. '_len' → logprob: -4.638245105743408
    3. '_' → logprob: -5.763245105743408
    4. '_l' → logprob: -8.76324462890625
    5. '_lengths' → logprob: -10.13824462890625
    6. 'length' → logprob: -10.26324462890625
    7. '_element' → logprob: -10.88824462890625
    8. '_sum' → logprob: -11.01324462890625
    9. '_concat' → logprob: -11.38824462890625
    10. '_count' → logprob: -11.63824462890625

Token 1285: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2853986322879791
    2. '
' → logprob: -1.4103986024856567
    3. '        
' → logprob: -6.910398483276367
    4. '   ' → logprob: -7.410398483276367
    5. ',' → logprob: -7.785398483276367
    6. '
' → logprob: -8.160398483276367
    7. '```' → logprob: -8.160398483276367
    8. ':' → logprob: -8.160398483276367
    9. '           ' → logprob: -8.535398483276367
    10. ':
' → logprob: -8.785398483276367

Token 1286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008183232857845724
    2. 'n' → logprob: -8.000818252563477
    3. ' ' → logprob: -8.125818252563477
    4. 'len' → logprob: -9.125818252563477
    5. ' n' → logprob: -9.625818252563477
    6. '
' → logprob: -12.500818252563477
    7. '```' → logprob: -13.000818252563477
    8. ' len' → logprob: -13.125818252563477
    9. 'length' → logprob: -13.250818252563477
    10. '   ' → logprob: -14.625818252563477

Token 1287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. 'len' → logprob: -12.75001049041748
    3. ' ' → logprob: -12.87501049041748
    4. 'n' → logprob: -12.87501049041748
    5. '```' → logprob: -14.00001049041748
    6. '
' → logprob: -14.50001049041748
    7. 'sum' → logprob: -15.62501049041748
    8. 'length' → logprob: -15.87501049041748
    9. ' n' → logprob: -16.500009536743164
    10. '   ' → logprob: -17.250009536743164

Token 1288: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07417955249547958
    2. '
' → logprob: -2.6991796493530273
    3. '   ' → logprob: -6.324179649353027
    4. '
' → logprob: -7.949179649353027
    5. '```' → logprob: -7.949179649353027
    6. ')' → logprob: -8.074179649353027
    7. '        
' → logprob: -8.574179649353027
    8. ':' → logprob: -8.699179649353027
    9. ',' → logprob: -8.949179649353027
    10. '(' → logprob: -9.074179649353027

Token 1289: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10559443384408951
    2. '       ' → logprob: -2.3555943965911865
    3. '        
' → logprob: -6.480594635009766
    4. '```' → logprob: -6.730594635009766
    5. '   ' → logprob: -6.855594635009766
    6. 'total' → logprob: -8.605594635009766
    7. 'full' → logprob: -8.605594635009766
    8. '    
' → logprob: -8.605594635009766
    9. '`
' → logprob: -8.980594635009766
    10. '#' → logprob: -9.105594635009766

Token 1290: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7232698202133179
    2. '   ' → logprob: -1.2232698202133179
    3. 'ac' → logprob: -1.5982698202133179
    4. 'autom' → logprob: -4.473269939422607
    5. 'aho' → logprob: -6.598269939422607
    6. '
' → logprob: -6.598269939422607
    7. '#' (adapté à ' #') → logprob: -7.098269939422607
    8. '        
' → logprob: -7.223269939422607
    9. 'ach' → logprob: -7.348269939422607
    10. 'ah' → logprob: -8.09826946258545

Token 1291: ' Pre' (ID: 4659)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.7087180614471436
    2. '   ' → logprob: -0.8337180614471436
    3. '       ' → logprob: -3.2087180614471436
    4. 'autom' → logprob: -3.9587180614471436
    5. 'aho' → logprob: -4.958718299865723
    6. 'ah' → logprob: -6.208718299865723
    7. 'auto' → logprob: -7.333718299865723
    8. 'ach' → logprob: -7.333718299865723
    9. '#' → logprob: -7.458718299865723
    10. '
' → logprob: -7.708718299865723

Token 1292: 'compute' (ID: 54521)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.6777551770210266
    2. 'matches' → logprob: -1.5527551174163818
    3. 'pare' → logprob: -2.802755117416382
    4. 'fix' → logprob: -2.927755117416382
    5. 'compute' → logprob: -2.927755117416382
    6. 'dict' → logprob: -3.052755117416382
    7. 'processed' → logprob: -3.802755117416382
    8. 'c' → logprob: -4.177755355834961
    9. 'occ' → logprob: -5.802755355834961
    10. 'computed' → logprob: -5.802755355834961

Token 1293: ' full' (ID: 3149)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.380978524684906
    2. 'length' → logprob: -2.255978584289551
    3. 'element' → logprob: -2.630978584289551
    4. 'full' → logprob: -3.755978584289551
    5. 'matches' → logprob: -3.755978584289551
    6. 'occ' → logprob: -4.005978584289551
    7. 'word' → logprob: -4.380978584289551
    8. '#' → logprob: -4.380978584289551
    9. 'match' → logprob: -4.880978584289551
    10. 'elem' → logprob: -4.880978584289551

Token 1294: ' mask' (ID: 10910)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0003827676991932094
    2. '_length' → logprob: -8.000382423400879
    3. '_len' → logprob: -10.250382423400879
    4. '_masks' → logprob: -12.125382423400879
    5. 'mask' → logprob: -12.250382423400879
    6. 'length' → logprob: -15.125382423400879
    7. '_' → logprob: -15.250382423400879
    8. '_full' → logprob: -15.250382423400879
    9. '_bit' → logprob: -16.000383377075195
    10. '
' → logprob: -16.000383377075195

Token 1295: ' (' (ID: 350)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.3353366255760193
    2. 'full' → logprob: -1.710336685180664
    3. '
' → logprob: -3.085336685180664
    4. ' =' → logprob: -3.460336685180664
    5. '       ' → logprob: -3.710336685180664
    6. '=' → logprob: -6.835336685180664
    7. '_full' → logprob: -7.585336685180664
    8. '        
' → logprob: -8.085336685180664
    9. '`' → logprob: -8.960336685180664
    10. '```' → logprob: -8.960336685180664

Token 1296: 'all' (ID: 586)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.04013597220182419
    2. '(' → logprob: -3.2901358604431152
    3. '1' → logprob: -6.790135860443115
    4. '       ' → logprob: -7.790135860443115
    5. ' full' → logprob: -8.540136337280273
    6. '(full' → logprob: -9.415136337280273
    7. '
' → logprob: -9.665136337280273
    8. '   ' → logprob: -9.790136337280273
    9. ')' → logprob: -10.040136337280273
    10. '```' → logprob: -10.915136337280273

Token 1297: ' elements' (ID: 8632)
  Prédit: '_mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.2065659910440445
    2. '1' → logprob: -2.581566095352173
    3. ' <<' → logprob: -3.456566095352173
    4. '<<' → logprob: -3.581566095352173
    5. '_masks' → logprob: -4.581565856933594
    6. ' =' → logprob: -5.206565856933594
    7. ' (' → logprob: -5.206565856933594
    8. ')' → logprob: -5.206565856933594
    9. ' ' → logprob: -5.331565856933594
    10. '_' → logprob: -5.331565856933594

Token 1298: ' used' (ID: 2061)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13051782548427582
    2. '=' → logprob: -2.2555177211761475
    3. '_mask' → logprob: -4.755517959594727
    4. ')' → logprob: -5.130517959594727
    5. '_' → logprob: -6.630517959594727
    6. '   ' → logprob: -8.130517959594727
    7. '=(' → logprob: -8.130517959594727
    8. '       ' → logprob: -8.380517959594727
    9. '
' → logprob: -8.505517959594727
    10. ')
' → logprob: -8.880517959594727

Token 1299: ')
' (ID: 446)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00385672808624804
    2. '=' → logprob: -5.878856658935547
    3. ')' → logprob: -7.253856658935547
    4. ')
' → logprob: -9.253856658935547
    5. '       ' → logprob: -9.503856658935547
    6. '
' → logprob: -9.628856658935547
    7. '   ' → logprob: -9.878856658935547
    8. '_full' → logprob: -10.753856658935547
    9. '=(' → logprob: -11.753856658935547
    10. ' =
' → logprob: -12.003856658935547

Token 1300: '       ' (ID: 309)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.8631011843681335
    2. 'full' → logprob: -0.8631011843681335
    3. '       ' → logprob: -1.8631012439727783
    4. '
' → logprob: -7.113101005554199
    5. '```' → logprob: -8.9881010055542
    6. '`' → logprob: -9.6131010055542
    7. '   ' → logprob: -10.4881010055542
    8. '        
' → logprob: -11.1131010055542
    9. '_full' → logprob: -11.6131010055542
    10. '	full' → logprob: -11.7381010055542

Token 1301: ' full' (ID: 3149)
  Prédit: ' full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.6941618919372559
    2. 'full' (adapté à ' full') → logprob: -0.6941618919372559
    3. '       ' → logprob: -6.944161891937256
    4. '```' → logprob: -10.694162368774414
    5. '`' → logprob: -11.569162368774414
    6. '
' → logprob: -11.694162368774414
    7. '   ' → logprob: -12.694162368774414
    8. '``' → logprob: -12.694162368774414
    9. '	full' → logprob: -13.444162368774414
    10. '        
' → logprob: -14.569162368774414

Token 1302: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.9504606825648807e-05
    2. '_' → logprob: -11.000019073486328
    3. '_masks' → logprob: -13.250019073486328
    4. ' _' → logprob: -15.125019073486328
    5. '_MASK' → logprob: -15.375019073486328
    6. '\' → logprob: -15.750019073486328
    7. 'mask' → logprob: -16.125019073486328
    8. '_m' → logprob: -16.750019073486328
    9. '
' → logprob: -17.000019073486328
    10. '```' → logprob: -17.250019073486328

Token 1303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759438276290894
    2. '=' → logprob: -0.8259438276290894
    3. ' =
' → logprob: -13.450943946838379
    4. '=
' → logprob: -13.575943946838379
    5. '   ' → logprob: -13.825943946838379
    6. ' ' → logprob: -15.325943946838379
    7. ')' → logprob: -15.825943946838379
    8. '```' → logprob: -16.825942993164062
    9. '
' → logprob: -17.325942993164062
    10. '=(' → logprob: -17.450942993164062

Token 1304: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018309378996491432
    2. ' (' → logprob: -4.018309593200684
    3. '(full' → logprob: -9.518309593200684
    4. '(n' → logprob: -9.768309593200684
    5. '       ' → logprob: -10.768309593200684
    6. '   ' → logprob: -12.768309593200684
    7. '(all' → logprob: -14.393309593200684
    8. '           ' → logprob: -14.768309593200684
    9. '(num' → logprob: -14.893309593200684
    10. '
' → logprob: -14.893309593200684

Token 1305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861468818038702
    2. '(' → logprob: -4.758614540100098
    3. ' (' → logprob: -17.133615493774414
    4. '   ' → logprob: -17.258615493774414
    5. ' ' → logprob: -19.758615493774414
    6. '
' → logprob: -20.383615493774414
    7. '           ' → logprob: -21.508615493774414
    8. '```' → logprob: -21.633615493774414
    9. '       ' → logprob: -21.758615493774414
    10. '[' → logprob: -21.883615493774414

Token 1306: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.004078639671206474
    2. ' <<' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.379077911376953
    4. '1' → logprob: -17.129077911376953
    5. '<<<' → logprob: -18.004077911376953
    6. '<<(' → logprob: -18.004077911376953
    7. '<' → logprob: -19.254077911376953
    8. '<<"' → logprob: -19.254077911376953
    9. '
' → logprob: -19.879077911376953
    10. ' ' → logprob: -20.004077911376953

Token 1307: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: 0.0
    2. ' n' → logprob: -16.875
    3. '
' → logprob: -19.75
    4. ')n' → logprob: -21.0
    5. '(n' → logprob: -21.375
    6. '	n' → logprob: -21.375
    7. 'len' → logprob: -21.625
    8. '   ' → logprob: -21.75
    9. '```' → logprob: -23.375
    10. '$n' → logprob: -23.625

Token 1308: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012678056373260915
    2. ')-' → logprob: -9.000126838684082
    3. ' )' → logprob: -13.000126838684082
    4. '')' → logprob: -14.500126838684082
    5. ')
' → logprob: -15.875126838684082
    6. '")' → logprob: -16.000125885009766
    7. '       ' → logprob: -16.375125885009766
    8. '   ' → logprob: -17.250125885009766
    9. '),' → logprob: -17.250125885009766
    10. ')-(' → logprob: -17.250125885009766

Token 1309: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2775726020336151
    2. ')' → logprob: -1.7775726318359375
    3. '-' → logprob: -2.6525726318359375
    4. ')-' → logprob: -6.0275726318359375
    5. '       ' → logprob: -7.9025726318359375
    6. ' )' → logprob: -10.652572631835938
    7. '
' → logprob: -10.652572631835938
    8. '```' → logprob: -12.152572631835938
    9. ' ' → logprob: -12.402572631835938
    10. ' ' → logprob: -13.152572631835938

Token 1310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.37504005432129
    4. '```' → logprob: -17.50004005432129
    5. 'n' → logprob: -18.50004005432129
    6. ')' → logprob: -18.50004005432129
    7. '
' → logprob: -18.62504005432129
    8. '           ' → logprob: -19.12504005432129
    9. '       ' → logprob: -19.37504005432129
    10. '`' → logprob: -19.62504005432129

Token 1311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -16.125
    3. 'n' → logprob: -17.125
    4. ' ' → logprob: -17.375
    5. '```' → logprob: -17.875
    6. '   ' → logprob: -18.75
    7. '0' → logprob: -19.375
    8. 'import' → logprob: -19.375
    9. ')' → logprob: -20.25
    10. '`' → logprob: -20.75

Token 1312: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4111248850822449
    2. '       ' → logprob: -1.1611249446868896
    3. 'matches' → logprob: -4.4111247062683105
    4. '        
' → logprob: -5.0361247062683105
    5. '#' → logprob: -6.0361247062683105
    6. '
' → logprob: -7.0361247062683105
    7. '   ' → logprob: -7.9111247062683105
    8. 'occ' → logprob: -7.9111247062683105
    9. 'positions' → logprob: -8.786125183105469
    10. ' matches' → logprob: -8.911125183105469

Token 1313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07394442707300186
    2. '
' → logprob: -2.948944330215454
    3. '   ' → logprob: -4.573944568634033
    4. '        
' → logprob: -5.323944568634033
    5. 'matches' → logprob: -6.448944568634033
    6. '    
' → logprob: -7.198944568634033
    7. 'ac' → logprob: -7.448944568634033
    8. 'autom' → logprob: -8.823944091796875
    9. '#' → logprob: -9.323944091796875
    10. 'occ' → logprob: -9.448944091796875

Token 1314: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23084358870983124
    2. 'ac' → logprob: -1.8558435440063477
    3. 'autom' → logprob: -3.8558435440063477
    4. '       ' → logprob: -4.480843544006348
    5. 'aho' → logprob: -4.480843544006348
    6. '
' → logprob: -6.355843544006348
    7. 'ah' → logprob: -7.230843544006348
    8. '        
' → logprob: -7.355843544006348
    9. '    
' → logprob: -7.355843544006348
    10. '#' → logprob: -7.730843544006348

Token 1315: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0032720642630010843
    2. '_len' → logprob: -5.75327205657959
    3. '_' → logprob: -9.75327205657959
    4. 'length' → logprob: -11.50327205657959
    5. '_mask' → logprob: -11.75327205657959
    6. '_lengths' → logprob: -12.37827205657959
    7. '_elements' → logprob: -12.37827205657959
    8. '_element' → logprob: -13.25327205657959
    9. '_total' → logprob: -13.37827205657959
    10. '_sum' → logprob: -13.62827205657959

Token 1316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7083587646484375
    2. ' =' → logprob: -0.7083587646484375
    3. ' +=' → logprob: -4.3333587646484375
    4. '+=' → logprob: -7.4583587646484375
    5. '_' → logprob: -7.5833587646484375
    6. ' |=' → logprob: -8.458358764648438
    7. ' ' → logprob: -8.583358764648438
    8. ')' → logprob: -8.583358764648438
    9. ' -=' → logprob: -9.958358764648438
    10. ',' → logprob: -10.208358764648438

Token 1317: ' sum' (ID: 4215)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.1894526481628418
    2. ' length' → logprob: -2.064452648162842
    3. 'sum' → logprob: -3.314452648162842
    4. ' sum' → logprob: -4.689452648162842
    5. '   ' → logprob: -9.314453125
    6. 'len' → logprob: -10.689453125
    7. '    ' → logprob: -10.814453125
    8. '0' → logprob: -11.814453125
    9. '(length' → logprob: -13.064453125
    10. ' ' → logprob: -13.064453125

Token 1318: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.8693753480911255
    2. '(element' → logprob: -1.4943753480911255
    3. '(length' → logprob: -2.119375228881836
    4. 'length' → logprob: -2.244375228881836
    5. 'len' → logprob: -2.994375228881836
    6. 'element' → logprob: -3.119375228881836
    7. '[len' → logprob: -4.744375228881836
    8. '+' → logprob: -4.869375228881836
    9. '(
' → logprob: -5.244375228881836
    10. '(' → logprob: -5.494375228881836

Token 1319: '(s' (ID: 1858)
  Prédit: '(element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(element' → logprob: -0.36001697182655334
    2. 'element' → logprob: -1.735016942024231
    3. 's' → logprob: -2.7350170612335205
    4. '(s' → logprob: -2.8600170612335205
    5. '(e' → logprob: -5.985016822814941
    6. 'el' → logprob: -8.235016822814941
    7. 'e' → logprob: -8.485016822814941
    8. '(' → logprob: -8.860016822814941
    9. '(
' → logprob: -9.110016822814941
    10. 'elem' → logprob: -9.485016822814941

Token 1320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5524685978889465
    2. 'for' → logprob: -1.1774685382843018
    3. ' for' → logprob: -2.1774685382843018
    4. '(s' → logprob: -6.302468776702881
    5. 's' → logprob: -7.427468776702881
    6. '       ' → logprob: -8.302468299865723
    7. ')
' → logprob: -9.302468299865723
    8. ')+' → logprob: -9.427468299865723
    9. '[i' → logprob: -10.177468299865723
    10. '           ' → logprob: -10.177468299865723

Token 1321: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3966599702835083
    2. 'for' → logprob: -1.3966599702835083
    3. ' for' → logprob: -3.2716598510742188
    4. '(s' → logprob: -4.021659851074219
    5. '+' → logprob: -4.771659851074219
    6. '(' → logprob: -5.521659851074219
    7. ')+' → logprob: -5.771659851074219
    8. 's' → logprob: -6.271659851074219
    9. '[' → logprob: -6.271659851074219
    10. '[i' → logprob: -7.396659851074219

Token 1322: ' s' (ID: 265)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.0006998073076829314
    2. 's' → logprob: -7.625699996948242
    3. ' element' → logprob: -8.500699996948242
    4. '	element' → logprob: -13.125699996948242
    5. '[element' → logprob: -13.750699996948242
    6. ' s' → logprob: -13.750699996948242
    7. '_s' → logprob: -14.250699996948242
    8. '(element' → logprob: -14.250699996948242
    9. '_element' → logprob: -14.625699996948242
    10. 'e' → logprob: -14.625699996948242

Token 1323: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6934336423873901
    2. ' in' → logprob: -0.6934336423873901
    3. 's' → logprob: -8.44343376159668
    4. 'element' → logprob: -10.44343376159668
    5. ')' → logprob: -11.69343376159668
    6. ' s' → logprob: -12.31843376159668
    7. 'i' → logprob: -12.69343376159668
    8. ' ' → logprob: -12.69343376159668
    9. '   ' → logprob: -12.81843376159668
    10. 'n' → logprob: -12.81843376159668

Token 1324: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.00023083435371518135
    2. ' element' → logprob: -8.37523078918457
    3. '
' → logprob: -16.37523078918457
    4. '[element' → logprob: -16.37523078918457
    5. '	element' → logprob: -16.87523078918457
    6. '(element' → logprob: -17.62523078918457
    7. 's' → logprob: -18.00023078918457
    8. '   ' → logprob: -19.37523078918457
    9. 'entity' → logprob: -19.37523078918457
    10. '.element' → logprob: -19.50023078918457

Token 1325: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -2.045823566731997e-05
    2. '_' → logprob: -12.000020027160645
    3. 'strings' → logprob: -12.500020027160645
    4. '_s' → logprob: -12.500020027160645
    5. 's' → logprob: -12.625020027160645
    6. 'Strings' → logprob: -14.375020027160645
    7. ')' → logprob: -14.625020027160645
    8. ')_' → logprob: -14.875020027160645
    9. ' _' → logprob: -15.250020027160645
    10. '_string' → logprob: -15.375020027160645

Token 1326: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15789145231246948
    2. '       ' → logprob: -2.4078915119171143
    3. '
' → logprob: -3.1578915119171143
    4. ' +' → logprob: -5.032891273498535
    5. '+' → logprob: -5.532891273498535
    6. ')
' → logprob: -6.157891273498535
    7. '<|end|>' → logprob: -8.032891273498535
    8. ' )' → logprob: -8.907891273498535
    9. ')+' → logprob: -9.032891273498535
    10. '```' → logprob: -9.282891273498535

Token 1327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28865572810173035
    2. '
' → logprob: -1.6636557579040527
    3. '   ' → logprob: -2.9136557579040527
    4. '        
' → logprob: -5.788655757904053
    5. '    
' → logprob: -6.788655757904053
    6. 'matches' → logprob: -6.788655757904053
    7. 'ac' → logprob: -7.913655757904053
    8. 'autom' → logprob: -8.038655281066895
    9. '#' → logprob: -8.288655281066895
    10. '```' → logprob: -8.538655281066895

Token 1328: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7669987678527832
    2. '       ' → logprob: -1.1419987678527832
    3. 'ac' → logprob: -1.8919987678527832
    4. 'autom' → logprob: -3.516998767852783
    5. '#' (adapté à ' #') → logprob: -4.266998767852783
    6. 'matches' → logprob: -4.891998767852783
    7. 'aho' → logprob: -5.391998767852783
    8. '
' → logprob: -5.641998767852783
    9. 'tr' → logprob: -6.516998767852783
    10. '        
' → logprob: -6.641998767852783

Token 1329: ' Build' (ID: 10885)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31596115231513977
    2. 'ac' → logprob: -1.4409611225128174
    3. 'autom' → logprob: -3.8159611225128174
    4. '       ' → logprob: -5.6909613609313965
    5. 'aho' → logprob: -5.6909613609313965
    6. '
' → logprob: -6.3159613609313965
    7. 'ah' → logprob: -6.9409613609313965
    8. '#' → logprob: -7.4409613609313965
    9. '    
' → logprob: -7.6909613609313965
    10. 'auto' → logprob: -8.315960884094238

Token 1330: ' A' (ID: 355)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.19517187774181366
    2. 'autom' → logprob: -2.32017183303833
    3. 'aho' → logprob: -3.19517183303833
    4. '   ' → logprob: -3.82017183303833
    5. 'ah' → logprob: -4.94517183303833
    6. 'auto' → logprob: -6.19517183303833
    7. ' aho' → logprob: -6.44517183303833
    8. ' autom' → logprob: -6.69517183303833
    9. '
' → logprob: -6.82017183303833
    10. ' ac' → logprob: -7.57017183303833

Token 1331: 'ho' (ID: 1555)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.6212274432182312
    2. 'ho' → logprob: -0.8712274432182312
    3. 'C' → logprob: -3.996227502822876
    4. 'cor' → logprob: -4.121227264404297
    5. '   ' → logprob: -6.246227264404297
    6. '_C' → logprob: -6.621227264404297
    7. '_cor' → logprob: -6.621227264404297
    8. ' Cor' → logprob: -6.871227264404297
    9. 'Coroutine' → logprob: -7.121227264404297
    10. 'co' → logprob: -7.871227264404297

Token 1332: ' autom' (ID: 5099)
  Prédit: 'autom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'autom' → logprob: -0.8165442943572998
    2. 'ac' → logprob: -0.9415442943572998
    3. 'Cor' → logprob: -2.4415442943573
    4. '
' → logprob: -3.8165442943573
    5. 'cor' → logprob: -4.191544532775879
    6. '   ' → logprob: -4.316544532775879
    7. '       ' → logprob: -4.691544532775879
    8. 'Autom' → logprob: -5.066544532775879
    9. 'AC' → logprob: -5.191544532775879
    10. ' =' → logprob: -6.191544532775879

Token 1333: 'aton' (ID: 24850)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.006201092153787613
    2. 'ac' → logprob: -6.506201267242432
    3. '```' → logprob: -6.756201267242432
    4. 'tick' → logprob: -7.131201267242432
    5. 'cor' → logprob: -7.381201267242432
    6. 'ack' → logprob: -7.756201267242432
    7. 'Ac' → logprob: -7.881201267242432
    8. 'tic' → logprob: -9.006200790405273
    9. 'Corr' → logprob: -9.256200790405273
    10. 'it' → logprob: -9.256200790405273

Token 1334: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09354493767023087
    2. 'ac' → logprob: -2.8435449600219727
    3. '       ' → logprob: -3.8435449600219727
    4. 'autom' → logprob: -4.968544960021973
    5. 'aho' → logprob: -7.468544960021973
    6. 'ach' → logprob: -7.468544960021973
    7. 'ah' → logprob: -7.593544960021973
    8. 'auto' → logprob: -8.718544960021973
    9. '    
' → logprob: -8.843544960021973
    10. '
' → logprob: -9.468544960021973

Token 1335: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.0017376589821651578
    2. ' element' → logprob: -6.376737594604492
    3. '   ' → logprob: -12.251737594604492
    4. 'each' → logprob: -12.251737594604492
    5. 'e' → logprob: -12.376737594604492
    6. '[element' → logprob: -12.501737594604492
    7. 'elem' → logprob: -12.751737594604492
    8. 'word' → logprob: -12.876737594604492
    9. '(element' → logprob: -13.126737594604492
    10. 'range' → logprob: -13.126737594604492

Token 1336: ' strings' (ID: 18279)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.671585202217102
    2. '_strings' → logprob: -0.921585202217102
    3. '       ' → logprob: -3.1715850830078125
    4. '_cor' → logprob: -3.6715850830078125
    5. 'strings' → logprob: -4.2965850830078125
    6. '   ' → logprob: -5.5465850830078125
    7. ' Cor' → logprob: -6.9215850830078125
    8. 'Strings' → logprob: -7.0465850830078125
    9. '_c' → logprob: -7.1715850830078125
    10. '
' → logprob: -7.5465850830078125

Token 1337: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0997784435749054
    2. '       ' → logprob: -3.224778413772583
    3. 'ac' → logprob: -3.224778413772583
    4. '
' → logprob: -4.474778652191162
    5. 'autom' → logprob: -6.724778652191162
    6. '    
' → logprob: -6.849778652191162
    7. 'ach' → logprob: -7.349778652191162
    8. '        
' → logprob: -8.349778175354004
    9. 'for' → logprob: -8.474778175354004
    10. 'aho' → logprob: -9.224778175354004

Token 1338: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03954268991947174
    2. '       ' → logprob: -3.2895426750183105
    3. 'ac' → logprob: -7.4145426750183105
    4. '
' → logprob: -8.164543151855469
    5. 'autom' → logprob: -8.539543151855469
    6. '    
' → logprob: -8.789543151855469
    7. 'ach' → logprob: -9.539543151855469
    8. 'aho' → logprob: -9.664543151855469
    9. '        
' → logprob: -10.164543151855469
    10. 'ah' → logprob: -11.039543151855469

Token 1339: ' aho' (ID: 46361)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17269018292427063
    2. 'ac' → logprob: -2.0476901531219482
    3. 'autom' → logprob: -3.9226901531219482
    4. '       ' → logprob: -5.547690391540527
    5. 'aho' (adapté à ' aho') → logprob: -6.172690391540527
    6. 'ah' → logprob: -6.672690391540527
    7. 'auto' → logprob: -7.422690391540527
    8. '    
' → logprob: -8.422690391540527
    9. ' aho' → logprob: -8.547690391540527
    10. '```' → logprob: -8.547690391540527

Token 1340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35238590836524963
    2. '.build' → logprob: -2.102385997772217
    3. '.' → logprob: -2.227385997772217
    4. '=' → logprob: -3.102385997772217
    5. 'Cor' → logprob: -4.352385997772217
    6. '.=' → logprob: -5.852385997772217
    7. '.add' → logprob: -6.477385997772217
    8. ').' → logprob: -7.602385997772217
    9. '   ' → logprob: -7.602385997772217
    10. '.cor' → logprob: -7.727385997772217

Token 1341: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.029753385111689568
    2. ' A' → logprob: -3.5297534465789795
    3. '   ' → logprob: -13.279753684997559
    4. '	A' → logprob: -14.154753684997559
    5. ' ' → logprob: -15.029753684997559
    6. ' aho' → logprob: -16.779752731323242
    7. '    ' → logprob: -16.904752731323242
    8. '=A' → logprob: -17.404752731323242
    9. '
' → logprob: -17.904752731323242
    10. '  ' → logprob: -18.029752731323242

Token 1342: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.00013333676906768233
    2. 'Cor' → logprob: -9.125133514404297
    3. 'h' → logprob: -11.000133514404297
    4. 'Ho' → logprob: -13.750133514404297
    5. 'cho' → logprob: -13.875133514404297
    6. 'C' → logprob: -14.250133514404297
    7. '_C' → logprob: -14.250133514404297
    8. 'хо' → logprob: -14.250133514404297
    9. 'A' → logprob: -14.625133514404297
    10. '=' → logprob: -15.000133514404297

Token 1343: 'Cor' (ID: 11534)
  Prédit: 'Cor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -8.983476436696947e-05
    2. 'C' → logprob: -10.500089645385742
    3. '.' → logprob: -10.875089645385742
    4. '.C' → logprob: -11.250089645385742
    5. 'cor' → logprob: -11.500089645385742
    6. '(C' → logprob: -12.875089645385742
    7. '_C' → logprob: -13.125089645385742
    8. 'Correlation' → logprob: -13.375089645385742
    9. ' Cor' → logprob: -13.625089645385742
    10. ')' → logprob: -13.625089645385742

Token 1344: 'as' (ID: 288)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.32140660285949707
    2. 'as' → logprob: -1.321406602859497
    3. 's' → logprob: -6.196406364440918
    4. 'is' → logprob: -6.821406364440918
    5. '```' → logprob: -6.821406364440918
    6. '
' → logprob: -7.321406364440918
    7. 'ack' → logprob: -7.571406364440918
    8. 'asic' → logprob: -7.946406364440918
    9. 'ac' → logprob: -8.071406364440918
    10. 'os' → logprob: -8.196406364440918

Token 1345: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.001091639045625925
    2. '
' → logprob: -7.251091480255127
    3. '```' → logprob: -9.501091957092285
    4. 'ic' → logprob: -10.001091957092285
    5. 'ich' → logprob: -10.376091957092285
    6. '   ' → logprob: -10.626091957092285
    7. 'icks' → logprob: -11.001091957092285
    8. 'ck' → logprob: -11.126091957092285
    9. ' ' → logprob: -11.251091957092285
    10. 's' → logprob: -11.501091957092285

Token 1346: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4733293056488037
    2. 'for' → logprob: -1.7233293056488037
    3. '<|end|>' → logprob: -2.2233293056488037
    4. '<|end|>' → logprob: -3.2233293056488037
    5. '   ' → logprob: -4.098329544067383
    6. '.' → logprob: -4.848329544067383
    7. '       ' → logprob: -5.598329544067383
    8. ' for' → logprob: -5.598329544067383
    9. '  
' → logprob: -5.598329544067383
    10. '    
' → logprob: -6.098329544067383

Token 1347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008669526316225529
    2. 'for' → logprob: -4.758669376373291
    3. ' for' → logprob: -10.13366985321045
    4. '
' → logprob: -11.88366985321045
    5. '        
' → logprob: -12.50866985321045
    6. '   ' → logprob: -12.75866985321045
    7. '```' → logprob: -14.25866985321045
    8. '<|end|>' → logprob: -15.13366985321045
    9. '	for' → logprob: -15.50866985321045
    10. '           ' → logprob: -15.50866985321045

Token 1348: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0052866460755467415
    2. '       ' → logprob: -5.255286693572998
    3. ' for' → logprob: -9.88028621673584
    4. '```' → logprob: -14.38028621673584
    5. '   ' → logprob: -14.50528621673584
    6. '
' → logprob: -15.00528621673584
    7. '	for' → logprob: -15.88028621673584
    8. '        
' → logprob: -16.505287170410156
    9. ' ' → logprob: -17.630287170410156
    10. 'For' → logprob: -18.255287170410156

Token 1349: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008778835646808147
    2. 'idx' → logprob: -4.758779048919678
    3. ' i' → logprob: -9.00877857208252
    4. ' idx' → logprob: -10.63377857208252
    5. 'word' → logprob: -11.50877857208252
    6. 'index' → logprob: -12.50877857208252
    7. '_i' → logprob: -13.75877857208252
    8. 'id' → logprob: -13.88377857208252
    9. 'eid' → logprob: -14.38377857208252
    10. '   ' → logprob: -14.63377857208252

Token 1350: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31443849205970764
    2. ',' → logprob: -1.4394384622573853
    3. ' in' → logprob: -3.439438581466675
    4. ' ,' → logprob: -7.564438343048096
    5. ',s' → logprob: -9.439438819885254
    6. ',e' → logprob: -11.314438819885254
    7. 's' → logprob: -11.689438819885254
    8. ',in' → logprob: -11.689438819885254
    9. '```' → logprob: -12.064438819885254
    10. '_,' → logprob: -12.439438819885254

Token 1351: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16414467990398407
    2. 'word' → logprob: -1.9141446352005005
    3. 'w' → logprob: -6.414144515991211
    4. 'elem' → logprob: -6.664144515991211
    5. 'element' → logprob: -7.664144515991211
    6. 'pattern' → logprob: -8.789144515991211
    7. ' s' → logprob: -9.039144515991211
    8. 'e' → logprob: -9.789144515991211
    9. 'es' → logprob: -9.789144515991211
    10. 'el' → logprob: -10.039144515991211

Token 1352: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07004991918802261
    2. 'in' → logprob: -2.695050001144409
    3. ',' → logprob: -9.945050239562988
    4. 'import' → logprob: -11.570050239562988
    5. '       ' → logprob: -11.945050239562988
    6. '   ' → logprob: -11.945050239562988
    7. ')' → logprob: -11.945050239562988
    8. '
' → logprob: -12.695050239562988
    9. ' ' → logprob: -12.820050239562988
    10. '<|end|>' → logprob: -12.820050239562988

Token 1353: ' enumerate' (ID: 29671)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.003918464761227369
    2. ' element' → logprob: -5.753918647766113
    3. 'enumer' → logprob: -7.253918647766113
    4. '   ' → logprob: -11.378918647766113
    5. ' enumerate' → logprob: -12.003918647766113
    6. '[element' → logprob: -12.128918647766113
    7. '(element' → logprob: -12.253918647766113
    8. '	element' → logprob: -13.253918647766113
    9. ' ' → logprob: -13.628918647766113
    10. '       ' → logprob: -14.503918647766113

Token 1354: '(element' (ID: 22709)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.0025348791386932135
    2. ' element' → logprob: -6.002534866333008
    3. '(element' → logprob: -9.752534866333008
    4. '[element' → logprob: -14.627534866333008
    5. '   ' → logprob: -14.752534866333008
    6. '	element' → logprob: -15.627534866333008
    7. '
' → logprob: -17.752534866333008
    8. ' ' → logprob: -18.002534866333008
    9. '       ' → logprob: -18.002534866333008
    10. ')' → logprob: -18.002534866333008

Token 1355: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.00029351349803619087
    2. 's' → logprob: -8.250293731689453
    3. ')' → logprob: -11.625293731689453
    4. 'strings' → logprob: -12.125293731689453
    5. '_s' → logprob: -12.750293731689453
    6. 'Strings' → logprob: -13.000293731689453
    7. '[' → logprob: -13.500293731689453
    8. '
' → logprob: -13.750293731689453
    9. '_' → logprob: -14.000293731689453
    10. '[]' → logprob: -14.125293731689453

Token 1356: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05416841059923172
    2. '):' → logprob: -3.179168462753296
    3. '       ' → logprob: -4.554168224334717
    4. '           ' → logprob: -8.304168701171875
    5. ':
' → logprob: -9.054168701171875
    6. '):
' → logprob: -9.429168701171875
    7. ':' → logprob: -10.054168701171875
    8. '   ' → logprob: -10.304168701171875
    9. ')' → logprob: -10.429168701171875
    10. ''):
' → logprob: -11.679168701171875

Token 1357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020230723544955254
    2. '       ' → logprob: -4.020230770111084
    3. '   ' → logprob: -6.395230770111084
    4. '```' → logprob: -9.020230293273926
    5. '
' → logprob: -9.145230293273926
    6. '	       ' → logprob: -9.895230293273926
    7. '`' → logprob: -10.895230293273926
    8. '               ' → logprob: -10.895230293273926
    9. '            
' → logprob: -11.020230293273926
    10. '        
' → logprob: -11.395230293273926

Token 1358: ' aho' (ID: 46361)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.05297227203845978
    2. 'ah' → logprob: -3.9279723167419434
    3. 'aho' (adapté à ' aho') → logprob: -4.177972316741943
    4. '           ' → logprob: -4.927972316741943
    5. '   ' → logprob: -5.427972316741943
    6. ' aho' → logprob: -6.052972316741943
    7. '       ' → logprob: -6.802972316741943
    8. 'ahi' → logprob: -8.052971839904785
    9. 'ado' → logprob: -8.927971839904785
    10. 'ho' → logprob: -9.302971839904785

Token 1359: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00016623330884613097
    2. '.' → logprob: -9.125165939331055
    3. 'add' → logprob: -10.000165939331055
    4. '   ' → logprob: -11.625165939331055
    5. ' .' → logprob: -14.250165939331055
    6. '.append' → logprob: -14.625165939331055
    7. '_add' → logprob: -15.250165939331055
    8. '       ' → logprob: -15.250165939331055
    9. ':add' → logprob: -15.375165939331055
    10. '`.' → logprob: -15.625165939331055

Token 1360: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.00027813989436253905
    2. 'word' → logprob: -8.75027847290039
    3. '(s' → logprob: -10.37527847290039
    4. '(' → logprob: -10.37527847290039
    5. '(word' → logprob: -10.37527847290039
    6. '_words' → logprob: -12.12527847290039
    7. '_' → logprob: -12.50027847290039
    8. 'Word' → logprob: -12.87527847290039
    9. 's' → logprob: -13.25027847290039
    10. '_(' → logprob: -13.25027847290039

Token 1361: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0018925797194242477
    2. 's' → logprob: -6.751892566680908
    3. '(' → logprob: -7.501892566680908
    4. '(
' → logprob: -9.126893043518066
    5. ' (' → logprob: -10.001893043518066
    6. ' s' → logprob: -11.251893043518066
    7. '((' → logprob: -14.251893043518066
    8. '   ' → logprob: -14.751893043518066
    9. '(i' → logprob: -15.001893043518066
    10. '           ' → logprob: -15.251893043518066

Token 1362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3897573947906494
    2. ')' → logprob: -1.1397573947906494
    3. '           ' → logprob: -7.26475715637207
    4. ',)' → logprob: -7.51475715637207
    5. '       ' → logprob: -7.63975715637207
    6. '   ' → logprob: -7.63975715637207
    7. ',
' → logprob: -8.63975715637207
    8. ')
' → logprob: -8.63975715637207
    9. ',i' → logprob: -9.76475715637207
    10. '               ' → logprob: -10.26475715637207

Token 1363: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005530327325686812
    2. ' i' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.250553131103516
    4. '	i' → logprob: -18.875553131103516
    5. '    ' → logprob: -21.000553131103516
    6. ')i' → logprob: -21.000553131103516
    7. '           ' → logprob: -21.375553131103516
    8. '       ' → logprob: -21.875553131103516
    9. '
' → logprob: -21.875553131103516
    10. '```' → logprob: -22.250553131103516

Token 1364: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041613372741267085
    2. ')
' → logprob: -7.875416278839111
    3. '       ' → logprob: -11.000415802001953
    4. ' )' → logprob: -11.750415802001953
    5. '   ' → logprob: -12.875415802001953
    6. '
' → logprob: -13.875415802001953
    7. ')#' → logprob: -14.125415802001953
    8. '<|end|>' → logprob: -14.125415802001953
    9. '           ' → logprob: -14.250415802001953
    10. ')\' → logprob: -14.875415802001953

Token 1365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027606209740042686
    2. '
' → logprob: -4.152606010437012
    3. '   ' → logprob: -4.652606010437012
    4. '        
' → logprob: -7.527606010437012
    5. '```' → logprob: -8.027606010437012
    6. '    
' → logprob: -8.527606010437012
    7. '           ' → logprob: -8.652606010437012
    8. ' aho' → logprob: -9.152606010437012
    9. '  
' → logprob: -9.402606010437012
    10. 'build' → logprob: -9.527606010437012

Token 1366: ' aho' (ID: 46361)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04125111922621727
    2. 'aho' (adapté à ' aho') → logprob: -3.6662511825561523
    3. '   ' → logprob: -4.416251182556152
    4. ' aho' → logprob: -6.166251182556152
    5. '```' → logprob: -8.666251182556152
    6. 'ah' → logprob: -8.916251182556152
    7. '           ' → logprob: -9.416251182556152
    8. '        
' → logprob: -10.166251182556152
    9. 'abo' → logprob: -10.916251182556152
    10. '
' → logprob: -11.166251182556152

Token 1367: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -0.0031876976136118174
    2. '.' → logprob: -5.753187656402588
    3. 'build' → logprob: -12.753188133239746
    4. ' .' → logprob: -13.128188133239746
    5. '```' → logprob: -13.753188133239746
    6. '   ' → logprob: -14.003188133239746
    7. '\.' → logprob: -14.003188133239746
    8. '.b' → logprob: -14.378188133239746
    9. '.
' → logprob: -14.503188133239746
    10. '`.' → logprob: -15.878188133239746

Token 1368: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01708327606320381
    2. '       ' → logprob: -4.142083168029785
    3. '        
' → logprob: -7.142083168029785
    4. '   ' → logprob: -9.517083168029785
    5. '
' → logprob: -9.642083168029785
    6. '    
' → logprob: -10.017083168029785
    7. '```' → logprob: -10.017083168029785
    8. '

' → logprob: -12.142083168029785
    9. 'matches' → logprob: -12.392083168029785
    10. '<|end|>' → logprob: -12.517083168029785

Token 1369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16018053889274597
    2. '
' → logprob: -2.0351805686950684
    3. 'matches' → logprob: -4.660180568695068
    4. '   ' → logprob: -5.285180568695068
    5. '        
' → logprob: -6.535180568695068
    6. 'occ' → logprob: -8.16018009185791
    7. 'positions' → logprob: -8.28518009185791
    8. '    
' → logprob: -8.28518009185791
    9. '```' → logprob: -8.91018009185791
    10. '#' → logprob: -9.41018009185791

Token 1370: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13081972301006317
    2. 'matches' → logprob: -2.880819797515869
    3. 'state' → logprob: -3.630819797515869
    4. '   ' → logprob: -4.255819797515869
    5. 'occ' → logprob: -4.630819797515869
    6. 'positions' → logprob: -5.630819797515869
    7. '#' (adapté à ' #') → logprob: -6.130819797515869
    8. 'current' → logprob: -6.255819797515869
    9. 'occur' → logprob: -6.380819797515869
    10. 'pos' → logprob: -6.630819797515869

Token 1371: ' Run' (ID: 14581)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.5003505945205688
    2. 'matches' → logprob: -2.0003504753112793
    3. 'pos' → logprob: -2.5003504753112793
    4. '#' → logprob: -3.1253504753112793
    5. 'positions' → logprob: -3.3753504753112793
    6. 'node' → logprob: -3.5003504753112793
    7. 'current' → logprob: -3.5003504753112793
    8. 'occ' → logprob: -4.000350475311279
    9. 'text' → logprob: -5.500350475311279
    10. 'position' → logprob: -5.500350475311279

Token 1372: ' A' (ID: 355)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0643659383058548
    2. 'node' → logprob: -3.439365863800049
    3. 'current' → logprob: -4.064365863800049
    4. '   ' → logprob: -5.189365863800049
    5. 'pos' → logprob: -5.689365863800049
    6. '       ' → logprob: -6.064365863800049
    7. 'text' → logprob: -7.814365863800049
    8. '
' → logprob: -8.314366340637207
    9. 'cur' → logprob: -8.314366340637207
    10. ' state' → logprob: -8.689366340637207

Token 1373: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.0004648696631193161
    2. '
' → logprob: -8.62546443939209
    3. 'o' → logprob: -9.50046443939209
    4. 'c' → logprob: -10.37546443939209
    5. 'uto' → logprob: -10.37546443939209
    6. '   ' → logprob: -10.62546443939209
    7. 'utom' → logprob: -10.75046443939209
    8. 'h' → logprob: -11.00046443939209
    9. '=' → logprob: -11.00046443939209
    10. '_' → logprob: -11.62546443939209

Token 1374: ' autom' (ID: 5099)
  Prédit: '.run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.10936930030584335
    2. 'autom' → logprob: -2.9843692779541016
    3. '.search' → logprob: -4.234369277954102
    4. '   ' → logprob: -4.484369277954102
    5. '
' → logprob: -4.984369277954102
    6. 'run' → logprob: -5.234369277954102
    7. 'search' → logprob: -5.234369277954102
    8. ' =' → logprob: -6.859369277954102
    9. '.walk' → logprob: -6.984369277954102
    10. 'cor' → logprob: -7.109369277954102

Token 1375: 'aton' (ID: 24850)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.3324496746063232
    2. 'itch' → logprob: -1.3324496746063232
    3. 'it' → logprob: -2.0824496746063232
    4. 'atch' → logprob: -2.3324496746063232
    5. 'ach' → logprob: -2.9574496746063232
    6. 'tick' → logprob: -3.0824496746063232
    7. 'ack' → logprob: -3.5824496746063232
    8. 'tic' → logprob: -3.7074496746063232
    9. 'cor' → logprob: -4.207449913024902
    10. 't' → logprob: -4.707449913024902

Token 1376: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18832124769687653
    2. 'state' → logprob: -2.063321352005005
    3. '   ' → logprob: -3.563321352005005
    4. ' state' → logprob: -4.813321113586426
    5. 'current' → logprob: -5.813321113586426
    6. '
' → logprob: -6.563321113586426
    7. '_state' → logprob: -7.438321113586426
    8. 'cur' → logprob: -7.813321113586426
    9. '(state' → logprob: -7.813321113586426
    10. 'pos' → logprob: -8.063321113586426

Token 1377: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.0012503541074693203
    2. ' text' → logprob: -6.751250267028809
    3. '
' → logprob: -9.501250267028809
    4. '   ' → logprob: -12.626250267028809
    5. '       ' → logprob: -13.251250267028809
    6. '```' → logprob: -16.251251220703125
    7. '{text' → logprob: -16.876251220703125
    8. 'the' → logprob: -17.376251220703125
    9. '(text' → logprob: -17.626251220703125
    10. 'range' → logprob: -17.751251220703125

Token 1378: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04913422092795372
    2. 'state' → logprob: -3.1741342544555664
    3. '   ' → logprob: -5.299134254455566
    4. 'current' → logprob: -7.049134254455566
    5. ' state' → logprob: -9.299134254455566
    6. '
' → logprob: -9.924134254455566
    7. 'node' → logprob: -10.299134254455566
    8. 'pos' → logprob: -10.299134254455566
    9. 'cur' → logprob: -11.174134254455566
    10. '        
' → logprob: -11.674134254455566

Token 1379: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.2716900408267975
    2. ' find' → logprob: -1.646690011024475
    3. '
' → logprob: -3.5216901302337646
    4. 'state' → logprob: -5.5216898918151855
    5. 'pos' → logprob: -6.3966898918151855
    6. '_find' → logprob: -6.3966898918151855
    7. 'get' → logprob: -6.7716898918151855
    8. '#' → logprob: -6.8966898918151855
    9. 'detect' → logprob: -7.3966898918151855
    10. 'collect' → logprob: -7.5216898918151855

Token 1380: ' matches' (ID: 15248)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.299948126077652
    2. 'current' → logprob: -1.4249480962753296
    3. 'node' → logprob: -5.424948215484619
    4. '
' → logprob: -5.549948215484619
    5. ' state' → logprob: -6.049948215484619
    6. ' current' → logprob: -6.299948215484619
    7. 'pos' → logprob: -6.299948215484619
    8. '   ' → logprob: -6.799948215484619
    9. 'positions' → logprob: -7.174948215484619
    10. 'matches' → logprob: -7.174948215484619

Token 1381: ' ending' (ID: 22013)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039192792028188705
    2. 'state' → logprob: -3.2891926765441895
    3. '   ' → logprob: -7.2891926765441895
    4. 'current' → logprob: -8.164193153381348
    5. '
' → logprob: -9.664193153381348
    6. 'pos' → logprob: -9.664193153381348
    7. ' state' → logprob: -11.289193153381348
    8. '        
' → logprob: -11.539193153381348
    9. 'node' → logprob: -11.789193153381348
    10. 'cur' → logprob: -11.914193153381348

Token 1382: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.14462846517562866
    2. ' at' → logprob: -2.2696285247802734
    3. '       ' → logprob: -4.144628524780273
    4. '   ' → logprob: -5.269628524780273
    5. 'pos' → logprob: -5.644628524780273
    6. 'positions' → logprob: -6.019628524780273
    7. '_at' → logprob: -6.394628524780273
    8. 'in' → logprob: -7.269628524780273
    9. 'here' → logprob: -7.894628524780273
    10. '=' → logprob: -8.144628524780273

Token 1383: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.48756077885627747
    2. 'i' → logprob: -1.112560749053955
    3. 'pos' → logprob: -3.362560749053955
    4. ' each' → logprob: -4.112560749053955
    5. 'position' → logprob: -6.612560749053955
    6. 'positions' → logprob: -6.737560749053955
    7. ' i' → logprob: -6.987560749053955
    8. '
' → logprob: -7.237560749053955
    9. 'every' → logprob: -7.612560749053955
    10. 'idx' → logprob: -8.112561225891113

Token 1384: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.8948724269866943
    2. 'position' → logprob: -1.0198724269866943
    3. 'pos' → logprob: -2.5198724269866943
    4. 'i' → logprob: -2.6448724269866943
    5. ' i' → logprob: -2.8948724269866943
    6. '   ' → logprob: -4.769872665405273
    7. '
' → logprob: -5.644872665405273
    8. ' pos' → logprob: -5.894872665405273
    9. ')' → logprob: -6.269872665405273
    10. ' ' → logprob: -6.519872665405273

Token 1385: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7563239336013794
    2. 'state' → logprob: -0.8813239336013794
    3. '   ' → logprob: -2.50632381439209
    4. 'current' → logprob: -3.88132381439209
    5. '
' → logprob: -4.88132381439209
    6. 'pos' → logprob: -5.63132381439209
    7. 'node' → logprob: -6.63132381439209
    8. 'cur' → logprob: -7.00632381439209
    9. ' state' → logprob: -8.13132381439209
    10. '```' → logprob: -8.88132381439209

Token 1386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040347229689359665
    2. '   ' → logprob: -3.9153473377227783
    3. 'state' → logprob: -4.665347099304199
    4. '
' → logprob: -5.040347099304199
    5. 'current' → logprob: -5.665347099304199
    6. 'cur' → logprob: -9.9153470993042
    7. 'pos' → logprob: -9.9153470993042
    8. '```' → logprob: -10.2903470993042
    9. ' state' → logprob: -10.4153470993042
    10. ' current' → logprob: -10.6653470993042

Token 1387: ' #' (ID: 1069)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.29638391733169556
    2. 'current' → logprob: -1.7963838577270508
    3. '       ' → logprob: -2.921383857727051
    4. '   ' → logprob: -3.671383857727051
    5. 'node' → logprob: -4.796383857727051
    6. 'pos' → logprob: -6.421383857727051
    7. 'position' → logprob: -7.546383857727051
    8. ' state' → logprob: -8.04638385772705
    9. '
' → logprob: -9.04638385772705
    10. ' current' → logprob: -9.29638385772705

Token 1388: ' matches' (ID: 15248)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.33699220418930054
    2. 'current' → logprob: -2.2119922637939453
    3. '       ' → logprob: -2.5869922637939453
    4. '   ' → logprob: -3.2119922637939453
    5. 'node' → logprob: -3.4619922637939453
    6. 'pos' → logprob: -4.336992263793945
    7. 'matches' → logprob: -4.586992263793945
    8. 'position' → logprob: -5.961992263793945
    9. 'occ' → logprob: -6.836992263793945
    10. 'positions' → logprob: -7.211992263793945

Token 1389: '_at' (ID: 8254)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09966946393251419
    2. '_at' → logprob: -3.3496694564819336
    3. '_positions' → logprob: -3.5996694564819336
    4. '_pos' → logprob: -3.9746694564819336
    5. '=' → logprob: -4.974669456481934
    6. '_' → logprob: -6.349669456481934
    7. '_by' → logprob: -6.349669456481934
    8. '   ' → logprob: -6.599669456481934
    9. '_per' → logprob: -7.474669456481934
    10. 'pos' → logprob: -7.849669456481934

Token 1390: '_pos' (ID: 14692)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35771217942237854
    2. 'pos' → logprob: -1.9827121496200562
    3. '=' → logprob: -2.9827122688293457
    4. 'position' → logprob: -4.107712268829346
    5. '[]' → logprob: -4.357712268829346
    6. 'positions' → logprob: -4.482712268829346
    7. '[' → logprob: -4.607712268829346
    8. ' pos' → logprob: -4.857712268829346
    9. ' [' → logprob: -5.107712268829346
    10. '0' → logprob: -5.107712268829346

Token 1391: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023272035643458366
    2. '=' → logprob: -3.7732720375061035
    3. '   ' → logprob: -11.398271560668945
    4. '       ' → logprob: -12.023271560668945
    5. ':' → logprob: -12.773271560668945
    6. '=[' → logprob: -12.773271560668945
    7. '           ' → logprob: -13.898271560668945
    8. ')' → logprob: -14.898271560668945
    9. '[' → logprob: -15.148271560668945
    10. 'from' → logprob: -15.148271560668945

Token 1392: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11855951696634293
    2. ']' → logprob: -2.3685595989227295
    3. '=' → logprob: -4.11855936050415
    4. ':' → logprob: -7.86855936050415
    5. '.setdefault' → logprob: -7.86855936050415
    6. '].' → logprob: -8.618559837341309
    7. '[' → logprob: -8.618559837341309
    8. '][' → logprob: -8.743559837341309
    9. '   ' → logprob: -8.993559837341309
    10. ')' → logprob: -9.118559837341309

Token 1393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144911110401154
    2. '=' → logprob: -1.7014491558074951
    3. ':' → logprob: -10.701449394226074
    4. '=[' → logprob: -11.451449394226074
    5. '=[]' → logprob: -14.201449394226074
    6. ']' → logprob: -14.701449394226074
    7. ' =[' → logprob: -15.076449394226074
    8. '[' → logprob: -15.201449394226074
    9. ')' → logprob: -15.201449394226074
    10. '=[]
' → logprob: -15.326449394226074

Token 1394: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3921574056148529
    2. '[' → logprob: -1.1421574354171753
    3. 'default' → logprob: -5.392157554626465
    4. ' [[]' → logprob: -7.892157554626465
    5. '[]
' → logprob: -8.142157554626465
    6. ' [' → logprob: -11.267157554626465
    7. ' []' → logprob: -11.517157554626465
    8. 'collections' → logprob: -11.642157554626465
    9. '[][]' → logprob: -12.142157554626465
    10. ' defaultdict' → logprob: -12.892157554626465

Token 1395: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3170732259750366
    2. '[' → logprob: -1.6920732259750366
    3. ' of' → logprob: -2.067073345184326
    4. '[]' → logprob: -2.192073345184326
    5. ' =' → logprob: -2.317073345184326
    6. 'of' → logprob: -2.567073345184326
    7. '(' → logprob: -2.692073345184326
    8. '_of' → logprob: -3.317073345184326
    9. '=[]' → logprob: -4.692073345184326
    10. '([]' → logprob: -6.067073345184326

Token 1396: ' tuples' (ID: 112464)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.002083166502416134
    2. '[]
' → logprob: -6.5020833015441895
    3. 'set' → logprob: -8.002082824707031
    4. ' []' → logprob: -9.127082824707031
    5. 'sets' → logprob: -9.877082824707031
    6. '[' → logprob: -10.752082824707031
    7. '[(' → logprob: -11.002082824707031
    8. '[])' → logprob: -11.127082824707031
    9. '[]}' → logprob: -12.002082824707031
    10. '[],' → logprob: -12.252082824707031

Token 1397: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5917797088623047
    2. ' =' → logprob: -1.0917797088623047
    3. '=' → logprob: -3.0917797088623047
    4. '=[]' → logprob: -3.5917797088623047
    5. '(' → logprob: -4.341779708862305
    6. '[(' → logprob: -4.966779708862305
    7. '(i' → logprob: -5.216779708862305
    8. ' (' → logprob: -6.216779708862305
    9. '.append' → logprob: -6.466779708862305
    10. '[i' → logprob: -6.591779708862305

Token 1398: 'element' (ID: 13565)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.115752100944519
    2. 'element' → logprob: -1.115752100944519
    3. '(i' → logprob: -2.2407522201538086
    4. 'index' → logprob: -2.7407522201538086
    5. '(element' → logprob: -2.8657522201538086
    6. 'int' → logprob: -3.6157522201538086
    7. '(int' → logprob: -4.115752220153809
    8. ' (' → logprob: -4.740752220153809
    9. ')' → logprob: -4.740752220153809
    10. '[],' → logprob: -4.740752220153809

Token 1399: '_index' (ID: 7748)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.7313594818115234
    2. '_id' → logprob: -1.8563594818115234
    3. '_idx' → logprob: -2.1063594818115234
    4. 's' → logprob: -3.1063594818115234
    5. '_index' → logprob: -3.3563594818115234
    6. '_ids' → logprob: -3.4813594818115234
    7. '_s' → logprob: -3.6063594818115234
    8. '_indices' → logprob: -3.9813594818115234
    9. '```' → logprob: -4.231359481811523
    10. ')_' → logprob: -4.231359481811523

Token 1400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005687850061804056
    2. ')' → logprob: -5.630687713623047
    3. '[i' → logprob: -8.005687713623047
    4. '```' → logprob: -8.130687713623047
    5. ',i' → logprob: -8.380687713623047
    6. ')[' → logprob: -8.505687713623047
    7. '           ' → logprob: -8.630687713623047
    8. ',
' → logprob: -8.755687713623047
    9. '[' → logprob: -8.755687713623047
    10. '       ' → logprob: -9.255687713623047

Token 1401: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6450351476669312
    2. 'len' → logprob: -0.7700351476669312
    3. ')' → logprob: -5.145035266876221
    4. ' length' → logprob: -5.895035266876221
    5. '0' → logprob: -6.270035266876221
    6. ' len' → logprob: -7.770035266876221
    7. ')
' → logprob: -8.770034790039062
    8. 'leng' → logprob: -8.770034790039062
    9. '(len' → logprob: -9.020034790039062
    10. 'l' → logprob: -9.020034790039062

Token 1402: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6034726500511169
    2. ')
' → logprob: -0.9784726500511169
    3. ')[' → logprob: -3.6034727096557617
    4. ')_' → logprob: -4.728472709655762
    5. '[i' → logprob: -4.853472709655762
    6. '):
' → logprob: -4.978472709655762
    7. '```' → logprob: -5.353472709655762
    8. ',' → logprob: -5.478472709655762
    9. ']' → logprob: -5.978472709655762
    10. '[' → logprob: -6.103472709655762

Token 1403: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003659102600067854
    2. '       ' → logprob: -6.253659248352051
    3. '=' → logprob: -6.378659248352051
    4. '   ' → logprob: -11.62865924835205
    5. ':' → logprob: -12.00365924835205
    6. ' =
' → logprob: -12.12865924835205
    7. '
' → logprob: -12.37865924835205
    8. '           ' → logprob: -13.75365924835205
    9. '=[' → logprob: -13.87865924835205
    10. '=
' → logprob: -14.00365924835205

Token 1404: ' matches' (ID: 15248)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03269939124584198
    2. ' i' → logprob: -3.5326993465423584
    3. 'position' → logprob: -6.5326995849609375
    4. '[i' → logprob: -8.282699584960938
    5. 'each' → logprob: -8.657699584960938
    6. '   ' → logprob: -8.907699584960938
    7. 'matches' → logprob: -8.907699584960938
    8. ')' → logprob: -8.907699584960938
    9. 'positions' → logprob: -9.407699584960938
    10. ' position' → logprob: -9.657699584960938

Token 1405: ' ending' (ID: 22013)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07751651108264923
    2. '       ' → logprob: -2.702516555786133
    3. '=' → logprob: -4.952516555786133
    4. '   ' → logprob: -8.452516555786133
    5. ':' → logprob: -9.577516555786133
    6. ' at' → logprob: -10.077516555786133
    7. '_at' → logprob: -10.452516555786133
    8. '
' → logprob: -10.952516555786133
    9. 'matches' → logprob: -10.952516555786133
    10. '=[' → logprob: -11.827516555786133

Token 1406: ' at' (ID: 540)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6148408055305481
    2. '_at' → logprob: -0.9898408055305481
    3. 'at' → logprob: -2.7398407459259033
    4. '   ' → logprob: -5.364840984344482
    5. ' at' → logprob: -5.364840984344482
    6. '=' → logprob: -5.489840984344482
    7. ' =' → logprob: -5.864840984344482
    8. '_here' → logprob: -6.614840984344482
    9. '[' → logprob: -6.739840984344482
    10. '
' → logprob: -7.239840984344482

Token 1407: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000444850797066465
    2. ' i' → logprob: -7.7504448890686035
    3. '
' → logprob: -12.625444412231445
    4. '```' → logprob: -12.625444412231445
    5. '   ' → logprob: -12.750444412231445
    6. ')' → logprob: -13.500444412231445
    7. '[i' → logprob: -13.750444412231445
    8. ' ' → logprob: -14.125444412231445
    9. '`' → logprob: -14.625444412231445
    10. ')i' → logprob: -15.500444412231445

Token 1408: '-th' (ID: 14928)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029108894988894463
    2. '       ' → logprob: -3.904109001159668
    3. '=' → logprob: -5.279109001159668
    4. '
' → logprob: -6.529109001159668
    5. 'matches' → logprob: -6.904109001159668
    6. ':' → logprob: -8.029109001159668
    7. ' matches' → logprob: -8.279109001159668
    8. '(matches' → logprob: -8.404109001159668
    9. '_matches' → logprob: -10.029109001159668
    10. '   ' → logprob: -10.154109001159668

Token 1409: ' char' (ID: 1826)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2206813097000122
    2. ')' → logprob: -2.2206811904907227
    3. '_' → logprob: -2.3456811904907227
    4. '
' → logprob: -2.5956811904907227
    5. 'position' → logprob: -2.5956811904907227
    6. '_char' → logprob: -2.8456811904907227
    7. ' position' → logprob: -3.0956811904907227
    8. 'character' → logprob: -3.4706811904907227
    9. '_pos' → logprob: -3.5956811904907227
    10. ' character' → logprob: -3.5956811904907227

Token 1410: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05988364666700363
    2. '
' → logprob: -3.3098835945129395
    3. ' =' → logprob: -4.1848835945129395
    4. 'matches' → logprob: -5.4348835945129395
    5. '(matches' → logprob: -7.1848835945129395
    6. ' matches' → logprob: -7.3098835945129395
    7. '   ' → logprob: -8.184884071350098
    8. '=' → logprob: -8.684884071350098
    9. '        
' → logprob: -10.184884071350098
    10. ':' → logprob: -10.309884071350098

Token 1411: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07335208356380463
    2. ')
' → logprob: -2.948352098464966
    3. 'i' → logprob: -5.323351860046387
    4. ']' → logprob: -5.573351860046387
    5. ')]' → logprob: -6.198351860046387
    6. 'text' → logprob: -6.948351860046387
    7. '])' → logprob: -7.073351860046387
    8. '):
' → logprob: -7.198351860046387
    9. ' )' → logprob: -7.448351860046387
    10. '       ' → logprob: -7.448351860046387

Token 1412: '-based' (ID: 8235)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7190814018249512
    2. ')' → logprob: -0.9690814018249512
    3. ')
' → logprob: -2.594081401824951
    4. ']
' → logprob: -3.344081401824951
    5. ')]' → logprob: -4.844081401824951
    6. '])' → logprob: -5.344081401824951
    7. ',' → logprob: -6.219081401824951
    8. '+' → logprob: -6.469081401824951
    9. '       ' → logprob: -6.719081401824951
    10. '):
' → logprob: -6.844081401824951

Token 1413: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6581451892852783
    2. '       ' → logprob: -1.0331451892852783
    3. ')' → logprob: -2.6581451892852783
    4. ']
' → logprob: -3.5331451892852783
    5. ']' → logprob: -3.9081451892852783
    6. '   ' → logprob: -5.783144950866699
    7. ' =' → logprob: -6.283144950866699
    8. '
' → logprob: -7.408144950866699
    9. '=' → logprob: -8.1581449508667
    10. '):
' → logprob: -8.7831449508667

Token 1414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06532354652881622
    2. 'matches' → logprob: -3.3153235912323
    3. '
' → logprob: -3.8153235912323
    4. ' matches' → logprob: -5.440323352813721
    5. '   ' → logprob: -8.065323829650879
    6. '(matches' → logprob: -9.065323829650879
    7. '        
' → logprob: -9.940323829650879
    8. '```' → logprob: -10.815323829650879
    9. '_matches' → logprob: -11.815323829650879
    10. 'match' → logprob: -11.815323829650879

Token 1415: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' (adapté à ' matches') → logprob: -0.15315690636634827
    2. '       ' → logprob: -2.4031569957733154
    3. ' matches' → logprob: -3.0281569957733154
    4. '
' → logprob: -6.028156757354736
    5. '   ' → logprob: -7.528156757354736
    6. '```' → logprob: -8.778157234191895
    7. '        
' → logprob: -10.278157234191895
    8. '(matches' → logprob: -11.653157234191895
    9. '``' → logprob: -11.778157234191895
    10. '           ' → logprob: -13.028157234191895

Token 1416: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.00022117885237094015
    2. '=' → logprob: -9.250221252441406
    3. ' =' → logprob: -9.750221252441406
    4. '=_' → logprob: -10.250221252441406
    5. '_' → logprob: -10.875221252441406
    6. '   ' → logprob: -13.625221252441406
    7. '```' → logprob: -13.625221252441406
    8. 'at' → logprob: -13.750221252441406
    9. '[' → logprob: -13.875221252441406
    10. ' _' → logprob: -14.000221252441406

Token 1417: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0015430726343765855
    2. 'pos' → logprob: -6.876543045043945
    3. '_' → logprob: -9.001543045043945
    4. '[' → logprob: -9.001543045043945
    5. ' =' → logprob: -9.501543045043945
    6. '=' → logprob: -10.126543045043945
    7. '[pos' → logprob: -10.376543045043945
    8. '_positions' → logprob: -10.626543045043945
    9. '[
' → logprob: -10.751543045043945
    10. '```' → logprob: -10.876543045043945

Token 1418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931529641151428
    2. ' =' → logprob: -0.6931529641151428
    3. '=[' → logprob: -12.693153381347656
    4. '=[]' → logprob: -13.318153381347656
    5. '[' → logprob: -14.693153381347656
    6. '   ' → logprob: -15.693153381347656
    7. ' =[' → logprob: -15.693153381347656
    8. ':' → logprob: -16.568153381347656
    9. '={}' → logprob: -17.318153381347656
    10. ' ' → logprob: -17.693153381347656

Token 1419: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013047587708570063
    2. ' [[]' → logprob: -9.250130653381348
    3. 'default' → logprob: -10.750130653381348
    4. ' [' → logprob: -11.500130653381348
    5. '   ' → logprob: -13.125130653381348
    6. '[[' → logprob: -15.000130653381348
    7. '       ' → logprob: -15.250130653381348
    8. '[len' → logprob: -16.87512969970703
    9. '           ' → logprob: -17.00012969970703
    10. '[['' → logprob: -17.62512969970703

Token 1420: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3635581135749817
    2. ' for' → logprob: -1.488558053970337
    3. '(len' → logprob: -3.238558053970337
    4. '=' → logprob: -4.363558292388916
    5. '       ' → logprob: -4.863558292388916
    6. '(length' → logprob: -5.363558292388916
    7. '(size' → logprob: -5.738558292388916
    8. '(text' → logprob: -5.988558292388916
    9. ')' → logprob: -6.113558292388916
    10. '           ' → logprob: -6.613558292388916

Token 1421: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24055960774421692
    2. 'i' → logprob: -1.8655595779418945
    3. 'range' → logprob: -3.1155595779418945
    4. ' range' → logprob: -4.4905595779418945
    5. 'in' → logprob: -6.6155595779418945
    6. ' i' → logprob: -7.6155595779418945
    7. ' _' → logprob: -7.7405595779418945
    8. '   ' → logprob: -8.490559577941895
    9. '_range' → logprob: -8.740559577941895
    10. '(range' → logprob: -8.865559577941895

Token 1422: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0032664805185049772
    2. 'len' → logprob: -6.628266334533691
    3. ' range' → logprob: -6.753266334533691
    4. '(range' → logprob: -7.753266334533691
    5. '(len' → logprob: -8.253266334533691
    6. 'i' → logprob: -10.378266334533691
    7. 'text' → logprob: -10.878266334533691
    8. '   ' → logprob: -11.003266334533691
    9. '=' → logprob: -12.003266334533691
    10. '(i' → logprob: -12.753266334533691

Token 1423: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011958249378949404
    2. ' range' → logprob: -6.751195907592773
    3. '(range' → logprob: -10.626195907592773
    4. '   ' → logprob: -13.626195907592773
    5. '
' → logprob: -17.126195907592773
    6. '	range' → logprob: -18.001195907592773
    7. ' ' → logprob: -18.626195907592773
    8. '       ' → logprob: -19.126195907592773
    9. '  ' → logprob: -19.751195907592773
    10. '    ' → logprob: -20.001195907592773

Token 1424: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005252491682767868
    2. '(len' → logprob: -5.255252361297607
    3. ' len' → logprob: -11.630252838134766
    4. '[len' → logprob: -12.380252838134766
    5. '   ' → logprob: -12.505252838134766
    6. 'range' → logprob: -14.255252838134766
    7. 'length' → logprob: -14.755252838134766
    8. '       ' → logprob: -15.255252838134766
    9. '           ' → logprob: -15.880252838134766
    10. 'text' → logprob: -16.130252838134766

Token 1425: '(text' (ID: 13414)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.6957135200500488
    2. '(text' → logprob: -0.6957135200500488
    3. '(matches' → logprob: -6.695713520050049
    4. 'matches' → logprob: -7.195713520050049
    5. '(' → logprob: -8.32071304321289
    6. ' text' → logprob: -8.57071304321289
    7. '{text' → logprob: -10.19571304321289
    8. ')' → logprob: -10.32071304321289
    9. '(
' → logprob: -10.57071304321289
    10. '
' → logprob: -10.57071304321289

Token 1426: '))]
' (ID: 53695)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.25963667035102844
    2. '+' → logprob: -1.509636640548706
    3. ')' → logprob: -6.009636878967285
    4. ' +' → logprob: -6.134636878967285
    5. ')])' → logprob: -6.384636878967285
    6. ')]
' → logprob: -7.009636878967285
    7. ')+' → logprob: -8.384636878967285
    8. '))' → logprob: -9.259636878967285
    9. '])]' → logprob: -10.259636878967285
    10. '))]
' → logprob: -10.634636878967285

Token 1427: '       ' (ID: 309)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.175080418586731
    2. 'current' → logprob: -1.425080418586731
    3. '       ' → logprob: -1.550080418586731
    4. '   ' → logprob: -1.675080418586731
    5. '
' → logprob: -4.175080299377441
    6. ' current' → logprob: -4.175080299377441
    7. ' state' → logprob: -4.675080299377441
    8. 'cur' → logprob: -5.300080299377441
    9. 'node' → logprob: -5.800080299377441
    10. 'pos' → logprob: -7.675080299377441

Token 1428: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.08393535763025284
    2. 'current' → logprob: -3.083935260772705
    3. '   ' → logprob: -3.583935260772705
    4. '       ' → logprob: -5.583935260772705
    5. 'node' → logprob: -5.833935260772705
    6. '
' → logprob: -9.208935737609863
    7. 'cur' → logprob: -9.458935737609863
    8. 'curr' → logprob: -10.083935737609863
    9. 'ac' → logprob: -10.708935737609863
    10. ' state' → logprob: -11.458935737609863

Token 1429: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42873552441596985
    2. '=' → logprob: -1.0537354946136475
    3. ',' → logprob: -11.178735733032227
    4. '_' → logprob: -12.803735733032227
    5. ' ' → logprob: -12.803735733032227
    6. '=
' → logprob: -13.303735733032227
    7. '=current' → logprob: -13.428735733032227
    8. ' +=' → logprob: -13.678735733032227
    9. 'current' → logprob: -13.678735733032227
    10. '_=' → logprob: -13.803735733032227

Token 1430: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '=' → logprob: -18.625015258789062
    4. '   ' → logprob: -18.875015258789062
    5. '۰' → logprob: -19.500015258789062
    6. '00' → logprob: -19.875015258789062
    7. '
' → logprob: -20.500015258789062
    8. ' ' → logprob: -20.625015258789062
    9. '  ' → logprob: -21.187515258789062
    10. '```' → logprob: -21.250015258789062

Token 1431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -19.0
    4. '=' → logprob: -19.625
    5. '   ' → logprob: -20.375
    6. '```' → logprob: -21.125
    7. '00' → logprob: -21.375
    8. '０' → logprob: -21.625
    9. 'import' → logprob: -21.625
    10. 's' → logprob: -21.875

Token 1432: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5490645170211792
    2. ' for' → logprob: -1.4240645170211792
    3. 'for' → logprob: -1.7990645170211792
    4. '
' → logprob: -5.549064636230469
    5. '        
' → logprob: -5.799064636230469
    6. ' 
' → logprob: -5.799064636230469
    7. '   ' → logprob: -6.549064636230469
    8. '	' → logprob: -7.299064636230469
    9. ')' → logprob: -7.549064636230469
    10. '	for' → logprob: -7.799064636230469

Token 1433: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021536540240049362
    2. '       ' → logprob: -4.521536350250244
    3. ' for' → logprob: -4.646536350250244
    4. '
' → logprob: -7.271536350250244
    5. '   ' → logprob: -9.896536827087402
    6. '```' → logprob: -11.021536827087402
    7. '        
' → logprob: -11.146536827087402
    8. 'char' → logprob: -11.146536827087402
    9. 'i' → logprob: -11.521536827087402
    10. '	for' → logprob: -11.896536827087402

Token 1434: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018846115563064814
    2. '       ' → logprob: -6.626884460449219
    3. ' for' → logprob: -7.501884460449219
    4. 'i' → logprob: -12.501884460449219
    5. '
' → logprob: -14.126884460449219
    6. '   ' → logprob: -14.501884460449219
    7. '```' → logprob: -14.501884460449219
    8. '        
' → logprob: -15.376884460449219
    9. 'char' → logprob: -15.751884460449219
    10. '	for' → logprob: -16.25188446044922

Token 1435: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2569243907928467
    2. 'ch' → logprob: -1.7569243907928467
    3. ' i' → logprob: -3.3819243907928467
    4. ' ch' → logprob: -4.631924629211426
    5. 'c' → logprob: -4.881924629211426
    6. 'char' → logprob: -6.756924629211426
    7. 'pos' → logprob: -7.131924629211426
    8. ' c' → logprob: -7.631924629211426
    9. 'idx' → logprob: -8.881924629211426
    10. '   ' → logprob: -10.006924629211426

Token 1436: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5139044523239136
    2. ' +=' → logprob: -1.7639044523239136
    3. '+=' → logprob: -2.638904571533203
    4. ',' → logprob: -2.638904571533203
    5. 'in' → logprob: -2.888904571533203
    6. '+' → logprob: -4.138904571533203
    7. ' ,' → logprob: -5.138904571533203
    8. '   ' → logprob: -5.763904571533203
    9. ' ' → logprob: -5.888904571533203
    10. '       ' → logprob: -7.263904571533203

Token 1437: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0012947621289640665
    2. ' ch' → logprob: -6.7512946128845215
    3. 'c' → logprob: -9.00129508972168
    4. 'char' → logprob: -13.75129508972168
    5. ' c' → logprob: -16.12629508972168
    6. '(ch' → logprob: -17.37629508972168
    7. '	ch' → logprob: -18.62629508972168
    8. '   ' → logprob: -20.37629508972168
    9. '[ch' → logprob: -20.75129508972168
    10. '
' → logprob: -21.25129508972168

Token 1438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018912686500698328
    2. 'in' → logprob: -6.626891136169434
    3. ' =' → logprob: -8.876891136169434
    4. '=' → logprob: -9.376891136169434
    5. ')' → logprob: -9.626891136169434
    6. ',' → logprob: -9.751891136169434
    7. '   ' → logprob: -10.126891136169434
    8. '):
' → logprob: -10.501891136169434
    9. '       ' → logprob: -10.501891136169434
    10. ' 
' → logprob: -11.126891136169434

Token 1439: ' enumerate' (ID: 29671)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.012538147158920765
    2. ' text' → logprob: -4.387537956237793
    3. 'enumer' → logprob: -11.137537956237793
    4. '
' → logprob: -12.637537956237793
    5. ' ' → logprob: -12.887537956237793
    6. '"text' → logprob: -13.262537956237793
    7. '(text' → logprob: -13.762537956237793
    8. ' enumerate' → logprob: -13.887537956237793
    9. '   ' → logprob: -14.012537956237793
    10. '	text' → logprob: -14.262537956237793

Token 1440: '(text' (ID: 13414)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.429591566324234
    2. 'text' → logprob: -1.0545915365219116
    3. '(text' → logprob: -7.304591655731201
    4. '   ' → logprob: -9.804591178894043
    5. ''' → logprob: -10.429591178894043
    6. '	text' → logprob: -10.429591178894043
    7. '{text' → logprob: -11.429591178894043
    8. '_text' → logprob: -11.554591178894043
    9. '
' → logprob: -11.554591178894043
    10. '"text' → logprob: -11.554591178894043

Token 1441: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04022471234202385
    2. '       ' → logprob: -4.165224552154541
    3. '):' → logprob: -4.290224552154541
    4. ':
' → logprob: -5.165224552154541
    5. ':' → logprob: -6.165224552154541
    6. '   ' → logprob: -6.540224552154541
    7. '           ' → logprob: -7.290224552154541
    8. ']:
' → logprob: -9.7902250289917
    9. ')' → logprob: -10.1652250289917
    10. '):
' → logprob: -10.1652250289917

Token 1442: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08119227737188339
    2. '           ' → logprob: -2.7061922550201416
    3. '   ' → logprob: -4.706192493438721
    4. '
' → logprob: -7.081192493438721
    5. ' state' → logprob: -7.456192493438721
    6. ' if' → logprob: -8.956192016601562
    7. 'state' → logprob: -9.206192016601562
    8. '	   ' → logprob: -9.456192016601562
    9. ',' → logprob: -9.581192016601562
    10. '        
' → logprob: -9.956192016601562

Token 1443: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.042465779930353165
    2. '           ' → logprob: -3.6674656867980957
    3. ' state' → logprob: -4.417465686798096
    4. '   ' → logprob: -5.917465686798096
    5. '               ' → logprob: -7.167465686798096
    6. '       ' → logprob: -7.917465686798096
    7. 'if' → logprob: -9.667466163635254
    8. '	state' → logprob: -10.667466163635254
    9. 'next' → logprob: -11.167466163635254
    10. ' if' → logprob: -11.667466163635254

Token 1444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '=
' → logprob: -18.643150329589844
    4. '           ' → logprob: -18.768150329589844
    5. '.=' → logprob: -19.268150329589844
    6. '_=' → logprob: -19.393150329589844
    7. 'state' → logprob: -19.893150329589844
    8. '=self' → logprob: -20.018150329589844
    9. '＝' → logprob: -20.018150329589844
    10. '   ' → logprob: -20.643150329589844

Token 1445: ' aho' (ID: 46361)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aho' → logprob: -0.03038439340889454
    2. ' aho' → logprob: -3.5303843021392822
    3. 'ah' → logprob: -8.530384063720703
    4. 'ho' → logprob: -9.030384063720703
    5. '   ' → logprob: -9.155384063720703
    6. 'ao' → logprob: -10.905384063720703
    7. 'aha' → logprob: -10.905384063720703
    8. 'self' → logprob: -10.905384063720703
    9. 'acho' → logprob: -10.905384063720703
    10. 'abo' → logprob: -11.030384063720703

Token 1446: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.049124568700790405
    2. 'goto' → logprob: -3.0491244792938232
    3. '[(' → logprob: -8.924124717712402
    4. '.go' → logprob: -9.549124717712402
    5. '.' → logprob: -9.799124717712402
    6. '.state' → logprob: -9.924124717712402
    7. '   ' → logprob: -10.299124717712402
    8. '.get' → logprob: -10.424124717712402
    9. '.g' → logprob: -10.549124717712402
    10. 'Goto' → logprob: -10.924124717712402

Token 1447: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.12792594730854034
    2. '.get' → logprob: -2.1279258728027344
    3. '(state' → logprob: -7.502925872802734
    4. '[state' → logprob: -7.752925872802734
    5. '((' → logprob: -12.252925872802734
    6. '(' → logprob: -12.252925872802734
    7. '   ' → logprob: -12.877925872802734
    8. '.setdefault' → logprob: -13.627925872802734
    9. '[' → logprob: -13.752925872802734
    10. 'get' → logprob: -14.627925872802734

Token 1448: 'state' (ID: 5294)
  Prédit: 'state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.4617256056226324e-05
    2. ' state' → logprob: -11.500014305114746
    3. '(state' → logprob: -12.500014305114746
    4. ',state' → logprob: -15.250014305114746
    5. '0' → logprob: -15.375014305114746
    6. '   ' → logprob: -16.500015258789062
    7. '
' → logprob: -16.500015258789062
    8. ')' → logprob: -17.000015258789062
    9. '	state' → logprob: -17.750015258789062
    10. '[state' → logprob: -17.750015258789062

Token 1449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01825377531349659
    2. ',ch' → logprob: -4.018253803253174
    3. ' ,' → logprob: -9.268253326416016
    4. ',
' → logprob: -12.393253326416016
    5. '[ch' → logprob: -13.893253326416016
    6. ' ch' → logprob: -14.518253326416016
    7. '   ' → logprob: -14.518253326416016
    8. 'ch' → logprob: -14.768253326416016
    9. ',char' → logprob: -15.143253326416016
    10. ',c' → logprob: -15.393253326416016

Token 1450: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.00023131117632146925
    2. ' ch' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.625231742858887
    4. ' ' → logprob: -16.25023078918457
    5. ''ch' → logprob: -16.50023078918457
    6. '	ch' → logprob: -16.87523078918457
    7. '(ch' → logprob: -17.50023078918457
    8. '  ' → logprob: -17.75023078918457
    9. '[ch' → logprob: -17.75023078918457
    10. '    ' → logprob: -18.12523078918457

Token 1451: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0018518929136916995
    2. ']' → logprob: -6.376852035522461
    3. ')]
' → logprob: -9.626852035522461
    4. ')' → logprob: -9.626852035522461
    5. ']
' → logprob: -12.501852035522461
    6. '           ' → logprob: -12.626852035522461
    7. ' )' → logprob: -12.876852035522461
    8. '])' → logprob: -13.251852035522461
    9. '       ' → logprob: -13.626852035522461
    10. ']]' → logprob: -14.376852035522461

Token 1452: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003831429174169898
    2. '       ' → logprob: -5.753831386566162
    3. '
' → logprob: -8.12883186340332
    4. '```' → logprob: -9.00383186340332
    5. '<|end|>' → logprob: -9.62883186340332
    6. '            
' → logprob: -10.25383186340332
    7. ',' → logprob: -10.75383186340332
    8. '   ' → logprob: -11.00383186340332
    9. '               ' → logprob: -11.00383186340332
    10. ' if' → logprob: -11.00383186340332

Token 1453: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.923874702304602e-05
    2. '           ' → logprob: -9.625089645385742
    3. 'if' (adapté à ' if') → logprob: -11.250089645385742
    4. ' for' → logprob: -12.000089645385742
    5. 'matches' → logprob: -13.250089645385742
    6. '       ' → logprob: -14.000089645385742
    7. 'outputs' → logprob: -14.625089645385742
    8. 'out' → logprob: -14.875089645385742
    9. 'output' → logprob: -15.875089645385742
    10. '```' → logprob: -16.625089645385742

Token 1454: ' aho' (ID: 46361)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.5620689988136292
    2. 'aho' → logprob: -1.1870689392089844
    3. 'ch' → logprob: -3.1870689392089844
    4. 'self' → logprob: -3.5620689392089844
    5. 'len' → logprob: -3.8120689392089844
    6. 'ah' → logprob: -4.687068939208984
    7. 'i' → logprob: -5.312068939208984
    8. ' aho' → logprob: -5.312068939208984
    9. '(' → logprob: -5.562068939208984
    10. '0' → logprob: -6.062068939208984

Token 1455: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.0002908910100813955
    2. 'out' → logprob: -8.625290870666504
    3. '.' → logprob: -10.125290870666504
    4. '```' → logprob: -11.125290870666504
    5. ').' → logprob: -12.125290870666504
    6. '	out' → logprob: -12.250290870666504
    7. '`.' → logprob: -12.250290870666504
    8. '
' → logprob: -12.375290870666504
    9. '   ' → logprob: -12.500290870666504
    10. '].' → logprob: -12.625290870666504

Token 1456: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -0.0007699632551521063
    2. '[' → logprob: -7.375770092010498
    3. '[current' → logprob: -9.00076961517334
    4. '[(' → logprob: -11.75076961517334
    5. '(state' → logprob: -11.87576961517334
    6. '.get' → logprob: -12.87576961517334
    7. '```' → logprob: -14.62576961517334
    8. '[now' → logprob: -14.75076961517334
    9. '[
' → logprob: -15.00076961517334
    10. 'state' → logprob: -15.37576961517334

Token 1457: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.9211016893386841
    2. ':
' → logprob: -1.046101689338684
    3. ':' → logprob: -1.921101689338684
    4. ']:' → logprob: -2.4211015701293945
    5. ']' → logprob: -5.0461015701293945
    6. '):
' → logprob: -5.5461015701293945
    7. '           ' → logprob: -6.9211015701293945
    8. '               ' → logprob: -7.6711015701293945
    9. '):' → logprob: -7.6711015701293945
    10. '']:
' → logprob: -7.6711015701293945

Token 1458: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009103906922973692
    2. ' for' → logprob: -7.37591028213501
    3. 'for' → logprob: -8.500910758972168
    4. '           ' → logprob: -10.125910758972168
    5. ':
' → logprob: -11.000910758972168
    6. '                       ' → logprob: -11.875910758972168
    7. '                   ' → logprob: -12.000910758972168
    8. ':' → logprob: -12.500910758972168
    9. '```' → logprob: -12.875910758972168
    10. ',' → logprob: -14.250910758972168

Token 1459: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8444650769233704
    2. 'for' (adapté à ' for') → logprob: -1.2194650173187256
    3. '           ' → logprob: -1.3444650173187256
    4. '                   ' → logprob: -4.844465255737305
    5. '               ' → logprob: -5.094465255737305
    6. '   ' → logprob: -9.594465255737305
    7. ' ' → logprob: -10.719465255737305
    8. '```' → logprob: -11.219465255737305
    9. '                       ' → logprob: -11.469465255737305
    10. '       ' → logprob: -11.469465255737305

Token 1460: ' pattern' (ID: 8302)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.5345931649208069
    2. 'pattern' → logprob: -1.659593105316162
    3. 'elem' → logprob: -2.284593105316162
    4. 'w' → logprob: -3.409593105316162
    5. 'element' → logprob: -3.409593105316162
    6. 'eid' → logprob: -4.159593105316162
    7. 'pat' → logprob: -4.534593105316162
    8. 'el' → logprob: -4.784593105316162
    9. 'idx' → logprob: -4.784593105316162
    10. 'match' → logprob: -5.409593105316162

Token 1461: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00011605957115534693
    2. 'id' → logprob: -9.875116348266602
    3. '_idx' → logprob: -10.500116348266602
    4. '_index' → logprob: -10.750116348266602
    5. ' in' → logprob: -12.125116348266602
    6. '_ids' → logprob: -13.250116348266602
    7. '   ' → logprob: -13.625116348266602
    8. '```' → logprob: -13.625116348266602
    9. '_' → logprob: -13.750116348266602
    10. ')' → logprob: -13.750116348266602

Token 1462: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043051257729530334
    2. 'in' → logprob: -3.168051242828369
    3. '_in' → logprob: -10.793051719665527
    4. '	in' → logprob: -11.168051719665527
    5. ' ' → logprob: -12.668051719665527
    6. ')' → logprob: -12.668051719665527
    7. ',' → logprob: -12.793051719665527
    8. '<|end|>' → logprob: -13.543051719665527
    9. 's' → logprob: -13.793051719665527
    10. '<|end|>' → logprob: -14.668051719665527

Token 1463: ' aho' (ID: 46361)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aho' → logprob: -7.941850526549388e-06
    2. ' aho' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.000007629394531
    4. 'ah' → logprob: -15.625007629394531
    5. 'ahoo' → logprob: -15.750007629394531
    6. 'list' → logprob: -16.50000762939453
    7. 'awo' → logprob: -17.62500762939453
    8. '`' → logprob: -18.12500762939453
    9. 'asho' → logprob: -18.25000762939453
    10. '
' → logprob: -18.37500762939453

Token 1464: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.0038664659950882196
    2. 'out' → logprob: -5.878866672515869
    3. '[state' → logprob: -7.003866672515869
    4. '[out' → logprob: -9.878866195678711
    5. '.state' → logprob: -10.253866195678711
    6. '_out' → logprob: -11.128866195678711
    7. '
' → logprob: -11.753866195678711
    8. '```' → logprob: -12.003866195678711
    9. 'state' → logprob: -12.128866195678711
    10. '$out' → logprob: -12.253866195678711

Token 1465: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.125007629394531
    3. '[
' → logprob: -14.375007629394531
    4. 'state' → logprob: -14.500007629394531
    5. '(state' → logprob: -15.000007629394531
    6. '   ' → logprob: -15.750007629394531
    7. ',state' → logprob: -16.62500762939453
    8. '
' → logprob: -16.75000762939453
    9. ')' → logprob: -17.00000762939453
    10. '       ' → logprob: -17.25000762939453

Token 1466: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4369296133518219
    2. '):
' → logprob: -1.4369295835494995
    3. ':
' → logprob: -2.436929702758789
    4. '                   ' → logprob: -4.686929702758789
    5. ']:' → logprob: -4.686929702758789
    6. '               ' → logprob: -5.811929702758789
    7. ':' → logprob: -5.936929702758789
    8. '):' → logprob: -6.436929702758789
    9. ']):
' → logprob: -7.186929702758789
    10. '           ' → logprob: -7.436929702758789

Token 1467: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000193527273950167
    2. '                       ' → logprob: -8.87519359588623
    3. '(matches' → logprob: -11.62519359588623
    4. ' matches' → logprob: -11.75019359588623
    5. '                           ' → logprob: -12.00019359588623
    6. 'matches' → logprob: -12.25019359588623
    7. '```' → logprob: -12.25019359588623
    8. ',' → logprob: -12.50019359588623
    9. '               ' → logprob: -12.50019359588623
    10. '		           ' → logprob: -12.62519359588623

Token 1468: ' length' (ID: 5517)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.27574825286865234
    2. 'matches' → logprob: -1.5257482528686523
    3. ' matches' → logprob: -3.7757482528686523
    4. '                   ' → logprob: -8.400748252868652
    5. 'length' (adapté à ' length') → logprob: -8.900748252868652
    6. '                           ' → logprob: -9.650748252868652
    7. '(matches' → logprob: -10.275748252868652
    8. 'match' → logprob: -10.400748252868652
    9. '               ' → logprob: -10.400748252868652
    10. '       ' → logprob: -10.650748252868652

Token 1469: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7182506918907166
    2. ' =' → logprob: -0.8432506918907166
    3. '=len' → logprob: -3.2182507514953613
    4. '                   ' → logprob: -3.5932507514953613
    5. '(len' → logprob: -5.968250751495361
    6. '[len' → logprob: -6.468250751495361
    7. '(length' → logprob: -6.843250751495361
    8. '                    ' → logprob: -6.968250751495361
    9. '[length' → logprob: -6.968250751495361
    10. '```' → logprob: -7.093250751495361

Token 1470: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00014299227041192353
    2. ' len' → logprob: -8.875143051147461
    3. '(len' → logprob: -13.750143051147461
    4. '[len' → logprob: -13.875143051147461
    5. 'element' → logprob: -14.375143051147461
    6. 'length' → logprob: -15.625143051147461
    7. '                   ' → logprob: -16.12514305114746
    8. '=len' → logprob: -16.50014305114746
    9. '	len' → logprob: -16.75014305114746
    10. '           ' → logprob: -17.00014305114746

Token 1471: '(element' (ID: 22709)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.0022290023043751717
    2. '(element' → logprob: -6.3772292137146
    3. ' element' → logprob: -7.6272292137146
    4. '[element' → logprob: -11.002228736877441
    5. '                   ' → logprob: -11.877228736877441
    6. '(' → logprob: -12.502228736877441
    7. '	element' → logprob: -13.127228736877441
    8. '```' → logprob: -13.752228736877441
    9. '(
' → logprob: -13.877228736877441
    10. '           ' → logprob: -13.877228736877441

Token 1472: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.02681397832930088
    2. '[element' → logprob: -3.9018139839172363
    3. '[' → logprob: -5.526813983917236
    4. 's' → logprob: -7.776813983917236
    5. '[
' → logprob: -7.901813983917236
    6. 'Strings' → logprob: -8.151813507080078
    7. '[_' → logprob: -8.276813507080078
    8. 'strings' → logprob: -8.401813507080078
    9. 'element' → logprob: -8.651813507080078
    10. '```' → logprob: -10.026813507080078

Token 1473: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004521222144830972
    2. 'pattern' → logprob: -7.750452041625977
    3. '[
' → logprob: -11.250452041625977
    4. '(pattern' → logprob: -12.250452041625977
    5. '[element' → logprob: -14.375452041625977
    6. '                   ' → logprob: -14.500452041625977
    7. ')[' → logprob: -14.625452041625977
    8. ')' → logprob: -15.250452041625977
    9. '
' → logprob: -15.375452041625977
    10. '                       ' → logprob: -15.375452041625977

Token 1474: 'pattern' (ID: 29563)
  Prédit: 'pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -2.9875325708417222e-05
    2. '[' → logprob: -10.875029563903809
    3. ' pattern' → logprob: -11.875029563903809
    4. '
' → logprob: -13.625029563903809
    5. '(pattern' → logprob: -13.750029563903809
    6. 'element' → logprob: -14.625029563903809
    7. '[
' → logprob: -14.750029563903809
    8. ')' → logprob: -15.875029563903809
    9. '   ' → logprob: -16.000030517578125
    10. ' ' → logprob: -16.000030517578125

Token 1475: '_id' (ID: 1537)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3908591568470001
    2. 'pattern' → logprob: -1.1408591270446777
    3. '[
' → logprob: -6.015859127044678
    4. '(pattern' → logprob: -7.890859127044678
    5. ']' → logprob: -8.390859603881836
    6. ')' → logprob: -8.390859603881836
    7. '[length' → logprob: -8.640859603881836
    8. '   ' → logprob: -9.265859603881836
    9. '[state' → logprob: -9.890859603881836
    10. '
' → logprob: -10.265859603881836

Token 1476: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38598334789276123
    2. ')
' → logprob: -1.2609833478927612
    3. '                   ' → logprob: -4.010983467102051
    4. '])' → logprob: -4.760983467102051
    5. '])
' → logprob: -5.885983467102051
    6. ')])' → logprob: -6.010983467102051
    7. ')]' → logprob: -6.260983467102051
    8. '[state' → logprob: -7.510983467102051
    9. ')]
' → logprob: -7.760983467102051
    10. ')])
' → logprob: -7.760983467102051

Token 1477: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -4.3226136767771095e-05
    2. '               ' → logprob: -11.250042915344238
    3. '                       ' → logprob: -11.250042915344238
    4. '
' → logprob: -12.000042915344238
    5. '                    
' → logprob: -12.875042915344238
    6. '           ' → logprob: -13.000042915344238
    7. '                  ' → logprob: -13.250042915344238
    8. '```' → logprob: -13.500042915344238
    9. '       ' → logprob: -14.375042915344238
    10. '                    ' → logprob: -14.625042915344238

Token 1478: ' matches' (ID: 15248)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6066450476646423
    2. '                   ' → logprob: -1.731645107269287
    3. ' matches' → logprob: -1.981645107269287
    4. 'matches' (adapté à ' matches') → logprob: -1.981645107269287
    5. '(matches' → logprob: -6.856645107269287
    6. '                           ' → logprob: -7.856645107269287
    7. '
' → logprob: -9.356644630432129
    8. '                    ' → logprob: -9.356644630432129
    9. '               ' → logprob: -9.356644630432129
    10. '```' → logprob: -9.606644630432129

Token 1479: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.0016419768799096346
    2. '                   ' → logprob: -6.751641750335693
    3. ' =' → logprob: -8.376642227172852
    4. '               ' → logprob: -10.001642227172852
    5. '                       ' → logprob: -10.251642227172852
    6. '.append' → logprob: -10.501642227172852
    7. '=' → logprob: -10.751642227172852
    8. 'At' → logprob: -10.876642227172852
    9. '                  ' → logprob: -11.501642227172852
    10. '```' → logprob: -11.501642227172852

Token 1480: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.002014048397541046
    2. 'pos' → logprob: -6.37701416015625
    3. '[pos' → logprob: -8.62701416015625
    4. '_' → logprob: -10.37701416015625
    5. '_at' → logprob: -10.62701416015625
    6. '[
' → logprob: -10.62701416015625
    7. '[i' → logprob: -10.87701416015625
    8. '
' → logprob: -12.00201416015625
    9. '[_' → logprob: -12.12701416015625
    10. '[' → logprob: -12.12701416015625

Token 1481: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012749579036608338
    2. '[state' → logprob: -9.125127792358398
    3. '[' → logprob: -11.000127792358398
    4. '```' → logprob: -15.125127792358398
    5. '   ' → logprob: -15.375127792358398
    6. ')[' → logprob: -15.625127792358398
    7. '[(' → logprob: -15.750127792358398
    8. '\[' → logprob: -15.750127792358398
    9. '[
' → logprob: -16.0001277923584
    10. '[I' → logprob: -16.1251277923584

Token 1482: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5020344853401184
    2. '].' → logprob: -1.1270344257354736
    3. ').' → logprob: -2.7520344257354736
    4. '                   ' → logprob: -5.127034664154053
    5. '.' → logprob: -8.002034187316895
    6. '           ' → logprob: -9.002034187316895
    7. ',' → logprob: -9.127034187316895
    8. '                       ' → logprob: -9.252034187316895
    9. '                           ' → logprob: -9.752034187316895
    10. '               ' → logprob: -10.002034187316895

Token 1483: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.127333340875339e-06
    2. '.append' → logprob: -12.500003814697266
    3. ' append' → logprob: -15.375003814697266
    4. '_append' → logprob: -16.250003814697266
    5. 'appen' → logprob: -16.625003814697266
    6. 'add' → logprob: -16.875003814697266
    7. '```' → logprob: -17.125003814697266
    8. 'extend' → logprob: -18.125003814697266
    9. '	append' → logprob: -18.250003814697266
    10. 'Append' → logprob: -19.000003814697266

Token 1484: '((' (ID: 2054)
  Prédit: '(pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.16125360131263733
    2. '(' → logprob: -1.911253571510315
    3. '((' → logprob: -7.036253452301025
    4. '(p' → logprob: -10.286253929138184
    5. ' (' → logprob: -10.286253929138184
    6. '(element' → logprob: -10.786253929138184
    7. '(pair' → logprob: -11.411253929138184
    8. '(
' → logprob: -11.411253929138184
    9. '(policy' → logprob: -11.661253929138184
    10. '(tuple' → logprob: -12.536253929138184

Token 1485: 'pattern' (ID: 29563)
  Prédit: 'pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -9.088346359931165e-07
    2. ' pattern' → logprob: -14.000000953674316
    3. '
' → logprob: -18.5
    4. '(pattern' → logprob: -19.0
    5. 'pat' → logprob: -19.875
    6. '   ' → logprob: -21.0
    7. '```' → logprob: -23.0
    8. '.pattern' → logprob: -23.625
    9. 'p' → logprob: -23.75
    10. 'patterns' → logprob: -23.875

Token 1486: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0036456878297030926
    2. ',' → logprob: -6.378645896911621
    3. '_,' → logprob: -7.128645896911621
    4. '```' → logprob: -8.128645896911621
    5. '[' → logprob: -8.253645896911621
    6. '_' → logprob: -8.378645896911621
    7. '_ids' → logprob: -10.003645896911621
    8. '   ' → logprob: -10.128645896911621
    9. ',_' → logprob: -10.253645896911621
    10. '[
' → logprob: -10.253645896911621

Token 1487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.297462171758525e-05
    2. ',length' → logprob: -11.000033378601074
    3. ',
' → logprob: -11.250033378601074
    4. '                   ' → logprob: -14.125033378601074
    5. ',len' → logprob: -14.750033378601074
    6. ' ,' → logprob: -14.750033378601074
    7. ',)' → logprob: -15.000033378601074
    8. '‌,' → logprob: -15.375033378601074
    9. ')' → logprob: -15.875033378601074
    10. ',),' → logprob: -16.250032424926758

Token 1488: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.005234002135694027
    2. ' length' → logprob: -5.2552337646484375
    3. 'len' → logprob: -16.005233764648438
    4. 'leng' → logprob: -17.630233764648438
    5. '(length' → logprob: -18.005233764648438
    6. ')' → logprob: -18.630233764648438
    7. '                   ' → logprob: -18.880233764648438
    8. ',length' → logprob: -19.130233764648438
    9. 'l' → logprob: -19.255233764648438
    10. '[length' → logprob: -19.755233764648438

Token 1489: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033153212280012667
    2. '                   ' → logprob: -8.37533187866211
    3. ')
' → logprob: -9.50033187866211
    4. '               ' → logprob: -11.37533187866211
    5. '))' → logprob: -11.75033187866211
    6. '           ' → logprob: -12.50033187866211
    7. '                       ' → logprob: -13.75033187866211
    8. '       ' → logprob: -14.00033187866211
    9. ' )' → logprob: -15.50033187866211
    10. ')}' → logprob: -15.87533187866211

Token 1490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2720980644226074
    2. '
' → logprob: -1.5220980644226074
    3. '```' → logprob: -4.022098064422607
    4. 'from' → logprob: -6.397098064422607
    5. '        
' → logprob: -8.397098541259766
    6. '    
' → logprob: -10.522098541259766
    7. '
' → logprob: -10.772098541259766
    8. ' from' → logprob: -10.772098541259766
    9. 'dp' → logprob: -10.772098541259766
    10. '   ' → logprob: -10.897098541259766

Token 1491: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6739623546600342
    2. '
' → logprob: -0.9239623546600342
    3. 'from' → logprob: -3.048962354660034
    4. 'dp' → logprob: -3.173962354660034
    5. '        
' → logprob: -6.298962593078613
    6. 'visited' → logprob: -7.298962593078613
    7. '   ' → logprob: -7.298962593078613
    8. 'import' → logprob: -8.048962593078613
    9. '```' → logprob: -8.298962593078613
    10. '    
' → logprob: -8.798962593078613

Token 1492: ' BFS' (ID: 190016)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.005387549754232168
    2. 'dp' → logprob: -5.255387783050537
    3. 'import' → logprob: -9.630387306213379
    4. '       ' → logprob: -10.005387306213379
    5. 'visited' → logprob: -10.755387306213379
    6. '   ' → logprob: -11.505387306213379
    7. '#' → logprob: -11.630387306213379
    8. '
' → logprob: -13.380387306213379
    9. ' from' → logprob: -14.130387306213379
    10. 'queue' → logprob: -15.505387306213379

Token 1493: ' DP' (ID: 51992)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2522096037864685
    2. '       ' → logprob: -1.7522096633911133
    3. 'queue' → logprob: -3.6272096633911133
    4. ' from' → logprob: -4.627209663391113
    5. '
' → logprob: -5.252209663391113
    6. '   ' → logprob: -5.627209663391113
    7. '```' → logprob: -6.002209663391113
    8. 'import' → logprob: -7.502209663391113
    9. ' queue' → logprob: -7.502209663391113
    10. 'visited' → logprob: -7.752209663391113

Token 1494: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2433844804763794
    2. 'from' → logprob: -2.11838436126709
    3. '
' → logprob: -2.49338436126709
    4. ' from' → logprob: -4.74338436126709
    5. '```' → logprob: -6.24338436126709
    6. 'queue' → logprob: -6.99338436126709
    7. 'import' → logprob: -7.11838436126709
    8. '   ' → logprob: -7.99338436126709
    9. 'visited' → logprob: -8.86838436126709
    10. ' queue' → logprob: -9.36838436126709

Token 1495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16528525948524475
    2. '   ' → logprob: -2.665285348892212
    3. 'from' → logprob: -2.915285348892212
    4. '```' → logprob: -4.415285110473633
    5. '
' → logprob: -4.540285110473633
    6. ' from' → logprob: -5.665285110473633
    7. 'import' → logprob: -7.290285110473633
    8. 'queue' → logprob: -7.415285110473633
    9. 'dp' → logprob: -7.540285110473633
    10. 'visited' → logprob: -8.790285110473633

Token 1496: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.020582297816872597
    2. '   ' → logprob: -4.52058219909668
    3. ' from' → logprob: -5.52058219909668
    4. 'visited' → logprob: -5.77058219909668
    5. '       ' → logprob: -6.77058219909668
    6. 'dp' → logprob: -7.39558219909668
    7. 'queue' → logprob: -8.02058219909668
    8. 'import' → logprob: -8.64558219909668
    9. '
' → logprob: -9.39558219909668
    10. '```' → logprob: -11.39558219909668

Token 1497: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -3.6550729419104755e-05
    2. ' collections' → logprob: -10.250036239624023
    3. 'collection' → logprob: -15.000036239624023
    4. 'heap' → logprob: -15.000036239624023
    5. '_collection' → logprob: -15.750036239624023
    6. '_' → logprob: -15.750036239624023
    7. '_col' → logprob: -16.250036239624023
    8. '
' → logprob: -16.375036239624023
    9. 'array' → logprob: -17.625036239624023
    10. 'queue' → logprob: -17.625036239624023

Token 1498: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.017024563625454903
    2. ' import' → logprob: -5.267024517059326
    3. '[' → logprob: -5.392024517059326
    4. '[
' → logprob: -6.642024517059326
    5. '```' → logprob: -6.642024517059326
    6. '.' → logprob: -7.142024517059326
    7. '<|end|>' → logprob: -8.454524993896484
    8. '[token' → logprob: -8.454524993896484
    9. '.deepcopy' → logprob: -8.517024993896484
    10. 'def' → logprob: -8.704524993896484

Token 1499: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0012165444204583764
    2. ' deque' → logprob: -6.751216411590576
    3. 'collections' → logprob: -10.376216888427734
    4. '
' → logprob: -11.751216888427734
    5. 'queue' → logprob: -12.376216888427734
    6. '   ' → logprob: -13.626216888427734
    7. '```' → logprob: -13.876216888427734
    8. 'bit' → logprob: -14.751216888427734
    9. 'default' → logprob: -15.376216888427734
    10. '`' → logprob: -16.251216888427734

Token 1500: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6979839205741882
    2. 'queue' → logprob: -0.8229839205741882
    3. '
' → logprob: -3.322983980178833
    4. 'dp' → logprob: -4.572983741760254
    5. '       ' → logprob: -4.822983741760254
    6. 'visited' → logprob: -5.072983741760254
    7. '	queue' → logprob: -6.697983741760254
    8. ' queue' → logprob: -7.822983741760254
    9. 'q' → logprob: -7.947983741760254
    10. '    
' → logprob: -8.322983741760254

Token 1501: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.662807047367096
    2. 'queue' → logprob: -0.912807047367096
    3. 'dp' → logprob: -2.787806987762451
    4. '       ' → logprob: -4.412806987762451
    5. 'visited' → logprob: -4.912806987762451
    6. '
' → logprob: -7.162806987762451
    7. 'q' → logprob: -7.287806987762451
    8. '	queue' → logprob: -8.53780746459961
    9. ' queue' → logprob: -8.78780746459961
    10. '```' → logprob: -9.16280746459961

Token 1502: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.32532644271850586
    2. 'dp' → logprob: -1.3253264427185059
    3. 'visited' → logprob: -4.575326442718506
    4. '   ' → logprob: -6.575326442718506
    5. 'q' → logprob: -8.325326919555664
    6. '       ' → logprob: -10.700326919555664
    7. 'dq' → logprob: -10.950326919555664
    8. 'que' → logprob: -12.450326919555664
    9. 'seen' → logprob: -12.825326919555664
    10. '
' → logprob: -13.075326919555664

Token 1503: ' visited' (ID: 18416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3718935549259186
    2. 'queue' → logprob: -1.3718935251235962
    3. 'visited' → logprob: -2.8718936443328857
    4. '   ' → logprob: -8.621893882751465
    5. 'q' → logprob: -8.871893882751465
    6. 'dq' → logprob: -10.871893882751465
    7. 'seen' → logprob: -12.121893882751465
    8. '
' → logprob: -12.996893882751465
    9. 'que' → logprob: -13.371893882751465
    10. '       ' → logprob: -13.871893882751465

Token 1504: ' states' (ID: 9407)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029769469052553177
    2. '=' → logprob: -3.5297694206237793
    3. ' ' → logprob: -11.654769897460938
    4. '_states' → logprob: -12.404769897460938
    5. '=set' → logprob: -12.654769897460938
    6. '   ' → logprob: -14.404769897460938
    7. '[(' → logprob: -14.404769897460938
    8. '```' → logprob: -14.779769897460938
    9. '	' → logprob: -14.904769897460938
    10. '  ' → logprob: -15.279769897460938

Token 1505: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805377334356308
    2. '=' → logprob: -3.2880537509918213
    3. '=set' → logprob: -11.913053512573242
    4. '   ' → logprob: -12.413053512573242
    5. ' ' → logprob: -15.163053512573242
    6. '  ' → logprob: -15.288053512573242
    7. 'visited' → logprob: -15.288053512573242
    8. '```' → logprob: -15.413053512573242
    9. '	' → logprob: -15.788053512573242
    10. '    ' → logprob: -16.413053512573242

Token 1506: ' (' (ID: 350)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03818768262863159
    2. 'set' → logprob: -3.2881877422332764
    3. ' visited' → logprob: -9.288187980651855
    4. '{' → logprob: -10.663187980651855
    5. ' set' → logprob: -10.913187980651855
    6. '{}' → logprob: -12.038187980651855
    7. '   ' → logprob: -13.038187980651855
    8. 'seen' → logprob: -14.038187980651855
    9. ' =' → logprob: -14.163187980651855
    10. '=set' → logprob: -14.663187980651855

Token 1507: 'position' (ID: 4504)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6119982600212097
    2. 'position' → logprob: -0.8619982600212097
    3. ')' → logprob: -4.236998081207275
    4. '0' → logprob: -4.236998081207275
    5. '(' → logprob: -5.611998081207275
    6. 'i' → logprob: -6.986998081207275
    7. '
' → logprob: -7.236998081207275
    8. '(position' → logprob: -7.736998081207275
    9. '(pos' → logprob: -8.361998558044434
    10. ' (' → logprob: -9.361998558044434

Token 1508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006575119914487004
    2. '
' → logprob: -7.750657558441162
    3. ')' → logprob: -9.375657081604004
    4. ' ,' → logprob: -9.875657081604004
    5. ',
' → logprob: -10.125657081604004
    6. '```' → logprob: -11.000657081604004
    7. '=' → logprob: -12.000657081604004
    8. '_,' → logprob: -12.500657081604004
    9. ',state' → logprob: -12.625657081604004
    10. '   ' → logprob: -12.625657081604004

Token 1509: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0036292888689786196
    2. ' mask' → logprob: -5.628629207611084
    3. 'bit' → logprob: -11.628629684448242
    4. ')' → logprob: -11.753629684448242
    5. '_mask' → logprob: -12.128629684448242
    6. '
' → logprob: -13.128629684448242
    7. '	mask' → logprob: -13.753629684448242
    8. '   ' → logprob: -14.628629684448242
    9. '```' → logprob: -14.628629684448242
    10. 'm' → logprob: -14.628629684448242

Token 1510: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023020433261990547
    2. ',' → logprob: -4.023020267486572
    3. ')
' → logprob: -5.523020267486572
    4. ' =' → logprob: -8.52302074432373
    5. '),' → logprob: -8.77302074432373
    6. ')=' → logprob: -9.02302074432373
    7. ',)' → logprob: -9.52302074432373
    8. '))' → logprob: -10.02302074432373
    9. '=' → logprob: -10.02302074432373
    10. '   ' → logprob: -10.27302074432373

Token 1511: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1755446344614029
    2. '=' → logprob: -2.0505447387695312
    3. 'visited' → logprob: -3.5505447387695312
    4. '
' → logprob: -6.800544738769531
    5. ' =
' → logprob: -7.300544738769531
    6. '```' → logprob: -7.675544738769531
    7. '=
' → logprob: -7.800544738769531
    8. '   ' → logprob: -8.175544738769531
    9. 'states' → logprob: -8.550544738769531
    10. ' visited' → logprob: -8.925544738769531

Token 1512: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -7.350386295001954e-05
    2. '       ' → logprob: -9.750073432922363
    3. ' visited' → logprob: -11.750073432922363
    4. '   ' → logprob: -12.250073432922363
    5. '
' → logprob: -13.125073432922363
    6. '```' → logprob: -15.500073432922363
    7. 'queue' → logprob: -16.37507438659668
    8. 'seen' → logprob: -17.12507438659668
    9. '        
' → logprob: -17.75007438659668
    10. '           ' → logprob: -18.25007438659668

Token 1513: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5771281123161316
    2. '=' → logprob: -0.8271281123161316
    3. '.add' → logprob: -7.202127933502197
    4. '=set' → logprob: -7.827127933502197
    5. '[(' → logprob: -11.452128410339355
    6. '={(' → logprob: -11.702128410339355
    7. '.setdefault' → logprob: -11.952128410339355
    8. '[' → logprob: -12.202128410339355
    9. '```' → logprob: -12.952128410339355
    10. '.' → logprob: -13.077128410339355

Token 1514: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.005657148081809282
    2. ' set' → logprob: -5.755657196044922
    3. '{' → logprob: -6.005657196044922
    4. ' {' → logprob: -12.255657196044922
    5. '{}' → logprob: -12.380657196044922
    6. 'default' → logprob: -13.755657196044922
    7. ' {(' → logprob: -14.380657196044922
    8. '=set' → logprob: -15.005657196044922
    9. '	set' → logprob: -15.755657196044922
    10. '   ' → logprob: -16.255657196044922

Token 1515: 'set' (ID: 977)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1618557721376419
    2. 'set' → logprob: -1.9118558168411255
    3. 'False' → logprob: -7.036855697631836
    4. ' [' → logprob: -7.911855697631836
    5. '{' → logprob: -8.161855697631836
    6. 'dict' → logprob: -10.536855697631836
    7. '{}' → logprob: -10.661855697631836
    8. '0' → logprob: -10.911855697631836
    9. '[{' → logprob: -11.786855697631836
    10. '(set' → logprob: -11.911855697631836

Token 1516: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.29055914282798767
    2. '()]' → logprob: -1.41555917263031
    3. '()
' → logprob: -5.2905592918396
    4. '()]
' → logprob: -5.9155592918396
    5. '(' → logprob: -7.9155592918396
    6. '()][' → logprob: -8.290558815002441
    7. '(range' → logprob: -8.790558815002441
    8. ']' → logprob: -8.915558815002441
    9. '()(' → logprob: -9.040558815002441
    10. '()[' → logprob: -9.040558815002441

Token 1517: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12720926105976105
    2. '()]' → logprob: -2.627209186553955
    3. '(' → logprob: -4.127209186553955
    4. '()
' → logprob: -4.627209186553955
    5. '(len' → logprob: -5.252209186553955
    6. ']' → logprob: -5.377209186553955
    7. '()][' → logprob: -5.752209186553955
    8. '       ' → logprob: -6.627209186553955
    9. '(pos' → logprob: -7.377209186553955
    10. '(line' → logprob: -7.377209186553955

Token 1518: ' _' (ID: 1175)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1848413646221161
    2. ' in' → logprob: -1.8098413944244385
    3. '_' → logprob: -5.684841156005859
    4. 'range' → logprob: -7.059841156005859
    5. ' range' → logprob: -7.934841156005859
    6. '(range' → logprob: -7.934841156005859
    7. '_in' → logprob: -10.05984115600586
    8. '(len' → logprob: -11.05984115600586
    9. ' _' → logprob: -11.55984115600586
    10. '_range' → logprob: -11.80984115600586

Token 1519: ' in' (ID: 306)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.034719739109277725
    2. '(range' → logprob: -3.409719705581665
    3. ' (' → logprob: -7.909719944000244
    4. ' range' → logprob: -7.909719944000244
    5. 'range' → logprob: -8.784719467163086
    6. '(length' → logprob: -9.159719467163086
    7. '(' → logprob: -9.659719467163086
    8. '<len' → logprob: -11.659719467163086
    9. '(line' → logprob: -12.909719467163086
    10. 'Range' → logprob: -14.034719467163086

Token 1520: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06306982040405273
    2. ' range' → logprob: -2.8130698204040527
    3. '(range' → logprob: -6.813069820404053
    4. '	range' → logprob: -13.938070297241211
    5. '   ' → logprob: -14.063070297241211
    6. '
' → logprob: -16.43807029724121
    7. '_range' → logprob: -16.56307029724121
    8. ']' → logprob: -16.81307029724121
    9. ' (' → logprob: -16.81307029724121
    10. ')' → logprob: -16.93807029724121

Token 1521: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12700338661670685
    2. '(len' → logprob: -2.1270034313201904
    3. ' len' → logprob: -9.75200366973877
    4. '[len' → logprob: -11.25200366973877
    5. '   ' → logprob: -13.62700366973877
    6. '=len' → logprob: -14.25200366973877
    7. ',len' → logprob: -14.37700366973877
    8. '	len' → logprob: -14.75200366973877
    9. '(' → logprob: -15.00200366973877
    10. ' (' → logprob: -15.12700366973877

Token 1522: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.0015116469003260136
    2. 'text' → logprob: -6.501511573791504
    3. '(' → logprob: -12.501511573791504
    4. ' text' → logprob: -12.751511573791504
    5. '{text' → logprob: -14.001511573791504
    6. '_text' → logprob: -14.501511573791504
    7. '[text' → logprob: -14.751511573791504
    8. ' (' → logprob: -15.626511573791504
    9. '```' → logprob: -15.626511573791504
    10. 'Text' → logprob: -15.751511573791504

Token 1523: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023650135844945908
    2. ')]' → logprob: -4.023650169372559
    3. ' +' → logprob: -5.398650169372559
    4. ')]
' → logprob: -7.148650169372559
    5. ')' → logprob: -9.523650169372559
    6. ')+' → logprob: -10.023650169372559
    7. '       ' → logprob: -11.023650169372559
    8. '+
' → logprob: -11.148650169372559
    9. ')][' → logprob: -11.148650169372559
    10. ')])' → logprob: -11.773650169372559

Token 1524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.817902173381299e-05
    2. '2' → logprob: -9.75009822845459
    3. ' ' → logprob: -11.25009822845459
    4. '```' → logprob: -11.62509822845459
    5. '
' → logprob: -11.75009822845459
    6. '+' → logprob: -12.12509822845459
    7. ')' → logprob: -13.50009822845459
    8. '   ' → logprob: -14.37509822845459
    9. '``' → logprob: -14.62509822845459
    10. '=' → logprob: -14.75009822845459

Token 1525: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008722944185137749
    2. ')]' → logprob: -5.00872278213501
    3. ']
' → logprob: -6.25872278213501
    4. '()]' → logprob: -10.008723258972168
    5. ' ]' → logprob: -11.133723258972168
    6. ')' → logprob: -11.133723258972168
    7. ']
' → logprob: -11.508723258972168
    8. ')]
' → logprob: -12.383723258972168
    9. '   ' → logprob: -14.008723258972168
    10. ']

' → logprob: -14.508723258972168

Token 1526: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.310557097196579
    2. ' queue' → logprob: -2.4355571269989014
    3. '
' → logprob: -2.8105571269989014
    4. '```' → logprob: -3.3105571269989014
    5. '       ' → logprob: -3.8105571269989014
    6. 'q' → logprob: -4.060556888580322
    7. 'dp' → logprob: -4.060556888580322
    8. '   ' → logprob: -4.310556888580322
    9. 'visited' → logprob: -5.310556888580322
    10. 'dq' → logprob: -6.060556888580322

Token 1527: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.015700804069638252
    2. 'visited' → logprob: -4.515700817108154
    3. '       ' → logprob: -6.390700817108154
    4. '```' → logprob: -7.140700817108154
    5. 'q' → logprob: -7.265700817108154
    6. ' queue' → logprob: -7.640700817108154
    7. '   ' → logprob: -7.765700817108154
    8. '
' → logprob: -7.765700817108154
    9. 'start' → logprob: -9.890700340270996
    10. '``' → logprob: -10.390700340270996

Token 1528: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14630736410617828
    2. ' =' → logprob: -2.5213074684143066
    3. '.append' → logprob: -2.8963074684143066
    4. '=[]' → logprob: -8.521306991577148
    5. '.' → logprob: -8.646306991577148
    6. '.enqueue' → logprob: -10.146306991577148
    7. '()' → logprob: -10.396306991577148
    8. '().' → logprob: -11.271306991577148
    9. '   ' → logprob: -11.396306991577148
    10. '(' → logprob: -11.896306991577148

Token 1529: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.002475777640938759
    2. ' deque' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.12747573852539
    4. 'Deque' → logprob: -17.25247573852539
    5. '[(' → logprob: -17.37747573852539
    6. 'collections' → logprob: -17.62747573852539
    7. '```' → logprob: -18.12747573852539
    8. 'de' → logprob: -19.75247573852539
    9. ' ' → logprob: -20.00247573852539
    10. '
' → logprob: -20.50247573852539

Token 1530: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.09514530748128891
    2. '()' → logprob: -3.0951452255249023
    3. '([(' → logprob: -3.0951452255249023
    4. '((' → logprob: -9.345145225524902
    5. '[(' → logprob: -9.845145225524902
    6. '([
' → logprob: -10.220145225524902
    7. '()\' → logprob: -11.345145225524902
    8. '()

' → logprob: -11.345145225524902
    9. '(' → logprob: -11.595145225524902
    10. '([' → logprob: -11.845145225524902

Token 1531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23896826803684235
    2. 'queue' → logprob: -1.6139682531356812
    3. '(queue' → logprob: -4.988968372344971
    4. '```' → logprob: -5.488968372344971
    5. 'visited' → logprob: -6.988968372344971
    6. '
' → logprob: -7.238968372344971
    7. ' queue' → logprob: -7.988968372344971
    8. '   ' → logprob: -8.238967895507812
    9. '(' → logprob: -9.363967895507812
    10. '``' → logprob: -9.988967895507812

Token 1532: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.03303634375333786
    2. '       ' → logprob: -3.533036231994629
    3. 'visited' → logprob: -5.783036231994629
    4. '```' → logprob: -9.158036231994629
    5. ' queue' → logprob: -10.033036231994629
    6. '(queue' → logprob: -10.158036231994629
    7. '   ' → logprob: -12.158036231994629
    8. '
' → logprob: -12.783036231994629
    9. '``' → logprob: -12.908036231994629
    10. '	queue' → logprob: -13.408036231994629

Token 1533: ' start' (ID: 1604)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.474287748336792
    2. 'visited' → logprob: -0.974287748336792
    3. '       ' → logprob: -8.849287986755371
    4. ' queue' → logprob: -10.099287986755371
    5. ' visited' → logprob: -11.099287986755371
    6. '   ' → logprob: -11.724287986755371
    7. '```' → logprob: -13.349287986755371
    8. '(queue' → logprob: -14.849287986755371
    9. '	queue' → logprob: -15.099287986755371
    10. '
' → logprob: -16.099287033081055

Token 1534: ' from' (ID: 591)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5893726348876953
    2. '(queue' → logprob: -2.2143726348876953
    3. '       ' → logprob: -2.3393726348876953
    4. '(' → logprob: -2.7143726348876953
    5. ' =' → logprob: -3.2143726348876953
    6. 'state' → logprob: -3.3393726348876953
    7. '=' → logprob: -3.9643726348876953
    8. '   ' → logprob: -4.464372634887695
    9. 'pos' → logprob: -4.464372634887695
    10. 'queue' → logprob: -4.464372634887695

Token 1535: ' position' (ID: 4010)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06274071335792542
    2. '0' → logprob: -2.8127408027648926
    3. '[(' → logprob: -7.812740802764893
    4. ' (' → logprob: -8.312740325927734
    5. '[' → logprob: -10.062740325927734
    6. '
' → logprob: -10.437740325927734
    7. 'position' → logprob: -10.687740325927734
    8. '```' → logprob: -12.187740325927734
    9. ' ' → logprob: -12.312740325927734
    10. '[
' → logprob: -12.437740325927734

Token 1536: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14404413104057312
    2. '0' → logprob: -2.0190441608428955
    3. ' (' → logprob: -6.894043922424316
    4. ',' → logprob: -8.644043922424316
    5. '```' → logprob: -9.144043922424316
    6. '`' → logprob: -10.894043922424316
    7. '
' → logprob: -11.019043922424316
    8. '=' → logprob: -11.644043922424316
    9. ' ' → logprob: -12.269043922424316
    10. ' =' → logprob: -12.394043922424316

Token 1537: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024883802980184555
    2. '(' → logprob: -6.002488613128662
    3. '=' → logprob: -11.752488136291504
    4. '
' → logprob: -13.752488136291504
    5. '```' → logprob: -13.877488136291504
    6. '[' → logprob: -14.002488136291504
    7. ' ' → logprob: -14.002488136291504
    8. '(
' → logprob: -15.002488136291504
    9. ' (' → logprob: -15.127488136291504
    10. ' =' → logprob: -15.252488136291504

Token 1538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5698873400688171
    2. 'queue' → logprob: -1.694887399673462
    3. 'visited' → logprob: -2.444887399673462
    4. '(' → logprob: -2.694887399673462
    5. '(queue' → logprob: -2.944887399673462
    6. '()
' → logprob: -4.194887161254883
    7. '(),' → logprob: -4.444887161254883
    8. '
' → logprob: -4.694887161254883
    9. '       ' → logprob: -6.569887161254883
    10. ' (' → logprob: -6.694887161254883

Token 1539: ' mask' (ID: 10910)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009174388833343983
    2. '(' → logprob: -5.009174346923828
    3. ' ' → logprob: -6.509174346923828
    4. 'mask' → logprob: -7.259174346923828
    5. ' (' → logprob: -9.009174346923828
    6. '{' → logprob: -10.009174346923828
    7. ' mask' → logprob: -10.134174346923828
    8. '
' → logprob: -10.384174346923828
    9. 'set' → logprob: -12.134174346923828
    10. '   ' → logprob: -12.509174346923828

Token 1540: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5263627171516418
    2. '0' → logprob: -1.776362657546997
    3. '(' → logprob: -1.901362657546997
    4. ' =' → logprob: -2.776362657546997
    5. '=' → logprob: -4.401362895965576
    6. ' (' → logprob: -5.151362895965576
    7. '[' → logprob: -5.526362895965576
    8. '```' → logprob: -6.651362895965576
    9. ',
' → logprob: -7.026362895965576
    10. ')' → logprob: -7.151362895965576

Token 1541: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022916549642104656
    2. '=' → logprob: -9.000228881835938
    3. ' ' → logprob: -9.375228881835938
    4. ' =' → logprob: -11.625228881835938
    5. '[' → logprob: -12.000228881835938
    6. '(' → logprob: -12.375228881835938
    7. '|' → logprob: -14.500228881835938
    8. '000' → logprob: -15.250228881835938
    9. '```' → logprob: -15.250228881835938
    10. '{' → logprob: -15.500228881835938

Token 1542: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08438532054424286
    2. '(queue' → logprob: -3.459385395050049
    3. '()
' → logprob: -3.709385395050049
    4. ',' → logprob: -5.209385395050049
    5. 'queue' → logprob: -5.334385395050049
    6. '       ' → logprob: -5.584385395050049
    7. ')
' → logprob: -5.584385395050049
    8. '```' → logprob: -6.084385395050049
    9. ',
' → logprob: -6.459385395050049
    10. '()' → logprob: -7.334385395050049

Token 1543: 'no' (ID: 1750)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34998777508735657
    2. '(' → logprob: -1.2249877452850342
    3. ' (' → logprob: -7.099987983703613
    4. '(True' → logprob: -8.849987983703613
    5. '
' → logprob: -9.224987983703613
    6. ')' → logprob: -9.224987983703613
    7. 'True' → logprob: -9.724987983703613
    8. '   ' → logprob: -9.724987983703613
    9. ')
' → logprob: -9.849987983703613
    10. ',' → logprob: -9.849987983703613

Token 1544: ' elements' (ID: 8632)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8171875476837158
    2. ',' → logprob: -0.8171875476837158
    3. 'elements' → logprob: -2.942187547683716
    4. ' elements' → logprob: -4.692187309265137
    5. 'element' → logprob: -4.942187309265137
    6. '_' → logprob: -5.442187309265137
    7. 'state' → logprob: -5.817187309265137
    8. 'strings' → logprob: -5.817187309265137
    9. ']' → logprob: -5.817187309265137
    10. '),' → logprob: -5.942187309265137

Token 1545: ' matched' (ID: 31366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3314512073993683
    2. ')
' → logprob: -1.706451177597046
    3. ',' → logprob: -2.456451177597046
    4. '_used' → logprob: -5.706451416015625
    5. '):
' → logprob: -5.956451416015625
    6. ')]' → logprob: -6.831451416015625
    7. '_set' → logprob: -6.956451416015625
    8. '_added' → logprob: -7.081451416015625
    9. '_selected' → logprob: -7.206451416015625
    10. 'used' → logprob: -7.331451416015625

Token 1546: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03547881916165352
    2. '       ' → logprob: -3.7854788303375244
    3. ')' → logprob: -4.660478591918945
    4. '(queue' → logprob: -6.410478591918945
    5. 'queue' → logprob: -8.035478591918945
    6. '```' → logprob: -8.160478591918945
    7. '   ' → logprob: -9.035478591918945
    8. '
' → logprob: -9.285478591918945
    9. '()
' → logprob: -9.285478591918945
    10. ',' → logprob: -10.285478591918945

Token 1547: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.9950340986251831
    2. '       ' → logprob: -1.120034098625183
    3. '```' → logprob: -1.620034098625183
    4. '(queue' → logprob: -2.8700342178344727
    5. '
' → logprob: -3.4950342178344727
    6. '``' → logprob: -4.745034217834473
    7. '   ' → logprob: -5.370034217834473
    8. ' queue' → logprob: -5.870034217834473
    9. '(' → logprob: -7.495034217834473
    10. '[' → logprob: -7.745034217834473

Token 1548: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0002370329457335174
    2. ' queue' → logprob: -8.875237464904785
    3. '(queue' → logprob: -9.625237464904785
    4. '
' → logprob: -11.125237464904785
    5. '       ' → logprob: -11.750237464904785
    6. '```' → logprob: -11.875237464904785
    7. '   ' → logprob: -13.875237464904785
    8. '``' → logprob: -14.875237464904785
    9. '	queue' → logprob: -16.37523651123047
    10. '(' → logprob: -16.62523651123047

Token 1549: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0921942703134846e-05
    2. '```' → logprob: -12.25001049041748
    3. '][' → logprob: -13.37501049041748
    4. '0' → logprob: -13.75001049041748
    5. '\[' → logprob: -13.75001049041748
    6. '=' → logprob: -13.87501049041748
    7. '
' → logprob: -14.75001049041748
    8. '[][' → logprob: -15.12501049041748
    9. '__[' → logprob: -15.87501049041748
    10. ' [' → logprob: -16.250011444091797

Token 1550: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -11.875007629394531
    3. '
' → logprob: -14.500007629394531
    4. '```' → logprob: -15.375007629394531
    5. '][' → logprob: -16.25000762939453
    6. ']' → logprob: -16.75000762939453
    7. ' ' → logprob: -16.87500762939453
    8. ')' → logprob: -17.12500762939453
    9. '=' → logprob: -17.87500762939453
    10. '{' → logprob: -18.00000762939453

Token 1551: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.3912120759487152
    2. '][' → logprob: -1.1412121057510376
    3. '[' → logprob: -6.016211986541748
    4. ']' → logprob: -6.516211986541748
    5. ').' → logprob: -8.516212463378906
    6. ']
' → logprob: -9.641212463378906
    7. '```' → logprob: -10.391212463378906
    8. '.add' → logprob: -10.641212463378906
    9. ',' → logprob: -11.516212463378906
    10. '.' → logprob: -11.641212463378906

Token 1552: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. '.add' → logprob: -17.25
    3. '_add' → logprob: -18.0
    4. ' add' → logprob: -18.25
    5. 'adde' → logprob: -21.375
    6. '```' → logprob: -22.0
    7. '	add' → logprob: -22.125
    8. '(add' → logprob: -22.375
    9. 'append' → logprob: -22.375
    10. 'import' → logprob: -22.375

Token 1553: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02325025200843811
    2. '(' → logprob: -3.7732503414154053
    3. '(
' → logprob: -12.273250579833984
    4. ' ' → logprob: -16.398250579833984
    5. ' (' → logprob: -17.398250579833984
    6. '
' → logprob: -18.148250579833984
    7. '((' → logprob: -18.273250579833984
    8. '000' → logprob: -18.898250579833984
    9. '00' → logprob: -19.148250579833984
    10. '```' → logprob: -19.523250579833984

Token 1554: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.25
    3. '000' → logprob: -23.125
    4. '۰' → logprob: -23.25
    5. '
' → logprob: -23.375
    6. '00' → logprob: -23.5
    7. '(' → logprob: -23.5
    8. '   ' → logprob: -24.0
    9. '```' → logprob: -24.625
    10. ')' → logprob: -25.25

Token 1555: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20146216452121735
    2. ')' → logprob: -1.7014621496200562
    3. '       ' → logprob: -10.201461791992188
    4. ')
' → logprob: -12.451461791992188
    5. '   ' → logprob: -13.201461791992188
    6. '```' → logprob: -13.451461791992188
    7. '<|end|>' → logprob: -13.826461791992188
    8. '),' → logprob: -14.451461791992188
    9. ');
' → logprob: -14.826461791992188
    10. '(queue' → logprob: -15.326461791992188

Token 1556: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.04737193137407303
    2. '	queue' → logprob: -3.6723718643188477
    3. '       ' → logprob: -4.297371864318848
    4. '```' → logprob: -5.297371864318848
    5. ' queue' → logprob: -6.797371864318848
    6. '   ' → logprob: -7.422371864318848
    7. '(queue' → logprob: -7.922371864318848
    8. '``' → logprob: -9.422371864318848
    9. '
' → logprob: -9.797371864318848
    10. '.queue' → logprob: -11.547371864318848

Token 1557: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.01985342614352703
    2. '       ' → logprob: -4.019853591918945
    3. '   ' → logprob: -7.019853591918945
    4. ' queue' → logprob: -7.644853591918945
    5. '```' → logprob: -8.144853591918945
    6. '	queue' → logprob: -10.644853591918945
    7. '(queue' → logprob: -11.644853591918945
    8. '``' → logprob: -12.269853591918945
    9. '
' → logprob: -14.144853591918945
    10. '           ' → logprob: -15.144853591918945

Token 1558: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10583530366420746
    2. '.' → logprob: -2.355835199356079
    3. '.p' → logprob: -5.230835437774658
    4. '.
' → logprob: -9.7308349609375
    5. '.extend' → logprob: -9.7308349609375
    6. '.put' → logprob: -9.8558349609375
    7. '.app' → logprob: -10.4808349609375
    8. '.enqueue' → logprob: -10.6058349609375
    9. '.ap' → logprob: -11.8558349609375
    10. ').' → logprob: -11.8558349609375

Token 1559: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932394504547119
    2. '((' → logprob: -0.6932394504547119
    3. '(
' → logprob: -9.318239212036133
    4. ' (' → logprob: -13.568239212036133
    5. '   ' → logprob: -14.193239212036133
    6. '(('' → logprob: -15.193239212036133
    7. '```' → logprob: -16.193239212036133
    8. '(("' → logprob: -16.443239212036133
    9. '(

' → logprob: -17.318239212036133
    10. '(()' → logprob: -17.318239212036133

Token 1560: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. ')' → logprob: -20.5
    4. '   ' → logprob: -21.125
    5. '(' → logprob: -21.625
    6. '
' → logprob: -22.25
    7. '```' → logprob: -23.625
    8. '00' → logprob: -24.5
    9. ')
' → logprob: -25.0
    10. '    ' → logprob: -25.0

Token 1561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011248346709180623
    2. ',
' → logprob: -9.500112533569336
    3. ' ,' → logprob: -10.375112533569336
    4. ')' → logprob: -13.500112533569336
    5. '<|end|>' → logprob: -14.000112533569336
    6. ',)' → logprob: -14.125112533569336
    7. ',{
' → logprob: -14.500112533569336
    8. '‌,' → logprob: -14.500112533569336
    9. '   ' → logprob: -14.750112533569336
    10. ',None' → logprob: -15.000112533569336

Token 1562: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. ')' → logprob: -18.875
    4. '۰' → logprob: -20.375
    5. '```' → logprob: -21.0
    6. '000' → logprob: -21.0
    7. '   ' → logprob: -22.0
    8. ',' → logprob: -22.3125
    9. '00' → logprob: -22.4375
    10. '
' → logprob: -22.4375

Token 1563: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07933156937360764
    2. ')' → logprob: -2.579331636428833
    3. '))
' → logprob: -7.829331398010254
    4. ')
' → logprob: -10.829331398010254
    5. '   ' → logprob: -11.329331398010254
    6. ')))' → logprob: -12.704331398010254
    7. '       ' → logprob: -12.954331398010254
    8. ',' → logprob: -13.079331398010254
    9. '),' → logprob: -13.204331398010254
    10. '```' → logprob: -14.079331398010254

Token 1564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02074344828724861
    2. '   ' → logprob: -4.145743370056152
    3. 'while' → logprob: -6.145743370056152
    4. '```' → logprob: -6.145743370056152
    5. ' while' → logprob: -8.395743370056152
    6. '	while' → logprob: -9.520743370056152
    7. '        
' → logprob: -10.395743370056152
    8. '           ' → logprob: -10.520743370056152
    9. '    
' → logprob: -11.270743370056152
    10. '
' → logprob: -11.270743370056152

Token 1565: ' result' (ID: 1534)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10424449294805527
    2. '       ' → logprob: -3.3542444705963135
    3. 'result' (adapté à ' result') → logprob: -3.7292444705963135
    4. '   ' → logprob: -4.229244709014893
    5. 'count' → logprob: -4.729244709014893
    6. '```' → logprob: -4.854244709014893
    7. 'results' → logprob: -5.979244709014893
    8. 'matches' → logprob: -6.854244709014893
    9. 'positions' → logprob: -7.104244709014893
    10. ' while' → logprob: -7.229244709014893

Token 1566: '_positions' (ID: 93193)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5334312319755554
    2. ' =' → logprob: -0.9084312319755554
    3. '_' → logprob: -5.158431053161621
    4. '_counts' → logprob: -6.408431053161621
    5. '_count' → logprob: -7.158431053161621
    6. '_positions' → logprob: -7.283431053161621
    7. 's' → logprob: -7.908431053161621
    8. ',' → logprob: -9.033431053161621
    9. '```' → logprob: -9.158431053161621
    10. '_tokens' → logprob: -9.533431053161621

Token 1567: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869602382183075
    2. '=' → logprob: -1.1369602680206299
    3. '=set' → logprob: -9.76196002960205
    4. '=[]' → logprob: -11.26196002960205
    5. ')' → logprob: -12.51196002960205
    6. ',' → logprob: -12.63696002960205
    7. 's' → logprob: -12.88696002960205
    8. ' =
' → logprob: -12.88696002960205
    9. '_' → logprob: -13.76196002960205
    10. '.' → logprob: -14.01196002960205

Token 1568: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.001504982472397387
    2. ' set' → logprob: -6.501504898071289
    3. '[]' → logprob: -13.376504898071289
    4. '{}' → logprob: -14.501504898071289
    5. '   ' → logprob: -15.501504898071289
    6. '	set' → logprob: -15.626504898071289
    7. '(set' → logprob: -16.75150489807129
    8. '=set' → logprob: -16.75150489807129
    9. '{' → logprob: -16.87650489807129
    10. ' ' → logprob: -17.37650489807129

Token 1569: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4787105917930603
    2. '()' → logprob: -1.853710651397705
    3. '(
' → logprob: -2.103710651397705
    4. '       ' → logprob: -2.853710651397705
    5. '   ' → logprob: -3.728710651397705
    6. ',' → logprob: -5.103710651397705
    7. '()
' → logprob: -5.353710651397705
    8. ')' → logprob: -5.478710651397705
    9. '<|end|>' → logprob: -6.978710651397705
    10. '[' → logprob: -7.603710651397705

Token 1570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0284385681152344
    2. 'while' → logprob: -1.0284385681152344
    3. '   ' → logprob: -1.7784385681152344
    4. '	while' → logprob: -2.2784385681152344
    5. ' while' → logprob: -4.903438568115234
    6. '```' → logprob: -5.278438568115234
    7. '
' → logprob: -7.778438568115234
    8. '	' → logprob: -8.653438568115234
    9. '	   ' → logprob: -8.903438568115234
    10. '``' → logprob: -9.278438568115234

Token 1571: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10045100748538971
    2. '       ' → logprob: -2.3504509925842285
    3. '   ' → logprob: -8.600451469421387
    4. ' while' → logprob: -10.600451469421387
    5. '```' → logprob: -10.975451469421387
    6. '
' → logprob: -11.100451469421387
    7. '	while' → logprob: -12.850451469421387
    8. '``' → logprob: -15.100451469421387
    9. 'While' → logprob: -16.35045051574707
    10. 'for' → logprob: -16.35045051574707

Token 1572: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.00193149340339005
    2. ' queue' → logprob: -6.251931667327881
    3. '   ' → logprob: -13.126931190490723
    4. '(queue' → logprob: -14.501931190490723
    5. '       ' → logprob: -15.376931190490723
    6. 'len' → logprob: -15.626931190490723
    7. '	queue' → logprob: -16.12693214416504
    8. ' ' → logprob: -17.50193214416504
    9. '
' → logprob: -17.87693214416504
    10. '  ' → logprob: -19.12693214416504

Token 1573: ':
' (ID: 734)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.17115087807178497
    2. '.append' → logprob: -1.9211509227752686
    3. '.' → logprob: -4.7961506843566895
    4. '.pop' → logprob: -6.4211506843566895
    5. ':
' → logprob: -7.6711506843566895
    6. '.dequeue' → logprob: -9.296151161193848
    7. '.
' → logprob: -9.421151161193848
    8. '       ' → logprob: -9.546151161193848
    9. '           ' → logprob: -9.546151161193848
    10. '   ' → logprob: -9.796151161193848

Token 1574: '           ' (ID: 352)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.31054747104644775
    2. '           ' → logprob: -1.8105474710464478
    3. 'position' → logprob: -2.435547351837158
    4. '(pos' → logprob: -4.810547351837158
    5. '(position' → logprob: -5.435547351837158
    6. ' pos' → logprob: -6.310547351837158
    7. '       ' → logprob: -7.060547351837158
    8. ' position' → logprob: -8.560547828674316
    9. ' (' → logprob: -8.685547828674316
    10. '   ' → logprob: -9.060547828674316

Token 1575: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.000651793903671205
    2. 'position' → logprob: -7.500651836395264
    3. '(pos' → logprob: -9.500651359558105
    4. ' pos' → logprob: -11.000651359558105
    5. '   ' → logprob: -12.000651359558105
    6. 'p' → logprob: -14.375651359558105
    7. '(position' → logprob: -15.250651359558105
    8. '	pos' → logprob: -15.750651359558105
    9. '_pos' → logprob: -16.125652313232422
    10. '       ' → logprob: -16.625652313232422

Token 1576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006522706826217473
    2. ' ,' → logprob: -7.625652313232422
    3. ',
' → logprob: -9.625652313232422
    4. ',next' → logprob: -10.375652313232422
    5. ',(' → logprob: -11.125652313232422
    6. ',p' → logprob: -11.625652313232422
    7. ',pos' → logprob: -12.000652313232422
    8. ',int' → logprob: -12.375652313232422
    9. ',status' → logprob: -12.875652313232422
    10. ',new' → logprob: -13.000652313232422

Token 1577: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -3.054500666621607e-06
    2. ' mask' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.625003814697266
    4. '
' → logprob: -18.750003814697266
    5. '	mask' → logprob: -18.875003814697266
    6. '_mask' → logprob: -18.875003814697266
    7. 'm' → logprob: -19.875003814697266
    8. 'ms' → logprob: -20.375003814697266
    9. ' ' → logprob: -21.000003814697266
    10. 'masked' → logprob: -21.000003814697266

Token 1578: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.039042383432388306
    2. ' =' → logprob: -3.4140424728393555
    3. ')' → logprob: -5.4140424728393555
    4. ',' → logprob: -7.4140424728393555
    5. '           ' → logprob: -9.789042472839355
    6. '=
' → logprob: -9.914042472839355
    7. '[' → logprob: -10.039042472839355
    8. ')=' → logprob: -10.664042472839355
    9. '            ' → logprob: -10.914042472839355
    10. ' ' → logprob: -11.039042472839355

Token 1579: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.01815134845674038
    2. ' queue' → logprob: -4.01815128326416
    3. '	queue' → logprob: -14.39315128326416
    4. '(queue' → logprob: -14.51815128326416
    5. '
' → logprob: -15.64315128326416
    6. 'que' → logprob: -15.64315128326416
    7. '   ' → logprob: -15.89315128326416
    8. '.queue' → logprob: -17.768152236938477
    9. '       ' → logprob: -17.768152236938477
    10. 'deque' → logprob: -19.393152236938477

Token 1580: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5395850539207458
    2. ' =' → logprob: -1.1645851135253906
    3. '           ' → logprob: -3.2895851135253906
    4. ')' → logprob: -3.7895851135253906
    5. '               ' → logprob: -4.289585113525391
    6. '[' → logprob: -4.539585113525391
    7. '            ' → logprob: -5.289585113525391
    8. ',' → logprob: -5.539585113525391
    9. '==' → logprob: -6.539585113525391
    10. ' +=' → logprob: -6.664585113525391

Token 1581: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -7.946405094116926e-05
    2. 'op' → logprob: -9.500079154968262
    3. 'ople' → logprob: -13.250079154968262
    4. 'opl' → logprob: -13.625079154968262
    5. '```' → logprob: -14.250079154968262
    6. 'append' → logprob: -14.500079154968262
    7. '.append' → logprob: -15.375079154968262
    8. 'ut' → logprob: -16.750080108642578
    9. 'p' → logprob: -17.125080108642578
    10. 'ope' → logprob: -17.875080108642578

Token 1582: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02532106824219227
    2. ')' → logprob: -4.650321006774902
    3. '       ' → logprob: -5.525321006774902
    4. '               ' → logprob: -5.775321006774902
    5. ',' → logprob: -6.150321006774902
    6. '            
' → logprob: -6.900321006774902
    7. '
' → logprob: -7.025321006774902
    8. '<|end|>' → logprob: -7.150321006774902
    9. ':
' → logprob: -7.275321006774902
    10. ':' → logprob: -7.525321006774902

Token 1583: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012144156731665134
    2. '               ' → logprob: -4.637144088745117
    3. '```' → logprob: -7.637144088745117
    4. '
' → logprob: -7.762144088745117
    5. '            
' → logprob: -8.012144088745117
    6. '       ' → logprob: -8.512144088745117
    7. '   ' → logprob: -8.512144088745117
    8. '	       ' → logprob: -8.762144088745117
    9. ' 
' → logprob: -9.012144088745117
    10. '		' → logprob: -9.012144088745117

Token 1584: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6942737698554993
    2. 'for' → logprob: -0.6942737698554993
    3. 'next' → logprob: -7.444273948669434
    4. '           ' → logprob: -8.194273948669434
    5. '```' → logprob: -8.819273948669434
    6. 'matches' → logprob: -9.569273948669434
    7. '#' (adapté à ' #') → logprob: -10.944273948669434
    8. ' for' → logprob: -11.569273948669434
    9. ' if' → logprob: -11.944273948669434
    10. '            
' → logprob: -12.819273948669434

Token 1585: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5809082984924316
    2. 'for' → logprob: -0.8309082984924316
    3. 'next' → logprob: -5.830908298492432
    4. 'matches' → logprob: -6.330908298492432
    5. '#' → logprob: -9.330907821655273
    6. 'match' → logprob: -10.080907821655273
    7. 'end' → logprob: -10.205907821655273
    8. '   ' → logprob: -10.830907821655273
    9. '```' → logprob: -10.830907821655273
    10. '       ' → logprob: -11.830907821655273

Token 1586: ' all' (ID: 722)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0028210394084453583
    2. 'pos' → logprob: -5.87782096862793
    3. ' mask' → logprob: -11.37782096862793
    4. '(mask' → logprob: -13.00282096862793
    5. '
' → logprob: -13.25282096862793
    6. '   ' → logprob: -14.75282096862793
    7. '	mask' → logprob: -16.00282096862793
    8. ' pos' → logprob: -16.87782096862793
    9. 'masked' → logprob: -16.87782096862793
    10. 'position' → logprob: -17.37782096862793

Token 1587: ' elements' (ID: 8632)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.9697521328926086
    2. ' ==' → logprob: -1.4697520732879639
    3. 'elements' → logprob: -2.219752073287964
    4. 'matched' → logprob: -2.469752073287964
    5. '==' → logprob: -2.844752073287964
    6. 'bits' → logprob: -3.469752073287964
    7. ' elements' → logprob: -3.594752073287964
    8. '_mask' → logprob: -3.969752073287964
    9. ' mask' → logprob: -4.594752311706543
    10. '(mask' → logprob: -4.844752311706543

Token 1588: ' matched' (ID: 31366)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6185109615325928
    2. ' ==' → logprob: -1.6185109615325928
    3. '_mat' → logprob: -1.8685109615325928
    4. '_' → logprob: -3.3685109615325928
    5. 'matched' → logprob: -3.6185109615325928
    6. '_used' → logprob: -3.6185109615325928
    7. ' are' → logprob: -5.868511199951172
    8. '_mask' → logprob: -5.868511199951172
    9. 'used' → logprob: -6.243511199951172
    10. ' matched' → logprob: -6.493511199951172

Token 1589: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.48674607276916504
    2. 'and' → logprob: -0.986746072769165
    3. '           ' → logprob: -4.611745834350586
    4. '               ' → logprob: -5.986745834350586
    5. ':' → logprob: -9.736745834350586
    6. ':
' → logprob: -9.986745834350586
    7. '==' → logprob: -10.736745834350586
    8. ' ==' → logprob: -11.986745834350586
    9. '                   ' → logprob: -13.236745834350586
    10. '```' → logprob: -13.361745834350586

Token 1590: ' record' (ID: 3704)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3880997896194458
    2. ' if' → logprob: -1.1380997896194458
    3. '               ' → logprob: -7.138099670410156
    4. '           ' → logprob: -8.013099670410156
    5. 'result' → logprob: -9.638099670410156
    6. ' result' → logprob: -10.888099670410156
    7. '```' → logprob: -11.763099670410156
    8. '   ' → logprob: -12.013099670410156
    9. '                   ' → logprob: -13.888099670410156
    10. ' for' → logprob: -14.138099670410156

Token 1591: ' the' (ID: 290)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.002992916852235794
    2. ' pos' → logprob: -6.002993106842041
    3. '(pos' → logprob: -8.002992630004883
    4. 'result' → logprob: -8.752992630004883
    5. 'positions' → logprob: -11.252992630004883
    6. 'if' → logprob: -12.002992630004883
    7. ' (' → logprob: -14.002992630004883
    8. 'position' → logprob: -14.252992630004883
    9. '(
' → logprob: -14.377992630004883
    10. '(' → logprob: -14.502992630004883

Token 1592: ' match' (ID: 3981)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.027464261278510094
    2. 'result' → logprob: -3.7774641513824463
    3. 'position' → logprob: -6.277464389801025
    4. 'if' → logprob: -7.402464389801025
    5. 'end' → logprob: -7.527464389801025
    6. 'start' → logprob: -7.527464389801025
    7. ' pos' → logprob: -8.402463912963867
    8. 'positions' → logprob: -8.402463912963867
    9. 'match' → logprob: -10.152463912963867
    10. '(pos' → logprob: -10.402463912963867

Token 1593: ' starting' (ID: 8601)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016778295685071498
    2. ' and' → logprob: -9.250167846679688
    3. '               ' → logprob: -11.000167846679688
    4. ' if' → logprob: -11.000167846679688
    5. 'if' → logprob: -11.500167846679688
    6. ',' → logprob: -11.750167846679688
    7. 'and' → logprob: -11.875167846679688
    8. ':' → logprob: -12.250167846679688
    9. '       ' → logprob: -12.875167846679688
    10. '   ' → logprob: -13.500167846679688

Token 1594: ' position' (ID: 4010)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.1943494826555252
    2. 'position' → logprob: -1.9443495273590088
    3. 'pos' → logprob: -3.694349527359009
    4. '_positions' → logprob: -5.19434928894043
    5. ' positions' → logprob: -6.69434928894043
    6. '_pos' → logprob: -7.19434928894043
    7. '_position' → logprob: -7.19434928894043
    8. 'if' → logprob: -8.31934928894043
    9. ' position' → logprob: -9.06934928894043
    10. '           ' → logprob: -11.44434928894043

Token 1595: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044056313345208764
    2. '               ' → logprob: -8.12544059753418
    3. '```' → logprob: -9.62544059753418
    4. '       ' → logprob: -10.87544059753418
    5. ',' → logprob: -11.37544059753418
    6. ' and' → logprob: -11.50044059753418
    7. ' if' → logprob: -12.12544059753418
    8. '          ' → logprob: -12.12544059753418
    9. '                   ' → logprob: -12.37544059753418
    10. '``' → logprob: -12.50044059753418

Token 1596: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0434819832444191
    2. '               ' → logprob: -3.1684820652008057
    3. '```' → logprob: -8.168481826782227
    4. '                   ' → logprob: -9.668481826782227
    5. '                       ' → logprob: -10.293481826782227
    6. ' if' → logprob: -10.793481826782227
    7. '``' → logprob: -11.043481826782227
    8. '                           ' → logprob: -11.543481826782227
    9. '       ' → logprob: -12.043481826782227
    10. '   ' → logprob: -12.043481826782227

Token 1597: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007470945129171014
    2. 'if' (adapté à ' if') → logprob: -7.500747203826904
    3. '               ' → logprob: -9.000746726989746
    4. ' if' → logprob: -9.625746726989746
    5. '       ' → logprob: -13.125746726989746
    6. '                   ' → logprob: -13.875746726989746
    7. '   ' → logprob: -14.000746726989746
    8. '```' → logprob: -14.375746726989746
    9. '          ' → logprob: -15.875746726989746
    10. '                       ' → logprob: -16.000747680664062

Token 1598: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.10022231191396713
    2. ' mask' → logprob: -2.35022234916687
    3. '(mask' → logprob: -11.35022258758545
    4. '	mask' → logprob: -13.60022258758545
    5. '
' → logprob: -14.60022258758545
    6. '_mask' → logprob: -14.72522258758545
    7. 'pos' → logprob: -14.72522258758545
    8. '   ' → logprob: -14.72522258758545
    9. 'm' → logprob: -15.35022258758545
    10. '```' → logprob: -15.72522258758545

Token 1599: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10022015124559402
    2. ' ==' → logprob: -2.350220203399658
    3. '==
' → logprob: -11.8502197265625
    4. ')==' → logprob: -12.9752197265625
    5. '==(' → logprob: -13.4752197265625
    6. '=' → logprob: -13.7252197265625
    7. '```' → logprob: -14.7252197265625
    8. ')' → logprob: -14.8502197265625
    9. ']==' → logprob: -15.2252197265625
    10. '===' → logprob: -15.6002197265625

Token 1600: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.014166445471346378
    2. ' full' → logprob: -4.264166355133057
    3. '(full' → logprob: -13.389166831970215
    4. '	full' → logprob: -14.014166831970215
    5. 'Full' → logprob: -15.764166831970215
    6. 'ful' → logprob: -15.764166831970215
    7. '_full' → logprob: -16.5141658782959
    8. '   ' → logprob: -16.6391658782959
    9. '
' → logprob: -17.0141658782959
    10. '.full' → logprob: -17.2641658782959

Token 1601: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -5.3358446166384965e-05
    2. '_' → logprob: -10.125053405761719
    3. '_MASK' → logprob: -11.500053405761719
    4. ' _' → logprob: -13.625053405761719
    5. '
' → logprob: -14.375053405761719
    6. '_
' → logprob: -14.500053405761719
    7. '_masks' → logprob: -14.750053405761719
    8. '\' → logprob: -16.37505340576172
    9. ''_' → logprob: -16.50005340576172
    10. ')_' → logprob: -17.00005340576172

Token 1602: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5704712271690369
    2. ':' → logprob: -1.4454712867736816
    3. ':
' → logprob: -1.8204712867736816
    4. '           ' → logprob: -4.070471286773682
    5. 'and' → logprob: -4.570471286773682
    6. '               ' → logprob: -4.695471286773682
    7. ')' → logprob: -8.695470809936523
    8. '):
' → logprob: -9.195470809936523
    9. '                       ' → logprob: -9.695470809936523
    10. '                   ' → logprob: -9.945470809936523

Token 1603: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004610551695805043
    2. '           ' → logprob: -8.875460624694824
    3. '                   ' → logprob: -8.875460624694824
    4. ':
' → logprob: -9.750460624694824
    5. '```' → logprob: -10.375460624694824
    6. '                       ' → logprob: -10.625460624694824
    7. '                
' → logprob: -11.500460624694824
    8. ' and' → logprob: -11.625460624694824
    9. '                               ' → logprob: -11.875460624694824
    10. '
' → logprob: -12.250460624694824

Token 1604: ' #' (ID: 1069)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.27277782559394836
    2. 'result' → logprob: -1.647777795791626
    3. ' start' → logprob: -3.397777795791626
    4. 'start' → logprob: -4.647778034210205
    5. '               ' → logprob: -6.022778034210205
    6. '   ' → logprob: -8.522777557373047
    7. '                   ' → logprob: -9.022777557373047
    8. '
' → logprob: -9.522777557373047
    9. ' offset' → logprob: -9.522777557373047
    10. '           ' → logprob: -9.647777557373047

Token 1605: ' concaten' (ID: 121942)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.38867655396461487
    2. 'result' → logprob: -1.1386765241622925
    3. ' start' → logprob: -6.763676643371582
    4. '               ' → logprob: -8.763676643371582
    5. ' result' → logprob: -8.763676643371582
    6. 'match' → logprob: -9.263676643371582
    7. '           ' → logprob: -9.388676643371582
    8. 'res' → logprob: -9.638676643371582
    9. '   ' → logprob: -10.763676643371582
    10. 'offset' → logprob: -11.013676643371582

Token 1606: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0007286362233571708
    2. 'a' → logprob: -8.250728607177734
    3. '_' → logprob: -8.750728607177734
    4. 'ated' → logprob: -9.125728607177734
    5. '   ' → logprob: -10.000728607177734
    6. 'ate' → logprob: -10.250728607177734
    7. 'at' → logprob: -10.875728607177734
    8. '_at' → logprob: -11.000728607177734
    9. ' at' → logprob: -11.125728607177734
    10. '_pos' → logprob: -11.125728607177734

Token 1607: ' ends' (ID: 17095)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.36472901701927185
    2. '_length' → logprob: -1.2397290468215942
    3. '_len' → logprob: -4.739728927612305
    4. '_pos' → logprob: -5.239728927612305
    5. '_end' → logprob: -6.989728927612305
    6. '_' → logprob: -8.114728927612305
    7. '_positions' → logprob: -8.114728927612305
    8. ' =' → logprob: -8.739728927612305
    9. 'start' → logprob: -8.864728927612305
    10. 'length' → logprob: -9.614728927612305

Token 1608: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.3251267671585083
    2. 'at' → logprob: -1.4501267671585083
    3. '               ' → logprob: -4.075126647949219
    4. ' =' → logprob: -4.325126647949219
    5. '=' → logprob: -4.950126647949219
    6. '                   ' → logprob: -6.200126647949219
    7. '           ' → logprob: -6.575126647949219
    8. ',' → logprob: -6.950126647949219
    9. 'pos' → logprob: -7.450126647949219
    10. '_at' → logprob: -8.075126647949219

Token 1609: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0040785204619169235
    2. ' pos' → logprob: -5.504078388214111
    3. '(pos' → logprob: -16.754077911376953
    4. '	pos' → logprob: -17.754077911376953
    5. '[pos' → logprob: -18.004077911376953
    6. '   ' → logprob: -18.629077911376953
    7. '_pos' → logprob: -19.129077911376953
    8. '```' → logprob: -19.504077911376953
    9. 'position' → logprob: -19.879077911376953
    10. ',pos' → logprob: -20.004077911376953

Token 1610: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.37433257699012756
    2. '-' → logprob: -1.7493325471878052
    3. '               ' → logprob: -2.2493326663970947
    4. ' and' → logprob: -4.124332427978516
    5. '                   ' → logprob: -4.749332427978516
    6. ':
' → logprob: -5.874332427978516
    7. ':' → logprob: -5.874332427978516
    8. ',' → logprob: -7.124332427978516
    9. '                       ' → logprob: -8.124332427978516
    10. '           ' → logprob: -8.624332427978516

Token 1611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.875001907348633
    5. '`' → logprob: -17.125001907348633
    6. ')' → logprob: -17.500001907348633
    7. '
' → logprob: -17.875001907348633
    8. '-' → logprob: -18.250001907348633
    9. '``' → logprob: -18.375001907348633
    10. '0' → logprob: -18.875001907348633

Token 1612: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01011219248175621
    2. ' and' → logprob: -5.385112285614014
    3. ':
' → logprob: -6.010112285614014
    4. '                   ' → logprob: -6.510112285614014
    5. ',' → logprob: -7.760112285614014
    6. ':' → logprob: -7.885112285614014
    7. '
' → logprob: -8.135111808776855
    8. '```' → logprob: -9.135111808776855
    9. 'and' → logprob: -9.260111808776855
    10. '                ' → logprob: -9.635111808776855

Token 1613: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4367446005344391
    2. ')
' → logprob: -1.4367445707321167
    3. '),' → logprob: -2.9367446899414062
    4. ' )' → logprob: -4.561744689941406
    5. ' )
' → logprob: -4.561744689941406
    6. ',' → logprob: -4.811744689941406
    7. 'pos' → logprob: -4.811744689941406
    8. '):
' → logprob: -5.061744689941406
    9. ')\' → logprob: -6.311744689941406
    10. '
' → logprob: -6.311744689941406

Token 1614: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16299742460250854
    2. ' and' → logprob: -3.0379974842071533
    3. '):
' → logprob: -3.4129974842071533
    4. '
' → logprob: -4.037997245788574
    5. '):' → logprob: -4.787997245788574
    6. '```' → logprob: -4.912997245788574
    7. '<|end|>' → logprob: -5.162997245788574
    8. ' if' → logprob: -5.162997245788574
    9. 'and' → logprob: -5.287997245788574
    10. ')
' → logprob: -5.287997245788574

Token 1615: ' index' (ID: 3472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.907809317111969
    2. '):
' → logprob: -1.4078092575073242
    3. '               ' → logprob: -1.7828092575073242
    4. ' and' → logprob: -2.407809257507324
    5. ':
' → logprob: -3.407809257507324
    6. ',' → logprob: -3.657809257507324
    7. ')
' → logprob: -4.907809257507324
    8. '                   ' → logprob: -5.032809257507324
    9. '):' → logprob: -5.157809257507324
    10. 'and' → logprob: -5.407809257507324

Token 1616: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46506011486053467
    2. ' and' → logprob: -1.9650601148605347
    3. '):
' → logprob: -2.715060234069824
    4. ')' → logprob: -2.840060234069824
    5. ':
' → logprob: -3.090060234069824
    6. '                   ' → logprob: -3.840060234069824
    7. ',' → logprob: -3.965060234069824
    8. '
' → logprob: -5.090060234069824
    9. 'and' → logprob: -5.090060234069824
    10. ',
' → logprob: -5.715060234069824

Token 1617: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006956195924431086
    2. '                   ' → logprob: -5.131956100463867
    3. ' and' → logprob: -7.506956100463867
    4. ':
' → logprob: -8.756956100463867
    5. '           ' → logprob: -9.631956100463867
    6. '                ' → logprob: -9.881956100463867
    7. '
' → logprob: -9.881956100463867
    8. '```' → logprob: -9.881956100463867
    9. ',' → logprob: -10.756956100463867
    10. '                       ' → logprob: -11.256956100463867

Token 1618: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.4421192407608032
    2. ' start' → logprob: -1.8171192407608032
    3. '               ' → logprob: -2.4421191215515137
    4. 'result' → logprob: -2.9421191215515137
    5. ' if' → logprob: -4.192119121551514
    6. ' result' → logprob: -4.567119121551514
    7. 'if' → logprob: -4.567119121551514
    8. 'pos' → logprob: -5.192119121551514
    9. '                   ' → logprob: -5.567119121551514
    10. '```' → logprob: -5.817119121551514

Token 1619: '_pos' (ID: 14692)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6795152425765991
    2. '_pos' → logprob: -0.8045152425765991
    3. ' =' → logprob: -3.4295153617858887
    4. '=' → logprob: -4.679515361785889
    5. '_position' → logprob: -6.304515361785889
    6. '_positions' → logprob: -6.804515361785889
    7. '_=' → logprob: -7.929515361785889
    8. ' _' → logprob: -8.17951488494873
    9. '=_' → logprob: -8.17951488494873
    10. 'pos' → logprob: -9.05451488494873

Token 1620: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.160251647233963
    2. ' =' → logprob: -1.9102516174316406
    3. ')' → logprob: -12.03525161743164
    4. '```' → logprob: -12.28525161743164
    5. '+' → logprob: -12.53525161743164
    6. '=
' → logprob: -13.16025161743164
    7. ',' → logprob: -13.28525161743164
    8. ' ' → logprob: -13.41025161743164
    9. '-' → logprob: -13.53525161743164
    10. ' -' → logprob: -14.16025161743164

Token 1621: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0040793512016534805
    2. ' pos' → logprob: -5.504079341888428
    3. '(pos' → logprob: -14.004079818725586
    4. '           ' → logprob: -16.254079818725586
    5. '               ' → logprob: -17.129079818725586
    6. '                   ' → logprob: -18.129079818725586
    7. '[pos' → logprob: -18.629079818725586
    8. '   ' → logprob: -19.254079818725586
    9. '_pos' → logprob: -19.879079818725586
    10. '	pos' → logprob: -20.379079818725586

Token 1622: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38693565130233765
    2. '-' → logprob: -1.1369357109069824
    3. '                   ' → logprob: -11.261935234069824
    4. '                ' → logprob: -11.261935234069824
    5. '               ' → logprob: -12.011935234069824
    6. '                    ' → logprob: -12.136935234069824
    7. '-l' → logprob: -12.136935234069824
    8. '-total' → logprob: -13.011935234069824
    9. '        ' → logprob: -13.261935234069824
    10. '           ' → logprob: -13.261935234069824

Token 1623: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -6.869017852295656e-06
    2. ' total' → logprob: -12.000006675720215
    3. '(total' → logprob: -14.250006675720215
    4. '$total' → logprob: -17.50000762939453
    5. '`' → logprob: -20.00000762939453
    6. '	total' → logprob: -20.25000762939453
    7. '   ' → logprob: -20.50000762939453
    8. '.total' → logprob: -20.75000762939453
    9. '```' → logprob: -20.87500762939453
    10. 'length' → logprob: -21.25000762939453

Token 1624: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -8.180258191714529e-06
    2. '_len' → logprob: -12.750008583068848
    3. '_' → logprob: -13.000008583068848
    4. '_l' → logprob: -13.625008583068848
    5. 'length' → logprob: -14.250008583068848
    6. ' _' → logprob: -15.000008583068848
    7. '_le' → logprob: -15.500008583068848
    8. '   ' → logprob: -16.50000762939453
    9. '_
' → logprob: -16.50000762939453
    10. '_total' → logprob: -16.62500762939453

Token 1625: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8308537006378174
    2. '+' → logprob: -1.3308537006378174
    3. ' +' → logprob: -1.9558537006378174
    4. '<|end|>' → logprob: -2.9558537006378174
    5. '               ' → logprob: -3.5808537006378174
    6. '           ' → logprob: -3.7058537006378174
    7. '
' → logprob: -4.580853462219238
    8. 'if' → logprob: -4.830853462219238
    9. ' if' → logprob: -4.830853462219238
    10. '```' → logprob: -5.455853462219238

Token 1626: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21135959029197693
    2. '
' → logprob: -2.0863595008850098
    3. '           ' → logprob: -3.8363595008850098
    4. ' if' → logprob: -4.21135950088501
    5. 'if' → logprob: -4.83635950088501
    6. '```' → logprob: -4.83635950088501
    7. ')' → logprob: -5.21135950088501
    8. '<|end|>' → logprob: -6.21135950088501
    9. '                   ' → logprob: -6.46135950088501
    10. '                       ' → logprob: -6.96135950088501

Token 1627: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03174365311861038
    2. '               ' → logprob: -3.7817437648773193
    3. ' if' → logprob: -4.78174352645874
    4. '           ' → logprob: -9.781744003295898
    5. '```' → logprob: -10.656744003295898
    6. '
' → logprob: -15.406744003295898
    7. 'result' → logprob: -15.531744003295898
    8. '``' → logprob: -15.781744003295898
    9. '                   ' → logprob: -16.1567440032959
    10. '`' → logprob: -17.2817440032959

Token 1628: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00865002628415823
    2. 'start' → logprob: -4.758649826049805
    3. '               ' → logprob: -10.883649826049805
    4. '                   ' → logprob: -12.258649826049805
    5. ' start' → logprob: -12.383649826049805
    6. '           ' → logprob: -13.133649826049805
    7. ' ' → logprob: -13.633649826049805
    8. '(start' → logprob: -13.883649826049805
    9. '```' → logprob: -14.383649826049805
    10. '                       ' → logprob: -14.383649826049805

Token 1629: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0004848922253586352
    2. 'pos' → logprob: -8.000484466552734
    3. '_positions' → logprob: -10.250484466552734
    4. '>' → logprob: -10.500484466552734
    5. '```' → logprob: -11.125484466552734
    6. '<' → logprob: -11.375484466552734
    7. 'in' → logprob: -11.875484466552734
    8. '!=' → logprob: -11.875484466552734
    9. 'not' → logprob: -12.125484466552734
    10. ' _' → logprob: -12.250484466552734

Token 1630: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.016334639862179756
    2. ' >=' → logprob: -4.516334533691406
    3. '>' → logprob: -5.266334533691406
    4. ')>=' → logprob: -10.266334533691406
    5. '==' → logprob: -11.016334533691406
    6. ' >' → logprob: -11.141334533691406
    7. '[' → logprob: -11.266334533691406
    8. ')' → logprob: -11.391334533691406
    9. '```' → logprob: -12.141334533691406
    10. ']>=' → logprob: -12.266334533691406

Token 1631: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -20.25
    5. '۰' → logprob: -20.5
    6. '
' → logprob: -21.375
    7. '00' → logprob: -21.625
    8. ' ' → logprob: -23.125
    9. '０' → logprob: -23.375
    10. '``' → logprob: -23.75

Token 1632: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -18.125
    4. '۰' → logprob: -18.75
    5. '00' → logprob: -19.375
    6. '   ' → logprob: -20.25
    7. '０' → logprob: -20.625
    8. '
' → logprob: -20.875
    9. '000' → logprob: -21.125
    10. '=' → logprob: -21.375

Token 1633: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.411277711391449
    2. '                   ' → logprob: -1.1612777709960938
    3. ':' → logprob: -3.9112777709960938
    4. ' and' → logprob: -6.661277770996094
    5. '                       ' → logprob: -6.786277770996094
    6. '               ' → logprob: -7.286277770996094
    7. '):
' → logprob: -7.661277770996094
    8. '                           ' → logprob: -8.036277770996094
    9. 'and' → logprob: -10.036277770996094
    10. ')' → logprob: -10.411277770996094

Token 1634: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008519167313352227
    2. 'result' → logprob: -7.250852108001709
    3. '                       ' → logprob: -9.37585163116455
    4. '               ' → logprob: -10.25085163116455
    5. '```' → logprob: -11.75085163116455
    6. '                           ' → logprob: -12.37585163116455
    7. '                  ' → logprob: -12.62585163116455
    8. '
' → logprob: -12.62585163116455
    9. '           ' → logprob: -13.62585163116455
    10. '``' → logprob: -14.25085163116455

Token 1635: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -4.537180211627856e-05
    2. '                   ' → logprob: -10.750045776367188
    3. ' result' → logprob: -11.000045776367188
    4. '                       ' → logprob: -12.000045776367188
    5. '   ' → logprob: -15.000045776367188
    6. '```' → logprob: -15.125045776367188
    7. '               ' → logprob: -15.375045776367188
    8. '``' → logprob: -15.750045776367188
    9. '       ' → logprob: -18.000045776367188
    10. '           ' → logprob: -18.250045776367188

Token 1636: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -3.128163257315464e-07
    2. 'positions' → logprob: -16.25
    3. '_' → logprob: -17.125
    4. '
' → logprob: -17.25
    5. 'Positions' → logprob: -17.25
    6. '\' → logprob: -17.625
    7. ' _' → logprob: -18.0
    8. '.' → logprob: -18.0
    9. '._' → logprob: -18.625
    10. '```' → logprob: -18.625

Token 1637: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.572941179503687e-05
    2. '.' → logprob: -10.000045776367188
    3. '.update' → logprob: -16.125045776367188
    4. '.Add' → logprob: -16.625045776367188
    5. '.setdefault' → logprob: -17.625045776367188
    6. '.append' → logprob: -18.000045776367188
    7. ' .' → logprob: -18.125045776367188
    8. ').' → logprob: -18.750045776367188
    9. '.ADD' → logprob: -18.875045776367188
    10. '                       ' → logprob: -19.000045776367188

Token 1638: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.002534521510824561
    2. '(start' → logprob: -6.00253438949585
    3. ' start' → logprob: -9.752534866333008
    4. '(' → logprob: -14.627534866333008
    5. '(
' → logprob: -15.752534866333008
    6. '[start' → logprob: -17.502534866333008
    7. ' (' → logprob: -17.502534866333008
    8. '	start' → logprob: -18.002534866333008
    9. ',start' → logprob: -18.752534866333008
    10. '_start' → logprob: -19.127534866333008

Token 1639: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.005935193970799446
    2. 'pos' → logprob: -5.130935192108154
    3. 'start' → logprob: -13.130935668945312
    4. '(pos' → logprob: -13.380935668945312
    5. '(' → logprob: -14.380935668945312
    6. 'Pos' → logprob: -14.630935668945312
    7. ' pos' → logprob: -14.755935668945312
    8. ')' → logprob: -15.380935668945312
    9. '_start' → logprob: -15.380935668945312
    10. '(_' → logprob: -15.505935668945312

Token 1640: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.913265239447355e-05
    2. '               ' → logprob: -9.875099182128906
    3. ')
' → logprob: -10.750099182128906
    4. '                   ' → logprob: -11.125099182128906
    5. '           ' → logprob: -11.500099182128906
    6. '       ' → logprob: -14.375099182128906
    7. '))' → logprob: -15.250099182128906
    8. '                       ' → logprob: -15.750099182128906
    9. ' )' → logprob: -16.625099182128906
    10. ')`' → logprob: -16.875099182128906

Token 1641: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005059060174971819
    2. '       ' → logprob: -5.755059242248535
    3. '               ' → logprob: -7.630059242248535
    4. '```' → logprob: -7.755059242248535
    5. '                   ' → logprob: -8.130059242248535
    6. '
' → logprob: -8.255059242248535
    7. '   ' → logprob: -8.880059242248535
    8. 'for' → logprob: -9.255059242248535
    9. ' for' → logprob: -9.380059242248535
    10. '		' → logprob: -10.255059242248535

Token 1642: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006058320868760347
    2. '
' → logprob: -5.381058216094971
    3. 'for' → logprob: -7.506058216094971
    4. '       ' → logprob: -8.006058692932129
    5. '               ' → logprob: -8.506058692932129
    6. ' for' → logprob: -9.381058692932129
    7. 'continue' → logprob: -9.381058692932129
    8. '                   ' → logprob: -9.506058692932129
    9. '   ' → logprob: -10.131058692932129
    10. '		' → logprob: -11.006058692932129

Token 1643: ' No' (ID: 3004)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4911801517009735
    2. '           ' → logprob: -1.491180181503296
    3. '               ' → logprob: -1.866180181503296
    4. ' continue' → logprob: -5.116179943084717
    5. 'for' → logprob: -6.866179943084717
    6. '#' → logprob: -7.616179943084717
    7. '
' → logprob: -8.241180419921875
    8. '   ' → logprob: -8.491180419921875
    9. '```' → logprob: -9.616180419921875
    10. 'Continue' → logprob: -9.741180419921875

Token 1644: ' need' (ID: 1309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5838367342948914
    2. '           ' → logprob: -1.5838367938995361
    3. '               ' → logprob: -2.583836793899536
    4. 'continue' → logprob: -2.708836793899536
    5. 't' → logprob: -2.958836793899536
    6. '       ' → logprob: -3.583836793899536
    7. '                   ' → logprob: -4.708836555480957
    8. '   ' → logprob: -6.708836555480957
    9. '                       ' → logprob: -7.458836555480957
    10. 'n' → logprob: -7.833836555480957

Token 1645: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.08369801938533783
    2. ' to' → logprob: -2.833698034286499
    3. 'continue' → logprob: -4.83369779586792
    4. '               ' → logprob: -4.95869779586792
    5. '           ' → logprob: -5.20869779586792
    6. '                   ' → logprob: -7.95869779586792
    7. ' continue' → logprob: -8.458698272705078
    8. '       ' → logprob: -8.708698272705078
    9. 'for' → logprob: -8.833698272705078
    10. '_to' → logprob: -9.583698272705078

Token 1646: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -8.65707261255011e-06
    2. ' continue' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.500008583068848
    4. '
' → logprob: -16.250009536743164
    5. '       ' → logprob: -16.625009536743164
    6. 'contin' → logprob: -17.625009536743164
    7. '           ' → logprob: -17.875009536743164
    8. 'continu' → logprob: -17.875009536743164
    9. '```' → logprob: -18.125009536743164
    10. '_continue' → logprob: -19.000009536743164

Token 1647: ' from' (ID: 591)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5573688745498657
    2. '               ' → logprob: -1.0573688745498657
    3. ' continue' → logprob: -3.057368755340576
    4. '           ' → logprob: -3.432368755340576
    5. '                   ' → logprob: -7.932368755340576
    6. '
' → logprob: -9.307369232177734
    7. '```' → logprob: -9.807369232177734
    8. '_continue' → logprob: -10.307369232177734
    9. '	continue' → logprob: -11.307369232177734
    10. '   ' → logprob: -11.682369232177734

Token 1648: ' here' (ID: 2105)
  Prédit: 'here'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'here' → logprob: -0.03398866951465607
    2. 'this' → logprob: -3.9089887142181396
    3. ' here' → logprob: -5.0339884757995605
    4. 'continue' → logprob: -5.1589884757995605
    5. 'pos' → logprob: -7.6589884757995605
    6. 'that' → logprob: -8.533988952636719
    7. 'positions' → logprob: -8.533988952636719
    8. '```' → logprob: -8.908988952636719
    9. ' this' → logprob: -10.408988952636719
    10. 'continu' → logprob: -10.658988952636719

Token 1649: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10480456054210663
    2. '           ' → logprob: -2.479804515838623
    3. ' continue' → logprob: -4.729804515838623
    4. 'continue' → logprob: -5.104804515838623
    5. '
' → logprob: -7.354804515838623
    6. '                   ' → logprob: -8.729804992675781
    7. '```' → logprob: -11.354804992675781
    8. '_continue' → logprob: -12.604804992675781
    9. ',' → logprob: -12.729804992675781
    10. '       ' → logprob: -12.854804992675781

Token 1650: ' but' (ID: 889)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.0380122661590576
    2. '               ' → logprob: -1.1630122661590576
    3. ' continue' → logprob: -1.4130122661590576
    4. '           ' → logprob: -2.4130122661590576
    5. '                   ' → logprob: -8.788012504577637
    6. '   ' → logprob: -9.663012504577637
    7. '	continue' → logprob: -10.413012504577637
    8. '       ' → logprob: -11.038012504577637
    9. '
' → logprob: -11.163012504577637
    10. '```' → logprob: -11.163012504577637

Token 1651: ' can' (ID: 665)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6336975693702698
    2. ' continue' → logprob: -1.008697509765625
    3. '               ' → logprob: -2.383697509765625
    4. '           ' → logprob: -4.508697509765625
    5. '                   ' → logprob: -7.008697509765625
    6. '   ' → logprob: -8.508697509765625
    7. '
' → logprob: -9.633697509765625
    8. '#' → logprob: -10.133697509765625
    9. '       ' → logprob: -10.133697509765625
    10. '	continue' → logprob: -10.508697509765625

Token 1652: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.31322911381721497
    2. ' continue' → logprob: -1.9382290840148926
    3. '               ' → logprob: -2.3132290840148926
    4. '           ' → logprob: -4.438229084014893
    5. '                   ' → logprob: -4.563229084014893
    6. '
' → logprob: -7.063229084014893
    7. '              ' → logprob: -7.563229084014893
    8. '                       ' → logprob: -7.688229084014893
    9. '_continue' → logprob: -7.813229084014893
    10. '       ' → logprob: -8.43822956085205

Token 1653: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0343710333108902
    2. '               ' → logprob: -3.9093711376190186
    3. '
' → logprob: -6.2843708992004395
    4. '   ' → logprob: -6.2843708992004395
    5. ' for' → logprob: -6.2843708992004395
    6. '            
' → logprob: -6.6593708992004395
    7. ' continue' → logprob: -7.0343708992004395
    8. '       ' → logprob: -7.0343708992004395
    9. ' with' → logprob: -7.4093708992004395
    10. ' if' → logprob: -7.5343708992004395

Token 1654: ' overlapping' (ID: 90457)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.5997054576873779
    2. 'com' → logprob: -1.974705457687378
    3. 'matches' → logprob: -2.349705457687378
    4. 'matching' → logprob: -2.349705457687378
    5. ' completeness' → logprob: -3.474705457687378
    6. 'more' → logprob: -3.724705457687378
    7. 'potential' → logprob: -4.599705696105957
    8. 'pos' → logprob: -4.724705696105957
    9. 'f' → logprob: -5.099705696105957
    10. ' possible' → logprob: -5.224705696105957

Token 1655: ' occurrences' (ID: 108073)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1923980414867401
    2. '
' → logprob: -2.0673980712890625
    3. '            
' → logprob: -3.1923980712890625
    4. ' 
' → logprob: -6.4423980712890625
    5. '               ' → logprob: -6.8173980712890625
    6. '  
' → logprob: -6.9423980712890625
    7. '    
' → logprob: -7.0673980712890625
    8. '        
' → logprob: -7.4423980712890625
    9. '       ' → logprob: -7.5673980712890625
    10. '                
' → logprob: -7.8173980712890625

Token 1656: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6416165828704834
    2. '           ' → logprob: -0.7666165828704834
    3. '       ' → logprob: -6.0166168212890625
    4. ' 
' → logprob: -6.2666168212890625
    5. '            
' → logprob: -6.8916168212890625
    6. '  
' → logprob: -7.0166168212890625
    7. '    
' → logprob: -7.2666168212890625
    8. '        
' → logprob: -7.3916168212890625
    9. '\n' → logprob: -7.8916168212890625
    10. '
' → logprob: -8.016616821289062

Token 1657: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5191670656204224
    2. '           ' → logprob: -1.2691670656204224
    3. '       ' → logprob: -2.894166946411133
    4. '   ' → logprob: -3.769166946411133
    5. '    
' → logprob: -4.144166946411133
    6. '  
' → logprob: -4.144166946411133
    7. '        
' → logprob: -5.394166946411133
    8. ' 
' → logprob: -5.769166946411133
    9. '```' → logprob: -5.769166946411133
    10. '            
' → logprob: -6.644166946411133

Token 1658: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18439707159996033
    2. 'for' → logprob: -1.9343971014022827
    3. '           ' → logprob: -3.809396982192993
    4. 'next' → logprob: -6.684397220611572
    5. ' if' → logprob: -8.934396743774414
    6. 'pos' → logprob: -9.434396743774414
    7. '```' → logprob: -9.684396743774414
    8. '   ' → logprob: -9.809396743774414
    9. '            
' → logprob: -10.184396743774414
    10. ' for' → logprob: -10.184396743774414

Token 1659: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10020904988050461
    2. ' pos' → logprob: -2.3502089977264404
    3. '	pos' → logprob: -13.97520923614502
    4. '_pos' → logprob: -14.35020923614502
    5. '(pos' → logprob: -14.85020923614502
    6. '   ' → logprob: -15.85020923614502
    7. 'mask' → logprob: -15.85020923614502
    8. 'p' → logprob: -16.100208282470703
    9. '    ' → logprob: -16.725208282470703
    10. ' ' → logprob: -16.975208282470703

Token 1660: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20386776328086853
    2. '<' → logprob: -1.703867793083191
    3. '<len' → logprob: -6.0788679122924805
    4. '<n' → logprob: -9.70386791229248
    5. '<size' → logprob: -10.45386791229248
    6. '           ' → logprob: -11.82886791229248
    7. '<int' → logprob: -11.82886791229248
    8. ' ==' → logprob: -11.95386791229248
    9. '   ' → logprob: -12.07886791229248
    10. ' !=' → logprob: -12.32886791229248

Token 1661: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.919942486798391e-05
    2. ' len' → logprob: -9.750059127807617
    3. '=len' → logprob: -14.500059127807617
    4. '	len' → logprob: -16.125059127807617
    5. '(len' → logprob: -16.500059127807617
    6. '<len' → logprob: -17.625059127807617
    7. 'length' → logprob: -17.625059127807617
    8. '   ' → logprob: -17.625059127807617
    9. '[len' → logprob: -17.750059127807617
    10. '           ' → logprob: -18.000059127807617

Token 1662: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -3.7385154428193346e-05
    2. 'text' → logprob: -10.37503719329834
    3. '(' → logprob: -12.12503719329834
    4. ' text' → logprob: -14.87503719329834
    5. ' (' → logprob: -15.25003719329834
    6. '{text' → logprob: -16.875038146972656
    7. '(
' → logprob: -17.625038146972656
    8. '
' → logprob: -18.000038146972656
    9. ',text' → logprob: -18.500038146972656
    10. '	text' → logprob: -18.625038146972656

Token 1663: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.041978608816862106
    2. '):' → logprob: -3.666978597640991
    3. ')' → logprob: -5.04197883605957
    4. '               ' → logprob: -5.41697883605957
    5. ':
' → logprob: -5.54197883605957
    6. '           ' → logprob: -7.91697883605957
    7. ':' → logprob: -8.41697883605957
    8. ' or' → logprob: -9.04197883605957
    9. '       ' → logprob: -11.66697883605957
    10. '                   ' → logprob: -12.41697883605957

Token 1664: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032397438772022724
    2. ':
' → logprob: -6.003239631652832
    3. ':' → logprob: -7.628239631652832
    4. '                   ' → logprob: -9.378239631652832
    5. ' continue' → logprob: -10.003239631652832
    6. '```' → logprob: -10.003239631652832
    7. 'continue' → logprob: -10.128239631652832
    8. '                       ' → logprob: -11.003239631652832
    9. '           ' → logprob: -12.003239631652832
    10. ' and' → logprob: -12.253239631652832

Token 1665: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44607388973236084
    2. 'continue' → logprob: -1.3210738897323608
    3. ' continue' → logprob: -2.4460740089416504
    4. ':
' → logprob: -5.69607400894165
    5. '                   ' → logprob: -6.82107400894165
    6. '	continue' → logprob: -6.82107400894165
    7. ':' → logprob: -7.94607400894165
    8. '```' → logprob: -8.821073532104492
    9. '_continue' → logprob: -9.321073532104492
    10. ' continues' → logprob: -9.821073532104492

Token 1666: ' Re' (ID: 907)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.38868728280067444
    2. '               ' → logprob: -1.138687252998352
    3. ' continue' → logprob: -6.3886871337890625
    4. '           ' → logprob: -9.388687133789062
    5. '	continue' → logprob: -10.513687133789062
    6. '   ' → logprob: -10.888687133789062
    7. '                   ' → logprob: -12.888687133789062
    8. '			' → logprob: -14.138687133789062
    9. '```' → logprob: -14.638687133789062
    10. '_continue' → logprob: -15.013687133789062

Token 1667: 'ached' (ID: 5908)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -6.12258882028982e-05
    2. 'ach' → logprob: -9.75006103515625
    3. 't' → logprob: -14.12506103515625
    4. 'turned' → logprob: -14.12506103515625
    5. 'ached' → logprob: -15.12506103515625
    6. 'main' → logprob: -15.37506103515625
    7. 'move' → logprob: -15.87506103515625
    8. 'TURN' → logprob: -16.00006103515625
    9. 'continue' → logprob: -16.00006103515625
    10. 'tach' → logprob: -16.25006103515625

Token 1668: ' end' (ID: 1268)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8419322371482849
    2. 'continue' → logprob: -0.8419322371482849
    3. '                   ' → logprob: -2.2169322967529297
    4. ' continue' → logprob: -3.8419322967529297
    5. '           ' → logprob: -6.09193229675293
    6. 'end' → logprob: -6.84193229675293
    7. 'break' → logprob: -6.84193229675293
    8. '
' → logprob: -6.84193229675293
    9. ' end' → logprob: -7.34193229675293
    10. '```' → logprob: -7.96693229675293

Token 1669: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9616328477859497
    2. '                   ' → logprob: -0.9616328477859497
    3. ':
' → logprob: -1.4616328477859497
    4. '           ' → logprob: -6.58663272857666
    5. ':' → logprob: -6.96163272857666
    6. 'continue' → logprob: -7.46163272857666
    7. ',' → logprob: -8.08663272857666
    8. '                       ' → logprob: -8.96163272857666
    9. '   ' → logprob: -9.58663272857666
    10. '                ' → logprob: -10.46163272857666

Token 1670: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.0002087853499688208
    2. 'input' → logprob: -9.500208854675293
    3. 'the' → logprob: -9.750208854675293
    4. 'queue' → logprob: -9.875208854675293
    5. ' text' → logprob: -11.000208854675293
    6. 'file' → logprob: -13.125208854675293
    7. 'processing' → logprob: -13.250208854675293
    8. 'line' → logprob: -13.875208854675293
    9. 'string' → logprob: -14.000208854675293
    10. '   ' → logprob: -14.250208854675293

Token 1671: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021438293159008026
    2. '                   ' → logprob: -4.396438121795654
    3. ':
' → logprob: -4.896438121795654
    4. ':' → logprob: -7.021438121795654
    5. 'continue' → logprob: -8.021438598632812
    6. '           ' → logprob: -9.521438598632812
    7. ' continue' → logprob: -9.771438598632812
    8. ',' → logprob: -10.521438598632812
    9. '```' → logprob: -11.521438598632812
    10. '   ' → logprob: -12.271438598632812

Token 1672: ' can't' (ID: 8535)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2671954035758972
    2. 'continue' → logprob: -1.517195463180542
    3. ' continue' → logprob: -4.267195224761963
    4. '                   ' → logprob: -7.392195224761963
    5. '           ' → logprob: -8.017195701599121
    6. '	continue' → logprob: -9.267195701599121
    7. '   ' → logprob: -9.642195701599121
    8. '
' → logprob: -11.267195701599121
    9. '```' → logprob: -12.767195701599121
    10. '_continue' → logprob: -13.017195701599121

Token 1673: ' extend' (ID: 20239)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.8308811187744141
    2. 'continue' → logprob: -1.080881118774414
    3. 'advance' → logprob: -1.580881118774414
    4. 'extend' → logprob: -4.705881118774414
    5. 'move' → logprob: -5.955881118774414
    6. ' continue' → logprob: -6.705881118774414
    7. ' go' → logprob: -6.830881118774414
    8. '   ' → logprob: -7.205881118774414
    9. '               ' → logprob: -7.205881118774414
    10. ' advance' → logprob: -7.205881118774414

Token 1674: ' further' (ID: 6544)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1608273983001709
    2. 'continue' → logprob: -2.285827398300171
    3. ':
' → logprob: -3.535827398300171
    4. '                   ' → logprob: -4.53582763671875
    5. ' continue' → logprob: -5.16082763671875
    6. '           ' → logprob: -7.28582763671875
    7. ':' → logprob: -8.03582763671875
    8. '                       ' → logprob: -9.66082763671875
    9. '	continue' → logprob: -10.16082763671875
    10. '   ' → logprob: -10.28582763671875

Token 1675: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000769009639043361
    2. ':
' → logprob: -8.000768661499023
    3. 'continue' → logprob: -8.750768661499023
    4. '           ' → logprob: -8.875768661499023
    5. ':' → logprob: -9.500768661499023
    6. '                   ' → logprob: -10.125768661499023
    7. ' continue' → logprob: -11.000768661499023
    8. '```' → logprob: -14.000768661499023
    9. '			' → logprob: -14.375768661499023
    10. '	continue' → logprob: -14.625768661499023

Token 1676: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014186843764036894
    2. 'continue' → logprob: -6.876418590545654
    3. '                   ' → logprob: -8.501419067382812
    4. ' continue' → logprob: -9.376419067382812
    5. '```' → logprob: -9.501419067382812
    6. ':
' → logprob: -12.251419067382812
    7. 'Continue' → logprob: -12.376419067382812
    8. '           ' → logprob: -12.626419067382812
    9. '	continue' → logprob: -13.626419067382812
    10. '   ' → logprob: -13.751419067382812

Token 1677: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08178980648517609
    2. 'continue' (adapté à ' continue') → logprob: -2.58178973197937
    3. ' continue' → logprob: -6.206789970397949
    4. '                   ' → logprob: -7.206789970397949
    5. '           ' → logprob: -9.83178997039795
    6. '```' → logprob: -10.58178997039795
    7. '	continue' → logprob: -10.70678997039795
    8. '   ' → logprob: -11.20678997039795
    9. '       ' → logprob: -11.70678997039795
    10. '                       ' → logprob: -12.33178997039795

Token 1678: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010837932117283344
    2. '
' → logprob: -5.385838031768799
    3. '       ' → logprob: -6.010838031768799
    4. '   ' → logprob: -7.010838031768799
    5. '<|end|>' → logprob: -7.510838031768799
    6. ' for' → logprob: -7.635838031768799
    7. '```' → logprob: -8.01083755493164
    8. '            
' → logprob: -8.01083755493164
    9. '    
' → logprob: -8.63583755493164
    10. '<|end|>' → logprob: -8.63583755493164

Token 1679: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10815303772687912
    2. '```' → logprob: -2.4831531047821045
    3. '       ' → logprob: -4.358152866363525
    4. '		' → logprob: -7.108152866363525
    5. '	       ' → logprob: -7.483152866363525
    6. '   ' → logprob: -7.608152866363525
    7. '               ' → logprob: -7.608152866363525
    8. '            
' → logprob: -7.733152866363525
    9. '
' → logprob: -7.983152866363525
    10. ' for' → logprob: -7.983152866363525

Token 1680: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5253246426582336
    2. '           ' → logprob: -0.9003246426582336
    3. ' for' → logprob: -6.775324821472168
    4. 'matches' → logprob: -8.025324821472168
    5. 'next' → logprob: -8.400324821472168
    6. 'if' → logprob: -8.775324821472168
    7. '#' (adapté à ' #') → logprob: -8.900324821472168
    8. '   ' → logprob: -9.900324821472168
    9. '            
' → logprob: -10.025324821472168
    10. 'ch' → logprob: -10.150324821472168

Token 1681: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003066222125198692
    2. '           ' → logprob: -8.125307083129883
    3. ' for' → logprob: -12.500307083129883
    4. 'if' → logprob: -12.625307083129883
    5. '#' → logprob: -13.250307083129883
    6. '```' → logprob: -13.875307083129883
    7. '   ' → logprob: -14.625307083129883
    8. 'next' → logprob: -16.000307083129883
    9. 'matches' → logprob: -16.250307083129883
    10. '       ' → logprob: -16.500307083129883

Token 1682: ' all' (ID: 722)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.2997148633003235
    2. ' ch' → logprob: -2.7997148036956787
    3. '(ch' → logprob: -2.9247148036956787
    4. 'next' → logprob: -3.0497148036956787
    5. 'pos' → logprob: -3.6747148036956787
    6. 'mask' → logprob: -4.299715042114258
    7. ' nxt' → logprob: -4.674715042114258
    8. 'pattern' → logprob: -5.174715042114258
    9. ' next' → logprob: -5.299715042114258
    10. '(' → logprob: -5.424715042114258

Token 1683: ' matches' (ID: 15248)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.7079786062240601
    2. '(ch' → logprob: -0.7079786062240601
    3. '(' → logprob: -5.20797872543335
    4. '(pos' → logprob: -6.20797872543335
    5. 'matches' → logprob: -6.45797872543335
    6. ' (' → logprob: -6.45797872543335
    7. ' ch' → logprob: -6.70797872543335
    8. 'pos' → logprob: -7.33297872543335
    9. 'match' → logprob: -8.332978248596191
    10. ',' → logprob: -8.832978248596191

Token 1684: ' that' (ID: 484)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.4361003041267395
    2. 'at' → logprob: -1.1861002445220947
    3. '           ' → logprob: -3.5611002445220947
    4. ' at' → logprob: -5.186100482940674
    5. ',' → logprob: -5.561100482940674
    6. 'in' → logprob: -5.936100482940674
    7. 'ending' → logprob: -6.061100482940674
    8. '```' → logprob: -6.436100482940674
    9. '               ' → logprob: -6.811100482940674
    10. 'At' → logprob: -7.686100482940674

Token 1685: ' start' (ID: 1604)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.04466245323419571
    2. ' end' → logprob: -4.2946624755859375
    3. 'finish' → logprob: -5.0446624755859375
    4. 'at' → logprob: -5.4196624755859375
    5. 'pos' → logprob: -5.4196624755859375
    6. '_end' → logprob: -5.5446624755859375
    7. '=' → logprob: -6.2946624755859375
    8. 'in' → logprob: -6.5446624755859375
    9. '[end' → logprob: -6.5446624755859375
    10. '[pos' → logprob: -6.6696624755859375

Token 1686: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.04432712867856026
    2. '[pos' → logprob: -3.7943270206451416
    3. '=' → logprob: -4.544327259063721
    4. '_at' → logprob: -5.544327259063721
    5. ' at' → logprob: -5.794327259063721
    6. '           ' → logprob: -6.544327259063721
    7. '[(' → logprob: -8.169326782226562
    8. '=(' → logprob: -8.669326782226562
    9. '==' → logprob: -8.669326782226562
    10. '(pos' → logprob: -8.794326782226562

Token 1687: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0564331205387134e-05
    2. ' pos' → logprob: -11.50001049041748
    3. '(pos' → logprob: -15.62501049041748
    4. '[pos' → logprob: -16.250011444091797
    5. '_pos' → logprob: -18.000011444091797
    6. 'position' → logprob: -18.125011444091797
    7. '   ' → logprob: -19.000011444091797
    8. '	pos' → logprob: -19.250011444091797
    9. '           ' → logprob: -19.375011444091797
    10. '       ' → logprob: -19.500011444091797

Token 1688: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.126573920249939
    2. ':
' → logprob: -1.376573920249939
    3. ',' → logprob: -2.3765740394592285
    4. ':' → logprob: -2.5015740394592285
    5. ' =' → logprob: -3.0015740394592285
    6. '+' → logprob: -3.1265740394592285
    7. '```' → logprob: -3.1265740394592285
    8. '=' → logprob: -4.0015740394592285
    9. '               ' → logprob: -4.2515740394592285
    10. ' in' → logprob: -4.2515740394592285

Token 1689: '           ' (ID: 352)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4062247574329376
    2. ' in' → logprob: -2.4062247276306152
    3. '           ' → logprob: -2.9062247276306152
    4. ':
' → logprob: -3.0312247276306152
    5. ',' → logprob: -3.4062247276306152
    6. '```' → logprob: -3.6562247276306152
    7. ' =' → logprob: -4.031224727630615
    8. '=' → logprob: -4.156224727630615
    9. '               ' → logprob: -4.656224727630615
    10. '       ' → logprob: -5.031224727630615

Token 1690: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13279686868190765
    2. 'for' → logprob: -2.2577967643737793
    3. ' for' → logprob: -4.257796764373779
    4. 'matches' → logprob: -5.382796764373779
    5. 'next' → logprob: -8.257797241210938
    6. 'i' → logprob: -8.757797241210938
    7. ' matches' → logprob: -8.882797241210938
    8. 'match' → logprob: -9.257797241210938
    9. 'if' → logprob: -9.382797241210938
    10. '       ' → logprob: -9.757797241210938

Token 1691: ' Our' (ID: 5339)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43720123171806335
    2. '           ' → logprob: -1.0622012615203857
    3. 'matches' → logprob: -5.437201023101807
    4. ' for' → logprob: -6.687201023101807
    5. 'next' → logprob: -6.937201023101807
    6. 'i' → logprob: -7.437201023101807
    7. 'if' → logprob: -7.687201023101807
    8. 'end' → logprob: -8.062201499938965
    9. 'match' → logprob: -8.562201499938965
    10. '       ' → logprob: -9.187201499938965

Token 1692: ' matches' (ID: 15248)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4260259866714478
    2. ' for' → logprob: -1.9260259866714478
    3. 'matches' → logprob: -2.051025867462158
    4. ' =' → logprob: -2.801025867462158
    5. 'pos' → logprob: -2.926025867462158
    6. ' if' → logprob: -2.926025867462158
    7. ' matches' → logprob: -3.051025867462158
    8. '           ' → logprob: -3.176025867462158
    9. 'if' → logprob: -3.426025867462158
    10. '=' → logprob: -3.551025867462158

Token 1693: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.06078256294131279
    2. '=' → logprob: -3.9357826709747314
    3. '[pos' → logprob: -4.310782432556152
    4. ' =' → logprob: -4.685782432556152
    5. 'at' → logprob: -5.435782432556152
    6. '_next' → logprob: -5.685782432556152
    7. ' at' → logprob: -6.560782432556152
    8. '_end' → logprob: -7.060782432556152
    9. '[(' → logprob: -7.185782432556152
    10. '_are' → logprob: -7.435782432556152

Token 1694: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.551713764667511
    2. 'pos' → logprob: -1.5517137050628662
    3. '[pos' → logprob: -1.5517137050628662
    4. '[' → logprob: -9.301713943481445
    5. '```' → logprob: -10.051713943481445
    6. ' pos' → logprob: -10.551713943481445
    7. '[
' → logprob: -10.801713943481445
    8. '[_' → logprob: -11.051713943481445
    9. '(pos' → logprob: -11.551713943481445
    10. '[position' → logprob: -11.676713943481445

Token 1695: ' is' (ID: 382)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.006870475597679615
    2. '[' → logprob: -5.381870269775391
    3. '```' → logprob: -6.881870269775391
    4. '[
' → logprob: -8.38187026977539
    5. '[next' → logprob: -8.38187026977539
    6. '][' → logprob: -9.00687026977539
    7. '
' → logprob: -9.25687026977539
    8. '\[' → logprob: -9.38187026977539
    9. '`' → logprob: -9.63187026977539
    10. 'pos' → logprob: -10.13187026977539

Token 1696: ' for' (ID: 395)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.14370396733283997
    2. 'pos' → logprob: -2.3937039375305176
    3. '[' → logprob: -3.6437039375305176
    4. 'indexed' → logprob: -5.018703937530518
    5. 'matches' → logprob: -6.518703937530518
    6. '[
' → logprob: -6.893703937530518
    7. '```' → logprob: -7.018703937530518
    8. '(pos' → logprob: -7.143703937530518
    9. 'a' → logprob: -7.393703937530518
    10. 'not' → logprob: -7.643703937530518

Token 1697: ' ending' (ID: 22013)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0009674415923655033
    2. ' pos' → logprob: -7.625967502593994
    3. '[pos' → logprob: -8.000967025756836
    4. 'positions' → logprob: -9.250967025756836
    5. '(pos' → logprob: -10.625967025756836
    6. 'position' → logprob: -11.500967025756836
    7. '
' → logprob: -12.375967025756836
    8. '	pos' → logprob: -13.000967025756836
    9. '   ' → logprob: -13.375967025756836
    10. '[' → logprob: -13.875967025756836

Token 1698: ' positions' (ID: 15897)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.0110403299331665
    2. '[pos' → logprob: -1.2610403299331665
    3. 'pos' → logprob: -2.261040210723877
    4. '[' → logprob: -2.511040210723877
    5. '[
' → logprob: -2.886040210723877
    6. ' at' → logprob: -3.261040210723877
    7. '
' → logprob: -4.136040210723877
    8. '[position' → logprob: -4.386040210723877
    9. '```' → logprob: -4.511040210723877
    10. ',' → logprob: -5.136040210723877

Token 1699: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5620962381362915
    2. '[pos' → logprob: -1.4370962381362915
    3. '[
' → logprob: -2.437096118927002
    4. ',' → logprob: -3.562096118927002
    5. '```' → logprob: -4.062096118927002
    6. ''' → logprob: -4.187096118927002
    7. ':' → logprob: -4.312096118927002
    8. '`' → logprob: -5.437096118927002
    9. '[(' → logprob: -5.437096118927002
    10. ':
' → logprob: -5.687096118927002

Token 1700: ' so' (ID: 813)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.05318107083439827
    2. '[pos' → logprob: -4.178181171417236
    3. '
' → logprob: -4.553181171417236
    4. 'not' → logprob: -4.678181171417236
    5. ' pos' → logprob: -4.928181171417236
    6. ' so' → logprob: -6.303181171417236
    7. ' not' → logprob: -6.553181171417236
    8. '(pos' → logprob: -6.678181171417236
    9. 'so' → logprob: -6.803181171417236
    10. '```' → logprob: -6.928181171417236

Token 1701: ' we' (ID: 581)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5274187922477722
    2. 'for' → logprob: -1.402418851852417
    3. 'next' → logprob: -2.777418851852417
    4. '```' → logprob: -3.277418851852417
    5. '#' → logprob: -4.152418613433838
    6. '           ' → logprob: -4.277418613433838
    7. ' for' → logprob: -4.902418613433838
    8. 'i' → logprob: -5.277418613433838
    9. 'while' → logprob: -5.902418613433838
    10. '+' → logprob: -6.152418613433838

Token 1702: ' must' (ID: 2804)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.7297228574752808
    2. ' need' → logprob: -2.1047229766845703
    3. 'for' → logprob: -2.6047229766845703
    4. 'continue' → logprob: -2.6047229766845703
    5. '
' → logprob: -3.1047229766845703
    6. 'should' → logprob: -3.2297229766845703
    7. 'must' → logprob: -3.2297229766845703
    8. '```' → logprob: -3.4797229766845703
    9. 'can' → logprob: -3.8547229766845703
    10. '           ' → logprob: -4.35472297668457

Token 1703: ' find' (ID: 1646)
  Prédit: 'look'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'look' → logprob: -0.4761236906051636
    2. 'check' → logprob: -1.9761236906051636
    3. 'find' → logprob: -2.226123809814453
    4. 'go' → logprob: -2.976123809814453
    5. 'advance' → logprob: -4.101123809814453
    6. '
' → logprob: -4.226123809814453
    7. ' look' → logprob: -4.476123809814453
    8. 'consider' → logprob: -4.476123809814453
    9. 'extend' → logprob: -5.601123809814453
    10. 'search' → logprob: -5.601123809814453

Token 1704: ' matches' (ID: 15248)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.046695124357938766
    2. 'matches' → logprob: -4.046695232391357
    3. '(pos' → logprob: -4.796695232391357
    4. ' pos' → logprob: -4.921695232391357
    5. 'positions' → logprob: -5.296695232391357
    6. ' matches' → logprob: -6.171695232391357
    7. 'next' → logprob: -6.296695232391357
    8. '(' → logprob: -6.921695232391357
    9. '[pos' → logprob: -6.921695232391357
    10. ' next' → logprob: -7.796695232391357

Token 1705: ' starting' (ID: 8601)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.42474034428596497
    2. '[pos' → logprob: -2.1747403144836426
    3. '```' → logprob: -2.9247403144836426
    4. '[next' → logprob: -3.1747403144836426
    5. '[(' → logprob: -3.1747403144836426
    6. ' at' → logprob: -3.6747403144836426
    7. '[' → logprob: -3.6747403144836426
    8. '[
' → logprob: -4.299740314483643
    9. '           ' → logprob: -4.424740314483643
    10. '_at' → logprob: -5.424740314483643

Token 1706: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.35616883635520935
    2. '+' → logprob: -2.356168746948242
    3. ' at' → logprob: -2.731168746948242
    4. '=' → logprob: -3.606168746948242
    5. '[pos' → logprob: -3.731168746948242
    6. 'pos' → logprob: -4.106168746948242
    7. '```' → logprob: -4.231168746948242
    8. '
' → logprob: -4.481168746948242
    9. '           ' → logprob: -4.481168746948242
    10. '+
' → logprob: -5.231168746948242

Token 1707: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.4378848391061183e-05
    2. ' pos' → logprob: -12.000014305114746
    3. '
' → logprob: -12.250014305114746
    4. '(pos' → logprob: -13.375014305114746
    5. 'position' → logprob: -13.875014305114746
    6. '```' → logprob: -15.250014305114746
    7. '[pos' → logprob: -15.250014305114746
    8. '`' → logprob: -16.250015258789062
    9. '_pos' → logprob: -17.000015258789062
    10. '	pos' → logprob: -17.000015258789062

Token 1708: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.099013328552246
    2. '           ' → logprob: -1.474013328552246
    3. '[' → logprob: -2.099013328552246
    4. '```' → logprob: -2.349013328552246
    5. '[pos' → logprob: -2.474013328552246
    6. '[
' → logprob: -3.724013328552246
    7. '       ' → logprob: -4.349013328552246
    8. ':
' → logprob: -4.474013328552246
    9. '[]
' → logprob: -4.849013328552246
    10. ',' → logprob: -4.974013328552246

Token 1709: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5844780206680298
    2. '```' → logprob: -2.0844779014587402
    3. '[
' → logprob: -2.2094779014587402
    4. ':
' → logprob: -2.8344779014587402
    5. '[pos' → logprob: -3.2094779014587402
    6. ':' → logprob: -3.9594779014587402
    7. '`' → logprob: -4.33447790145874
    8. ',' → logprob: -4.58447790145874
    9. ''' → logprob: -4.83447790145874
    10. 'for' → logprob: -4.95947790145874

Token 1710: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9765648245811462
    2. 'pos' → logprob: -1.601564884185791
    3. '
' → logprob: -2.601564884185791
    4. 'for' → logprob: -2.726564884185791
    5. '[pos' → logprob: -2.976564884185791
    6. ' for' → logprob: -3.226564884185791
    7. '```' → logprob: -3.851564884185791
    8. '[
' → logprob: -3.976564884185791
    9. '[' → logprob: -3.976564884185791
    10. ' pos' → logprob: -4.101564884185791

Token 1711: ' matches' (ID: 15248)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2444548606872559
    2. 'for' → logprob: -1.3694548606872559
    3. '           ' → logprob: -2.244454860687256
    4. '
' → logprob: -2.619454860687256
    5. ' for' → logprob: -2.744454860687256
    6. '\n' → logprob: -3.244454860687256
    7. 'i' → logprob: -3.244454860687256
    8. 'if' → logprob: -3.619454860687256
    9. 'while' → logprob: -4.494454860687256
    10. '#' → logprob: -4.869454860687256

Token 1712: ' are' (ID: 553)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.0002326224057469517
    2. '_start' → logprob: -9.500232696533203
    3. 'at' → logprob: -10.000232696533203
    4. '=' → logprob: -10.875232696533203
    5. ' =' → logprob: -11.000232696533203
    6. '```' → logprob: -11.500232696533203
    7. '_index' → logprob: -11.750232696533203
    8. '_pos' → logprob: -11.875232696533203
    9. '_here' → logprob: -12.125232696533203
    10. '_to' → logprob: -12.250232696533203

Token 1713: ' recorded' (ID: 19460)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.5883474349975586
    2. '_at' → logprob: -1.5883474349975586
    3. 'stored' → logprob: -1.9633474349975586
    4. 'ending' → logprob: -2.0883474349975586
    5. 'found' → logprob: -2.7133474349975586
    6. '[]' → logprob: -2.8383474349975586
    7. 'matches' → logprob: -2.9633474349975586
    8. '[]
' → logprob: -3.7133474349975586
    9. ' at' → logprob: -4.463347434997559
    10. '   ' → logprob: -4.713347434997559

Token 1714: ' by' (ID: 656)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.04455346241593361
    2. '[(' → logprob: -4.669553279876709
    3. '=' → logprob: -4.794553279876709
    4. '[' → logprob: -5.044553279876709
    5. 'at' → logprob: -5.294553279876709
    6. '_at' → logprob: -5.294553279876709
    7. '```' → logprob: -6.169553279876709
    8. 'pos' → logprob: -6.544553279876709
    9. '_pos' → logprob: -6.794553279876709
    10. ' at' → logprob: -7.169553279876709

Token 1715: ' their' (ID: 1043)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.6003985404968262
    2. 'length' → logprob: -2.600398540496826
    3. 'end' → logprob: -2.725398540496826
    4. 'matches' → logprob: -2.725398540496826
    5. 'pos' → logprob: -2.850398540496826
    6. 'position' → logprob: -3.100398540496826
    7. 'the' → logprob: -3.725398540496826
    8. '#' → logprob: -3.725398540496826
    9. 'positions' → logprob: -3.850398540496826
    10. 'index' → logprob: -3.975398540496826

Token 1716: ' end' (ID: 1268)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.6515973210334778
    2. 'end' → logprob: -1.151597261428833
    3. 'length' → logprob: -1.901597261428833
    4. 'start' → logprob: -5.026597499847412
    5. 'starting' → logprob: -6.026597499847412
    6. ' ending' → logprob: -6.776597499847412
    7. 'pos' → logprob: -7.401597499847412
    8. 'positions' → logprob: -7.651597499847412
    9. 'position' → logprob: -7.776597499847412
    10. ' end' → logprob: -8.276597023010254

Token 1717: ' index' (ID: 3472)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.7074012756347656
    2. '_positions' → logprob: -1.0824012756347656
    3. '_' → logprob: -2.8324012756347656
    4. 'pos' → logprob: -2.9574012756347656
    5. 'positions' → logprob: -4.332401275634766
    6. '```' → logprob: -4.457401275634766
    7. '=' → logprob: -4.457401275634766
    8. ' =' → logprob: -6.082401275634766
    9. '_idx' → logprob: -6.207401275634766
    10. '_at' → logprob: -6.332401275634766

Token 1718: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4600669741630554
    2. '```' → logprob: -2.4600670337677
    3. ' =' → logprob: -2.5850670337677
    4. ',' → logprob: -3.2100670337677
    5. '           ' → logprob: -3.7100670337677
    6. ' at' → logprob: -3.8350670337677
    7. '=' → logprob: -3.9600670337677
    8. '[pos' → logprob: -4.710066795349121
    9. '_' → logprob: -4.835066795349121
    10. 'for' → logprob: -5.085066795349121

Token 1719: ' so' (ID: 813)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4779214859008789
    2. 'so' → logprob: -2.227921485900879
    3. ' so' → logprob: -2.477921485900879
    4. 'which' → logprob: -3.352921485900879
    5. 'not' → logprob: -3.602921485900879
    6. '#' → logprob: -3.852921485900879
    7. '```' → logprob: -3.852921485900879
    8. '
' → logprob: -4.102921485900879
    9. 'i' → logprob: -4.227921485900879
    10. '[pos' → logprob: -4.352921485900879

Token 1720: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1039745807647705
    2. 'pos' → logprob: -1.2289745807647705
    3. 'end' → logprob: -1.8539745807647705
    4. 'i' → logprob: -2.8539745807647705
    5. 'next' → logprob: -2.9789745807647705
    6. ' for' → logprob: -3.1039745807647705
    7. ' next' → logprob: -4.978974342346191
    8. '#' → logprob: -4.978974342346191
    9. '```' → logprob: -4.978974342346191
    10. '           ' → logprob: -5.103974342346191

Token 1721: ' matches' (ID: 15248)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1951737403869629
    2. 'end' → logprob: -3.195173740386963
    3. 'length' → logprob: -3.695173740386963
    4. 'i' → logprob: -3.945173740386963
    5. 'matches' → logprob: -4.070173740386963
    6. 'next' → logprob: -4.445173740386963
    7. 'each' → logprob: -4.570173740386963
    8. 'match' → logprob: -4.695173740386963
    9. 'start' → logprob: -4.945173740386963
    10. ' pos' → logprob: -5.445173740386963

Token 1722: ' that' (ID: 484)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.174597978591919
    2. '_at' → logprob: -1.674597978591919
    3. 'starting' → logprob: -2.174597978591919
    4. '=' → logprob: -2.299597978591919
    5. 'ending' → logprob: -2.674597978591919
    6. 'that' → logprob: -3.549597978591919
    7. 'pos' → logprob: -3.799597978591919
    8. '==' → logprob: -3.799597978591919
    9. '```' → logprob: -3.799597978591919
    10. ' =' → logprob: -3.924597978591919

Token 1723: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.36339524388313293
    2. 'end' → logprob: -1.2383952140808105
    3. ' end' → logprob: -5.3633952140808105
    4. 'pos' → logprob: -5.6133952140808105
    5. ' start' → logprob: -5.7383952140808105
    6. '_start' → logprob: -7.3633952140808105
    7. '
' → logprob: -7.6133952140808105
    8. '_end' → logprob: -7.7383952140808105
    9. '```' → logprob: -7.7383952140808105
    10. 'continue' → logprob: -8.488395690917969

Token 1724: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.038983117789030075
    2. '=' → logprob: -3.538983106613159
    3. '==' → logprob: -4.913983345031738
    4. ' at' → logprob: -7.288983345031738
    5. '```' → logprob: -7.288983345031738
    6. '_at' → logprob: -8.538983345031738
    7. ' =' → logprob: -9.913983345031738
    8. '=
' → logprob: -10.288983345031738
    9. '==
' → logprob: -10.413983345031738
    10. ',' → logprob: -10.538983345031738

Token 1725: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.762356209335849e-05
    2. 'position' → logprob: -11.12503719329834
    3. '```' → logprob: -11.50003719329834
    4. ' pos' → logprob: -12.00003719329834
    5. '(pos' → logprob: -12.62503719329834
    6. '`' → logprob: -13.37503719329834
    7. 'index' → logprob: -14.62503719329834
    8. '[pos' → logprob: -15.00003719329834
    9. '
' → logprob: -15.37503719329834
    10. 'i' → logprob: -15.37503719329834

Token 1726: ':
' (ID: 734)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6862521171569824
    2. ':' → logprob: -1.8112521171569824
    3. ':
' → logprob: -1.9362521171569824
    4. ',' → logprob: -2.5612521171569824
    5. '           ' → logprob: -3.8112521171569824
    6. '=' → logprob: -4.061252117156982
    7. '```' → logprob: -4.561252117156982
    8. '
' → logprob: -4.811252117156982
    9. ']' → logprob: -5.311252117156982
    10. '[' → logprob: -5.311252117156982

Token 1727: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6493822336196899
    2. 'for' → logprob: -1.89938223361969
    3. 'pos' → logprob: -2.5243821144104004
    4. ' for' → logprob: -2.7743821144104004
    5. '[pos' → logprob: -2.7743821144104004
    6. '```' → logprob: -3.0243821144104004
    7. '[
' → logprob: -4.1493821144104
    8. ' pos' → logprob: -4.6493821144104
    9. '[' → logprob: -4.7743821144104
    10. '
' → logprob: -5.1493821144104

Token 1728: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0694830417633057
    2. 'for' → logprob: -1.3194830417633057
    3. '           ' → logprob: -2.4444830417633057
    4. ' for' → logprob: -2.4444830417633057
    5. '```' → logprob: -2.6944830417633057
    6. 'i' → logprob: -3.3194830417633057
    7. ' pos' → logprob: -3.9444830417633057
    8. '[pos' → logprob: -4.319482803344727
    9. 'matches' → logprob: -4.444482803344727
    10. '[
' → logprob: -4.694482803344727

Token 1729: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6284703016281128
    2. '           ' → logprob: -1.2534703016281128
    3. 'end' → logprob: -2.1284704208374023
    4. 'next' → logprob: -3.7534704208374023
    5. '```' → logprob: -4.253470420837402
    6. ' for' → logprob: -4.753470420837402
    7. 'matches' → logprob: -5.503470420837402
    8. 'i' → logprob: -5.878470420837402
    9. 'start' → logprob: -6.253470420837402
    10. '       ' → logprob: -6.753470420837402

Token 1730: ' all' (ID: 722)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.01779775321483612
    2. 'length' → logprob: -4.642797946929932
    3. 'match' → logprob: -5.517797946929932
    4. 'l' → logprob: -6.392797946929932
    5. 'i' → logprob: -7.017797946929932
    6. 'e' → logprob: -7.642797946929932
    7. 'j' → logprob: -8.767797470092773
    8. 'offset' → logprob: -9.142797470092773
    9. 'pos' → logprob: -9.142797470092773
    10. ' end' → logprob: -9.392797470092773

Token 1731: ' positions' (ID: 15897)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.32158276438713074
    2. 'i' → logprob: -1.3215827941894531
    3. 'e' → logprob: -6.071582794189453
    4. 'idx' → logprob: -6.321582794189453
    5. 'j' → logprob: -6.696582794189453
    6. 'pos' → logprob: -7.196582794189453
    7. ' end' → logprob: -7.446582794189453
    8. ' i' → logprob: -7.696582794189453
    9. 'match' → logprob: -8.696582794189453
    10. 'matches' → logprob: -8.821582794189453

Token 1732: ' end' (ID: 1268)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9011043310165405
    2. 'pos' → logprob: -1.4011043310165405
    3. 'i' → logprob: -1.9011043310165405
    4. ' in' → logprob: -2.15110445022583
    5. '```' → logprob: -3.77610445022583
    6. '[pos' → logprob: -4.02610445022583
    7. ' pos' → logprob: -4.90110445022583
    8. 'from' → logprob: -5.02610445022583
    9. ',' → logprob: -5.40110445022583
    10. 'j' → logprob: -5.65110445022583

Token 1733: ' >=' (ID: 5064)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24038375914096832
    2. '```' → logprob: -2.9903838634490967
    3. ' +' → logprob: -3.1153838634490967
    4. '=' → logprob: -3.4903838634490967
    5. '==' → logprob: -3.9903838634490967
    6. '_' → logprob: -4.115383625030518
    7. 'pos' → logprob: -4.990383625030518
    8. '
' → logprob: -5.115383625030518
    9. '_pos' → logprob: -5.115383625030518
    10. ',' → logprob: -5.115383625030518

Token 1734: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.881560041918419e-05
    2. ' pos' → logprob: -10.250039100646973
    3. '```' → logprob: -13.375039100646973
    4. '(pos' → logprob: -14.625039100646973
    5. '[pos' → logprob: -14.875039100646973
    6. '
' → logprob: -15.000039100646973
    7. '	pos' → logprob: -15.000039100646973
    8. '`' → logprob: -15.875039100646973
    9. '_pos' → logprob: -16.375038146972656
    10. ',pos' → logprob: -17.375038146972656

Token 1735: ' where' (ID: 1919)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29241418838500977
    2. ',' → logprob: -2.4174141883850098
    3. ':' → logprob: -2.7924141883850098
    4. 'for' → logprob: -3.6674141883850098
    5. ',
' → logprob: -4.29241418838501
    6. ' in' → logprob: -4.54241418838501
    7. '```' → logprob: -4.79241418838501
    8. ' for' → logprob: -4.91741418838501
    9. '           ' → logprob: -5.04241418838501
    10. '
' → logprob: -5.29241418838501

Token 1736: ' a' (ID: 261)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.39430251717567444
    2. 'pos' → logprob: -1.644302487373352
    3. 'matches' → logprob: -2.7693026065826416
    4. 'True' → logprob: -3.6443026065826416
    5. ' end' → logprob: -4.3943023681640625
    6. ' matches' → logprob: -5.2693023681640625
    7. '(end' → logprob: -5.5193023681640625
    8. ' True' → logprob: -5.6443023681640625
    9. '(pos' → logprob: -5.6443023681640625
    10. '(matches' → logprob: -6.0193023681640625

Token 1737: ' pattern' (ID: 8302)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.8273696303367615
    2. 'end' → logprob: -1.3273696899414062
    3. 'token' → logprob: -3.2023696899414062
    4. 'n' → logprob: -3.8273696899414062
    5. ' match' → logprob: -3.8273696899414062
    6. 'for' → logprob: -3.9523696899414062
    7. '
' → logprob: -4.077369689941406
    8. 'matches' → logprob: -4.202369689941406
    9. 'pos' → logprob: -4.327369689941406
    10. 'while' → logprob: -4.327369689941406

Token 1738: ' ends' (ID: 17095)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2244110107421875
    2. '```' → logprob: -1.5994110107421875
    3. '==' → logprob: -1.7244110107421875
    4. '=' → logprob: -2.4744110107421875
    5. '+' → logprob: -2.8494110107421875
    6. '`' → logprob: -3.3494110107421875
    7. ' ==' → logprob: -4.0994110107421875
    8. '
' → logprob: -4.2244110107421875
    9. ',' → logprob: -4.2244110107421875
    10. '``' → logprob: -4.3494110107421875

Token 1739: ' such' (ID: 2238)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.788852870464325
    2. ',' → logprob: -1.5388529300689697
    3. '           ' → logprob: -2.1638529300689697
    4. ':' → logprob: -3.4138529300689697
    5. '```' → logprob: -3.6638529300689697
    6. ' in' → logprob: -3.6638529300689697
    7. 'for' → logprob: -3.9138529300689697
    8. 'if' → logprob: -4.288852691650391
    9. '=' → logprob: -4.413852691650391
    10. ' and' → logprob: -4.413852691650391

Token 1740: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.008582782000303268
    2. 'hat' → logprob: -5.008582592010498
    3. 'at' → logprob: -7.008582592010498
    4. 'as' → logprob: -8.258583068847656
    5. ' that' → logprob: -8.883583068847656
    6. '           ' → logprob: -8.883583068847656
    7. '```' → logprob: -9.258583068847656
    8. '       ' → logprob: -9.883583068847656
    9. 'end' → logprob: -10.133583068847656
    10. '_that' → logprob: -10.258583068847656

Token 1741: ' start' (ID: 1604)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.012278174981474876
    2. 'text' → logprob: -4.637278079986572
    3. '(end' → logprob: -6.262278079986572
    4. ' end' → logprob: -8.38727855682373
    5. 'the' → logprob: -8.38727855682373
    6. 'pos' → logprob: -10.01227855682373
    7. '```' → logprob: -10.38727855682373
    8. '#' → logprob: -11.26227855682373
    9. 'pattern' → logprob: -11.26227855682373
    10. 'for' → logprob: -11.63727855682373

Token 1742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8731142282485962
    2. '==' → logprob: -1.3731142282485962
    3. '_pos' → logprob: -1.4981142282485962
    4. '<=' → logprob: -3.4981141090393066
    5. ' =' → logprob: -3.6231141090393066
    6. 'pos' → logprob: -3.8731141090393066
    7. ' ==' → logprob: -4.623114109039307
    8. '```' → logprob: -4.998114109039307
    9. '_idx' → logprob: -6.123114109039307
    10. ' <=' → logprob: -6.373114109039307

Token 1743: ' end' (ID: 1268)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.030298693105578423
    2. 'end' → logprob: -3.5302987098693848
    3. ' pos' → logprob: -7.655298709869385
    4. '```' → logprob: -10.530298233032227
    5. ' end' → logprob: -11.155298233032227
    6. '`' → logprob: -11.780298233032227
    7. '   ' → logprob: -12.405298233032227
    8. '(pos' → logprob: -12.530298233032227
    9. ''end' → logprob: -12.655298233032227
    10. '``' → logprob: -13.280298233032227

Token 1744: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.098634123802185
    2. '+' → logprob: -1.723634123802185
    3. '=' → logprob: -2.2236342430114746
    4. '==' → logprob: -2.2236342430114746
    5. ':
' → logprob: -2.7236342430114746
    6. ',' → logprob: -2.9736342430114746
    7. '```' → logprob: -3.2236342430114746
    8. '<=' → logprob: -3.9736342430114746
    9. ' ==' → logprob: -4.098634243011475
    10. '
' → logprob: -4.223634243011475

Token 1745: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.14690200984477997
    2. 'length' → logprob: -2.521902084350586
    3. '(len' → logprob: -3.021902084350586
    4. '(length' → logprob: -5.396902084350586
    5. '```' → logprob: -7.021902084350586
    6. 'pattern' → logprob: -7.896902084350586
    7. '(' → logprob: -8.146902084350586
    8. '[len' → logprob: -8.396902084350586
    9. '<len' → logprob: -8.646902084350586
    10. '0' → logprob: -8.646902084350586

Token 1746: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8550233244895935
    2. '           ' → logprob: -1.7300233840942383
    3. '=' → logprob: -2.1050233840942383
    4. '```' → logprob: -2.6050233840942383
    5. '(' → logprob: -3.3550233840942383
    6. ' +' → logprob: -3.6050233840942383
    7. '(pos' → logprob: -3.7300233840942383
    8. 's' → logprob: -4.230023384094238
    9. ' (' → logprob: -4.480023384094238
    10. ' =' → logprob: -4.480023384094238

Token 1747: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.657694418914616e-05
    2. '```' → logprob: -10.625056266784668
    3. '+' → logprob: -10.750056266784668
    4. ' ' → logprob: -12.125056266784668
    5. '
' → logprob: -13.125056266784668
    6. 'len' → logprob: -14.375056266784668
    7. '``' → logprob: -14.375056266784668
    8. ' +' → logprob: -14.750056266784668
    9. 'length' → logprob: -14.875056266784668
    10. '-' → logprob: -15.500056266784668

Token 1748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002625278721097857
    2. 'len' → logprob: -8.500262260437012
    3. '+' → logprob: -10.625262260437012
    4. '```' → logprob: -10.750262260437012
    5. '
' → logprob: -12.000262260437012
    6. ' ' → logprob: -12.875262260437012
    7. 'length' → logprob: -13.750262260437012
    8. '...' → logprob: -14.625262260437012
    9. ' +' → logprob: -14.750262260437012
    10. '0' → logprob: -14.875262260437012

Token 1749: ' ==' (ID: 951)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03136792406439781
    2. '```' → logprob: -4.031367778778076
    3. 'for' → logprob: -4.656367778778076
    4. ' for' → logprob: -6.906367778778076
    5. ',' → logprob: -7.531367778778076
    6. 'pos' → logprob: -8.031368255615234
    7. '       ' → logprob: -8.156368255615234
    8. '`' → logprob: -8.156368255615234
    9. 'while' → logprob: -8.531368255615234
    10. '
' → logprob: -9.031368255615234

Token 1750: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1994775377388578e-05
    2. ' pos' → logprob: -11.375012397766113
    3. '```' → logprob: -15.000012397766113
    4. '[pos' → logprob: -16.250011444091797
    5. '
' → logprob: -17.250011444091797
    6. '(pos' → logprob: -17.500011444091797
    7. '	pos' → logprob: -17.875011444091797
    8. '`' → logprob: -18.000011444091797
    9. '_pos' → logprob: -18.375011444091797
    10. '``' → logprob: -19.875011444091797

Token 1751: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002948578679934144
    2. 'for' → logprob: -6.127948760986328
    3. '
' → logprob: -8.002948760986328
    4. ' for' → logprob: -9.002948760986328
    5. 'end' → logprob: -9.377948760986328
    6. '```' → logprob: -9.627948760986328
    7. '               ' → logprob: -9.752948760986328
    8. ',' → logprob: -10.502948760986328
    9. '       ' → logprob: -11.502948760986328
    10. '                   ' → logprob: -11.627948760986328

Token 1752: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017877379432320595
    2. '```' → logprob: -5.017877578735352
    3. ' for' → logprob: -5.642877578735352
    4. 'for' → logprob: -5.642877578735352
    5. '       ' → logprob: -6.517877578735352
    6. '   ' → logprob: -7.642877578735352
    7. ',' → logprob: -7.892877578735352
    8. ':
' → logprob: -7.892877578735352
    9. '               ' → logprob: -7.892877578735352
    10. ':' → logprob: -8.392877578735352

Token 1753: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006354973651468754
    2. '```' → logprob: -5.506354808807373
    3. '
' → logprob: -6.506354808807373
    4. 'for' → logprob: -8.506355285644531
    5. '            
' → logprob: -9.256355285644531
    6. ' for' → logprob: -9.256355285644531
    7. '               ' → logprob: -9.381355285644531
    8. '       ' → logprob: -9.506355285644531
    9. '``' → logprob: -9.631355285644531
    10. ',' → logprob: -11.006355285644531

Token 1754: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0543346107006073
    2. 'for' → logprob: -3.3043346405029297
    3. 'end' → logprob: -4.30433464050293
    4. '```' → logprob: -6.92933464050293
    5. '       ' → logprob: -7.67933464050293
    6. ' for' → logprob: -7.80433464050293
    7. 'next' → logprob: -8.67933464050293
    8. '
' → logprob: -8.80433464050293
    9. '               ' → logprob: -9.17933464050293
    10. '   ' → logprob: -9.30433464050293

Token 1755: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24949617683887482
    2. '           ' → logprob: -2.3744962215423584
    3. ' for' → logprob: -3.1244962215423584
    4. 'can' → logprob: -3.8744962215423584
    5. 'need' → logprob: -4.124495983123779
    6. 'continue' → logprob: -4.249495983123779
    7. '       ' → logprob: -4.874495983123779
    8. '```' → logprob: -5.249495983123779
    9. ' can' → logprob: -5.499495983123779
    10. 'should' → logprob: -6.124495983123779

Token 1756: ' reverse' (ID: 18199)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011699236929416656
    2. ' for' → logprob: -5.886699199676514
    3. '```' → logprob: -5.886699199676514
    4. '           ' → logprob: -6.386699199676514
    5. 'end' → logprob: -6.386699199676514
    6. 'i' → logprob: -7.136699199676514
    7. 'pos' → logprob: -7.511699199676514
    8. '   ' → logprob: -7.761699199676514
    9. '                   ' → logprob: -8.386699676513672
    10. '
' → logprob: -8.636699676513672

Token 1757: ' lookup' (ID: 37342)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7674671411514282
    2. '           ' → logprob: -1.0174671411514282
    3. ' for' → logprob: -2.7674670219421387
    4. '
' → logprob: -4.017467021942139
    5. '               ' → logprob: -4.017467021942139
    6. '       ' → logprob: -4.267467021942139
    7. '```' → logprob: -4.392467021942139
    8. '                   ' → logprob: -4.767467021942139
    9. ':
' → logprob: -5.392467021942139
    10. ',' → logprob: -5.392467021942139

Token 1758: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026443805545568466
    2. 'for' → logprob: -3.9014437198638916
    3. 'end' → logprob: -5.651443958282471
    4. '
' → logprob: -6.776443958282471
    5. '```' → logprob: -7.901443958282471
    6. ' for' → logprob: -8.276443481445312
    7. '       ' → logprob: -9.026443481445312
    8. '            
' → logprob: -9.276443481445312
    9. 'pos' → logprob: -9.401443481445312
    10. '   ' → logprob: -9.901443481445312

Token 1759: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4964340329170227
    2. 'end' → logprob: -1.371433973312378
    3. '           ' → logprob: -2.121433973312378
    4. ' for' → logprob: -5.371434211730957
    5. 'j' → logprob: -5.621434211730957
    6. '```' → logprob: -5.996434211730957
    7. '       ' → logprob: -6.746434211730957
    8. 'i' → logprob: -6.871434211730957
    9. '
' → logprob: -6.996434211730957
    10. 'pos' → logprob: -7.246434211730957

Token 1760: ' position' (ID: 4010)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0010201864643022418
    2. 'i' → logprob: -7.7510199546813965
    3. ' end' → logprob: -9.126020431518555
    4. 'length' → logprob: -9.251020431518555
    5. 'start' → logprob: -9.376020431518555
    6. 'next' → logprob: -9.626020431518555
    7. 'j' → logprob: -9.876020431518555
    8. 'pos' → logprob: -10.501020431518555
    9. '   ' → logprob: -10.501020431518555
    10. 'idx' → logprob: -10.751020431518555

Token 1761: ' pos' (ID: 1253)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.7695749402046204
    2. 'pos' → logprob: -1.0195748805999756
    3. 'i' → logprob: -2.8945748805999756
    4. '=' → logprob: -3.8945748805999756
    5. ' pos' → logprob: -4.019575119018555
    6. 'in' → logprob: -4.144575119018555
    7. ' =' → logprob: -4.144575119018555
    8. 'idx' → logprob: -4.644575119018555
    9. ' in' → logprob: -4.894575119018555
    10. ' end' → logprob: -5.019575119018555

Token 1762: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.5952850580215454
    2. ':' → logprob: -1.8452850580215454
    3. ',' → logprob: -1.9702850580215454
    4. '           ' → logprob: -2.595284938812256
    5. 'for' → logprob: -2.595284938812256
    6. '```' → logprob: -2.595284938812256
    7. '=' → logprob: -2.720284938812256
    8. 'in' → logprob: -2.970284938812256
    9. ' in' → logprob: -3.220284938812256
    10. ' =' → logprob: -3.345284938812256

Token 1763: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13431645929813385
    2. 'end' → logprob: -2.8843164443969727
    3. ' for' → logprob: -3.5093164443969727
    4. '
' → logprob: -4.134316444396973
    5. 'i' → logprob: -4.384316444396973
    6. '```' → logprob: -5.634316444396973
    7. '#' → logprob: -6.509316444396973
    8. 'pos' → logprob: -6.759316444396973
    9. 'j' → logprob: -7.009316444396973
    10. 'if' → logprob: -7.509316444396973

Token 1764: ' matches' (ID: 15248)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7548630237579346
    2. 'end' → logprob: -1.0048630237579346
    3. 'for' → logprob: -2.3798630237579346
    4. 'i' → logprob: -3.2548630237579346
    5. 'matches' → logprob: -4.2548627853393555
    6. 'j' → logprob: -6.0048627853393555
    7. 'range' → logprob: -6.0048627853393555
    8. '```' → logprob: -6.3798627853393555
    9. 'idx' → logprob: -6.5048627853393555
    10. '       ' → logprob: -6.7548627853393555

Token 1765: ' ending' (ID: 22013)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.4457758665084839
    2. '_at' → logprob: -1.1957758665084839
    3. '=' → logprob: -3.6957759857177734
    4. ' =' → logprob: -4.445775985717773
    5. 'pos' → logprob: -5.195775985717773
    6. 'at' → logprob: -5.695775985717773
    7. '_pos' → logprob: -5.820775985717773
    8. '[' → logprob: -6.695775985717773
    9. '```' → logprob: -6.695775985717773
    10. '   ' → logprob: -7.195775985717773

Token 1766: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.08970705419778824
    2. '[pos' → logprob: -2.714707136154175
    3. '=' → logprob: -4.964706897735596
    4. 'pos' → logprob: -5.214706897735596
    5. '_at' → logprob: -6.464706897735596
    6. '```' → logprob: -6.589706897735596
    7. ' at' → logprob: -7.089706897735596
    8. 'in' → logprob: -7.339706897735596
    9. ')' → logprob: -7.964706897735596
    10. '   ' → logprob: -8.214707374572754

Token 1767: ' end' (ID: 1268)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.000810936326161027
    2. '[pos' → logprob: -7.3758111000061035
    3. 'i' → logprob: -9.250810623168945
    4. ' pos' → logprob: -10.500810623168945
    5. '
' → logprob: -10.750810623168945
    6. '(pos' → logprob: -11.750810623168945
    7. '```' → logprob: -11.750810623168945
    8. 'idx' → logprob: -11.875810623168945
    9. '`' → logprob: -12.500810623168945
    10. 'for' → logprob: -12.750810623168945

Token 1768: '_pos' (ID: 14692)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2643617391586304
    2. '[pos' → logprob: -1.5143617391586304
    3. '```' → logprob: -2.38936185836792
    4. '[' → logprob: -2.38936185836792
    5. '
' → logprob: -2.76436185836792
    6. '`' → logprob: -3.13936185836792
    7. '+' → logprob: -3.38936185836792
    8. ']' → logprob: -3.63936185836792
    9. '=' → logprob: -3.63936185836792
    10. '_
' → logprob: -4.13936185836792

Token 1769: ' =' (ID: 314)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.635623574256897
    2. '```' → logprob: -1.885623574256897
    3. '
' → logprob: -2.6356234550476074
    4. '[' → logprob: -3.1356234550476074
    5. '=' → logprob: -3.3856234550476074
    6. '`' → logprob: -3.8856234550476074
    7. ' =' → logprob: -4.135623455047607
    8. 'for' → logprob: -4.260623455047607
    9. '_' → logprob: -4.385623455047607
    10. '       ' → logprob: -4.385623455047607

Token 1770: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0008236800786107779
    2. '[pos' → logprob: -7.375823497772217
    3. ' pos' → logprob: -9.000823974609375
    4. 'i' → logprob: -10.500823974609375
    5. 'len' → logprob: -11.000823974609375
    6. '
' → logprob: -11.750823974609375
    7. 'for' → logprob: -12.625823974609375
    8. '   ' → logprob: -12.625823974609375
    9. '```' → logprob: -12.750823974609375
    10. '`' → logprob: -13.250823974609375

Token 1771: ' +' (ID: 659)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2630470991134644
    2. '[pos' → logprob: -1.7630470991134644
    3. '+' → logprob: -2.013047218322754
    4. '[' → logprob: -2.013047218322754
    5. '           ' → logprob: -3.638047218322754
    6. '=' → logprob: -3.638047218322754
    7. ':' → logprob: -3.638047218322754
    8. ':
' → logprob: -3.888047218322754
    9. '                   ' → logprob: -4.013047218322754
    10. '       ' → logprob: -4.013047218322754

Token 1772: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08568554371595383
    2. 'max' → logprob: -3.2106854915618896
    3. 'length' → logprob: -3.7106854915618896
    4. '0' → logprob: -4.210685729980469
    5. '1' → logprob: -7.710685729980469
    6. 'l' → logprob: -7.960685729980469
    7. '(len' → logprob: -8.085685729980469
    8. '```' → logprob: -8.335685729980469
    9. '
' → logprob: -8.460685729980469
    10. 'min' → logprob: -8.960685729980469

Token 1773: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9068537354469299
    2. '[' → logprob: -2.156853675842285
    3. ':' → logprob: -2.406853675842285
    4. '```' → logprob: -2.406853675842285
    5. '[pos' → logprob: -3.031853675842285
    6. ']' → logprob: -3.156853675842285
    7. '_' → logprob: -3.281853675842285
    8. '       ' → logprob: -3.906853675842285
    9. ':
' → logprob: -4.156853675842285
    10. '           ' → logprob: -4.156853675842285

Token 1774: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013119110371917486
    2. '```' → logprob: -9.500131607055664
    3. ' ' → logprob: -10.875131607055664
    4. '-' → logprob: -11.250131607055664
    5. '0' → logprob: -11.750131607055664
    6. 'len' → logprob: -12.125131607055664
    7. 's' → logprob: -12.375131607055664
    8. ' -' → logprob: -13.500131607055664
    9. '
' → logprob: -13.625131607055664
    10. 'length' → logprob: -13.875131607055664

Token 1775: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7166802287101746
    2. 'for' → logprob: -2.3416802883148193
    3. ':
' → logprob: -2.5916802883148193
    4. '[' → logprob: -2.5916802883148193
    5. '_' → logprob: -2.8416802883148193
    6. '+' → logprob: -3.0916802883148193
    7. '   ' → logprob: -3.4666802883148193
    8. '           ' → logprob: -3.8416802883148193
    9. ',' → logprob: -4.21668004989624
    10. '       ' → logprob: -4.34168004989624

Token 1776: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013204234652221203
    2. '```' → logprob: -4.888204097747803
    3. '       ' → logprob: -5.388204097747803
    4. '   ' → logprob: -7.888204097747803
    5. 'for' → logprob: -8.263204574584961
    6. '
' → logprob: -8.888204574584961
    7. '``' → logprob: -10.263204574584961
    8. '               ' → logprob: -10.388204574584961
    9. '          ' → logprob: -10.513204574584961
    10. 'pos' → logprob: -10.513204574584961

Token 1777: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004050263669341803
    2. 'for' → logprob: -6.629050254821777
    3. 'end' → logprob: -7.004050254821777
    4. '```' → logprob: -7.004050254821777
    5. '+' → logprob: -7.879050254821777
    6. 'next' → logprob: -9.379050254821777
    7. 'pos' → logprob: -9.379050254821777
    8. ' for' → logprob: -9.629050254821777
    9. '   ' → logprob: -9.879050254821777
    10. '
' → logprob: -9.879050254821777

Token 1778: ' Iterate' (ID: 129410)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7851913571357727
    2. 'for' → logprob: -1.910191297531128
    3. '   ' → logprob: -2.035191297531128
    4. '       ' → logprob: -2.785191297531128
    5. '           ' → logprob: -3.035191297531128
    6. '
' → logprob: -3.285191297531128
    7. 'end' → logprob: -3.660191297531128
    8. ' for' → logprob: -3.660191297531128
    9. 'i' → logprob: -3.785191297531128
    10. ' pos' → logprob: -4.035191535949707

Token 1779: ' all' (ID: 722)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9970201849937439
    2. 'i' → logprob: -1.1220202445983887
    3. 'end' → logprob: -1.7470202445983887
    4. '           ' → logprob: -2.7470202445983887
    5. 'for' → logprob: -3.6220202445983887
    6. '   ' → logprob: -4.872020244598389
    7. ' pos' → logprob: -5.372020244598389
    8. '       ' → logprob: -5.372020244598389
    9. ' i' → logprob: -5.747020244598389
    10. ' for' → logprob: -5.872020244598389

Token 1780: ' matches' (ID: 15248)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.06313731521368027
    2. 'i' → logprob: -3.8131372928619385
    3. 'pos' → logprob: -4.438137531280518
    4. 'length' → logprob: -4.438137531280518
    5. 'len' → logprob: -5.188137531280518
    6. 'matches' → logprob: -5.813137531280518
    7. 'match' → logprob: -6.313137531280518
    8. 'l' → logprob: -6.563137531280518
    9. 'possible' → logprob: -7.563137531280518
    10. ' end' → logprob: -7.563137531280518

Token 1781: ' that' (ID: 484)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.3622725009918213
    2. '           ' → logprob: -2.4872725009918213
    3. 'end' → logprob: -2.7372725009918213
    4. 'in' → logprob: -3.7372725009918213
    5. ' at' → logprob: -3.9872725009918213
    6. 'from' → logprob: -4.112272262573242
    7. 'for' → logprob: -4.112272262573242
    8. 'pos' → logprob: -4.237272262573242
    9. '_end' → logprob: -4.487272262573242
    10. 'i' → logprob: -4.987272262573242

Token 1782: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03391227498650551
    2. 'start' → logprob: -3.658912181854248
    3. 'pos' → logprob: -6.033912181854248
    4. ' end' → logprob: -6.158912181854248
    5. 'can' → logprob: -6.408912181854248
    6. 'could' → logprob: -7.408912181854248
    7. '   ' → logprob: -8.158912658691406
    8. ' can' → logprob: -9.408912658691406
    9. '       ' → logprob: -9.658912658691406
    10. ' start' → logprob: -9.783912658691406

Token 1783: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.09060627222061157
    2. '[pos' → logprob: -3.215606212615967
    3. 'pos' → logprob: -3.840606212615967
    4. ' at' → logprob: -4.465606212615967
    5. '_at' → logprob: -5.340606212615967
    6. '_pos' → logprob: -5.465606212615967
    7. 'in' → logprob: -6.340606212615967
    8. '```' → logprob: -7.715606212615967
    9. '=' → logprob: -7.965606212615967
    10. 'for' → logprob: -7.965606212615967

Token 1784: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0004839385801460594
    2. ' pos' → logprob: -8.625483512878418
    3. '[pos' → logprob: -8.625483512878418
    4. 'i' → logprob: -10.125483512878418
    5. '
' → logprob: -10.375483512878418
    6. '(pos' → logprob: -10.625483512878418
    7. '```' → logprob: -11.875483512878418
    8. 'for' → logprob: -12.250483512878418
    9. '   ' → logprob: -12.375483512878418
    10. 'position' → logprob: -12.875483512878418

Token 1785: ' where' (ID: 1919)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4138638973236084
    2. 'pos' → logprob: -2.1638638973236084
    3. '[pos' → logprob: -2.4138638973236084
    4. 'for' → logprob: -2.9138638973236084
    5. ' =' → logprob: -3.4138638973236084
    6. '```' → logprob: -4.4138641357421875
    7. '
' → logprob: -4.5388641357421875
    8. '_pos' → logprob: -5.5388641357421875
    9. '+' → logprob: -5.5388641357421875
    10. '           ' → logprob: -5.5388641357421875

Token 1786: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15872858464717865
    2. 'pos' → logprob: -2.03372859954834
    3. 'end' → logprob: -4.28372859954834
    4. '   ' → logprob: -7.03372859954834
    5. ' i' → logprob: -7.40872859954834
    6. ' pos' → logprob: -8.90872859954834
    7. 'idx' → logprob: -9.40872859954834
    8. 'index' → logprob: -9.53372859954834
    9. 'for' → logprob: -10.03372859954834
    10. '       ' → logprob: -10.15872859954834

Token 1787: ' >=' (ID: 5064)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6592836976051331
    2. '=' → logprob: -1.1592836380004883
    3. '==' → logprob: -2.0342836380004883
    4. ' ==' → logprob: -3.9092836380004883
    5. ' +' → logprob: -5.409283638000488
    6. '>=' → logprob: -5.409283638000488
    7. ' =' → logprob: -6.409283638000488
    8. '```' → logprob: -6.534283638000488
    9. '[pos' → logprob: -7.034283638000488
    10. '[' → logprob: -7.159283638000488

Token 1788: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.2127087504486553e-05
    2. ' pos' → logprob: -10.750021934509277
    3. '[pos' → logprob: -14.750021934509277
    4. '```' → logprob: -15.875021934509277
    5. '   ' → logprob: -17.000022888183594
    6. '	pos' → logprob: -17.125022888183594
    7. '(pos' → logprob: -17.500022888183594
    8. '`' → logprob: -17.500022888183594
    9. '_pos' → logprob: -17.875022888183594
    10. '
' → logprob: -18.125022888183594

Token 1789: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031123796477913857
    2. 'for' → logprob: -3.6561238765716553
    3. '```' → logprob: -6.031123638153076
    4. ' for' → logprob: -6.906123638153076
    5. '       ' → logprob: -7.781123638153076
    6. 'i' → logprob: -8.281124114990234
    7. '
' → logprob: -8.406124114990234
    8. 'if' → logprob: -8.906124114990234
    9. 'pos' → logprob: -9.656124114990234
    10. ',' → logprob: -9.656124114990234

Token 1790: ' something' (ID: 3543)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016774674877524376
    2. '1' → logprob: -5.141774654388428
    3. 'len' → logprob: -5.141774654388428
    4. '-' → logprob: -6.266774654388428
    5. 'length' → logprob: -7.141774654388428
    6. 'max' → logprob: -7.766774654388428
    7. '#' → logprob: -7.891774654388428
    8. '
' → logprob: -8.016775131225586
    9. 'for' → logprob: -8.766775131225586
    10. 'total' → logprob: -8.891775131225586

Token 1791: '?
' (ID: 3901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4636438488960266
    2. '
' → logprob: -1.4636437892913818
    3. ':
' → logprob: -3.463643789291382
    4. '       ' → logprob: -3.588643789291382
    5. ':' → logprob: -4.088644027709961
    6. '=' → logprob: -4.588644027709961
    7. '   ' → logprob: -4.588644027709961
    8. '```' → logprob: -4.713644027709961
    9. ',' → logprob: -4.838644027709961
    10. 'for' → logprob: -4.963644027709961

Token 1792: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7621974945068359
    2. '       ' → logprob: -1.512197494506836
    3. '           ' → logprob: -2.512197494506836
    4. '\n' → logprob: -2.762197494506836
    5. 'for' → logprob: -3.012197494506836
    6. '```' → logprob: -3.512197494506836
    7. ' for' → logprob: -3.887197494506836
    8. '   ' → logprob: -4.262197494506836
    9. '[pos' → logprob: -4.887197494506836
    10. '`' → logprob: -5.137197494506836

Token 1793: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010916713625192642
    2. '
' → logprob: -5.135916709899902
    3. 'for' → logprob: -5.635916709899902
    4. ' for' → logprob: -8.010916709899902
    5. 'pos' → logprob: -8.385916709899902
    6. '       ' → logprob: -8.885916709899902
    7. '```' → logprob: -8.885916709899902
    8. 'while' → logprob: -9.385916709899902
    9. '            
' → logprob: -9.510916709899902
    10. '   ' → logprob: -9.510916709899902

Token 1794: ' Instead' (ID: 21050)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4891492128372192
    2. '
' → logprob: -1.6141492128372192
    3. '       ' → logprob: -1.6141492128372192
    4. 'pos' → logprob: -1.7391492128372192
    5. 'for' → logprob: -2.3641490936279297
    6. '   ' → logprob: -3.3641490936279297
    7. '\n' → logprob: -4.23914909362793
    8. '```' → logprob: -4.23914909362793
    9. 'while' → logprob: -5.11414909362793
    10. ' for' → logprob: -5.36414909362793

Token 1795: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32960838079452515
    2. '       ' → logprob: -2.32960844039917
    3. 'for' → logprob: -2.45460844039917
    4. ' for' → logprob: -3.20460844039917
    5. '```' → logprob: -3.95460844039917
    6. '
' → logprob: -4.57960844039917
    7. 'pos' → logprob: -4.82960844039917
    8. '   ' → logprob: -5.45460844039917
    9. 'i' → logprob: -6.57960844039917
    10. ':' → logprob: -6.70460844039917

Token 1796: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6916539072990417
    2. 'for' → logprob: -0.8166539072990417
    3. 'pos' → logprob: -3.5666539669036865
    4. ' for' → logprob: -4.316653728485107
    5. 'end' → logprob: -5.441653728485107
    6. 'i' → logprob: -5.566653728485107
    7. 'next' → logprob: -5.941653728485107
    8. '#' → logprob: -6.441653728485107
    9. '       ' → logprob: -7.066653728485107
    10. 'j' → logprob: -7.191653728485107

Token 1797: ' each' (ID: 2454)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.02019871026277542
    2. 'i' → logprob: -4.395198822021484
    3. 'end' → logprob: -5.145198822021484
    4. 'next' → logprob: -7.270198822021484
    5. 'p' → logprob: -8.145198822021484
    6. 'match' → logprob: -8.520198822021484
    7. 'length' → logprob: -8.770198822021484
    8. ' pos' → logprob: -9.145198822021484
    9. 'idx' → logprob: -9.520198822021484
    10. 'start' → logprob: -10.145198822021484

Token 1798: ' possible' (ID: 4149)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.17905527353286743
    2. 'end' → logprob: -2.3040552139282227
    3. 'i' → logprob: -2.8040552139282227
    4. ' pos' → logprob: -6.429055213928223
    5. '   ' → logprob: -8.304055213928223
    6. 'idx' → logprob: -8.304055213928223
    7. 'match' → logprob: -8.679055213928223
    8. 'next' → logprob: -8.929055213928223
    9. 'index' → logprob: -8.929055213928223
    10. ' end' → logprob: -9.054055213928223

Token 1799: ' offset' (ID: 8985)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1559978425502777
    2. 'pos' → logprob: -2.9059977531433105
    3. 'length' → logprob: -3.1559977531433105
    4. 'i' → logprob: -3.4059977531433105
    5. 'len' → logprob: -5.4059977531433105
    6. 'offset' → logprob: -5.7809977531433105
    7. 'match' → logprob: -5.7809977531433105
    8. '   ' → logprob: -6.7809977531433105
    9. 'l' → logprob: -7.0309977531433105
    10. '#' → logprob: -8.405998229980469

Token 1800: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.339562177658081
    2. '       ' → logprob: -1.839562177658081
    3. 'pos' → logprob: -2.089562177658081
    4. '
' → logprob: -2.214562177658081
    5. 'for' → logprob: -2.464562177658081
    6. ' for' → logprob: -2.964562177658081
    7. 'i' → logprob: -3.089562177658081
    8. '   ' → logprob: -3.464562177658081
    9. '[pos' → logprob: -3.464562177658081
    10. '```' → logprob: -3.964562177658081

Token 1801: ' element' (ID: 3577)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.039156220853328705
    2. 'matches' → logprob: -3.414156198501587
    3. '   ' → logprob: -5.914156436920166
    4. ' range' → logprob: -7.289156436920166
    5. 'len' → logprob: -7.414156436920166
    6. 'pos' → logprob: -7.414156436920166
    7. '
' → logprob: -8.414155960083008
    8. '```' → logprob: -8.914155960083008
    9. '       ' → logprob: -9.039155960083008
    10. ' matches' → logprob: -9.789155960083008

Token 1802: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.01539621502161026
    2. 's' → logprob: -4.5153961181640625
    3. '_lengths' → logprob: -6.8903961181640625
    4. '```' → logprob: -7.0153961181640625
    5. 'strings' → logprob: -7.6403961181640625
    6. '_positions' → logprob: -8.390396118164062
    7. '_s' → logprob: -8.765396118164062
    8. ''_' → logprob: -8.765396118164062
    9. '_matches' → logprob: -9.015396118164062
    10. '`' → logprob: -9.015396118164062

Token 1803: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0041629076004028
    2. '           ' → logprob: -1.6291629076004028
    3. ':' → logprob: -1.7541629076004028
    4. '       ' → logprob: -2.6291627883911133
    5. '[pos' → logprob: -3.6291627883911133
    6. '[' → logprob: -3.7541627883911133
    7. 'for' → logprob: -3.8791627883911133
    8. '   ' → logprob: -3.8791627883911133
    9. ' for' → logprob: -4.129162788391113
    10. ',' → logprob: -4.254162788391113

Token 1804: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00570871215313673
    2. '```' → logprob: -6.130708694458008
    3. ' for' → logprob: -7.505708694458008
    4. '
' → logprob: -7.505708694458008
    5. '       ' → logprob: -7.505708694458008
    6. '            
' → logprob: -7.880708694458008
    7. '               ' → logprob: -8.130708694458008
    8. '\n' → logprob: -8.755708694458008
    9. ' 
' → logprob: -9.255708694458008
    10. '[' → logprob: -9.255708694458008

Token 1805: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03676200285553932
    2. ' for' → logprob: -3.911761999130249
    3. 'for' → logprob: -4.786762237548828
    4. '       ' → logprob: -5.036762237548828
    5. '   ' → logprob: -8.286762237548828
    6. '               ' → logprob: -8.661762237548828
    7. '```' → logprob: -9.036762237548828
    8. '
' → logprob: -9.411762237548828
    9. ' ' → logprob: -9.536762237548828
    10. '	       ' → logprob: -9.536762237548828

Token 1806: ' prec' (ID: 5074)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12306675314903259
    2. 'for' → logprob: -2.8730666637420654
    3. '       ' → logprob: -3.4980666637420654
    4. ' for' → logprob: -4.1230669021606445
    5. 'pos' → logprob: -5.2480669021606445
    6. '   ' → logprob: -6.7480669021606445
    7. '```' → logprob: -6.7480669021606445
    8. '
' → logprob: -6.8730669021606445
    9. '               ' → logprob: -7.2480669021606445
    10. 'if' → logprob: -7.8730669021606445

Token 1807: 'alc' (ID: 27187)
  Prédit: 'ise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.8703829050064087
    2. 'alc' → logprob: -1.4953829050064087
    3. 'alculate' → logprob: -1.6203829050064087
    4. 'is' → logprob: -2.870382785797119
    5. 'al' → logprob: -3.120382785797119
    6. 's' → logprob: -4.370382785797119
    7. 'i' → logprob: -4.495382785797119
    8. 'e' → logprob: -4.745382785797119
    9. '       ' → logprob: -5.120382785797119
    10. '```' → logprob: -5.745382785797119

Token 1808: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.03917396068573
    2. '#' → logprob: -1.41417396068573
    3. 'for' → logprob: -2.1641740798950195
    4. '
' → logprob: -3.1641740798950195
    5. 'length' → logprob: -3.1641740798950195
    6. 'matches' → logprob: -3.1641740798950195
    7. 'match' → logprob: -3.4141740798950195
    8. 'len' → logprob: -4.1641740798950195
    9. 'text' → logprob: -4.2891740798950195
    10. '   ' → logprob: -4.4141740798950195

Token 1809: ' matches' (ID: 15248)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1436089277267456
    2. 'matches' → logprob: -1.2686089277267456
    3. 'pos' → logprob: -2.893609046936035
    4. '[' → logprob: -3.268609046936035
    5. '{' → logprob: -3.268609046936035
    6. '{}' → logprob: -3.268609046936035
    7. '[pos' → logprob: -3.268609046936035
    8. 'len' → logprob: -3.893609046936035
    9. '[]' → logprob: -3.893609046936035
    10. '   ' → logprob: -3.893609046936035

Token 1810: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.4853366017341614
    2. '_' → logprob: -0.9853366017341614
    3. '```' → logprob: -5.985336780548096
    4. '_
' → logprob: -6.235336780548096
    5. '
' → logprob: -6.485336780548096
    6. '`' → logprob: -7.110336780548096
    7. '[' → logprob: -7.610336780548096
    8. ' =' → logprob: -7.735336780548096
    9. '=' → logprob: -8.110336303710938
    10. ')' → logprob: -8.110336303710938

Token 1811: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.023755621165037155
    2. '_pos' → logprob: -3.7737555503845215
    3. '[pos' → logprob: -8.02375602722168
    4. '```' → logprob: -9.52375602722168
    5. '
' → logprob: -10.89875602722168
    6. '[' → logprob: -11.14875602722168
    7. ']' → logprob: -11.39875602722168
    8. ' pos' → logprob: -11.77375602722168
    9. '   ' → logprob: -11.77375602722168
    10. ')' → logprob: -12.02375602722168

Token 1812: '[end' (ID: 125653)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.381640762090683
    2. ':' → logprob: -1.8816407918930054
    3. '```' → logprob: -2.756640672683716
    4. '_' → logprob: -3.256640672683716
    5. '   ' → logprob: -4.881640911102295
    6. '[
' → logprob: -5.131640911102295
    7. '[pos' → logprob: -5.256640911102295
    8. ']' → logprob: -5.381640911102295
    9. ',' → logprob: -5.506640911102295
    10. 's' → logprob: -5.631640911102295

Token 1813: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9798270463943481
    2. '[pos' → logprob: -1.4798270463943481
    3. ']' → logprob: -2.1048269271850586
    4. 's' → logprob: -2.7298269271850586
    5. '_pos' → logprob: -3.2298269271850586
    6. '][' → logprob: -3.3548269271850586
    7. '[' → logprob: -3.4798269271850586
    8. '
' → logprob: -3.9798269271850586
    9. ')' → logprob: -4.354826927185059
    10. '=' → logprob: -4.479826927185059

Token 1814: '],' (ID: 2155)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.0885156393051147
    2. '
' → logprob: -1.3385156393051147
    3. '=' → logprob: -1.5885156393051147
    4. ' =' → logprob: -2.9635157585144043
    5. ']' → logprob: -3.7135157585144043
    6. '```' → logprob: -3.8385157585144043
    7. '       ' → logprob: -4.088515758514404
    8. '[' → logprob: -4.213515758514404
    9. '           ' → logprob: -4.213515758514404
    10. ':
' → logprob: -4.838515758514404

Token 1815: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037520334124565125
    2. 'pos' → logprob: -3.912520408630371
    3. '```' → logprob: -4.912520408630371
    4. 'for' → logprob: -5.537520408630371
    5. '
' → logprob: -6.537520408630371
    6. ' for' → logprob: -6.787520408630371
    7. '       ' → logprob: -7.162520408630371
    8. 'i' → logprob: -7.412520408630371
    9. ' pos' → logprob: -7.912520408630371
    10. '            
' → logprob: -8.662520408630371

Token 1816: ' check' (ID: 2371)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.7365038990974426
    2. 'for' → logprob: -1.7365038394927979
    3. '           ' → logprob: -1.8615038394927979
    4. ' for' → logprob: -2.861503839492798
    5. 'i' → logprob: -3.111503839492798
    6. 'pos' → logprob: -3.236503839492798
    7. ' end' → logprob: -4.236504077911377
    8. '```' → logprob: -5.111504077911377
    9. 'next' → logprob: -5.361504077911377
    10. '       ' → logprob: -5.736504077911377

Token 1817: ' matches' (ID: 15248)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.01788206771016121
    2. '
' → logprob: -4.892881870269775
    3. '[pos' → logprob: -5.392881870269775
    4. 'for' → logprob: -6.017881870269775
    5. ' pos' → logprob: -6.892881870269775
    6. 'if' → logprob: -7.892881870269775
    7. '```' → logprob: -8.017882347106934
    8. '           ' → logprob: -8.517882347106934
    9. '       ' → logprob: -8.642882347106934
    10. '(pos' → logprob: -8.642882347106934

Token 1818: ' ending' (ID: 22013)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.6057226657867432
    2. 'at' → logprob: -1.7307226657867432
    3. 'from' → logprob: -1.7307226657867432
    4. '=' → logprob: -2.355722665786743
    5. 'pos' → logprob: -2.480722665786743
    6. '_pos' → logprob: -2.855722665786743
    7. '```' → logprob: -2.980722665786743
    8. 'for' → logprob: -3.355722665786743
    9. '[pos' → logprob: -3.355722665786743
    10. ' =' → logprob: -3.855722665786743

Token 1819: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.008630876429378986
    2. '=' → logprob: -5.258630752563477
    3. '_at' → logprob: -6.758630752563477
    4. '[pos' → logprob: -7.508630752563477
    5. 'pos' → logprob: -7.508630752563477
    6. ' at' → logprob: -7.758630752563477
    7. '```' → logprob: -8.508630752563477
    8. 'here' → logprob: -8.883630752563477
    9. '   ' → logprob: -9.883630752563477
    10. '_pos' → logprob: -10.508630752563477

Token 1820: ' end' (ID: 1268)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0003951648832298815
    2. ' pos' → logprob: -8.375394821166992
    3. '[pos' → logprob: -9.125394821166992
    4. 'i' → logprob: -10.625394821166992
    5. '(pos' → logprob: -11.375394821166992
    6. '```' → logprob: -11.625394821166992
    7. '
' → logprob: -12.750394821166992
    8. '`' → logprob: -13.000394821166992
    9. 'position' → logprob: -13.375394821166992
    10. 'idx' → logprob: -13.750394821166992

Token 1821: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2999775409698486
    2. '
' → logprob: -1.5499775409698486
    3. 'for' → logprob: -1.7999775409698486
    4. '           ' → logprob: -2.0499775409698486
    5. '_pos' → logprob: -3.0499775409698486
    6. '```' → logprob: -3.5499775409698486
    7. '       ' → logprob: -3.7999775409698486
    8. '[pos' → logprob: -3.9249775409698486
    9. 'while' → logprob: -4.6749773025512695
    10. 'if' → logprob: -4.6749773025512695

Token 1822: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6248764991760254
    2. '=' → logprob: -1.9998764991760254
    3. '
' → logprob: -2.2498764991760254
    4. '[pos' → logprob: -2.2498764991760254
    5. 'for' → logprob: -2.3748764991760254
    6. '```' → logprob: -2.3748764991760254
    7. ' =' → logprob: -3.1248764991760254
    8. ',' → logprob: -3.1248764991760254
    9. '_' → logprob: -3.4998764991760254
    10. '   ' → logprob: -3.9998764991760254

Token 1823: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -5.514650183613412e-05
    2. ' pos' → logprob: -9.875055313110352
    3. '[pos' → logprob: -13.375055313110352
    4. '   ' → logprob: -14.375055313110352
    5. '```' → logprob: -14.500055313110352
    6. '
' → logprob: -14.625055313110352
    7. '`' → logprob: -15.250055313110352
    8. '(pos' → logprob: -15.375055313110352
    9. '{' → logprob: -16.75005531311035
    10. '	pos' → logprob: -18.25005531311035

Token 1824: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.051872823387384415
    2. ' +' → logprob: -3.051872730255127
    3. '+
' → logprob: -7.176872730255127
    4. '```' → logprob: -7.676872730255127
    5. '[pos' → logprob: -8.301873207092285
    6. '+i' → logprob: -8.426873207092285
    7. '[' → logprob: -8.551873207092285
    8. ']' → logprob: -8.676873207092285
    9. '<|end|>' → logprob: -8.926873207092285
    10. '           ' → logprob: -9.051873207092285

Token 1825: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7202616930007935
    2. 'length' → logprob: -0.8452616930007935
    3. '0' → logprob: -2.720261573791504
    4. 'max' → logprob: -4.720261573791504
    5. 'l' → logprob: -5.720261573791504
    6. '(length' → logprob: -6.720261573791504
    7. '1' → logprob: -7.470261573791504
    8. '(len' → logprob: -7.470261573791504
    9. 'elem' → logprob: -7.595261573791504
    10. 'element' → logprob: -7.720261573791504

Token 1826: '(e' (ID: 3454)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5791200399398804
    2. 'for' → logprob: -1.8291200399398804
    3. ':' → logprob: -2.07912015914917
    4. '       ' → logprob: -2.20412015914917
    5. ':
' → logprob: -2.20412015914917
    6. 's' → logprob: -2.82912015914917
    7. '   ' → logprob: -3.32912015914917
    8. ' for' → logprob: -3.32912015914917
    9. '           ' → logprob: -3.82912015914917
    10. '+' → logprob: -3.82912015914917

Token 1827: '[s' (ID: 24177)
  Prédit: 'lement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lement' → logprob: -0.03207065537571907
    2. 'j' → logprob: -4.657070636749268
    3. '[j' → logprob: -5.282070636749268
    4. 'l' → logprob: -6.157070636749268
    5. 'le' → logprob: -6.282070636749268
    6. 'element' → logprob: -6.282070636749268
    7. '[' → logprob: -6.407070636749268
    8. ')' → logprob: -6.407070636749268
    9. 'lements' → logprob: -6.657070636749268
    10. ']' → logprob: -6.907070636749268

Token 1828: '])' (ID: 4636)
  Prédit: 'lement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lement' → logprob: -0.21648867428302765
    2. '[' → logprob: -3.3414885997772217
    3. '])' → logprob: -3.4664885997772217
    4. 'len' → logprob: -3.7164885997772217
    5. 'lements' → logprob: -4.091488838195801
    6. 's' → logprob: -4.216488838195801
    7. ']' → logprob: -4.591488838195801
    8. '[element' → logprob: -4.591488838195801
    9. ')' → logprob: -4.841488838195801
    10. '[s' → logprob: -4.966488838195801

Token 1829: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02142266184091568
    2. 'for' → logprob: -4.396422863006592
    3. '       ' → logprob: -5.146422863006592
    4. '```' → logprob: -6.646422863006592
    5. ' for' → logprob: -7.271422863006592
    6. 'while' → logprob: -8.521422386169434
    7. ',' → logprob: -8.771422386169434
    8. '
' → logprob: -9.146422386169434
    9. '   ' → logprob: -9.271422386169434
    10. '`' → logprob: -9.396422386169434

Token 1830: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004446139559149742
    2. '0' → logprob: -6.754446029663086
    3. '-' → logprob: -6.879446029663086
    4. '```' → logprob: -7.129446029663086
    5. 's' → logprob: -7.754446029663086
    6. 'len' → logprob: -7.754446029663086
    7. ' ' → logprob: -8.504446029663086
    8. 'e' → logprob: -9.754446029663086
    9. '...' → logprob: -10.379446029663086
    10. 'elem' → logprob: -10.504446029663086

Token 1831: '

' (ID: 279)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2023212909698486
    2. '
' → logprob: -1.7023212909698486
    3. 'for' → logprob: -1.8273212909698486
    4. ':' → logprob: -2.2023212909698486
    5. '       ' → logprob: -2.5773212909698486
    6. '           ' → logprob: -3.0773212909698486
    7. ' for' → logprob: -3.5773212909698486
    8. '```' → logprob: -3.8273212909698486
    9. '   ' → logprob: -4.2023210525512695
    10. ',' → logprob: -5.0773210525512695

Token 1832: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011121273040771484
    2. '       ' → logprob: -4.8861212730407715
    3. '
' → logprob: -6.5111212730407715
    4. '```' → logprob: -6.6361212730407715
    5. '   ' → logprob: -8.51112174987793
    6. '\n' → logprob: -9.38612174987793
    7. '            
' → logprob: -9.51112174987793
    8. '               ' → logprob: -9.51112174987793
    9. '    
' → logprob: -10.26112174987793
    10. '        
' → logprob: -10.38612174987793

Token 1833: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010844658128917217
    2. '       ' → logprob: -5.010844707489014
    3. '
' → logprob: -5.885844707489014
    4. 'for' → logprob: -7.760844707489014
    5. '   ' → logprob: -8.510844230651855
    6. ' for' → logprob: -8.760844230651855
    7. '            
' → logprob: -9.135844230651855
    8. '               ' → logprob: -9.510844230651855
    9. '```' → logprob: -9.510844230651855
    10. '\n' → logprob: -9.760844230651855

Token 1834: ' Let's' (ID: 41021)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021832840517163277
    2. 'for' → logprob: -4.2718329429626465
    3. '       ' → logprob: -5.3968329429626465
    4. ' for' → logprob: -6.3968329429626465
    5. '   ' → logprob: -7.3968329429626465
    6. '
' → logprob: -8.396832466125488
    7. '```' → logprob: -8.646832466125488
    8. 'len' → logprob: -9.396832466125488
    9. 'length' → logprob: -9.646832466125488
    10. '               ' → logprob: -9.771832466125488

Token 1835: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5058206915855408
    2. ' for' → logprob: -1.7558207511901855
    3. '   ' → logprob: -2.6308207511901855
    4. '       ' → logprob: -2.7558207511901855
    5. '           ' → logprob: -3.2558207511901855
    6. 'continue' → logprob: -4.0058207511901855
    7. 'pos' → logprob: -4.2558207511901855
    8. '```' → logprob: -5.3808207511901855
    9. ' continue' → logprob: -5.5058207511901855
    10. 'range' → logprob: -6.2558207511901855

Token 1836: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015787167474627495
    2. 'for' → logprob: -4.515787124633789
    3. ' for' → logprob: -5.640787124633789
    4. '       ' → logprob: -6.890787124633789
    5. '   ' → logprob: -9.390787124633789
    6. '```' → logprob: -10.640787124633789
    7. '               ' → logprob: -10.890787124633789
    8. 'length' → logprob: -12.265787124633789
    9. 'len' → logprob: -12.390787124633789
    10. '
' → logprob: -12.640787124633789

Token 1837: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13286156952381134
    2. '   ' → logprob: -2.757861614227295
    3. '       ' → logprob: -3.882861614227295
    4. ' for' → logprob: -3.882861614227295
    5. '```' → logprob: -4.757861614227295
    6. '           ' → logprob: -5.007861614227295
    7. '
' → logprob: -6.382861614227295
    8. 'continue' → logprob: -7.132861614227295
    9. 'pos' → logprob: -7.882861614227295
    10. ' ' → logprob: -8.007861137390137

Token 1838: ' it' (ID: 480)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5875957608222961
    2. 'for' → logprob: -1.0875957012176514
    3. '       ' → logprob: -3.7125957012176514
    4. '```' → logprob: -4.2125959396362305
    5. '   ' → logprob: -4.3375959396362305
    6. ' range' → logprob: -4.5875959396362305
    7. 'pos' → logprob: -4.7125959396362305
    8. 'len' → logprob: -4.8375959396362305
    9. '           ' → logprob: -4.8375959396362305
    10. 'range' → logprob: -5.4625959396362305

Token 1839: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0961670875549316
    2. '
' → logprob: -1.8461670875549316
    3. '       ' → logprob: -1.9711670875549316
    4. ' for' → logprob: -2.3461670875549316
    5. 'for' → logprob: -2.4711670875549316
    6. ':
' → logprob: -2.7211670875549316
    7. ':' → logprob: -4.096167087554932
    8. ' 
' → logprob: -4.346167087554932
    9. 'pos' → logprob: -4.471167087554932
    10. '```' → logprob: -4.471167087554932

Token 1840: ' this' (ID: 495)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5164855718612671
    2. 'pos' → logprob: -1.641485571861267
    3. 'end' → logprob: -3.2664856910705566
    4. 'i' → logprob: -3.5164856910705566
    5. 'next' → logprob: -3.7664856910705566
    6. 'range' → logprob: -3.7664856910705566
    7. 'len' → logprob: -4.141485691070557
    8. 'matches' → logprob: -4.141485691070557
    9. '           ' → logprob: -4.516485691070557
    10. '       ' → logprob: -4.516485691070557

Token 1841: ' approach' (ID: 7139)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8486829996109009
    2. ' for' → logprob: -2.3486828804016113
    3. ':
' → logprob: -2.3486828804016113
    4. ':' → logprob: -2.9736828804016113
    5. '           ' → logprob: -3.0986828804016113
    6. 'for' → logprob: -3.2236828804016113
    7. '       ' → logprob: -3.3486828804016113
    8. ' 
' → logprob: -3.4736828804016113
    9. 'pos' → logprob: -3.7236828804016113
    10. '```' → logprob: -3.7236828804016113

Token 1842: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034272775053977966
    2. '
' → logprob: -4.15927267074585
    3. '       ' → logprob: -4.78427267074585
    4. 'for' → logprob: -5.28427267074585
    5. ' for' → logprob: -6.40927267074585
    6. '   ' → logprob: -7.15927267074585
    7. '```' → logprob: -7.65927267074585
    8. '               ' → logprob: -8.284273147583008
    9. '            
' → logprob: -8.409273147583008
    10. '    
' → logprob: -8.784273147583008

Token 1843: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010509284038562328
    2. '
' → logprob: -9.625104904174805
    3. '            
' → logprob: -11.250104904174805
    4. '```' → logprob: -11.500104904174805
    5. '       ' → logprob: -11.625104904174805
    6. '               ' → logprob: -13.000104904174805
    7. '	       ' → logprob: -13.625104904174805
    8. '    
' → logprob: -14.125104904174805
    9. '        
' → logprob: -14.250104904174805
    10. '   ' → logprob: -14.875104904174805

Token 1844: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10492220520973206
    2. ' for' → logprob: -2.979922294616699
    3. 'for' → logprob: -3.104922294616699
    4. '
' → logprob: -5.979922294616699
    5. '```' → logprob: -7.479922294616699
    6. '       ' → logprob: -7.854922294616699
    7. '               ' → logprob: -8.6049222946167
    8. '   ' → logprob: -9.7299222946167
    9. '            
' → logprob: -10.1049222946167
    10. 'while' → logprob: -10.4799222946167

Token 1845: ' For' (ID: 2214)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01623436063528061
    2. 'for' → logprob: -4.516234397888184
    3. '       ' → logprob: -6.266234397888184
    4. ' for' → logprob: -6.391234397888184
    5. '
' → logprob: -6.891234397888184
    6. '   ' → logprob: -9.016234397888184
    7. '            
' → logprob: -9.516234397888184
    8. 'length' → logprob: -9.516234397888184
    9. 'len' → logprob: -9.891234397888184
    10. '```' → logprob: -9.891234397888184

Token 1846: ' each' (ID: 2454)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.19314253330230713
    2. 'end' → logprob: -2.1931424140930176
    3. 'l' → logprob: -3.9431424140930176
    4. 'element' → logprob: -4.568142414093018
    5. 'len' → logprob: -4.818142414093018
    6. 'pattern' → logprob: -5.068142414093018
    7. 'elem' → logprob: -5.818142414093018
    8. 'e' → logprob: -5.818142414093018
    9. 'word' → logprob: -6.193142414093018
    10. 's' → logprob: -6.443142414093018

Token 1847: ' element' (ID: 3577)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.5372204780578613
    2. 'length' → logprob: -1.5372204780578613
    3. 'element' → logprob: -1.9122204780578613
    4. 'i' → logprob: -2.0372204780578613
    5. 'ch' → logprob: -2.5372204780578613
    6. 'pattern' → logprob: -2.9122204780578613
    7. 'pos' → logprob: -3.1622204780578613
    8. 'e' → logprob: -3.4122204780578613
    9. 'j' → logprob: -4.037220478057861
    10. 'len' → logprob: -4.412220478057861

Token 1848: ' string' (ID: 1621)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41858357191085815
    2. '```' → logprob: -2.668583631515503
    3. ',' → logprob: -3.043583631515503
    4. '_idx' → logprob: -3.543583631515503
    5. '_index' → logprob: -3.793583631515503
    6. '[' → logprob: -3.793583631515503
    7. ' _' → logprob: -4.043583393096924
    8. ')' → logprob: -4.168583393096924
    9. 's' → logprob: -4.418583393096924
    10. ' in' → logprob: -4.543583393096924

Token 1849: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9511338472366333
    2. ':
' → logprob: -1.5761338472366333
    3. ':' → logprob: -1.8261338472366333
    4. ' in' → logprob: -2.8261337280273438
    5. '       ' → logprob: -3.2011337280273438
    6. ' for' → logprob: -3.3261337280273438
    7. 'for' → logprob: -3.9511337280273438
    8. '
' → logprob: -4.326133728027344
    9. ',' → logprob: -4.701133728027344
    10. ' =' → logprob: -4.826133728027344

Token 1850: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3964051306247711
    2. '           ' → logprob: -2.3964052200317383
    3. ':' → logprob: -2.5214052200317383
    4. ',' → logprob: -2.7714052200317383
    5. ':
' → logprob: -3.0214052200317383
    6. '       ' → logprob: -4.896405220031738
    7. 'in' → logprob: -4.896405220031738
    8. '[' → logprob: -5.771405220031738
    9. '_' → logprob: -6.146405220031738
    10. '```' → logprob: -6.146405220031738

Token 1851: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013705958845093846
    2. '       ' → logprob: -8.001370429992676
    3. ' for' → logprob: -8.001370429992676
    4. '            ' → logprob: -8.876370429992676
    5. '          ' → logprob: -9.501370429992676
    6. '               ' → logprob: -9.501370429992676
    7. '	       ' → logprob: -9.751370429992676
    8. '<|end|>' → logprob: -9.876370429992676
    9. ',' → logprob: -10.001370429992676
    10. ' (' → logprob: -10.501370429992676

Token 1852: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038265250623226166
    2. ' for' → logprob: -3.4132652282714844
    3. 'for' → logprob: -6.038265228271484
    4. '       ' → logprob: -7.663265228271484
    5. ' ' → logprob: -7.663265228271484
    6. '```' → logprob: -8.038265228271484
    7. '               ' → logprob: -8.288265228271484
    8. '            ' → logprob: -8.788265228271484
    9. '   ' → logprob: -9.288265228271484
    10. '          ' → logprob: -9.538265228271484

Token 1853: ' compute' (ID: 23864)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3862438499927521
    2. ' for' → logprob: -1.6362438201904297
    3. '       ' → logprob: -2.5112438201904297
    4. 'for' → logprob: -3.2612438201904297
    5. '   ' → logprob: -6.88624382019043
    6. ' j' → logprob: -7.01124382019043
    7. ' in' → logprob: -7.63624382019043
    8. '               ' → logprob: -7.76124382019043
    9. '            
' → logprob: -8.01124382019043
    10. '
' → logprob: -8.13624382019043

Token 1854: ' end' (ID: 1268)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.4112269878387451
    2. ' j' → logprob: -1.6612269878387451
    3. 'j' → logprob: -1.7862269878387451
    4. '```' → logprob: -2.661226987838745
    5. 'pos' → logprob: -2.786226987838745
    6. ' len' → logprob: -2.911226987838745
    7. '           ' → logprob: -3.661226987838745
    8. ' pos' → logprob: -3.911226987838745
    9. 'length' → logprob: -3.911226987838745
    10. '`' → logprob: -4.161227226257324

Token 1855: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.10237448662519455
    2. '_' → logprob: -2.72737455368042
    3. '+' → logprob: -4.35237455368042
    4. '```' → logprob: -5.10237455368042
    5. 'pos' → logprob: -6.10237455368042
    6. '_idx' → logprob: -6.35237455368042
    7. '_positions' → logprob: -6.60237455368042
    8. ')' → logprob: -7.22737455368042
    9. 's' → logprob: -7.22737455368042
    10. 'Pos' → logprob: -7.60237455368042

Token 1856: ' =' (ID: 314)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0623090267181396
    2. ':' → logprob: -1.6873090267181396
    3. ':
' → logprob: -2.0623090267181396
    4. 'for' → logprob: -2.3123090267181396
    5. '       ' → logprob: -3.3123090267181396
    6. ' for' → logprob: -3.8123090267181396
    7. ' =' → logprob: -3.8123090267181396
    8. '=' → logprob: -3.9373090267181396
    9. '   ' → logprob: -3.9373090267181396
    10. '
' → logprob: -4.312309265136719

Token 1857: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.008679693564772606
    2. ' pos' → logprob: -4.7586798667907715
    3. '           ' → logprob: -9.758679389953613
    4. '[pos' → logprob: -12.383679389953613
    5. '(pos' → logprob: -14.508679389953613
    6. '   ' → logprob: -14.508679389953613
    7. '{' → logprob: -14.633679389953613
    8. '       ' → logprob: -14.758679389953613
    9. '```' → logprob: -15.258679389953613
    10. '
' → logprob: -15.383679389953613

Token 1858: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22102878987789154
    2. ' +' → logprob: -1.9710288047790527
    3. '           ' → logprob: -3.8460288047790527
    4. '+j' → logprob: -4.846028804779053
    5. '
' → logprob: -5.221028804779053
    6. 'for' → logprob: -5.346028804779053
    7. '                   ' → logprob: -6.096028804779053
    8. ']' → logprob: -6.221028804779053
    9. '```' → logprob: -6.346028804779053
    10. '               ' → logprob: -6.346028804779053

Token 1859: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.003551723901182413
    2. 'length' → logprob: -6.003551959991455
    3. '(len' → logprob: -7.253551959991455
    4. 'element' → logprob: -9.128551483154297
    5. ' len' → logprob: -9.878551483154297
    6. '0' → logprob: -10.253551483154297
    7. '1' → logprob: -10.253551483154297
    8. '
' → logprob: -10.878551483154297
    9. '           ' → logprob: -10.878551483154297
    10. '```' → logprob: -10.878551483154297

Token 1860: '(element' (ID: 22709)
  Prédit: '(element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(element' → logprob: -0.05649812892079353
    2. '(' → logprob: -3.8064980506896973
    3. '(e' → logprob: -4.681498050689697
    4. '[element' → logprob: -5.056498050689697
    5. 'element' → logprob: -5.431498050689697
    6. '('' → logprob: -6.556498050689697
    7. ')' → logprob: -6.556498050689697
    8. '(
' → logprob: -6.681498050689697
    9. '```' → logprob: -6.681498050689697
    10. '_j' → logprob: -7.181498050689697

Token 1861: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.026945238932967186
    2. '(element' → logprob: -4.401945114135742
    3. '[element' → logprob: -4.901945114135742
    4. '(' → logprob: -6.776945114135742
    5. 'element' → logprob: -7.026945114135742
    6. '[j' → logprob: -7.026945114135742
    7. '[' → logprob: -7.151945114135742
    8. ')' → logprob: -7.651945114135742
    9. 's' → logprob: -8.151945114135742
    10. 'strings' → logprob: -8.401945114135742

Token 1862: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0029337219893932343
    2. '[' → logprob: -5.877933502197266
    3. '[element' → logprob: -10.002933502197266
    4. '[
' → logprob: -10.752933502197266
    5. ')' → logprob: -10.877933502197266
    6. '[e' → logprob: -11.502933502197266
    7. '```' → logprob: -11.502933502197266
    8. '[js' → logprob: -12.127933502197266
    9. '[(' → logprob: -13.002933502197266
    10. ')[' → logprob: -13.627933502197266

Token 1863: '])' (ID: 4636)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.16442647576332092
    2. ')' → logprob: -1.9144264459609985
    3. ')-' → logprob: -6.539426326751709
    4. ']' → logprob: -7.289426326751709
    5. '[pos' → logprob: -7.414426326751709
    6. ')]' → logprob: -7.789426326751709
    7. '[' → logprob: -7.914426326751709
    8. '])' → logprob: -9.164426803588867
    9. '           ' → logprob: -9.164426803588867
    10. '       ' → logprob: -9.414426803588867

Token 1864: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015625108033418655
    2. '       ' → logprob: -5.015625
    3. '
' → logprob: -6.015625
    4. '   ' → logprob: -6.640625
    5. ':
' → logprob: -7.390625
    6. '```' → logprob: -7.390625
    7. '		' → logprob: -7.640625
    8. ' for' → logprob: -7.640625
    9. 'for' → logprob: -7.890625
    10. ':' → logprob: -8.140625

Token 1865: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006122402846813202
    2. ' ' → logprob: -7.500612258911133
    3. '```' → logprob: -10.750612258911133
    4. '   ' → logprob: -11.875612258911133
    5. 'len' → logprob: -12.125612258911133
    6. '-' → logprob: -12.250612258911133
    7. '(' → logprob: -12.250612258911133
    8. '           ' → logprob: -12.375612258911133
    9. ' -' → logprob: -13.375612258911133
    10. '       ' → logprob: -13.375612258911133

Token 1866: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -11.500019073486328
    3. 'len' → logprob: -12.000019073486328
    4. '```' → logprob: -13.500019073486328
    5. '0' → logprob: -14.875019073486328
    6. '   ' → logprob: -14.875019073486328
    7. '-' → logprob: -16.625019073486328
    8. '           ' → logprob: -16.625019073486328
    9. '       ' → logprob: -17.125019073486328
    10. '+' → logprob: -17.250019073486328

Token 1867: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006872728932648897
    2. '       ' → logprob: -5.256872653961182
    3. 'for' → logprob: -7.631872653961182
    4. ':' → logprob: -7.881872653961182
    5. ' for' → logprob: -8.25687313079834
    6. '```' → logprob: -9.13187313079834
    7. '               ' → logprob: -9.63187313079834
    8. '
' → logprob: -10.00687313079834
    9. '		' → logprob: -10.13187313079834
    10. ':
' → logprob: -10.25687313079834

Token 1868: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040102068334817886
    2. '       ' → logprob: -3.415102005004883
    3. ' for' → logprob: -6.165102005004883
    4. '               ' → logprob: -6.415102005004883
    5. 'for' → logprob: -7.915102005004883
    6. '   ' → logprob: -8.290102005004883
    7. '            ' → logprob: -8.665102005004883
    8. '          ' → logprob: -8.665102005004883
    9. ',' → logprob: -8.915102005004883
    10. '            
' → logprob: -8.915102005004883

Token 1869: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014303469099104404
    2. '       ' → logprob: -4.389303684234619
    3. '```' → logprob: -7.514303684234619
    4. '               ' → logprob: -7.764303684234619
    5. ' for' → logprob: -8.514303207397461
    6. ',' → logprob: -9.264303207397461
    7. ':' → logprob: -9.764303207397461
    8. ':
' → logprob: -9.889303207397461
    9. 'for' → logprob: -9.889303207397461
    10. '
' → logprob: -10.014303207397461

Token 1870: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3013850152492523
    2. '       ' → logprob: -1.4263850450515747
    3. ' for' → logprob: -4.426384925842285
    4. '   ' → logprob: -6.551384925842285
    5. 'for' → logprob: -6.551384925842285
    6. '               ' → logprob: -6.551384925842285
    7. ':
' → logprob: -7.426384925842285
    8. '
' → logprob: -7.551384925842285
    9. ' if' → logprob: -8.051384925842285
    10. ':' → logprob: -8.176384925842285

Token 1871: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.015438592992722988
    2. ' end' → logprob: -4.515438556671143
    3. '(end' → logprob: -6.140438556671143
    4. 'pos' → logprob: -6.390438556671143
    5. 'element' → logprob: -8.1404390335083
    6. '   ' → logprob: -10.1404390335083
    7. '(pos' → logprob: -10.2654390335083
    8. '(' → logprob: -10.2654390335083
    9. ' pos' → logprob: -10.3904390335083
    10. 'len' → logprob: -10.5154390335083

Token 1872: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0009783862624317408
    2. '_' → logprob: -7.625978469848633
    3. 'pos' → logprob: -8.375978469848633
    4. '```' → logprob: -9.625978469848633
    5. 'Pos' → logprob: -10.375978469848633
    6. '_positions' → logprob: -10.875978469848633
    7. 's' → logprob: -11.125978469848633
    8. '=_' → logprob: -11.125978469848633
    9. '=' → logprob: -11.375978469848633
    10. '_idx' → logprob: -11.375978469848633

Token 1873: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.750952422618866
    2. ' <' → logprob: -0.750952422618866
    3. '<len' → logprob: -3.7509524822235107
    4. '<=' → logprob: -4.000952243804932
    5. ' <=' → logprob: -4.500952243804932
    6. '[' → logprob: -6.875952243804932
    7. '```' → logprob: -7.500952243804932
    8. '<size' → logprob: -8.00095272064209
    9. '[pos' → logprob: -8.75095272064209
    10. '<n' → logprob: -8.87595272064209

Token 1874: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001515576965175569
    2. ' len' → logprob: -6.5015153884887695
    3. '=len' → logprob: -11.75151538848877
    4. '=' → logprob: -13.37651538848877
    5. '(len' → logprob: -13.37651538848877
    6. 'length' → logprob: -14.75151538848877
    7. '```' → logprob: -14.87651538848877
    8. '   ' → logprob: -15.00151538848877
    9. '           ' → logprob: -15.62651538848877
    10. '[len' → logprob: -15.87651538848877

Token 1875: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.10309917479753494
    2. 'text' → logprob: -2.7280991077423096
    3. '(' → logprob: -3.6030991077423096
    4. '(
' → logprob: -6.728099346160889
    5. ')' → logprob: -7.228099346160889
    6. ' text' → logprob: -7.353099346160889
    7. '[' → logprob: -7.353099346160889
    8. ' (' → logprob: -7.853099346160889
    9. ']' → logprob: -7.978099346160889
    10. '```' → logprob: -8.47809886932373

Token 1876: ')' (ID: 8)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7665183544158936
    2. ' and' → logprob: -1.1415183544158936
    3. '):
' → logprob: -2.3915183544158936
    4. ':' → logprob: -3.1415183544158936
    5. ')' → logprob: -3.3915183544158936
    6. '           ' → logprob: -3.7665183544158936
    7. '               ' → logprob: -4.266518592834473
    8. 'and' → logprob: -6.266518592834473
    9. ']' → logprob: -6.391518592834473
    10. '):' → logprob: -6.516518592834473

Token 1877: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6606665849685669
    2. ' and' → logprob: -1.660666584968567
    3. ':
' → logprob: -2.4106664657592773
    4. ':' → logprob: -2.6606664657592773
    5. '               ' → logprob: -2.7856664657592773
    6. '       ' → logprob: -3.9106664657592773
    7. '                   ' → logprob: -4.160666465759277
    8. '                       ' → logprob: -4.285666465759277
    9. '```' → logprob: -4.785666465759277
    10. 'and' → logprob: -5.285666465759277

Token 1878: ' matches' (ID: 15248)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'element' → logprob: -1.418474793434143
    2. 'matches' → logprob: -1.668474793434143
    3. '(pos' → logprob: -2.1684746742248535
    4. 'pos' → logprob: -2.1684746742248535
    5. '(element' → logprob: -2.4184746742248535
    6. 'any' → logprob: -2.7934746742248535
    7. '(matches' → logprob: -3.2934746742248535
    8. '(' → logprob: -3.7934746742248535
    9. 'len' → logprob: -3.9184746742248535
    10. 'text' → logprob: -4.1684746742248535

Token 1879: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -4.084206375409849e-05
    2. '
' → logprob: -11.625041007995605
    3. 'At' → logprob: -11.875041007995605
    4. '[(' → logprob: -12.125041007995605
    5. '[_' → logprob: -12.750041007995605
    6. '```' → logprob: -12.750041007995605
    7. '   ' → logprob: -12.875041007995605
    8. 'at' → logprob: -13.375041007995605
    9. '`' → logprob: -13.625041007995605
    10. '_' → logprob: -14.125041007995605

Token 1880: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.048853274434804916
    2. '_pos' → logprob: -3.0488531589508057
    3. '[pos' → logprob: -8.798852920532227
    4. ' pos' → logprob: -9.548852920532227
    5. '	pos' → logprob: -11.298852920532227
    6. '```' → logprob: -11.673852920532227
    7. '
' → logprob: -11.923852920532227
    8. '   ' → logprob: -12.173852920532227
    9. '_at' → logprob: -13.673852920532227
    10. '(pos' → logprob: -13.798852920532227

Token 1881: '[end' (ID: 125653)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5805123448371887
    2. '[pos' → logprob: -0.8305123448371887
    3. 'end' → logprob: -6.705512523651123
    4. '[end' → logprob: -6.830512523651123
    5. '(pos' → logprob: -7.455512523651123
    6. '```' → logprob: -7.705512523651123
    7. '[' → logprob: -7.955512523651123
    8. '
' → logprob: -8.580512046813965
    9. '][' → logprob: -8.830512046813965
    10. ' pos' → logprob: -9.205512046813965

Token 1882: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.41847148537635803
    2. '_pos' → logprob: -1.1684714555740356
    3. '[pos' → logprob: -3.668471574783325
    4. '][' → logprob: -6.043471336364746
    5. ' pos' → logprob: -7.418471336364746
    6. '   ' → logprob: -7.793471336364746
    7. '
' → logprob: -8.543471336364746
    8. '           ' → logprob: -8.543471336364746
    9. ']' → logprob: -8.668471336364746
    10. '```' → logprob: -8.668471336364746

Token 1883: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.8202477693557739
    2. '[' → logprob: -1.820247769355774
    3. '[(' → logprob: -2.0702476501464844
    4. '][' → logprob: -3.3202476501464844
    5. '           ' → logprob: -3.3202476501464844
    6. ']' → logprob: -3.6952476501464844
    7. '.get' → logprob: -3.8202476501464844
    8. '```' → logprob: -3.9452476501464844
    9. '[pos' → logprob: -3.9452476501464844
    10. ']:
' → logprob: -4.195247650146484

Token 1884: ' contains' (ID: 8895)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9704060554504395
    2. ':
' → logprob: -1.5954060554504395
    3. '.get' → logprob: -2.2204060554504395
    4. 'and' → logprob: -2.3454060554504395
    5. '```' → logprob: -2.4704060554504395
    6. ' and' → logprob: -3.2204060554504395
    7. '[' → logprob: -4.3454060554504395
    8. '       ' → logprob: -4.7204060554504395
    9. '           ' → logprob: -4.8454060554504395
    10. ',' → logprob: -5.0954060554504395

Token 1885: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.17955109477043152
    2. ' (' → logprob: -2.429551124572754
    3. '(' → logprob: -2.804551124572754
    4. 'j' → logprob: -4.304551124572754
    5. ' j' → logprob: -6.554551124572754
    6. '[j' → logprob: -9.054551124572754
    7. '```' → logprob: -9.054551124572754
    8. '   ' → logprob: -9.429551124572754
    9. 'element' → logprob: -9.554551124572754
    10. '(element' → logprob: -9.679551124572754

Token 1886: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000523842521943152
    2. '(j' → logprob: -9.125523567199707
    3. 'element' → logprob: -9.250523567199707
    4. ')' → logprob: -9.750523567199707
    5. ',' → logprob: -10.125523567199707
    6. '
' → logprob: -10.125523567199707
    7. 'None' → logprob: -10.375523567199707
    8. '   ' → logprob: -10.750523567199707
    9. ' j' → logprob: -10.750523567199707
    10. ',j' → logprob: -10.875523567199707

Token 1887: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07649502158164978
    2. ')' → logprob: -3.2014949321746826
    3. '):
' → logprob: -4.201495170593262
    4. '):' → logprob: -4.326495170593262
    5. ')]' → logprob: -6.701495170593262
    6. '           ' → logprob: -7.326495170593262
    7. ',)' → logprob: -7.326495170593262
    8. ',
' → logprob: -7.826495170593262
    9. '               ' → logprob: -8.451495170593262
    10. '[' → logprob: -8.576495170593262

Token 1888: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16187462210655212
    2. '1' → logprob: -2.036874532699585
    3. ')' → logprob: -4.786874771118164
    4. ' len' → logprob: -5.036874771118164
    5. ' ' → logprob: -6.911874771118164
    6. 'length' → logprob: -7.036874771118164
    7. 'element' → logprob: -7.411874771118164
    8. '```' → logprob: -8.036874771118164
    9. '(len' → logprob: -8.411874771118164
    10. ' )' → logprob: -8.411874771118164

Token 1889: '(element' (ID: 22709)
  Prédit: '(element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(element' → logprob: -0.19886046648025513
    2. 'element' → logprob: -2.9488604068756104
    3. '(' → logprob: -3.1988604068756104
    4. ')' → logprob: -3.1988604068756104
    5. '(e' → logprob: -4.1988606452941895
    6. '('' → logprob: -4.4488606452941895
    7. ''' → logprob: -5.8238606452941895
    8. 's' → logprob: -6.0738606452941895
    9. '(j' → logprob: -6.1988606452941895
    10. '(
' → logprob: -6.3238606452941895

Token 1890: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.01733671873807907
    2. 'strings' → logprob: -5.267336845397949
    3. '(element' → logprob: -5.392336845397949
    4. 's' → logprob: -5.517336845397949
    5. '(strings' → logprob: -6.767336845397949
    6. '(e' → logprob: -7.517336845397949
    7. 'Strings' → logprob: -7.892336845397949
    8. ')' → logprob: -8.14233684539795
    9. '(' → logprob: -8.14233684539795
    10. '(s' → logprob: -8.39233684539795

Token 1891: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.296065092086792
    2. '[pos' → logprob: -1.921065092086792
    3. ')' → logprob: -2.921065092086792
    4. '[' → logprob: -3.046065092086792
    5. '))' → logprob: -5.671065330505371
    6. '[
' → logprob: -6.171065330505371
    7. '   ' → logprob: -8.171065330505371
    8. ')]' → logprob: -8.296065330505371
    9. '       ' → logprob: -8.296065330505371
    10. 'j' → logprob: -8.546065330505371

Token 1892: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4221097230911255
    2. ')' → logprob: -1.9221097230911255
    3. '])' → logprob: -2.547109603881836
    4. ')):
' → logprob: -2.672109603881836
    5. ']))' → logprob: -4.672109603881836
    6. ')):' → logprob: -4.922109603881836
    7. ')]' → logprob: -5.047109603881836
    8. '])):
' → logprob: -5.172109603881836
    9. ')])' → logprob: -5.547109603881836
    10. ']):
' → logprob: -5.672109603881836

Token 1893: ' then' (ID: 1815)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4649007320404053
    2. ':
' → logprob: -1.4649007320404053
    3. ':' → logprob: -2.7149007320404053
    4. '
' → logprob: -3.2149007320404053
    5. '       ' → logprob: -3.8399007320404053
    6. '   ' → logprob: -5.839900970458984
    7. '\n' → logprob: -5.839900970458984
    8. ' for' → logprob: -6.339900970458984
    9. '               ' → logprob: -6.839900970458984
    10. 'for' → logprob: -7.214900970458984

Token 1894: ' possible' (ID: 4149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7649078965187073
    2. ':
' → logprob: -1.2649078369140625
    3. ':' → logprob: -1.5149078369140625
    4. '       ' → logprob: -4.8899078369140625
    5. '               ' → logprob: -5.0149078369140625
    6. '
' → logprob: -6.0149078369140625
    7. '):
' → logprob: -6.2649078369140625
    8. '```' → logprob: -6.2649078369140625
    9. '\n' → logprob: -6.5149078369140625
    10. 'for' → logprob: -6.5149078369140625

Token 1895: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00377133977599442
    2. '
' → logprob: -5.6287713050842285
    3. '            
' → logprob: -9.878771781921387
    4. ' for' → logprob: -10.503771781921387
    5. '       ' → logprob: -10.503771781921387
    6. '               ' → logprob: -11.003771781921387
    7. ',' → logprob: -11.253771781921387
    8. 'for' → logprob: -11.503771781921387
    9. ',
' → logprob: -12.503771781921387
    10. '\n' → logprob: -12.753771781921387

Token 1896: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008098635007627308
    2. '       ' → logprob: -8.500809669494629
    3. '```' → logprob: -8.875809669494629
    4. '               ' → logprob: -9.000809669494629
    5. '            
' → logprob: -9.625809669494629
    6. '		' → logprob: -9.750809669494629
    7. '[' → logprob: -10.250809669494629
    8. '   ' → logprob: -10.750809669494629
    9. '                   ' → logprob: -10.750809669494629
    10. '    
' → logprob: -11.125809669494629

Token 1897: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006326167494989932
    2. '       ' → logprob: -7.8756327629089355
    3. ' for' → logprob: -9.625632286071777
    4. '            
' → logprob: -9.625632286071777
    5. '
' → logprob: -10.500632286071777
    6. 'for' (adapté à ' for') → logprob: -10.750632286071777
    7. '               ' → logprob: -11.000632286071777
    8. '        
' → logprob: -11.875632286071777
    9. '```' → logprob: -12.000632286071777
    10. ',' → logprob: -12.000632286071777

Token 1898: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2897682189941406
    2. 'element' → logprob: -1.6647682189941406
    3. 'elem' → logprob: -3.6647682189941406
    4. 'next' → logprob: -4.414768218994141
    5. 'el' → logprob: -4.414768218994141
    6. 'pattern' → logprob: -5.289768218994141
    7. 'length' → logprob: -6.789768218994141
    8. 'ele' → logprob: -6.914768218994141
    9. 'end' → logprob: -6.914768218994141
    10. 'e' → logprob: -7.039768218994141

Token 1899: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03378792479634285
    2. 'in' → logprob: -3.408787965774536
    3. ',' → logprob: -9.283787727355957
    4. ' ' → logprob: -10.783787727355957
    5. ' ,' → logprob: -11.533787727355957
    6. '	in' → logprob: -12.408787727355957
    7. 's' → logprob: -13.283787727355957
    8. ')' → logprob: -13.408787727355957
    9. '_in' → logprob: -13.658787727355957
    10. 'import' → logprob: -13.908787727355957

Token 1900: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00014060820103622973
    2. ' range' → logprob: -8.875140190124512
    3. 'element' → logprob: -14.875140190124512
    4. 'n' → logprob: -15.875140190124512
    5. '(range' → logprob: -15.875140190124512
    6. '
' → logprob: -17.250141143798828
    7. ')' → logprob: -17.500141143798828
    8. '	range' → logprob: -18.500141143798828
    9. '```' → logprob: -18.625141143798828
    10. '`' → logprob: -19.000141143798828

Token 1901: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.8325677703833207e-05
    2. ' n' → logprob: -10.750028610229492
    3. '0' → logprob: -13.000028610229492
    4. 'len' → logprob: -13.500028610229492
    5. '(n' → logprob: -13.500028610229492
    6. '12' → logprob: -14.375028610229492
    7. '
' → logprob: -14.500028610229492
    8. '   ' → logprob: -15.500028610229492
    9. '       ' → logprob: -15.625028610229492
    10. '           ' → logprob: -16.375028610229492

Token 1902: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0339072048664093
    2. '):' → logprob: -3.408907175064087
    3. '       ' → logprob: -9.408906936645508
    4. ' ):
' → logprob: -9.533906936645508
    5. '           ' → logprob: -9.783906936645508
    6. ')' → logprob: -11.158906936645508
    7. '):
' → logprob: -11.283906936645508
    8. '               ' → logprob: -11.783906936645508
    9. ' ):' → logprob: -12.533906936645508
    10. '   ' → logprob: -13.158906936645508

Token 1903: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33708158135414124
    2. '               ' → logprob: -1.5870815515518188
    3. ':
' → logprob: -3.2120816707611084
    4. ':' → logprob: -4.337081432342529
    5. '            ' → logprob: -5.462081432342529
    6. ' :
' → logprob: -5.962081432342529
    7. ' :' → logprob: -6.212081432342529
    8. ',' → logprob: -6.337081432342529
    9. ' if' → logprob: -6.337081432342529
    10. '	       ' → logprob: -6.337081432342529

Token 1904: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5026949048042297
    2. '               ' → logprob: -2.127694845199585
    3. 'length' → logprob: -2.627694845199585
    4. 'end' → logprob: -2.877694845199585
    5. ' if' → logprob: -3.502694845199585
    6. ' length' → logprob: -3.627694845199585
    7. ':
' → logprob: -3.877694845199585
    8. ' end' → logprob: -4.627695083618164
    9. ':' → logprob: -4.627695083618164
    10. ',' → logprob: -5.002695083618164

Token 1905: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8379327058792114
    2. '(pos' → logprob: -1.3379327058792114
    3. '(mask' → logprob: -2.087932586669922
    4. '(j' → logprob: -2.962932586669922
    5. 'mask' → logprob: -3.087932586669922
    6. '((' → logprob: -3.712932586669922
    7. 'pos' → logprob: -3.962932586669922
    8. ' pos' → logprob: -4.462932586669922
    9. ' j' → logprob: -4.837932586669922
    10. ' mask' → logprob: -4.962932586669922

Token 1906: 'mask' (ID: 22527)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.48774510622024536
    2. 'mask' → logprob: -0.9877451062202454
    3. '(mask' → logprob: -5.23774528503418
    4. '(pos' → logprob: -5.48774528503418
    5. 'j' → logprob: -6.61274528503418
    6. ' pos' → logprob: -6.73774528503418
    7. ' mask' → logprob: -7.61274528503418
    8. '   ' → logprob: -8.36274528503418
    9. ' (' → logprob: -8.36274528503418
    10. '(' → logprob: -9.23774528503418

Token 1907: ' >>' (ID: 6832)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -1.0557993650436401
    2. ' |' → logprob: -1.1807993650436401
    3. ' &' → logprob: -1.3057993650436401
    4. '<<' → logprob: -3.6807994842529297
    5. '>>' → logprob: -4.18079948425293
    6. '&' → logprob: -4.43079948425293
    7. ' >>' → logprob: -5.05579948425293
    8. ' <<' → logprob: -5.05579948425293
    9. '|(' → logprob: -6.05579948425293
    10. ',' → logprob: -6.43079948425293

Token 1908: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.7697225252486533e-06
    2. ' j' → logprob: -12.625003814697266
    3. '1' → logprob: -15.750003814697266
    4. '   ' → logprob: -15.875003814697266
    5. '```' → logprob: -16.375003814697266
    6. '0' → logprob: -17.500003814697266
    7. '	j' → logprob: -17.875003814697266
    8. '(j' → logprob: -18.125003814697266
    9. '_j' → logprob: -18.500003814697266
    10. '[j' → logprob: -18.625003814697266

Token 1909: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07530732452869415
    2. ')&' → logprob: -2.8253073692321777
    3. '&' → logprob: -4.325307369232178
    4. ' &' → logprob: -11.70030689239502
    5. ' )' → logprob: -11.82530689239502
    6. '&)' → logprob: -13.45030689239502
    7. '           ' → logprob: -14.07530689239502
    8. '&amp' → logprob: -14.07530689239502
    9. '&
' → logprob: -14.20030689239502
    10. '       ' → logprob: -14.70030689239502

Token 1910: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.05496342107653618
    2. ' &' → logprob: -2.9299633502960205
    3. '==' → logprob: -10.679963111877441
    4. '&amp' → logprob: -10.804963111877441
    5. '&
' → logprob: -10.929963111877441
    6. ' ==' → logprob: -12.179963111877441
    7. ')&' → logprob: -12.179963111877441
    8. ')' → logprob: -12.554963111877441
    9. ' &
' → logprob: -13.679963111877441
    10. ' &=' → logprob: -13.929963111877441

Token 1911: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023246407508850098
    2. '0' → logprob: -3.7732462882995605
    3. '
' → logprob: -14.523246765136719
    4. ' ' → logprob: -15.398246765136719
    5. 'False' → logprob: -17.02324676513672
    6. '   ' → logprob: -17.64824676513672
    7. ')' → logprob: -17.89824676513672
    8. '```' → logprob: -18.27324676513672
    9. '=' → logprob: -18.89824676513672
    10. '&' → logprob: -19.14824676513672

Token 1912: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038074489566497505
    2. '0' → logprob: -7.875380516052246
    3. ' ' → logprob: -14.875380516052246
    4. '
' → logprob: -15.875380516052246
    5. '```' → logprob: -17.125381469726562
    6. '   ' → logprob: -17.375381469726562
    7. '=' → logprob: -17.875381469726562
    8. '{' → logprob: -18.625381469726562
    9. '' → logprob: -18.875381469726562
    10. '01' → logprob: -19.000381469726562

Token 1913: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08084125071763992
    2. ' ==' → logprob: -2.705841302871704
    3. ')==' → logprob: -4.955841064453125
    4. ')' → logprob: -5.830841064453125
    5. '=' → logprob: -7.705841064453125
    6. ']==' → logprob: -8.955841064453125
    7. '===' → logprob: -9.330841064453125
    8. '==
' → logprob: -9.705841064453125
    9. '           ' → logprob: -10.080841064453125
    10. '                   ' → logprob: -10.455841064453125

Token 1914: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.12520408630371
    4. 'False' → logprob: -20.12520408630371
    5. '۰' → logprob: -20.62520408630371
    6. '```' → logprob: -21.62520408630371
    7. ')' → logprob: -21.75020408630371
    8. ' ' → logprob: -21.87520408630371
    9. '
' → logprob: -22.06270408630371
    10. '1' → logprob: -22.12520408630371

Token 1915: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -20.000009536743164
    4. '۰' → logprob: -21.125009536743164
    5. '  ' → logprob: -22.625009536743164
    6. 'False' → logprob: -22.625009536743164
    7. '1' → logprob: -22.625009536743164
    8. '```' → logprob: -23.125009536743164
    9. '０' → logprob: -23.375009536743164
    10. '000' → logprob: -23.375009536743164

Token 1916: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3277706503868103
    2. ':
' → logprob: -2.327770709991455
    3. '               ' → logprob: -2.952770709991455
    4. '                   ' → logprob: -2.952770709991455
    5. ' continue' → logprob: -3.077770709991455
    6. ' ' → logprob: -4.577770709991455
    7. '           ' → logprob: -5.202770709991455
    8. '                       ' → logprob: -5.702770709991455
    9. '                           ' → logprob: -6.077770709991455
    10. ' :' → logprob: -6.202770709991455

Token 1917: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012751665897667408
    2. ' continue' → logprob: -4.887751579284668
    3. '               ' → logprob: -5.637751579284668
    4. '                       ' → logprob: -8.012751579284668
    5. 'continue' → logprob: -8.012751579284668
    6. '                           ' → logprob: -8.262751579284668
    7. '                ' → logprob: -8.387751579284668
    8. '                               ' → logprob: -9.137751579284668
    9. '                    ' → logprob: -9.387751579284668
    10. ' continues' → logprob: -9.887751579284668

Token 1918: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09238393604755402
    2. ' continue' → logprob: -2.967383861541748
    3. 'continue' (adapté à ' continue') → logprob: -3.467383861541748
    4. '               ' → logprob: -5.467383861541748
    5. '                       ' → logprob: -6.717383861541748
    6. '                           ' → logprob: -9.592384338378906
    7. '                               ' → logprob: -9.842384338378906
    8. '	continue' → logprob: -10.717384338378906
    9. '   ' → logprob: -12.217384338378906
    10. '                                   ' → logprob: -12.342384338378906

Token 1919: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07055749744176865
    2. '                   ' → logprob: -3.5705575942993164
    3. ':
' → logprob: -3.6955575942993164
    4. ':' → logprob: -4.945557594299316
    5. '
' → logprob: -5.820557594299316
    6. '                       ' → logprob: -6.820557594299316
    7. '                
' → logprob: -6.945557594299316
    8. ' and' → logprob: -7.445557594299316
    9. '           ' → logprob: -7.695557594299316
    10. ' 
' → logprob: -7.820557594299316

Token 1920: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022707350552082062
    2. ':
' → logprob: -4.772707462310791
    3. '                   ' → logprob: -5.147707462310791
    4. '           ' → logprob: -5.522707462310791
    5. ':' → logprob: -6.397707462310791
    6. '
' → logprob: -7.272707462310791
    7. '                ' → logprob: -7.522707462310791
    8. '                
' → logprob: -7.897707462310791
    9. '                       ' → logprob: -8.022706985473633
    10. '                           ' → logprob: -9.772706985473633

Token 1921: ' element' (ID: 3577)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30036410689353943
    2. ' continue' → logprob: -1.4253641366958618
    3. '                   ' → logprob: -4.800364017486572
    4. '           ' → logprob: -5.050364017486572
    5. 'continue' → logprob: -5.550364017486572
    6. '                       ' → logprob: -9.05036449432373
    7. '                ' → logprob: -9.55036449432373
    8. '
' → logprob: -9.80036449432373
    9. '   ' → logprob: -10.42536449432373
    10. '                           ' → logprob: -10.67536449432373

Token 1922: ' j' (ID: 441)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08865892887115479
    2. ' is' → logprob: -3.5886588096618652
    3. ' j' → logprob: -4.213658809661865
    4. ' already' → logprob: -4.963658809661865
    5. '<|end|>' → logprob: -5.088658809661865
    6. ')' → logprob: -5.338658809661865
    7. ' strings' → logprob: -5.338658809661865
    8. 'not' → logprob: -5.713658809661865
    9. '[j' → logprob: -6.213658809661865
    10. '_strings' → logprob: -6.213658809661865

Token 1923: ' already' (ID: 4279)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.2497433423995972
    2. ' ==' → logprob: -1.3747433423995972
    3. '               ' → logprob: -1.4997433423995972
    4. '==' → logprob: -1.7497433423995972
    5. '           ' → logprob: -3.3747434616088867
    6. ' not' → logprob: -5.124743461608887
    7. '                       ' → logprob: -5.249743461608887
    8. 'continue' → logprob: -5.874743461608887
    9. ' continue' → logprob: -6.249743461608887
    10. ' in' → logprob: -6.499743461608887

Token 1924: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.15722505748271942
    2. 'matched' → logprob: -2.5322251319885254
    3. ' used' → logprob: -2.9072251319885254
    4. ' matched' → logprob: -4.657225131988525
    5. '_used' → logprob: -7.532225131988525
    6. '```' → logprob: -7.532225131988525
    7. 'added' → logprob: -8.032224655151367
    8. 'included' → logprob: -8.407224655151367
    9. 'selected' → logprob: -9.282224655151367
    10. '_mat' → logprob: -9.782224655151367

Token 1925: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2882688045501709
    2. '
' → logprob: -1.413268804550171
    3. '                
' → logprob: -5.41326904296875
    4. '  
' → logprob: -7.03826904296875
    5. '    
' → logprob: -8.28826904296875
    6. '            
' → logprob: -8.41326904296875
    7. ' 
' → logprob: -8.41326904296875
    8. '           ' → logprob: -8.53826904296875
    9. '                   ' → logprob: -8.78826904296875
    10. '```' → logprob: -8.78826904296875

Token 1926: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010897843167185783
    2. '
' → logprob: -4.885897636413574
    3. '           ' → logprob: -6.510897636413574
    4. '```' → logprob: -7.510897636413574
    5. '                
' → logprob: -7.635897636413574
    6. ' 
' → logprob: -8.510897636413574
    7. '                   ' → logprob: -8.635897636413574
    8. '  
' → logprob: -9.135897636413574
    9. '            
' → logprob: -9.760897636413574
    10. '    
' → logprob: -10.010897636413574

Token 1927: ' length' (ID: 5517)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1733933538198471
    2. '
' → logprob: -2.1733932495117188
    3. '                   ' → logprob: -3.6733932495117188
    4. 'end' → logprob: -5.173393249511719
    5. ' end' → logprob: -5.423393249511719
    6. '           ' → logprob: -5.548393249511719
    7. '                
' → logprob: -6.673393249511719
    8. '```' → logprob: -6.798393249511719
    9. '                ' → logprob: -7.298393249511719
    10. '   ' → logprob: -7.673393249511719

Token 1928: '_j' (ID: 12021)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28444284200668335
    2. '=' → logprob: -1.4094429016113281
    3. '=len' → logprob: -6.909442901611328
    4. '               ' → logprob: -7.034442901611328
    5. '           ' → logprob: -7.284442901611328
    6. '                   ' → logprob: -8.534442901611328
    7. ')' → logprob: -9.409442901611328
    8. '_length' → logprob: -9.659442901611328
    9. '            ' → logprob: -10.034442901611328
    10. '                ' → logprob: -10.034442901611328

Token 1929: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134737014770508
    2. '=' → logprob: -1.3134737014770508
    3. '               ' → logprob: -9.18847370147705
    4. ')' → logprob: -10.56347370147705
    5. '                ' → logprob: -10.68847370147705
    6. '=len' → logprob: -11.06347370147705
    7. '            ' → logprob: -11.56347370147705
    8. '           ' → logprob: -11.56347370147705
    9. ' =
' → logprob: -12.43847370147705
    10. ' ' → logprob: -12.43847370147705

Token 1930: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00862131267786026
    2. ' len' → logprob: -4.7586212158203125
    3. 'length' → logprob: -13.008621215820312
    4. 'element' → logprob: -13.633621215820312
    5. '[len' → logprob: -13.758621215820312
    6. '(len' → logprob: -13.883621215820312
    7. '           ' → logprob: -14.383621215820312
    8. '   ' → logprob: -15.133621215820312
    9. '	len' → logprob: -15.758621215820312
    10. '               ' → logprob: -16.258621215820312

Token 1931: '(element' (ID: 22709)
  Prédit: '(element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(element' → logprob: -0.07891006022691727
    2. 'element' → logprob: -2.5789101123809814
    3. '(' → logprob: -11.203909873962402
    4. ' element' → logprob: -12.828909873962402
    5. '[element' → logprob: -12.953909873962402
    6. ' (' → logprob: -14.578909873962402
    7. '	element' → logprob: -14.828909873962402
    8. '(
' → logprob: -14.953909873962402
    9. '```' → logprob: -15.953909873962402
    10. '_element' → logprob: -16.07891082763672

Token 1932: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.02242249809205532
    2. '(element' → logprob: -4.3974223136901855
    3. 'element' → logprob: -5.3974223136901855
    4. 'Strings' → logprob: -6.3974223136901855
    5. 'strings' → logprob: -6.5224223136901855
    6. '_j' → logprob: -7.0224223136901855
    7. '[element' → logprob: -7.2724223136901855
    8. 's' → logprob: -8.897422790527344
    9. '(j' → logprob: -9.147422790527344
    10. '_elements' → logprob: -9.272422790527344

Token 1933: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.847109812544659e-05
    2. 'j' → logprob: -10.500048637390137
    3. ')' → logprob: -11.500048637390137
    4. '[' → logprob: -12.625048637390137
    5. '(j' → logprob: -12.625048637390137
    6. '_j' → logprob: -13.625048637390137
    7. ' [' → logprob: -14.625048637390137
    8. '               ' → logprob: -14.750048637390137
    9. ')[' → logprob: -14.875048637390137
    10. 's' → logprob: -15.000048637390137

Token 1934: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20535439252853394
    2. ')' → logprob: -1.7053544521331787
    3. '               ' → logprob: -5.5803542137146
    4. '                   ' → logprob: -9.580354690551758
    5. '])' → logprob: -10.455354690551758
    6. '])
' → logprob: -10.955354690551758
    7. ']
' → logprob: -11.455354690551758
    8. ')
' → logprob: -11.830354690551758
    9. '           ' → logprob: -11.955354690551758
    10. ']' → logprob: -12.705354690551758

Token 1935: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011623837985098362
    2. ' if' → logprob: -4.636623859405518
    3. '```' → logprob: -7.761623859405518
    4. 'end' → logprob: -8.01162338256836
    5. ' end' → logprob: -8.01162338256836
    6. 'if' → logprob: -8.13662338256836
    7. '                
' → logprob: -8.88662338256836
    8. '                   ' → logprob: -9.63662338256836
    9. ',' → logprob: -10.13662338256836
    10. '           ' → logprob: -10.38662338256836

Token 1936: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.20164448022842407
    2. ' end' → logprob: -1.7016444206237793
    3. 'pos' → logprob: -9.826644897460938
    4. 'e' → logprob: -10.201644897460938
    5. ' next' → logprob: -10.451644897460938
    6. ' if' → logprob: -10.576644897460938
    7. 'next' → logprob: -10.701644897460938
    8. 'if' → logprob: -10.826644897460938
    9. '   ' → logprob: -11.701644897460938
    10. ' pos' → logprob: -11.701644897460938

Token 1937: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00022797346173319966
    2. 'pos' → logprob: -8.625227928161621
    3. ' =' → logprob: -10.875227928161621
    4. '=' → logprob: -11.500227928161621
    5. '=_' → logprob: -12.250227928161621
    6. '_' → logprob: -12.375227928161621
    7. 'Pos' → logprob: -12.500227928161621
    8. '_idx' → logprob: -13.125227928161621
    9. '_token' → logprob: -13.625227928161621
    10. '_=' → logprob: -14.000227928161621

Token 1938: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740796685218811
    2. ' =' → logprob: -0.9740796685218811
    3. '=
' → logprob: -13.974080085754395
    4. '==' → logprob: -14.099080085754395
    5. ' ==' → logprob: -14.724080085754395
    6. ' =
' → logprob: -16.099079132080078
    7. ')' → logprob: -16.224079132080078
    8. '＝' → logprob: -16.724079132080078
    9. '<|end|>' → logprob: -16.849079132080078
    10. '=end' → logprob: -17.224079132080078

Token 1939: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.000553151941858232
    2. ' pos' → logprob: -7.500553131103516
    3. '           ' → logprob: -16.500553131103516
    4. '               ' → logprob: -17.875553131103516
    5. '                   ' → logprob: -18.125553131103516
    6. '[pos' → logprob: -18.750553131103516
    7. '   ' → logprob: -19.875553131103516
    8. '	pos' → logprob: -20.375553131103516
    9. '_pos' → logprob: -20.500553131103516
    10. '(pos' → logprob: -21.500553131103516

Token 1940: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6935387849807739
    2. ' +' → logprob: -0.6935387849807739
    3. '+j' → logprob: -8.193538665771484
    4. '+
' → logprob: -9.943538665771484
    5. ' +
' → logprob: -10.318538665771484
    6. '<|end|>' → logprob: -11.818538665771484
    7. '               ' → logprob: -12.193538665771484
    8. '[length' → logprob: -12.568538665771484
    9. '```' → logprob: -12.693538665771484
    10. '+[' → logprob: -13.693538665771484

Token 1941: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -3.173704271830502e-06
    2. ' length' → logprob: -13.00000286102295
    3. '(length' → logprob: -14.00000286102295
    4. '[length' → logprob: -21.125003814697266
    5. '	length' → logprob: -21.250003814697266
    6. 'len' → logprob: -21.500003814697266
    7. 'leng' → logprob: -22.250003814697266
    8. '   ' → logprob: -22.875003814697266
    9. '_length' → logprob: -22.875003814697266
    10. '(' → logprob: -23.625003814697266

Token 1942: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -2.7610454708337784e-05
    2. 'element' → logprob: -11.750027656555176
    3. 'j' → logprob: -12.250027656555176
    4. 'length' → logprob: -12.500027656555176
    5. '```' → logprob: -12.750027656555176
    6. '[j' → logprob: -13.375027656555176
    7. '_strings' → logprob: -13.625027656555176
    8. '_length' → logprob: -13.875027656555176
    9. '_element' → logprob: -14.250027656555176
    10. '[element' → logprob: -14.500027656555176

Token 1943: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6352951526641846
    2. ' -' → logprob: -0.7602951526641846
    3. '               ' → logprob: -6.8852949142456055
    4. '<|end|>' → logprob: -7.1352949142456055
    5. ')' → logprob: -8.135294914245605
    6. '<|end|>' → logprob: -8.385294914245605
    7. '   ' → logprob: -9.760294914245605
    8. '                   ' → logprob: -10.010294914245605
    9. ' ' → logprob: -10.010294914245605
    10. '```' → logprob: -10.260294914245605

Token 1944: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -17.625003814697266
    4. '   ' → logprob: -18.000003814697266
    5. '                   ' → logprob: -19.875003814697266
    6. ')' → logprob: -20.375003814697266
    7. '
' → logprob: -21.000003814697266
    8. '`' → logprob: -21.000003814697266
    9. '                       ' → logprob: -21.375003814697266
    10. '                           ' → logprob: -21.625003814697266

Token 1945: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -19.000001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '
' → logprob: -21.125001907348633
    6. '<|end|>' → logprob: -21.250001907348633
    7. ')' → logprob: -22.125001907348633
    8. '`' → logprob: -22.250001907348633
    9. '۱' → logprob: -22.375001907348633
    10. '  ' → logprob: -22.625001907348633

Token 1946: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004073059186339378
    2. '           ' → logprob: -5.754073143005371
    3. '
' → logprob: -7.629073143005371
    4. '                   ' → logprob: -9.504073143005371
    5. '<|end|>' → logprob: -9.754073143005371
    6. ' if' → logprob: -9.879073143005371
    7. '       ' → logprob: -10.004073143005371
    8. '                ' → logprob: -10.754073143005371
    9. '                
' → logprob: -10.754073143005371
    10. ')' → logprob: -10.754073143005371

Token 1947: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03841886669397354
    2. ' <' → logprob: -3.538418769836426
    3. '           ' → logprob: -5.288418769836426
    4. '
' → logprob: -6.538418769836426
    5. ' if' → logprob: -6.913418769836426
    6. '                   ' → logprob: -7.788418769836426
    7. ' >=' → logprob: -8.413418769836426
    8. '       ' → logprob: -9.788418769836426
    9. ' <=' → logprob: -9.788418769836426
    10. '                
' → logprob: -9.788418769836426

Token 1948: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08222701400518417
    2. 'if' (adapté à ' if') → logprob: -2.5822269916534424
    3. '               ' → logprob: -5.7072272300720215
    4. '```' → logprob: -12.457226753234863
    5. '                   ' → logprob: -13.082226753234863
    6. '           ' → logprob: -13.457226753234863
    7. '                ' → logprob: -13.832226753234863
    8. '                
' → logprob: -15.082226753234863
    9. '	if' → logprob: -15.332226753234863
    10. ' 
' → logprob: -15.457226753234863

Token 1949: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.029751179739832878
    2. ' end' → logprob: -3.5297510623931885
    3. '(end' → logprob: -15.27975082397461
    4. '               ' → logprob: -15.27975082397461
    5. '                   ' → logprob: -15.77975082397461
    6. '0' → logprob: -16.27975082397461
    7. '   ' → logprob: -17.40475082397461
    8. '                       ' → logprob: -18.15475082397461
    9. '           ' → logprob: -18.52975082397461
    10. ' ' → logprob: -18.65475082397461

Token 1950: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.006612937897443771
    2. '<' → logprob: -5.131612777709961
    3. 'pos' → logprob: -7.506612777709961
    4. ' <' → logprob: -9.256612777709961
    5. '   ' → logprob: -11.881612777709961
    6. '+' → logprob: -11.881612777709961
    7. 'Pos' → logprob: -12.256612777709961
    8. ' ' → logprob: -12.631612777709961
    9. '<len' → logprob: -12.631612777709961
    10. '<_' → logprob: -13.131612777709961

Token 1951: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5764831900596619
    2. '<' → logprob: -0.8264831900596619
    3. '<len' → logprob: -7.826483249664307
    4. '<size' → logprob: -9.701482772827148
    5. '<int' → logprob: -10.076482772827148
    6. '<n' → logprob: -11.826482772827148
    7. '<
' → logprob: -12.326482772827148
    8. '<num' → logprob: -12.576482772827148
    9. ')' → logprob: -12.701482772827148
    10. '<=' → logprob: -13.076482772827148

Token 1952: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.848420551046729e-05
    2. ' len' → logprob: -9.7500581741333
    3. '(len' → logprob: -16.750059127807617
    4. '0' → logprob: -16.875059127807617
    5. '<len' → logprob: -17.125059127807617
    6. '=len' → logprob: -17.875059127807617
    7. '   ' → logprob: -18.000059127807617
    8. '[len' → logprob: -18.375059127807617
    9. '	len' → logprob: -19.000059127807617
    10. ',len' → logprob: -19.375059127807617

Token 1953: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.018152287229895592
    2. 'text' → logprob: -4.018152236938477
    3. ' text' → logprob: -13.643152236938477
    4. '{text' → logprob: -13.768152236938477
    5. '(' → logprob: -17.018152236938477
    6. ',text' → logprob: -18.268152236938477
    7. '"text' → logprob: -18.643152236938477
    8. '_text' → logprob: -18.893152236938477
    9. '$text' → logprob: -18.893152236938477
    10. '	text' → logprob: -18.893152236938477

Token 1954: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.37406429648399353
    2. '):' → logprob: -2.1240642070770264
    3. ':
' → logprob: -2.3740642070770264
    4. ':' → logprob: -2.8740642070770264
    5. '               ' → logprob: -3.9990642070770264
    6. '                   ' → logprob: -4.4990644454956055
    7. ')' → logprob: -5.2490644454956055
    8. '           ' → logprob: -5.8740644454956055
    9. '                       ' → logprob: -5.9990644454956055
    10. ' or' → logprob: -6.7490644454956055

Token 1955: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008641989901661873
    2. ':' → logprob: -5.258642196655273
    3. '                       ' → logprob: -6.633642196655273
    4. ':
' → logprob: -6.758642196655273
    5. '               ' → logprob: -7.258642196655273
    6. ' and' → logprob: -10.008642196655273
    7. '                           ' → logprob: -10.383642196655273
    8. '                    ' → logprob: -10.758642196655273
    9. ' continue' → logprob: -10.758642196655273
    10. 'continue' → logprob: -10.758642196655273

Token 1956: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6594672799110413
    2. '                   ' → logprob: -0.9094672799110413
    3. ' continue' → logprob: -2.6594672203063965
    4. '               ' → logprob: -4.6594672203063965
    5. '                       ' → logprob: -7.6594672203063965
    6. '           ' → logprob: -8.784467697143555
    7. '	continue' → logprob: -11.284467697143555
    8. '   ' → logprob: -11.409467697143555
    9. '                           ' → logprob: -11.659467697143555
    10. '                               ' → logprob: -12.534467697143555

Token 1957: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22758238017559052
    2. '                   ' → logprob: -1.602582335472107
    3. '
' → logprob: -6.8525824546813965
    4. '                       ' → logprob: -7.6025824546813965
    5. ':
' → logprob: -8.477581977844238
    6. '           ' → logprob: -8.977581977844238
    7. ':' → logprob: -10.102581977844238
    8. '                
' → logprob: -10.227581977844238
    9. 'continue' → logprob: -10.352581977844238
    10. '                    
' → logprob: -10.602581977844238

Token 1958: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10174383223056793
    2. '                   ' → logprob: -2.3517439365386963
    3. '                       ' → logprob: -7.601743698120117
    4. '           ' → logprob: -8.226743698120117
    5. '```' → logprob: -8.476743698120117
    6. '                
' → logprob: -8.726743698120117
    7. '
' → logprob: -9.101743698120117
    8. '                ' → logprob: -9.351743698120117
    9. '                    
' → logprob: -9.726743698120117
    10. ' continue' → logprob: -11.351743698120117

Token 1959: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10838218033313751
    2. 'for' → logprob: -2.733382225036621
    3. 'if' → logprob: -3.483382225036621
    4. ' for' → logprob: -5.483382225036621
    5. ' if' → logprob: -6.233382225036621
    6. 'found' → logprob: -7.733382225036621
    7. 'tokens' → logprob: -9.608382225036621
    8. '                
' → logprob: -9.733382225036621
    9. '```' → logprob: -9.733382225036621
    10. '                   ' → logprob: -10.233382225036621

Token 1960: ' Check' (ID: 6208)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.13744917511940002
    2. 'for' → logprob: -2.137449264526367
    3. 'matches' → logprob: -5.262449264526367
    4. 'if' → logprob: -5.637449264526367
    5. 'c' → logprob: -7.512449264526367
    6. 'matched' → logprob: -7.637449264526367
    7. 'possible' → logprob: -8.512449264526367
    8. '               ' → logprob: -8.887449264526367
    9. 'exists' → logprob: -9.262449264526367
    10. '#' → logprob: -9.637449264526367

Token 1961: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43961504101753235
    2. 'for' → logprob: -1.93961501121521
    3. 'if' → logprob: -2.43961501121521
    4. 'in' → logprob: -3.43961501121521
    5. 'any' → logprob: -3.68961501121521
    6. '(j' → logprob: -4.439615249633789
    7. ' (' → logprob: -4.439615249633789
    8. '(' → logprob: -4.564615249633789
    9. ' for' → logprob: -4.814615249633789
    10. ' if' → logprob: -5.064615249633789

Token 1962: ' element' (ID: 3577)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.016076834872364998
    2. 'any' → logprob: -4.891077041625977
    3. '(any' → logprob: -4.891077041625977
    4. '   ' → logprob: -8.266077041625977
    5. ' (' → logprob: -8.266077041625977
    6. '(' → logprob: -8.641077041625977
    7. '(element' → logprob: -8.891077041625977
    8. ' any' → logprob: -10.641077041625977
    9. ' ' → logprob: -11.266077041625977
    10. '((' → logprob: -11.391077041625977

Token 1963: ' j' (ID: 441)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.16097506880760193
    2. 'j' → logprob: -2.5359749794006348
    3. '_j' → logprob: -3.4109749794006348
    4. ' j' → logprob: -3.9109749794006348
    5. 'strings' → logprob: -4.535974979400635
    6. '(j' → logprob: -6.035974979400635
    7. '```' → logprob: -6.660974979400635
    8. 's' → logprob: -7.285974979400635
    9. ' (' → logprob: -8.285975456237793
    10. '[j' → logprob: -8.410975456237793

Token 1964: ' matches' (ID: 15248)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4234694242477417
    2. ' in' → logprob: -1.1734694242477417
    3. ',' → logprob: -4.173469543457031
    4. ',j' → logprob: -4.298469543457031
    5. ')' → logprob: -5.673469543457031
    6. ' j' → logprob: -6.923469543457031
    7. 'j' → logprob: -7.673469543457031
    8. ' is' → logprob: -7.923469543457031
    9. 'is' → logprob: -8.048469543457031
    10. '_j' → logprob: -8.798469543457031

Token 1965: ' ending' (ID: 22013)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9851040244102478
    2. '               ' → logprob: -1.2351040840148926
    3. ' in' → logprob: -2.3601040840148926
    4. ',' → logprob: -3.1101040840148926
    5. '                   ' → logprob: -3.1101040840148926
    6. ' at' → logprob: -3.4851040840148926
    7. '(end' → logprob: -3.4851040840148926
    8. '_at' → logprob: -4.360104084014893
    9. 'if' → logprob: -4.485104084014893
    10. ' (' → logprob: -4.610104084014893

Token 1966: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.08143184334039688
    2. '_at' → logprob: -2.5814318656921387
    3. ' at' → logprob: -6.081431865692139
    4. '```' → logprob: -9.20643138885498
    5. '   ' → logprob: -10.20643138885498
    6. 'At' → logprob: -11.08143138885498
    7. '[end' → logprob: -11.33143138885498
    8. 'here' → logprob: -11.45643138885498
    9. '_here' → logprob: -11.70643138885498
    10. 'end' → logprob: -11.70643138885498

Token 1967: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0001593195047462359
    2. ' end' → logprob: -8.75015926361084
    3. '[end' → logprob: -14.50015926361084
    4. '(end' → logprob: -16.375160217285156
    5. '```' → logprob: -16.375160217285156
    6. '=end' → logprob: -16.875160217285156
    7. ''end' → logprob: -17.250160217285156
    8. '   ' → logprob: -17.375160217285156
    9. '`' → logprob: -18.500160217285156
    10. '	end' → logprob: -19.500160217285156

Token 1968: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00038574778591282666
    2. 'pos' → logprob: -7.875385761260986
    3. '```' → logprob: -12.500385284423828
    4. '_positions' → logprob: -14.625385284423828
    5. '[pos' → logprob: -15.375385284423828
    6. 'Pos' → logprob: -15.500385284423828
    7. '_p' → logprob: -15.625385284423828
    8. '`' → logprob: -16.000385284423828
    9. '_' → logprob: -16.125385284423828
    10. '[' → logprob: -16.250385284423828

Token 1969: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006424863822758198
    2. '                   ' → logprob: -6.006424903869629
    3. ' and' → logprob: -6.131424903869629
    4. ',' → logprob: -7.756424903869629
    5. ':' → logprob: -8.381424903869629
    6. '                       ' → logprob: -8.631424903869629
    7. '                
' → logprob: -8.631424903869629
    8. '                ' → logprob: -9.381424903869629
    9. ' if' → logprob: -9.381424903869629
    10. ':
' → logprob: -9.506424903869629

Token 1970: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007235070690512657
    2. '                   ' → logprob: -5.257235050201416
    3. '```' → logprob: -6.632235050201416
    4. '{' → logprob: -8.507235527038574
    5. '                       ' → logprob: -8.882235527038574
    6. ' and' → logprob: -9.257235527038574
    7. '[' → logprob: -10.132235527038574
    8. '                ' → logprob: -10.382235527038574
    9. '			' → logprob: -10.882235527038574
    10. ' if' → logprob: -10.882235527038574

Token 1971: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7906021475791931
    2. '               ' → logprob: -1.165602207183838
    3. 'for' → logprob: -1.915602207183838
    4. 'found' → logprob: -2.665602207183838
    5. ' if' → logprob: -4.915602207183838
    6. ' for' → logprob: -5.290602207183838
    7. 'matches' → logprob: -5.790602207183838
    8. ' found' → logprob: -6.790602207183838
    9. '                   ' → logprob: -8.16560173034668
    10. 'tokens' → logprob: -8.41560173034668

Token 1972: ' Use' (ID: 7649)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7262927293777466
    2. 'found' → logprob: -1.2262927293777466
    3. 'for' → logprob: -1.6012927293777466
    4. '               ' → logprob: -4.601292610168457
    5. 'matches' → logprob: -4.601292610168457
    6. ' if' → logprob: -8.726292610168457
    7. 'exists' → logprob: -8.726292610168457
    8. 'matched' → logprob: -8.976292610168457
    9. '                   ' → logprob: -9.101292610168457
    10. 'match' → logprob: -9.226292610168457

Token 1973: ' a' (ID: 261)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.6740312576293945
    2. 'matches' → logprob: -0.7990312576293945
    3. '(matches' → logprob: -3.5490312576293945
    4. '(any' → logprob: -5.6740312576293945
    5. 'next' → logprob: -6.0490312576293945
    6. ' any' → logprob: -6.1740312576293945
    7. 'binary' → logprob: -6.6740312576293945
    8. ' matches' → logprob: -8.049031257629395
    9. '(next' → logprob: -8.174031257629395
    10. '((' → logprob: -8.174031257629395

Token 1974: ' fast' (ID: 5661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6598189473152161
    2. 'set' → logprob: -1.6598188877105713
    3. 'any' → logprob: -2.5348188877105713
    4. 'all' → logprob: -3.4098188877105713
    5. 'binary' → logprob: -3.4098188877105713
    6. 'matches' → logprob: -3.5348188877105713
    7. 'match' → logprob: -4.28481912612915
    8. 'found' → logprob: -4.28481912612915
    9. '#' → logprob: -4.53481912612915
    10. 'continue' → logprob: -4.78481912612915

Token 1975: ' membership' (ID: 20190)
  Prédit: 'lookup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lookup' → logprob: -0.9389877319335938
    2. 'match' → logprob: -1.6889877319335938
    3. 'matches' → logprob: -2.1889877319335938
    4. 'binary' → logprob: -2.6889877319335938
    5. 'bis' → logprob: -3.0639877319335938
    6. 'in' → logprob: -3.1889877319335938
    7. '#' → logprob: -3.6889877319335938
    8. 'set' → logprob: -4.188987731933594
    9. 'for' → logprob: -4.188987731933594
    10. 'found' → logprob: -4.563987731933594

Token 1976: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.5492824912071228
    2. ' test' → logprob: -1.9242825508117676
    3. 'check' → logprob: -2.6742825508117676
    4. '               ' → logprob: -2.7992825508117676
    5. ' in' → logprob: -3.6742825508117676
    6. 'test' → logprob: -4.049282550811768
    7. 'if' → logprob: -4.174282550811768
    8. 'in' → logprob: -4.174282550811768
    9. '                   ' → logprob: -4.174282550811768
    10. ' if' → logprob: -4.174282550811768

Token 1977: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0659584179520607
    2. ' if' → logprob: -3.4409584999084473
    3. 'if' → logprob: -3.5659584999084473
    4. 'matches' → logprob: -7.565958499908447
    5. '                       ' → logprob: -7.690958499908447
    6. '                   ' → logprob: -7.815958499908447
    7. 'for' → logprob: -7.940958499908447
    8. ' for' → logprob: -8.315958023071289
    9. ',' → logprob: -8.315958023071289
    10. ' in' → logprob: -8.690958023071289

Token 1978: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002501343551557511
    2. '                   ' → logprob: -9.750249862670898
    3. 'if' → logprob: -9.875249862670898
    4. ' if' → logprob: -9.875249862670898
    5. ' for' → logprob: -10.125249862670898
    6. 'for' → logprob: -10.750249862670898
    7. '                       ' → logprob: -11.875249862670898
    8. '                
' → logprob: -12.125249862670898
    9. '			' → logprob: -13.000249862670898
    10. '```' → logprob: -13.500249862670898

Token 1979: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30681678652763367
    2. 'if' → logprob: -1.681816816329956
    3. 'for' → logprob: -3.181816816329956
    4. 'found' → logprob: -3.806816816329956
    5. 'matches' → logprob: -4.681816577911377
    6. 'tokens' → logprob: -6.556816577911377
    7. ' if' → logprob: -6.931816577911377
    8. 'idx' → logprob: -7.056816577911377
    9. ' for' → logprob: -7.306816577911377
    10. 'index' → logprob: -8.306817054748535

Token 1980: ' matches' (ID: 15248)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15647046267986298
    2. 'for' → logprob: -2.906470537185669
    3. 'found' → logprob: -2.906470537185669
    4. 'matches' → logprob: -4.15647029876709
    5. 'idx' → logprob: -4.53147029876709
    6. '               ' → logprob: -5.03147029876709
    7. 'match' → logprob: -7.28147029876709
    8. 'index' → logprob: -8.15647029876709
    9. 'indices' → logprob: -8.28147029876709
    10. ' if' → logprob: -8.40647029876709

Token 1981: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -5.1928003813372925e-05
    2. 'at' → logprob: -11.375051498413086
    3. '           ' → logprob: -12.125051498413086
    4. '_set' → logprob: -12.250051498413086
    5. '_positions' → logprob: -12.375051498413086
    6. 'set' → logprob: -12.875051498413086
    7. '   ' → logprob: -13.125051498413086
    8. '               ' → logprob: -13.250051498413086
    9. '[' → logprob: -13.250051498413086
    10. '_end' → logprob: -13.375051498413086

Token 1982: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.03429236263036728
    2. 'pos' → logprob: -3.409292459487915
    3. '[pos' → logprob: -7.909292221069336
    4. 'end' → logprob: -8.409292221069336
    5. '[end' → logprob: -10.159292221069336
    6. '_end' → logprob: -11.659292221069336
    7. '_at' → logprob: -12.659292221069336
    8. '```' → logprob: -13.534292221069336
    9. '[' → logprob: -14.159292221069336
    10. '_positions' → logprob: -14.659292221069336

Token 1983: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -0.0003254527400713414
    2. 'end' → logprob: -8.375325202941895
    3. '[' → logprob: -9.375325202941895
    4. '
' → logprob: -13.000325202941895
    5. '=end' → logprob: -13.375325202941895
    6. '```' → logprob: -13.875325202941895
    7. '[
' → logprob: -14.000325202941895
    8. '(end' → logprob: -14.250325202941895
    9. '_end' → logprob: -14.375325202941895
    10. ',end' → logprob: -14.500325202941895

Token 1984: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.002289067953824997
    2. 'pos' → logprob: -6.127289295196533
    3. '[end' → logprob: -9.752288818359375
    4. 'end' → logprob: -10.127288818359375
    5. 'Pos' → logprob: -13.002288818359375
    6. '```' → logprob: -13.627288818359375
    7. '[pos' → logprob: -14.127288818359375
    8. '_end' → logprob: -14.502288818359375
    9. '
' → logprob: -15.502288818359375
    10. '=end' → logprob: -15.627288818359375

Token 1985: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.931348443031311
    2. '):
' → logprob: -1.431348443031311
    3. ':
' → logprob: -2.3063483238220215
    4. ':' → logprob: -2.6813483238220215
    5. '
' → logprob: -3.4313483238220215
    6. '               ' → logprob: -3.6813483238220215
    7. ').' → logprob: -3.9313483238220215
    8. '):' → logprob: -3.9313483238220215
    9. '                   ' → logprob: -4.1813483238220215
    10. ']' → logprob: -4.4313483238220215

Token 1986: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.7017968893051147
    2. '=' → logprob: -1.8267968893051147
    3. 'contains' → logprob: -1.9517968893051147
    4. ')' → logprob: -2.3267970085144043
    5. ' =' → logprob: -2.8267970085144043
    6. '):
' → logprob: -3.2017970085144043
    7. 'for' → logprob: -3.3267970085144043
    8. ':
' → logprob: -3.3267970085144043
    9. '```' → logprob: -3.8267970085144043
    10. '               ' → logprob: -3.9517970085144043

Token 1987: ' small' (ID: 3291)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.770351231098175
    2. '[(' → logprob: -0.895351231098175
    3. 'any' → logprob: -2.6453511714935303
    4. 'set' → logprob: -3.7703511714935303
    5. '{' → logprob: -4.520351409912109
    6. 'dict' → logprob: -5.770351409912109
    7. ' matches' → logprob: -6.270351409912109
    8. '[' → logprob: -6.395351409912109
    9. 'list' → logprob: -6.395351409912109
    10. '[((' → logprob: -6.520351409912109

Token 1988: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10155301541090012
    2. ':
' → logprob: -3.101552963256836
    3. '                   ' → logprob: -3.351552963256836
    4. ':' → logprob: -4.851552963256836
    5. ' for' → logprob: -6.601552963256836
    6. ' if' → logprob: -6.726552963256836
    7. '                       ' → logprob: -6.976552963256836
    8. ',' → logprob: -7.101552963256836
    9. '           ' → logprob: -7.101552963256836
    10. ' and' → logprob: -7.476552963256836

Token 1989: 'patterns' (ID: 58184)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7913854122161865
    2. 'set' → logprob: -1.0413854122161865
    3. '{
' → logprob: -2.4163854122161865
    4. 'True' → logprob: -2.9163854122161865
    5. '0' → logprob: -4.541385650634766
    6. ')' → logprob: -4.541385650634766
    7. '1' → logprob: -5.541385650634766
    8. '[
' → logprob: -5.666385650634766
    9. ' set' → logprob: -6.041385650634766
    10. ' {(' → logprob: -6.166385650634766

Token 1990: ' ending' (ID: 22013)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.6300442218780518
    2. ':
' → logprob: -1.7550442218780518
    3. '):
' → logprob: -1.8800442218780518
    4. '                   ' → logprob: -2.3800442218780518
    5. ':' → logprob: -2.7550442218780518
    6. '
' → logprob: -3.1300442218780518
    7. '```' → logprob: -3.3800442218780518
    8. ')' → logprob: -3.6300442218780518
    9. '=' → logprob: -3.7550442218780518
    10. 'and' → logprob: -4.005043983459473

Token 1991: ' there' (ID: 1354)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.5552521347999573
    2. ' at' → logprob: -1.0552520751953125
    3. '```' → logprob: -4.1802520751953125
    4. ')' → logprob: -4.3052520751953125
    5. '_at' → logprob: -4.4302520751953125
    6. '[' → logprob: -5.1802520751953125
    7. '                   ' → logprob: -5.4302520751953125
    8. '==' → logprob: -5.8052520751953125
    9. 'and' → logprob: -5.8052520751953125
    10. ',' → logprob: -6.3052520751953125

Token 1992: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4987172484397888
    2. '               ' → logprob: -1.7487173080444336
    3. ':
' → logprob: -2.6237173080444336
    4. ' and' → logprob: -3.3737173080444336
    5. '):' → logprob: -3.8737173080444336
    6. ')' → logprob: -4.123717308044434
    7. '                   ' → logprob: -4.248717308044434
    8. ')
' → logprob: -4.248717308044434
    9. 'and' → logprob: -4.498717308044434
    10. ',' → logprob: -4.873717308044434

Token 1993: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11578251421451569
    2. '                   ' → logprob: -2.2407824993133545
    3. '```' → logprob: -6.990782737731934
    4. '                       ' → logprob: -7.490782737731934
    5. ' and' → logprob: -8.240782737731934
    6. '           ' → logprob: -8.865782737731934
    7. '                ' → logprob: -8.990782737731934
    8. ':' → logprob: -9.115782737731934
    9. ' if' → logprob: -9.115782737731934
    10. '                               ' → logprob: -9.240782737731934

Token 1994: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025223782286047935
    2. '                   ' → logprob: -3.775223731994629
    3. ' for' → logprob: -6.775223731994629
    4. 'for' → logprob: -7.775223731994629
    5. '```' → logprob: -8.650223731994629
    6. '                       ' → logprob: -9.275223731994629
    7. '           ' → logprob: -10.400223731994629
    8. 'if' → logprob: -10.900223731994629
    9. '``' → logprob: -11.275223731994629
    10. '                ' → logprob: -11.400223731994629

Token 1995: ' Check' (ID: 6208)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3913373351097107
    2. 'found' → logprob: -1.7663373947143555
    3. 'for' → logprob: -2.6413373947143555
    4. 'if' → logprob: -2.6413373947143555
    5. '                   ' → logprob: -5.6413373947143555
    6. 'idx' → logprob: -6.3913373947143555
    7. ' for' → logprob: -6.8913373947143555
    8. 'index' → logprob: -7.0163373947143555
    9. '```' → logprob: -7.0163373947143555
    10. ' found' → logprob: -7.2663373947143555

Token 1996: ' if' (ID: 538)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.9608215093612671
    2. ' any' → logprob: -1.460821509361267
    3. '(j' → logprob: -1.710821509361267
    4. '                   ' → logprob: -2.7108216285705566
    5. ' (' → logprob: -2.9608216285705566
    6. '   ' → logprob: -3.9608216285705566
    7. 'if' → logprob: -4.085821628570557
    8. '(any' → logprob: -4.335821628570557
    9. '(' → logprob: -4.585821628570557
    10. '               ' → logprob: -5.085821628570557

Token 1997: ' (' (ID: 350)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.4229816198348999
    2. '(j' → logprob: -1.4229816198349
    3. '(any' → logprob: -2.2979817390441895
    4. ' any' → logprob: -5.9229817390441895
    5. '(' → logprob: -8.047981262207031
    6. ' (' → logprob: -8.422981262207031
    7. '   ' → logprob: -8.797981262207031
    8. '(element' → logprob: -10.922981262207031
    9. ' ' → logprob: -11.047981262207031
    10. 'element' → logprob: -11.047981262207031

Token 1998: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.482821431243792e-05
    2. '(j' → logprob: -9.50008487701416
    3. '   ' → logprob: -12.37508487701416
    4. ' j' → logprob: -13.12508487701416
    5. '
' → logprob: -13.50008487701416
    6. 'element' → logprob: -14.50008487701416
    7. '                   ' → logprob: -14.87508487701416
    8. ' (' → logprob: -15.00008487701416
    9. 'next' → logprob: -15.50008487701416
    10. '                       ' → logprob: -15.62508487701416

Token 1999: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037144700763747096
    2. ',)' → logprob: -8.875370979309082
    3. ',
' → logprob: -9.125370979309082
    4. 'in' → logprob: -9.750370979309082
    5. ' ,' → logprob: -10.625370979309082
    6. ' in' → logprob: -11.750370979309082
    7. ',length' → logprob: -11.750370979309082
    8. ')' → logprob: -12.125370979309082
    9. ',in' → logprob: -12.500370979309082
    10. ',None' → logprob: -12.875370979309082

Token 2000: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -8.180258191714529e-06
    2. ' length' → logprob: -11.750008583068848
    3. 'len' → logprob: -16.25000762939453
    4. '[length' → logprob: -16.75000762939453
    5. '(length' → logprob: -16.87500762939453
    6. ',length' → logprob: -18.87500762939453
    7. 'leng' → logprob: -19.00000762939453
    8. '_length' → logprob: -20.50000762939453
    9. '	length' → logprob: -20.50000762939453
    10. ')' → logprob: -21.12500762939453

Token 2001: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0005234848940744996
    2. '(j' → logprob: -8.125523567199707
    3. ')' → logprob: -9.000523567199707
    4. '(element' → logprob: -10.500523567199707
    5. 'j' → logprob: -10.875523567199707
    6. '```' → logprob: -11.125523567199707
    7. ',' → logprob: -11.375523567199707
    8. '   ' → logprob: -12.250523567199707
    9. '(' → logprob: -12.250523567199707
    10. '[j' → logprob: -12.625523567199707

Token 2002: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002346488763578236
    2. 'in' → logprob: -9.375234603881836
    3. ' in' → logprob: -9.750234603881836
    4. '')' → logprob: -9.750234603881836
    5. ' )' → logprob: -10.750234603881836
    6. '")' → logprob: -12.000234603881836
    7. ')
' → logprob: -13.875234603881836
    8. ',)' → logprob: -14.125234603881836
    9. '               ' → logprob: -14.250234603881836
    10. '                   ' → logprob: -14.375234603881836

Token 2003: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14289714395999908
    2. 'in' → logprob: -2.017897129058838
    3. ')' → logprob: -8.517897605895996
    4. '<|end|>' → logprob: -11.517897605895996
    5. '<|end|>' → logprob: -12.392897605895996
    6. '
' → logprob: -13.267897605895996
    7. ' ' → logprob: -13.642897605895996
    8. '	in' → logprob: -13.892897605895996
    9. '_in' → logprob: -14.392897605895996
    10. ',' → logprob: -14.892897605895996

Token 2004: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.0004920298233628273
    2. ' matches' → logprob: -7.625492095947266
    3. '(matches' → logprob: -12.750492095947266
    4. 'set' → logprob: -15.000492095947266
    5. '_matches' → logprob: -15.125492095947266
    6. '{' → logprob: -15.125492095947266
    7. '   ' → logprob: -15.750492095947266
    8. 'match' → logprob: -17.125492095947266
    9. '.matches' → logprob: -17.250492095947266
    10. '       ' → logprob: -17.625492095947266

Token 2005: '_at' (ID: 8254)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13550913333892822
    2. ':
' → logprob: -2.6355090141296387
    3. '_at' → logprob: -3.6355090141296387
    4. ':' → logprob: -4.885509014129639
    5. '                   ' → logprob: -5.135509014129639
    6. '[end' → logprob: -5.635509014129639
    7. '           ' → logprob: -5.760509014129639
    8. '_end' → logprob: -6.510509014129639
    9. '(end' → logprob: -6.635509014129639
    10. '                       ' → logprob: -7.510509014129639

Token 2006: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.07132481783628464
    2. 'pos' → logprob: -2.6963248252868652
    3. 'end' → logprob: -7.321324825286865
    4. '_at' → logprob: -7.446324825286865
    5. '[end' → logprob: -9.196324348449707
    6. 'at' → logprob: -11.196324348449707
    7. '[pos' → logprob: -11.571324348449707
    8. '```' → logprob: -12.446324348449707
    9. '_end' → logprob: -13.071324348449707
    10. '(end' → logprob: -13.196324348449707

Token 2007: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -4.286852345103398e-05
    2. 'end' → logprob: -10.375042915344238
    3. '[pos' → logprob: -12.125042915344238
    4. '(end' → logprob: -13.250042915344238
    5. '
' → logprob: -14.000042915344238
    6. '[' → logprob: -14.250042915344238
    7. '   ' → logprob: -14.750042915344238
    8. '[(' → logprob: -14.875042915344238
    9. '[j' → logprob: -15.000042915344238
    10. '[
' → logprob: -15.000042915344238

Token 2008: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.003894137917086482
    2. 'pos' → logprob: -5.753894329071045
    3. 'end' → logprob: -7.503894329071045
    4. '[end' → logprob: -8.878893852233887
    5. 'Pos' → logprob: -11.378893852233887
    6. '[pos' → logprob: -11.878893852233887
    7. '_end' → logprob: -12.628893852233887
    8. '_at' → logprob: -13.378893852233887
    9. '[' → logprob: -14.128893852233887
    10. '(end' → logprob: -14.378893852233887

Token 2009: ']
' (ID: 1592)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20358780026435852
    2. '):' → logprob: -2.328587770462036
    3. '               ' → logprob: -3.078587770462036
    4. ')' → logprob: -4.078588008880615
    5. ':
' → logprob: -4.453588008880615
    6. ':' → logprob: -4.703588008880615
    7. '                   ' → logprob: -6.453588008880615
    8. '           ' → logprob: -7.078588008880615
    9. '                       ' → logprob: -8.828587532043457
    10. ']:
' → logprob: -9.828587532043457

Token 2010: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6589429378509521
    2. '                   ' → logprob: -0.7839429378509521
    3. ':
' → logprob: -4.408943176269531
    4. ':' → logprob: -5.283943176269531
    5. '                       ' → logprob: -5.283943176269531
    6. '```' → logprob: -6.283943176269531
    7. ' and' → logprob: -8.158943176269531
    8. 'if' → logprob: -8.408943176269531
    9. '[' → logprob: -8.658943176269531
    10. ',' → logprob: -8.908943176269531

Token 2011: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1997716426849365
    2. 'if' → logprob: -1.8247716426849365
    3. ' if' → logprob: -1.8247716426849365
    4. '                   ' → logprob: -1.8247716426849365
    5. ' for' → logprob: -2.4497716426849365
    6. 'for' → logprob: -2.9497716426849365
    7. 'idx' → logprob: -3.9497716426849365
    8. '                       ' → logprob: -4.449771881103516
    9. ' found' → logprob: -4.574771881103516
    10. 'found' → logprob: -4.824771881103516

Token 2012: ' Using' (ID: 17511)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9300552010536194
    2. 'if' → logprob: -1.1800551414489746
    3. 'found' → logprob: -1.8050551414489746
    4. 'for' → logprob: -2.9300551414489746
    5. 'idx' → logprob: -3.0550551414489746
    6. 'import' → logprob: -4.555055141448975
    7. '#' → logprob: -5.055055141448975
    8. '                   ' → logprob: -5.805055141448975
    9. 'index' → logprob: -6.055055141448975
    10. ' if' → logprob: -6.180055141448975

Token 2013: ' a' (ID: 261)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.12300297617912292
    2. '(j' → logprob: -2.4980030059814453
    3. 'j' → logprob: -4.623003005981445
    4. 'set' → logprob: -4.998003005981445
    5. '(any' → logprob: -5.123003005981445
    6. '(' → logprob: -6.248003005981445
    7. 'matches' → logprob: -6.498003005981445
    8. ' any' → logprob: -6.873003005981445
    9. '{' → logprob: -6.873003005981445
    10. 'binary' → logprob: -6.998003005981445

Token 2014: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.1478753685951233
    2. 'any' → logprob: -2.6478753089904785
    3. 'for' → logprob: -3.2728753089904785
    4. 'True' → logprob: -5.3978753089904785
    5. '{' → logprob: -5.6478753089904785
    6. 'binary' → logprob: -5.7728753089904785
    7. '#' → logprob: -6.0228753089904785
    8. 'next' → logprob: -6.1478753089904785
    9. '{
' → logprob: -6.1478753089904785
    10. 'dict' → logprob: -6.3978753089904785

Token 2015: ' for' (ID: 395)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.7062673568725586
    2. '_matches' → logprob: -1.5812673568725586
    3. ' =' → logprob: -2.2062673568725586
    4. '_end' → logprob: -2.7062673568725586
    5. 'matches' → logprob: -3.7062673568725586
    6. '_set' → logprob: -4.206267356872559
    7. '(matches' → logprob: -4.456267356872559
    8. '(end' → logprob: -4.956267356872559
    9. '               ' → logprob: -5.081267356872559
    10. '((' → logprob: -5.206267356872559

Token 2016: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.10311615467071533
    2. 'end' → logprob: -2.353116035461426
    3. ' matches' → logprob: -6.228116035461426
    4. '(matches' → logprob: -8.478116035461426
    5. '_matches' → logprob: -8.603116035461426
    6. 'match' → logprob: -9.478116035461426
    7. 'matching' → logprob: -9.478116035461426
    8. 'positions' → logprob: -9.603116035461426
    9. ' end' → logprob: -9.728116035461426
    10. '(end' → logprob: -10.103116035461426

Token 2017: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.004141792189329863
    2. '_end' → logprob: -6.379141807556152
    3. '[end' → logprob: -6.379141807556152
    4. '[(' → logprob: -8.504141807556152
    5. '[' → logprob: -9.379141807556152
    6. '```' → logprob: -9.629141807556152
    7. 'At' → logprob: -9.879141807556152
    8. '_pos' → logprob: -9.879141807556152
    9. '[_' → logprob: -10.254141807556152
    10. '
' → logprob: -10.504141807556152

Token 2018: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3876912593841553
    2. '_pos' → logprob: -1.2626912593841553
    3. 'end' → logprob: -3.2626912593841553
    4. '_end' → logprob: -9.512691497802734
    5. '[end' → logprob: -9.887691497802734
    6. '```' → logprob: -10.512691497802734
    7. 'Pos' → logprob: -12.012691497802734
    8. '[' → logprob: -12.262691497802734
    9. '[pos' → logprob: -12.387691497802734
    10. '_at' → logprob: -12.387691497802734

Token 2019: '[end' (ID: 125653)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.7218793630599976
    2. '[end' → logprob: -0.8468793630599976
    3. '_end' → logprob: -2.846879482269287
    4. '_pos' → logprob: -4.346879482269287
    5. '[_' → logprob: -5.346879482269287
    6. '[' → logprob: -5.596879482269287
    7. '[pos' → logprob: -6.221879482269287
    8. '[(' → logprob: -7.721879482269287
    9. 'end' → logprob: -8.346879005432129
    10. '```' → logprob: -8.346879005432129

Token 2020: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.002899974351748824
    2. 'pos' → logprob: -5.877900123596191
    3. '[pos' → logprob: -10.252900123596191
    4. '[end' → logprob: -10.752900123596191
    5. '_end' → logprob: -11.752900123596191
    6. '[_' → logprob: -11.877900123596191
    7. 'Pos' → logprob: -12.002900123596191
    8. '_at' → logprob: -12.502900123596191
    9. 'end' → logprob: -12.877900123596191
    10. '[' → logprob: -13.127900123596191

Token 2021: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2827166318893433
    2. '[j' → logprob: -1.9077166318893433
    3. '[pos' → logprob: -2.282716751098633
    4. '[' → logprob: -2.657716751098633
    5. '_end' → logprob: -2.782716751098633
    6. '_pos' → logprob: -3.032716751098633
    7. '_set' → logprob: -3.282716751098633
    8. ']' → logprob: -3.532716751098633
    9. ')' → logprob: -3.532716751098633
    10. '[end' → logprob: -3.907716751098633

Token 2022: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5768991112709045
    2. '[pos' → logprob: -2.3268990516662598
    3. '_pos' → logprob: -2.7018990516662598
    4. '_at' → logprob: -3.4518990516662598
    5. '_end' → logprob: -3.5768990516662598
    6. '[end' → logprob: -3.7018990516662598
    7. '_positions' → logprob: -3.8268990516662598
    8. '[' → logprob: -3.8268990516662598
    9. '_idx' → logprob: -3.9518990516662598
    10. '_matches' → logprob: -3.9518990516662598

Token 2023: ' better' (ID: 3432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1397564709186554
    2. ' True' → logprob: -2.139756441116333
    3. 'j' → logprob: -6.389756679534912
    4. '(j' → logprob: -6.389756679534912
    5. 'False' → logprob: -6.389756679534912
    6. '(True' → logprob: -6.389756679534912
    7. ' j' → logprob: -6.889756679534912
    8. '1' → logprob: -7.639756679534912
    9. 'true' → logprob: -7.639756679534912
    10. 'each' → logprob: -7.764756679534912

Token 2024: ' lookup' (ID: 37342)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7355692982673645
    2. 'performance' → logprob: -1.7355692386627197
    3. ' performance' → logprob: -1.9855692386627197
    4. '`' → logprob: -2.7355692386627197
    5. ')' → logprob: -2.8605692386627197
    6. '```' → logprob: -3.7355692386627197
    7. 'lookup' → logprob: -3.8605692386627197
    8. ' lookup' → logprob: -4.735569477081299
    9. '0' → logprob: -4.735569477081299
    10. ' ' → logprob: -5.860569477081299

Token 2025: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.919876754283905
    2. '=' → logprob: -1.5448768138885498
    3. ' =' → logprob: -1.7948768138885498
    4. '           ' → logprob: -2.29487681388855
    5. '       ' → logprob: -2.91987681388855
    6. '```' → logprob: -4.294876575469971
    7. '=
' → logprob: -5.044876575469971
    8. 'matches' → logprob: -5.044876575469971
    9. '                   ' → logprob: -5.169876575469971
    10. 'if' → logprob: -5.544876575469971

Token 2026: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4603511095046997
    2. '               ' → logprob: -1.4603511095046997
    3. '[
' → logprob: -1.5853511095046997
    4. 'matches' → logprob: -2.83535099029541
    5. ' matches' → logprob: -3.33535099029541
    6. '           ' → logprob: -3.46035099029541
    7. '       ' → logprob: -3.46035099029541
    8. ' =' → logprob: -3.58535099029541
    9. '```' → logprob: -4.21035099029541
    10. '                   ' → logprob: -4.46035099029541

Token 2027: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01971411518752575
    2. '                   ' → logprob: -5.269713878631592
    3. '           ' → logprob: -5.644713878631592
    4. '                
' → logprob: -5.894713878631592
    5. '                       ' → logprob: -6.144713878631592
    6. '       ' → logprob: -7.019713878631592
    7. 'for' → logprob: -7.644713878631592
    8. '
' → logprob: -8.01971435546875
    9. '```' → logprob: -8.01971435546875
    10. '[' → logprob: -8.14471435546875

Token 2028: ' To' (ID: 2514)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005358144640922546
    2. 'for' → logprob: -6.5053582191467285
    3. '                   ' → logprob: -6.6303582191467285
    4. 'matches' → logprob: -7.2553582191467285
    5. '           ' → logprob: -7.6303582191467285
    6. '                       ' → logprob: -8.00535774230957
    7. '
' → logprob: -8.38035774230957
    8. ' for' → logprob: -8.63035774230957
    9. '```' → logprob: -9.13035774230957
    10. ' matches' → logprob: -9.50535774230957

Token 2029: ' speed' (ID: 7733)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49151065945625305
    2. '
' → logprob: -2.1165106296539307
    3. '           ' → logprob: -2.6165106296539307
    4. '                   ' → logprob: -2.7415106296539307
    5. '       ' → logprob: -3.4915106296539307
    6. 'for' → logprob: -3.9915106296539307
    7. ' for' → logprob: -4.49151086807251
    8. '                
' → logprob: -4.61651086807251
    9. '                       ' → logprob: -4.74151086807251
    10. ' continue' → logprob: -4.86651086807251

Token 2030: ' up' (ID: 869)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19612997770309448
    2. '_at' → logprob: -2.8211300373077393
    3. '           ' → logprob: -2.9461300373077393
    4. '=' → logprob: -3.5711300373077393
    5. '                   ' → logprob: -4.44612979888916
    6. 'for' → logprob: -5.32112979888916
    7. ' =' → logprob: -5.57112979888916
    8. '       ' → logprob: -6.07112979888916
    9. '_j' → logprob: -6.19612979888916
    10. 'matches' → logprob: -6.44612979888916

Token 2031: ' membership' (ID: 20190)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8280905485153198
    2. 'matches' → logprob: -1.4530905485153198
    3. '
' → logprob: -2.3280906677246094
    4. '           ' → logprob: -2.8280906677246094
    5. 'for' → logprob: -2.9530906677246094
    6. ' matches' → logprob: -3.2030906677246094
    7. '       ' → logprob: -4.328090667724609
    8. '                   ' → logprob: -4.328090667724609
    9. '#' → logprob: -4.453090667724609
    10. '```' → logprob: -4.578090667724609

Token 2032: ' check' (ID: 2371)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.1580551266670227
    2. '_j' → logprob: -3.158055067062378
    3. ' =' → logprob: -3.533055067062378
    4. '_' → logprob: -4.033055305480957
    5. '_positions' → logprob: -4.283055305480957
    6. ''_' → logprob: -4.908055305480957
    7. '_pos' → logprob: -5.033055305480957
    8. '_set' → logprob: -5.783055305480957
    9. '_matches' → logprob: -6.158055305480957
    10. '[j' → logprob: -6.408055305480957

Token 2033: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4193407893180847
    2. '           ' → logprob: -1.4193408489227295
    3. '
' → logprob: -3.1693408489227295
    4. '       ' → logprob: -4.66934061050415
    5. '                
' → logprob: -5.04434061050415
    6. 'matches' → logprob: -5.29434061050415
    7. ' matches' → logprob: -5.29434061050415
    8. '            
' → logprob: -5.41934061050415
    9. '                   ' → logprob: -5.54434061050415
    10. 'for' → logprob: -5.79434061050415

Token 2034: ' prepare' (ID: 13708)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1750216484069824
    2. 'for' → logprob: -1.1750216484069824
    3. '
' → logprob: -1.6750216484069824
    4. ' for' → logprob: -2.6750216484069824
    5. '           ' → logprob: -3.0500216484069824
    6. '                   ' → logprob: -3.8000216484069824
    7. 'matches' → logprob: -3.8000216484069824
    8. ' matches' → logprob: -4.925021648406982
    9. '                       ' → logprob: -5.175021648406982
    10. '                
' → logprob: -5.425021648406982

Token 2035: ' sets' (ID: 11982)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.23807328939437866
    2. ' matches' → logprob: -2.1130733489990234
    3. 'match' → logprob: -3.7380733489990234
    4. 'for' → logprob: -3.8630733489990234
    5. '#' → logprob: -4.988073348999023
    6. ' for' → logprob: -5.238073348999023
    7. '_matches' → logprob: -5.238073348999023
    8. '
' → logprob: -5.613073348999023
    9. 'set' → logprob: -5.738073348999023
    10. '           ' → logprob: -5.738073348999023

Token 2036: ' per' (ID: 777)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.084256649017334
    2. '       ' → logprob: -1.209256649017334
    3. '               ' → logprob: -2.584256649017334
    4. ' for' → logprob: -2.959256649017334
    5. 'for' → logprob: -3.084256649017334
    6. '
' → logprob: -3.459256649017334
    7. '            
' → logprob: -3.584256649017334
    8. '[' → logprob: -3.834256649017334
    9. '        
' → logprob: -4.084256649017334
    10. '                
' → logprob: -4.459256649017334

Token 2037: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.572709858417511
    2. 'pos' → logprob: -1.0727097988128662
    3. 'position' → logprob: -2.447709798812866
    4. 'i' → logprob: -5.072710037231445
    5. 'idx' → logprob: -8.072710037231445
    6. 'index' → logprob: -8.572710037231445
    7. '```' → logprob: -8.697710037231445
    8. '
' → logprob: -9.322710037231445
    9. 'matches' → logprob: -9.697710037231445
    10. '#' → logprob: -10.072710037231445

Token 2038: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.012719775550067425
    2. 'pos' → logprob: -4.887719631195068
    3. '_positions' → logprob: -6.512719631195068
    4. '```' → logprob: -7.137719631195068
    5. '
' → logprob: -7.512719631195068
    6. '_' → logprob: -7.637719631195068
    7. 'for' → logprob: -7.887719631195068
    8. '       ' → logprob: -8.387720108032227
    9. ')' → logprob: -8.512720108032227
    10. 'positions' → logprob: -8.887720108032227

Token 2039: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0894948244094849
    2. '               ' → logprob: -1.0894948244094849
    3. '           ' → logprob: -1.4644948244094849
    4. '
' → logprob: -3.3394947052001953
    5. 'for' → logprob: -3.5894947052001953
    6. 'matches' → logprob: -4.089494705200195
    7. '```' → logprob: -5.839494705200195
    8. '_matches' → logprob: -5.964494705200195
    9. ' =' → logprob: -6.339494705200195
    10. ' for' → logprob: -6.589494705200195

Token 2040: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7662214040756226
    2. '               ' → logprob: -0.8912214040756226
    3. '           ' → logprob: -2.266221523284912
    4. 'for' → logprob: -4.516221523284912
    5. '
' → logprob: -6.141221523284912
    6. '        
' → logprob: -6.641221523284912
    7. '                
' → logprob: -6.766221523284912
    8. ' for' → logprob: -7.141221523284912
    9. '                   ' → logprob: -7.391221523284912
    10. 'matches' → logprob: -7.641221523284912

Token 2041: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2799448072910309
    2. '           ' → logprob: -1.7799447774887085
    3. 'for' → logprob: -3.154944896697998
    4. '               ' → logprob: -3.779944896697998
    5. '
' → logprob: -5.279944896697998
    6. 'matches' → logprob: -6.029944896697998
    7. '   ' → logprob: -6.904944896697998
    8. 'if' → logprob: -7.779944896697998
    9. 'match' → logprob: -8.52994441986084
    10. ' for' → logprob: -8.52994441986084

Token 2042: ' Let's' (ID: 41021)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6731417775154114
    2. '           ' → logprob: -1.2981417179107666
    3. '       ' → logprob: -2.0481417179107666
    4. 'for' → logprob: -2.7981417179107666
    5. '
' → logprob: -4.423141956329346
    6. 'if' → logprob: -4.923141956329346
    7. 'matches' → logprob: -5.548141956329346
    8. '#' → logprob: -6.798141956329346
    9. '   ' → logprob: -7.173141956329346
    10. 'match' → logprob: -7.298141956329346

Token 2043: ' prepare' (ID: 13708)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1192508935928345
    2. '       ' → logprob: -1.3692508935928345
    3. 'matches' → logprob: -1.7442508935928345
    4. '           ' → logprob: -2.369250774383545
    5. '#' → logprob: -3.119250774383545
    6. '               ' → logprob: -3.744250774383545
    7. 'continue' → logprob: -3.869250774383545
    8. '
' → logprob: -4.369250774383545
    9. ' for' → logprob: -4.619250774383545
    10. '                   ' → logprob: -4.994250774383545

Token 2044: ' once' (ID: 4730)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.5855510234832764
    2. 'for' → logprob: -1.2105510234832764
    3. 'match' → logprob: -2.7105510234832764
    4. '       ' → logprob: -3.8355510234832764
    5. '   ' → logprob: -4.4605512619018555
    6. '           ' → logprob: -4.8355512619018555
    7. ' for' → logprob: -4.8355512619018555
    8. '#' → logprob: -5.0855512619018555
    9. ' matches' → logprob: -5.2105512619018555
    10. 'sets' → logprob: -5.2105512619018555

Token 2045: ' outside' (ID: 7539)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26372429728507996
    2. 'matches' → logprob: -2.3887243270874023
    3. 'for' → logprob: -2.5137243270874023
    4. '
' → logprob: -3.3887243270874023
    5. '   ' → logprob: -4.888724327087402
    6. '           ' → logprob: -5.263724327087402
    7. 'match' → logprob: -5.388724327087402
    8. '#' → logprob: -6.013724327087402
    9. ' for' → logprob: -6.513724327087402
    10. ' matches' → logprob: -7.263724327087402

Token 2046: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38140130043029785
    2. 'matches' → logprob: -1.7564013004302979
    3. 'for' → logprob: -2.881401300430298
    4. '
' → logprob: -3.131401300430298
    5. '#' → logprob: -4.006401062011719
    6. 'match' → logprob: -4.756401062011719
    7. '   ' → logprob: -5.256401062011719
    8. '           ' → logprob: -5.756401062011719
    9. ' for' → logprob: -6.256401062011719
    10. 'element' → logprob: -6.381401062011719

Token 2047: ' loop' (ID: 11453)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5088616609573364
    2. 'for' → logprob: -1.5088616609573364
    3. 'loop' → logprob: -2.008861541748047
    4. 'main' → logprob: -3.383861541748047
    5. 'def' → logprob: -4.758861541748047
    6. ' loop' → logprob: -7.508861541748047
    7. 'code' → logprob: -8.883861541748047
    8. ' for' → logprob: -9.508861541748047
    9. 'class' → logprob: -9.508861541748047
    10. '#' → logprob: -9.633861541748047

Token 2048: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.598639190196991
    2. 'matches' → logprob: -1.5986392498016357
    3. 'for' → logprob: -2.3486392498016357
    4. '           ' → logprob: -3.0986392498016357
    5. '#' → logprob: -3.3486392498016357
    6. '
' → logprob: -3.4736392498016357
    7. '               ' → logprob: -4.598639011383057
    8. 'if' → logprob: -4.723639011383057
    9. 'match' → logprob: -4.848639011383057
    10. '   ' → logprob: -4.973639011383057

Token 2049: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0747007206082344
    2. '
' → logprob: -3.3247008323669434
    3. '        
' → logprob: -4.199700832366943
    4. '           ' → logprob: -4.449700832366943
    5. '   ' → logprob: -6.074700832366943
    6. '            
' → logprob: -6.574700832366943
    7. '               ' → logprob: -6.824700832366943
    8. '    
' → logprob: -7.074700832366943
    9. 'for' → logprob: -7.324700832366943
    10. '#' → logprob: -7.449700832366943

Token 2050: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8739235997200012
    2. '               ' → logprob: -1.1239235401153564
    3. '           ' → logprob: -1.4989235401153564
    4. '        
' → logprob: -5.1239237785339355
    5. '#' (adapté à ' #') → logprob: -5.3739237785339355
    6. '
' → logprob: -5.3739237785339355
    7. '            
' → logprob: -5.6239237785339355
    8. 'for' → logprob: -5.9989237785339355
    9. '                
' → logprob: -6.1239237785339355
    10. '   ' → logprob: -6.4989237785339355

Token 2051: ' So' (ID: 2632)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8402710556983948
    2. '           ' → logprob: -1.21527099609375
    3. '       ' → logprob: -1.34027099609375
    4. 'for' → logprob: -5.59027099609375
    5. '   ' → logprob: -6.46527099609375
    6. '                   ' → logprob: -6.71527099609375
    7. ')' → logprob: -7.09027099609375
    8. '#' → logprob: -7.59027099609375
    9. '
' → logprob: -7.84027099609375
    10. '```' → logprob: -7.96527099609375

Token 2052: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8879984617233276
    2. 'matches' → logprob: -1.7629984617233276
    3. '           ' → logprob: -2.137998580932617
    4. '#' → logprob: -2.262998580932617
    5. 'if' → logprob: -2.887998580932617
    6. 'for' → logprob: -3.012998580932617
    7. '   ' → logprob: -3.262998580932617
    8. '
' → logprob: -3.762998580932617
    9. 'match' → logprob: -5.137998580932617
    10. ' matches' → logprob: -5.262998580932617

Token 2053: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2618248164653778
    2. '           ' → logprob: -1.6368248462677002
    3. '               ' → logprob: -3.7618248462677
    4. 'for' → logprob: -5.636824607849121
    5. ')' → logprob: -6.136824607849121
    6. '                   ' → logprob: -6.636824607849121
    7. '   ' → logprob: -6.636824607849121
    8. '<|end|>' → logprob: -7.136824607849121
    9. '                       ' → logprob: -7.386824607849121
    10. '#' → logprob: -7.511824607849121

Token 2054: ' outer' (ID: 25982)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.249188780784607
    2. '               ' → logprob: -1.624188780784607
    3. '       ' → logprob: -1.749188780784607
    4. '```' → logprob: -2.3741888999938965
    5. '                   ' → logprob: -2.6241888999938965
    6. ')' → logprob: -3.2491888999938965
    7. 'break' → logprob: -3.3741888999938965
    8. 'for' → logprob: -3.3741888999938965
    9. '
' → logprob: -3.9991888999938965
    10. ']' → logprob: -4.2491888999938965

Token 2055: ' loop' (ID: 11453)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18648286163806915
    2. '           ' → logprob: -1.9364829063415527
    3. '               ' → logprob: -4.186482906341553
    4. '[' → logprob: -6.561482906341553
    5. '        
' → logprob: -6.686482906341553
    6. ')' → logprob: -6.811482906341553
    7. '
' → logprob: -6.811482906341553
    8. '<|end|>' → logprob: -6.811482906341553
    9. 'for' → logprob: -7.061482906341553
    10. '   ' → logprob: -7.061482906341553

Token 2056: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6297343969345093
    2. '           ' → logprob: -0.8797343969345093
    3. '               ' → logprob: -3.004734516143799
    4. 'for' → logprob: -6.629734516143799
    5. ')' → logprob: -7.754734516143799
    6. '   ' → logprob: -8.25473403930664
    7. '                   ' → logprob: -8.50473403930664
    8. '```' → logprob: -8.62973403930664
    9. '#' → logprob: -9.75473403930664
    10. '
' → logprob: -9.75473403930664

Token 2057: ' prepare' (ID: 13708)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7005460262298584
    2. '           ' → logprob: -1.4505460262298584
    3. '               ' → logprob: -2.3255460262298584
    4. '                   ' → logprob: -3.0755460262298584
    5. 'break' → logprob: -3.4505460262298584
    6. '   ' → logprob: -3.8255460262298584
    7. '
' → logprob: -4.4505462646484375
    8. ':
' → logprob: -4.8255462646484375
    9. 'continue' → logprob: -4.8255462646484375
    10. 'for' → logprob: -4.9505462646484375

Token 2058: ' sets' (ID: 11982)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09595931321382523
    2. '           ' → logprob: -2.720959424972534
    3. '
' → logprob: -4.595959186553955
    4. 'matches' → logprob: -5.095959186553955
    5. '#' → logprob: -6.220959186553955
    6. '   ' → logprob: -6.345959186553955
    7. '               ' → logprob: -6.345959186553955
    8. '        
' → logprob: -6.720959186553955
    9. 'for' → logprob: -6.970959186553955
    10. 'match' → logprob: -7.595959186553955

Token 2059: ' outside' (ID: 7539)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10276244580745697
    2. '           ' → logprob: -2.352762460708618
    3. '   ' → logprob: -7.352762222290039
    4. '
' → logprob: -7.727762222290039
    5. '               ' → logprob: -7.977762222290039
    6. '        
' → logprob: -8.352762222290039
    7. 'for' → logprob: -8.352762222290039
    8. '#' → logprob: -8.977762222290039
    9. 'matches' → logprob: -8.977762222290039
    10. '            
' → logprob: -9.102762222290039

Token 2060: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08423686772584915
    2. '           ' → logprob: -2.5842368602752686
    3. '               ' → logprob: -6.459237098693848
    4. '   ' → logprob: -6.959237098693848
    5. 'for' → logprob: -7.459237098693848
    6. 'matches' → logprob: -7.459237098693848
    7. '
' → logprob: -7.709237098693848
    8. '#' → logprob: -8.209237098693848
    9. '        
' → logprob: -8.459237098693848
    10. 'match' → logprob: -8.959237098693848

Token 2061: ' speed' (ID: 7733)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0285112857818604
    2. 'end' → logprob: -1.7785112857818604
    3. '#' → logprob: -1.9035112857818604
    4. 'i' → logprob: -2.1535112857818604
    5. 'each' → logprob: -3.2785112857818604
    6. 'all' → logprob: -3.4035112857818604
    7. 'match' → logprob: -3.7785112857818604
    8. ')' → logprob: -3.7785112857818604
    9. 'matches' → logprob: -4.403511047363281
    10. '_end' → logprob: -4.403511047363281

Token 2062: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14287574589252472
    2. '           ' → logprob: -2.1428756713867188
    3. '   ' → logprob: -5.517875671386719
    4. '               ' → logprob: -6.142875671386719
    5. '[' → logprob: -6.267875671386719
    6. 'for' → logprob: -6.517875671386719
    7. 'matches' → logprob: -7.142875671386719
    8. '
' → logprob: -7.517875671386719
    9. ')' → logprob: -7.517875671386719
    10. '#' → logprob: -7.517875671386719

Token 2063: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08901994675397873
    2. '           ' → logprob: -2.589020013809204
    3. 'matches' → logprob: -5.464019775390625
    4. '               ' → logprob: -6.339019775390625
    5. 'for' → logprob: -6.839019775390625
    6. '   ' → logprob: -6.839019775390625
    7. ')' → logprob: -7.589019775390625
    8. '```' → logprob: -7.839019775390625
    9. 'match' → logprob: -7.964019775390625
    10. '#' → logprob: -8.714019775390625

Token 2064: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05122588574886322
    2. '           ' → logprob: -3.0512259006500244
    3. '               ' → logprob: -7.426225662231445
    4. '
' → logprob: -7.801225662231445
    5. 'for' → logprob: -7.926225662231445
    6. '   ' → logprob: -7.926225662231445
    7. 'matches' → logprob: -8.301225662231445
    8. '#' → logprob: -8.551225662231445
    9. '        
' → logprob: -8.926225662231445
    10. '```' → logprob: -9.426225662231445

Token 2065: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18211619555950165
    2. '   ' → logprob: -2.3071162700653076
    3. 'matches' → logprob: -3.4321162700653076
    4. 'for' → logprob: -4.1821160316467285
    5. '#' → logprob: -4.8071160316467285
    6. ')' → logprob: -5.1821160316467285
    7. '
' → logprob: -5.5571160316467285
    8. '```' → logprob: -7.4321160316467285
    9. ' matches' → logprob: -8.557116508483887
    10. 'match' → logprob: -8.682116508483887

Token 2066: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09089541435241699
    2. '   ' → logprob: -2.965895414352417
    3. '#' → logprob: -4.465895652770996
    4. 'matches' → logprob: -4.715895652770996
    5. 'for' → logprob: -4.840895652770996
    6. '
' → logprob: -5.340895652770996
    7. ')' → logprob: -6.715895652770996
    8. '```' → logprob: -7.965895652770996
    9. ' matches' → logprob: -9.215895652770996
    10. '           ' → logprob: -9.465895652770996

Token 2067: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18699033558368683
    2. '   ' → logprob: -2.436990261077881
    3. '#' (adapté à ' #') → logprob: -3.061990261077881
    4. 'matches' → logprob: -3.436990261077881
    5. 'for' → logprob: -6.061990261077881
    6. '
' → logprob: -7.061990261077881
    7. '```' → logprob: -8.436990737915039
    8. 'match' → logprob: -8.561990737915039
    9. ')' → logprob: -8.811990737915039
    10. ' matches' → logprob: -9.061990737915039

Token 2068: ' Prepare' (ID: 49102)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3011191487312317
    2. '   ' → logprob: -2.176119089126587
    3. 'matches' → logprob: -2.551119089126587
    4. '#' → logprob: -3.426119089126587
    5. 'for' → logprob: -3.551119089126587
    6. '
' → logprob: -5.301119327545166
    7. 'match' → logprob: -7.551119327545166
    8. '           ' → logprob: -7.676119327545166
    9. ' matches' → logprob: -8.051118850708008
    10. '```' → logprob: -8.676118850708008

Token 2069: ' sets' (ID: 11982)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.4538077414035797
    2. 'match' → logprob: -1.3288077116012573
    3. '#' → logprob: -2.578807830810547
    4. 'for' → logprob: -4.453807830810547
    5. 'sets' → logprob: -5.203807830810547
    6. '   ' → logprob: -6.453807830810547
    7. 'pos' → logprob: -7.078807830810547
    8. 'matched' → logprob: -7.203807830810547
    9. 'positions' → logprob: -7.328807830810547
    10. 'pattern' → logprob: -7.453807830810547

Token 2070: ' for' (ID: 395)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.14177986979484558
    2. 'for' → logprob: -2.266779899597168
    3. '       ' → logprob: -4.266779899597168
    4. 'match' → logprob: -4.641779899597168
    5. '   ' → logprob: -6.516779899597168
    6. 'sets' → logprob: -7.141779899597168
    7. '
' → logprob: -7.266779899597168
    8. '#' → logprob: -7.391779899597168
    9. 'set' → logprob: -8.516779899597168
    10. 'prepared' → logprob: -8.766779899597168

Token 2071: ' membership' (ID: 20190)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.617172122001648
    2. 'end' → logprob: -1.367172122001648
    3. 'pos' → logprob: -1.617172122001648
    4. 'matches' → logprob: -5.9921722412109375
    5. '_end' → logprob: -6.6171722412109375
    6. '_pos' → logprob: -6.8671722412109375
    7. 'idx' → logprob: -7.1171722412109375
    8. 'for' → logprob: -7.8671722412109375
    9. '_matches' → logprob: -8.742172241210938
    10. 'e' → logprob: -8.867172241210938

Token 2072: ' check' (ID: 2371)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.185343936085701
    2. '       ' → logprob: -2.6853439807891846
    3. 'for' → logprob: -2.8103439807891846
    4. 'match' → logprob: -4.1853437423706055
    5. '   ' → logprob: -4.3103437423706055
    6. 'membership' → logprob: -5.4353437423706055
    7. 'end' → logprob: -6.5603437423706055
    8. 'sets' → logprob: -6.6853437423706055
    9. '
' → logprob: -6.8103437423706055
    10. '#' → logprob: -6.9353437423706055

Token 2073: '
' (ID: 198)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.3294960856437683
    2. '       ' → logprob: -1.954496145248413
    3. 'for' → logprob: -2.704496145248413
    4. '   ' → logprob: -3.204496145248413
    5. 'match' → logprob: -3.829496145248413
    6. 'end' → logprob: -5.954495906829834
    7. 'pattern' → logprob: -6.329495906829834
    8. 'ends' → logprob: -6.704495906829834
    9. '#' → logprob: -7.204495906829834
    10. 'patterns' → logprob: -7.329495906829834

Token 2074: '   ' (ID: 271)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.03790777921676636
    2. 'for' → logprob: -4.037907600402832
    3. 'match' → logprob: -4.662907600402832
    4. '   ' → logprob: -5.412907600402832
    5. '       ' → logprob: -5.912907600402832
    6. 'sets' → logprob: -7.162907600402832
    7. 'end' → logprob: -7.787907600402832
    8. 'set' → logprob: -7.912907600402832
    9. '#' → logprob: -8.412907600402832
    10. 'pos' → logprob: -8.537907600402832

Token 2075: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3325464427471161
    2. '       ' → logprob: -1.7075464725494385
    3. 'matches' → logprob: -2.3325464725494385
    4. 'match' → logprob: -6.332546234130859
    5. 'for' → logprob: -6.582546234130859
    6. 'set' → logprob: -7.832546234130859
    7. '#' (adapté à ' #') → logprob: -8.08254623413086
    8. '
' → logprob: -8.58254623413086
    9. 'sets' → logprob: -9.20754623413086
    10. 'element' → logprob: -9.33254623413086

Token 2076: ' ---' (ID: 26691)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1330922245979309
    2. '   ' → logprob: -2.133092164993286
    3. 'matches' → logprob: -5.133092403411865
    4. '
' → logprob: -9.508091926574707
    5. 'for' → logprob: -9.633091926574707
    6. 'match' → logprob: -10.383091926574707
    7. '#' → logprob: -10.383091926574707
    8. ' matches' → logprob: -11.133091926574707
    9. '           ' → logprob: -11.633091926574707
    10. '```' → logprob: -11.883091926574707

Token 2077: ' Re' (ID: 907)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030032670125365257
    2. '   ' → logprob: -3.5300326347351074
    3. 'matches' → logprob: -8.780033111572266
    4. '
' → logprob: -9.405033111572266
    5. '```' → logprob: -11.155033111572266
    6. '           ' → logprob: -11.530033111572266
    7. 'for' → logprob: -11.655033111572266
    8. '        
' → logprob: -12.280033111572266
    9. '    
' → logprob: -12.905033111572266
    10. ' matches' → logprob: -13.155033111572266

Token 2078: '-start' (ID: 34953)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14614546298980713
    2. '       ' → logprob: -2.3961453437805176
    3. 'matches' → logprob: -3.3961453437805176
    4. 'for' → logprob: -5.521145343780518
    5. ' matches' → logprob: -6.396145343780518
    6. '#' → logprob: -6.396145343780518
    7. '
' → logprob: -6.771145343780518
    8. '```' → logprob: -7.271145343780518
    9. 'match' → logprob: -7.771145343780518
    10. ' #' → logprob: -7.771145343780518

Token 2079: 'ing' (ID: 289)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039651431143283844
    2. '   ' → logprob: -3.414651393890381
    3. 'matches' → logprob: -5.789651393890381
    4. '
' → logprob: -6.289651393890381
    5. 'for' → logprob: -7.789651393890381
    6. '        
' → logprob: -8.914651870727539
    7. '```' → logprob: -9.039651870727539
    8. '#' → logprob: -9.164651870727539
    9. '           ' → logprob: -9.164651870727539
    10. ' matches' → logprob: -9.914651870727539

Token 2080: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24342702329158783
    2. '   ' → logprob: -1.868427038192749
    3. 'matches' → logprob: -2.868427038192749
    4. 'for' → logprob: -5.99342679977417
    5. 'match' → logprob: -6.99342679977417
    6. '#' → logprob: -7.36842679977417
    7. '
' → logprob: -8.618427276611328
    8. ' matches' → logprob: -8.743427276611328
    9. 'element' → logprob: -9.118427276611328
    10. 'set' → logprob: -9.243427276611328

Token 2081: ' restart' (ID: 33437)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30027318000793457
    2. 'matches' → logprob: -2.3002731800079346
    3. '       ' → logprob: -2.6752731800079346
    4. '#' → logprob: -3.3002731800079346
    5. 'for' → logprob: -3.4252731800079346
    6. '
' → logprob: -5.3002729415893555
    7. ' matches' → logprob: -5.3002729415893555
    8. 'match' → logprob: -5.5502729415893555
    9. ' for' → logprob: -5.6752729415893555
    10. ' #' → logprob: -6.6752729415893555

Token 2082: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04697006940841675
    2. '   ' → logprob: -3.5469701290130615
    3. 'matches' → logprob: -4.546969890594482
    4. 'for' → logprob: -5.546969890594482
    5. '#' → logprob: -7.171969890594482
    6. '
' → logprob: -7.546969890594482
    7. '           ' → logprob: -8.17197036743164
    8. 'match' → logprob: -8.42197036743164
    9. ' matches' → logprob: -8.42197036743164
    10. ' for' → logprob: -9.42197036743164

Token 2083: ' membership' (ID: 20190)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9478744268417358
    2. 'matches' → logprob: -1.1978744268417358
    3. '   ' → logprob: -1.6978744268417358
    4. '#' → logprob: -2.4478745460510254
    5. '       ' → logprob: -4.572874546051025
    6. 'match' → logprob: -4.697874546051025
    7. 'end' → logprob: -4.947874546051025
    8. '```' → logprob: -5.947874546051025
    9. '
' → logprob: -6.072874546051025
    10. 'all' → logprob: -6.197874546051025

Token 2084: ' --' (ID: 2230)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7964624166488647
    2. '   ' → logprob: -0.9214624166488647
    3. 'matches' → logprob: -2.1714625358581543
    4. '#' → logprob: -4.796462535858154
    5. 'for' → logprob: -4.921462535858154
    6. '
' → logprob: -5.296462535858154
    7. ' matches' → logprob: -5.421462535858154
    8. '_matches' → logprob: -6.296462535858154
    9. 'match' → logprob: -6.421462535858154
    10. '```' → logprob: -6.796462535858154

Token 2085: '-

' (ID: 16364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27863892912864685
    2. '   ' → logprob: -1.5286389589309692
    3. 'matches' → logprob: -3.9036388397216797
    4. '
' → logprob: -6.02863883972168
    5. 'for' → logprob: -7.15363883972168
    6. '#' → logprob: -7.40363883972168
    7. 'match' → logprob: -7.65363883972168
    8. ' matches' → logprob: -7.65363883972168
    9. '```' → logprob: -8.40363883972168
    10. '        
' → logprob: -8.40363883972168

Token 2086: 'def' (ID: 1314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04687895253300667
    2. 'matches' → logprob: -3.6718790531158447
    3. '   ' → logprob: -3.9218790531158447
    4. 'match' → logprob: -8.921878814697266
    5. ' matches' → logprob: -9.046878814697266
    6. '#' → logprob: -9.421878814697266
    7. 'for' → logprob: -9.421878814697266
    8. '           ' → logprob: -10.171878814697266
    9. '```' → logprob: -10.421878814697266
    10. '
' → logprob: -11.046878814697266

Token 2087: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.43102872371673584
    2. ' main' → logprob: -1.0560287237167358
    3. 'prepare' → logprob: -6.306028842926025
    4. ' prepare' → logprob: -7.931028842926025
    5. '	main' → logprob: -10.931028366088867
    6. '_prepare' → logprob: -10.931028366088867
    7. 'pre' → logprob: -11.306028366088867
    8. '_main' → logprob: -11.431028366088867
    9. 'matches' → logprob: -11.681028366088867
    10. ' ' → logprob: -11.806028366088867

Token 2088: '_full' (ID: 36973)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06297345459461212
    2. '():
' → logprob: -2.8129734992980957
    3. ':' → logprob: -7.937973499298096
    4. '()' → logprob: -8.687973022460938
    5. '()[' → logprob: -9.062973022460938
    6. '```' → logprob: -9.062973022460938
    7. '[]' → logprob: -9.312973022460938
    8. '():
' → logprob: -10.187973022460938
    9. '[' → logprob: -10.687973022460938
    10. '_' → logprob: -10.812973022460938

Token 2089: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.41781681776046753
    2. '():' → logprob: -1.1678168773651123
    3. '_full' → logprob: -3.6678168773651123
    4. '()' → logprob: -6.792816638946533
    5. '_' → logprob: -7.042816638946533
    6. 'def' → logprob: -7.167816638946533
    7. '```' → logprob: -7.417816638946533
    8. '__' → logprob: -8.167817115783691
    9. '__()
' → logprob: -8.417817115783691
    10. '__":
' → logprob: -8.792817115783691

Token 2090: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10184353590011597
    2. '       ' → logprob: -2.3518435955047607
    3. '```' → logprob: -6.726843357086182
    4. 'import' → logprob: -8.35184383392334
    5. 'def' → logprob: -9.22684383392334
    6. ':' → logprob: -10.35184383392334
    7. '#' → logprob: -11.72684383392334
    8. '(' → logprob: -11.97684383392334
    9. 'matches' → logprob: -12.22684383392334
    10. ')' → logprob: -12.35184383392334

Token 2091: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11436150968074799
    2. '       ' → logprob: -2.239361524581909
    3. 'matches' → logprob: -7.61436128616333
    4. 'import' (adapté à ' import') → logprob: -7.98936128616333
    5. '```' → logprob: -8.239361763000488
    6. 'def' → logprob: -8.239361763000488
    7. '#' → logprob: -9.989361763000488
    8. 'n' → logprob: -9.989361763000488
    9. 'from' → logprob: -10.239361763000488
    10. ' matches' → logprob: -10.989361763000488

Token 2092: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011653167195618153
    2. 'collections' → logprob: -4.761652946472168
    3. 'bis' → logprob: -5.886652946472168
    4. ' sys' → logprob: -8.636652946472168
    5. '=sys' → logprob: -10.511652946472168
    6. 'typing' → logprob: -11.636652946472168
    7. 'array' → logprob: -12.011652946472168
    8. '_sys' → logprob: -12.136652946472168
    9. 'built' → logprob: -12.136652946472168
    10. 'thread' → logprob: -12.136652946472168

Token 2093: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7893000841140747
    2. '       ' → logprob: -1.0393000841140747
    3. '
' → logprob: -2.039299964904785
    4. 'def' → logprob: -4.414299964904785
    5. '```' → logprob: -4.539299964904785
    6. ':' → logprob: -4.914299964904785
    7. 'import' → logprob: -4.914299964904785
    8. '[' → logprob: -5.414299964904785
    9. '()' → logprob: -5.664299964904785
    10. ',' → logprob: -6.289299964904785

Token 2094: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14645852148532867
    2. '
' → logprob: -2.896458625793457
    3. '```' → logprob: -2.896458625793457
    4. 'import' → logprob: -4.521458625793457
    5. '       ' → logprob: -5.521458625793457
    6. 'from' → logprob: -5.771458625793457
    7. 'def' → logprob: -5.771458625793457
    8. '    
' → logprob: -5.896458625793457
    9. '``' → logprob: -7.896458625793457
    10. '        
' → logprob: -8.021458625793457

Token 2095: ' from' (ID: 591)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7892298698425293
    2. '   ' → logprob: -0.9142298698425293
    3. '
' → logprob: -2.4142298698425293
    4. 'def' → logprob: -4.289229869842529
    5. '       ' → logprob: -4.289229869842529
    6. 'import' → logprob: -4.789229869842529
    7. '    
' → logprob: -5.414229869842529
    8. '``' → logprob: -5.664229869842529
    9. '`' → logprob: -6.039229869842529
    10. 'from' (adapté à ' from') → logprob: -6.164229869842529

Token 2096: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0005709059187211096
    2. 'sys' → logprob: -8.250571250915527
    3. ' collections' → logprob: -8.500571250915527
    4. '__' → logprob: -9.750571250915527
    5. 'array' → logprob: -11.500571250915527
    6. '   ' → logprob: -11.625571250915527
    7. 'collection' → logprob: -12.500571250915527
    8. '_A' → logprob: -12.750571250915527
    9. 'context' → logprob: -13.125571250915527
    10. '
' → logprob: -13.125571250915527

Token 2097: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.301832377910614
    2. 'collections' → logprob: -2.301832437515259
    3. '.' → logprob: -2.926832437515259
    4. '```' → logprob: -3.176832437515259
    5. 'def' → logprob: -3.551832437515259
    6. '[
' → logprob: -4.92683219909668
    7. '   ' → logprob: -5.55183219909668
    8. '.collections' → logprob: -5.92683219909668
    9. 'from' → logprob: -6.05183219909668
    10. '.setdefault' → logprob: -6.42683219909668

Token 2098: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.3869946599006653
    2. 'default' → logprob: -1.1369946002960205
    3. 'sys' → logprob: -9.261994361877441
    4. ' deque' → logprob: -11.511994361877441
    5. 'collections' → logprob: -11.636994361877441
    6. ' defaultdict' → logprob: -11.761994361877441
    7. '
' → logprob: -14.011994361877441
    8. '```' → logprob: -15.011994361877441
    9. 'def' → logprob: -15.261994361877441
    10. 'de' → logprob: -15.886994361877441

Token 2099: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18869778513908386
    2. '
' → logprob: -1.9386978149414062
    3. 'def' → logprob: -3.6886978149414062
    4. '    
' → logprob: -6.438697814941406
    5. 'import' → logprob: -7.313697814941406
    6. '```' → logprob: -8.563697814941406
    7. '#' → logprob: -8.688697814941406
    8. '       ' → logprob: -9.563697814941406
    9. '
' → logprob: -9.688697814941406
    10. '        
' → logprob: -9.688697814941406

Token 2100: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -7.696077227592468e-05
    2. ' defaultdict' → logprob: -9.500077247619629
    3. 'set' → logprob: -13.500077247619629
    4. 'Default' → logprob: -15.125077247619629
    5. '
' → logprob: -16.375076293945312
    6. '.default' → logprob: -16.875076293945312
    7. '   ' → logprob: -16.875076293945312
    8. 'DEFAULT' → logprob: -17.000076293945312
    9. 'def' → logprob: -17.500076293945312
    10. '_default' → logprob: -17.500076293945312

Token 2101: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4782027304172516
    2. '   ' → logprob: -0.9782027006149292
    3. 'def' → logprob: -6.603202819824219
    4. 'import' → logprob: -6.728202819824219
    5. '    
' → logprob: -6.853202819824219
    6. '```' → logprob: -9.478202819824219
    7. '

' → logprob: -9.603202819824219
    8. '       ' → logprob: -9.728202819824219
    9. '
' → logprob: -9.853202819824219
    10. ',' → logprob: -10.103202819824219

Token 2102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10628067702054977
    2. '       ' → logprob: -2.731280565261841
    3. '```' → logprob: -4.48128080368042
    4. 'def' → logprob: -4.85628080368042
    5. '
' → logprob: -4.85628080368042
    6. 'matches' → logprob: -5.48128080368042
    7. '#' → logprob: -6.85628080368042
    8. '    
' → logprob: -6.98128080368042
    9. '`' → logprob: -7.48128080368042
    10. ' matches' → logprob: -7.85628080368042

Token 2103: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16666455566883087
    2. 'matches' → logprob: -2.6666646003723145
    3. '       ' → logprob: -2.7916646003723145
    4. 'def' → logprob: -4.6666646003723145
    5. '
' → logprob: -4.9166646003723145
    6. '```' → logprob: -5.9166646003723145
    7. '#' → logprob: -6.5416646003723145
    8. 'element' → logprob: -7.1666646003723145
    9. ' matches' → logprob: -8.166664123535156
    10. 'match' → logprob: -8.291664123535156

Token 2104: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1603960394859314
    2. ' A' → logprob: -1.9103960990905762
    3. '   ' → logprob: -10.160395622253418
    4. '    ' → logprob: -10.285395622253418
    5. ' ' → logprob: -10.285395622253418
    6. ' ' → logprob: -11.410395622253418
    7. '	A' → logprob: -11.535395622253418
    8. 'main' → logprob: -11.785395622253418
    9. ' main' → logprob: -11.785395622253418
    10. '_A' → logprob: -12.535395622253418

Token 2105: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.11226977407932281
    2. 'h' → logprob: -2.737269878387451
    3. '_' → logprob: -4.237269878387451
    4. '   ' → logprob: -5.362269878387451
    5. 'C' → logprob: -6.487269878387451
    6. ' ' → logprob: -6.549769878387451
    7. 'A' → logprob: -6.737269878387451
    8. 'def' → logprob: -6.737269878387451
    9. '  ' → logprob: -6.924769878387451
    10. '(
' → logprob: -6.987269878387451

Token 2106: 'Cor' (ID: 11534)
  Prédit: 'Cor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.0012702319072559476
    2. 'C' → logprob: -7.751270294189453
    3. '   ' → logprob: -8.376270294189453
    4. '_C' → logprob: -9.126270294189453
    5. '
' → logprob: -9.501270294189453
    6. ')' → logprob: -9.751270294189453
    7. 'Coroutine' → logprob: -9.876270294189453
    8. 'cor' → logprob: -10.626270294189453
    9. 'c' → logprob: -10.876270294189453
    10. '```' → logprob: -10.876270294189453

Token 2107: 'as' (ID: 288)
  Prédit: 'Cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -0.18037089705467224
    2. 'ic' → logprob: -1.9303709268569946
    3. 'ick' → logprob: -5.055370807647705
    4. '```' → logprob: -6.430370807647705
    5. '   ' → logprob: -7.180370807647705
    6. 'Corr' → logprob: -7.430370807647705
    7. '``' → logprob: -7.555370807647705
    8. '_C' → logprob: -7.555370807647705
    9. 'ical' → logprob: -7.555370807647705
    10. 'Autom' → logprob: -7.680370807647705

Token 2108: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.0038778618909418583
    2. 'Cor' → logprob: -6.628877639770508
    3. 'ic' → logprob: -7.128877639770508
    4. '```' → logprob: -7.878877639770508
    5. 'ich' → logprob: -8.253877639770508
    6. 'itch' → logprob: -8.628877639770508
    7. '
' → logprob: -8.878877639770508
    8. 'Trie' → logprob: -9.378877639770508
    9. 'Ch' → logprob: -9.503877639770508
    10. 'C' → logprob: -9.878877639770508

Token 2109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04188624396920204
    2. '(' → logprob: -4.666886329650879
    3. '.' → logprob: -5.041886329650879
    4. '   ' → logprob: -5.291886329650879
    5. ':
' → logprob: -5.541886329650879
    6. '[' → logprob: -5.541886329650879
    7. '{' → logprob: -6.416886329650879
    8. '):' → logprob: -6.541886329650879
    9. '[(' → logprob: -6.541886329650879
    10. '((' → logprob: -6.791886329650879

Token 2110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02839573286473751
    2. '   ' → logprob: -4.028395652770996
    3. '(' → logprob: -5.778395652770996
    4. '[' → logprob: -6.778395652770996
    5. '{' → logprob: -7.278395652770996
    6. ':' → logprob: -7.403395652770996
    7. 'def' → logprob: -7.403395652770996
    8. ')' → logprob: -7.528395652770996
    9. '_' → logprob: -7.653395652770996
    10. '```' → logprob: -7.903395652770996

Token 2111: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40518537163734436
    2. '   ' → logprob: -1.905185341835022
    3. '
' → logprob: -3.1551854610443115
    4. 'def' (adapté à ' def') → logprob: -4.030185222625732
    5. '    ' → logprob: -4.280185222625732
    6. '\' → logprob: -4.405185222625732
    7. '{' → logprob: -4.405185222625732
    8. 'import' → logprob: -4.655185222625732
    9. '[' → logprob: -4.905185222625732
    10. '{
' → logprob: -5.030185222625732

Token 2112: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.30745747685432434
    2. 'init' → logprob: -1.557457447052002
    3. '_init' → logprob: -3.057457447052002
    4. 'n' → logprob: -5.682457447052002
    5. '```' → logprob: -6.932457447052002
    6. ' __' → logprob: -7.182457447052002
    7. '`' → logprob: -8.18245792388916
    8. 'def' → logprob: -8.43245792388916
    9. '   ' → logprob: -8.55745792388916
    10. '__
' → logprob: -8.80745792388916

Token 2113: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.6211099028587341
    2. 'nit' → logprob: -1.246109962463379
    3. 'n' → logprob: -2.621109962463379
    4. 'def' → logprob: -3.371109962463379
    5. '__' → logprob: -3.996109962463379
    6. '_' → logprob: -4.621109962463379
    7. 'import' → logprob: -5.371109962463379
    8. '_init' → logprob: -5.371109962463379
    9. '```' → logprob: -5.496109962463379
    10. 'ndef' → logprob: -5.746109962463379

Token 2114: '__(' (ID: 8241)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06920364499092102
    2. '       ' → logprob: -4.069203853607178
    3. '__' → logprob: -4.194203853607178
    4. '__()
' → logprob: -4.569203853607178
    5. '().__' → logprob: -5.319203853607178
    6. '():
' → logprob: -5.569203853607178
    7. '(' → logprob: -5.944203853607178
    8. '()
' → logprob: -6.444203853607178
    9. '        ' → logprob: -6.694203853607178
    10. '(self' → logprob: -6.944203853607178

Token 2115: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.375121533870697
    2. ')' → logprob: -1.3751215934753418
    3. '):
' → logprob: -3.500121593475342
    4. '0' → logprob: -4.125121593475342
    5. '):' → logprob: -4.625121593475342
    6. '__' → logprob: -6.625121593475342
    7. '       ' → logprob: -7.125121593475342
    8. 'def' → logprob: -8.125121116638184
    9. '   ' → logprob: -8.250121116638184
    10. ').__' → logprob: -8.500121116638184

Token 2116: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14019930362701416
    2. '):' → logprob: -2.8901991844177246
    3. ':' → logprob: -3.6401991844177246
    4. '(' → logprob: -4.265199184417725
    5. '   ' → logprob: -4.890199184417725
    6. '[' → logprob: -5.640199184417725
    7. '.' → logprob: -5.640199184417725
    8. ' ' → logprob: -5.765199184417725
    9. ',' → logprob: -5.890199184417725
    10. ' )' → logprob: -6.265199184417725

Token 2117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1414104700088501
    2. '       ' → logprob: -2.6414103507995605
    3. '        ' → logprob: -4.3914103507995605
    4. '   ' → logprob: -5.0164103507995605
    5. ' ' → logprob: -5.5164103507995605
    6. '         ' → logprob: -5.8914103507995605
    7. '               ' → logprob: -6.0164103507995605
    8. '```' → logprob: -6.0164103507995605
    9. '            ' → logprob: -6.1414103507995605
    10. '"' → logprob: -6.2664103507995605

Token 2118: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5043888092041016
    2. 'self' (adapté à ' self') → logprob: -1.7543888092041016
    3. '{' → logprob: -2.6293888092041016
    4. '       ' → logprob: -3.2543888092041016
    5. '               ' → logprob: -3.3793888092041016
    6. '{
' → logprob: -3.3793888092041016
    7. '	       ' → logprob: -5.004388809204102
    8. '{}' → logprob: -5.504388809204102
    9. ' self' → logprob: -6.004388809204102
    10. ' {' → logprob: -6.004388809204102

Token 2119: '.goto' (ID: 119969)
  Prédit: 'goto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goto' → logprob: -0.14689716696739197
    2. '.goto' → logprob: -2.021897077560425
    3. '.' → logprob: -6.646897315979004
    4. '._' → logprob: -6.896897315979004
    5. '   ' → logprob: -8.271897315979004
    6. '	goto' → logprob: -8.646897315979004
    7. ' goto' → logprob: -8.646897315979004
    8. '_g' → logprob: -8.646897315979004
    9. ' ' → logprob: -8.896897315979004
    10. '=' → logprob: -8.896897315979004

Token 2120: ' =' (ID: 314)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.13584376871585846
    2. '{' → logprob: -3.0108437538146973
    3. '[' → logprob: -3.3858437538146973
    4. '=' → logprob: -4.260843753814697
    5. ' =' → logprob: -5.135843753814697
    6. '[
' → logprob: -5.635843753814697
    7. '[((' → logprob: -5.760843753814697
    8. ',' → logprob: -5.885843753814697
    9. '={(' → logprob: -6.010843753814697
    10. '   ' → logprob: -6.010843753814697

Token 2121: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0021249225828796625
    2. 'default' → logprob: -6.502124786376953
    3. '{}
' → logprob: -8.127124786376953
    4. '{' → logprob: -8.377124786376953
    5. ' {}' → logprob: -9.627124786376953
    6. 'dict' → logprob: -11.002124786376953
    7. ' defaultdict' → logprob: -11.627124786376953
    8. '{}

' → logprob: -13.627124786376953
    9. '{}\' → logprob: -13.752124786376953
    10. 'def' → logprob: -14.002124786376953

Token 2122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18106789886951447
    2. '[' → logprob: -2.681067943572998
    3. '[(' → logprob: -3.181067943572998
    4. '{' → logprob: -4.306067943572998
    5. '(' → logprob: -4.306067943572998
    6. '               ' → logprob: -4.806067943572998
    7. ' (' → logprob: -5.181067943572998
    8. '[
' → logprob: -5.306067943572998
    9. '{
' → logprob: -6.056067943572998
    10. '       ' → logprob: -6.306067943572998

Token 2123: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46240514516830444
    2. '               ' → logprob: -2.212405204772949
    3. 'for' → logprob: -2.587405204772949
    4. 'self' (adapté à ' self') → logprob: -2.962405204772949
    5. '{' → logprob: -3.587405204772949
    6. '(' → logprob: -3.712405204772949
    7. '                   ' → logprob: -3.837405204772949
    8. '		' → logprob: -4.837405204772949
    9. '	       ' → logprob: -4.962405204772949
    10. '
' → logprob: -4.962405204772949

Token 2124: '.out' (ID: 3338)
  Prédit: 'goto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'goto' → logprob: -0.4039219617843628
    2. 'out' → logprob: -1.2789219617843628
    3. 'default' → logprob: -3.7789220809936523
    4. 'fail' → logprob: -4.153922080993652
    5. '   ' → logprob: -5.653922080993652
    6. '.goto' → logprob: -6.153922080993652
    7. '       ' → logprob: -6.153922080993652
    8. '
' → logprob: -6.403922080993652
    9. 'from' → logprob: -6.528922080993652
    10. '[(' → logprob: -7.028922080993652

Token 2125: ' =' (ID: 314)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.08385489881038666
    2. '=' → logprob: -2.958854913711548
    3. ' =' → logprob: -3.958854913711548
    4. '.setdefault' → logprob: -5.833854675292969
    5. '={(' → logprob: -5.958854675292969
    6. '[' → logprob: -6.833854675292969
    7. '[((' → logprob: -7.083854675292969
    8. '{' → logprob: -7.208854675292969
    9. '   ' → logprob: -8.958854675292969
    10. ' {(' → logprob: -9.333854675292969

Token 2126: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.0921942703134846e-05
    2. ' defaultdict' → logprob: -12.00001049041748
    3. '"default' → logprob: -14.25001049041748
    4. '(default' → logprob: -14.37501049041748
    5. '
' → logprob: -14.75001049041748
    6. '           ' → logprob: -14.87501049041748
    7. '   ' → logprob: -14.87501049041748
    8. '       ' → logprob: -14.87501049041748
    9. ''default' → logprob: -14.87501049041748
    10. '{' → logprob: -15.00001049041748

Token 2127: '(set' (ID: 25904)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.12746766209602356
    2. '(set' → logprob: -2.127467632293701
    3. 'list' → logprob: -8.50246810913086
    4. 'lambda' → logprob: -9.12746810913086
    5. '=set' → logprob: -9.37746810913086
    6. '       ' → logprob: -9.87746810913086
    7. 'int' → logprob: -10.75246810913086
    8. '(lambda' → logprob: -11.12746810913086
    9. ':set' → logprob: -11.50246810913086
    10. '[' → logprob: -11.75246810913086

Token 2128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08660631626844406
    2. ')
' → logprob: -3.21160626411438
    3. '       ' → logprob: -3.83660626411438
    4. '           ' → logprob: -3.96160626411438
    5. 'def' → logprob: -6.961606502532959
    6. '   ' → logprob: -7.836606502532959
    7. ')
' → logprob: -8.9616060256958
    8. 'for' → logprob: -9.3366060256958
    9. '())' → logprob: -9.7116060256958
    10. '               ' → logprob: -9.8366060256958

Token 2129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018752526491880417
    2. '       ' → logprob: -4.268752574920654
    3. '(' → logprob: -6.893752574920654
    4. '               ' → logprob: -7.018752574920654
    5. '
' → logprob: -7.768752574920654
    6. '   ' → logprob: -7.893752574920654
    7. '{' → logprob: -8.018752098083496
    8. '                   ' → logprob: -8.143752098083496
    9. '{
' → logprob: -8.393752098083496
    10. '[' → logprob: -8.518752098083496

Token 2130: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.37096574902534485
    2. '           ' → logprob: -1.2459657192230225
    3. 'def' → logprob: -4.870965957641602
    4. '		' → logprob: -5.370965957641602
    5. '	       ' → logprob: -5.870965957641602
    6. '       ' → logprob: -6.745965957641602
    7. '                   ' → logprob: -6.745965957641602
    8. '0' → logprob: -6.995965957641602
    9. '	self' → logprob: -7.120965957641602
    10. '               ' → logprob: -7.370965957641602

Token 2131: '.fail' (ID: 48738)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' → logprob: -3.833878508885391e-05
    2. '.fail' → logprob: -10.375038146972656
    3. '_fail' → logprob: -12.750038146972656
    4. ' fail' → logprob: -13.375038146972656
    5. '	fail' → logprob: -13.625038146972656
    6. '   ' → logprob: -14.625038146972656
    7. '
' → logprob: -14.750038146972656
    8. 'def' → logprob: -15.250038146972656
    9. '\t' → logprob: -16.625038146972656
    10. '       ' → logprob: -17.000038146972656

Token 2132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38120436668395996
    2. ' =' → logprob: -1.25620436668396
    3. '[' → logprob: -4.006204605102539
    4. '<|end|>' → logprob: -5.631204605102539
    5. '={' → logprob: -6.131204605102539
    6. '{' → logprob: -6.256204605102539
    7. '={}' → logprob: -6.381204605102539
    8. ':' → logprob: -7.256204605102539
    9. '={
' → logprob: -7.256204605102539
    10. ')' → logprob: -7.381204605102539

Token 2133: ' {}
' (ID: 11421)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.12697850167751312
    2. '{}' → logprob: -2.1269783973693848
    3. '{}
' → logprob: -10.126978874206543
    4. 'default' → logprob: -11.876978874206543
    5. '{}

' → logprob: -13.501978874206543
    6. ' {' → logprob: -13.876978874206543
    7. '0' → logprob: -14.751978874206543
    8. '{})' → logprob: -15.626978874206543
    9. ' {}' → logprob: -15.751978874206543
    10. '{return' → logprob: -15.876978874206543

Token 2134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007216368801891804
    2. '       ' → logprob: -5.007216453552246
    3. '	       ' → logprob: -9.132216453552246
    4. '   ' → logprob: -9.507216453552246
    5. '               ' → logprob: -9.507216453552246
    6. '
' → logprob: -9.757216453552246
    7. '```' → logprob: -10.257216453552246
    8. 'def' → logprob: -10.382216453552246
    9. '{
' → logprob: -10.632216453552246
    10. '{' → logprob: -11.132216453552246

Token 2135: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3913513422012329
    2. 'self' (adapté à ' self') → logprob: -1.141351342201233
    3. '   ' → logprob: -6.641351222991943
    4. '       ' → logprob: -7.016351222991943
    5. '0' → logprob: -7.391351222991943
    6. '                   ' → logprob: -8.016351699829102
    7. '	       ' → logprob: -8.391351699829102
    8. '               ' → logprob: -8.516351699829102
    9. '
' → logprob: -8.641351699829102
    10. 'def' → logprob: -8.891351699829102

Token 2136: '.states' (ID: 122737)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.0034184358082711697
    2. '.states' → logprob: -5.878418445587158
    3. '_states' → logprob: -8.12841796875
    4. 'goto' → logprob: -9.12841796875
    5. ' states' → logprob: -9.25341796875
    6. 'fail' → logprob: -9.62841796875
    7. '   ' → logprob: -10.75341796875
    8. '(states' → logprob: -11.75341796875
    9. '
' → logprob: -11.87841796875
    10. ' ' → logprob: -13.12841796875

Token 2137: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3870694041252136
    2. ' =' → logprob: -1.1370694637298584
    3. ' +=' → logprob: -9.262069702148438
    4. '   ' → logprob: -10.262069702148438
    5. '+=' → logprob: -10.387069702148438
    6. '       ' → logprob: -10.637069702148438
    7. '           ' → logprob: -12.512069702148438
    8. '    ' → logprob: -13.012069702148438
    9. '        ' → logprob: -13.012069702148438
    10. ' ' → logprob: -13.012069702148438

Token 2138: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7372048862162046e-05
    2. ' ' → logprob: -10.750027656555176
    3. '2' → logprob: -12.750027656555176
    4. '   ' → logprob: -13.250027656555176
    5. '       ' → logprob: -14.375027656555176
    6. '0' → logprob: -14.500027656555176
    7. '           ' → logprob: -15.875027656555176
    8. '    ' → logprob: -17.87502670288086
    9. '     ' → logprob: -18.12502670288086
    10. '=' → logprob: -18.25002670288086

Token 2139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1080467781284824e-05
    2. '2' → logprob: -10.125041007995605
    3. '0' → logprob: -14.250041007995605
    4. ' ' → logprob: -16.375041961669922
    5. '   ' → logprob: -16.500041961669922
    6. '       ' → logprob: -18.250041961669922
    7. '=' → logprob: -18.625041961669922
    8. '
' → logprob: -19.000041961669922
    9. '```' → logprob: -19.750041961669922
    10. '12' → logprob: -20.250041961669922

Token 2140: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4329264760017395
    2. '           ' → logprob: -1.3079264163970947
    3. '<|end|>' → logprob: -3.0579264163970947
    4. '
' → logprob: -3.9329264163970947
    5. '   ' → logprob: -5.557926654815674
    6. '```' → logprob: -6.057926654815674
    7. '<|end|>' → logprob: -6.057926654815674
    8. 'def' → logprob: -6.432926654815674
    9. '        
' → logprob: -7.432926654815674
    10. '[' → logprob: -7.682926654815674

Token 2141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46116676926612854
    2. '           ' → logprob: -1.2111667394638062
    3. '   ' → logprob: -2.8361668586730957
    4. '
' → logprob: -4.961166858673096
    5. 'def' → logprob: -6.211166858673096
    6. '```' → logprob: -6.211166858673096
    7. '               ' → logprob: -7.711166858673096
    8. 'for' → logprob: -8.086166381835938
    9. '[' → logprob: -8.086166381835938
    10. '    
' → logprob: -8.461166381835938

Token 2142: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44379565119743347
    2. 'def' (adapté à ' def') → logprob: -1.4437956809997559
    3. '           ' → logprob: -2.193795680999756
    4. '   ' → logprob: -4.943795680999756
    5. '
' → logprob: -6.318795680999756
    6. '               ' → logprob: -6.693795680999756
    7. 'for' → logprob: -8.068795204162598
    8. '```' → logprob: -8.818795204162598
    9. ' def' → logprob: -8.943795204162598
    10. '                   ' → logprob: -9.818795204162598

Token 2143: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0063169547356665134
    2. '__' → logprob: -5.131317138671875
    3. 'goto' → logprob: -9.006317138671875
    4. ' add' → logprob: -9.256317138671875
    5. 'def' → logprob: -9.506317138671875
    6. '_add' → logprob: -9.631317138671875
    7. 'build' → logprob: -11.131317138671875
    8. 'init' → logprob: -13.006317138671875
    9. '   ' → logprob: -13.131317138671875
    10. ' __' → logprob: -13.256317138671875

Token 2144: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.004873658064752817
    2. '_' → logprob: -5.379873752593994
    3. '_token' → logprob: -8.379873275756836
    4. '_w' → logprob: -11.379873275756836
    5. ' _' → logprob: -12.754873275756836
    6. 'Word' → logprob: -13.129873275756836
    7. ''_' → logprob: -13.379873275756836
    8. '_WORD' → logprob: -13.504873275756836
    9. '(' → logprob: -14.254873275756836
    10. '```' → logprob: -14.504873275756836

Token 2145: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2230672538280487
    2. '(self' → logprob: -2.223067283630371
    3. '(s' → logprob: -2.598067283630371
    4. '(word' → logprob: -4.973067283630371
    5. '       ' → logprob: -5.598067283630371
    6. ' (' → logprob: -6.348067283630371
    7. '(
' → logprob: -6.598067283630371
    8. 's' → logprob: -6.973067283630371
    9. '(token' → logprob: -7.973067283630371
    10. 'self' → logprob: -7.973067283630371

Token 2146: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.29012560844421387
    2. ',' → logprob: -1.7901256084442139
    3. '(' → logprob: -2.915125608444214
    4. '(word' → logprob: -3.665125608444214
    5. '       ' → logprob: -6.415125846862793
    6. ')' → logprob: -6.915125846862793
    7. '(s' → logprob: -7.165125846862793
    8. 'self' → logprob: -7.915125846862793
    9. ',self' → logprob: -8.165125846862793
    10. ' (' → logprob: -8.540125846862793

Token 2147: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.06998801231384277
    2. ' word' → logprob: -2.6949880123138428
    3. 's' → logprob: -10.444988250732422
    4. 'self' → logprob: -12.069988250732422
    5. '[word' → logprob: -12.194988250732422
    6. ' s' → logprob: -12.444988250732422
    7. '       ' → logprob: -12.944988250732422
    8. '(word' → logprob: -13.569988250732422
    9. 'w' → logprob: -13.694988250732422
    10. '	word' → logprob: -14.319988250732422

Token 2148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025094281882047653
    2. '           ' → logprob: -7.002509593963623
    3. 'self' → logprob: -8.002509117126465
    4. '       ' → logprob: -8.127509117126465
    5. '[' → logprob: -8.502509117126465
    6. '):' → logprob: -8.752509117126465
    7. '               ' → logprob: -8.877509117126465
    8. ',self' → logprob: -9.127509117126465
    9. '):
' → logprob: -9.252509117126465
    10. ' ,' → logprob: -9.752509117126465

Token 2149: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.0040882546454668045
    2. ' word' → logprob: -5.504088401794434
    3. '0' → logprob: -12.254088401794434
    4. '[word' → logprob: -13.379088401794434
    5. '       ' → logprob: -13.504088401794434
    6. '(word' → logprob: -14.004088401794434
    7. '   ' → logprob: -14.754088401794434
    8. '           ' → logprob: -15.879088401794434
    9. '_word' → logprob: -15.879088401794434
    10. '1' → logprob: -15.879088401794434

Token 2150: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.12282408028841019
    2. ',' → logprob: -2.497824192047119
    3. ''_' → logprob: -4.247824192047119
    4. '',' → logprob: -4.872824192047119
    5. '[' → logprob: -6.247824192047119
    6. '   ' → logprob: -6.622824192047119
    7. '):
' → logprob: -6.747824192047119
    8. '_ids' → logprob: -6.872824192047119
    9. '='_' → logprob: -7.372824192047119
    10. ''' → logprob: -7.497824192047119

Token 2151: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3387633264064789
    2. '):' → logprob: -1.3387633562088013
    3. ',' → logprob: -3.8387632369995117
    4. ':' → logprob: -6.963763236999512
    5. '       ' → logprob: -7.213763236999512
    6. '           ' → logprob: -7.213763236999512
    7. ')' → logprob: -7.963763236999512
    8. '):
' → logprob: -8.088763236999512
    9. '[' → logprob: -8.463763236999512
    10. '          ' → logprob: -9.963763236999512

Token 2152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013764881528913975
    2. '               ' → logprob: -5.01376485824585
    3. '       ' → logprob: -6.63876485824585
    4. '[' → logprob: -6.88876485824585
    5. '```' → logprob: -7.13876485824585
    6. '            ' → logprob: -7.63876485824585
    7. '        ' → logprob: -7.76376485824585
    8. '   ' → logprob: -8.013765335083008
    9. ' ' → logprob: -8.013765335083008
    10. '(' → logprob: -8.138765335083008

Token 2153: ' current' (ID: 2208)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2691771984100342
    2. '           ' → logprob: -2.019177198410034
    3. 'self' → logprob: -3.644177198410034
    4. 'if' → logprob: -4.019177436828613
    5. 'for' → logprob: -4.269177436828613
    6. ' for' → logprob: -4.394177436828613
    7. ' if' → logprob: -4.644177436828613
    8. 'current' (adapté à ' current') → logprob: -4.894177436828613
    9. '   ' → logprob: -5.519177436828613
    10. '```' → logprob: -5.644177436828613

Token 2154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5292601585388184
    2. ' =' → logprob: -0.9042601585388184
    3. '_' → logprob: -6.154260158538818
    4. ')' → logprob: -6.404260158538818
    5. '[' → logprob: -7.904260158538818
    6. '           ' → logprob: -8.029260635375977
    7. '+=' → logprob: -8.654260635375977
    8. ' +=' → logprob: -8.654260635375977
    9. '_tokens' → logprob: -9.029260635375977
    10. ' ' → logprob: -9.029260635375977

Token 2155: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '           ' → logprob: -17.625335693359375
    4. '   ' → logprob: -18.000335693359375
    5. 'current' → logprob: -18.125335693359375
    6. '=' → logprob: -18.625335693359375
    7. '       ' → logprob: -18.750335693359375
    8. '
' → logprob: -18.875335693359375
    9. ' ' → logprob: -19.000335693359375
    10. '1' → logprob: -19.125335693359375

Token 2156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '       ' → logprob: -19.875
    4. '   ' → logprob: -20.0
    5. '           ' → logprob: -20.25
    6. 'current' → logprob: -20.375
    7. '1' → logprob: -20.5
    8. '
' → logprob: -20.875
    9. '(' → logprob: -21.5
    10. '=' → logprob: -21.625

Token 2157: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004386440385133028
    2. '               ' → logprob: -5.5043864250183105
    3. 'for' → logprob: -8.754386901855469
    4. ' for' → logprob: -9.504386901855469
    5. '       ' → logprob: -11.129386901855469
    6. '                   ' → logprob: -11.254386901855469
    7. '<|end|>' → logprob: -11.254386901855469
    8. '```' → logprob: -11.379386901855469
    9. '
' → logprob: -13.129386901855469
    10. ',' → logprob: -13.129386901855469

Token 2158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024167748168110847
    2. '               ' → logprob: -3.774167776107788
    3. '<|end|>' → logprob: -7.899167537689209
    4. '       ' → logprob: -9.024168014526367
    5. 'for' → logprob: -9.149168014526367
    6. ' for' → logprob: -9.774168014526367
    7. '	       ' → logprob: -9.899168014526367
    8. '                   ' → logprob: -10.149168014526367
    9. '	           ' → logprob: -10.149168014526367
    10. '```' → logprob: -10.274168014526367

Token 2159: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5089130401611328
    2. 'for' (adapté à ' for') → logprob: -1.3839130401611328
    3. ' for' → logprob: -2.383913040161133
    4. '               ' → logprob: -3.008913040161133
    5. '	           ' → logprob: -6.133913040161133
    6. '```' → logprob: -7.383913040161133
    7. '            
' → logprob: -7.508913040161133
    8. '            ' → logprob: -7.508913040161133
    9. '
' → logprob: -7.508913040161133
    10. '                   ' → logprob: -8.008913040161133

Token 2160: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.023246292024850845
    2. ' ch' → logprob: -3.7732462882995605
    3. 'c' → logprob: -14.523246765136719
    4. '_ch' → logprob: -16.02324676513672
    5. '   ' → logprob: -16.77324676513672
    6. '(ch' → logprob: -16.89824676513672
    7. ' ' → logprob: -16.89824676513672
    8. '	ch' → logprob: -17.14824676513672
    9. 'char' → logprob: -18.52324676513672
    10. '```' → logprob: -18.89824676513672

Token 2161: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3989826738834381
    2. '               ' → logprob: -2.0239827632904053
    3. 'in' → logprob: -2.7739827632904053
    4. '            ' → logprob: -3.1489827632904053
    5. '           ' → logprob: -3.2739827632904053
    6. '                
' → logprob: -4.648982524871826
    7. ' ' → logprob: -5.148982524871826
    8. '[' → logprob: -5.148982524871826
    9. ',' → logprob: -5.273982524871826
    10. '                ' → logprob: -5.523982524871826

Token 2162: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.014167623594403267
    2. ' word' → logprob: -4.264167785644531
    3. '[word' → logprob: -13.264167785644531
    4. '	word' → logprob: -13.764167785644531
    5. '(word' → logprob: -14.139167785644531
    6. ' ' → logprob: -15.889167785644531
    7. '           ' → logprob: -15.889167785644531
    8. '.word' → logprob: -16.51416778564453
    9. '_word' → logprob: -16.63916778564453
    10. 'self' → logprob: -16.76416778564453

Token 2163: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37356966733932495
    2. ':' → logprob: -1.4985697269439697
    3. ':
' → logprob: -2.6235697269439697
    4. '           ' → logprob: -4.623569488525391
    5. ' in' → logprob: -7.123569488525391
    6. ',' → logprob: -7.123569488525391
    7. '):
' → logprob: -7.248569488525391
    8. '<|end|>' → logprob: -7.373569488525391
    9. '            ' → logprob: -7.998569488525391
    10. '                ' → logprob: -8.12356948852539

Token 2164: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031162876985035837
    2. '           ' → logprob: -9.125311851501465
    3. 'if' → logprob: -9.875311851501465
    4. '	           ' → logprob: -9.875311851501465
    5. ' if' → logprob: -10.500311851501465
    6. '```' → logprob: -11.000311851501465
    7. '                   ' → logprob: -11.250311851501465
    8. '<|end|>' → logprob: -11.500311851501465
    9. '                       ' → logprob: -12.125311851501465
    10. '   ' → logprob: -12.625311851501465

Token 2165: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08716181665658951
    2. '               ' → logprob: -2.7121617794036865
    3. ' if' → logprob: -4.087162017822266
    4. '           ' → logprob: -8.587162017822266
    5. '                   ' → logprob: -9.462162017822266
    6. '   ' → logprob: -11.087162017822266
    7. '{
' → logprob: -12.462162017822266
    8. '                       ' → logprob: -13.587162017822266
    9. 'self' → logprob: -13.962162017822266
    10. '       ' → logprob: -14.087162017822266

Token 2166: ' (' (ID: 350)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.04878617823123932
    2. ' (' → logprob: -3.048786163330078
    3. '(self' → logprob: -9.173786163330078
    4. '               ' → logprob: -9.673786163330078
    5. '                   ' → logprob: -11.923786163330078
    6. '           ' → logprob: -11.923786163330078
    7. '(curr' → logprob: -12.423786163330078
    8. '(not' → logprob: -12.548786163330078
    9. '[current' → logprob: -12.923786163330078
    10. '   ' → logprob: -13.173786163330078

Token 2167: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.0206720617134124e-05
    2. ' current' → logprob: -12.00001049041748
    3. '(current' → logprob: -12.50001049041748
    4. '           ' → logprob: -16.375009536743164
    5. '               ' → logprob: -16.375009536743164
    6. '                   ' → logprob: -18.125009536743164
    7. '$current' → logprob: -18.125009536743164
    8. '=current' → logprob: -18.375009536743164
    9. '.current' → logprob: -18.500009536743164
    10. '[current' → logprob: -18.500009536743164

Token 2168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7014437364414334e-05
    2. ',ch' → logprob: -10.87502670288086
    3. ' ,' → logprob: -13.00002670288086
    4. ',
' → logprob: -13.00002670288086
    5. '           ' → logprob: -14.25002670288086
    6. '               ' → logprob: -14.50002670288086
    7. ',(' → logprob: -14.62502670288086
    8. ',char' → logprob: -15.50002670288086
    9. ',None' → logprob: -15.62502670288086
    10. ',k' → logprob: -15.75002670288086

Token 2169: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0017090904293581843
    2. ' ch' → logprob: -6.376708984375
    3. '(ch' → logprob: -12.376708984375
    4. '[ch' → logprob: -14.251708984375
    5. ''ch' → logprob: -14.501708984375
    6. ' ' → logprob: -15.001708984375
    7. '	ch' → logprob: -15.126708984375
    8. ',ch' → logprob: -15.251708984375
    9. '   ' → logprob: -15.501708984375
    10. '  ' → logprob: -16.501708984375

Token 2170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004763330332934856
    2. '               ' → logprob: -6.254763126373291
    3. ' not' → logprob: -6.379763126373291
    4. 'not' → logprob: -7.254763126373291
    5. ')!=' → logprob: -8.75476360321045
    6. '                   ' → logprob: -9.62976360321045
    7. '           ' → logprob: -9.62976360321045
    8. ']' → logprob: -10.37976360321045
    9. '):
' → logprob: -10.75476360321045
    10. ')]' → logprob: -10.87976360321045

Token 2171: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3954862952232361
    2. 'not' → logprob: -1.1454863548278809
    3. ')' → logprob: -5.520486354827881
    4. ']' → logprob: -5.520486354827881
    5. '               ' → logprob: -8.020485877990723
    6. '           ' → logprob: -9.520485877990723
    7. '[' → logprob: -9.895485877990723
    8. '                   ' → logprob: -10.145485877990723
    9. '	not' → logprob: -11.770485877990723
    10. '<|end|>' → logprob: -11.770485877990723

Token 2172: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2814822793006897
    2. ' in' → logprob: -1.406482219696045
    3. 'self' → logprob: -9.281482696533203
    4. '               ' → logprob: -9.281482696533203
    5. '           ' → logprob: -9.656482696533203
    6. '                   ' → logprob: -9.906482696533203
    7. '=' → logprob: -12.281482696533203
    8. '   ' → logprob: -12.781482696533203
    9. ')' → logprob: -12.906482696533203
    10. ' ' → logprob: -13.156482696533203

Token 2173: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000111768240458332
    2. ' self' → logprob: -9.12511157989502
    3. '           ' → logprob: -12.87511157989502
    4. '               ' → logprob: -15.87511157989502
    5. '                   ' → logprob: -17.250112533569336
    6. '(self' → logprob: -17.750112533569336
    7. '	self' → logprob: -18.500112533569336
    8. '[self' → logprob: -18.875112533569336
    9. '=self' → logprob: -19.000112533569336
    10. '       ' → logprob: -19.000112533569336

Token 2174: '.goto' (ID: 119969)
  Prédit: 'goto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goto' → logprob: -0.6335017085075378
    2. '.goto' → logprob: -0.7585017085075378
    3. '.' → logprob: -7.6335015296936035
    4. 'self' → logprob: -9.008502006530762
    5. '	goto' → logprob: -9.258502006530762
    6. '.main' → logprob: -9.633502006530762
    7. 'main' → logprob: -9.758502006530762
    8. ' goto' → logprob: -10.883502006530762
    9. 'Goto' → logprob: -11.883502006530762
    10. '.go' → logprob: -12.133502006530762

Token 2175: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2056557834148407
    2. ':' → logprob: -2.205655813217163
    3. '               ' → logprob: -2.955655813217163
    4. '                   ' → logprob: -4.330655574798584
    5. '):
' → logprob: -5.580655574798584
    6. '           ' → logprob: -6.205655574798584
    7. '=' → logprob: -6.705655574798584
    8. '[' → logprob: -7.205655574798584
    9. '```' → logprob: -7.830655574798584
    10. '                       ' → logprob: -8.080656051635742

Token 2176: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08395103365182877
    2. '               ' → logprob: -2.583950996398926
    3. ':' → logprob: -6.208950996398926
    4. '                       ' → logprob: -6.458950996398926
    5. ':
' → logprob: -7.083950996398926
    6. '```' → logprob: -8.833950996398926
    7. '           ' → logprob: -9.583950996398926
    8. '):
' → logprob: -9.708950996398926
    9. 'self' → logprob: -10.083950996398926
    10. '=' → logprob: -10.083950996398926

Token 2177: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01692846417427063
    2. '               ' → logprob: -4.641928672790527
    3. ' self' → logprob: -5.391928672790527
    4. '                   ' → logprob: -6.516928672790527
    5. '           ' → logprob: -7.391928672790527
    6. '                       ' → logprob: -8.016928672790527
    7. '   ' → logprob: -8.891928672790527
    8. ' ' → logprob: -11.641928672790527
    9. '                           ' → logprob: -11.891928672790527
    10. '                               ' → logprob: -12.641928672790527

Token 2178: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.09133236110210419
    2. 'goto' → logprob: -2.46633243560791
    3. '.' → logprob: -6.21633243560791
    4. '	goto' → logprob: -8.34133243560791
    5. ' goto' → logprob: -9.71633243560791
    6. '   ' → logprob: -10.59133243560791
    7. '           ' → logprob: -11.34133243560791
    8. '.go' → logprob: -11.46633243560791
    9. '       ' → logprob: -11.46633243560791
    10. ' ' → logprob: -11.84133243560791

Token 2179: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.0802738870552275e-05
    2. '(current' → logprob: -12.25001049041748
    3. '((' → logprob: -12.87501049041748
    4. '[current' → logprob: -12.87501049041748
    5. '(' → logprob: -15.50001049041748
    6. '[
' → logprob: -15.50001049041748
    7. '{' → logprob: -16.250011444091797
    8. '[' → logprob: -16.750011444091797
    9. '           ' → logprob: -16.750011444091797
    10. '   ' → logprob: -17.000011444091797

Token 2180: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -5.512236498361744e-07
    2. ' current' → logprob: -14.500000953674316
    3. '(current' → logprob: -17.25
    4. '   ' → logprob: -18.375
    5. '.current' → logprob: -20.0
    6. '$current' → logprob: -20.0
    7. '[current' → logprob: -20.625
    8. '                   ' → logprob: -20.625
    9. '	current' → logprob: -20.625
    10. '_current' → logprob: -21.625

Token 2181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. ' ,' → logprob: -11.12502384185791
    3. ',
' → logprob: -12.87502384185791
    4. ',current' → logprob: -13.50002384185791
    5. '                   ' → logprob: -13.62502384185791
    6. '   ' → logprob: -13.75002384185791
    7. '           ' → logprob: -13.75002384185791
    8. ',ch' → logprob: -14.75002384185791
    9. '               ' → logprob: -15.25002384185791
    10. '
' → logprob: -16.125022888183594

Token 2182: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.6966398358345032
    2. 'current' → logprob: -0.6966398358345032
    3. ' current' → logprob: -5.8216400146484375
    4. ' ch' → logprob: -7.5716400146484375
    5. '(current' → logprob: -12.571640014648438
    6. '(ch' → logprob: -13.571640014648438
    7. ' ' → logprob: -13.821640014648438
    8. '0' → logprob: -13.821640014648438
    9. 'cur' → logprob: -14.196640014648438
    10. '
' → logprob: -14.696640014648438

Token 2183: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005313486326485872
    2. '                   ' → logprob: -7.750531196594238
    3. '               ' → logprob: -10.250531196594238
    4. ']' → logprob: -10.625531196594238
    5. ')' → logprob: -10.875531196594238
    6. '           ' → logprob: -11.500531196594238
    7. '                       ' → logprob: -12.375531196594238
    8. '')]' → logprob: -12.875531196594238
    9. ')]
' → logprob: -13.625531196594238
    10. '                           ' → logprob: -14.500531196594238

Token 2184: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007674891501665115
    2. ' =' → logprob: -4.882674694061279
    3. ']=' → logprob: -10.132675170898438
    4. ']' → logprob: -10.757675170898438
    5. '                   ' → logprob: -12.757675170898438
    6. ')=' → logprob: -13.507675170898438
    7. ')' → logprob: -13.507675170898438
    8. '=
' → logprob: -13.882675170898438
    9. '               ' → logprob: -15.007675170898438
    10. '                       ' → logprob: -15.757675170898438

Token 2185: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004089796915650368
    2. ' self' → logprob: -5.504089832305908
    3. '                   ' → logprob: -12.25408935546875
    4. '           ' → logprob: -12.50408935546875
    5. '               ' → logprob: -13.75408935546875
    6. '0' → logprob: -13.87908935546875
    7. '                       ' → logprob: -15.50408935546875
    8. ' ' → logprob: -15.87908935546875
    9. '1' → logprob: -16.00408935546875
    10. 'len' → logprob: -16.62908935546875

Token 2186: '.states' (ID: 122737)
  Prédit: '.states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.states' → logprob: -0.47528961300849915
    2. 'states' → logprob: -0.9752895832061768
    3. ' states' → logprob: -6.725289821624756
    4. '(states' → logprob: -12.600289344787598
    5. '           ' → logprob: -12.975289344787598
    6. '.' → logprob: -13.600289344787598
    7. 'States' → logprob: -13.725289344787598
    8. '_states' → logprob: -13.725289344787598
    9. '       ' → logprob: -13.850289344787598
    10. '   ' → logprob: -13.975289344787598

Token 2187: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.054064277559518814
    2. '               ' → logprob: -3.4290642738342285
    3. '           ' → logprob: -4.9290642738342285
    4. '                       ' → logprob: -5.6790642738342285
    5. '<|end|>' → logprob: -5.6790642738342285
    6. '```' → logprob: -6.9290642738342285
    7. '       ' → logprob: -7.1790642738342285
    8. '=' → logprob: -7.5540642738342285
    9. '<|end|>' → logprob: -7.5540642738342285
    10. '   ' → logprob: -7.9290642738342285

Token 2188: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.039487119764089584
    2. '               ' → logprob: -4.164486885070801
    3. '                       ' → logprob: -5.039486885070801
    4. '```' → logprob: -5.414486885070801
    5. '[' → logprob: -5.664486885070801
    6. '           ' → logprob: -6.164486885070801
    7. '                    
' → logprob: -6.664486885070801
    8. '<|end|>' → logprob: -7.039486885070801
    9. '                    ' → logprob: -7.789486885070801
    10. '\' → logprob: -7.914486885070801

Token 2189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.29346975684165955
    2. '                   ' → logprob: -1.418469786643982
    3. '               ' → logprob: -5.2934699058532715
    4. '           ' → logprob: -6.0434699058532715
    5. '                       ' → logprob: -6.1684699058532715
    6. ' self' → logprob: -6.5434699058532715
    7. '   ' → logprob: -7.4184699058532715
    8. '	self' → logprob: -9.043469429016113
    9. '		           ' → logprob: -9.543469429016113
    10. '                           ' → logprob: -9.793469429016113

Token 2190: '.states' (ID: 122737)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.057725150138139725
    2. '.states' → logprob: -2.932725191116333
    3. ' states' → logprob: -7.057724952697754
    4. '                   ' → logprob: -7.307724952697754
    5. '               ' → logprob: -7.807724952697754
    6. '_states' → logprob: -7.932724952697754
    7. '                       ' → logprob: -8.682724952697754
    8. '           ' → logprob: -8.682724952697754
    9. '(states' → logprob: -9.057724952697754
    10. '                           ' → logprob: -10.932724952697754

Token 2191: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0240189041942358
    2. ' +=' → logprob: -3.7740190029144287
    3. '+' → logprob: -8.149019241333008
    4. '```' → logprob: -8.399019241333008
    5. '=' → logprob: -9.149019241333008
    6. '           ' → logprob: -9.649019241333008
    7. '                   ' → logprob: -11.274019241333008
    8. ']+=' → logprob: -11.274019241333008
    9. '               ' → logprob: -11.524019241333008
    10. '   ' → logprob: -12.024019241333008

Token 2192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.250335693359375
    4. ' ' → logprob: -19.250335693359375
    5. '```' → logprob: -20.000335693359375
    6. '`' → logprob: -20.875335693359375
    7. '
' → logprob: -21.375335693359375
    8. '           ' → logprob: -21.375335693359375
    9. '    ' → logprob: -21.500335693359375
    10. '	' → logprob: -21.875335693359375

Token 2193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -19.8750057220459
    4. '```' → logprob: -20.0000057220459
    5. '`' → logprob: -21.5000057220459
    6. '           ' → logprob: -21.7500057220459
    7. '       ' → logprob: -23.0000057220459
    8. '  ' → logprob: -23.1250057220459
    9. '
' → logprob: -23.7500057220459
    10. '    ' → logprob: -23.7500057220459

Token 2194: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7076306343078613
    2. '                   ' → logprob: -1.5826306343078613
    3. '           ' → logprob: -2.4576306343078613
    4. '<|end|>' → logprob: -2.7076306343078613
    5. '```' → logprob: -3.4576306343078613
    6. '                    
' → logprob: -3.8326306343078613
    7. '
' → logprob: -4.332630634307861
    8. '[' → logprob: -4.582630634307861
    9. '  
' → logprob: -5.332630634307861
    10. ' 
' → logprob: -5.457630634307861

Token 2195: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6407729387283325
    2. '           ' → logprob: -1.0157729387283325
    3. '                   ' → logprob: -2.390772819519043
    4. '```' → logprob: -6.015772819519043
    5. '<|end|>' → logprob: -6.140772819519043
    6. '       ' → logprob: -6.515772819519043
    7. '	           ' → logprob: -6.515772819519043
    8. '[' → logprob: -6.640772819519043
    9. '                           ' → logprob: -7.265772819519043
    10. '	' → logprob: -7.390772819519043

Token 2196: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.6241914629936218
    2. ' current' → logprob: -1.7491915225982666
    3. '                   ' → logprob: -2.2491915225982666
    4. '               ' → logprob: -2.6241915225982666
    5. '           ' → logprob: -3.2491915225982666
    6. ' ' → logprob: -4.7491912841796875
    7. '	current' → logprob: -5.1241912841796875
    8. '                    
' → logprob: -5.2491912841796875
    9. '	' → logprob: -5.6241912841796875
    10. ' 
' → logprob: -5.7491912841796875

Token 2197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008622024208307266
    2. ' =' → logprob: -4.758622169494629
    3. '=
' → logprob: -12.633622169494629
    4. ')' → logprob: -13.133622169494629
    5. ' ' → logprob: -14.633622169494629
    6. '<|end|>' → logprob: -14.633622169494629
    7. '   ' → logprob: -15.508622169494629
    8. '_' → logprob: -15.633622169494629
    9. '.' → logprob: -15.758622169494629
    10. '           ' → logprob: -15.883622169494629

Token 2198: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004307884373702109
    2. ' self' → logprob: -7.750430583953857
    3. '               ' → logprob: -17.625431060791016
    4. '(self' → logprob: -17.625431060791016
    5. '           ' → logprob: -17.750431060791016
    6. '                   ' → logprob: -18.625431060791016
    7. '	self' → logprob: -19.000431060791016
    8. '[self' → logprob: -19.375431060791016
    9. '   ' → logprob: -19.625431060791016
    10. '=self' → logprob: -20.000431060791016

Token 2199: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.0041188886389136314
    2. 'goto' → logprob: -5.504118919372559
    3. '.' → logprob: -10.629118919372559
    4. '	goto' → logprob: -11.254118919372559
    5. '.gov' → logprob: -14.129118919372559
    6. '   ' → logprob: -14.504118919372559
    7. '.go' → logprob: -14.754118919372559
    8. ' .' → logprob: -15.004118919372559
    9. 'Goto' → logprob: -15.254118919372559
    10. '```' → logprob: -15.379118919372559

Token 2200: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.339278580620885e-06
    2. '((' → logprob: -13.625001907348633
    3. '[current' → logprob: -15.125001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '[
' → logprob: -15.875001907348633
    6. '[' → logprob: -16.125001907348633
    7. '       ' → logprob: -16.375001907348633
    8. '[((' → logprob: -16.625001907348633
    9. '(current' → logprob: -17.250001907348633
    10. '(' → logprob: -17.250001907348633

Token 2201: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0007118358626030385
    2. '(current' → logprob: -7.250711917877197
    3. ' current' → logprob: -13.625711441040039
    4. '0' → logprob: -15.500711441040039
    5. '[current' → logprob: -16.00071144104004
    6. '
' → logprob: -16.37571144104004
    7. ',current' → logprob: -16.62571144104004
    8. '$current' → logprob: -17.00071144104004
    9. '   ' → logprob: -17.12571144104004
    10. '.current' → logprob: -17.12571144104004

Token 2202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002481078845448792
    2. ',current' → logprob: -9.250247955322266
    3. ',(' → logprob: -9.375247955322266
    4. '(current' → logprob: -10.500247955322266
    5. '(' → logprob: -11.500247955322266
    6. ',ch' → logprob: -11.500247955322266
    7. ' ,' → logprob: -12.125247955322266
    8. '(ch' → logprob: -12.250247955322266
    9. 'current' → logprob: -12.750247955322266
    10. ',
' → logprob: -13.500247955322266

Token 2203: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0024396241642534733
    2. '(ch' → logprob: -6.502439498901367
    3. ' ch' → logprob: -7.002439498901367
    4. '(' → logprob: -11.627439498901367
    5. '[ch' → logprob: -11.877439498901367
    6. ' (' → logprob: -12.377439498901367
    7. ',ch' → logprob: -13.377439498901367
    8. '   ' → logprob: -13.627439498901367
    9. ''ch' → logprob: -13.877439498901367
    10. ' ' → logprob: -14.377439498901367

Token 2204: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012494237162172794
    2. ']' → logprob: -4.887494087219238
    3. ')]
' → logprob: -5.887494087219238
    4. '[(' → logprob: -6.637494087219238
    5. ')' → logprob: -7.387494087219238
    6. ']
' → logprob: -9.387494087219238
    7. ')]
' → logprob: -10.137494087219238
    8. '[' → logprob: -11.762494087219238
    9. '       ' → logprob: -11.887494087219238
    10. '])' → logprob: -12.012494087219238

Token 2205: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0781476497650146
    2. '           ' → logprob: -1.3281476497650146
    3. '```' → logprob: -1.8281476497650146
    4. '<|end|>' → logprob: -2.4531476497650146
    5. '[' → logprob: -2.8281476497650146
    6. ''' → logprob: -4.328147888183594
    7. '       ' → logprob: -4.453147888183594
    8. '(' → logprob: -4.828147888183594
    9. '            
' → logprob: -5.453147888183594
    10. '                
' → logprob: -5.453147888183594

Token 2206: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4024154841899872
    2. '           ' → logprob: -1.1524155139923096
    3. '       ' → logprob: -4.9024152755737305
    4. '               ' → logprob: -5.6524152755737305
    5. ' self' → logprob: -6.0274152755737305
    6. '   ' → logprob: -6.7774152755737305
    7. '                   ' → logprob: -8.02741527557373
    8. ' ' → logprob: -8.90241527557373
    9. '```' → logprob: -8.90241527557373
    10. '                       ' → logprob: -9.15241527557373

Token 2207: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.00021140782337170094
    2. 'out' → logprob: -8.500211715698242
    3. '.' → logprob: -12.625211715698242
    4. '	out' → logprob: -13.500211715698242
    5. ' .' → logprob: -14.250211715698242
    6. '       ' → logprob: -14.375211715698242
    7. '   ' → logprob: -14.375211715698242
    8. '
' → logprob: -14.750211715698242
    9. '_out' → logprob: -14.875211715698242
    10. '```' → logprob: -15.125211715698242

Token 2208: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.500000953674316
    3. 'current' → logprob: -15.625000953674316
    4. '[cur' → logprob: -16.625
    5. '(current' → logprob: -17.125
    6. '[curr' → logprob: -17.375
    7. '[(' → logprob: -17.625
    8. '```' → logprob: -17.875
    9. '   ' → logprob: -18.875
    10. '$current' → logprob: -19.0

Token 2209: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.004154618363827467
    2. ').' → logprob: -5.504154682159424
    3. '.add' → logprob: -10.754154205322266
    4. ']' → logprob: -11.004154205322266
    5. '           ' → logprob: -11.004154205322266
    6. '.' → logprob: -11.379154205322266
    7. '}.' → logprob: -12.129154205322266
    8. '       ' → logprob: -13.254154205322266
    9. ')' → logprob: -14.254154205322266
    10. '[' → logprob: -15.004154205322266

Token 2210: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.25
    3. ' add' → logprob: -17.375
    4. '.add' → logprob: -17.5
    5. 'append' → logprob: -18.875
    6. 'update' → logprob: -19.125
    7. '_add' → logprob: -19.625
    8. '{' → logprob: -19.75
    9. ')add' → logprob: -20.125
    10. '(add' → logprob: -20.125

Token 2211: '(word' (ID: 35459)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.31332409381866455
    2. '(word' → logprob: -1.3133240938186646
    3. ' word' → logprob: -9.813323974609375
    4. '[word' → logprob: -11.938323974609375
    5. '	word' → logprob: -14.688323974609375
    6. '(
' → logprob: -15.063323974609375
    7. '(' → logprob: -15.188323974609375
    8. '_word' → logprob: -17.188323974609375
    9. '{' → logprob: -17.438323974609375
    10. 'WORD' → logprob: -17.563323974609375

Token 2212: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.771655115589965e-05
    2. 'id' → logprob: -11.125018119812012
    3. ')' → logprob: -13.875018119812012
    4. '_ids' → logprob: -14.750018119812012
    5. 'Id' → logprob: -15.000018119812012
    6. '))' → logprob: -15.625018119812012
    7. '```' → logprob: -15.875018119812012
    8. '_i' → logprob: -15.875018119812012
    9. '_token' → logprob: -16.125017166137695
    10. '_' → logprob: -16.625017166137695

Token 2213: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002669384120963514
    2. ')
' → logprob: -9.250267028808594
    3. '       ' → logprob: -9.250267028808594
    4. '           ' → logprob: -10.000267028808594
    5. '<|end|>' → logprob: -11.125267028808594
    6. ' )' → logprob: -12.625267028808594
    7. '   ' → logprob: -13.375267028808594
    8. '               ' → logprob: -13.500267028808594
    9. ')return' → logprob: -13.750267028808594
    10. '
' → logprob: -14.125267028808594

Token 2214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026012875139713287
    2. '           ' → logprob: -4.526012897491455
    3. '```' → logprob: -4.901012897491455
    4. '
' → logprob: -5.901012897491455
    5. 'def' → logprob: -6.026012897491455
    6. '   ' → logprob: -6.276012897491455
    7. '<|end|>' → logprob: -8.401012420654297
    8. '        
' → logprob: -10.776012420654297
    9. '    
' → logprob: -11.026012420654297
    10. '               ' → logprob: -11.151012420654297

Token 2215: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5005509257316589
    2. 'def' (adapté à ' def') → logprob: -1.2505509853363037
    3. '           ' → logprob: -2.8755509853363037
    4. '
' → logprob: -3.5005509853363037
    5. 'for' → logprob: -4.250550746917725
    6. '   ' → logprob: -5.875550746917725
    7. '#' → logprob: -7.000550746917725
    8. '```' → logprob: -7.000550746917725
    9. ' for' → logprob: -7.500550746917725
    10. ' def' → logprob: -8.125551223754883

Token 2216: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.006716555915772915
    2. ' build' → logprob: -5.006716728210449
    3. '_build' → logprob: -14.00671672821045
    4. '	build' → logprob: -15.63171672821045
    5. 'def' → logprob: -16.381715774536133
    6. '.build' → logprob: -16.881715774536133
    7. ' ' → logprob: -17.006715774536133
    8. '
' → logprob: -17.381715774536133
    9. 'Build' → logprob: -18.756715774536133
    10. '(build' → logprob: -18.881715774536133

Token 2217: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011876902543008327
    2. '(' → logprob: -5.261877059936523
    3. '       ' → logprob: -5.386877059936523
    4. '(
' → logprob: -6.386877059936523
    5. '           ' → logprob: -9.386877059936523
    6. '   ' → logprob: -9.511877059936523
    7. 'self' → logprob: -10.261877059936523
    8. '()' → logprob: -10.511877059936523
    9. '{
' → logprob: -10.511877059936523
    10. 'def' → logprob: -10.511877059936523

Token 2218: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.251268208026886
    2. '):' → logprob: -1.6262681484222412
    3. '       ' → logprob: -4.37626838684082
    4. '   ' → logprob: -5.87626838684082
    5. '(self' → logprob: -6.25126838684082
    6. '():
' → logprob: -6.37626838684082
    7. ')' → logprob: -6.50126838684082
    8. ':' → logprob: -7.12626838684082
    9. 'def' → logprob: -7.37626838684082
    10. '()' → logprob: -8.00126838684082

Token 2219: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10300853103399277
    2. '           ' → logprob: -2.353008508682251
    3. '```' → logprob: -6.60300874710083
    4. '
' → logprob: -7.10300874710083
    5. '(' → logprob: -8.728008270263672
    6. '()' → logprob: -9.228008270263672
    7. '​' → logprob: -9.978008270263672
    8. 'self' → logprob: -10.228008270263672
    9. '               ' → logprob: -10.353008270263672
    10. 'def' → logprob: -10.603008270263672

Token 2220: ' queue' (ID: 13661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010002675466239452
    2. 'queue' (adapté à ' queue') → logprob: -5.135002613067627
    3. '	' → logprob: -6.760002613067627
    4. '```' → logprob: -6.760002613067627
    5. '	       ' → logprob: -7.385002613067627
    6. 'def' → logprob: -8.260003089904785
    7. '
' → logprob: -8.885003089904785
    8. '           ' → logprob: -9.135003089904785
    9. '   ' → logprob: -9.260003089904785
    10. ' ' → logprob: -9.385003089904785

Token 2221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6936043500900269
    2. ' =' → logprob: -0.6936043500900269
    3. '.append' → logprob: -8.443604469299316
    4. '   ' → logprob: -10.068604469299316
    5. '       ' → logprob: -10.318604469299316
    6. ')' → logprob: -10.318604469299316
    7. '.clear' → logprob: -10.443604469299316
    8. '.' → logprob: -10.443604469299316
    9. '.extend' → logprob: -11.193604469299316
    10. '.enqueue' → logprob: -11.818604469299316

Token 2222: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -9.615255839889869e-05
    2. ' deque' → logprob: -9.250096321105957
    3. 'Deque' → logprob: -17.62509536743164
    4. '   ' → logprob: -19.62509536743164
    5. '```' → logprob: -19.87509536743164
    6. 'dq' → logprob: -20.12509536743164
    7. 'queue' → logprob: -20.12509536743164
    8. 'collections' → logprob: -20.37509536743164
    9. 'de' → logprob: -20.87509536743164
    10. 'deb' → logprob: -21.12509536743164

Token 2223: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.38690683245658875
    2. '()' → logprob: -1.1369068622589111
    3. '()\' → logprob: -11.261906623840332
    4. '       ' → logprob: -11.636906623840332
    5. '()

' → logprob: -12.261906623840332
    6. '()
' → logprob: -12.261906623840332
    7. '();' → logprob: -13.386906623840332
    8. '(' → logprob: -14.511906623840332
    9. '(queue' → logprob: -14.886906623840332
    10. '();
' → logprob: -15.136906623840332

Token 2224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0054511092603206635
    2. '       ' → logprob: -5.630451202392578
    3. '               ' → logprob: -7.005451202392578
    4. '	       ' → logprob: -8.005451202392578
    5. 'self' → logprob: -8.380451202392578
    6. '
' → logprob: -9.130451202392578
    7. '```' → logprob: -9.255451202392578
    8. '		' → logprob: -9.630451202392578
    9. '   ' → logprob: -11.130451202392578
    10. 'for' → logprob: -11.130451202392578

Token 2225: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.44202762842178345
    2. '           ' → logprob: -1.0670275688171387
    3. 'for' → logprob: -4.442027568817139
    4. 'while' → logprob: -7.192027568817139
    5. '       ' → logprob: -7.692027568817139
    6. ' self' → logprob: -9.442028045654297
    7. '   ' → logprob: -9.692028045654297
    8. '
' → logprob: -10.317028045654297
    9. '               ' → logprob: -10.317028045654297
    10. ' for' → logprob: -11.192028045654297

Token 2226: '.fail' (ID: 48738)
  Prédit: '.fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fail' → logprob: -0.04869943857192993
    2. 'fail' → logprob: -3.048699378967285
    3. '	fail' → logprob: -9.673699378967285
    4. '_fail' → logprob: -11.423699378967285
    5. ' fail' → logprob: -11.423699378967285
    6. '   ' → logprob: -11.673699378967285
    7. '.' → logprob: -12.548699378967285
    8. '
' → logprob: -13.048699378967285
    9. ' .' → logprob: -13.173699378967285
    10. 'Fail' → logprob: -13.423699378967285

Token 2227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18675832450389862
    2. ' =' → logprob: -1.936758279800415
    3. '[' → logprob: -3.686758279800415
    4. '={' → logprob: -7.186758518218994
    5. '{' → logprob: -7.936758518218994
    6. ' ={' → logprob: -12.311758041381836
    7. ' ' → logprob: -12.936758041381836
    8. '   ' → logprob: -13.311758041381836
    9. '       ' → logprob: -13.311758041381836
    10. '=[' → logprob: -13.561758041381836

Token 2228: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -7.941850526549388e-06
    2. ' {' → logprob: -11.750007629394531
    3. 'default' → logprob: -18.25000762939453
    4. '{}' → logprob: -18.50000762939453
    5. '           ' → logprob: -19.25000762939453
    6. '{
' → logprob: -20.87500762939453
    7. '   ' → logprob: -21.00000762939453
    8. '[' → logprob: -21.62500762939453
    9. '       ' → logprob: -22.00000762939453
    10. '{{' → logprob: -22.62500762939453

Token 2229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '{' → logprob: -19.75
    4. '           ' → logprob: -20.125
    5. '   ' → logprob: -21.0
    6. '       ' → logprob: -21.25
    7. '(' → logprob: -21.75
    8. '
' → logprob: -22.125
    9. '               ' → logprob: -22.625
    10. '{
' → logprob: -23.25

Token 2230: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010878815373871475
    2. '           ' → logprob: -9.25010871887207
    3. '0' → logprob: -12.37510871887207
    4. ' :' → logprob: -12.37510871887207
    5. '               ' → logprob: -13.12510871887207
    6. '       ' → logprob: -14.37510871887207
    7. '[' → logprob: -15.12510871887207
    8. '            ' → logprob: -15.25010871887207
    9. '=' → logprob: -15.37510871887207
    10. '                   ' → logprob: -15.75010871887207

Token 2231: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.25020408630371
    4. ' ' → logprob: -19.25020408630371
    5. '  ' → logprob: -20.62520408630371
    6. '۰' → logprob: -20.62520408630371
    7. '	' → logprob: -21.75020408630371
    8. '﻿' → logprob: -22.25020408630371
    9. '     ' → logprob: -22.37520408630371
    10. '       ' → logprob: -22.43770408630371

Token 2232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.125001907348633
    4. '۰' → logprob: -19.625001907348633
    5. '  ' → logprob: -21.500001907348633
    6. ' ' → logprob: -21.750001907348633
    7. '０' → logprob: -22.187501907348633
    8. '```' → logprob: -22.250001907348633
    9. '﻿' → logprob: -22.562501907348633
    10. '     ' → logprob: -22.625001907348633

Token 2233: '}
' (ID: 739)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015041481237858534
    2. '}
' → logprob: -7.251503944396973
    3. '}' → logprob: -8.001503944396973
    4. '       ' → logprob: -8.501503944396973
    5. '               ' → logprob: -9.126503944396973
    6. 'for' → logprob: -10.001503944396973
    7. '
' → logprob: -10.001503944396973
    8. ' for' → logprob: -11.251503944396973
    9. '                   ' → logprob: -11.751503944396973
    10. '   ' → logprob: -12.126503944396973

Token 2234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009084834600798786
    2. '       ' → logprob: -7.125908374786377
    3. ' for' → logprob: -10.500908851623535
    4. 'for' → logprob: -10.625908851623535
    5. '
' → logprob: -11.125908851623535
    6. '   ' → logprob: -11.250908851623535
    7. '               ' → logprob: -11.750908851623535
    8. '	       ' → logprob: -11.750908851623535
    9. '                   ' → logprob: -13.250908851623535
    10. '		' → logprob: -13.375908851623535

Token 2235: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18489398062229156
    2. '           ' → logprob: -1.8098939657211304
    3. '       ' → logprob: -6.18489408493042
    4. ' for' → logprob: -6.30989408493042
    5. 'while' → logprob: -6.80989408493042
    6. '   ' → logprob: -9.059893608093262
    7. '               ' → logprob: -11.059893608093262
    8. '
' → logprob: -11.559893608093262
    9. '	for' → logprob: -12.934893608093262
    10. ' ' → logprob: -13.184893608093262

Token 2236: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.002095303265377879
    2. ' ch' → logprob: -6.2520952224731445
    3. '(ch' → logprob: -9.627095222473145
    4. '(' → logprob: -10.127095222473145
    5. ''ch' → logprob: -10.127095222473145
    6. 'c' → logprob: -11.252095222473145
    7. ''' → logprob: -13.002095222473145
    8. '('' → logprob: -13.752095222473145
    9. ' (' → logprob: -13.752095222473145
    10. '   ' → logprob: -14.002095222473145

Token 2237: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009811456315219402
    2. 'in' → logprob: -4.6348114013671875
    3. '           ' → logprob: -10.009811401367188
    4. 'import' → logprob: -13.009811401367188
    5. ' ' → logprob: -13.509811401367188
    6. '               ' → logprob: -13.634811401367188
    7. '   ' → logprob: -13.884811401367188
    8. 'In' → logprob: -14.259811401367188
    9. '            ' → logprob: -14.259811401367188
    10. '       ' → logprob: -14.759811401367188

Token 2238: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003372502396814525
    2. ' '' → logprob: -8.625337600708008
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -10.000337600708008
    4. ''al' → logprob: -10.125337600708008
    5. '"' → logprob: -10.500337600708008
    6. ''a' → logprob: -11.000337600708008
    7. ''import' → logprob: -11.125337600708008
    8. '
' → logprob: -12.375337600708008
    9. ''ab' → logprob: -12.750337600708008
    10. ''s' → logprob: -14.250337600708008

Token 2239: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -3.650518920039758e-06
    2. ''' → logprob: -12.625003814697266
    3. 'abcdefghijkl' → logprob: -15.625003814697266
    4. 'abc' → logprob: -16.000003814697266
    5. 'abcdef' → logprob: -16.875003814697266
    6. 'abcdefgh' → logprob: -17.625003814697266
    7. '"' → logprob: -19.000003814697266
    8. ' abc' → logprob: -19.125003814697266
    9. 'import' → logprob: -19.250003814697266
    10. '`' → logprob: -19.500003814697266

Token 2240: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6857131123542786
    2. '               ' → logprob: -0.9357131123542786
    3. ':' → logprob: -3.060713052749634
    4. '':
' → logprob: -3.185713052749634
    5. '           ' → logprob: -4.310713291168213
    6. '):
' → logprob: -7.060713291168213
    7. '':' → logprob: -7.060713291168213
    8. ''' → logprob: -8.560712814331055
    9. ''):
' → logprob: -9.185712814331055
    10. '                   ' → logprob: -9.560712814331055

Token 2241: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.458980300929397e-05
    2. '   ' → logprob: -10.37508487701416
    3. '```' → logprob: -11.37508487701416
    4. 'self' → logprob: -11.75008487701416
    5. '                   ' → logprob: -11.87508487701416
    6. '           ' → logprob: -11.87508487701416
    7. '	           ' → logprob: -12.62508487701416
    8. 'for' → logprob: -12.62508487701416
    9. ' for' → logprob: -12.75008487701416
    10. '
' → logprob: -12.75008487701416

Token 2242: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.021117139607667923
    2. '               ' → logprob: -3.8961172103881836
    3. '                   ' → logprob: -7.771117210388184
    4. '   ' → logprob: -8.896117210388184
    5. '           ' → logprob: -11.646117210388184
    6. ' nxt' → logprob: -12.646117210388184
    7. 'next' → logprob: -13.521117210388184
    8. '       ' → logprob: -14.271117210388184
    9. '                       ' → logprob: -14.521117210388184
    10. ' ' → logprob: -14.646117210388184

Token 2243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0708809345960617
    2. ' =' → logprob: -2.695880889892578
    3. '               ' → logprob: -7.195880889892578
    4. '                   ' → logprob: -8.695880889892578
    5. '           ' → logprob: -12.320880889892578
    6. 'def' → logprob: -12.320880889892578
    7. '=self' → logprob: -12.445880889892578
    8. '=n' → logprob: -12.820880889892578
    9. 'self' → logprob: -13.445880889892578
    10. '                ' → logprob: -13.570880889892578

Token 2244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008092674543149769
    2. ' self' → logprob: -7.125809192657471
    3. '               ' → logprob: -12.500809669494629
    4. '           ' → logprob: -14.625809669494629
    5. '                   ' → logprob: -14.750809669494629
    6. '(self' → logprob: -16.375808715820312
    7. '0' → logprob: -16.875808715820312
    8. '	self' → logprob: -17.625808715820312
    9. ' ' → logprob: -18.000808715820312
    10. '=self' → logprob: -18.250808715820312

Token 2245: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.576021134853363
    2. 'goto' → logprob: -0.826021134853363
    3. '	goto' → logprob: -9.826021194458008
    4. '.' → logprob: -11.826021194458008
    5. ' goto' → logprob: -12.076021194458008
    6. '```' → logprob: -12.576021194458008
    7. 'self' → logprob: -12.826021194458008
    8. '   ' → logprob: -13.201021194458008
    9. '
' → logprob: -14.201021194458008
    10. 'got' → logprob: -14.576021194458008

Token 2246: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.029978299513459206
    2. '[(' → logprob: -3.5299782752990723
    3. '.' → logprob: -9.02997875213623
    4. 'get' → logprob: -9.27997875213623
    5. '(' → logprob: -11.77997875213623
    6. '   ' → logprob: -13.40497875213623
    7. '((' → logprob: -13.40497875213623
    8. '[' → logprob: -14.02997875213623
    9. ' .' → logprob: -14.27997875213623
    10. '       ' → logprob: -14.27997875213623

Token 2247: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062098436057567596
    2. '((' → logprob: -2.812098503112793
    3. ' (' → logprob: -9.187098503112793
    4. '[(' → logprob: -10.812098503112793
    5. ' ' → logprob: -12.437098503112793
    6. '   ' → logprob: -12.937098503112793
    7. '{' → logprob: -14.312098503112793
    8. '0' → logprob: -14.562098503112793
    9. '```' → logprob: -15.562098503112793
    10. ' ((' → logprob: -15.937098503112793

Token 2248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5451681974809617e-05
    2. '(' → logprob: -11.125015258789062
    3. ' ' → logprob: -14.375015258789062
    4. '   ' → logprob: -17.250015258789062
    5. ' (' → logprob: -18.000015258789062
    6. '
' → logprob: -19.250015258789062
    7. '  ' → logprob: -20.250015258789062
    8. '`' → logprob: -20.875015258789062
    9. '۰' → logprob: -21.000015258789062
    10. '       ' → logprob: -21.125015258789062

Token 2249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005828189896419644
    2. ',ch' → logprob: -7.500582695007324
    3. ' ,' → logprob: -11.125582695007324
    4. '               ' → logprob: -11.750582695007324
    5. '           ' → logprob: -13.500582695007324
    6. '   ' → logprob: -13.625582695007324
    7. ',
' → logprob: -13.750582695007324
    8. '(ch' → logprob: -14.000582695007324
    9. '                   ' → logprob: -14.125582695007324
    10. ',(' → logprob: -14.750582695007324

Token 2250: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.000514548271894455
    2. ' ch' → logprob: -7.625514507293701
    3. ''ch' → logprob: -10.62551498413086
    4. '(ch' → logprob: -14.12551498413086
    5. '[ch' → logprob: -14.50051498413086
    6. ',ch' → logprob: -15.12551498413086
    7. '	ch' → logprob: -15.12551498413086
    8. ' ' → logprob: -15.50051498413086
    9. '   ' → logprob: -16.62551498413086
    10. '  ' → logprob: -16.87551498413086

Token 2251: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0009963677730411291
    2. ',' → logprob: -7.0009965896606445
    3. '               ' → logprob: -9.875996589660645
    4. ',),' → logprob: -10.625996589660645
    5. '                   ' → logprob: -13.625996589660645
    6. '))
' → logprob: -13.750996589660645
    7. ')' → logprob: -13.750996589660645
    8. '],' → logprob: -13.750996589660645
    9. ',None' → logprob: -13.875996589660645
    10. '           ' → logprob: -13.875996589660645

Token 2252: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011957239359617233
    2. ' None' → logprob: -4.511957168579102
    3. '0' → logprob: -7.011957168579102
    4. ' ' → logprob: -12.261957168579102
    5. '   ' → logprob: -13.011957168579102
    6. ')' → logprob: -14.636957168579102
    7. '_None' → logprob: -16.0119571685791
    8. '  ' → logprob: -16.1369571685791
    9. '(None' → logprob: -16.2619571685791
    10. '=None' → logprob: -16.3869571685791

Token 2253: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1878533810377121
    2. ')
' → logprob: -1.8128533363342285
    3. '):
' → logprob: -5.5628533363342285
    4. '           ' → logprob: -6.4378533363342285
    5. ')' → logprob: -6.9378533363342285
    6. '```' → logprob: -7.0628533363342285
    7. '                   ' → logprob: -7.4378533363342285
    8. ':
' → logprob: -10.187853813171387
    9. '')
' → logprob: -10.312853813171387
    10. '       ' → logprob: -10.562853813171387

Token 2254: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011020473204553127
    2. '                   ' → logprob: -4.636020660400391
    3. '```' → logprob: -6.761020660400391
    4. '           ' → logprob: -10.13602066040039
    5. ':' → logprob: -10.51102066040039
    6. '                       ' → logprob: -11.38602066040039
    7. ':
' → logprob: -11.63602066040039
    8. 'if' → logprob: -12.51102066040039
    9. '                ' → logprob: -13.01102066040039
    10. '       ' → logprob: -13.13602066040039

Token 2255: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.34968140721321106
    2. '               ' → logprob: -1.2246813774108887
    3. ' if' → logprob: -7.099681377410889
    4. '           ' → logprob: -8.599681854248047
    5. '                   ' → logprob: -9.474681854248047
    6. 'If' → logprob: -9.974681854248047
    7. '```' → logprob: -10.099681854248047
    8. '   ' → logprob: -11.099681854248047
    9. 'def' → logprob: -11.599681854248047
    10. 'self' → logprob: -11.974681854248047

Token 2256: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001329287188127637
    2. ' nxt' → logprob: -6.62632942199707
    3. 'n't' → logprob: -13.12632942199707
    4. '   ' → logprob: -14.62632942199707
    5. 'not' → logprob: -15.37632942199707
    6. 'None' → logprob: -15.62632942199707
    7. ' ' → logprob: -16.12632942199707
    8. '       ' → logprob: -16.12632942199707
    9. '  ' → logprob: -16.25132942199707
    10. '[n' → logprob: -17.12632942199707

Token 2257: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.018516872078180313
    2. 'is' → logprob: -4.018517017364502
    3. '               ' → logprob: -8.518516540527344
    4. '                   ' → logprob: -9.643516540527344
    5. ')' → logprob: -10.143516540527344
    6. '=' → logprob: -11.018516540527344
    7. '!=' → logprob: -11.268516540527344
    8. ':' → logprob: -12.143516540527344
    9. ')is' → logprob: -12.643516540527344
    10. '                ' → logprob: -12.643516540527344

Token 2258: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.011352897621691227
    2. ' not' → logprob: -4.511353015899658
    3. 'None' → logprob: -8.1363525390625
    4. '               ' → logprob: -12.1363525390625
    5. '                   ' → logprob: -12.6363525390625
    6. 'Not' → logprob: -13.2613525390625
    7. '0' → logprob: -14.3863525390625
    8. ' None' → logprob: -15.0113525390625
    9. '```' → logprob: -15.6363525390625
    10. '   ' → logprob: -15.7613525390625

Token 2259: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.173704271830502e-06
    2. ' None' → logprob: -12.75000286102295
    3. 'not' → logprob: -16.500003814697266
    4. 'none' → logprob: -18.125003814697266
    5. '```' → logprob: -18.750003814697266
    6. '   ' → logprob: -19.250003814697266
    7. '_None' → logprob: -19.250003814697266
    8. '=None' → logprob: -19.500003814697266
    9. 'N' → logprob: -19.625003814697266
    10. 'No' → logprob: -19.875003814697266

Token 2260: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14994950592517853
    2. '                   ' → logprob: -2.274949550628662
    3. ':' → logprob: -3.399949550628662
    4. '               ' → logprob: -6.024949550628662
    5. '):
' → logprob: -7.899949550628662
    6. '```' → logprob: -9.274949073791504
    7. '           ' → logprob: -10.024949073791504
    8. '():
' → logprob: -10.649949073791504
    9. '                       ' → logprob: -10.774949073791504
    10. '=' → logprob: -10.774949073791504

Token 2261: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001553547801449895
    2. '               ' → logprob: -7.126553535461426
    3. ':
' → logprob: -7.751553535461426
    4. '                       ' → logprob: -9.251553535461426
    5. ':' → logprob: -9.501553535461426
    6. 'self' → logprob: -9.751553535461426
    7. '```' → logprob: -9.876553535461426
    8. '           ' → logprob: -10.876553535461426
    9. '):
' → logprob: -12.376553535461426
    10. '                    ' → logprob: -12.876553535461426

Token 2262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.016190968453884125
    2. '                   ' → logprob: -4.766191005706787
    3. 'queue' → logprob: -5.391191005706787
    4. ' self' → logprob: -6.141191005706787
    5. '               ' → logprob: -7.516191005706787
    6. '                       ' → logprob: -9.016190528869629
    7. '   ' → logprob: -9.766190528869629
    8. ' queue' → logprob: -9.766190528869629
    9. '```' → logprob: -10.516190528869629
    10. '           ' → logprob: -11.516190528869629

Token 2263: '.fail' (ID: 48738)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.5759633779525757
    2. '.fail' → logprob: -0.8259633779525757
    3. ' fail' → logprob: -11.700963020324707
    4. '	fail' → logprob: -11.825963020324707
    5. '_fail' → logprob: -12.950963020324707
    6. '.' → logprob: -13.450963020324707
    7. '```' → logprob: -13.700963020324707
    8. '.goto' → logprob: -14.075963020324707
    9. 'goto' → logprob: -14.325963020324707
    10. 'fails' → logprob: -14.575963020324707

Token 2264: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.800739018013701e-05
    2. '[(' → logprob: -9.8750581741333
    3. '[' → logprob: -12.5000581741333
    4. 'n' → logprob: -13.3750581741333
    5. '(n' → logprob: -15.1250581741333
    6. '[
' → logprob: -15.3750581741333
    7. '                   ' → logprob: -15.6250581741333
    8. '               ' → logprob: -16.125057220458984
    9. '```' → logprob: -16.125057220458984
    10. '   ' → logprob: -16.250057220458984

Token 2265: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.875000953674316
    3. '(' → logprob: -16.75
    4. 't' → logprob: -18.125
    5. '0' → logprob: -18.25
    6. '{' → logprob: -18.375
    7. '[(' → logprob: -18.625
    8. '[n' → logprob: -18.875
    9. '[t' → logprob: -18.875
    10. 'st' → logprob: -19.375

Token 2266: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6112662553787231
    2. '=' → logprob: -0.8612662553787231
    3. ']=' → logprob: -3.7362661361694336
    4. ' =' → logprob: -4.611266136169434
    5. '[' → logprob: -7.861266136169434
    6. ')' → logprob: -8.111266136169434
    7. '                   ' → logprob: -8.861266136169434
    8. ' ]' → logprob: -10.236266136169434
    9. '               ' → logprob: -10.861266136169434
    10. ')=' → logprob: -11.611266136169434

Token 2267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012527543120086193
    2. ' =' → logprob: -4.3875274658203125
    3. '                   ' → logprob: -12.012527465820312
    4. ')' → logprob: -12.637527465820312
    5. '               ' → logprob: -12.762527465820312
    6. '   ' → logprob: -13.387527465820312
    7. '```' → logprob: -13.387527465820312
    8. '[' → logprob: -14.637527465820312
    9. ']' → logprob: -14.762527465820312
    10. ' ' → logprob: -14.762527465820312

Token 2268: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '۰' → logprob: -22.25
    4. '```' → logprob: -22.5
    5. '   ' → logprob: -22.875
    6. '`' → logprob: -23.375
    7. '=' → logprob: -24.125
    8. '[' → logprob: -24.25
    9. '#' → logprob: -24.375
    10. '00' → logprob: -24.5

Token 2269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '۰' → logprob: -21.875
    4. '```' → logprob: -22.0
    5. '`' → logprob: -22.125
    6. '
' → logprob: -23.875
    7. '   ' → logprob: -23.875
    8. '０' → logprob: -24.0
    9. '#' → logprob: -24.25
    10. ' ' → logprob: -24.375

Token 2270: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017932765185832977
    2. '               ' → logprob: -4.142932891845703
    3. '                    
' → logprob: -7.517932891845703
    4. '                       ' → logprob: -8.017932891845703
    5. '
' → logprob: -8.392932891845703
    6. '           ' → logprob: -8.517932891845703
    7. '```' → logprob: -8.517932891845703
    8. '<|end|>' → logprob: -9.142932891845703
    9. '                    ' → logprob: -10.142932891845703
    10. '                
' → logprob: -10.517932891845703

Token 2271: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08139229565858841
    2. '               ' → logprob: -2.581392288208008
    3. '
' → logprob: -6.831392288208008
    4. '                    
' → logprob: -7.206392288208008
    5. '                
' → logprob: -8.831392288208008
    6. '           ' → logprob: -8.831392288208008
    7. '                       ' → logprob: -9.456392288208008
    8. '				' → logprob: -9.831392288208008
    9. '```' → logprob: -9.831392288208008
    10. '    
' → logprob: -10.706392288208008

Token 2272: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.16591490805149078
    2. '                   ' → logprob: -1.9159148931503296
    3. ' queue' → logprob: -5.540915012359619
    4. '               ' → logprob: -7.165915012359619
    5. '                       ' → logprob: -7.415915012359619
    6. '           ' → logprob: -8.915914535522461
    7. '				' → logprob: -9.915914535522461
    8. '	queue' → logprob: -9.915914535522461
    9. '   ' → logprob: -10.415914535522461
    10. '```' → logprob: -11.040914535522461

Token 2273: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003213960910215974
    2. '.' → logprob: -5.753213882446289
    3. '.extend' → logprob: -11.378213882446289
    4. 'append' → logprob: -11.753213882446289
    5. '.app' → logprob: -12.253213882446289
    6. '.
' → logprob: -12.503213882446289
    7. '           ' → logprob: -12.628213882446289
    8. 'app' → logprob: -13.878213882446289
    9. '```' → logprob: -13.878213882446289
    10. '.p' → logprob: -13.878213882446289

Token 2274: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07889749854803085
    2. '(n' → logprob: -2.578897476196289
    3. ' nxt' → logprob: -12.078897476196289
    4. '(' → logprob: -13.703897476196289
    5. '	n' → logprob: -15.453897476196289
    6. '<n' → logprob: -15.828897476196289
    7. '(
' → logprob: -15.953897476196289
    8. '       ' → logprob: -16.07889747619629
    9. ')n' → logprob: -16.45389747619629
    10. '   ' → logprob: -16.57889747619629

Token 2275: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -4.251091377227567e-05
    2. '(n' → logprob: -10.250042915344238
    3. 't' → logprob: -12.500042915344238
    4. '(' → logprob: -12.875042915344238
    5. 'n' → logprob: -15.500042915344238
    6. '[n' → logprob: -16.250041961669922
    7. ')' → logprob: -16.625041961669922
    8. '   ' → logprob: -16.750041961669922
    9. 'ft' → logprob: -17.125041961669922
    10. '(t' → logprob: -17.125041961669922

Token 2276: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2656511068344116
    2. '           ' → logprob: -2.015651226043701
    3. ')' → logprob: -2.890651226043701
    4. ')
' → logprob: -3.265651226043701
    5. '                   ' → logprob: -5.265651226043701
    6. '       ' → logprob: -7.265651226043701
    7. '
' → logprob: -8.765650749206543
    8. '):
' → logprob: -9.265650749206543
    9. '```' → logprob: -9.890650749206543
    10. '   ' → logprob: -10.015650749206543

Token 2277: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09401316940784454
    2. '           ' → logprob: -2.469013214111328
    3. '                   ' → logprob: -5.969013214111328
    4. 'for' → logprob: -6.844013214111328
    5. '```' → logprob: -7.344013214111328
    6. '
' → logprob: -7.469013214111328
    7. 'while' → logprob: -9.469013214111328
    8. ' for' → logprob: -9.969013214111328
    9. '       ' → logprob: -10.094013214111328
    10. 'else' → logprob: -11.219013214111328

Token 2278: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5610018372535706
    2. 'else' (adapté à ' else') → logprob: -1.1860017776489258
    3. '           ' → logprob: -2.186001777648926
    4. ' else' → logprob: -4.561001777648926
    5. '                   ' → logprob: -8.061001777648926
    6. '       ' → logprob: -8.561001777648926
    7. '```' → logprob: -8.561001777648926
    8. '   ' → logprob: -9.061001777648926
    9. '
' → logprob: -9.061001777648926
    10. '             ' → logprob: -10.936001777648926

Token 2279: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.39230307936668396
    2. '               ' → logprob: -1.1423031091690063
    3. ':' → logprob: -6.142302989959717
    4. ':
' → logprob: -6.642302989959717
    5. '                       ' → logprob: -6.642302989959717
    6. '{
' → logprob: -8.892303466796875
    7. '           ' → logprob: -9.017303466796875
    8. 'self' → logprob: -9.392303466796875
    9. '   ' → logprob: -9.892303466796875
    10. '```' → logprob: -10.142303466796875

Token 2280: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39992210268974304
    2. '                   ' → logprob: -1.1499221324920654
    3. 'self' → logprob: -4.649921894073486
    4. ' self' → logprob: -5.899921894073486
    5. '                       ' → logprob: -8.149922370910645
    6. '           ' → logprob: -8.774922370910645
    7. '   ' → logprob: -9.399922370910645
    8. '                ' → logprob: -9.774922370910645
    9. '       ' → logprob: -11.149922370910645
    10. '                 ' → logprob: -11.274922370910645

Token 2281: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0013553560711443424
    2. ' self' → logprob: -7.001355171203613
    3. '                   ' → logprob: -7.876355171203613
    4. '               ' → logprob: -10.001355171203613
    5. '           ' → logprob: -11.501355171203613
    6. '                       ' → logprob: -12.001355171203613
    7. '   ' → logprob: -13.376355171203613
    8. ' ' → logprob: -15.251355171203613
    9. '       ' → logprob: -15.376355171203613
    10. '(self' → logprob: -16.00135612487793

Token 2282: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.10026545077562332
    2. 'goto' → logprob: -2.3502655029296875
    3. '.' → logprob: -10.225265502929688
    4. '	goto' → logprob: -11.475265502929688
    5. '```' → logprob: -12.350265502929688
    6. '   ' → logprob: -13.475265502929688
    7. ' .' → logprob: -14.225265502929688
    8. ' goto' → logprob: -14.225265502929688
    9. 'Goto' → logprob: -14.225265502929688
    10. '.go' → logprob: -14.475265502929688

Token 2283: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -13.375004768371582
    3. '[' → logprob: -13.750004768371582
    4. '```' → logprob: -14.000004768371582
    5. '[
' → logprob: -14.625004768371582
    6. '`' → logprob: -16.125003814697266
    7. '((' → logprob: -16.375003814697266
    8. '{' → logprob: -16.750003814697266
    9. '``' → logprob: -17.125003814697266
    10. '.setdefault' → logprob: -17.375003814697266

Token 2284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013269031187519431
    2. '(' → logprob: -6.626327037811279
    3. ' ' → logprob: -14.501326560974121
    4. ' (' → logprob: -15.251326560974121
    5. '   ' → logprob: -15.876326560974121
    6. '{' → logprob: -17.751327514648438
    7. '
' → logprob: -18.001327514648438
    8. '           ' → logprob: -18.126327514648438
    9. '  ' → logprob: -18.376327514648438
    10. '[' → logprob: -18.501327514648438

Token 2285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001769616355886683
    2. ',(' → logprob: -9.125177383422852
    3. '(' → logprob: -10.375177383422852
    4. ',ch' → logprob: -11.000177383422852
    5. ' ,' → logprob: -11.375177383422852
    6. ' (' → logprob: -12.875177383422852
    7. ',
' → logprob: -13.500177383422852
    8. ','' → logprob: -14.125177383422852
    9. '',' → logprob: -14.250177383422852
    10. ',n' → logprob: -14.750177383422852

Token 2286: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0024744702968746424
    2. ''ch' → logprob: -7.002474308013916
    3. '(ch' → logprob: -7.127474308013916
    4. ' ch' → logprob: -7.252474308013916
    5. '(' → logprob: -10.502474784851074
    6. '0' → logprob: -11.502474784851074
    7. ' (' → logprob: -12.377474784851074
    8. ',ch' → logprob: -12.877474784851074
    9. ''' → logprob: -13.127474784851074
    10. '-ch' → logprob: -13.127474784851074

Token 2287: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0718904361128807
    2. ')]' → logprob: -2.946890354156494
    3. ')' → logprob: -4.446890354156494
    4. ']=' → logprob: -5.821890354156494
    5. '[(' → logprob: -6.571890354156494
    6. ']=(' → logprob: -7.821890354156494
    7. '           ' → logprob: -9.071890830993652
    8. ',' → logprob: -9.321890830993652
    9. '               ' → logprob: -10.196890830993652
    10. '[' → logprob: -10.321890830993652

Token 2288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004729514475911856
    2. '[(' → logprob: -5.754729747772217
    3. '[' → logprob: -6.754729747772217
    4. ' =' → logprob: -7.879729747772217
    5. '(' → logprob: -12.879729270935059
    6. '=(' → logprob: -13.129729270935059
    7. ']=' → logprob: -14.629729270935059
    8. '           ' → logprob: -14.754729270935059
    9. '                   ' → logprob: -14.879729270935059
    10. ']' → logprob: -14.879729270935059

Token 2289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -23.500003814697266
    4. ' ' → logprob: -24.125003814697266
    5. '  ' → logprob: -25.125003814697266
    6. '۰' → logprob: -25.750003814697266
    7. '```' → logprob: -26.000003814697266
    8. ' ' → logprob: -26.125003814697266
    9. '`' → logprob: -26.250003814697266
    10. '[' → logprob: -27.000003814697266

Token 2290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '`' → logprob: -22.500001907348633
    4. ''' → logprob: -23.000001907348633
    5. '   ' → logprob: -24.000001907348633
    6. '```' → logprob: -24.000001907348633
    7. '۰' → logprob: -24.500001907348633
    8. ' ' → logprob: -24.750001907348633
    9. ' ' → logprob: -25.000001907348633
    10. '  ' → logprob: -25.250001907348633

Token 2291: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09337165951728821
    2. '           ' → logprob: -2.593371629714966
    3. '<|end|>' → logprob: -5.343371868133545
    4. '       ' → logprob: -6.468371868133545
    5. '            
' → logprob: -6.593371868133545
    6. '        
' → logprob: -6.718371868133545
    7. '
' → logprob: -6.968371868133545
    8. '    
' → logprob: -7.218371868133545
    9. ' 
' → logprob: -7.468371868133545
    10. '                   ' → logprob: -7.593371868133545

Token 2292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2951740324497223
    2. '
' → logprob: -1.4201740026474
    3. '       ' → logprob: -4.4201741218566895
    4. '<|end|>' → logprob: -7.2951741218566895
    5. '```' → logprob: -8.545173645019531
    6. '                   ' → logprob: -8.795173645019531
    7. '        
' → logprob: -9.170173645019531
    8. '               ' → logprob: -9.295173645019531
    9. '    
' → logprob: -9.420173645019531
    10. '   ' → logprob: -9.420173645019531

Token 2293: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022273045033216476
    2. '
' → logprob: -4.397273063659668
    3. 'while' (adapté à ' while') → logprob: -5.022273063659668
    4. '       ' → logprob: -6.022273063659668
    5. ' while' → logprob: -7.897273063659668
    6. '```' → logprob: -9.147273063659668
    7. '   ' → logprob: -9.772273063659668
    8. '
' → logprob: -10.147273063659668
    9. 'While' → logprob: -10.147273063659668
    10. 'for' → logprob: -11.147273063659668

Token 2294: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.000553151941858232
    2. ' queue' → logprob: -7.500553131103516
    3. '(queue' → logprob: -16.500553131103516
    4. 'True' → logprob: -17.875553131103516
    5. '       ' → logprob: -18.500553131103516
    6. '	queue' → logprob: -19.500553131103516
    7. '   ' → logprob: -20.000553131103516
    8. 'que' → logprob: -20.125553131103516
    9. 'len' → logprob: -20.250553131103516
    10. '```' → logprob: -21.125553131103516

Token 2295: ':
' (ID: 734)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.1579587310552597
    2. ':
' → logprob: -2.532958745956421
    3. '.append' → logprob: -2.782958745956421
    4. ':' → logprob: -5.532958507537842
    5. '           ' → logprob: -7.782958507537842
    6. '       ' → logprob: -8.907958984375
    7. 'p' → logprob: -9.407958984375
    8. '```' → logprob: -9.407958984375
    9. '   ' → logprob: -9.782958984375
    10. 'append' → logprob: -9.907958984375

Token 2296: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06616251170635223
    2. 'r' → logprob: -3.566162586212158
    3. '               ' → logprob: -3.816162586212158
    4. '	       ' → logprob: -5.066162586212158
    5. '       ' → logprob: -5.566162586212158
    6. '		' → logprob: -6.816162586212158
    7. ' r' → logprob: -7.441162586212158
    8. '   ' → logprob: -7.691162586212158
    9. '	           ' → logprob: -7.941162586212158
    10. '		       ' → logprob: -8.191162109375

Token 2297: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -4.632542913896032e-05
    2. ' r' → logprob: -11.250046730041504
    3. '               ' → logprob: -11.500046730041504
    4. '                   ' → logprob: -11.625046730041504
    5. 'node' → logprob: -12.250046730041504
    6. '   ' → logprob: -12.375046730041504
    7. 'state' → logprob: -12.750046730041504
    8. '           ' → logprob: -13.125046730041504
    9. 'v' → logprob: -16.625045776367188
    10. '
' → logprob: -16.875045776367188

Token 2298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01110394112765789
    2. '=' → logprob: -4.511104106903076
    3. '           ' → logprob: -10.386103630065918
    4. '   ' → logprob: -11.261103630065918
    5. '               ' → logprob: -12.136103630065918
    6. '       ' → logprob: -12.886103630065918
    7. '                   ' → logprob: -13.261103630065918
    8. 'p' → logprob: -13.511103630065918
    9. '=r' → logprob: -14.511103630065918
    10. '=p' → logprob: -15.011103630065918

Token 2299: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.005234356038272381
    2. ' queue' → logprob: -5.255234241485596
    3. '(queue' → logprob: -15.380234718322754
    4. '	queue' → logprob: -16.005233764648438
    5. 'deque' → logprob: -16.380233764648438
    6. '.queue' → logprob: -16.880233764648438
    7. 'que' → logprob: -18.130233764648438
    8. '   ' → logprob: -19.255233764648438
    9. 'q' → logprob: -19.630233764648438
    10. '       ' → logprob: -19.880233764648438

Token 2300: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5185185670852661
    2. '.p' → logprob: -1.2685185670852661
    3. ' =' → logprob: -2.2685184478759766
    4. 'p' → logprob: -4.268518447875977
    5. '           ' → logprob: -6.018518447875977
    6. '.pop' → logprob: -6.518518447875977
    7. '=p' → logprob: -6.643518447875977
    8. '       ' → logprob: -8.143518447875977
    9. '   ' → logprob: -8.893518447875977
    10. '.append' → logprob: -9.393518447875977

Token 2301: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -1.7432603272027336e-06
    2. 'op' → logprob: -13.625001907348633
    3. 'opped' → logprob: -15.000001907348633
    4. 'append' → logprob: -16.750001907348633
    5. 'p' → logprob: -16.750001907348633
    6. 'ople' → logprob: -17.000001907348633
    7. 'opl' → logprob: -17.000001907348633
    8. 'oplevel' → logprob: -17.875001907348633
    9. 'opf' → logprob: -19.250001907348633
    10. 'plet' → logprob: -19.250001907348633

Token 2302: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1350667029619217
    2. '               ' → logprob: -2.1350667476654053
    3. 'for' → logprob: -5.260066509246826
    4. '       ' → logprob: -6.760066509246826
    5. ' for' → logprob: -6.885066509246826
    6. ',' → logprob: -7.885066509246826
    7. ':
' → logprob: -9.385066986083984
    8. '                   ' → logprob: -9.385066986083984
    9. '#' → logprob: -10.385066986083984
    10. '	       ' → logprob: -11.010066986083984

Token 2303: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0057950010523200035
    2. '           ' → logprob: -5.380795001983643
    3. '       ' → logprob: -6.880795001983643
    4. 'for' → logprob: -9.005794525146484
    5. '                   ' → logprob: -11.755794525146484
    6. ' for' → logprob: -12.005794525146484
    7. '   ' → logprob: -12.880794525146484
    8. '	       ' → logprob: -13.755794525146484
    9. '```' → logprob: -13.880794525146484
    10. '              ' → logprob: -13.880794525146484

Token 2304: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.254698783159256
    2. '               ' → logprob: -2.0046987533569336
    3. '           ' → logprob: -2.7546987533569336
    4. ' for' → logprob: -4.004698753356934
    5. '	for' → logprob: -5.754698753356934
    6. '   ' → logprob: -6.254698753356934
    7. '                   ' → logprob: -6.379698753356934
    8. '       ' → logprob: -7.254698753356934
    9. '	           ' → logprob: -8.379698753356934
    10. '	       ' → logprob: -8.629698753356934

Token 2305: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0005536287208087742
    2. ' ch' → logprob: -7.500553607940674
    3. '	ch' → logprob: -15.000554084777832
    4. '   ' → logprob: -15.875554084777832
    5. '(ch' → logprob: -16.250553131103516
    6. ''ch' → logprob: -16.750553131103516
    7. '[ch' → logprob: -17.750553131103516
    8. 'c' → logprob: -18.125553131103516
    9. ' ' → logprob: -18.375553131103516
    10. '           ' → logprob: -18.625553131103516

Token 2306: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005248225759714842
    2. 'in' → logprob: -5.255248069763184
    3. '               ' → logprob: -11.630248069763184
    4. '                   ' → logprob: -12.505248069763184
    5. '                ' → logprob: -14.755248069763184
    6. '           ' → logprob: -15.130248069763184
    7. 'import' → logprob: -15.630248069763184
    8. '            ' → logprob: -16.0052490234375
    9. ' ' → logprob: -16.1302490234375
    10. '   ' → logprob: -16.3802490234375

Token 2307: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001999642699956894
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.250200271606445
    3. ''a' → logprob: -10.250200271606445
    4. ' '' → logprob: -10.750200271606445
    5. ''al' → logprob: -11.375200271606445
    6. '"' → logprob: -11.500200271606445
    7. '
' → logprob: -11.750200271606445
    8. ''ab' → logprob: -12.000200271606445
    9. ''z' → logprob: -12.750200271606445
    10. ''ap' → logprob: -12.875200271606445

Token 2308: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.038047004491090775
    2. ''' → logprob: -3.2880470752716064
    3. '"' → logprob: -12.663046836853027
    4. ''z' → logprob: -14.038046836853027
    5. '
' → logprob: -15.163046836853027
    6. ''ab' → logprob: -15.538046836853027
    7. 'abcdefghijkl' → logprob: -15.538046836853027
    8. '`' → logprob: -15.788046836853027
    9. ''as' → logprob: -16.288047790527344
    10. ''import' → logprob: -16.288047790527344

Token 2309: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2659234404563904
    2. ':
' → logprob: -1.5159235000610352
    3. '               ' → logprob: -4.640923500061035
    4. ':' → logprob: -6.015923500061035
    5. '                       ' → logprob: -7.390923500061035
    6. '           ' → logprob: -8.265923500061035
    7. '{
' → logprob: -9.015923500061035
    8. '   ' → logprob: -9.140923500061035
    9. '):
' → logprob: -9.140923500061035
    10. '		           ' → logprob: -9.515923500061035

Token 2310: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012215361930429935
    2. '               ' → logprob: -7.501221656799316
    3. '                       ' → logprob: -7.876221656799316
    4. 'n' → logprob: -9.251221656799316
    5. '	               ' → logprob: -10.376221656799316
    6. 'if' → logprob: -10.876221656799316
    7. '		           ' → logprob: -11.126221656799316
    8. '                  ' → logprob: -11.376221656799316
    9. ':
' → logprob: -11.376221656799316
    10. '   ' → logprob: -11.376221656799316

Token 2311: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0024008627515286207
    2. '                   ' → logprob: -6.252400875091553
    3. '                       ' → logprob: -7.752400875091553
    4. '               ' → logprob: -10.877400398254395
    5. ' nxt' → logprob: -11.252400398254395
    6. '                           ' → logprob: -12.877400398254395
    7. '   ' → logprob: -13.252400398254395
    8. 'next' → logprob: -13.502400398254395
    9. '           ' → logprob: -13.627400398254395
    10. '                     ' → logprob: -14.127400398254395

Token 2312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12706124782562256
    2. ' =' → logprob: -2.127061367034912
    3. '                   ' → logprob: -9.002060890197754
    4. '               ' → logprob: -12.127060890197754
    5. '=get' → logprob: -13.502060890197754
    6. '                       ' → logprob: -14.002060890197754
    7. '=n' → logprob: -14.127060890197754
    8. '                ' → logprob: -15.502060890197754
    9. '                    ' → logprob: -15.502060890197754
    10. '=None' → logprob: -15.502060890197754

Token 2313: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043102685594931245
    2. ' self' → logprob: -7.750431060791016
    3. '                   ' → logprob: -15.500431060791016
    4. '(self' → logprob: -16.125431060791016
    5. '	self' → logprob: -18.250431060791016
    6. '[self' → logprob: -18.375431060791016
    7. '=self' → logprob: -19.125431060791016
    8. '               ' → logprob: -19.250431060791016
    9. '                       ' → logprob: -20.125431060791016
    10. '   ' → logprob: -20.375431060791016

Token 2314: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.16027073562145233
    2. 'goto' → logprob: -1.9102706909179688
    3. '	goto' → logprob: -10.285270690917969
    4. '.' → logprob: -12.410270690917969
    5. ' goto' → logprob: -12.410270690917969
    6. '```' → logprob: -13.910270690917969
    7. 'Goto' → logprob: -14.285270690917969
    8. '   ' → logprob: -14.285270690917969
    9. '
' → logprob: -14.785270690917969
    10. ' .' → logprob: -14.785270690917969

Token 2315: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.004526842851191759
    2. '[(' → logprob: -5.504526615142822
    3. 'get' → logprob: -7.754526615142822
    4. '.setdefault' → logprob: -11.87952709197998
    5. '.' → logprob: -12.37952709197998
    6. '(r' → logprob: -13.12952709197998
    7. '```' → logprob: -13.50452709197998
    8. '((' → logprob: -13.62952709197998
    9. 'def' → logprob: -14.00452709197998
    10. '(get' → logprob: -14.50452709197998

Token 2316: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07917729020118713
    2. '(r' → logprob: -2.5791773796081543
    3. '[(' → logprob: -8.204176902770996
    4. '   ' → logprob: -12.079176902770996
    5. '(' → logprob: -13.204176902770996
    6. '```' → logprob: -13.329176902770996
    7. '{' → logprob: -13.704176902770996
    8. 'r' → logprob: -14.454176902770996
    9. '                   ' → logprob: -14.829176902770996
    10. ' (' → logprob: -14.829176902770996

Token 2317: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.080963092041202e-06
    2. '(r' → logprob: -12.250004768371582
    3. ' r' → logprob: -15.375004768371582
    4. '   ' → logprob: -18.3750057220459
    5. '                   ' → logprob: -18.7500057220459
    6. '	r' → logprob: -20.5000057220459
    7. '(' → logprob: -21.0000057220459
    8. '[r' → logprob: -21.0000057220459
    9. '_r' → logprob: -21.3750057220459
    10. ' (' → logprob: -21.3750057220459

Token 2318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000498701527249068
    2. ',ch' → logprob: -7.6254987716674805
    3. ' ,' → logprob: -12.25049877166748
    4. '                   ' → logprob: -12.75049877166748
    5. '(ch' → logprob: -13.75049877166748
    6. '   ' → logprob: -14.62549877166748
    7. '[ch' → logprob: -15.12549877166748
    8. '',' → logprob: -15.12549877166748
    9. '(' → logprob: -15.50049877166748
    10. ',
' → logprob: -15.50049877166748

Token 2319: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.00023250321100931615
    2. ' ch' → logprob: -8.375232696533203
    3. '(ch' → logprob: -13.375232696533203
    4. '[ch' → logprob: -16.125232696533203
    5. ''ch' → logprob: -16.375232696533203
    6. '	ch' → logprob: -16.625232696533203
    7. ',ch' → logprob: -17.250232696533203
    8. '_ch' → logprob: -17.500232696533203
    9. ' ' → logprob: -18.875232696533203
    10. '-ch' → logprob: -19.125232696533203

Token 2320: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006311389151960611
    2. '),' → logprob: -5.131311416625977
    3. '                   ' → logprob: -8.256311416625977
    4. '],' → logprob: -10.131311416625977
    5. '[],' → logprob: -10.631311416625977
    6. '               ' → logprob: -11.381311416625977
    7. ')' → logprob: -11.631311416625977
    8. ',),' → logprob: -11.631311416625977
    9. ' ,' → logprob: -12.006311416625977
    10. '',' → logprob: -12.256311416625977

Token 2321: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001171056181192398
    2. ' None' → logprob: -6.751171112060547
    3. '(None' → logprob: -15.376171112060547
    4. '_None' → logprob: -15.501171112060547
    5. '   ' → logprob: -15.876171112060547
    6. '=None' → logprob: -16.376171112060547
    7. '                   ' → logprob: -16.626171112060547
    8. ',None' → logprob: -16.876171112060547
    9. '.None' → logprob: -17.376171112060547
    10. '
' → logprob: -17.751171112060547

Token 2322: ')
' (ID: 446)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4831101894378662
    2. '                   ' → logprob: -0.9831101894378662
    3. ':' → logprob: -5.858110427856445
    4. 'if' → logprob: -6.858110427856445
    5. '               ' → logprob: -6.983110427856445
    6. ':
' → logprob: -7.108110427856445
    7. '):
' → logprob: -7.233110427856445
    8. ' if' → logprob: -7.983110427856445
    9. '```' → logprob: -8.233110427856445
    10. ')' → logprob: -8.358110427856445

Token 2323: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.911954500945285e-05
    2. '               ' → logprob: -10.375088691711426
    3. '                       ' → logprob: -10.625088691711426
    4. 'if' → logprob: -11.250088691711426
    5. '```' → logprob: -12.000088691711426
    6. '				' → logprob: -12.250088691711426
    7. '		           ' → logprob: -12.750088691711426
    8. '	               ' → logprob: -13.125088691711426
    9. '                  ' → logprob: -13.750088691711426
    10. ' if' → logprob: -14.125088691711426

Token 2324: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.595440149307251
    2. '                   ' → logprob: -1.470440149307251
    3. '                       ' → logprob: -1.720440149307251
    4. ' if' → logprob: -3.970440149307251
    5. '				' → logprob: -4.345439910888672
    6. '					' → logprob: -5.720439910888672
    7. '	               ' → logprob: -6.845439910888672
    8. '	if' → logprob: -7.095439910888672
    9. '			       ' → logprob: -7.220439910888672
    10. '		           ' → logprob: -7.720439910888672

Token 2325: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.967624019831419e-05
    2. '                   ' → logprob: -10.000060081481934
    3. '                       ' → logprob: -12.250060081481934
    4. ' nxt' → logprob: -12.250060081481934
    5. '               ' → logprob: -13.250060081481934
    6. '                           ' → logprob: -13.875060081481934
    7. '           ' → logprob: -15.250060081481934
    8. '                  ' → logprob: -15.375060081481934
    9. '                               ' → logprob: -15.500060081481934
    10. 'not' → logprob: -15.625060081481934

Token 2326: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.013128934428095818
    2. 'is' → logprob: -4.388128757476807
    3. '                   ' → logprob: -7.638128757476807
    4. '                       ' → logprob: -9.388129234313965
    5. ':' → logprob: -11.138129234313965
    6. '                    ' → logprob: -11.388129234313965
    7. ':
' → logprob: -11.763129234313965
    8. '               ' → logprob: -12.513129234313965
    9. ')' → logprob: -12.888129234313965
    10. '	is' → logprob: -12.888129234313965

Token 2327: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10029271990060806
    2. ' not' → logprob: -2.350292682647705
    3. '                   ' → logprob: -10.100293159484863
    4. 'Not' → logprob: -10.600293159484863
    5. 'None' → logprob: -10.975293159484863
    6. '                       ' → logprob: -14.350293159484863
    7. 'n' → logprob: -14.725293159484863
    8. '               ' → logprob: -14.850293159484863
    9. '_not' → logprob: -15.225293159484863
    10. '```' → logprob: -15.225293159484863

Token 2328: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009148012613877654
    2. ' None' → logprob: -7.000914573669434
    3. '   ' → logprob: -13.625914573669434
    4. 'not' → logprob: -14.500914573669434
    5. '_None' → logprob: -14.625914573669434
    6. '(None' → logprob: -15.250914573669434
    7. 'none' → logprob: -15.500914573669434
    8. '=None' → logprob: -16.12591552734375
    9. '       ' → logprob: -16.25091552734375
    10. '_none' → logprob: -16.37591552734375

Token 2329: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02661214768886566
    2. ':' → logprob: -4.401612281799316
    3. ':
' → logprob: -4.401612281799316
    4. '                   ' → logprob: -6.651612281799316
    5. ',' → logprob: -9.026612281799316
    6. '=' → logprob: -9.401612281799316
    7. '                      ' → logprob: -9.901612281799316
    8. '                     ' → logprob: -10.651612281799316
    9. '                           ' → logprob: -10.776612281799316
    10. '):
' → logprob: -10.776612281799316

Token 2330: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0035742921754717827
    2. '					' → logprob: -6.253574371337891
    3. '                   ' → logprob: -6.878574371337891
    4. '```' → logprob: -8.62857437133789
    5. '                    ' → logprob: -9.50357437133789
    6. '	                   ' → logprob: -9.75357437133789
    7. '                           ' → logprob: -10.00357437133789
    8. '				' → logprob: -10.12857437133789
    9. '		' → logprob: -10.50357437133789
    10. '                        ' → logprob: -10.62857437133789

Token 2331: ' queue' (ID: 13661)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.14746132493019104
    2. '                       ' → logprob: -2.397461414337158
    3. 'queue' (adapté à ' queue') → logprob: -3.147461414337158
    4. '                               ' → logprob: -6.522461414337158
    5. ' queue' → logprob: -7.147461414337158
    6. '                   ' → logprob: -7.772461414337158
    7. '                                   ' → logprob: -9.0224609375
    8. '                        ' → logprob: -9.5224609375
    9. '						' → logprob: -9.5224609375
    10. 'self' → logprob: -9.6474609375

Token 2332: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00043937109876424074
    2. '.' → logprob: -7.750439167022705
    3. '                       ' → logprob: -12.750439643859863
    4. '.enqueue' → logprob: -13.250439643859863
    5. '.extend' → logprob: -13.375439643859863
    6. '                   ' → logprob: -14.500439643859863
    7. '                           ' → logprob: -14.750439643859863
    8. 'append' → logprob: -15.000439643859863
    9. ' .' → logprob: -15.125439643859863
    10. '.Append' → logprob: -15.375439643859863

Token 2333: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00043698702938854694
    2. '(' → logprob: -8.125436782836914
    3. 'n' → logprob: -9.500436782836914
    4. '(r' → logprob: -10.375436782836914
    5. ' (' → logprob: -10.875436782836914
    6. '((' → logprob: -12.000436782836914
    7. '                       ' → logprob: -12.125436782836914
    8. '                   ' → logprob: -13.250436782836914
    9. '(next' → logprob: -14.500436782836914
    10. '               ' → logprob: -14.500436782836914

Token 2334: 'xt' (ID: 711)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.3155204951763153
    2. 'xt' → logprob: -1.3155205249786377
    3. '(n' → logprob: -6.190520286560059
    4. '(' → logprob: -9.815520286560059
    5. ' (' → logprob: -9.815520286560059
    6. 'ext' → logprob: -10.940520286560059
    7. 'n' → logprob: -11.315520286560059
    8. '(t' → logprob: -11.690520286560059
    9. '   ' → logprob: -11.815520286560059
    10. '[r' → logprob: -12.065520286560059

Token 2335: ')
' (ID: 446)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03480931371450424
    2. ')
' → logprob: -3.6598093509674072
    3. '                           ' → logprob: -5.534809112548828
    4. ')' → logprob: -6.034809112548828
    5. '                   ' → logprob: -7.159809112548828
    6. ',' → logprob: -7.784809112548828
    7. '           ' → logprob: -8.784809112548828
    8. ',
' → logprob: -9.034809112548828
    9. '                        ' → logprob: -9.534809112548828
    10. '),
' → logprob: -9.784809112548828

Token 2336: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2567351758480072
    2. '                       ' → logprob: -1.7567352056503296
    3. '```' → logprob: -3.13173508644104
    4. 'self' → logprob: -5.506735324859619
    5. '                        ' → logprob: -6.131735324859619
    6. '                               ' → logprob: -6.756735324859619
    7. '                          ' → logprob: -7.881735324859619
    8. '                            ' → logprob: -7.881735324859619
    9. '                         ' → logprob: -7.881735324859619
    10. '                        
' → logprob: -8.631734848022461

Token 2337: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007476831669919193
    2. '                           ' → logprob: -8.000747680664062
    3. ' self' → logprob: -8.375747680664062
    4. '                       ' → logprob: -8.875747680664062
    5. '                               ' → logprob: -10.250747680664062
    6. '   ' → logprob: -12.500747680664062
    7. '           ' → logprob: -13.875747680664062
    8. '       ' → logprob: -14.625747680664062
    9. '                   ' → logprob: -14.875747680664062
    10. '	self' → logprob: -15.500747680664062

Token 2338: '.fail' (ID: 48738)
  Prédit: '.fail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fail' → logprob: -9.913265239447355e-05
    2. 'fail' → logprob: -9.250099182128906
    3. '	fail' → logprob: -13.625099182128906
    4. '.' → logprob: -14.375099182128906
    5. '.goto' → logprob: -14.625099182128906
    6. '\.' → logprob: -16.250099182128906
    7. '>.' → logprob: -16.375099182128906
    8. ' fail' → logprob: -16.375099182128906
    9. '```' → logprob: -16.625099182128906
    10. ' .' → logprob: -16.625099182128906

Token 2339: '[n' (ID: 15433)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.030715061351656914
    2. '[n' → logprob: -3.530714988708496
    3. '[r' → logprob: -7.030714988708496
    4. '(n' → logprob: -10.405714988708496
    5. '[self' → logprob: -10.530714988708496
    6. '                       ' → logprob: -11.905714988708496
    7. '[' → logprob: -12.530714988708496
    8. '                   ' → logprob: -13.030714988708496
    9. 'n' → logprob: -13.155714988708496
    10. '       ' → logprob: -13.780714988708496

Token 2340: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.6946075558662415
    2. '[(' → logprob: -0.9446075558662415
    3. '[r' → logprob: -2.1946074962615967
    4. '[t' → logprob: -8.444607734680176
    5. '[n' → logprob: -9.569607734680176
    6. 'ext' → logprob: -9.569607734680176
    7. 't' → logprob: -9.694607734680176
    8. '[' → logprob: -10.444607734680176
    9. '(r' → logprob: -11.319607734680176
    10. 'x' → logprob: -11.819607734680176

Token 2341: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3528704345226288
    2. '[(' → logprob: -1.3528704643249512
    3. ']=' → logprob: -3.852870464324951
    4. '=' → logprob: -4.727870464324951
    5. ']=(' → logprob: -5.727870464324951
    6. '                       ' → logprob: -6.727870464324951
    7. '][' → logprob: -6.727870464324951
    8. ' =' → logprob: -7.102870464324951
    9. '[' → logprob: -7.227870464324951
    10. ')' → logprob: -7.602870464324951

Token 2342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004119361750781536
    2. ' =' → logprob: -5.504119396209717
    3. ']' → logprob: -10.754118919372559
    4. ']=' → logprob: -11.004118919372559
    5. '=self' → logprob: -14.004118919372559
    6. '=(' → logprob: -14.129118919372559
    7. '=
' → logprob: -14.629118919372559
    8. '[' → logprob: -15.504118919372559
    9. ')' → logprob: -15.504118919372559
    10. '                   ' → logprob: -16.379119873046875

Token 2343: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.204720582696609e-05
    2. ' self' → logprob: -9.875052452087402
    3. '(self' → logprob: -15.000052452087402
    4. '	self' → logprob: -16.375051498413086
    5. '                   ' → logprob: -18.000051498413086
    6. '   ' → logprob: -18.250051498413086
    7. '                       ' → logprob: -18.625051498413086
    8. '$self' → logprob: -19.125051498413086
    9. '               ' → logprob: -19.500051498413086
    10. '           ' → logprob: -19.750051498413086

Token 2344: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.6328192949295044
    2. 'goto' → logprob: -0.7578192949295044
    3. '	goto' → logprob: -9.882819175720215
    4. '[(' → logprob: -10.132819175720215
    5. '(' → logprob: -10.882819175720215
    6. ' goto' → logprob: -11.007819175720215
    7. 'self' → logprob: -11.007819175720215
    8. '.' → logprob: -11.132819175720215
    9. '.go' → logprob: -11.632819175720215
    10. '```' → logprob: -12.132819175720215

Token 2345: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -6.153795766294934e-06
    2. '((' → logprob: -12.375005722045898
    3. '[
' → logprob: -13.875005722045898
    4. '[' → logprob: -15.000005722045898
    5. '(self' → logprob: -15.375005722045898
    6. '[self' → logprob: -16.2500057220459
    7. '[((' → logprob: -16.7500057220459
    8. '       ' → logprob: -16.7500057220459
    9. '(' → logprob: -17.0000057220459
    10. '           ' → logprob: -17.2500057220459

Token 2346: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03807798773050308
    2. 'self' → logprob: -3.2880780696868896
    3. ' (' → logprob: -10.413078308105469
    4. ' self' → logprob: -12.663078308105469
    5. '(' → logprob: -13.413078308105469
    6. '[self' → logprob: -14.288078308105469
    7. '(
' → logprob: -14.288078308105469
    8. ':self' → logprob: -16.16307830810547
    9. '   ' → logprob: -16.28807830810547
    10. ',self' → logprob: -16.41307830810547

Token 2347: '.fail' (ID: 48738)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.005745929665863514
    2. '.fail' → logprob: -5.380745887756348
    3. '(f' → logprob: -7.005745887756348
    4. ' fail' → logprob: -9.505745887756348
    5. '(self' → logprob: -9.630745887756348
    6. '	fail' → logprob: -10.630745887756348
    7. '_fail' → logprob: -10.755745887756348
    8. 'self' → logprob: -11.255745887756348
    9. '(r' → logprob: -12.255745887756348
    10. ' (' → logprob: -12.505745887756348

Token 2348: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0011486716102808714
    2. '[(' → logprob: -7.001148700714111
    3. '(r' → logprob: -8.626148223876953
    4. 'r' → logprob: -10.501148223876953
    5. '[n' → logprob: -11.251148223876953
    6. '[
' → logprob: -11.251148223876953
    7. '[' → logprob: -12.751148223876953
    8. '
' → logprob: -14.626148223876953
    9. '```' → logprob: -15.376148223876953
    10. '   ' → logprob: -15.751148223876953

Token 2349: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008228530059568584
    2. '),' → logprob: -8.000823020935059
    3. ',ch' → logprob: -8.250823020935059
    4. ' ,' → logprob: -8.750823020935059
    5. '],' → logprob: -10.250823020935059
    6. '               ' → logprob: -11.875823020935059
    7. '           ' → logprob: -12.375823020935059
    8. '       ' → logprob: -12.625823020935059
    9. '[ch' → logprob: -12.875823020935059
    10. ',n' → logprob: -12.875823020935059

Token 2350: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0001234428636962548
    2. ' ch' → logprob: -9.000123023986816
    3. '	ch' → logprob: -18.000123977661133
    4. '[ch' → logprob: -18.000123977661133
    5. '(ch' → logprob: -19.625123977661133
    6. '                   ' → logprob: -19.750123977661133
    7. ''ch' → logprob: -20.000123977661133
    8. '-ch' → logprob: -20.750123977661133
    9. ',ch' → logprob: -20.875123977661133
    10. '_ch' → logprob: -22.000123977661133

Token 2351: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013728315010666847
    2. ')]' → logprob: -4.513728141784668
    3. '                       ' → logprob: -6.763728141784668
    4. ']
' → logprob: -7.263728141784668
    5. ')' → logprob: -7.388728141784668
    6. '])' → logprob: -9.388728141784668
    7. '()]' → logprob: -10.263728141784668
    8. ']
' → logprob: -11.138728141784668
    9. ']}' → logprob: -11.388728141784668
    10. ']()' → logprob: -11.513728141784668

Token 2352: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007218453683890402
    2. '```' → logprob: -7.7507219314575195
    3. '                   ' → logprob: -9.25072193145752
    4. '                        
' → logprob: -9.62572193145752
    5. '<|end|>' → logprob: -10.75072193145752
    6. 'self' → logprob: -10.87572193145752
    7. '                           ' → logprob: -10.87572193145752
    8. '                      ' → logprob: -11.25072193145752
    9. '                        ' → logprob: -11.37572193145752
    10. '           ' → logprob: -12.25072193145752

Token 2353: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003285375190898776
    2. '                       ' → logprob: -5.7532854080200195
    3. '                           ' → logprob: -9.87828540802002
    4. ' self' → logprob: -10.25328540802002
    5. '   ' → logprob: -12.12828540802002
    6. '                               ' → logprob: -12.37828540802002
    7. '           ' → logprob: -12.37828540802002
    8. '                   ' → logprob: -12.75328540802002
    9. '       ' → logprob: -13.12828540802002
    10. '               ' → logprob: -14.00328540802002

Token 2354: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.0001334559783572331
    2. 'out' → logprob: -9.375133514404297
    3. '```' → logprob: -10.375133514404297
    4. '.' → logprob: -12.125133514404297
    5. '	out' → logprob: -13.000133514404297
    6. ' .' → logprob: -13.125133514404297
    7. '
' → logprob: -13.750133514404297
    8. '`.' → logprob: -14.000133514404297
    9. '_out' → logprob: -14.250133514404297
    10. '[out' → logprob: -14.375133514404297

Token 2355: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.4140441635390744e-05
    2. '[(' → logprob: -11.875014305114746
    3. '[next' → logprob: -12.500014305114746
    4. '[' → logprob: -13.375014305114746
    5. '```' → logprob: -13.875014305114746
    6. '(n' → logprob: -15.125014305114746
    7. '
' → logprob: -15.125014305114746
    8. 'n' → logprob: -16.12501335144043
    9. '[
' → logprob: -16.50001335144043
    10. '[now' → logprob: -17.00001335144043

Token 2356: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.843177233240567e-05
    2. '[n' → logprob: -11.000018119812012
    3. 't' → logprob: -14.250018119812012
    4. '[r' → logprob: -15.125018119812012
    5. '[t' → logprob: -15.125018119812012
    6. 'st' → logprob: -16.125019073486328
    7. '[' → logprob: -16.375019073486328
    8. 'n' → logprob: -16.500019073486328
    9. ' nxt' → logprob: -16.500019073486328
    10. 'ext' → logprob: -17.000019073486328

Token 2357: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.013737134635448456
    2. '.' → logprob: -4.888737201690674
    3. '.update' → logprob: -5.888737201690674
    4. '[n' → logprob: -6.763737201690674
    5. ').' → logprob: -7.138737201690674
    6. ']' → logprob: -7.763737201690674
    7. '                   ' → logprob: -8.638736724853516
    8. '       ' → logprob: -8.888736724853516
    9. '           ' → logprob: -8.888736724853516
    10. '                       ' → logprob: -9.263736724853516

Token 2358: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -1.5048530030981055e-06
    2. '.update' → logprob: -13.875001907348633
    3. 'extend' → logprob: -15.500001907348633
    4. ' update' → logprob: -15.750001907348633
    5. '```' → logprob: -17.125001907348633
    6. '(update' → logprob: -17.375001907348633
    7. '_update' → logprob: -17.750001907348633
    8. 'add' → logprob: -18.375001907348633
    9. '	update' → logprob: -18.500001907348633
    10. 'append' → logprob: -18.750001907348633

Token 2359: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759473443031311
    2. '(self' → logprob: -0.8259473443031311
    3. '(' → logprob: -12.950947761535645
    4. ' self' → logprob: -12.950947761535645
    5. '[self' → logprob: -13.575947761535645
    6. '
' → logprob: -14.450947761535645
    7. '```' → logprob: -15.200947761535645
    8. '(
' → logprob: -15.200947761535645
    9. '   ' → logprob: -15.325947761535645
    10. '	self' → logprob: -15.450947761535645

Token 2360: '.out' (ID: 3338)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.3138262629508972
    2. '.out' → logprob: -1.313826322555542
    3. '[out' → logprob: -8.063826560974121
    4. 'self' → logprob: -8.688826560974121
    5. '
' → logprob: -10.188826560974121
    6. '$out' → logprob: -10.813826560974121
    7. '	out' → logprob: -12.063826560974121
    8. '```' → logprob: -12.313826560974121
    9. '.' → logprob: -12.688826560974121
    10. '_out' → logprob: -13.063826560974121

Token 2361: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -6.392202976712724e-06
    2. '[(' → logprob: -12.250006675720215
    3. 'self' → logprob: -13.875006675720215
    4. '[n' → logprob: -15.000006675720215
    5. '[' → logprob: -16.1250057220459
    6. '[r' → logprob: -16.8750057220459
    7. '[[' → logprob: -17.1250057220459
    8. '(self' → logprob: -18.3750057220459
    9. '[
' → logprob: -18.3750057220459
    10. '   ' → logprob: -18.8750057220459

Token 2362: '.fail' (ID: 48738)
  Prédit: 'fail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fail' → logprob: -0.10024075955152512
    2. '.fail' → logprob: -2.350240707397461
    3. ' fail' → logprob: -10.850240707397461
    4. '	fail' → logprob: -11.975240707397461
    5. '_fail' → logprob: -12.100240707397461
    6. '
' → logprob: -13.475240707397461
    7. '```' → logprob: -14.850240707397461
    8. 'Fail' → logprob: -15.225240707397461
    9. '   ' → logprob: -15.350240707397461
    10. 'FAIL' → logprob: -16.10024070739746

Token 2363: '[n' (ID: 15433)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0627077966928482
    2. '[n' → logprob: -2.8127079010009766
    3. 'r' → logprob: -7.312707901000977
    4. 'n' → logprob: -9.562707901000977
    5. '	r' → logprob: -14.437707901000977
    6. '   ' → logprob: -14.562707901000977
    7. '[next' → logprob: -15.187707901000977
    8. '(r' → logprob: -15.437707901000977
    9. '       ' → logprob: -15.437707901000977
    10. '```' → logprob: -15.812707901000977

Token 2364: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0010980613296851516
    2. '[n' → logprob: -6.876098155975342
    3. '[t' → logprob: -10.501097679138184
    4. '[r' → logprob: -11.251097679138184
    5. 't' → logprob: -11.376097679138184
    6. '[' → logprob: -12.501097679138184
    7. '])' → logprob: -13.001097679138184
    8. ']]' → logprob: -13.626097679138184
    9. ']' → logprob: -13.876097679138184
    10. '][' → logprob: -14.126097679138184

Token 2365: ']])

' (ID: 186741)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4469740390777588
    2. '[n' → logprob: -1.0719740390777588
    3. ')])' → logprob: -5.07197380065918
    4. ']])' → logprob: -5.69697380065918
    5. '])
' → logprob: -5.69697380065918
    6. '])]' → logprob: -5.94697380065918
    7. ']))' → logprob: -7.82197380065918
    8. '[' → logprob: -8.32197380065918
    9. '       ' → logprob: -8.32197380065918
    10. '[next' → logprob: -8.44697380065918

Token 2366: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002693363232538104
    2. '           ' → logprob: -6.502693176269531
    3. '```' → logprob: -7.627693176269531
    4. '
' → logprob: -8.377693176269531
    5. '   ' → logprob: -8.627693176269531
    6. '               ' → logprob: -9.252693176269531
    7. '                   ' → logprob: -9.252693176269531
    8. 'def' → logprob: -10.127693176269531
    9. '                       ' → logprob: -10.877693176269531
    10. 'import' → logprob: -11.252693176269531

Token 2367: ' input' (ID: 3422)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4992818534374237
    2. '   ' → logprob: -1.374281883239746
    3. 'matches' → logprob: -2.249281883239746
    4. '#' → logprob: -4.374281883239746
    5. '           ' → logprob: -4.749281883239746
    6. '
' → logprob: -5.374281883239746
    7. 'for' → logprob: -5.999281883239746
    8. ' matches' → logprob: -6.374281883239746
    9. '```' → logprob: -6.624281883239746
    10. 'match' → logprob: -6.999281883239746

Token 2368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7223306894302368
    2. '(' → logprob: -1.3473306894302368
    3. '()' → logprob: -1.7223306894302368
    4. ' =' → logprob: -2.8473305702209473
    5. '```' → logprob: -5.472330570220947
    6. '_' → logprob: -5.847330570220947
    7. '   ' → logprob: -5.972330570220947
    8. '(
' → logprob: -6.347330570220947
    9. ')' → logprob: -6.597330570220947
    10. '_line' → logprob: -7.347330570220947

Token 2369: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2014203518629074
    2. ' sys' → logprob: -1.7014203071594238
    3. '=sys' → logprob: -12.951420783996582
    4. '	sys' → logprob: -13.201420783996582
    5. '   ' → logprob: -13.201420783996582
    6. '(sys' → logprob: -13.951420783996582
    7. ' ' → logprob: -17.451419830322266
    8. '/sys' → logprob: -17.951419830322266
    9. '```' → logprob: -17.951419830322266
    10. 'Sys' → logprob: -18.076419830322266

Token 2370: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005753128207288682
    2. '.stdout' → logprob: -7.750575542449951
    3. 'stdin' → logprob: -9.250575065612793
    4. '.' → logprob: -10.750575065612793
    5. '   ' → logprob: -11.375575065612793
    6. '.std' → logprob: -12.125575065612793
    7. '(stdin' → logprob: -13.125575065612793
    8. '().' → logprob: -13.250575065612793
    9. '.argv' → logprob: -13.250575065612793
    10. 'import' → logprob: -14.125575065612793

Token 2371: '.readline' (ID: 74673)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48998868465423584
    2. '.readline' → logprob: -0.9899886846542358
    3. '=' → logprob: -4.614988803863525
    4. '()
' → logprob: -6.489988803863525
    5. ' =' → logprob: -6.739988803863525
    6. '().' → logprob: -6.989988803863525
    7. '```' → logprob: -7.114988803863525
    8. '.' → logprob: -8.364988327026367
    9. 'read' → logprob: -8.864988327026367
    10. '.read' → logprob: -8.864988327026367

Token 2372: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12254106253385544
    2. '
' → logprob: -2.2475409507751465
    3. 'matches' → logprob: -5.7475409507751465
    4. 'def' → logprob: -6.1225409507751465
    5. '       ' → logprob: -6.6225409507751465
    6. '    
' → logprob: -6.7475409507751465
    7. '```' → logprob: -7.3725409507751465
    8. '        
' → logprob: -7.7475409507751465
    9. ' matches' → logprob: -8.747541427612305
    10. '(matches' → logprob: -9.247541427612305

Token 2373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4864565432071686
    2. '       ' → logprob: -0.9864565134048462
    3. '```' → logprob: -4.736456394195557
    4. '
' → logprob: -6.111456394195557
    5. 'def' → logprob: -7.111456394195557
    6. 'import' → logprob: -8.361456871032715
    7. '           ' → logprob: -9.111456871032715
    8. '        
' → logprob: -10.361456871032715
    9. 'n' → logprob: -10.611456871032715
    10. 'from' → logprob: -10.986456871032715

Token 2374: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15807101130485535
    2. 'n' → logprob: -2.7830710411071777
    3. '```' → logprob: -3.0330710411071777
    4. '   ' → logprob: -4.408071041107178
    5. 'element' → logprob: -4.533071041107178
    6. 'for' → logprob: -5.533071041107178
    7. '
' → logprob: -5.908071041107178
    8. 'matches' → logprob: -6.033071041107178
    9. 'while' (adapté à ' while') → logprob: -6.158071041107178
    10. '``' → logprob: -7.158071041107178

Token 2375: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.03824092447757721
    2. ' True' → logprob: -3.288240909576416
    3. '   ' → logprob: -8.913241386413574
    4. '(True' → logprob: -10.413241386413574
    5. '       ' → logprob: -10.663241386413574
    6. 'line' → logprob: -11.913241386413574
    7. '    ' → logprob: -13.288241386413574
    8. ' line' → logprob: -13.788241386413574
    9. '1' → logprob: -14.038241386413574
    10. '
' → logprob: -14.788241386413574

Token 2376: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22989459335803986
    2. '():
' → logprob: -2.7298946380615234
    3. ':' → logprob: -3.2298946380615234
    4. '():' → logprob: -3.2298946380615234
    5. ':
' → logprob: -3.9798946380615234
    6. '(' → logprob: -4.854894638061523
    7. '(line' → logprob: -5.104894638061523
    8. '   ' → logprob: -5.104894638061523
    9. '[' → logprob: -5.479894638061523
    10. '()' → logprob: -5.854894638061523

Token 2377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017067246371880174
    2. 'line' → logprob: -6.501706600189209
    3. ' line' → logprob: -9.126707077026367
    4. '   ' → logprob: -10.001707077026367
    5. '```' → logprob: -10.751707077026367
    6. '	line' → logprob: -11.501707077026367
    7. '           ' → logprob: -11.626707077026367
    8. '#line' → logprob: -12.001707077026367
    9. '(line' → logprob: -13.876707077026367
    10. '     ' → logprob: -14.501707077026367

Token 2378: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0009768366580829024
    2. '       ' → logprob: -7.000977039337158
    3. '   ' → logprob: -10.0009765625
    4. ' line' → logprob: -11.1259765625
    5. '           ' → logprob: -12.6259765625
    6. '	line' → logprob: -14.0009765625
    7. 'try' → logprob: -14.7509765625
    8. '```' → logprob: -15.2509765625
    9. '#line' → logprob: -15.5009765625
    10. '(line' → logprob: -15.5009765625

Token 2379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07036696374416351
    2. '=' → logprob: -2.695366859436035
    3. '       ' → logprob: -8.820366859436035
    4. '=line' → logprob: -9.195366859436035
    5. '           ' → logprob: -9.445366859436035
    6. '        ' → logprob: -10.195366859436035
    7. '.strip' → logprob: -10.695366859436035
    8. ' ' → logprob: -11.945366859436035
    9. '==' → logprob: -12.070366859436035
    10. ' ==' → logprob: -12.320366859436035

Token 2380: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7079383730888367
    2. '''' → logprob: -1.2079384326934814
    3. 'line' → logprob: -2.5829384326934814
    4. ' input' → logprob: -2.9579384326934814
    5. ' line' → logprob: -3.3329384326934814
    6. 'sys' → logprob: -3.7079384326934814
    7. ' sys' → logprob: -4.457938194274902
    8. '''
' → logprob: -5.582938194274902
    9. ''' → logprob: -5.957938194274902
    10. ' ''' → logprob: -6.707938194274902

Token 2381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021217113826423883
    2. 'while' → logprob: -6.377121925354004
    3. '           ' → logprob: -8.377121925354004
    4. '```' → logprob: -9.752121925354004
    5. '	' → logprob: -10.252121925354004
    6. ' while' → logprob: -10.252121925354004
    7. '   ' → logprob: -10.877121925354004
    8. '​' → logprob: -11.627121925354004
    9. 'if' → logprob: -11.752121925354004
    10. ' ' → logprob: -12.127121925354004

Token 2382: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.12088396400213242
    2. '       ' → logprob: -2.2458839416503906
    3. ' while' → logprob: -5.120883941650391
    4. 'line' → logprob: -6.245883941650391
    5. ' line' → logprob: -9.74588394165039
    6. '   ' → logprob: -10.62088394165039
    7. 'try' → logprob: -11.12088394165039
    8. '           ' → logprob: -12.12088394165039
    9. '	while' → logprob: -12.49588394165039
    10. '#line' → logprob: -12.74588394165039

Token 2383: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015596162993460894
    2. ' line' → logprob: -6.501559734344482
    3. 'True' → logprob: -10.501559257507324
    4. '(line' → logprob: -10.626559257507324
    5. 'not' → logprob: -12.876559257507324
    6. ' True' → logprob: -13.251559257507324
    7. 'len' → logprob: -14.376559257507324
    8. '#line' → logprob: -15.751559257507324
    9. '[line' → logprob: -16.37656021118164
    10. ' ' → logprob: -16.50156021118164

Token 2384: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0194447822868824
    2. '=' → logprob: -4.769444942474365
    3. '==' → logprob: -5.144444942474365
    4. '       ' → logprob: -6.144444942474365
    5. ' =' → logprob: -7.144444942474365
    6. ' ==' → logprob: -7.394444942474365
    7. '```' → logprob: -7.394444942474365
    8. '           ' → logprob: -7.769444942474365
    9. 'strip' → logprob: -8.394444465637207
    10. '.' → logprob: -9.894444465637207

Token 2385: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10462410002946854
    2. '()==' → logprob: -2.479624032974243
    3. '==' → logprob: -4.229624271392822
    4. '()!=' → logprob: -7.104624271392822
    5. '```' → logprob: -8.854623794555664
    6. '()='' → logprob: -11.479623794555664
    7. '()<' → logprob: -12.229623794555664
    8. '!=' → logprob: -12.229623794555664
    9. ' ==' → logprob: -12.229623794555664
    10. '=' → logprob: -12.479623794555664

Token 2386: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.028493398800492287
    2. ' ==' → logprob: -3.9034934043884277
    3. '()==' → logprob: -5.028493404388428
    4. '()' → logprob: -6.653493404388428
    5. '```' → logprob: -10.02849292755127
    6. '===' → logprob: -11.40349292755127
    7. '=' → logprob: -11.90349292755127
    8. '           ' → logprob: -12.02849292755127
    9. '=='' → logprob: -12.27849292755127
    10. '==
' → logprob: -13.27849292755127

Token 2387: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -6.098748053773306e-05
    2. ''' → logprob: -9.75006103515625
    3. '''
' → logprob: -13.75006103515625
    4. ''''' → logprob: -14.12506103515625
    5. ' '':
' → logprob: -14.50006103515625
    6. '""' → logprob: -15.50006103515625
    7. '''''' → logprob: -17.12506103515625
    8. '```' → logprob: -17.62506103515625
    9. ' ''' → logprob: -18.12506103515625
    10. '==' → logprob: -18.50006103515625

Token 2388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012736717239022255
    2. ':
' → logprob: -4.762736797332764
    3. '```' → logprob: -6.262736797332764
    4. '       ' → logprob: -7.762736797332764
    5. '==' → logprob: -7.887736797332764
    6. ':' → logprob: -8.012736320495605
    7. '():
' → logprob: -8.137736320495605
    8. '=' → logprob: -8.262736320495605
    9. '               ' → logprob: -8.387736320495605
    10. '   ' → logprob: -9.512736320495605

Token 2389: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -2.522638169466518e-05
    2. ' line' → logprob: -11.000024795532227
    3. '           ' → logprob: -11.750024795532227
    4. '(line' → logprob: -15.250024795532227
    5. '	line' → logprob: -15.875024795532227
    6. '#line' → logprob: -16.375024795532227
    7. '=line' → logprob: -17.000024795532227
    8. 'try' → logprob: -17.500024795532227
    9. '       ' → logprob: -17.500024795532227
    10. '_line' → logprob: -17.875024795532227

Token 2390: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0793125107884407
    2. ' =' → logprob: -2.579312562942505
    3. '=line' → logprob: -7.829312324523926
    4. '=sys' → logprob: -11.579312324523926
    5. '           ' → logprob: -12.329312324523926
    6. 'line' → logprob: -12.454312324523926
    7. '       ' → logprob: -12.704312324523926
    8. '=
' → logprob: -13.204312324523926
    9. '==' → logprob: -14.454312324523926
    10. '   ' → logprob: -14.829312324523926

Token 2391: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0019291093340143561
    2. ' sys' → logprob: -6.25192928314209
    3. 'input' → logprob: -14.62692928314209
    4. '=sys' → logprob: -17.501928329467773
    5. '           ' → logprob: -18.876928329467773
    6. '(sys' → logprob: -19.001928329467773
    7. 'stdin' → logprob: -19.751928329467773
    8. '	sys' → logprob: -20.126928329467773
    9. '```' → logprob: -20.626928329467773
    10. '_sys' → logprob: -20.751928329467773

Token 2392: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002933942887466401
    2. 'stdin' → logprob: -8.375293731689453
    3. 'in' → logprob: -10.750293731689453
    4. '.readline' → logprob: -11.500293731689453
    5. '           ' → logprob: -11.500293731689453
    6. '.stdout' → logprob: -11.750293731689453
    7. '   ' → logprob: -12.000293731689453
    8. '       ' → logprob: -13.250293731689453
    9. '=sys' → logprob: -13.625293731689453
    10. '
' → logprob: -14.125293731689453

Token 2393: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.034499913454055786
    2. 'stdin' → logprob: -3.7844998836517334
    3. 'read' → logprob: -4.5345001220703125
    4. '.stdin' → logprob: -7.7845001220703125
    5. 'sys' → logprob: -10.909500122070312
    6. ' readline' → logprob: -11.659500122070312
    7. 'reader' → logprob: -12.034500122070312
    8. 'stdout' → logprob: -12.284500122070312
    9. '(stdin' → logprob: -13.034500122070312
    10. '.read' → logprob: -14.159500122070312

Token 2394: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08830267190933228
    2. '           ' → logprob: -2.5883026123046875
    3. '<|end|>' → logprob: -4.9633026123046875
    4. '<|end|>' → logprob: -7.0883026123046875
    5. '               ' → logprob: -8.088302612304688
    6. '```' → logprob: -8.338302612304688
    7. ',' → logprob: -8.588302612304688
    8. ')' → logprob: -8.838302612304688
    9. '()' → logprob: -9.213302612304688
    10. '.' → logprob: -9.463302612304688

Token 2395: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22748324275016785
    2. '           ' → logprob: -1.6024832725524902
    3. '```' → logprob: -6.47748327255249
    4. '   ' → logprob: -9.102482795715332
    5. '               ' → logprob: -9.102482795715332
    6. ' if' → logprob: -9.227482795715332
    7. '<|end|>' → logprob: -9.727482795715332
    8. ' ' → logprob: -10.227482795715332
    9. 'if' → logprob: -10.227482795715332
    10. '                   ' → logprob: -11.602482795715332

Token 2396: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6367460489273071
    2. '           ' → logprob: -0.8867460489273071
    3. ' if' → logprob: -3.0117459297180176
    4. '       ' → logprob: -4.761745929718018
    5. '```' → logprob: -6.886745929718018
    6. '               ' → logprob: -9.261746406555176
    7. 'If' → logprob: -10.136746406555176
    8. '   ' → logprob: -11.011746406555176
    9. '		' → logprob: -11.511746406555176
    10. ' ' → logprob: -12.011746406555176

Token 2397: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12692958116531372
    2. 'not' → logprob: -2.126929521560669
    3. '           ' → logprob: -14.25192928314209
    4. ' line' → logprob: -14.50192928314209
    5. 'line' → logprob: -15.25192928314209
    6. '
' → logprob: -17.251930236816406
    7. '               ' → logprob: -18.001930236816406
    8. '	not' → logprob: -18.751930236816406
    9. '(not' → logprob: -18.876930236816406
    10. '#line' → logprob: -19.251930236816406

Token 2398: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -5.836499985889532e-05
    2. ' line' → logprob: -9.7500581741333
    3. '(line' → logprob: -19.750059127807617
    4. '#line' → logprob: -19.750059127807617
    5. '[line' → logprob: -20.750059127807617
    6. '	line' → logprob: -22.000059127807617
    7. '=line' → logprob: -22.000059127807617
    8. '
' → logprob: -22.250059127807617
    9. '   ' → logprob: -23.500059127807617
    10. ' ' → logprob: -24.250059127807617

Token 2399: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03392184153199196
    2. '           ' → logprob: -4.533921718597412
    3. '               ' → logprob: -4.658921718597412
    4. ':' → logprob: -4.658921718597412
    5. '):
' → logprob: -5.908921718597412
    6. '       ' → logprob: -8.03392219543457
    7. '```' → logprob: -8.40892219543457
    8. '==' → logprob: -9.28392219543457
    9. '                   ' → logprob: -9.53392219543457
    10. ')' → logprob: -9.78392219543457

Token 2400: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.240481914370321e-05
    2. '           ' → logprob: -10.000052452087402
    3. '                   ' → logprob: -13.250052452087402
    4. '```' → logprob: -13.625052452087402
    5. 'return' → logprob: -14.125052452087402
    6. '		       ' → logprob: -14.250052452087402
    7. '              ' → logprob: -14.750052452087402
    8. '	           ' → logprob: -14.875052452087402
    9. '             ' → logprob: -15.125052452087402
    10. '			' → logprob: -15.500052452087402

Token 2401: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08589888364076614
    2. ' return' → logprob: -3.0858988761901855
    3. '               ' → logprob: -3.3358988761901855
    4. 'break' → logprob: -6.9608988761901855
    5. '                   ' → logprob: -10.210899353027344
    6. ' break' → logprob: -10.585899353027344
    7. '           ' → logprob: -11.085899353027344
    8. '```' → logprob: -12.085899353027344
    9. '   ' → logprob: -12.585899353027344
    10. '                       ' → logprob: -13.585899353027344

Token 2402: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003012617235071957
    2. '
' → logprob: -8.625301361083984
    3. '```' → logprob: -9.875301361083984
    4. '        
' → logprob: -10.250301361083984
    5. '<|end|>' → logprob: -11.000301361083984
    6. '   ' → logprob: -12.500301361083984
    7. ' ' → logprob: -12.875301361083984
    8. ',' → logprob: -13.000301361083984
    9. '      ' → logprob: -13.125301361083984
    10. '           ' → logprob: -13.250301361083984

Token 2403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1041145626222715e-05
    2. '```' → logprob: -12.000011444091797
    3. '           ' → logprob: -13.625011444091797
    4. '
' → logprob: -13.750011444091797
    5. 'n' → logprob: -13.875011444091797
    6. '   ' → logprob: -14.000011444091797
    7. '<|end|>' → logprob: -15.500011444091797
    8. ',' → logprob: -15.625011444091797
    9. 's' → logprob: -16.375011444091797
    10. '	' → logprob: -17.000011444091797

Token 2404: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.03523682430386543
    2. '       ' → logprob: -3.4102368354797363
    3. '
' → logprob: -7.160236835479736
    4. ' n' → logprob: -7.285236835479736
    5. '```' → logprob: -9.285236358642578
    6. '(n' → logprob: -11.785236358642578
    7. 'm' → logprob: -11.910236358642578
    8. '        
' → logprob: -12.535236358642578
    9. '   ' → logprob: -12.785236358642578
    10. '           ' → logprob: -13.035236358642578

Token 2405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039373442996293306
    2. ',
' → logprob: -8.500393867492676
    3. ' ,' → logprob: -9.375393867492676
    4. '       ' → logprob: -9.875393867492676
    5. ',n' → logprob: -11.000393867492676
    6. '<|end|>' → logprob: -11.000393867492676
    7. '=' → logprob: -12.625393867492676
    8. ',m' → logprob: -13.125393867492676
    9. '[' → logprob: -13.250393867492676
    10. ')' → logprob: -13.500393867492676

Token 2406: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0052354102954268456
    2. ' m' → logprob: -5.255235195159912
    3. '0' → logprob: -13.50523567199707
    4. ' ' → logprob: -16.63023567199707
    5. ' 
' → logprob: -17.25523567199707
    6. '
' → logprob: -17.38023567199707
    7. ',m' → logprob: -17.38023567199707
    8. '=' → logprob: -17.50523567199707
    9. ' ' → logprob: -17.75523567199707
    10. '    ' → logprob: -19.25523567199707

Token 2407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2822258174419403
    2. ' =' → logprob: -1.4072258472442627
    3. ',' → logprob: -7.157225608825684
    4. ')' → logprob: -8.657225608825684
    5. '       ' → logprob: -9.657225608825684
    6. '        ' → logprob: -10.657225608825684
    7. '=
' → logprob: -12.032225608825684
    8. '<|end|>' → logprob: -12.532225608825684
    9. ' ' → logprob: -12.657225608825684
    10. '.' → logprob: -12.782225608825684

Token 2408: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06196993216872215
    2. ' map' → logprob: -2.8119699954986572
    3. 'line' → logprob: -14.186969757080078
    4. 'm' → logprob: -14.436969757080078
    5. 'n' → logprob: -15.186969757080078
    6. ' n' → logprob: -15.561969757080078
    7. '_map' → logprob: -16.186969757080078
    8. ' line' → logprob: -16.186969757080078
    9. 'list' → logprob: -16.186969757080078
    10. '
' → logprob: -16.436969757080078

Token 2409: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002701327670365572
    2. '(str' → logprob: -6.127701282501221
    3. '(line' → logprob: -7.627701282501221
    4. '(' → logprob: -11.502701759338379
    5. '(map' → logprob: -11.502701759338379
    6. '(list' → logprob: -12.627701759338379
    7. '(tuple' → logprob: -13.252701759338379
    8. 'int' → logprob: -13.627701759338379
    9. ' (' → logprob: -13.752701759338379
    10. '=int' → logprob: -14.877701759338379

Token 2410: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00909513235092163
    2. '(str' → logprob: -5.634095191955566
    3. ',' → logprob: -6.259095191955566
    4. '(' → logprob: -6.384095191955566
    5. '(int' → logprob: -7.009095191955566
    6. ',line' → logprob: -7.759095191955566
    7. '=line' → logprob: -8.509095191955566
    8. ')' → logprob: -9.384095191955566
    9. '   ' → logprob: -10.009095191955566
    10. '       ' → logprob: -10.259095191955566

Token 2411: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.696889623621246e-06
    2. ' line' → logprob: -13.00000286102295
    3. '(line' → logprob: -16.125001907348633
    4. '[line' → logprob: -16.125001907348633
    5. 'str' → logprob: -16.250001907348633
    6. 'list' → logprob: -17.000001907348633
    7. 'map' → logprob: -18.000001907348633
    8. '=line' → logprob: -18.750001907348633
    9. '#line' → logprob: -19.000001907348633
    10. '           ' → logprob: -19.625001907348633

Token 2412: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.1408878117799759
    2. '.split' → logprob: -3.01588773727417
    3. '().' → logprob: -3.39088773727417
    4. '```' → logprob: -3.89088773727417
    5. '.' → logprob: -4.14088773727417
    6. ').' → logprob: -6.39088773727417
    7. '       ' → logprob: -6.51588773727417
    8. '.readline' → logprob: -6.76588773727417
    9. '<|end|>' → logprob: -7.01588773727417
    10. '('').' → logprob: -7.26588773727417

Token 2413: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000340111117111519
    2. '.split' → logprob: -8.000340461730957
    3. '()' → logprob: -13.125340461730957
    4. '()[' → logprob: -13.750340461730957
    5. '       ' → logprob: -14.500340461730957
    6. '.Split' → logprob: -15.625340461730957
    7. '().
' → logprob: -15.750340461730957
    8. '()==' → logprob: -16.00033950805664
    9. '()
' → logprob: -16.25033950805664
    10. '.' → logprob: -16.25033950805664

Token 2414: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. ' split' → logprob: -14.250000953674316
    3. ')' → logprob: -16.000001907348633
    4. '_split' → logprob: -16.500001907348633
    5. '```' → logprob: -16.750001907348633
    6. 'spl' → logprob: -18.375001907348633
    7. '.split' → logprob: -18.500001907348633
    8. '0' → logprob: -18.875001907348633
    9. '(split' → logprob: -19.625001907348633
    10. '()' → logprob: -20.125001907348633

Token 2415: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039039745926856995
    2. ')
' → logprob: -3.6640398502349854
    3. '())' → logprob: -4.789039611816406
    4. '()' → logprob: -5.914039611816406
    5. '())
' → logprob: -6.914039611816406
    6. '       ' → logprob: -7.789039611816406
    7. '))' → logprob: -10.039039611816406
    8. '()
' → logprob: -10.039039611816406
    9. '')' → logprob: -10.289039611816406
    10. '   ' → logprob: -10.664039611816406

Token 2416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.6060808522743173e-05
    2. '           ' → logprob: -11.500025749206543
    3. '```' → logprob: -11.625025749206543
    4. '   ' → logprob: -12.250025749206543
    5. 'if' → logprob: -13.875025749206543
    6. ' if' → logprob: -14.750025749206543
    7. '<|end|>' → logprob: -15.000025749206543
    8. ' ' → logprob: -15.375025749206543
    9. '               ' → logprob: -15.625025749206543
    10. '        
' → logprob: -17.37502670288086

Token 2417: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009300446254201233
    2. 'if' (adapté à ' if') → logprob: -7.000929832458496
    3. '           ' → logprob: -11.375929832458496
    4. '```' → logprob: -12.625929832458496
    5. '   ' → logprob: -13.250929832458496
    6. ' if' → logprob: -13.750929832458496
    7. '	' → logprob: -14.625929832458496
    8. '               ' → logprob: -15.375929832458496
    9. '
' → logprob: -16.250930786132812
    10. 'If' → logprob: -16.875930786132812

Token 2418: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.251975417137146
    2. 'n' → logprob: -1.501975417137146
    3. '0' → logprob: -10.126975059509277
    4. '(n' → logprob: -12.876975059509277
    5. ' ' → logprob: -13.001975059509277
    6. '       ' → logprob: -13.626975059509277
    7. '        ' → logprob: -15.876975059509277
    8. '	n' → logprob: -16.251976013183594
    9. ' ' → logprob: -17.251976013183594
    10. ' (' → logprob: -17.376976013183594

Token 2419: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759947299957275
    2. ' ==' → logprob: -0.8259947299957275
    3. '           ' → logprob: -10.450994491577148
    4. '```' → logprob: -11.075994491577148
    5. '       ' → logprob: -12.325994491577148
    6. ' !=' → logprob: -13.825994491577148
    7. '          ' → logprob: -14.450994491577148
    8. '[' → logprob: -14.575994491577148
    9. '!=' → logprob: -14.700994491577148
    10. '=' → logprob: -14.700994491577148

Token 2420: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.375003814697266
    4. '       ' → logprob: -19.625003814697266
    5. '
' → logprob: -19.750003814697266
    6. '=' → logprob: -20.500003814697266
    7. '(' → logprob: -20.750003814697266
    8. '```' → logprob: -20.750003814697266
    9. '1' → logprob: -21.000003814697266
    10. '           ' → logprob: -21.125003814697266

Token 2421: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -19.5
    4. '۰' → logprob: -21.0
    5. '```' → logprob: -21.25
    6. '(' → logprob: -22.25
    7. '=' → logprob: -22.5
    8. '1' → logprob: -22.875
    9. ''' → logprob: -23.0
    10. ' ' → logprob: -23.125

Token 2422: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20301279425621033
    2. 'and' → logprob: -1.7030128240585327
    3. ',' → logprob: -6.578012943267822
    4. '           ' → logprob: -8.828012466430664
    5. '       ' → logprob: -10.578012466430664
    6. ' ' → logprob: -11.453012466430664
    7. '```' → logprob: -12.703012466430664
    8. '   ' → logprob: -12.828012466430664
    9. '          ' → logprob: -12.828012466430664
    10. '        ' → logprob: -12.953012466430664

Token 2423: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.029750484973192215
    2. ' m' → logprob: -3.5297505855560303
    3. '	m' → logprob: -17.90475082397461
    4. '0' → logprob: -18.40475082397461
    5. '       ' → logprob: -18.65475082397461
    6. ' ' → logprob: -20.40475082397461
    7. ' ' → logprob: -20.90475082397461
    8. '           ' → logprob: -21.15475082397461
    9. '   ' → logprob: -21.15475082397461
    10. '$m' → logprob: -21.40475082397461

Token 2424: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0485982745885849
    2. '==' → logprob: -3.048598289489746
    3. '           ' → logprob: -12.548598289489746
    4. '```' → logprob: -13.298598289489746
    5. ')==' → logprob: -13.673598289489746
    6. ' ' → logprob: -13.923598289489746
    7. '==
' → logprob: -14.423598289489746
    8. '[' → logprob: -14.423598289489746
    9. ' ==
' → logprob: -14.548598289489746
    10. ')' → logprob: -14.923598289489746

Token 2425: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -19.125009536743164
    4. '۰' → logprob: -20.000009536743164
    5. '       ' → logprob: -20.250009536743164
    6. '```' → logprob: -20.625009536743164
    7. '=' → logprob: -20.750009536743164
    8. '
' → logprob: -21.000009536743164
    9. '  ' → logprob: -21.250009536743164
    10. '٠' → logprob: -21.875009536743164

Token 2426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -21.375
    4. '```' → logprob: -23.0
    5. '০' → logprob: -23.25
    6. '
' → logprob: -23.25
    7. '   ' → logprob: -23.375
    8. '０' → logprob: -23.625
    9. '०' → logprob: -24.0
    10. '  ' → logprob: -24.125

Token 2427: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45613211393356323
    2. ':' → logprob: -1.206132173538208
    3. ':
' → logprob: -2.706132173538208
    4. '		' → logprob: -9.581131935119629
    5. '               ' → logprob: -10.956131935119629
    6. '          ' → logprob: -11.831131935119629
    7. '       ' → logprob: -12.081131935119629
    8. '	       ' → logprob: -12.206131935119629
    9. ':return' → logprob: -12.331131935119629
    10. ':
' → logprob: -13.206131935119629

Token 2428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.763666947837919e-05
    2. '       ' → logprob: -10.37504768371582
    3. '		' → logprob: -11.37504768371582
    4. '               ' → logprob: -13.00004768371582
    5. '   ' → logprob: -14.37504768371582
    6. '```' → logprob: -14.62504768371582
    7. '	       ' → logprob: -14.62504768371582
    8. '          ' → logprob: -14.87504768371582
    9. '         ' → logprob: -16.00004768371582
    10. 'break' → logprob: -16.50004768371582

Token 2429: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5768041610717773
    2. '           ' → logprob: -0.8268041610717773
    3. ' break' → logprob: -7.701804161071777
    4. 'return' → logprob: -8.326804161071777
    5. '               ' → logprob: -10.201804161071777
    6. '   ' → logprob: -10.201804161071777
    7. 'continue' → logprob: -10.326804161071777
    8. '       ' → logprob: -10.576804161071777
    9. '	break' → logprob: -10.826804161071777
    10. '		' → logprob: -11.201804161071777

Token 2430: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005987849435769022
    2. '```' → logprob: -7.875598907470703
    3. '
' → logprob: -8.625598907470703
    4. 'element' → logprob: -11.500598907470703
    5. '<|end|>' → logprob: -11.500598907470703
    6. '        
' → logprob: -11.875598907470703
    7. '   ' → logprob: -12.250598907470703
    8. '``' → logprob: -13.250598907470703
    9. '#' → logprob: -13.625598907470703
    10. '           ' → logprob: -13.750598907470703

Token 2431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002477502857800573
    2. 'element' → logprob: -9.125247955322266
    3. '```' → logprob: -9.250247955322266
    4. '
' → logprob: -10.500247955322266
    5. '#' → logprob: -12.125247955322266
    6. '           ' → logprob: -12.250247955322266
    7. '   ' → logprob: -12.625247955322266
    8. '``' → logprob: -14.125247955322266
    9. '        
' → logprob: -14.875247955322266
    10. 'elements' → logprob: -15.000247955322266

Token 2432: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' (adapté à ' element') → logprob: -0.20148009061813354
    2. '       ' → logprob: -1.7014801502227783
    3. '   ' → logprob: -11.2014799118042
    4. '```' → logprob: -11.2014799118042
    5. ' element' → logprob: -11.3264799118042
    6. 'elements' → logprob: -11.4514799118042
    7. '
' → logprob: -11.9514799118042
    8. '	element' → logprob: -12.4514799118042
    9. '           ' → logprob: -13.2014799118042
    10. '#' → logprob: -13.8264799118042

Token 2433: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -9.372294698550832e-06
    2. 's' → logprob: -12.250009536743164
    3. 'strings' → logprob: -13.000009536743164
    4. '_s' → logprob: -13.500009536743164
    5. '```' → logprob: -15.000009536743164
    6. '_' → logprob: -15.125009536743164
    7. 'Strings' → logprob: -17.125009536743164
    8. '_string' → logprob: -17.625009536743164
    9. '_tokens' → logprob: -17.875009536743164
    10. '_str' → logprob: -18.000009536743164

Token 2434: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7123124003410339
    2. '=' → logprob: -0.9623124003410339
    3. ' =' → logprob: -2.4623124599456787
    4. '.' → logprob: -3.4623124599456787
    5. '=[]' → logprob: -4.9623122215271
    6. '=[]
' → logprob: -5.9623122215271
    7. '.extend' → logprob: -6.9623122215271
    8. '.clear' → logprob: -9.212312698364258
    9. '.=' → logprob: -9.337312698364258
    10. '+=' → logprob: -10.087312698364258

Token 2435: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0006781232077628374
    2. '[' → logprob: -8.000678062438965
    3. '[]
' → logprob: -8.000678062438965
    4. '[
' → logprob: -13.625678062438965
    5. '[user' → logprob: -14.000678062438965
    6. ' []' → logprob: -14.000678062438965
    7. '[int' → logprob: -14.250678062438965
    8. '[str' → logprob: -14.500678062438965
    9. '[ind' → logprob: -15.250678062438965
    10. '[n' → logprob: -15.375678062438965

Token 2436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006111162714660168
    2. 'for' → logprob: -5.506111145019531
    3. '	' → logprob: -6.881111145019531
    4. '```' → logprob: -8.131111145019531
    5. '           ' → logprob: -8.381111145019531
    6. ' for' → logprob: -8.881111145019531
    7. '	       ' → logprob: -8.881111145019531
    8. '	for' → logprob: -10.131111145019531
    9. '               ' → logprob: -10.381111145019531
    10. '[' → logprob: -10.506111145019531

Token 2437: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1809692233800888
    2. '       ' → logprob: -1.93096923828125
    3. ' for' → logprob: -4.05596923828125
    4. '	' → logprob: -6.05596923828125
    5. '	for' → logprob: -8.30596923828125
    6. '
' → logprob: -8.43096923828125
    7. '```' → logprob: -8.43096923828125
    8. '           ' → logprob: -9.55596923828125
    9. '        
' → logprob: -10.43096923828125
    10. '	       ' → logprob: -10.93096923828125

Token 2438: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0014666540082544088
    2. '_' → logprob: -6.876466751098633
    3. ' =' → logprob: -9.001466751098633
    4. '=' → logprob: -9.001466751098633
    5. '_s' → logprob: -9.751466751098633
    6. 's' → logprob: -10.001466751098633
    7. 'sum' → logprob: -10.626466751098633
    8. ' +=' → logprob: -11.001466751098633
    9. ')' → logprob: -11.876466751098633
    10. '(' → logprob: -12.126466751098633

Token 2439: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2567303776741028
    2. ' =' → logprob: -1.506730318069458
    3. '+=' → logprob: -6.006730556488037
    4. ' +=' → logprob: -6.131730556488037
    5. 'for' → logprob: -9.756730079650879
    6. '       ' → logprob: -11.256730079650879
    7. '+' → logprob: -11.256730079650879
    8. ')' → logprob: -11.256730079650879
    9. '        ' → logprob: -11.381730079650879
    10. '.' → logprob: -11.631730079650879

Token 2440: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007608278188854456
    2. ' ' → logprob: -4.882608413696289
    3. '        ' → logprob: -14.257608413696289
    4. 'len' → logprob: -14.257608413696289
    5. ' len' → logprob: -15.382608413696289
    6. ' ' → logprob: -15.632608413696289
    7. '=' → logprob: -15.632608413696289
    8. '       ' → logprob: -16.13260841369629
    9. '    ' → logprob: -16.25760841369629
    10. '+' → logprob: -16.75760841369629

Token 2441: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.35837464465294e-05
    2. ' ' → logprob: -10.125043869018555
    3. 'len' → logprob: -12.750043869018555
    4. '=' → logprob: -15.375043869018555
    5. '+' → logprob: -16.000043869018555
    6. '   ' → logprob: -16.750043869018555
    7. 'sum' → logprob: -17.000043869018555
    8. 'n' → logprob: -17.125043869018555
    9. '+=' → logprob: -17.250043869018555
    10. 'int' → logprob: -17.250043869018555

Token 2442: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009825625456869602
    2. 'for' → logprob: -4.884825706481934
    3. ' for' → logprob: -6.884825706481934
    4. '	' → logprob: -7.884825706481934
    5. '```' → logprob: -7.884825706481934
    6. '<|end|>' → logprob: -8.634825706481934
    7. '
' → logprob: -10.009825706481934
    8. '	for' → logprob: -10.384825706481934
    9. '           ' → logprob: -10.634825706481934
    10. '        
' → logprob: -10.634825706481934

Token 2443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012766136787831783
    2. 'for' → logprob: -4.387766361236572
    3. ' for' → logprob: -8.512765884399414
    4. '
' → logprob: -10.637765884399414
    5. '           ' → logprob: -11.637765884399414
    6. '```' → logprob: -11.637765884399414
    7. '   ' → logprob: -11.762765884399414
    8. '	for' → logprob: -13.637765884399414
    9. '<|end|>' → logprob: -13.637765884399414
    10. '	' → logprob: -14.012765884399414

Token 2444: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.47563669085502625
    2. '       ' → logprob: -0.9756367206573486
    3. ' for' → logprob: -6.8506364822387695
    4. '
' → logprob: -8.85063648223877
    5. '	' → logprob: -9.10063648223877
    6. '	for' → logprob: -9.22563648223877
    7. '```' → logprob: -9.22563648223877
    8. '           ' → logprob: -10.60063648223877
    9. '   ' → logprob: -11.10063648223877
    10. '        
' → logprob: -13.22563648223877

Token 2445: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_
' → logprob: -17.625
    3. '_range' → logprob: -19.75
    4. ' _' → logprob: -19.75
    5. '_
' → logprob: -20.125
    6. '_in' → logprob: -20.5
    7. '_=' → logprob: -20.5
    8. '_

' → logprob: -20.5
    9. '`' → logprob: -20.75
    10. ' in' → logprob: -20.875

Token 2446: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01628280244767666
    2. ' in' → logprob: -4.51628303527832
    3. 'in' → logprob: -5.26628303527832
    4. 'range' → logprob: -9.89128303527832
    5. ' _' → logprob: -12.39128303527832
    6. '
' → logprob: -13.51628303527832
    7. ' ' → logprob: -14.76628303527832
    8. ' range' → logprob: -14.76628303527832
    9. '```' → logprob: -14.76628303527832
    10. '_in' → logprob: -15.39128303527832

Token 2447: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10043860226869583
    2. '_' → logprob: -2.3504385948181152
    3. ' range' → logprob: -8.475439071655273
    4. '_range' → logprob: -10.725439071655273
    5. 'in' → logprob: -14.350439071655273
    6. '0' → logprob: -14.600439071655273
    7. '_in' → logprob: -16.350439071655273
    8. '(range' → logprob: -16.850439071655273
    9. 'sys' → logprob: -17.350439071655273
    10. ' in' → logprob: -17.850439071655273

Token 2448: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06268720328807831
    2. 'm' → logprob: -2.8126871585845947
    3. 'int' → logprob: -7.312687397003174
    4. ' n' → logprob: -10.687686920166016
    5. 'range' → logprob: -11.312686920166016
    6. '0' → logprob: -12.562686920166016
    7. '(n' → logprob: -12.687686920166016
    8. '   ' → logprob: -13.062686920166016
    9. '       ' → logprob: -13.187686920166016
    10. ' m' → logprob: -13.562686920166016

Token 2449: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3000275194644928
    2. '           ' → logprob: -1.6750274896621704
    3. ':
' → logprob: -3.30002760887146
    4. '       ' → logprob: -4.050027370452881
    5. '):' → logprob: -4.425027370452881
    6. ':' → logprob: -5.675027370452881
    7. '():
' → logprob: -7.425027370452881
    8. '```' → logprob: -7.675027370452881
    9. ',' → logprob: -8.050027847290039
    10. 's' → logprob: -8.675027847290039

Token 2450: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005934843793511391
    2. 's' → logprob: -5.505934715270996
    3. '```' → logprob: -6.380934715270996
    4. ' s' → logprob: -9.255934715270996
    5. '       ' → logprob: -11.255934715270996
    6. '	       ' → logprob: -11.505934715270996
    7. '   ' → logprob: -11.755934715270996
    8. '		' → logprob: -11.880934715270996
    9. '               ' → logprob: -11.880934715270996
    10. '`s' → logprob: -13.130934715270996

Token 2451: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0013761838199570775
    2. '           ' → logprob: -6.751376152038574
    3. ' s' → logprob: -8.626376152038574
    4. '               ' → logprob: -10.876376152038574
    5. 'line' → logprob: -12.751376152038574
    6. '```' → logprob: -13.376376152038574
    7. '	s' → logprob: -14.001376152038574
    8. '                   ' → logprob: -14.126376152038574
    9. '       ' → logprob: -14.501376152038574
    10. '`s' → logprob: -15.126376152038574

Token 2452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869984745979309
    2. ' =' → logprob: -1.1369984149932861
    3. '           ' → logprob: -9.386998176574707
    4. '=s' → logprob: -10.386998176574707
    5. '=sys' → logprob: -11.511998176574707
    6. '		' → logprob: -14.136998176574707
    7. '       ' → logprob: -14.386998176574707
    8. '               ' → logprob: -15.011998176574707
    9. '	' → logprob: -15.261998176574707
    10. '=
' → logprob: -15.761998176574707

Token 2453: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002506101271137595
    2. ' sys' → logprob: -6.002506256103516
    3. 's' → logprob: -10.627506256103516
    4. '           ' → logprob: -12.377506256103516
    5. 'input' → logprob: -13.877506256103516
    6. '=sys' → logprob: -14.752506256103516
    7. '(sys' → logprob: -15.002506256103516
    8. '               ' → logprob: -15.252506256103516
    9. '	sys' → logprob: -16.752506256103516
    10. '                   ' → logprob: -16.877506256103516

Token 2454: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0069070677272975445
    2. 'stdin' → logprob: -5.131906986236572
    3. '.readline' → logprob: -8.13190746307373
    4. '=sys' → logprob: -8.38190746307373
    5. 'sys' → logprob: -9.00690746307373
    6. '.stdout' → logprob: -9.00690746307373
    7. 'ys' → logprob: -9.00690746307373
    8. 'td' → logprob: -10.63190746307373
    9. 'in' → logprob: -10.88190746307373
    10. 'canf' → logprob: -11.88190746307373

Token 2455: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003538158780429512
    2. '.stdin' → logprob: -8.125353813171387
    3. '().' → logprob: -10.125353813171387
    4. 'stdin' → logprob: -11.125353813171387
    5. '.strip' → logprob: -14.000353813171387
    6. 'sys' → logprob: -14.625353813171387
    7. 'strip' → logprob: -14.875353813171387
    8. '.' → logprob: -15.125353813171387
    9. '(stdin' → logprob: -15.375353813171387
    10. '=sys' → logprob: -15.500353813171387

Token 2456: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008174888207577169
    2. '()' → logprob: -7.25081729888916
    3. '           ' → logprob: -9.50081729888916
    4. '.strip' → logprob: -11.25081729888916
    5. '()
' → logprob: -11.25081729888916
    6. '.readline' → logprob: -14.00081729888916
    7. '       ' → logprob: -14.00081729888916
    8. '.rstrip' → logprob: -14.00081729888916
    9. '.' → logprob: -14.75081729888916
    10. '               ' → logprob: -14.75081729888916

Token 2457: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -9.491498531133402e-06
    2. 'rstrip' → logprob: -11.750009536743164
    3. '.strip' → logprob: -13.875009536743164
    4. '_strip' → logprob: -15.500009536743164
    5. ' strip' → logprob: -15.875009536743164
    6. 's' → logprob: -16.250009536743164
    7. '           ' → logprob: -16.750009536743164
    8. '```' → logprob: -17.000009536743164
    9. '-strip' → logprob: -17.125009536743164
    10. '(strip' → logprob: -17.875009536743164

Token 2458: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002493375912308693
    2. '       ' → logprob: -7.502493381500244
    3. '            
' → logprob: -7.627493381500244
    4. '
' → logprob: -7.877493381500244
    5. 's' → logprob: -8.002492904663086
    6. '```' → logprob: -9.252492904663086
    7. ')' → logprob: -9.627492904663086
    8. '               ' → logprob: -9.627492904663086
    9. '()' → logprob: -9.752492904663086
    10. '<|end|>' → logprob: -9.752492904663086

Token 2459: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003740694955922663
    2. 'element' → logprob: -8.000373840332031
    3. '       ' → logprob: -11.250373840332031
    4. '```' → logprob: -11.375373840332031
    5. '	       ' → logprob: -12.125373840332031
    6. '		' → logprob: -12.625373840332031
    7. '               ' → logprob: -12.875373840332031
    8. ' element' → logprob: -14.250373840332031
    9. '   ' → logprob: -14.625373840332031
    10. '                   ' → logprob: -15.000373840332031

Token 2460: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' (adapté à ' element') → logprob: -0.5550646185874939
    2. '           ' → logprob: -1.0550646781921387
    3. '		' → logprob: -2.6800646781921387
    4. '	element' → logprob: -5.555064678192139
    5. '	' → logprob: -6.055064678192139
    6. '       ' → logprob: -6.680064678192139
    7. '	       ' → logprob: -7.305064678192139
    8. ' element' → logprob: -8.05506420135498
    9. '```' → logprob: -8.43006420135498
    10. '               ' → logprob: -8.55506420135498

Token 2461: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -2.117345684382599e-05
    2. 'strings' → logprob: -10.875020980834961
    3. 's' → logprob: -13.375020980834961
    4. '_' → logprob: -15.125020980834961
    5. '_s' → logprob: -16.25002098083496
    6. 'Strings' → logprob: -16.37502098083496
    7. '(strings' → logprob: -16.50002098083496
    8. '"strings' → logprob: -17.62502098083496
    9. ' strings' → logprob: -17.62502098083496
    10. '           ' → logprob: -17.75002098083496

Token 2462: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003422567679081112
    2. '.' → logprob: -8.00034236907959
    3. '           ' → logprob: -13.12534236907959
    4. ' .' → logprob: -13.50034236907959
    5. '.app' → logprob: -13.87534236907959
    6. ').' → logprob: -14.25034236907959
    7. 'append' → logprob: -14.50034236907959
    8. '.add' → logprob: -14.75034236907959
    9. '.extend' → logprob: -14.87534236907959
    10. '.ap' → logprob: -16.125341415405273

Token 2463: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.02325141802430153
    2. 's' → logprob: -3.773251533508301
    3. '(' → logprob: -12.5232515335083
    4. ' s' → logprob: -13.1482515335083
    5. '`s' → logprob: -16.273250579833984
    6. ' (' → logprob: -16.398250579833984
    7. '(
' → logprob: -16.898250579833984
    8. ')s' → logprob: -17.148250579833984
    9. '{s' → logprob: -17.898250579833984
    10. ''s' → logprob: -18.148250579833984

Token 2464: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03738093003630638
    2. '       ' → logprob: -4.162380695343018
    3. '           ' → logprob: -4.287380695343018
    4. '<|end|>' → logprob: -5.037380695343018
    5. '<|end|>' → logprob: -7.537380695343018
    6. ')
' → logprob: -9.537381172180176
    7. '.' → logprob: -10.037381172180176
    8. '```' → logprob: -10.162381172180176
    9. '')' → logprob: -10.537381172180176
    10. '
' → logprob: -10.912381172180176

Token 2465: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0861610695719719
    2. '           ' → logprob: -2.5861611366271973
    3. '<|end|>' → logprob: -6.211161136627197
    4. 'length' → logprob: -6.336161136627197
    5. '```' → logprob: -6.336161136627197
    6. '
' → logprob: -6.586161136627197
    7. '        
' → logprob: -9.461160659790039
    8. '<|end|>' → logprob: -9.961160659790039
    9. '_length' → logprob: -10.461160659790039
    10. ' length' → logprob: -10.586160659790039

Token 2466: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.0017657396383583546
    2. '           ' → logprob: -6.376765727996826
    3. ' length' → logprob: -10.626766204833984
    4. '
' → logprob: -10.626766204833984
    5. 'len' → logprob: -12.501766204833984
    6. '	length' → logprob: -12.876766204833984
    7. '   ' → logprob: -13.251766204833984
    8. '```' → logprob: -13.251766204833984
    9. '(length' → logprob: -13.626766204833984
    10. '       ' → logprob: -13.751766204833984

Token 2467: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0002234437270089984
    2. ' +=' → logprob: -9.000223159790039
    3. '+=' → logprob: -9.250223159790039
    4. 'sum' → logprob: -13.125223159790039
    5. '_s' → logprob: -14.375223159790039
    6. '_' → logprob: -14.625223159790039
    7. 's' → logprob: -15.125223159790039
    8. 'Sum' → logprob: -15.750223159790039
    9. '=' → logprob: -15.875223159790039
    10. '
' → logprob: -16.37522315979004

Token 2468: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31375327706336975
    2. ' +=' → logprob: -1.3137532472610474
    3. '          ' → logprob: -8.438753128051758
    4. '        ' → logprob: -9.438753128051758
    5. '           ' → logprob: -9.563753128051758
    6. '            ' → logprob: -9.938753128051758
    7. '       ' → logprob: -10.938753128051758
    8. '   ' → logprob: -11.438753128051758
    9. '      ' → logprob: -11.688753128051758
    10. '    ' → logprob: -11.688753128051758

Token 2469: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0019286326132714748
    2. ' len' → logprob: -6.251928806304932
    3. '(len' → logprob: -16.751928329467773
    4. '           ' → logprob: -17.501928329467773
    5. '   ' → logprob: -19.751928329467773
    6. '          ' → logprob: -20.626928329467773
    7. '	len' → logprob: -20.751928329467773
    8. '[len' → logprob: -21.251928329467773
    9. '       ' → logprob: -21.376928329467773
    10. '
' → logprob: -21.626928329467773

Token 2470: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003190905088558793
    2. 's' → logprob: -5.753190994262695
    3. '(' → logprob: -11.253190994262695
    4. ' s' → logprob: -16.128190994262695
    5. '(
' → logprob: -16.253190994262695
    6. ' (' → logprob: -16.878190994262695
    7. '('' → logprob: -17.378190994262695
    8. ''s' → logprob: -18.753190994262695
    9. ')' → logprob: -19.628190994262695
    10. '   ' → logprob: -19.628190994262695

Token 2471: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02402356266975403
    2. ')
' → logprob: -4.524023532867432
    3. '       ' → logprob: -4.649023532867432
    4. '           ' → logprob: -5.774023532867432
    5. '
' → logprob: -10.02402400970459
    6. '               ' → logprob: -10.39902400970459
    7. '   ' → logprob: -10.52402400970459
    8. '```' → logprob: -10.64902400970459
    9. ')\' → logprob: -11.14902400970459
    10. '\n' → logprob: -11.77402400970459

Token 2472: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022366194054484367
    2. '
' → logprob: -3.8973662853240967
    3. '```' → logprob: -6.397366046905518
    4. '#' → logprob: -10.022366523742676
    5. '   ' → logprob: -10.522366523742676
    6. 'text' → logprob: -10.522366523742676
    7. '        
' → logprob: -10.772366523742676
    8. '           ' → logprob: -11.022366523742676
    9. '``' → logprob: -12.647366523742676
    10. 'from' → logprob: -12.647366523742676

Token 2473: ' text' (ID: 2201)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7127552628517151
    2. 'text' (adapté à ' text') → logprob: -0.7127552628517151
    3. '#' → logprob: -3.9627552032470703
    4. '
' → logprob: -8.71275520324707
    5. '   ' → logprob: -9.08775520324707
    6. '```' → logprob: -9.08775520324707
    7. '``' → logprob: -11.83775520324707
    8. '           ' → logprob: -12.21275520324707
    9. ' text' → logprob: -13.58775520324707
    10. '        
' → logprob: -13.83775520324707

Token 2474: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.10296174138784409
    2. ' =' → logprob: -2.852961778640747
    3. '=' → logprob: -3.852961778640747
    4. '_' → logprob: -4.602961540222168
    5. '       ' → logprob: -4.852961540222168
    6. '   ' → logprob: -7.727961540222168
    7. '_length' → logprob: -9.102961540222168
    8. 'Lines' → logprob: -9.477961540222168
    9. '```' → logprob: -9.602961540222168
    10. '_tokens' → logprob: -9.977961540222168

Token 2475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.259711891412735
    2. ' =' → logprob: -1.6347118616104126
    3. '       ' → logprob: -3.509711980819702
    4. '.append' → logprob: -6.259711742401123
    5. '=[]
' → logprob: -6.634711742401123
    6. '.extend' → logprob: -8.634712219238281
    7. '=[]' → logprob: -8.634712219238281
    8. '   ' → logprob: -9.884712219238281
    9. '           ' → logprob: -9.884712219238281
    10. '.' → logprob: -10.509712219238281

Token 2476: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10111923515796661
    2. '[]
' → logprob: -2.35111927986145
    3. '[' → logprob: -7.101119041442871
    4. ' []' → logprob: -9.851119041442871
    5. '[
' → logprob: -11.101119041442871
    6. ' []
' → logprob: -11.226119041442871
    7. '       ' → logprob: -12.851119041442871
    8. '['' → logprob: -13.726119041442871
    9. '   ' → logprob: -14.476119041442871
    10. '[]

' → logprob: -14.601119041442871

Token 2477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03016708418726921
    2. 'for' → logprob: -3.5301671028137207
    3. '           ' → logprob: -8.530166625976562
    4. '```' → logprob: -9.155166625976562
    5. ' for' → logprob: -9.655166625976562
    6. '
' → logprob: -10.530166625976562
    7. '	' → logprob: -12.030166625976562
    8. '        
' → logprob: -12.655166625976562
    9. '   ' → logprob: -12.655166625976562
    10. '	for' → logprob: -12.905166625976562

Token 2478: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003874166286550462
    2. ' for' → logprob: -8.250387191772461
    3. '       ' → logprob: -9.000387191772461
    4. '
' → logprob: -13.625387191772461
    5. '```' → logprob: -13.875387191772461
    6. '	for' → logprob: -15.125387191772461
    7. 'For' → logprob: -16.37538719177246
    8. '``' → logprob: -16.50038719177246
    9. '        
' → logprob: -16.62538719177246
    10. '   ' → logprob: -17.12538719177246

Token 2479: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.128163257315464e-07
    2. ' _' → logprob: -16.0
    3. '_
' → logprob: -16.5
    4. '_range' → logprob: -18.375
    5. '   ' → logprob: -19.75
    6. '_=' → logprob: -19.75
    7. '_,' → logprob: -20.625
    8. '_in' → logprob: -21.125
    9. '_
' → logprob: -21.25
    10. ' in' → logprob: -21.75

Token 2480: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.014684110297821e-06
    2. 'in' → logprob: -12.250008583068848
    3. ' in' → logprob: -12.625008583068848
    4. 'range' → logprob: -14.125008583068848
    5. ' _' → logprob: -16.500009536743164
    6. '_
' → logprob: -17.750009536743164
    7. '_range' → logprob: -18.500009536743164
    8. 'n' → logprob: -18.500009536743164
    9. 's' → logprob: -19.125009536743164
    10. ' range' → logprob: -19.250009536743164

Token 2481: ' range' (ID: 3352)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3869386315345764
    2. 'range' → logprob: -1.1369385719299316
    3. ' range' → logprob: -9.88693904876709
    4. '_range' → logprob: -11.01193904876709
    5. 'in' → logprob: -15.51193904876709
    6. '_
' → logprob: -17.511938095092773
    7. ' _' → logprob: -18.261938095092773
    8. '_=' → logprob: -18.261938095092773
    9. '0' → logprob: -18.636938095092773
    10. '_]' → logprob: -18.636938095092773

Token 2482: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.36574100604048e-06
    2. ' m' → logprob: -12.375004768371582
    3. '_m' → logprob: -17.500003814697266
    4. '(m' → logprob: -18.250003814697266
    5. 'range' → logprob: -18.250003814697266
    6. '	m' → logprob: -19.750003814697266
    7. '0' → logprob: -20.000003814697266
    8. ')m' → logprob: -20.000003814697266
    9. '   ' → logprob: -20.375003814697266
    10. '<m' → logprob: -20.500003814697266

Token 2483: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5539222955703735
    2. '           ' → logprob: -1.3039222955703735
    3. ':' → logprob: -2.303922176361084
    4. '):
' → logprob: -3.678922176361084
    5. '():
' → logprob: -3.928922176361084
    6. '       ' → logprob: -5.303922176361084
    7. '):' → logprob: -6.428922176361084
    8. '():' → logprob: -7.303922176361084
    9. ',' → logprob: -7.428922176361084
    10. '=' → logprob: -8.428922653198242

Token 2484: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020063648000359535
    2. 'line' → logprob: -4.020063877105713
    3. ' line' → logprob: -6.520063877105713
    4. '   ' → logprob: -8.520063400268555
    5. '	line' → logprob: -9.395063400268555
    6. 'text' → logprob: -10.520063400268555
    7. '#line' → logprob: -10.520063400268555
    8. '		' → logprob: -11.020063400268555
    9. '	       ' → logprob: -11.145063400268555
    10. '               ' → logprob: -11.145063400268555

Token 2485: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.05114705488085747
    2. 'text' → logprob: -3.051146984100342
    3. 's' → logprob: -6.926146984100342
    4. ' line' → logprob: -6.926146984100342
    5. 'l' → logprob: -8.3011474609375
    6. '           ' → logprob: -8.9261474609375
    7. 'sys' → logprob: -9.3011474609375
    8. '#line' → logprob: -11.0511474609375
    9. 'code' → logprob: -11.4261474609375
    10. '_' → logprob: -11.4261474609375

Token 2486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12700927257537842
    2. '=' → logprob: -2.252009391784668
    3. '           ' → logprob: -4.627009391784668
    4. '=line' → logprob: -5.627009391784668
    5. '		' → logprob: -8.127009391784668
    6. '       ' → logprob: -9.252009391784668
    7. '               ' → logprob: -9.377009391784668
    8. '	       ' → logprob: -9.752009391784668
    9. '	' → logprob: -10.502009391784668
    10. '            ' → logprob: -10.877009391784668

Token 2487: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0007099286303855479
    2. ' sys' → logprob: -7.2507100105285645
    3. '=sys' → logprob: -17.125709533691406
    4. '           ' → logprob: -17.375709533691406
    5. '(sys' → logprob: -18.750709533691406
    6. '	sys' → logprob: -18.750709533691406
    7. '               ' → logprob: -19.500709533691406
    8. 'input' → logprob: -20.375709533691406
    9. '_sys' → logprob: -20.500709533691406
    10. '.sys' → logprob: -20.625709533691406

Token 2488: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.915365993976593
    2. '.readline' → logprob: -1.0403659343719482
    3. '=sys' → logprob: -1.5403659343719482
    4. '().' → logprob: -3.5403659343719482
    5. 'sys' → logprob: -6.540366172790527
    6. 'stdin' → logprob: -7.540366172790527
    7. '.stdout' → logprob: -8.165366172790527
    8. '           ' → logprob: -8.540366172790527
    9. '=' → logprob: -8.790366172790527
    10. '(sys' → logprob: -9.415366172790527

Token 2489: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.0153366327285767
    2. 'stdin' → logprob: -1.0153366327285767
    3. 'sys' → logprob: -1.7653366327285767
    4. '.stdin' → logprob: -2.265336513519287
    5. '=sys' → logprob: -7.890336513519287
    6. '(stdin' → logprob: -9.640336990356445
    7. 'read' → logprob: -10.140336990356445
    8. 'stdout' → logprob: -11.015336990356445
    9. '(sys' → logprob: -11.765336990356445
    10. 'input' → logprob: -12.640336990356445

Token 2490: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017103780061006546
    2. '().' → logprob: -4.142103672027588
    3. '.strip' → logprob: -7.642103672027588
    4. '       ' → logprob: -8.767104148864746
    5. '               ' → logprob: -8.892104148864746
    6. '()' → logprob: -8.892104148864746
    7. '.rstrip' → logprob: -10.267104148864746
    8. '.' → logprob: -10.767104148864746
    9. '()
' → logprob: -11.142104148864746
    10. '.readline' → logprob: -11.767104148864746

Token 2491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015014449309092015
    2. 'text' → logprob: -9.500149726867676
    3. '       ' → logprob: -10.250149726867676
    4. '               ' → logprob: -11.125149726867676
    5. '   ' → logprob: -11.625149726867676
    6. '		' → logprob: -12.250149726867676
    7. '	       ' → logprob: -12.375149726867676
    8. '          ' → logprob: -13.625149726867676
    9. '
' → logprob: -13.750149726867676
    10. '```' → logprob: -14.000149726867676

Token 2492: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -0.314064621925354
    2. '           ' → logprob: -1.314064621925354
    3. ' text' → logprob: -7.4390645027160645
    4. '{text' → logprob: -9.439064979553223
    5. '       ' → logprob: -10.564064979553223
    6. '   ' → logprob: -10.564064979553223
    7. '		' → logprob: -10.939064979553223
    8. '               ' → logprob: -10.939064979553223
    9. '	text' → logprob: -10.939064979553223
    10. '	       ' → logprob: -11.064064979553223

Token 2493: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -5.080963092041202e-06
    2. '_LINES' → logprob: -13.500004768371582
    3. '
' → logprob: -14.000004768371582
    4. 's' → logprob: -14.875004768371582
    5. '=' → logprob: -14.875004768371582
    6. 'Lines' → logprob: -15.000004768371582
    7. '=_' → logprob: -15.125004768371582
    8. '           ' → logprob: -15.500004768371582
    9. 'lines' → logprob: -15.750004768371582
    10. ' =' → logprob: -15.750004768371582

Token 2494: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004338877333793789
    2. '.' → logprob: -8.000433921813965
    3. '           ' → logprob: -10.000433921813965
    4. 'append' → logprob: -10.375433921813965
    5. '       ' → logprob: -11.625433921813965
    6. ' .' → logprob: -12.125433921813965
    7. ').' → logprob: -12.625433921813965
    8. '.strip' → logprob: -13.875433921813965
    9. '.extend' → logprob: -14.000433921813965
    10. '].' → logprob: -14.250433921813965

Token 2495: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.10021012276411057
    2. 'line' → logprob: -2.350210189819336
    3. ' line' → logprob: -13.600210189819336
    4. '[line' → logprob: -13.975210189819336
    5. '#line' → logprob: -14.350210189819336
    6. '(' → logprob: -14.850210189819336
    7. '=line' → logprob: -15.100210189819336
    8. '(
' → logprob: -17.600210189819336
    9. '
' → logprob: -17.600210189819336
    10. ',line' → logprob: -17.850210189819336

Token 2496: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.10675916820764542
    2. '.' → logprob: -2.7317590713500977
    3. '().' → logprob: -3.4817590713500977
    4. '.rstrip' → logprob: -5.731759071350098
    5. ').' → logprob: -6.481759071350098
    6. '('').' → logprob: -8.856759071350098
    7. '.readline' → logprob: -8.981759071350098
    8. ' .' → logprob: -10.106759071350098
    9. ')' → logprob: -10.356759071350098
    10. '.replace' → logprob: -10.606759071350098

Token 2497: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45392346382141113
    2. ')
' → logprob: -1.2039234638214111
    3. '())
' → logprob: -3.453923463821411
    4. '())' → logprob: -3.578923463821411
    5. '       ' → logprob: -5.703923225402832
    6. '()' → logprob: -6.453923225402832
    7. '()
' → logprob: -7.953923225402832
    8. '')' → logprob: -10.578923225402832
    9. ')`
' → logprob: -11.078923225402832
    10. ')
' → logprob: -12.453923225402832

Token 2498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026020895689725876
    2. 'text' → logprob: -3.7760210037231445
    3. '
' → logprob: -6.0260210037231445
    4. '```' → logprob: -8.026021003723145
    5. '{text' → logprob: -12.026021003723145
    6. '`' → logprob: -12.151021003723145
    7. ' text' → logprob: -12.276021003723145
    8. '   ' → logprob: -12.526021003723145
    9. '        
' → logprob: -12.776021003723145
    10. '           ' → logprob: -13.026021003723145

Token 2499: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -0.100685253739357
    2. '       ' → logprob: -2.3506853580474854
    3. '
' → logprob: -8.350685119628906
    4. ' text' → logprob: -8.600685119628906
    5. '```' → logprob: -9.975685119628906
    6. '   ' → logprob: -12.975685119628906
    7. '`' → logprob: -13.100685119628906
    8. '           ' → logprob: -13.350685119628906
    9. '{text' → logprob: -13.350685119628906
    10. '``' → logprob: -13.600685119628906

Token 2500: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326571106910706
    2. ' =' → logprob: -1.3132656812667847
    3. '=
' → logprob: -13.188265800476074
    4. '+=' → logprob: -14.063265800476074
    5. ' +=' → logprob: -14.188265800476074
    6. ' =
' → logprob: -15.438265800476074
    7. ')' → logprob: -16.188264846801758
    8. '```' → logprob: -16.188264846801758
    9. '='' → logprob: -16.938264846801758
    10. '
' → logprob: -17.188264846801758

Token 2501: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.004380278754979372
    2. '''' → logprob: -5.754380226135254
    3. ' ''.' → logprob: -6.879380226135254
    4. ''' → logprob: -9.254380226135254
    5. '''
' → logprob: -10.254380226135254
    6. 'text' → logprob: -11.004380226135254
    7. '"' → logprob: -11.254380226135254
    8. '('').' → logprob: -12.379380226135254
    9. '   ' → logprob: -12.879380226135254
    10. '('' → logprob: -13.129380226135254

Token 2502: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.512236498361744e-07
    2. '''.' → logprob: -14.625000953674316
    3. ' join' → logprob: -16.75
    4. ''.' → logprob: -18.5
    5. 'j' → logprob: -18.75
    6. '.join' → logprob: -19.125
    7. 'jo' → logprob: -19.375
    8. '(join' → logprob: -20.25
    9. '''' → logprob: -21.625
    10. '.' → logprob: -22.875

Token 2503: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.006715370807796717
    2. 'text' → logprob: -5.006715297698975
    3. '{text' → logprob: -17.131715774536133
    4. ' text' → logprob: -18.256715774536133
    5. '[text' → logprob: -19.006715774536133
    6. '(' → logprob: -20.506715774536133
    7. ',text' → logprob: -20.506715774536133
    8. '$text' → logprob: -21.256715774536133
    9. '	text' → logprob: -21.506715774536133
    10. '(
' → logprob: -21.631715774536133

Token 2504: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -9.317247167928144e-05
    2. ')' → logprob: -9.625093460083008
    3. 'lines' → logprob: -11.000093460083008
    4. 's' → logprob: -12.875093460083008
    5. 'Lines' → logprob: -13.500093460083008
    6. '(lines' → logprob: -13.625093460083008
    7. '))' → logprob: -13.625093460083008
    8. 'text' → logprob: -13.625093460083008
    9. '_LINES' → logprob: -13.625093460083008
    10. '[' → logprob: -15.250093460083008

Token 2505: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3310912251472473
    2. ')' → logprob: -1.7060911655426025
    3. '       ' → logprob: -2.3310911655426025
    4. '        
' → logprob: -6.706091403961182
    5. '
' → logprob: -7.581091403961182
    6. '   ' → logprob: -8.081090927124023
    7. '<|end|>' → logprob: -8.081090927124023
    8. '    
' → logprob: -8.581090927124023
    9. ')
' → logprob: -8.581090927124023
    10. '

' → logprob: -9.206090927124023

Token 2506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008904983988031745
    2. '```' → logprob: -7.250890731811523
    3. '#' → logprob: -9.375890731811523
    4. '
' → logprob: -9.625890731811523
    5. '   ' → logprob: -11.125890731811523
    6. '           ' → logprob: -12.125890731811523
    7. 'matches' → logprob: -12.500890731811523
    8. '        
' → logprob: -13.250890731811523
    9. '``' → logprob: -13.375890731811523
    10. '`' → logprob: -13.875890731811523

Token 2507: ' full' (ID: 3149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06369639933109283
    2. 'matches' → logprob: -3.4386963844299316
    3. '#' → logprob: -3.5636963844299316
    4. 'match' → logprob: -7.188696384429932
    5. '   ' → logprob: -8.81369686126709
    6. '```' → logprob: -8.93869686126709
    7. ' matches' → logprob: -9.81369686126709
    8. ' #' → logprob: -10.18869686126709
    9. 'element' → logprob: -10.43869686126709
    10. '           ' → logprob: -10.93869686126709

Token 2508: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -3.128163257315464e-07
    2. 'mask' → logprob: -16.0
    3. '_masks' → logprob: -16.875
    4. '
' → logprob: -17.0
    5. '_m' → logprob: -18.625
    6. '_' → logprob: -18.625
    7. '```' → logprob: -19.125
    8. '_match' → logprob: -19.125
    9. ' _' → logprob: -19.75
    10. '_MASK' → logprob: -20.0

Token 2509: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01104935072362423
    2. '=' → logprob: -4.511049270629883
    3. ')' → logprob: -14.636049270629883
    4. ' ' → logprob: -15.136049270629883
    5. '       ' → logprob: -15.136049270629883
    6. '   ' → logprob: -15.761049270629883
    7. ' =
' → logprob: -15.886049270629883
    8. '
' → logprob: -16.261049270629883
    9. '```' → logprob: -16.886049270629883
    10. ',' → logprob: -17.011049270629883

Token 2510: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.680309534072876
    2. '(full' → logprob: -1.180309534072876
    3. ' (' → logprob: -1.680309534072876
    4. '(f' → logprob: -11.555309295654297
    5. '(form' → logprob: -11.680309295654297
    6. '   ' → logprob: -12.180309295654297
    7. '       ' → logprob: -12.555309295654297
    8. '
' → logprob: -12.930309295654297
    9. '(len' → logprob: -12.930309295654297
    10. '(total' → logprob: -13.180309295654297

Token 2511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47407716512680054
    2. '(' → logprob: -0.9740771651268005
    3. ' (' → logprob: -15.724077224731445
    4. '   ' → logprob: -18.349077224731445
    5. '
' → logprob: -19.474077224731445
    6. ' ' → logprob: -19.724077224731445
    7. '[' → logprob: -20.849077224731445
    8. '```' → logprob: -20.849077224731445
    9. '((' → logprob: -21.224077224731445
    10. '{' → logprob: -21.599077224731445

Token 2512: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.16022655367851257
    2. '<<' → logprob: -1.910226583480835
    3. '1' → logprob: -13.035226821899414
    4. ' ' → logprob: -16.160226821899414
    5. ' <<
' → logprob: -17.910226821899414
    6. '```' → logprob: -18.160226821899414
    7. '
' → logprob: -18.285226821899414
    8. '<' → logprob: -18.535226821899414
    9. '   ' → logprob: -18.785226821899414
    10. '<<(' → logprob: -18.910226821899414

Token 2513: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -16.375
    3. '	n' → logprob: -21.75
    4. ')n' → logprob: -22.0
    5. 'len' → logprob: -22.375
    6. '
' → logprob: -22.875
    7. '(n' → logprob: -23.375
    8. '$n' → logprob: -23.625
    9. '```' → logprob: -24.375
    10. '       ' → logprob: -25.125

Token 2514: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')-' → logprob: -13.12500286102295
    3. ' )' → logprob: -15.25000286102295
    4. '       ' → logprob: -16.750001907348633
    5. ')
' → logprob: -16.750001907348633
    6. '')' → logprob: -17.375001907348633
    7. '[' → logprob: -19.000001907348633
    8. '),' → logprob: -19.000001907348633
    9. ']' → logprob: -19.375001907348633
    10. '```' → logprob: -20.125001907348633

Token 2515: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005557744298130274
    2. '-' → logprob: -8.125555992126465
    3. ')-' → logprob: -8.750555992126465
    4. ' -' → logprob: -9.375555992126465
    5. '       ' → logprob: -12.000555992126465
    6. ' )' → logprob: -12.750555992126465
    7. '```' → logprob: -12.875555992126465
    8. '')' → logprob: -13.000555992126465
    9. '-)' → logprob: -14.375555992126465
    10. '[' → logprob: -14.625555992126465

Token 2516: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '
' → logprob: -18.75
    4. '       ' → logprob: -20.0
    5. '```' → logprob: -20.0
    6. '   ' → logprob: -20.75
    7. ')' → logprob: -20.75
    8. '           ' → logprob: -21.5
    9. '`' → logprob: -21.875
    10. '0' → logprob: -22.75

Token 2517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -18.125
    3. '```' → logprob: -18.875
    4. ' ' → logprob: -19.125
    5. '   ' → logprob: -20.875
    6. '0' → logprob: -21.0
    7. '`' → logprob: -22.125
    8. ')' → logprob: -22.25
    9. '       ' → logprob: -22.5
    10. '１' → logprob: -23.0625

Token 2518: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021045419271104038
    2. '   ' → logprob: -9.625210762023926
    3. '#' → logprob: -9.875210762023926
    4. 'matches' → logprob: -10.250210762023926
    5. '
' → logprob: -10.875210762023926
    6. '        
' → logprob: -11.500210762023926
    7. '```' → logprob: -11.875210762023926
    8. ')' → logprob: -12.000210762023926
    9. 'length' → logprob: -12.750210762023926
    10. 'match' → logprob: -13.000210762023926

Token 2519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011860613012686372
    2. '
' → logprob: -7.001185894012451
    3. 'total' → logprob: -8.87618637084961
    4. '   ' → logprob: -10.00118637084961
    5. 'matches' → logprob: -10.87618637084961
    6. '#' → logprob: -11.25118637084961
    7. ' total' → logprob: -11.50118637084961
    8. '        
' → logprob: -11.50118637084961
    9. '```' → logprob: -11.50118637084961
    10. 'length' → logprob: -12.00118637084961

Token 2520: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.01731504686176777
    2. 'matches' → logprob: -4.267314910888672
    3. '#' → logprob: -6.767314910888672
    4. '       ' → logprob: -7.017314910888672
    5. 'element' → logprob: -8.267314910888672
    6. 'match' → logprob: -8.392314910888672
    7. 'from' → logprob: -8.892314910888672
    8. 'length' → logprob: -8.892314910888672
    9. '   ' → logprob: -9.517314910888672
    10. 'dp' → logprob: -9.767314910888672

Token 2521: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -7.183501293184236e-05
    2. 'length' → logprob: -9.62507152557373
    3. '_len' → logprob: -12.25007152557373
    4. 'len' → logprob: -15.12507152557373
    5. '       ' → logprob: -16.125072479248047
    6. '_lengths' → logprob: -16.125072479248047
    7. '_sum' → logprob: -16.125072479248047
    8. '_' → logprob: -16.250072479248047
    9. ' =' → logprob: -16.875072479248047
    10. '   ' → logprob: -17.000072479248047

Token 2522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12723025679588318
    2. '=' → logprob: -2.127230167388916
    3. ')' → logprob: -9.002230644226074
    4. ' ' → logprob: -9.877230644226074
    5. ',' → logprob: -10.502230644226074
    6. '       ' → logprob: -10.627230644226074
    7. ' =
' → logprob: -11.002230644226074
    8. '_' → logprob: -11.627230644226074
    9. ':' → logprob: -11.877230644226074
    10. '        ' → logprob: -12.002230644226074

Token 2523: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6664383411407471
    2. 'sum' → logprob: -0.7914383411407471
    3. ' sum' → logprob: -4.041438102722168
    4. ' length' → logprob: -4.416438102722168
    5. 'len' → logprob: -5.916438102722168
    6. '0' → logprob: -7.041438102722168
    7. ' len' → logprob: -10.416438102722168
    8. 'leng' → logprob: -11.541438102722168
    9. '(length' → logprob: -13.041438102722168
    10. ' ' → logprob: -13.666438102722168

Token 2524: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.011738123372197151
    2. 'sum' → logprob: -5.136738300323486
    3. 'of' → logprob: -5.636738300323486
    4. 's' → logprob: -7.011738300323486
    5. '=' → logprob: -7.261738300323486
    6. ' =' → logprob: -8.761737823486328
    7. '(text' → logprob: -8.886737823486328
    8. '_' → logprob: -9.636737823486328
    9. ' ' → logprob: -10.136737823486328
    10. '_of' → logprob: -10.511737823486328

Token 2525: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22598564624786377
    2. '
' → logprob: -1.6009856462478638
    3. '#' → logprob: -8.350985527038574
    4. '        
' → logprob: -9.100985527038574
    5. '
' → logprob: -9.475985527038574
    6. 'matches' → logprob: -10.225985527038574
    7. '   ' → logprob: -10.350985527038574
    8. ',' → logprob: -10.600985527038574
    9. '```' → logprob: -10.850985527038574
    10. '

' → logprob: -11.725985527038574

Token 2526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06364113837480545
    2. 'matches' → logprob: -3.18864107131958
    3. '#' → logprob: -3.93864107131958
    4. '   ' → logprob: -8.188641548156738
    5. 'match' → logprob: -8.188641548156738
    6. 'end' → logprob: -9.063641548156738
    7. '
' → logprob: -9.188641548156738
    8. '```' → logprob: -9.938641548156738
    9. ' matches' → logprob: -10.563641548156738
    10. '           ' → logprob: -10.813641548156738

Token 2527: ' #' (ID: 1069)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aho' → logprob: -0.9390597343444824
    2. '#' (adapté à ' #') → logprob: -1.1890597343444824
    3. 'matches' → logprob: -1.5640597343444824
    4. '       ' → logprob: -3.0640597343444824
    5. '   ' → logprob: -3.1890597343444824
    6. 'match' → logprob: -5.939059734344482
    7. 'sets' → logprob: -6.689059734344482
    8. ' aho' → logprob: -7.564059734344482
    9. 'element' → logprob: -7.564059734344482
    10. 'occ' → logprob: -7.939059734344482

Token 2528: ' Build' (ID: 10885)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.1884925663471222
    2. 'match' → logprob: -2.5634925365448
    3. '#' → logprob: -2.9384925365448
    4. 'sets' → logprob: -4.313492774963379
    5. 'element' → logprob: -4.563492774963379
    6. 'pattern' → logprob: -5.313492774963379
    7. 'end' → logprob: -5.563492774963379
    8. 'membership' → logprob: -5.938492774963379
    9. 'occ' → logprob: -6.813492774963379
    10. 'patterns' → logprob: -6.938492774963379

Token 2529: ' A' (ID: 355)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aho' → logprob: -0.00020592445798683912
    2. ' aho' → logprob: -9.250205993652344
    3. '   ' → logprob: -9.875205993652344
    4. 'A' → logprob: -9.875205993652344
    5. 'ah' → logprob: -12.500205993652344
    6. 'ahoo' → logprob: -14.000205993652344
    7. 'aha' → logprob: -14.875205993652344
    8. 'ahi' → logprob: -14.875205993652344
    9. '```' → logprob: -15.375205993652344
    10. 'acho' → logprob: -15.500205993652344

Token 2530: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -7.465036105713807e-06
    2. 'cho' → logprob: -12.125007629394531
    3. '
' → logprob: -15.000007629394531
    4. 'h' → logprob: -15.375007629394531
    5. 'o' → logprob: -15.375007629394531
    6. 'oh' → logprob: -15.750007629394531
    7. 'aho' → logprob: -15.875007629394531
    8. 'хо' → logprob: -16.00000762939453
    9. 'co' → logprob: -16.12500762939453
    10. 'hoe' → logprob: -16.12500762939453

Token 2531: ' autom' (ID: 5099)
  Prédit: 'cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.9048096537590027
    2. '   ' → logprob: -1.1548097133636475
    3. 'ho' → logprob: -1.6548097133636475
    4. '       ' → logprob: -3.7798097133636475
    5. ' =' → logprob: -3.9048097133636475
    6. 'Cor' → logprob: -4.529809474945068
    7. 'oh' → logprob: -4.654809474945068
    8. '```' → logprob: -5.404809474945068
    9. '=' → logprob: -5.529809474945068
    10. '
' → logprob: -5.654809474945068

Token 2532: 'aton' (ID: 24850)
  Prédit: 'aton'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aton' → logprob: -0.03857692703604698
    2. 'at' → logprob: -3.41357684135437
    3. '```' → logprob: -6.413577079772949
    4. 'atic' → logprob: -6.663577079772949
    5. 'ac' → logprob: -7.163577079772949
    6. 'ata' → logprob: -8.66357707977295
    7. 'on' → logprob: -8.78857707977295
    8. 'ton' → logprob: -8.78857707977295
    9. 'atin' → logprob: -8.91357707977295
    10. 'autom' → logprob: -9.16357707977295

Token 2533: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1339346170425415
    2. 'aho' → logprob: -2.133934497833252
    3. '   ' → logprob: -5.258934497833252
    4. ' aho' → logprob: -6.883934497833252
    5. 'ah' → logprob: -8.50893497467041
    6. '```' → logprob: -8.88393497467041
    7. '        
' → logprob: -9.38393497467041
    8. '           ' → logprob: -10.13393497467041
    9. 'aio' → logprob: -10.75893497467041
    10. 'acho' → logprob: -10.88393497467041

Token 2534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005007228348404169
    2. 'for' → logprob: -5.755007266998291
    3. '   ' → logprob: -6.630007266998291
    4. 'aho' → logprob: -8.505006790161133
    5. '```' → logprob: -8.755006790161133
    6. 'ah' → logprob: -10.255006790161133
    7. '           ' → logprob: -10.380006790161133
    8. ' aho' → logprob: -11.130006790161133
    9. '
' → logprob: -11.505006790161133
    10. 'ano' → logprob: -11.755006790161133

Token 2535: ' aho' (ID: 46361)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aho' (adapté à ' aho') → logprob: -0.0004182793782092631
    2. '   ' → logprob: -7.875418186187744
    3. ' aho' → logprob: -10.500418663024902
    4. 'ah' → logprob: -12.375418663024902
    5. '```' → logprob: -13.250418663024902
    6. 'ahoo' → logprob: -14.125418663024902
    7. '       ' → logprob: -14.250418663024902
    8. 'ahi' → logprob: -14.250418663024902
    9. 'for' → logprob: -14.375418663024902
    10. '
' → logprob: -14.750418663024902

Token 2536: ' =' (ID: 314)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.439101904630661
    2. '.build' → logprob: -1.5641019344329834
    3. ' =' → logprob: -2.3141019344329834
    4. '.' → logprob: -3.1891019344329834
    5. '=' → logprob: -5.189101696014404
    6. ').' → logprob: -9.189102172851562
    7. '   ' → logprob: -9.314102172851562
    8. '.=' → logprob: -9.564102172851562
    9. ' .' → logprob: -10.189102172851562
    10. ')' → logprob: -10.189102172851562

Token 2537: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.7610454708337784e-05
    2. ' A' → logprob: -10.500027656555176
    3. '	A' → logprob: -18.62502670288086
    4. '_A' → logprob: -21.75002670288086
    5. '   ' → logprob: -22.12502670288086
    6. '=A' → logprob: -22.50002670288086
    7. ' ' → logprob: -22.62502670288086
    8. '<A' → logprob: -23.12502670288086
    9. '>A' → logprob: -23.12502670288086
    10. '(A' → logprob: -23.75002670288086

Token 2538: 'ho' (ID: 1555)
  Prédit: 'ho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ho' → logprob: -0.0006078407750464976
    2. 'Cor' → logprob: -7.500607967376709
    3. 'h' → logprob: -11.00060749053955
    4. 'A' → logprob: -11.50060749053955
    5. 'cho' → logprob: -11.87560749053955
    6. 'C' → logprob: -12.00060749053955
    7. 'cor' → logprob: -12.25060749053955
    8. 'Ho' → logprob: -12.50060749053955
    9. 'Cho' → logprob: -13.75060749053955
    10. 'hoo' → logprob: -14.62560749053955

Token 2539: 'Cor' (ID: 11534)
  Prédit: 'Cor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cor' → logprob: -3.6312321753939614e-05
    2. '.C' → logprob: -11.000036239624023
    3. '.' → logprob: -11.750036239624023
    4. '_C' → logprob: -13.000036239624023
    5. ' Cor' → logprob: -13.375036239624023
    6. '.cor' → logprob: -13.500036239624023
    7. 'cor' → logprob: -13.500036239624023
    8. ')' → logprob: -14.000036239624023
    9. '_cor' → logprob: -14.000036239624023
    10. '._' → logprob: -14.375036239624023

Token 2540: 'as' (ID: 288)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.1344836950302124
    2. 'ick' → logprob: -1.3844836950302124
    3. 'ar' → logprob: -2.384483814239502
    4. 'ac' → logprob: -2.509483814239502
    5. 'ack' → logprob: -2.759483814239502
    6. 'ic' → logprob: -2.884483814239502
    7. 'ir' → logprob: -3.134483814239502
    8. 'om' → logprob: -4.009483814239502
    9. 'as' → logprob: -4.134483814239502
    10. 'r' → logprob: -4.134483814239502

Token 2541: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.0009469495271332562
    2. 'ic' → logprob: -7.625946998596191
    3. 'it' → logprob: -8.750946998596191
    4. '
' → logprob: -9.375946998596191
    5. 'tick' → logprob: -9.875946998596191
    6. 'r' → logprob: -10.125946998596191
    7. 'ck' → logprob: -10.750946998596191
    8. 'ir' → logprob: -11.250946998596191
    9. 'ack' → logprob: -11.250946998596191
    10. 'ich' → logprob: -11.750946998596191

Token 2542: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07113975286483765
    2. '()
' → logprob: -2.8211398124694824
    3. 'for' → logprob: -5.196139812469482
    4. '       ' → logprob: -5.696139812469482
    5. '   ' → logprob: -9.071139335632324
    6. '();' → logprob: -9.946139335632324
    7. '#' → logprob: -10.696139335632324
    8. '<|end|>' → logprob: -11.571139335632324
    9. '()
' → logprob: -12.196139335632324
    10. '()\' → logprob: -12.446139335632324

Token 2543: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5762050747871399
    2. '       ' → logprob: -0.8262050747871399
    3. '```' → logprob: -8.576205253601074
    4. ' for' → logprob: -9.576205253601074
    5. '   ' → logprob: -12.701205253601074
    6. '
' → logprob: -13.326205253601074
    7. '           ' → logprob: -13.951205253601074
    8. 'For' → logprob: -14.076205253601074
    9. '``' → logprob: -14.826205253601074
    10. '	for' → logprob: -14.951205253601074

Token 2544: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004311460361350328
    2. '       ' → logprob: -7.750431060791016
    3. ' for' → logprob: -14.875431060791016
    4. '```' → logprob: -16.375431060791016
    5. '   ' → logprob: -17.000431060791016
    6. '
' → logprob: -17.750431060791016
    7. 'For' → logprob: -18.500431060791016
    8. '	for' → logprob: -19.000431060791016
    9. '           ' → logprob: -20.125431060791016
    10. '        
' → logprob: -21.500431060791016

Token 2545: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023299051448702812
    2. 's' → logprob: -3.773298978805542
    3. ' i' → logprob: -10.398299217224121
    4. 'element' → logprob: -11.398299217224121
    5. 'word' → logprob: -12.023299217224121
    6. 'elem' → logprob: -13.023299217224121
    7. 'e' → logprob: -13.648299217224121
    8. ' s' → logprob: -14.148299217224121
    9. '   ' → logprob: -15.023299217224121
    10. 'j' → logprob: -15.273299217224121

Token 2546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013358361320570111
    2. ',s' → logprob: -7.001335620880127
    3. ' in' → logprob: -8.751336097717285
    4. 'in' → logprob: -9.126336097717285
    5. ' ,' → logprob: -9.626336097717285
    6. 's' → logprob: -10.126336097717285
    7. '_,' → logprob: -11.126336097717285
    8. ',i' → logprob: -12.376336097717285
    9. 'i' → logprob: -12.501336097717285
    10. ',e' → logprob: -12.501336097717285

Token 2547: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.925185440806672e-05
    2. ' s' → logprob: -9.250099182128906
    3. 'element' → logprob: -13.250099182128906
    4. 'word' → logprob: -14.125099182128906
    5. 'elem' → logprob: -15.625099182128906
    6. 'es' → logprob: -15.875099182128906
    7. 'e' → logprob: -16.000099182128906
    8. 'el' → logprob: -16.875099182128906
    9. 'ele' → logprob: -17.375099182128906
    10. 'w' → logprob: -18.875099182128906

Token 2548: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07010771334171295
    2. 'in' → logprob: -2.6951076984405518
    3. 's' → logprob: -10.320107460021973
    4. ',' → logprob: -10.695107460021973
    5. 'import' → logprob: -10.695107460021973
    6. '           ' → logprob: -10.820107460021973
    7. '
' → logprob: -10.820107460021973
    8. '       ' → logprob: -11.820107460021973
    9. '```' → logprob: -11.820107460021973
    10. '   ' → logprob: -12.320107460021973

Token 2549: ' enumerate' (ID: 29671)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.061976201832294464
    2. 'enumer' → logprob: -2.811976194381714
    3. ' element' → logprob: -12.561976432800293
    4. '(element' → logprob: -12.936976432800293
    5. ' enumerate' → logprob: -13.936976432800293
    6. 'range' → logprob: -14.061976432800293
    7. '[element' → logprob: -14.436976432800293
    8. '```' → logprob: -15.811976432800293
    9. '	element' → logprob: -16.686975479125977
    10. 'enum' → logprob: -16.811975479125977

Token 2550: '(element' (ID: 22709)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.007650522515177727
    2. '(element' → logprob: -5.507650375366211
    3. 's' → logprob: -5.757650375366211
    4. '(s' → logprob: -8.257650375366211
    5. ' element' → logprob: -8.882650375366211
    6. '[element' → logprob: -12.007650375366211
    7. '	element' → logprob: -14.007650375366211
    8. ' s' → logprob: -14.132650375366211
    9. '   ' → logprob: -15.382650375366211
    10. '           ' → logprob: -15.632650375366211

Token 2551: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -7.707997428951785e-05
    2. 'element' → logprob: -9.875077247619629
    3. 'strings' → logprob: -11.250077247619629
    4. 'Strings' → logprob: -11.875077247619629
    5. 's' → logprob: -12.750077247619629
    6. '
' → logprob: -14.250077247619629
    7. '(element' → logprob: -14.750077247619629
    8. '_elements' → logprob: -14.875077247619629
    9. ')' → logprob: -15.000077247619629
    10. '(strings' → logprob: -15.375077247619629

Token 2552: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03215042129158974
    2. '           ' → logprob: -4.1571502685546875
    3. '):' → logprob: -4.2821502685546875
    4. ':
' → logprob: -7.0321502685546875
    5. '       ' → logprob: -7.2821502685546875
    6. '():
' → logprob: -8.907150268554688
    7. ''):
' → logprob: -9.032150268554688
    8. ':' → logprob: -9.282150268554688
    9. ')' → logprob: -9.282150268554688
    10. '):
' → logprob: -10.282150268554688

Token 2553: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043138445471413434
    2. '   ' → logprob: -9.125431060791016
    3. 'aho' → logprob: -9.375431060791016
    4. '```' → logprob: -9.500431060791016
    5. '       ' → logprob: -9.875431060791016
    6. '               ' → logprob: -10.750431060791016
    7. 'ah' → logprob: -11.000431060791016
    8. 'ano' → logprob: -11.500431060791016
    9. ' aho' → logprob: -12.000431060791016
    10. 'ho' → logprob: -12.125431060791016

Token 2554: ' aho' (ID: 46361)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aho' (adapté à ' aho') → logprob: -0.0006971848197281361
    2. '           ' → logprob: -7.500697135925293
    3. ' aho' → logprob: -9.250697135925293
    4. '   ' → logprob: -11.750697135925293
    5. '               ' → logprob: -12.000697135925293
    6. 'ahoo' → logprob: -12.125697135925293
    7. 'ah' → logprob: -12.500697135925293
    8. '       ' → logprob: -12.625697135925293
    9. 'ano' → logprob: -12.750697135925293
    10. 'ahi' → logprob: -12.875697135925293

Token 2555: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.706686690449715e-05
    2. '.' → logprob: -10.000066757202148
    3. 'add' → logprob: -11.250066757202148
    4. '```' → logprob: -12.500066757202148
    5. ').' → logprob: -13.125066757202148
    6. '`.' → logprob: -14.375066757202148
    7. '
' → logprob: -14.625066757202148
    8. '   ' → logprob: -15.000066757202148
    9. ' .' → logprob: -15.125066757202148
    10. ')add' → logprob: -15.250066757202148

Token 2556: '_word' (ID: 32074)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4760989248752594
    2. '_word' → logprob: -1.226098895072937
    3. 'word' → logprob: -2.4760990142822266
    4. '(s' → logprob: -7.476099014282227
    5. '_s' → logprob: -7.726099014282227
    6. ' s' → logprob: -9.476099014282227
    7. 'w' → logprob: -9.851099014282227
    8. '```' → logprob: -10.226099014282227
    9. 'i' → logprob: -10.601099014282227
    10. '_words' → logprob: -11.226099014282227

Token 2557: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3869369328022003
    2. 's' → logprob: -1.136936902999878
    3. '           ' → logprob: -10.636937141418457
    4. ' s' → logprob: -10.636937141418457
    5. '       ' → logprob: -12.261937141418457
    6. '(
' → logprob: -12.636937141418457
    7. '(' → logprob: -12.636937141418457
    8. '   ' → logprob: -12.886937141418457
    9. ' (' → logprob: -13.636937141418457
    10. '               ' → logprob: -14.261937141418457

Token 2558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019455071538686752
    2. '           ' → logprob: -4.7694549560546875
    3. '(i' → logprob: -5.2694549560546875
    4. ')' → logprob: -5.5194549560546875
    5. ',i' → logprob: -7.3944549560546875
    6. '       ' → logprob: -8.394454956054688
    7. ',s' → logprob: -8.519454956054688
    8. '[i' → logprob: -8.644454956054688
    9. '(s' → logprob: -9.519454956054688
    10. '   ' → logprob: -9.519454956054688

Token 2559: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.704273118884885e-07
    2. ' i' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.125
    4. '       ' → logprob: -18.625
    5. '           ' → logprob: -18.625
    6. '```' → logprob: -19.125
    7. '
' → logprob: -19.375
    8. '	i' → logprob: -20.375
    9. '     ' → logprob: -20.75
    10. ')i' → logprob: -20.75

Token 2560: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09355199337005615
    2. ')
' → logprob: -2.5935521125793457
    3. '       ' → logprob: -4.468552112579346
    4. '           ' → logprob: -5.843552112579346
    5. ');' → logprob: -10.093551635742188
    6. ')`
' → logprob: -10.468551635742188
    7. '               ' → logprob: -10.718551635742188
    8. '   ' → logprob: -10.718551635742188
    9. '```' → logprob: -11.218551635742188
    10. ')`' → logprob: -11.468551635742188

Token 2561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010941474698483944
    2. '           ' → logprob: -5.385941505432129
    3. 'for' → logprob: -6.135941505432129
    4. '```' → logprob: -6.260941505432129
    5. '   ' → logprob: -6.885941505432129
    6. 'aho' → logprob: -7.760941505432129
    7. ' aho' → logprob: -8.510941505432129
    8. 'ah' → logprob: -8.510941505432129
    9. 'ho' → logprob: -9.385941505432129
    10. '
' → logprob: -9.510941505432129

Token 2562: ' aho' (ID: 46361)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aho' (adapté à ' aho') → logprob: -0.11616425216197968
    2. '       ' → logprob: -2.241164207458496
    3. '   ' → logprob: -6.491164207458496
    4. ' aho' → logprob: -7.366164207458496
    5. '           ' → logprob: -7.741164207458496
    6. 'ah' → logprob: -8.741164207458496
    7. '```' → logprob: -8.991164207458496
    8. 'abo' → logprob: -9.241164207458496
    9. 'ahoo' → logprob: -10.116164207458496
    10. 'aha' → logprob: -10.241164207458496

Token 2563: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -0.0001438266917830333
    2. '.' → logprob: -8.875144004821777
    3. 'build' → logprob: -12.875144004821777
    4. ' .' → logprob: -14.000144004821777
    5. '```' → logprob: -15.750144004821777
    6. '\.' → logprob: -16.50014305114746
    7. ').' → logprob: -16.50014305114746
    8. '.
' → logprob: -16.75014305114746
    9. '
' → logprob: -17.25014305114746
    10. '.Build' → logprob: -17.37514305114746

Token 2564: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5766118168830872
    2. '       ' → logprob: -0.8266118168830872
    3. 'state' → logprob: -7.8266119956970215
    4. '        
' → logprob: -8.826611518859863
    5. '   ' → logprob: -9.826611518859863
    6. '
' → logprob: -10.201611518859863
    7. '```' → logprob: -10.576611518859863
    8. '

' → logprob: -13.076611518859863
    9. '           ' → logprob: -13.201611518859863
    10. ' state' → logprob: -13.701611518859863

Token 2565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028099514544010162
    2. '#' → logprob: -4.403099536895752
    3. 'matches' → logprob: -4.528099536895752
    4. '
' → logprob: -5.528099536895752
    5. '```' → logprob: -7.403099536895752
    6. '   ' → logprob: -10.778099060058594
    7. 'match' → logprob: -11.028099060058594
    8. '        
' → logprob: -11.278099060058594
    9. '`' → logprob: -11.653099060058594
    10. ' matches' → logprob: -11.903099060058594

Token 2566: ' matches' (ID: 15248)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7953979969024658
    2. '       ' → logprob: -1.2953979969024658
    3. 'matches' (adapté à ' matches') → logprob: -1.2953979969024658
    4. '```' → logprob: -8.045397758483887
    5. 'match' → logprob: -8.170397758483887
    6. '   ' → logprob: -8.545397758483887
    7. '
' → logprob: -9.670397758483887
    8. ' #' → logprob: -10.045397758483887
    9. ' matches' → logprob: -10.045397758483887
    10. '           ' → logprob: -11.295397758483887

Token 2567: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.3306015716807451e-05
    2. ' =' → logprob: -12.50001335144043
    3. '=_' → logprob: -12.75001335144043
    4. '=' → logprob: -13.12501335144043
    5. '```' → logprob: -13.50001335144043
    6. '   ' → logprob: -14.25001335144043
    7. '
' → logprob: -14.87501335144043
    8. '\' → logprob: -15.25001335144043
    9. '_' → logprob: -15.25001335144043
    10. ' _' → logprob: -15.62501335144043

Token 2568: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.043170686811208725
    2. 'pos' → logprob: -3.168170690536499
    3. '[' → logprob: -9.918170928955078
    4. '[pos' → logprob: -9.918170928955078
    5. '```' → logprob: -10.918170928955078
    6. '[(' → logprob: -11.793170928955078
    7. '[
' → logprob: -11.793170928955078
    8. '[_' → logprob: -11.918170928955078
    9. '_' → logprob: -12.043170928955078
    10. '=' → logprob: -12.168170928955078

Token 2569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38951268792152405
    2. ' =' → logprob: -1.1395126581192017
    3. '=[' → logprob: -6.514512538909912
    4. '[' → logprob: -7.139512538909912
    5. '   ' → logprob: -8.88951301574707
    6. '=[]' → logprob: -9.38951301574707
    7. '[:]' → logprob: -10.63951301574707
    8. '_' → logprob: -10.88951301574707
    9. '```' → logprob: -10.88951301574707
    10. '[end' → logprob: -10.88951301574707

Token 2570: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.061054359131958e-06
    2. ' [[]' → logprob: -11.750007629394531
    3. '[[' → logprob: -16.37500762939453
    4. '[]' → logprob: -17.50000762939453
    5. '[
' → logprob: -17.50000762939453
    6. '[len' → logprob: -18.37500762939453
    7. '[['' → logprob: -19.25000762939453
    8. '[List' → logprob: -19.37500762939453
    9. ' [' → logprob: -20.25000762939453
    10. '[list' → logprob: -20.37500762939453

Token 2571: ' for' (ID: 395)
  Prédit: '[len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[len' → logprob: -0.5966904759407043
    2. 'for' → logprob: -0.8466904759407043
    3. '(len' → logprob: -4.096690654754639
    4. ' for' → logprob: -6.346690654754639
    5. '[' → logprob: -6.596690654754639
    6. '[
' → logprob: -8.59669017791748
    7. '=' → logprob: -8.84669017791748
    8. ')' → logprob: -8.84669017791748
    9. '
' → logprob: -9.59669017791748
    10. ' =' → logprob: -10.09669017791748

Token 2572: ' _' (ID: 1175)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006784520111978054
    2. '(len' → logprob: -5.006784439086914
    3. '_' → logprob: -10.256784439086914
    4. ' len' → logprob: -11.256784439086914
    5. '[len' → logprob: -11.756784439086914
    6. 'range' → logprob: -12.006784439086914
    7. '<len' → logprob: -12.631784439086914
    8. '_len' → logprob: -13.256784439086914
    9. '	len' → logprob: -13.881784439086914
    10. '   ' → logprob: -15.131784439086914

Token 2573: ' in' (ID: 306)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.17420320212841034
    2. 'range' → logprob: -1.9242031574249268
    3. '(len' → logprob: -4.299203395843506
    4. '[len' → logprob: -8.924202919006348
    5. ' range' → logprob: -9.674202919006348
    6. '<len' → logprob: -10.174202919006348
    7. ' len' → logprob: -10.299202919006348
    8. '(range' → logprob: -11.174202919006348
    9. '=len' → logprob: -11.799202919006348
    10. 'length' → logprob: -11.924202919006348

Token 2574: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47412392497062683
    2. 'len' → logprob: -0.9741239547729492
    3. ' range' → logprob: -10.59912395477295
    4. '(len' → logprob: -10.84912395477295
    5. '[len' → logprob: -13.34912395477295
    6. ' len' → logprob: -14.34912395477295
    7. '
' → logprob: -15.72412395477295
    8. '(range' → logprob: -15.97412395477295
    9. '<len' → logprob: -17.724123001098633
    10. 'length' → logprob: -17.849123001098633

Token 2575: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007111206650733948
    2. '(len' → logprob: -7.250710964202881
    3. ' len' → logprob: -14.000711441040039
    4. '[len' → logprob: -14.875711441040039
    5. 'range' → logprob: -18.37571144104004
    6. '<len' → logprob: -18.75071144104004
    7. ',len' → logprob: -19.00071144104004
    8. '
' → logprob: -19.62571144104004
    9. '=len' → logprob: -19.62571144104004
    10. '	len' → logprob: -19.62571144104004

Token 2576: '(text' (ID: 13414)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.6931536197662354
    2. '(text' → logprob: -0.6931536197662354
    3. ' text' → logprob: -12.318153381347656
    4. '{text' → logprob: -13.318153381347656
    5. '
' → logprob: -16.693153381347656
    6. '"text' → logprob: -17.068153381347656
    7. ')' → logprob: -17.318153381347656
    8. '(' → logprob: -17.443153381347656
    9. 'Text' → logprob: -17.568153381347656
    10. '$text' → logprob: -17.568153381347656

Token 2577: '))]
' (ID: 53695)
  Prédit: ')]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.00649190042167902
    2. ')]' → logprob: -5.1314921379089355
    3. '       ' → logprob: -7.8814921379089355
    4. ')]
' → logprob: -8.881491661071777
    5. ')]

' → logprob: -10.256491661071777
    6. '+' → logprob: -13.131491661071777
    7. '   ' → logprob: -13.131491661071777
    8. '           ' → logprob: -13.881491661071777
    9. '))]
' → logprob: -14.006491661071777
    10. ']
' → logprob: -14.131491661071777

Token 2578: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005716538988053799
    2. '       ' → logprob: -5.880716323852539
    3. '```' → logprob: -6.755716323852539
    4. 'matches' → logprob: -7.505716323852539
    5. ' for' → logprob: -7.755716323852539
    6. 'match' → logprob: -8.130716323852539
    7. 'set' → logprob: -8.630716323852539
    8. 'sets' → logprob: -9.380716323852539
    9. '   ' → logprob: -9.880716323852539
    10. 'visited' → logprob: -10.630716323852539

Token 2579: ' state' (ID: 2608)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6356016993522644
    2. 'state' (adapté à ' state') → logprob: -0.7606016993522644
    3. '       ' → logprob: -6.13560152053833
    4. '```' → logprob: -7.63560152053833
    5. 'visited' → logprob: -9.010601997375488
    6. '
' → logprob: -9.760601997375488
    7. '   ' → logprob: -10.260601997375488
    8. ' for' → logprob: -10.385601997375488
    9. 'set' → logprob: -10.635601997375488
    10. '           ' → logprob: -11.135601997375488

Token 2580: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197462975978851
    2. ' =' → logprob: -2.81197452545166
    3. '=
' → logprob: -12.31197452545166
    4. '
' → logprob: -14.31197452545166
    5. 'state' → logprob: -14.81197452545166
    6. '0' → logprob: -15.18697452545166
    7. ')' → logprob: -15.18697452545166
    8. '   ' → logprob: -15.81197452545166
    9. '```' → logprob: -15.93697452545166
    10. '       ' → logprob: -15.93697452545166

Token 2581: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -20.250001907348633
    4. '   ' → logprob: -21.125001907348633
    5. '00' → logprob: -21.125001907348633
    6. '=' → logprob: -21.125001907348633
    7. ' ' → logprob: -22.125001907348633
    8. '```' → logprob: -22.250001907348633
    9. '000' → logprob: -22.625001907348633
    10. '`' → logprob: -22.625001907348633

Token 2582: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '۰' → logprob: -22.125
    4. '
' → logprob: -22.75
    5. '00' → logprob: -23.125
    6. '   ' → logprob: -23.5
    7. '０' → logprob: -24.125
    8. '(' → logprob: -24.25
    9. ' ' → logprob: -24.375
    10. '```' → logprob: -24.5

Token 2583: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20997628569602966
    2. '
' → logprob: -1.959976315498352
    3. ' for' → logprob: -3.2099761962890625
    4. '       ' → logprob: -5.5849761962890625
    5. ' 
' → logprob: -6.7099761962890625
    6. '        
' → logprob: -7.3349761962890625
    7. ':
' → logprob: -7.4599761962890625
    8. '           ' → logprob: -7.8349761962890625
    9. ':' → logprob: -7.9599761962890625
    10. '=' → logprob: -8.959976196289062

Token 2584: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007377316243946552
    2. ' for' → logprob: -5.0073771476745605
    3. '       ' → logprob: -7.6323771476745605
    4. '
' → logprob: -9.507377624511719
    5. '```' → logprob: -9.757377624511719
    6. '   ' → logprob: -10.882377624511719
    7. '           ' → logprob: -11.757377624511719
    8. ':
' → logprob: -12.757377624511719
    9. ':' → logprob: -12.882377624511719
    10. '        
' → logprob: -13.007377624511719

Token 2585: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005572011577896774
    2. ' for' → logprob: -7.5005574226379395
    3. '```' → logprob: -13.375556945800781
    4. '
' → logprob: -13.750556945800781
    5. '       ' → logprob: -14.375556945800781
    6. '{
' → logprob: -15.000556945800781
    7. 'ch' → logprob: -15.125556945800781
    8. '   ' → logprob: -15.875556945800781
    9. '	for' → logprob: -16.37555694580078
    10. 'state' → logprob: -16.87555694580078

Token 2586: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.220573363360018e-05
    2. '0' → logprob: -10.000082015991211
    3. ' i' → logprob: -10.875082015991211
    4. 'ch' → logprob: -12.000082015991211
    5. '_,' → logprob: -12.125082015991211
    6. ',' → logprob: -12.375082015991211
    7. 'char' → logprob: -14.125082015991211
    8. '   ' → logprob: -14.375082015991211
    9. 'idx' → logprob: -15.375082015991211
    10. 'c' → logprob: -16.25008201599121

Token 2587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03966117277741432
    2. ' in' → logprob: -3.789661169052124
    3. 'in' → logprob: -4.414661407470703
    4. ' ,' → logprob: -5.539661407470703
    5. '_,' → logprob: -9.414661407470703
    6. '   ' → logprob: -9.914661407470703
    7. ',ch' → logprob: -10.039661407470703
    8. '=' → logprob: -10.664661407470703
    9. ',in' → logprob: -12.039661407470703
    10. '       ' → logprob: -12.164661407470703

Token 2588: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.011048054322600365
    2. ' ch' → logprob: -4.511047840118408
    3. 'c' → logprob: -15.636048316955566
    4. '(ch' → logprob: -16.88604736328125
    5. '_ch' → logprob: -17.26104736328125
    6. '	ch' → logprob: -18.01104736328125
    7. ' ' → logprob: -19.01104736328125
    8. '[ch' → logprob: -19.76104736328125
    9. ',ch' → logprob: -20.51104736328125
    10. '```' → logprob: -20.51104736328125

Token 2589: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030016249045729637
    2. 'in' → logprob: -3.5300161838531494
    3. '=' → logprob: -9.15501594543457
    4. '   ' → logprob: -9.78001594543457
    5. ' =' → logprob: -9.90501594543457
    6. ':
' → logprob: -11.40501594543457
    7. ',' → logprob: -12.15501594543457
    8. ':' → logprob: -12.53001594543457
    9. '       ' → logprob: -12.78001594543457
    10. '           ' → logprob: -12.90501594543457

Token 2590: ' enumerate' (ID: 29671)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.06274038553237915
    2. 'enumer' → logprob: -2.9377403259277344
    3. ' text' → logprob: -5.562740325927734
    4. 'aho' → logprob: -5.812740325927734
    5. ' enumerate' → logprob: -7.437740325927734
    6. '(text' → logprob: -9.187740325927734
    7. '
' → logprob: -9.687740325927734
    8. 'range' → logprob: -9.812740325927734
    9. ' aho' → logprob: -10.062740325927734
    10. 'ah' → logprob: -10.562740325927734

Token 2591: '(text' (ID: 13414)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.16043666005134583
    2. ' text' → logprob: -1.9104366302490234
    3. '(text' → logprob: -8.535436630249023
    4. '   ' → logprob: -12.410436630249023
    5. ' (' → logprob: -12.910436630249023
    6. '
' → logprob: -13.660436630249023
    7. ' aho' → logprob: -13.785436630249023
    8. '{text' → logprob: -13.910436630249023
    9. '	text' → logprob: -14.160436630249023
    10. '_text' → logprob: -14.285436630249023

Token 2592: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8929973244667053
    2. ':
' → logprob: -1.0179972648620605
    3. '           ' → logprob: -1.7679972648620605
    4. ':' → logprob: -3.3929972648620605
    5. '       ' → logprob: -4.6429972648620605
    6. '):' → logprob: -4.6429972648620605
    7. '   ' → logprob: -5.6429972648620605
    8. ']:
' → logprob: -7.8929972648620605
    9. '```' → logprob: -8.517997741699219
    10. '               ' → logprob: -8.642997741699219

Token 2593: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031973200384527445
    2. 'state' → logprob: -6.378197193145752
    3. ' state' → logprob: -7.753197193145752
    4. '   ' → logprob: -8.00319766998291
    5. ' =' → logprob: -8.75319766998291
    6. '       ' → logprob: -9.00319766998291
    7. '```' → logprob: -9.62819766998291
    8. '=' → logprob: -9.75319766998291
    9. '(state' → logprob: -9.75319766998291
    10. ':
' → logprob: -9.87819766998291

Token 2594: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.0002581209992058575
    2. ' state' → logprob: -8.625258445739746
    3. '           ' → logprob: -10.125258445739746
    4. '   ' → logprob: -10.875258445739746
    5. '
' → logprob: -11.750258445739746
    6. 'try' → logprob: -12.000258445739746
    7. 'if' → logprob: -13.125258445739746
    8. '       ' → logprob: -13.625258445739746
    9. '               ' → logprob: -14.250258445739746
    10. '	state' → logprob: -14.250258445739746

Token 2595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602243334054947
    2. ' =' → logprob: -1.9102243185043335
    3. '=
' → logprob: -16.16022491455078
    4. '   ' → logprob: -17.53522491455078
    5. 'state' → logprob: -18.03522491455078
    6. '＝' → logprob: -18.91022491455078
    7. '```' → logprob: -18.91022491455078
    8. ' =
' → logprob: -19.03522491455078
    9. '_=' → logprob: -19.41022491455078
    10. ']' → logprob: -19.41022491455078

Token 2596: ' aho' (ID: 46361)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aho' → logprob: -0.0015062900492921472
    2. ' aho' → logprob: -6.501506328582764
    3. 'ah' → logprob: -13.876505851745605
    4. '(' → logprob: -14.376505851745605
    5. 'ahoo' → logprob: -14.501505851745605
    6. 'ho' → logprob: -14.626505851745605
    7. '   ' → logprob: -14.876505851745605
    8. 'ao' → logprob: -15.751505851745605
    9. 'acho' → logprob: -16.001506805419922
    10. '0' → logprob: -16.251506805419922

Token 2597: '.goto' (ID: 119969)
  Prédit: '.goto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.goto' → logprob: -0.04306701570749283
    2. 'goto' → logprob: -3.16806697845459
    3. '.' → logprob: -10.66806697845459
    4. '```' → logprob: -10.91806697845459
    5. '	goto' → logprob: -11.66806697845459
    6. '.state' → logprob: -12.29306697845459
    7. '   ' → logprob: -12.41806697845459
    8. '.go' → logprob: -13.16806697845459
    9. ').' → logprob: -14.04306697845459
    10. '``' → logprob: -14.29306697845459

Token 2598: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0020762672647833824
    2. '.get' → logprob: -6.877076148986816
    3. '(state' → logprob: -7.502076148986816
    4. '[state' → logprob: -7.627076148986816
    5. '[' → logprob: -13.502076148986816
    6. '[
' → logprob: -13.752076148986816
    7. '(' → logprob: -14.627076148986816
    8. '   ' → logprob: -15.502076148986816
    9. '.setdefault' → logprob: -15.502076148986816
    10. '((' → logprob: -15.502076148986816

Token 2599: 'state' (ID: 5294)
  Prédit: 'state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -6.704273118884885e-07
    2. ' state' → logprob: -14.375000953674316
    3. '(state' → logprob: -16.375
    4. '0' → logprob: -18.625
    5. '   ' → logprob: -18.625
    6. '
' → logprob: -19.5
    7. ' ' → logprob: -21.5
    8. ')' → logprob: -21.875
    9. ',state' → logprob: -21.875
    10. '	state' → logprob: -22.375

Token 2600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001751699368469417
    2. ',ch' → logprob: -6.376751899719238
    3. ' ,' → logprob: -10.001751899719238
    4. ',
' → logprob: -13.126751899719238
    5. ',(' → logprob: -13.626751899719238
    6. '(ch' → logprob: -15.376751899719238
    7. ' ' → logprob: -15.626751899719238
    8. '   ' → logprob: -16.251750946044922
    9. '[ch' → logprob: -16.376750946044922
    10. '
' → logprob: -16.626750946044922

Token 2601: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.0445127372804563e-05
    2. ' ch' → logprob: -11.50001049041748
    3. '(ch' → logprob: -15.50001049041748
    4. '	ch' → logprob: -18.375009536743164
    5. ' ' → logprob: -18.625009536743164
    6. '   ' → logprob: -18.875009536743164
    7. ''ch' → logprob: -18.875009536743164
    8. '
' → logprob: -19.250009536743164
    9. '[ch' → logprob: -20.125009536743164
    10. 'c' → logprob: -21.125009536743164

Token 2602: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32352152466773987
    2. ')]' → logprob: -1.3235214948654175
    3. ']
' → logprob: -4.698521614074707
    4. ')' → logprob: -7.323521614074707
    5. ')]
' → logprob: -7.823521614074707
    6. '])' → logprob: -10.823521614074707
    7. ')
' → logprob: -12.448521614074707
    8. ']
' → logprob: -12.573521614074707
    9. '           ' → logprob: -12.948521614074707
    10. '       ' → logprob: -13.573521614074707

Token 2603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07913587242364883
    2. '       ' → logprob: -3.0791358947753906
    3. 'if' → logprob: -4.954135894775391
    4. '
' → logprob: -4.954135894775391
    5. '   ' → logprob: -5.204135894775391
    6. ' if' → logprob: -5.329135894775391
    7. '```' → logprob: -5.454135894775391
    8. '               ' → logprob: -7.579135894775391
    9. '            
' → logprob: -8.32913589477539
    10. ',' → logprob: -9.32913589477539

Token 2604: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002077336423099041
    2. 'for' → logprob: -6.752077102661133
    3. '           ' → logprob: -7.627077102661133
    4. ' if' → logprob: -7.877077102661133
    5. '       ' → logprob: -10.377077102661133
    6. '               ' → logprob: -13.127077102661133
    7. '
' → logprob: -13.502077102661133
    8. '   ' → logprob: -13.752077102661133
    9. '```' → logprob: -13.877077102661133
    10. '#' → logprob: -14.002077102661133

Token 2605: ' aho' (ID: 46361)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aho' → logprob: -0.038713183254003525
    2. ' aho' → logprob: -3.288713216781616
    3. '   ' → logprob: -8.038713455200195
    4. 'ah' → logprob: -9.538713455200195
    5. ' ' → logprob: -9.663713455200195
    6. 'state' → logprob: -10.038713455200195
    7. 'len' → logprob: -10.413713455200195
    8. '
' → logprob: -10.788713455200195
    9. 'ahoo' → logprob: -11.163713455200195
    10. 'awo' → logprob: -11.538713455200195

Token 2606: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.0005533903022296727
    2. 'out' → logprob: -7.750553607940674
    3. '```' → logprob: -9.375553131103516
    4. '.' → logprob: -11.750553131103516
    5. '`.' → logprob: -12.000553131103516
    6. '``' → logprob: -12.375553131103516
    7. '
' → logprob: -12.500553131103516
    8. '].' → logprob: -12.875553131103516
    9. '	out' → logprob: -13.000553131103516
    10. '   ' → logprob: -13.250553131103516

Token 2607: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -3.128163257315464e-07
    2. 'state' → logprob: -15.625
    3. '[' → logprob: -16.375
    4. '
' → logprob: -17.625
    5. '[
' → logprob: -18.0
    6. '   ' → logprob: -18.5
    7. '(state' → logprob: -18.5
    8. '```' → logprob: -18.625
    9. ',state' → logprob: -19.375
    10. '       ' → logprob: -20.5

Token 2608: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6158588528633118
    2. ':
' → logprob: -1.615858793258667
    3. ']:
' → logprob: -1.990858793258667
    4. ']:' → logprob: -2.115858793258667
    5. '               ' → logprob: -6.240859031677246
    6. '           ' → logprob: -7.615859031677246
    7. '{' → logprob: -8.115859031677246
    8. '{
' → logprob: -8.240859031677246
    9. '):
' → logprob: -8.240859031677246
    10. ']' → logprob: -8.740859031677246

Token 2609: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018092949176207185
    2. 'for' → logprob: -7.001809120178223
    3. ' for' → logprob: -7.126809120178223
    4. ':
' → logprob: -10.001809120178223
    5. '           ' → logprob: -11.001809120178223
    6. ':' → logprob: -11.251809120178223
    7. '                   ' → logprob: -11.626809120178223
    8. '```' → logprob: -12.126809120178223
    9. '                       ' → logprob: -13.376809120178223
    10. 'For' → logprob: -14.251809120178223

Token 2610: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003444024478085339
    2. ' for' → logprob: -8.500344276428223
    3. '                   ' → logprob: -9.000344276428223
    4. '               ' → logprob: -11.750344276428223
    5. '                       ' → logprob: -11.750344276428223
    6. '   ' → logprob: -14.500344276428223
    7. '```' → logprob: -14.625344276428223
    8. '	for' → logprob: -14.875344276428223
    9. 'For' → logprob: -15.750344276428223
    10. '           ' → logprob: -15.875344276428223

Token 2611: ' pid' (ID: 23462)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -3.91732100979425e-05
    2. 'pid' → logprob: -10.250039100646973
    3. 'pat' → logprob: -12.875039100646973
    4. ' pattern' → logprob: -14.250039100646973
    5. 'p' → logprob: -14.500039100646973
    6. '   ' → logprob: -18.25004005432129
    7. 'word' → logprob: -18.37504005432129
    8. '(pattern' → logprob: -18.50004005432129
    9. '
' → logprob: -18.62504005432129
    10. 'pi' → logprob: -19.00004005432129

Token 2612: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017114708898589015
    2. 'in' → logprob: -6.376711368560791
    3. 'n' → logprob: -12.00171184539795
    4. '               ' → logprob: -14.25171184539795
    5. '                   ' → logprob: -14.87671184539795
    6. '           ' → logprob: -15.00171184539795
    7. ' ' → logprob: -15.12671184539795
    8. 'd' → logprob: -15.12671184539795
    9. ')' → logprob: -15.25171184539795
    10. '
' → logprob: -16.126710891723633

Token 2613: ' aho' (ID: 46361)
  Prédit: 'aho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aho' → logprob: -4.008129963040119e-06
    2. ' aho' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.125003814697266
    4. 'ahoo' → logprob: -16.750003814697266
    5. 'ah' → logprob: -17.500003814697266
    6. '(' → logprob: -17.875003814697266
    7. '
' → logprob: -18.250003814697266
    8. 'awo' → logprob: -18.250003814697266
    9. 'acho' → logprob: -18.250003814697266
    10. 'ahi' → logprob: -19.125003814697266

Token 2614: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.0009711332386359572
    2. 'out' → logprob: -7.00097131729126
    3. '[out' → logprob: -10.000970840454102
    4. '
' → logprob: -12.500970840454102
    5. '```' → logprob: -13.500970840454102
    6. '].' → logprob: -13.500970840454102
    7. '{
' → logprob: -13.750970840454102
    8. '.' → logprob: -13.875970840454102
    9. '[' → logprob: -14.000970840454102
    10. '   ' → logprob: -14.125970840454102

Token 2615: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.750006675720215
    3. '   ' → logprob: -13.875006675720215
    4. '[
' → logprob: -14.125006675720215
    5. '       ' → logprob: -14.500006675720215
    6. 'state' → logprob: -14.625006675720215
    7. '
' → logprob: -14.875006675720215
    8. '(state' → logprob: -16.0000057220459
    9. '```' → logprob: -16.1250057220459
    10. ')' → logprob: -16.5000057220459

Token 2616: ']:
' (ID: 22152)
  Prédit: '[state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -0.0815214142203331
    2. ']:
' → logprob: -2.581521511077881
    3. '       ' → logprob: -7.206521511077881
    4. ']:' → logprob: -7.456521511077881
    5. 'state' → logprob: -8.206521034240723
    6. '               ' → logprob: -8.206521034240723
    7. '                   ' → logprob: -8.706521034240723
    8. '):
' → logprob: -8.706521034240723
    9. '           ' → logprob: -8.706521034240723
    10. '   ' → logprob: -9.706521034240723

Token 2617: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011647457722574472
    2. 'matches' → logprob: -7.62616491317749
    3. '                       ' → logprob: -7.87616491317749
    4. '(matches' → logprob: -9.126164436340332
    5. '```' → logprob: -9.501164436340332
    6. '               ' → logprob: -10.126164436340332
    7. ' matches' → logprob: -11.001164436340332
    8. ':
' → logprob: -11.126164436340332
    9. '                           ' → logprob: -11.626164436340332
    10. '   ' → logprob: -12.376164436340332

Token 2618: ' length' (ID: 5517)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.002200571121647954
    2. '                   ' → logprob: -7.252200603485107
    3. ' matches' → logprob: -7.252200603485107
    4. '                       ' → logprob: -7.752200603485107
    5. 'length' (adapté à ' length') → logprob: -8.75220012664795
    6. '(matches' → logprob: -8.75220012664795
    7. '```' → logprob: -11.12720012664795
    8. '   ' → logprob: -12.00220012664795
    9. '                           ' → logprob: -12.62720012664795
    10. '           ' → logprob: -13.12720012664795

Token 2619: '_p' (ID: 1359)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2212570756673813
    2. '=' → logprob: -1.9712570905685425
    3. '                   ' → logprob: -3.346256971359253
    4. 's' → logprob: -4.221257209777832
    5. '(element' → logprob: -6.596257209777832
    6. '=len' → logprob: -6.846257209777832
    7. '_' → logprob: -7.221257209777832
    8. '_len' → logprob: -7.721257209777832
    9. '_at' → logprob: -7.721257209777832
    10. 'element' → logprob: -7.721257209777832

Token 2620: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.257810115814209
    2. ' =' → logprob: -1.507810115814209
    3. '=len' → logprob: -5.257810115814209
    4. '                   ' → logprob: -8.382810592651367
    5. '           ' → logprob: -9.382810592651367
    6. 'attern' → logprob: -10.132810592651367
    7. 's' → logprob: -10.132810592651367
    8. '               ' → logprob: -10.382810592651367
    9. '=
' → logprob: -10.632810592651367
    10. 'at' → logprob: -10.757810592651367

Token 2621: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0802738870552275e-05
    2. ' len' → logprob: -11.50001049041748
    3. 'length' → logprob: -14.87501049041748
    4. '                   ' → logprob: -15.75001049041748
    5. '(len' → logprob: -16.125011444091797
    6. 'element' → logprob: -16.875011444091797
    7. '[len' → logprob: -17.875011444091797
    8. '=len' → logprob: -18.750011444091797
    9. '	len' → logprob: -19.625011444091797
    10. '                       ' → logprob: -19.625011444091797

Token 2622: '(element' (ID: 22709)
  Prédit: '(element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(element' → logprob: -0.07893539220094681
    2. 'element' → logprob: -2.578935384750366
    3. '(' → logprob: -10.953935623168945
    4. '[element' → logprob: -10.953935623168945
    5. '                   ' → logprob: -12.328935623168945
    6. '(
' → logprob: -13.203935623168945
    7. ' element' → logprob: -13.203935623168945
    8. '	element' → logprob: -14.203935623168945
    9. '```' → logprob: -14.453935623168945
    10. '(entity' → logprob: -15.203935623168945

Token 2623: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.00020187153131701052
    2. 'strings' → logprob: -9.250202178955078
    3. 's' → logprob: -9.500202178955078
    4. 'Strings' → logprob: -11.250202178955078
    5. '_s' → logprob: -11.750202178955078
    6. '[element' → logprob: -13.500202178955078
    7. '```' → logprob: -13.625202178955078
    8. 'element' → logprob: -13.875202178955078
    9. '[p' → logprob: -14.000202178955078
    10. '(strings' → logprob: -14.125202178955078

Token 2624: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.65707261255011e-06
    2. '(pid' → logprob: -12.250008583068848
    3. 'pid' → logprob: -13.250008583068848
    4. '[
' → logprob: -14.875008583068848
    5. '```' → logprob: -15.250008583068848
    6. '       ' → logprob: -15.375008583068848
    7. '
' → logprob: -15.500008583068848
    8. ')' → logprob: -15.500008583068848
    9. '           ' → logprob: -15.625008583068848
    10. '   ' → logprob: -15.875008583068848

Token 2625: 'pid' (ID: 19554)
  Prédit: 'pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.0003662020608317107
    2. '[' → logprob: -8.1253662109375
    3. '(pid' → logprob: -9.7503662109375
    4. ' pid' → logprob: -11.6253662109375
    5. '
' → logprob: -14.0003662109375
    6. '           ' → logprob: -14.5003662109375
    7. '   ' → logprob: -14.7503662109375
    8. '```' → logprob: -15.2503662109375
    9. '                   ' → logprob: -15.3753662109375
    10. '       ' → logprob: -16.0003662109375

Token 2626: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11119036376476288
    2. '])
' → logprob: -2.7361903190612793
    3. '                   ' → logprob: -3.3611903190612793
    4. ')' → logprob: -6.236190319061279
    5. ')]
' → logprob: -6.236190319061279
    6. '               ' → logprob: -7.861190319061279
    7. ']
' → logprob: -7.986190319061279
    8. '           ' → logprob: -8.236190795898438
    9. ')])
' → logprob: -8.611190795898438
    10. '])' → logprob: -8.861190795898438

Token 2627: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11389750242233276
    2. '                       ' → logprob: -2.2388975620269775
    3. 'matches' → logprob: -7.488897323608398
    4. '                           ' → logprob: -8.613897323608398
    5. '(matches' → logprob: -9.113897323608398
    6. '```' → logprob: -9.613897323608398
    7. '               ' → logprob: -10.238897323608398
    8. '                    ' → logprob: -10.988897323608398
    9. '                     ' → logprob: -11.363897323608398
    10. ' matches' → logprob: -11.613897323608398

Token 2628: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' (adapté à ' matches') → logprob: -0.0018674718448892236
    2. '                   ' → logprob: -6.501867294311523
    3. ' matches' → logprob: -8.126867294311523
    4. '                       ' → logprob: -10.001867294311523
    5. '```' → logprob: -11.376867294311523
    6. '               ' → logprob: -12.501867294311523
    7. '           ' → logprob: -12.626867294311523
    8. '(matches' → logprob: -13.126867294311523
    9. '   ' → logprob: -13.626867294311523
    10. '       ' → logprob: -13.876867294311523

Token 2629: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -2.45848218582978e-06
    2. '                   ' → logprob: -13.75000286102295
    3. 'at' → logprob: -15.00000286102295
    4. '=' → logprob: -15.62500286102295
    5. 'At' → logprob: -16.125001907348633
    6. '
' → logprob: -16.125001907348633
    7. '               ' → logprob: -16.250001907348633
    8. '   ' → logprob: -16.500001907348633
    9. 'length' → logprob: -16.875001907348633
    10. '```' → logprob: -16.875001907348633

Token 2630: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.029755238443613052
    2. 'pos' → logprob: -3.5297553539276123
    3. 'p' → logprob: -13.154755592346191
    4. '[pos' → logprob: -13.404755592346191
    5. '```' → logprob: -15.279755592346191
    6. '
' → logprob: -15.404755592346191
    7. '[i' → logprob: -15.529755592346191
    8. 'i' → logprob: -16.154754638671875
    9. 'pose' → logprob: -16.279754638671875
    10. 'po' → logprob: -16.404754638671875

Token 2631: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.306760805164231e-05
    2. 'i' → logprob: -12.37501335144043
    3. '                   ' → logprob: -13.00001335144043
    4. '```' → logprob: -13.25001335144043
    5. '[' → logprob: -13.50001335144043
    6. '[state' → logprob: -13.62501335144043
    7. '               ' → logprob: -14.50001335144043
    8. '[
' → logprob: -14.75001335144043
    9. '
' → logprob: -14.87501335144043
    10. '           ' → logprob: -15.25001335144043

Token 2632: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05441330373287201
    2. '.append' → logprob: -3.304413318634033
    3. ').' → logprob: -4.429413318634033
    4. '                   ' → logprob: -5.554413318634033
    5. '.' → logprob: -8.429412841796875
    6. '           ' → logprob: -8.929412841796875
    7. '               ' → logprob: -10.304412841796875
    8. '                       ' → logprob: -11.679412841796875
    9. '       ' → logprob: -11.804412841796875
    10. '```' → logprob: -12.179412841796875

Token 2633: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.8889261304575484e-06
    2. '.append' → logprob: -12.500003814697266
    3. ' append' → logprob: -16.500003814697266
    4. '_append' → logprob: -16.750003814697266
    5. 'appen' → logprob: -18.250003814697266
    6. 'app' → logprob: -20.000003814697266
    7. 'extend' → logprob: -20.000003814697266
    8. '	append' → logprob: -20.375003814697266
    9. 'add' → logprob: -20.875003814697266
    10. 'Append' → logprob: -21.250003814697266

Token 2634: '((' (ID: 2054)
  Prédit: '(pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pid' → logprob: -0.0002669384120963514
    2. '(' → logprob: -8.250267028808594
    3. '((' → logprob: -13.000267028808594
    4. ' (' → logprob: -13.375267028808594
    5. '(p' → logprob: -13.875267028808594
    6. '(fid' → logprob: -15.250267028808594
    7. '(
' → logprob: -15.500267028808594
    8. '(pin' → logprob: -15.750267028808594
    9. '(pi' → logprob: -16.250267028808594
    10. '(pred' → logprob: -16.750267028808594

Token 2635: 'pid' (ID: 19554)
  Prédit: 'pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -4.008129963040119e-06
    2. '(pid' → logprob: -12.500003814697266
    3. ' pid' → logprob: -15.750003814697266
    4. '                   ' → logprob: -17.750003814697266
    5. '
' → logprob: -18.000003814697266
    6. 'pi' → logprob: -18.375003814697266
    7. 'p' → logprob: -20.625003814697266
    8. '_pid' → logprob: -20.875003814697266
    9. '```' → logprob: -20.875003814697266
    10. '.pid' → logprob: -21.125003814697266

Token 2636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03385661169886589
    2. ',length' → logprob: -3.4088566303253174
    3. ',len' → logprob: -8.908856391906738
    4. ',
' → logprob: -10.408856391906738
    5. '                   ' → logprob: -10.533856391906738
    6. ' ,' → logprob: -12.533856391906738
    7. '```' → logprob: -12.783856391906738
    8. 'length' → logprob: -12.783856391906738
    9. '
' → logprob: -13.283856391906738
    10. '[length' → logprob: -13.408856391906738

Token 2637: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -4.842555426876061e-06
    2. ' length' → logprob: -12.250004768371582
    3. '(length' → logprob: -18.2500057220459
    4. '[length' → logprob: -19.5000057220459
    5. ',length' → logprob: -19.8750057220459
    6. '                   ' → logprob: -19.8750057220459
    7. 'leng' → logprob: -21.2500057220459
    8. 'len' → logprob: -21.3750057220459
    9. '
' → logprob: -21.6250057220459
    10. '	length' → logprob: -21.8750057220459

Token 2638: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.10292527824640274
    2. '_' → logprob: -3.1029253005981445
    3. '))' → logprob: -3.6029253005981445
    4. '_j' → logprob: -4.4779253005981445
    5. ')' → logprob: -6.1029253005981445
    6. ')]' → logprob: -6.2279253005981445
    7. ')])' → logprob: -6.2279253005981445
    8. '_)' → logprob: -6.3529253005981445
    9. '))
' → logprob: -6.7279253005981445
    10. 'length' → logprob: -7.2279253005981445

Token 2639: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07404041290283203
    2. ')' → logprob: -2.699040412902832
    3. '                   ' → logprob: -5.699040412902832
    4. '))
' → logprob: -7.574040412902832
    5. '               ' → logprob: -9.324040412902832
    6. ')))' → logprob: -10.324040412902832
    7. ',' → logprob: -10.574040412902832
    8. '           ' → logprob: -10.824040412902832
    9. ')}' → logprob: -11.574040412902832
    10. ')]' → logprob: -11.574040412902832

Token 2640: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9120994806289673
    2. '       ' → logprob: -0.9120994806289673
    3. 'matches' → logprob: -2.2870993614196777
    4. 'for' → logprob: -3.2870993614196777
    5. 'match' → logprob: -4.037099361419678
    6. '
' → logprob: -4.162099361419678
    7. '   ' → logprob: -5.037099361419678
    8. 'sets' → logprob: -5.412099361419678
    9. '```' → logprob: -5.662099361419678
    10. 'end' → logprob: -6.037099361419678

Token 2641: ' #' (ID: 1069)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.494067907333374
    2. '#' (adapté à ' #') → logprob: -1.119067907333374
    3. 'match' → logprob: -3.119067907333374
    4. '       ' → logprob: -4.994068145751953
    5. 'sets' → logprob: -5.744068145751953
    6. 'for' → logprob: -5.869068145751953
    7. 'end' → logprob: -6.244068145751953
    8. '   ' → logprob: -6.619068145751953
    9. 'ends' → logprob: -7.369068145751953
    10. 'membership' → logprob: -7.994068145751953

Token 2642: ' Prepare' (ID: 49102)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.341001033782959
    2. '#' → logprob: -1.466001033782959
    3. 'match' → logprob: -3.341001033782959
    4. '       ' → logprob: -4.216001033782959
    5. 'sets' → logprob: -5.716001033782959
    6. 'for' → logprob: -6.466001033782959
    7. 'membership' → logprob: -6.841001033782959
    8. 'end' → logprob: -7.716001033782959
    9. 'pattern' → logprob: -8.466001510620117
    10. '   ' → logprob: -8.466001510620117

Token 2643: ' sets' (ID: 11982)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.4190208613872528
    2. 'match' → logprob: -1.1690208911895752
    3. 'sets' → logprob: -3.669020891189575
    4. 'pos' → logprob: -6.544020652770996
    5. 'membership' → logprob: -6.669020652770996
    6. 'set' → logprob: -7.169020652770996
    7. 'for' → logprob: -7.419020652770996
    8. '#' → logprob: -7.419020652770996
    9. 'positions' → logprob: -8.044020652770996
    10. 'matched' → logprob: -8.669020652770996

Token 2644: ' for' (ID: 395)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.48995500802993774
    2. 'sets' → logprob: -1.989954948425293
    3. 'for' → logprob: -2.864954948425293
    4. 'match' → logprob: -3.114954948425293
    5. 'pos' → logprob: -3.614954948425293
    6. '_pos' → logprob: -3.864954948425293
    7. '_sets' → logprob: -3.864954948425293
    8. '_set' → logprob: -4.114954948425293
    9. 'set' → logprob: -4.239954948425293
    10. '_matches' → logprob: -4.239954948425293

Token 2645: ' quick' (ID: 4853)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matches' → logprob: -1.0777740478515625
    2. 'end' → logprob: -1.3277740478515625
    3. 'i' → logprob: -1.5777740478515625
    4. 'pos' → logprob: -2.2027740478515625
    5. '[i' → logprob: -3.0777740478515625
    6. '(i' → logprob: -5.2027740478515625
    7. 'range' → logprob: -5.2027740478515625
    8. 'match' → logprob: -5.3277740478515625
    9. '
' → logprob: -5.5777740478515625
    10. 'position' → logprob: -6.5777740478515625

Token 2646: ' membership' (ID: 20190)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.6735416650772095
    2. '_pos' → logprob: -1.2985416650772095
    3. 'matches' → logprob: -2.42354154586792
    4. '_matches' → logprob: -3.04854154586792
    5. 'pos' → logprob: -3.17354154586792
    6. 'match' → logprob: -4.29854154586792
    7. 'lookup' → logprob: -4.42354154586792
    8. '_match' → logprob: -5.29854154586792
    9. 'at' → logprob: -5.54854154586792
    10. '[pos' → logprob: -7.04854154586792

Token 2647: '
' (ID: 198)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.07850908488035202
    2. '_matches' → logprob: -3.2035090923309326
    3. ' =' → logprob: -4.5785088539123535
    4. '_for' → logprob: -4.7035088539123535
    5. '_end' → logprob: -5.5785088539123535
    6. 'for' → logprob: -6.0785088539123535
    7. '```' → logprob: -6.4535088539123535
    8. '_match' → logprob: -6.5785088539123535
    9. '_pos' → logprob: -6.5785088539123535
    10. '
' → logprob: -7.2035088539123535

Token 2648: '       ' (ID: 309)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -1.106216311454773
    2. ' =' → logprob: -1.731216311454773
    3. 'for' → logprob: -1.981216311454773
    4. '_for' → logprob: -2.2312164306640625
    5. '_matches' → logprob: -3.1062164306640625
    6. '_pos' → logprob: -3.2312164306640625
    7. 'matches' → logprob: -3.2312164306640625
    8. '```' → logprob: -3.4812164306640625
    9. '_end' → logprob: -3.9812164306640625
    10. '=' → logprob: -4.2312164306640625

Token 2649: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' (adapté à ' matches') → logprob: -0.45505496859550476
    2. 'match' → logprob: -1.3300549983978271
    3. 'for' → logprob: -2.705054998397827
    4. 'sets' → logprob: -3.830054998397827
    5. 'membership' → logprob: -5.205054759979248
    6. 'set' → logprob: -6.080054759979248
    7. 'pos' → logprob: -6.705054759979248
    8. 'prepared' → logprob: -7.330054759979248
    9. '```' → logprob: -7.830054759979248
    10. 'check' → logprob: -7.955054759979248

Token 2650: '_set' (ID: 5451)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.04458698630332947
    2. '_sets' → logprob: -3.1695868968963623
    3. '_set' → logprob: -6.544587135314941
    4. '_' → logprob: -10.919587135314941
    5. 'at' → logprob: -11.294587135314941
    6. '_per' → logprob: -11.419587135314941
    7. '_positions' → logprob: -11.419587135314941
    8. '_s' → logprob: -11.669587135314941
    9. '\' → logprob: -11.669587135314941
    10. '_pos' → logprob: -11.794587135314941

Token 2651: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.0016952957957983017
    2. '=' → logprob: -6.626695156097412
    3. ' =' → logprob: -9.00169563293457
    4. '_end' → logprob: -9.75169563293457
    5. '[pos' → logprob: -10.50169563293457
    6. '```' → logprob: -10.50169563293457
    7. '[' → logprob: -10.62669563293457
    8. '[end' → logprob: -10.87669563293457
    9. '[_' → logprob: -11.12669563293457
    10. 'at' → logprob: -11.25169563293457

Token 2652: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.42987167835235596
    2. '_pos' → logprob: -1.054871678352356
    3. 'i' → logprob: -7.429871559143066
    4. '[i' → logprob: -7.929871559143066
    5. '[pos' → logprob: -9.804871559143066
    6. '[
' → logprob: -10.054871559143066
    7. '=' → logprob: -10.929871559143066
    8. ']' → logprob: -11.179871559143066
    9. '_i' → logprob: -11.429871559143066
    10. '[' → logprob: -11.679871559143066

Token 2653: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6406460404396057
    2. '_at' → logprob: -1.015645980834961
    3. ' =' → logprob: -3.015645980834961
    4. '=[' → logprob: -3.515645980834961
    5. '[' → logprob: -4.640645980834961
    6. '[end' → logprob: -5.015645980834961
    7. '[pos' → logprob: -6.015645980834961
    8. '=[]' → logprob: -6.015645980834961
    9. '[i' → logprob: -6.140645980834961
    10. '[_' → logprob: -6.515645980834961

Token 2654: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002301204949617386
    2. '[list' → logprob: -6.752301216125488
    3. ' [' → logprob: -7.377301216125488
    4. '[i' → logprob: -8.002301216125488
    5. '[len' → logprob: -9.627301216125488
    6. '[idx' → logprob: -11.002301216125488
    7. '[m' → logprob: -11.127301216125488
    8. '[{' → logprob: -11.252301216125488
    9. '[pos' → logprob: -11.252301216125488
    10. '[f' → logprob: -12.002301216125488

Token 2655: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.005234121344983578
    2. '{' → logprob: -5.255234241485596
    3. ' set' → logprob: -15.505233764648438
    4. '{
' → logprob: -17.755233764648438
    5. '(set' → logprob: -17.755233764648438
    6. ' {' → logprob: -18.130233764648438
    7. 'fro' → logprob: -18.505233764648438
    8. 'dict' → logprob: -18.755233764648438
    9. '{}' → logprob: -19.380233764648438
    10. '=set' → logprob: -19.755233764648438

Token 2656: '(m' (ID: 2145)
  Prédit: '(matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matches' → logprob: -0.0621224045753479
    2. '()' → logprob: -3.687122344970703
    3. '((' → logprob: -3.812122344970703
    4. '(m' → logprob: -5.312122344970703
    5. '([(' → logprob: -6.062122344970703
    6. '()]' → logprob: -6.062122344970703
    7. 'matches' → logprob: -6.437122344970703
    8. '(match' → logprob: -7.437122344970703
    9. '[(' → logprob: -7.812122344970703
    10. '(' → logprob: -8.437122344970703

Token 2657: ')' (ID: 8)
  Prédit: 'atches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atches' → logprob: -0.13284069299697876
    2. 'matches' → logprob: -2.132840633392334
    3. '(matches' → logprob: -6.132840633392334
    4. 'atch' → logprob: -6.382840633392334
    5. '_at' → logprob: -7.257840633392334
    6. 'at' → logprob: -7.507840633392334
    7. ')' → logprob: -8.007841110229492
    8. '_matches' → logprob: -9.007841110229492
    9. '[(' → logprob: -10.007841110229492
    10. '[' → logprob: -10.507841110229492

Token 2658: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2701696455478668
    2. ' for' → logprob: -2.520169734954834
    3. '(matches' → logprob: -2.520169734954834
    4. ')' → logprob: -2.645169734954834
    5. '[:]' → logprob: -6.270169734954834
    6. '   ' → logprob: -7.645169734954834
    7. '[m' → logprob: -7.645169734954834
    8. '(m' → logprob: -7.770169734954834
    9. '()' → logprob: -8.020169258117676
    10. '[i' → logprob: -8.145169258117676

Token 2659: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0834701657295227
    2. 'matches' → logprob: -2.583470106124878
    3. 'pos' → logprob: -5.583470344543457
    4. 'lst' → logprob: -7.458470344543457
    5. 'x' → logprob: -9.208470344543457
    6. 'match' → logprob: -9.333470344543457
    7. 'row' → logprob: -11.458470344543457
    8. 'l' → logprob: -11.583470344543457
    9. 'mp' → logprob: -12.583470344543457
    10. 'sub' → logprob: -12.708470344543457

Token 2660: ' in' (ID: 306)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6633879542350769
    2. '_at' → logprob: -1.0383880138397217
    3. 'in' → logprob: -2.9133880138397217
    4. ']' → logprob: -3.6633880138397217
    5. 'at' → logprob: -4.163387775421143
    6. '_pos' → logprob: -4.413387775421143
    7. ' in' → logprob: -4.788387775421143
    8. '[pos' → logprob: -4.788387775421143
    9. '(i' → logprob: -6.663387775421143
    10. 'pos' → logprob: -6.913387775421143

Token 2661: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -5.319370302458992e-06
    2. '(matches' → logprob: -12.750005722045898
    3. ' matches' → logprob: -13.125005722045898
    4. 'match' → logprob: -15.875005722045898
    5. 'range' → logprob: -16.0000057220459
    6. 'm' → logprob: -16.3750057220459
    7. '
' → logprob: -17.2500057220459
    8. '.matches' → logprob: -17.7500057220459
    9. '[m' → logprob: -18.0000057220459
    10. '_matches' → logprob: -18.1250057220459

Token 2662: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.00018006093159783632
    2. '[_' → logprob: -9.8751802444458
    3. '_pos' → logprob: -10.1251802444458
    4. 'at' → logprob: -10.7501802444458
    5. ']' → logprob: -11.5001802444458
    6. '_set' → logprob: -11.6251802444458
    7. ')' → logprob: -11.7501802444458
    8. '   ' → logprob: -12.0001802444458
    9. 'At' → logprob: -12.3751802444458
    10. 's' → logprob: -12.5001802444458

Token 2663: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.16023315489292145
    2. '_pos' → logprob: -1.9102331399917603
    3. 'i' → logprob: -12.535233497619629
    4. 'os' → logprob: -13.410233497619629
    5. '[i' → logprob: -13.535233497619629
    6. '```' → logprob: -14.535233497619629
    7. '[pos' → logprob: -14.660233497619629
    8. 'Pos' → logprob: -14.660233497619629
    9. ']' → logprob: -15.660233497619629
    10. 'p' → logprob: -15.785233497619629

Token 2664: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05445767566561699
    2. '()]' → logprob: -3.179457664489746
    3. '       ' → logprob: -4.554457664489746
    4. ')]' → logprob: -7.554457664489746
    5. ']()' → logprob: -9.429457664489746
    6. '()' → logprob: -9.554457664489746
    7. ' ]' → logprob: -9.679457664489746
    8. ')' → logprob: -9.804457664489746
    9. '   ' → logprob: -10.429457664489746
    10. '(' → logprob: -11.679457664489746

Token 2665: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017939085140824318
    2. 'for' → logprob: -4.64293909072876
    3. '
' → logprob: -5.14293909072876
    4. '```' → logprob: -6.14293909072876
    5. ' for' → logprob: -9.017938613891602
    6. '   ' → logprob: -11.017938613891602
    7. '           ' → logprob: -11.267938613891602
    8. '        
' → logprob: -12.642938613891602
    9. '`' → logprob: -13.017938613891602
    10. '``' → logprob: -13.267938613891602

Token 2666: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049716830253601074
    2. 'for' → logprob: -3.0497169494628906
    3. '
' → logprob: -7.549716949462891
    4. '```' → logprob: -7.924716949462891
    5. '           ' → logprob: -8.54971694946289
    6. '   ' → logprob: -10.42471694946289
    7. ' for' → logprob: -11.79971694946289
    8. 'while' → logprob: -11.92471694946289
    9. '``' → logprob: -13.17471694946289
    10. '               ' → logprob: -14.29971694946289

Token 2667: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -6.511406809295295e-06
    2. ' collections' → logprob: -12.000006675720215
    3. 'collection' → logprob: -15.250006675720215
    4. '_col' → logprob: -18.0000057220459
    5. '_collection' → logprob: -18.1250057220459
    6. '_' → logprob: -18.5000057220459
    7. '
' → logprob: -19.3750057220459
    8. 'sys' → logprob: -19.8750057220459
    9. '```' → logprob: -19.8750057220459
    10. '.collections' → logprob: -20.2500057220459

Token 2668: ' import' (ID: 1588)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.0712977647781372
    2. '```' → logprob: -1.0712977647781372
    3. 'import' → logprob: -1.5712977647781372
    4. 'collections' → logprob: -2.6962976455688477
    5. '[' → logprob: -4.696297645568848
    6. '``' → logprob: -5.196297645568848
    7. '`' → logprob: -5.321297645568848
    8. '.collections' → logprob: -5.696297645568848
    9. 'from' → logprob: -6.196297645568848
    10. ''import' → logprob: -7.071297645568848

Token 2669: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: 0.0
    2. ' deque' → logprob: -17.125
    3. 'collections' → logprob: -19.25
    4. 'de' → logprob: -19.5
    5. 'queue' → logprob: -20.375
    6. 'deb' → logprob: -22.0
    7. '```' → logprob: -23.0
    8. 'deck' → logprob: -23.875
    9. '
' → logprob: -24.75
    10. 'import' → logprob: -25.0

Token 2670: '
' (ID: 198)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.09033718705177307
    2. '
' → logprob: -2.8403372764587402
    3. '       ' → logprob: -3.5903372764587402
    4. '```' → logprob: -8.965336799621582
    5. '(queue' → logprob: -9.215336799621582
    6. ' queue' → logprob: -9.340336799621582
    7. 'deque' → logprob: -10.965336799621582
    8. '   ' → logprob: -11.090336799621582
    9. '``' → logprob: -11.465336799621582
    10. 'que' → logprob: -12.090336799621582

Token 2671: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.009643223136663437
    2. '       ' → logprob: -4.759643077850342
    3. '```' → logprob: -7.009643077850342
    4. '
' → logprob: -9.6346435546875
    5. '``' → logprob: -10.6346435546875
    6. 'deque' → logprob: -11.1346435546875
    7. '(queue' → logprob: -11.7596435546875
    8. ' queue' → logprob: -12.0096435546875
    9. '   ' → logprob: -12.5096435546875
    10. '`' → logprob: -13.2596435546875

Token 2672: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.03824608400464058
    2. 'visited' (adapté à ' visited') → logprob: -3.2882461547851562
    3. '       ' → logprob: -8.538246154785156
    4. '   ' → logprob: -12.288246154785156
    5. '
' → logprob: -12.538246154785156
    6. ' queue' → logprob: -15.663246154785156
    7. '```' → logprob: -15.663246154785156
    8. '#' → logprob: -16.288246154785156
    9. 'deque' → logprob: -16.663246154785156
    10. '           ' → logprob: -17.038246154785156

Token 2673: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6408051252365112
    2. '=' → logprob: -0.7658051252365112
    3. '[' → logprob: -5.265805244445801
    4. '=[' → logprob: -6.390805244445801
    5. '   ' → logprob: -7.265805244445801
    6. '```' → logprob: -8.7658052444458
    7. '[
' → logprob: -9.3908052444458
    8. '[len' → logprob: -9.7658052444458
    9. '=[
' → logprob: -9.7658052444458
    10. '=[]' → logprob: -9.8908052444458

Token 2674: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5213274309644476e-05
    2. ' [' → logprob: -11.500015258789062
    3. '[array' → logprob: -13.875015258789062
    4. '[len' → logprob: -14.250015258789062
    5. '[size' → logprob: -14.625015258789062
    6. '[obj' → logprob: -14.875015258789062
    7. '[int' → logprob: -15.125015258789062
    8. '[list' → logprob: -15.125015258789062
    9. '[max' → logprob: -15.375015258789062
    10. '[val' → logprob: -15.875015258789062

Token 2675: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.7729658540920354e-05
    2. '[' → logprob: -10.500027656555176
    3. '(set' → logprob: -16.375028610229492
    4. ' set' → logprob: -17.375028610229492
    5. '{' → logprob: -18.000028610229492
    6. ' [' → logprob: -18.250028610229492
    7. '
' → logprob: -20.000028610229492
    8. '=set' → logprob: -20.250028610229492
    9. '#set' → logprob: -20.750028610229492
    10. '   ' → logprob: -20.875028610229492

Token 2676: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025955152232199907
    2. '()]' → logprob: -6.6275954246521
    3. '()
' → logprob: -7.7525954246521
    4. 'for' → logprob: -7.8775954246521
    5. '()[' → logprob: -8.627595901489258
    6. '[]' → logprob: -9.002595901489258
    7. '[(' → logprob: -10.377595901489258
    8. '[' → logprob: -10.627595901489258
    9. '[len' → logprob: -10.627595901489258
    10. '()][' → logprob: -10.877595901489258

Token 2677: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08940766006708145
    2. 'for' → logprob: -3.2144076824188232
    3. '(len' → logprob: -3.5894076824188232
    4. '[len' → logprob: -4.714407444000244
    5. '()
' → logprob: -5.089407444000244
    6. ' for' → logprob: -7.089407444000244
    7. '       ' → logprob: -7.589407444000244
    8. '(' → logprob: -7.964407444000244
    9. '[' → logprob: -8.339407920837402
    10. '()]' → logprob: -8.464407920837402

Token 2678: ' _' (ID: 1175)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01696701906621456
    2. '_' → logprob: -4.891966819763184
    3. 'range' → logprob: -5.641966819763184
    4. ' len' → logprob: -5.766966819763184
    5. 'i' → logprob: -7.016966819763184
    6. '(len' → logprob: -7.141966819763184
    7. '0' → logprob: -7.516966819763184
    8. '_len' → logprob: -8.391966819763184
    9. ' range' → logprob: -9.266966819763184
    10. ' _' → logprob: -10.766966819763184

Token 2679: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.041835036128759384
    2. 'range' → logprob: -4.166834831237793
    3. '_range' → logprob: -4.791834831237793
    4. ' in' → logprob: -5.041834831237793
    5. ' range' → logprob: -5.416834831237793
    6. '_pos' → logprob: -5.791834831237793
    7. 'in' → logprob: -7.041834831237793
    8. 'i' → logprob: -7.791834831237793
    9. '0' → logprob: -7.791834831237793
    10. 'pos' → logprob: -8.166834831237793

Token 2680: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038043100386857986
    2. ' range' → logprob: -3.2880430221557617
    3. '(range' → logprob: -13.788043022155762
    4. '_' → logprob: -14.913043022155762
    5. '_range' → logprob: -15.913043022155762
    6. '
' → logprob: -16.788043975830078
    7. '0' → logprob: -18.538043975830078
    8. '	range' → logprob: -19.288043975830078
    9. ' _' → logprob: -21.788043975830078
    10. '   ' → logprob: -21.788043975830078

Token 2681: '(len' (ID: 14990)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2553243935108185
    2. 'len' → logprob: -1.505324363708496
    3. '(len' → logprob: -5.755324363708496
    4. ' range' → logprob: -8.880324363708496
    5. '(range' → logprob: -9.880324363708496
    6. '[len' → logprob: -11.380324363708496
    7. '   ' → logprob: -11.880324363708496
    8. '0' → logprob: -12.380324363708496
    9. '
' → logprob: -12.380324363708496
    10. ' len' → logprob: -13.005324363708496

Token 2682: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.029766341671347618
    2. 'text' → logprob: -3.529766321182251
    3. ' text' → logprob: -11.779766082763672
    4. '{text' → logprob: -11.904766082763672
    5. '[text' → logprob: -15.404766082763672
    6. '(' → logprob: -15.529766082763672
    7. '"text' → logprob: -15.779766082763672
    8. '$text' → logprob: -16.029766082763672
    9. ' (' → logprob: -16.154766082763672
    10. ',text' → logprob: -16.279766082763672

Token 2683: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00042292833677493036
    2. ')+' → logprob: -8.000422477722168
    3. ' +' → logprob: -9.875422477722168
    4. ')' → logprob: -10.875422477722168
    5. ')]' → logprob: -11.250422477722168
    6. '+)' → logprob: -13.750422477722168
    7. ')][' → logprob: -13.875422477722168
    8. '+
' → logprob: -14.000422477722168
    9. '()+' → logprob: -14.000422477722168
    10. ']+' → logprob: -16.000423431396484

Token 2684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.500000953674316
    3. '
' → logprob: -14.750000953674316
    4. '=' → logprob: -16.625001907348633
    5. '+' → logprob: -16.625001907348633
    6. '0' → logprob: -17.000001907348633
    7. ' ' → logprob: -17.500001907348633
    8. '2' → logprob: -17.500001907348633
    9. '`' → logprob: -17.625001907348633
    10. '   ' → logprob: -17.875001907348633

Token 2685: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.17217180132865906
    2. ')]
' → logprob: -1.9221718311309814
    3. ']' → logprob: -4.797171592712402
    4. ')]' → logprob: -6.297171592712402
    5. '       ' → logprob: -7.047171592712402
    6. '()]
' → logprob: -7.297171592712402
    7. ']
' → logprob: -8.547171592712402
    8. ')]
' → logprob: -11.172171592712402
    9. ']()
' → logprob: -11.672171592712402
    10. '}]
' → logprob: -12.297171592712402

Token 2686: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.23748770356178284
    2. '       ' → logprob: -1.7374876737594604
    3. '```' → logprob: -3.36248779296875
    4. '``' → logprob: -8.11248779296875
    5. '   ' → logprob: -8.61248779296875
    6. ' queue' → logprob: -9.23748779296875
    7. 'deque' → logprob: -9.36248779296875
    8. '	queue' → logprob: -9.98748779296875
    9. '(queue' → logprob: -10.11248779296875
    10. '
' → logprob: -11.48748779296875

Token 2687: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -1.5570885807392187e-05
    2. '```' → logprob: -11.750015258789062
    3. '       ' → logprob: -12.000015258789062
    4. 'deque' → logprob: -13.750015258789062
    5. ' queue' → logprob: -15.250015258789062
    6. '   ' → logprob: -16.375015258789062
    7. '(queue' → logprob: -16.750015258789062
    8. '	queue' → logprob: -18.375015258789062
    9. '``' → logprob: -18.500015258789062
    10. '
' → logprob: -18.625015258789062

Token 2688: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017650244990363717
    2. '.' → logprob: -6.376765251159668
    3. '```' → logprob: -11.126765251159668
    4. '.extend' → logprob: -11.376765251159668
    5. '.
' → logprob: -11.626765251159668
    6. '=' → logprob: -11.751765251159668
    7. '.enqueue' → logprob: -12.376765251159668
    8. '   ' → logprob: -12.876765251159668
    9. ' =' → logprob: -13.001765251159668
    10. '.=' → logprob: -13.501765251159668

Token 2689: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -6.704273118884885e-07
    2. ' deque' → logprob: -14.625000953674316
    3. '```' → logprob: -16.375
    4. 'Deque' → logprob: -17.875
    5. 'de' → logprob: -19.0
    6. 'collections' → logprob: -19.125
    7. '   ' → logprob: -20.0
    8. '       ' → logprob: -21.375
    9. '``' → logprob: -21.75
    10. '
' → logprob: -22.875

Token 2690: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.636725902557373
    2. '()' → logprob: -1.636725902557373
    3. '((' → logprob: -1.886725902557373
    4. '(
' → logprob: -2.511725902557373
    5. '()
' → logprob: -3.386725902557373
    6. '([(' → logprob: -5.261725902557373
    7. '[(' → logprob: -6.261725902557373
    8. '([
' → logprob: -7.386725902557373
    9. '   ' → logprob: -7.386725902557373
    10. '```' → logprob: -7.636725902557373

Token 2691: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7355791926383972
    2. '```' → logprob: -1.235579252243042
    3. 'visited' → logprob: -2.360579252243042
    4. '(' → logprob: -2.610579252243042
    5. 'queue' → logprob: -3.360579252243042
    6. '(queue' → logprob: -3.735579252243042
    7. '``' → logprob: -6.735579013824463
    8. '`' → logprob: -6.735579013824463
    9. '[' → logprob: -7.610579013824463
    10. '0' → logprob: -8.860579490661621

Token 2692: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.3296484351158142
    2. 'queue' → logprob: -1.329648494720459
    3. '       ' → logprob: -4.329648494720459
    4. '(' → logprob: -6.204648494720459
    5. '(queue' → logprob: -7.079648494720459
    6. '```' → logprob: -8.8296480178833
    7. '   ' → logprob: -10.2046480178833
    8. '
' → logprob: -11.7046480178833
    9. '0' → logprob: -12.2046480178833
    10. '``' → logprob: -12.3296480178833

Token 2693: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -15.500000953674316
    3. '```' → logprob: -15.625000953674316
    4. '=' → logprob: -15.875000953674316
    5. '[
' → logprob: -16.25
    6. '   ' → logprob: -16.875
    7. '0' → logprob: -17.5
    8. ' =' → logprob: -18.0
    9. '\[' → logprob: -18.5
    10. '       ' → logprob: -18.625

Token 2694: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1888679839321412e-05
    2. '[' → logprob: -10.750021934509277
    3. '
' → logprob: -15.000021934509277
    4. '[len' → logprob: -18.25002098083496
    5. '{' → logprob: -18.75002098083496
    6. '(' → logprob: -19.50002098083496
    7. '[
' → logprob: -19.50002098083496
    8. ' ' → logprob: -19.75002098083496
    9. '```' → logprob: -20.50002098083496
    10. ')' → logprob: -21.12502098083496

Token 2695: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05777949467301369
    2. '.' → logprob: -3.182779550552368
    3. '.add' → logprob: -4.932779312133789
    4. ').' → logprob: -5.307779312133789
    5. '[' → logprob: -6.057779312133789
    6. '   ' → logprob: -9.932779312133789
    7. '       ' → logprob: -10.557779312133789
    8. ']' → logprob: -10.682779312133789
    9. '.append' → logprob: -10.682779312133789
    10. '}.' → logprob: -11.182779312133789

Token 2696: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. '.add' → logprob: -16.25
    3. ' add' → logprob: -18.75
    4. '_add' → logprob: -19.5
    5. '
' → logprob: -19.75
    6. 'adde' → logprob: -20.375
    7. 'append' → logprob: -20.75
    8. '```' → logprob: -21.25
    9. '	add' → logprob: -21.5
    10. 'insert' → logprob: -21.75

Token 2697: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004084693267941475
    2. '0' → logprob: -5.504084587097168
    3. '(
' → logprob: -12.004084587097168
    4. ' (' → logprob: -16.004085540771484
    5. '((' → logprob: -18.879085540771484
    6. ' ' → logprob: -20.004085540771484
    7. '```' → logprob: -21.254085540771484
    8. '(

' → logprob: -21.754085540771484
    9. '
' → logprob: -22.004085540771484
    10. '000' → logprob: -22.004085540771484

Token 2698: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -21.0
    3. '۰' → logprob: -23.5
    4. '000' → logprob: -23.625
    5. '(' → logprob: -24.25
    6. '   ' → logprob: -25.0
    7. '00' → logprob: -25.375
    8. ')' → logprob: -25.5
    9. '
' → logprob: -25.75
    10. '```' → logprob: -26.0

Token 2699: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03105226159095764
    2. ')' → logprob: -3.531052350997925
    3. '       ' → logprob: -6.656052112579346
    4. ')
' → logprob: -11.531052589416504
    5. '   ' → logprob: -13.281052589416504
    6. ')`
' → logprob: -13.656052589416504
    7. '```' → logprob: -15.156052589416504
    8. '),' → logprob: -15.281052589416504
    9. ',' → logprob: -15.656052589416504
    10. '))
' → logprob: -15.781052589416504

Token 2700: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.00176062504760921
    2. '       ' → logprob: -6.876760482788086
    3. '	queue' → logprob: -8.126760482788086
    4. '```' → logprob: -8.251760482788086
    5. ' queue' → logprob: -10.001760482788086
    6. '(queue' → logprob: -10.126760482788086
    7. '   ' → logprob: -10.251760482788086
    8. '.queue' → logprob: -10.626760482788086
    9. '\t' → logprob: -11.126760482788086
    10. '``' → logprob: -11.876760482788086

Token 2701: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -1.2352385965641588e-05
    2. '```' → logprob: -11.500012397766113
    3. ' queue' → logprob: -14.125012397766113
    4. '       ' → logprob: -14.250012397766113
    5. '(queue' → logprob: -14.250012397766113
    6. '``' → logprob: -16.375011444091797
    7. '   ' → logprob: -17.250011444091797
    8. '	queue' → logprob: -17.500011444091797
    9. '.queue' → logprob: -18.625011444091797
    10. '`' → logprob: -19.000011444091797

Token 2702: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03524775803089142
    2. '.p' → logprob: -3.535247802734375
    3. '.' → logprob: -5.285247802734375
    4. '.extend' → logprob: -8.410247802734375
    5. 'append' → logprob: -9.160247802734375
    6. '   ' → logprob: -10.785247802734375
    7. '.app' → logprob: -11.035247802734375
    8. '```' → logprob: -11.035247802734375
    9. '_append' → logprob: -11.535247802734375
    10. '.
' → logprob: -12.160247802734375

Token 2703: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003218587953597307
    2. '((' → logprob: -5.753218650817871
    3. '(
' → logprob: -10.378218650817871
    4. '   ' → logprob: -12.003218650817871
    5. ' (' → logprob: -12.753218650817871
    6. '
' → logprob: -14.628218650817871
    7. '```' → logprob: -15.378218650817871
    8. '       ' → logprob: -16.503217697143555
    9. ' ' → logprob: -17.628217697143555
    10. '0' → logprob: -18.003217697143555

Token 2704: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. ' ' → logprob: -16.75
    4. '   ' → logprob: -17.875
    5. '
' → logprob: -19.875
    6. '       ' → logprob: -21.375
    7. ')' → logprob: -22.5
    8. '۰' → logprob: -22.625
    9. '           ' → logprob: -22.75
    10. '     ' → logprob: -23.125

Token 2705: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002314303710591048
    2. ',
' → logprob: -8.500231742858887
    3. ' ,' → logprob: -11.375231742858887
    4. '   ' → logprob: -11.625231742858887
    5. ')' → logprob: -13.625231742858887
    6. ',)' → logprob: -13.625231742858887
    7. '       ' → logprob: -13.875231742858887
    8. ',",' → logprob: -14.125231742858887
    9. ',),
' → logprob: -15.000231742858887
    10. ',,' → logprob: -15.125231742858887

Token 2706: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '
' → logprob: -18.25
    4. '```' → logprob: -20.625
    5. '   ' → logprob: -20.75
    6. ')' → logprob: -21.0
    7. '(' → logprob: -21.5
    8. '
' → logprob: -22.375
    9. ',' → logprob: -22.625
    10. '  ' → logprob: -22.625

Token 2707: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1734672337770462
    2. ')' → logprob: -1.9234672784805298
    3. '))
' → logprob: -4.42346715927124
    4. ')
' → logprob: -7.29846715927124
    5. '       ' → logprob: -7.92346715927124
    6. '   ' → logprob: -9.423467636108398
    7. ',' → logprob: -11.298467636108398
    8. ')))' → logprob: -11.548467636108398
    9. '),' → logprob: -11.673467636108398
    10. '           ' → logprob: -12.673467636108398

Token 2708: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044076829217374325
    2. '   ' → logprob: -5.87940788269043
    3. '
' → logprob: -7.00440788269043
    4. '```' → logprob: -8.25440788269043
    5. '           ' → logprob: -8.87940788269043
    6. '        
' → logprob: -9.50440788269043
    7. 'while' → logprob: -9.75440788269043
    8. '	while' → logprob: -10.12940788269043
    9. '    
' → logprob: -10.25440788269043
    10. ' while' → logprob: -10.50440788269043

Token 2709: ' result' (ID: 1534)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05504364147782326
    2. '       ' → logprob: -3.0550436973571777
    3. '```' → logprob: -5.055043697357178
    4. '   ' → logprob: -10.80504322052002
    5. '``' → logprob: -11.43004322052002
    6. 'While' → logprob: -11.55504322052002
    7. '
' → logprob: -11.80504322052002
    8. ' while' → logprob: -11.93004322052002
    9. '	while' → logprob: -12.68004322052002
    10. '           ' → logprob: -15.05504322052002

Token 2710: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.026544230058789253
    2. '_' → logprob: -3.6515443325042725
    3. '```' → logprob: -9.151544570922852
    4. '=' → logprob: -9.901544570922852
    5. 'Positions' → logprob: -10.651544570922852
    6. '_results' → logprob: -11.026544570922852
    7. '_
' → logprob: -12.151544570922852
    8. '_pos' → logprob: -12.276544570922852
    9. '_scores' → logprob: -12.401544570922852
    10. ' =' → logprob: -12.526544570922852

Token 2711: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761198401451111
    2. ' =' → logprob: -0.8261198401451111
    3. '=set' → logprob: -8.826119422912598
    4. '.add' → logprob: -11.201119422912598
    5. '.' → logprob: -11.826119422912598
    6. ')' → logprob: -12.826119422912598
    7. '=
' → logprob: -13.326119422912598
    8. '.=' → logprob: -13.326119422912598
    9. ' =
' → logprob: -13.576119422912598
    10. '   ' → logprob: -13.701119422912598

Token 2712: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.0280383548888494e-06
    2. ' set' → logprob: -14.000000953674316
    3. '{' → logprob: -16.750001907348633
    4. '=set' → logprob: -17.625001907348633
    5. '(set' → logprob: -18.000001907348633
    6. ')set' → logprob: -18.625001907348633
    7. '{}' → logprob: -18.750001907348633
    8. '	set' → logprob: -20.500001907348633
    9. '   ' → logprob: -21.000001907348633
    10. '```' → logprob: -22.000001907348633

Token 2713: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04001915082335472
    2. '
' → logprob: -3.4150190353393555
    3. '   ' → logprob: -6.0400190353393555
    4. '```' → logprob: -6.1650190353393555
    5. 'while' → logprob: -6.4150190353393555
    6. '``' → logprob: -9.540019035339355
    7. '        
' → logprob: -10.165019035339355
    8. ' while' → logprob: -10.165019035339355
    9. '    
' → logprob: -10.415019035339355
    10. '           ' → logprob: -10.665019035339355

Token 2714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001655898173339665
    2. '```' → logprob: -6.8766560554504395
    3. 'while' → logprob: -7.7516560554504395
    4. '           ' → logprob: -9.126655578613281
    5. '   ' → logprob: -10.001655578613281
    6. '
' → logprob: -10.876655578613281
    7. ' while' → logprob: -11.751655578613281
    8. '``' → logprob: -11.876655578613281
    9. 'While' → logprob: -13.126655578613281
    10. '               ' → logprob: -14.001655578613281

Token 2715: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.388399213552475
    2. 'while' (adapté à ' while') → logprob: -1.1383992433547974
    3. '```' → logprob: -7.138399124145508
    4. '   ' → logprob: -7.388399124145508
    5. ' while' → logprob: -9.388399124145508
    6. '
' → logprob: -11.513399124145508
    7. '	while' → logprob: -12.013399124145508
    8. '``' → logprob: -12.013399124145508
    9. 'While' → logprob: -12.263399124145508
    10. '           ' → logprob: -12.513399124145508

Token 2716: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0002613358374219388
    2. ' queue' → logprob: -8.250261306762695
    3. '       ' → logprob: -17.000261306762695
    4. '   ' → logprob: -17.500261306762695
    5. '(queue' → logprob: -17.625261306762695
    6. 'len' → logprob: -18.500261306762695
    7. 'True' → logprob: -18.750261306762695
    8. '	queue' → logprob: -20.500261306762695
    9. ' ' → logprob: -21.875261306762695
    10. ' True' → logprob: -22.000261306762695

Token 2717: ':
' (ID: 734)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.21827882528305054
    2. ':
' → logprob: -1.8432788848876953
    3. '.append' → logprob: -3.7182788848876953
    4. ':' → logprob: -5.343278884887695
    5. '.pop' → logprob: -5.843278884887695
    6. '   ' → logprob: -6.343278884887695
    7. '```' → logprob: -6.343278884887695
    8. '           ' → logprob: -6.843278884887695
    9. '.' → logprob: -8.093278884887695
    10. '       ' → logprob: -8.343278884887695

Token 2718: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10315325111150742
    2. 'pos' → logprob: -2.3531532287597656
    3. '   ' → logprob: -6.603153228759766
    4. '(pos' → logprob: -7.353153228759766
    5. ' pos' → logprob: -7.353153228759766
    6. '       ' → logprob: -9.228153228759766
    7. '```' → logprob: -9.853153228759766
    8. '`' → logprob: -9.978153228759766
    9. '               ' → logprob: -10.853153228759766
    10. '(' → logprob: -11.103153228759766

Token 2719: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -3.79811754100956e-05
    2. '(pos' → logprob: -10.375038146972656
    3. ' pos' → logprob: -12.000038146972656
    4. '(' → logprob: -15.875038146972656
    5. '   ' → logprob: -16.125038146972656
    6. '       ' → logprob: -16.625038146972656
    7. '           ' → logprob: -16.875038146972656
    8. 'p' → logprob: -17.375038146972656
    9. '
' → logprob: -17.750038146972656
    10. '```' → logprob: -17.875038146972656

Token 2720: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048179292934946716
    2. '           ' → logprob: -7.875481605529785
    3. ' ,' → logprob: -10.125481605529785
    4. ',
' → logprob: -10.250481605529785
    5. ',pos' → logprob: -11.750481605529785
    6. ',next' → logprob: -11.875481605529785
    7. ',p' → logprob: -12.875481605529785
    8. ',v' → logprob: -13.750481605529785
    9. ',<' → logprob: -14.000481605529785
    10. ',int' → logprob: -14.125481605529785

Token 2721: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -2.339278580620885e-06
    2. ' mask' → logprob: -13.000001907348633
    3. '
' → logprob: -18.875001907348633
    4. '_mask' → logprob: -21.125001907348633
    5. '   ' → logprob: -21.375001907348633
    6. '	mask' → logprob: -21.625001907348633
    7. 'm' → logprob: -23.125001907348633
    8. '(mask' → logprob: -23.875001907348633
    9. '
' → logprob: -25.000001907348633
    10. ' ' → logprob: -25.000001907348633

Token 2722: ' =' (ID: 314)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.030963659286499
    2. '           ' → logprob: -1.155963659286499
    3. ' =' → logprob: -1.780963659286499
    4. '=' → logprob: -2.030963659286499
    5. '            ' → logprob: -4.405963897705078
    6. ',' → logprob: -5.530963897705078
    7. '```' → logprob: -5.780963897705078
    8. ')' → logprob: -5.905963897705078
    9. ':
' → logprob: -6.530963897705078
    10. ':' → logprob: -7.280963897705078

Token 2723: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.00020354038861114532
    2. ' queue' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.87520408630371
    4. '(queue' → logprob: -18.37520408630371
    5. '.queue' → logprob: -18.87520408630371
    6. '       ' → logprob: -18.87520408630371
    7. 'que' → logprob: -19.25020408630371
    8. '	queue' → logprob: -19.25020408630371
    9. 'deque' → logprob: -19.75020408630371
    10. 'q' → logprob: -20.62520408630371

Token 2724: '.p' (ID: 1201)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.504211962223053
    2. '           ' → logprob: -2.254211902618408
    3. '               ' → logprob: -2.754211902618408
    4. '.append' → logprob: -2.879211902618408
    5. ':' → logprob: -3.004211902618408
    6. '=' → logprob: -3.254211902618408
    7. ')' → logprob: -3.629211902618408
    8. '):
' → logprob: -3.754211902618408
    9. ' =' → logprob: -5.129211902618408
    10. ',' → logprob: -5.129211902618408

Token 2725: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -4.127333340875339e-06
    2. 'op' → logprob: -12.875003814697266
    3. 'opl' → logprob: -13.750003814697266
    4. 'ople' → logprob: -14.625003814697266
    5. 'append' → logprob: -18.125003814697266
    6. 'p' → logprob: -18.875003814697266
    7. 'oplevel' → logprob: -19.375003814697266
    8. 'opped' → logprob: -19.625003814697266
    9. '```' → logprob: -20.125003814697266
    10. 'left' → logprob: -21.000003814697266

Token 2726: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018478957936167717
    2. '               ' → logprob: -4.018478870391846
    3. ':
' → logprob: -8.893479347229004
    4. ':' → logprob: -9.768479347229004
    5. '            
' → logprob: -10.018479347229004
    6. '
' → logprob: -10.393479347229004
    7. '       ' → logprob: -11.393479347229004
    8. '            ' → logprob: -11.643479347229004
    9. 'if' → logprob: -12.018479347229004
    10. '   ' → logprob: -12.143479347229004

Token 2727: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007044489029794931
    2. '               ' → logprob: -8.375704765319824
    3. '```' → logprob: -8.875704765319824
    4. '       ' → logprob: -9.125704765319824
    5. '   ' → logprob: -9.500704765319824
    6. '
' → logprob: -9.500704765319824
    7. '            
' → logprob: -10.250704765319824
    8. ' ' → logprob: -11.750704765319824
    9. '​' → logprob: -11.875704765319824
    10. '    
' → logprob: -12.375704765319824

Token 2728: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005916827358305454
    2. 'if' (adapté à ' if') → logprob: -5.755916595458984
    3. '               ' → logprob: -6.130916595458984
    4. ' if' → logprob: -8.130916595458984
    5. '   ' → logprob: -9.130916595458984
    6. 'for' → logprob: -10.005916595458984
    7. '```' → logprob: -10.130916595458984
    8. '       ' → logprob: -10.505916595458984
    9. '
' → logprob: -10.630916595458984
    10. ' for' → logprob: -12.130916595458984

Token 2729: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.03804333135485649
    2. ' mask' → logprob: -3.288043260574341
    3. '(mask' → logprob: -13.663043022155762
    4. '
' → logprob: -15.413043022155762
    5. '	mask' → logprob: -15.663043022155762
    6. '   ' → logprob: -15.913043022155762
    7. 'pos' → logprob: -16.163043975830078
    8. 'm' → logprob: -16.663043975830078
    9. '_mask' → logprob: -17.038043975830078
    10. ' ' → logprob: -17.788043975830078

Token 2730: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008652507327497005
    2. ' ==' → logprob: -4.758652687072754
    3. '==
' → logprob: -10.383652687072754
    4. '!=' → logprob: -12.258652687072754
    5. '```' → logprob: -13.883652687072754
    6. '=' → logprob: -14.758652687072754
    7. '           ' → logprob: -15.133652687072754
    8. ')==' → logprob: -15.633652687072754
    9. ']==' → logprob: -15.883652687072754
    10. '==(' → logprob: -15.883652687072754

Token 2731: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.00033546582562848926
    2. ' full' → logprob: -8.000335693359375
    3. '(full' → logprob: -18.625335693359375
    4. 'ful' → logprob: -19.375335693359375
    5. 'Full' → logprob: -20.375335693359375
    6. '
' → logprob: -20.875335693359375
    7. '_full' → logprob: -21.625335693359375
    8. '	full' → logprob: -21.875335693359375
    9. '   ' → logprob: -22.750335693359375
    10. 'f' → logprob: -23.500335693359375

Token 2732: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -3.8889261304575484e-06
    2. ''_' → logprob: -13.000003814697266
    3. '"_' → logprob: -14.125003814697266
    4. '_MASK' → logprob: -14.375003814697266
    5. '_masks' → logprob: -16.250003814697266
    6. '```' → logprob: -16.375003814697266
    7. 'mask' → logprob: -16.500003814697266
    8. '`' → logprob: -18.125003814697266
    9. '``' → logprob: -18.250003814697266
    10. '_match' → logprob: -18.500003814697266

Token 2733: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5186067223548889
    2. '               ' → logprob: -1.0186066627502441
    3. ':' → logprob: -3.143606662750244
    4. ' and' → logprob: -8.018607139587402
    5. 'and' → logprob: -10.518607139587402
    6. '           ' → logprob: -11.143607139587402
    7. '):
' → logprob: -11.393607139587402
    8. '```' → logprob: -11.393607139587402
    9. '              ' → logprob: -11.643607139587402
    10. '                   ' → logprob: -11.768607139587402

Token 2734: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.76759916334413e-05
    2. '```' → logprob: -10.000077247619629
    3. ':
' → logprob: -10.625077247619629
    4. ':' → logprob: -13.250077247619629
    5. '           ' → logprob: -13.375077247619629
    6. '``' → logprob: -13.500077247619629
    7. '                   ' → logprob: -13.625077247619629
    8. '              ' → logprob: -14.875077247619629
    9. '​' → logprob: -14.875077247619629
    10. '{
' → logprob: -15.000077247619629

Token 2735: ' start' (ID: 1604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01118504349142313
    2. 'start' (adapté à ' start') → logprob: -4.511185169219971
    3. ' start' → logprob: -10.261184692382812
    4. '#' → logprob: -10.386184692382812
    5. 'if' → logprob: -10.761184692382812
    6. '                   ' → logprob: -10.761184692382812
    7. '```' → logprob: -11.761184692382812
    8. '
' → logprob: -12.261184692382812
    9. '           ' → logprob: -12.386184692382812
    10. '{
' → logprob: -12.886184692382812

Token 2736: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00016063073417171836
    2. '_positions' → logprob: -8.875160217285156
    3. '_' → logprob: -11.000160217285156
    4. '_position' → logprob: -13.875160217285156
    5. '_p' → logprob: -14.000160217285156
    6. ' _' → logprob: -14.250160217285156
    7. 'pos' → logprob: -15.125160217285156
    8. '```' → logprob: -15.375160217285156
    9. '_
' → logprob: -15.750160217285156
    10. '=_' → logprob: -15.750160217285156

Token 2737: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759549736976624
    2. '=' → logprob: -0.8259549736976624
    3. '               ' → logprob: -12.200955390930176
    4. '```' → logprob: -12.575955390930176
    5. '                   ' → logprob: -12.700955390930176
    6. '                ' → logprob: -13.075955390930176
    7. ')' → logprob: -13.825955390930176
    8. '=
' → logprob: -15.825955390930176
    9. '                    ' → logprob: -15.825955390930176
    10. 's' → logprob: -16.07595443725586

Token 2738: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.005234002135694027
    2. ' pos' → logprob: -5.2552337646484375
    3. '(pos' → logprob: -15.255233764648438
    4. '           ' → logprob: -20.130233764648438
    5. '[pos' → logprob: -20.755233764648438
    6. '_pos' → logprob: -21.880233764648438
    7. '               ' → logprob: -22.255233764648438
    8. '                   ' → logprob: -22.380233764648438
    9. '	pos' → logprob: -22.505233764648438
    10. '
' → logprob: -22.630233764648438

Token 2739: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5761139988899231
    2. ' -' → logprob: -0.8261139988899231
    3. '```' → logprob: -9.4511137008667
    4. '               ' → logprob: -10.4511137008667
    5. '           ' → logprob: -11.2011137008667
    6. '   ' → logprob: -11.7011137008667
    7. '                   ' → logprob: -11.7011137008667
    8. '-total' → logprob: -12.0761137008667
    9. '-
' → logprob: -12.2011137008667
    10. '                ' → logprob: -12.5761137008667

Token 2740: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -4.008129963040119e-06
    2. ' total' → logprob: -12.500003814697266
    3. '(total' → logprob: -15.500003814697266
    4. '$total' → logprob: -18.375003814697266
    5. '	total' → logprob: -21.375003814697266
    6. '```' → logprob: -21.625003814697266
    7. '.total' → logprob: -21.750003814697266
    8. '
' → logprob: -22.000003814697266
    9. '`' → logprob: -22.500003814697266
    10. ',total' → logprob: -22.625003814697266

Token 2741: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.8624639324116288e-06
    2. 'length' → logprob: -13.250001907348633
    3. '_l' → logprob: -17.500001907348633
    4. '_' → logprob: -18.125001907348633
    5. '_len' → logprob: -19.500001907348633
    6. '_lengths' → logprob: -19.500001907348633
    7. 'Length' → logprob: -20.000001907348633
    8. '_le' → logprob: -20.000001907348633
    9. '_total' → logprob: -20.000001907348633
    10. '```' → logprob: -20.625001907348633

Token 2742: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3721110224723816
    2. '```' → logprob: -1.2471110820770264
    3. '               ' → logprob: -4.497110843658447
    4. '``' → logprob: -5.497110843658447
    5. '+' → logprob: -5.997110843658447
    6. ':
' → logprob: -7.247110843658447
    7. '<|end|>' → logprob: -7.372110843658447
    8. '                   ' → logprob: -7.622110843658447
    9. ')' → logprob: -7.872110843658447
    10. ' 
' → logprob: -7.997110843658447

Token 2743: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.056084588170051575
    2. '```' → logprob: -3.556084632873535
    3. '
' → logprob: -4.056084632873535
    4. ':
' → logprob: -5.806084632873535
    5. '                   ' → logprob: -6.056084632873535
    6. '``' → logprob: -6.556084632873535
    7. '                
' → logprob: -8.181084632873535
    8. '                ' → logprob: -8.431084632873535
    9. '                               ' → logprob: -8.556084632873535
    10. '                       ' → logprob: -8.806084632873535

Token 2744: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5185683965682983
    2. 'if' (adapté à ' if') → logprob: -1.6435683965682983
    3. ' if' → logprob: -2.268568515777588
    4. '                   ' → logprob: -2.518568515777588
    5. '```' → logprob: -3.768568515777588
    6. ':
' → logprob: -6.768568515777588
    7. '``' → logprob: -6.768568515777588
    8. '                       ' → logprob: -7.393568515777588
    9. '           ' → logprob: -8.01856803894043
    10. '{
' → logprob: -8.39356803894043

Token 2745: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00594254769384861
    2. '0' → logprob: -5.255942344665527
    3. ' start' → logprob: -7.255942344665527
    4. '(start' → logprob: -14.005942344665527
    5. '
' → logprob: -14.130942344665527
    6. ' ' → logprob: -15.130942344665527
    7. '                   ' → logprob: -15.255942344665527
    8. '```' → logprob: -15.505942344665527
    9. '               ' → logprob: -15.630942344665527
    10. '   ' → logprob: -17.505943298339844

Token 2746: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0006355931982398033
    2. '>=' → logprob: -8.125635147094727
    3. 'pos' → logprob: -8.375635147094727
    4. ' >=' → logprob: -10.000635147094727
    5. '   ' → logprob: -11.375635147094727
    6. '_' → logprob: -11.500635147094727
    7. 'Pos' → logprob: -11.500635147094727
    8. ' ' → logprob: -12.125635147094727
    9. '>' → logprob: -12.250635147094727
    10. '```' → logprob: -12.375635147094727

Token 2747: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.008674022741615772
    2. ' >=' → logprob: -4.758674144744873
    3. '>' → logprob: -10.383673667907715
    4. '                   ' → logprob: -11.633673667907715
    5. '```' → logprob: -12.008673667907715
    6. ')>=' → logprob: -12.008673667907715
    7. ']>=' → logprob: -12.633673667907715
    8. '               ' → logprob: -13.633673667907715
    9. '                       ' → logprob: -14.508673667907715
    10. ')' → logprob: -14.633673667907715

Token 2748: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -19.0
    4. '
' → logprob: -20.375
    5. '   ' → logprob: -20.75
    6. '۰' → logprob: -21.0
    7. '``' → logprob: -22.5
    8. '`' → logprob: -22.875
    9. '=' → logprob: -23.5
    10. '                   ' → logprob: -23.625

Token 2749: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. '
' → logprob: -20.125
    4. '```' → logprob: -20.375
    5. '=' → logprob: -21.25
    6. '   ' → logprob: -22.125
    7. '۰' → logprob: -22.625
    8. '00' → logprob: -23.375
    9. '           ' → logprob: -24.125
    10. '                   ' → logprob: -24.125

Token 2750: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12878067791461945
    2. ':
' → logprob: -2.2537806034088135
    3. ':' → logprob: -4.253780841827393
    4. '                       ' → logprob: -6.878780841827393
    5. ' and' → logprob: -8.253780364990234
    6. '               ' → logprob: -8.753780364990234
    7. '                  ' → logprob: -10.003780364990234
    8. '```' → logprob: -10.378780364990234
    9. 'and' → logprob: -10.628780364990234
    10. '                           ' → logprob: -10.753780364990234

Token 2751: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002738185692578554
    2. ':
' → logprob: -6.377737998962402
    3. '```' → logprob: -7.127737998962402
    4. '                       ' → logprob: -9.002737998962402
    5. ':' → logprob: -10.127737998962402
    6. '               ' → logprob: -10.502737998962402
    7. '   ' → logprob: -11.002737998962402
    8. '``' → logprob: -11.502737998962402
    9. '{
' → logprob: -12.002737998962402
    10. '                  ' → logprob: -12.502737998962402

Token 2752: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0005985465249978006
    2. '                   ' → logprob: -7.500598430633545
    3. '```' → logprob: -10.500598907470703
    4. ' result' → logprob: -11.500598907470703
    5. '               ' → logprob: -13.000598907470703
    6. '``' → logprob: -13.125598907470703
    7. '                       ' → logprob: -13.625598907470703
    8. '   ' → logprob: -13.750598907470703
    9. '
' → logprob: -14.000598907470703
    10. '`' → logprob: -15.000598907470703

Token 2753: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.7120533811976202e-05
    2. 's' → logprob: -11.750017166137695
    3. '```' → logprob: -12.125017166137695
    4. '_' → logprob: -13.500017166137695
    5. '_.' → logprob: -14.375017166137695
    6. 'Positions' → logprob: -14.500017166137695
    7. '._' → logprob: -14.500017166137695
    8. '`' → logprob: -15.625017166137695
    9. '.' → logprob: -15.875017166137695
    10. ' _' → logprob: -16.000017166137695

Token 2754: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.026494083926081657
    2. '.' → logprob: -3.651494026184082
    3. '{}.' → logprob: -10.151494026184082
    4. '.setdefault' → logprob: -10.276494026184082
    5. '.update' → logprob: -10.651494026184082
    6. '                   ' → logprob: -10.776494026184082
    7. '                       ' → logprob: -11.026494026184082
    8. '.append' → logprob: -11.026494026184082
    9. '.insert' → logprob: -11.526494026184082
    10. '```' → logprob: -11.526494026184082

Token 2755: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.011101232841610909
    2. '(start' → logprob: -4.511101245880127
    3. ' start' → logprob: -9.886100769042969
    4. '(' → logprob: -13.011100769042969
    5. '(
' → logprob: -16.13610076904297
    6. ' (' → logprob: -17.01110076904297
    7. '	start' → logprob: -17.76110076904297
    8. '[start' → logprob: -18.26110076904297
    9. '_start' → logprob: -18.76110076904297
    10. 'pos' → logprob: -18.88610076904297

Token 2756: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.988221684878226e-06
    2. 'pos' → logprob: -12.125006675720215
    3. '_' → logprob: -14.125006675720215
    4. '_p' → logprob: -15.125006675720215
    5. '_)' → logprob: -15.375006675720215
    6. 'Pos' → logprob: -16.25000762939453
    7. ')' → logprob: -16.75000762939453
    8. '(pos' → logprob: -17.62500762939453
    9. '_positions' → logprob: -17.87500762939453
    10. '_po' → logprob: -17.87500762939453

Token 2757: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6706499457359314
    2. '               ' → logprob: -1.1706500053405762
    3. ')
' → logprob: -1.7956500053405762
    4. '           ' → logprob: -4.420650005340576
    5. '                   ' → logprob: -8.295649528503418
    6. ')
' → logprob: -9.045649528503418
    7. '       ' → logprob: -10.920649528503418
    8. '                       ' → logprob: -11.420649528503418
    9. '```' → logprob: -12.295649528503418
    10. ')`
' → logprob: -12.545649528503418

Token 2758: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009974113665521145
    2. '               ' → logprob: -4.759974002838135
    3. '
' → logprob: -7.009974002838135
    4. '                   ' → logprob: -7.759974002838135
    5. '       ' → logprob: -11.634974479675293
    6. '```' → logprob: -11.634974479675293
    7. '                       ' → logprob: -12.009974479675293
    8. '            
' → logprob: -12.759974479675293
    9. '   ' → logprob: -14.509974479675293
    10. '          ' → logprob: -15.009974479675293

Token 2759: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2796761989593506
    2. '               ' → logprob: -1.5296761989593506
    3. 'continue' → logprob: -3.7796761989593506
    4. '                   ' → logprob: -6.15467643737793
    5. 'for' → logprob: -7.02967643737793
    6. '
' → logprob: -7.02967643737793
    7. 'if' → logprob: -8.65467643737793
    8. 'while' → logprob: -8.65467643737793
    9. '```' → logprob: -8.65467643737793
    10. ' continue' → logprob: -9.52967643737793

Token 2760: ' do' (ID: 621)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3415742814540863
    2. 'continue' → logprob: -1.3415743112564087
    3. '               ' → logprob: -4.466574192047119
    4. 'for' → logprob: -4.716574192047119
    5. ' continue' → logprob: -5.341574192047119
    6. '
' → logprob: -6.091574192047119
    7. '   ' → logprob: -8.966574668884277
    8. '       ' → logprob: -9.466574668884277
    9. 'while' → logprob: -9.591574668884277
    10. ' for' → logprob: -9.841574668884277

Token 2761: ' not' (ID: 625)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3842906057834625
    2. 'ne' → logprob: -1.7592905759811401
    3. ' continue' → logprob: -2.2592906951904297
    4. '           ' → logprob: -4.38429069519043
    5. 'n't' → logprob: -4.63429069519043
    6. '       ' → logprob: -5.50929069519043
    7. 'n' → logprob: -5.50929069519043
    8. '                   ' → logprob: -5.75929069519043
    9. '               ' → logprob: -6.00929069519043
    10. '
' → logprob: -6.00929069519043

Token 2762: ' return' (ID: 622)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.25288617610931396
    2. ' continue' → logprob: -1.502886176109314
    3. '               ' → logprob: -7.7528862953186035
    4. '                   ' → logprob: -8.502885818481445
    5. '
' → logprob: -8.877885818481445
    6. '           ' → logprob: -9.252885818481445
    7. '   ' → logprob: -10.752885818481445
    8. '_continue' → logprob: -10.752885818481445
    9. '```' → logprob: -11.002885818481445
    10. '       ' → logprob: -11.877885818481445

Token 2763: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.864366888999939
    2. '           ' → logprob: -0.989366888999939
    3. '
' → logprob: -1.864366888999939
    4. ' continue' → logprob: -3.6143670082092285
    5. 'continue' → logprob: -4.4893670082092285
    6. '                   ' → logprob: -4.7393670082092285
    7. '            
' → logprob: -5.9893670082092285
    8. ' 
' → logprob: -7.4893670082092285
    9. '                
' → logprob: -7.8643670082092285
    10. '                       ' → logprob: -8.61436653137207

Token 2764: ' consider' (ID: 3331)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.33217623829841614
    2. 'continue' → logprob: -1.3321762084960938
    3. '               ' → logprob: -4.082176208496094
    4. '                   ' → logprob: -6.582176208496094
    5. '           ' → logprob: -7.957176208496094
    6. '
' → logprob: -9.707176208496094
    7. '                ' → logprob: -10.457176208496094
    8. ' 
' → logprob: -11.457176208496094
    9. '                       ' → logprob: -11.582176208496094
    10. '                
' → logprob: -12.582176208496094

Token 2765: ' overlapping' (ID: 90457)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1066988706588745
    2. 'continue' → logprob: -1.4816988706588745
    3. '           ' → logprob: -1.6066988706588745
    4. '               ' → logprob: -2.231698989868164
    5. 'over' → logprob: -3.231698989868164
    6. '                   ' → logprob: -3.481698989868164
    7. ' continuing' → logprob: -3.981698989868164
    8. 'continu' → logprob: -4.606698989868164
    9. 'possible' → logprob: -4.731698989868164
    10. ' continue' → logprob: -4.856698989868164

Token 2766: ' occurrences' (ID: 108073)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12711162865161896
    2. '
' → logprob: -2.1271116733551025
    3. 'for' → logprob: -8.877111434936523
    4. '            
' → logprob: -10.502111434936523
    5. '
' → logprob: -12.252111434936523
    6. '```' → logprob: -12.877111434936523
    7. '       ' → logprob: -13.002111434936523
    8. 'continue' → logprob: -13.002111434936523
    9. '               ' → logprob: -13.627111434936523
    10. ' for' → logprob: -13.877111434936523

Token 2767: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009794102981686592
    2. '
' → logprob: -4.634794235229492
    3. '            
' → logprob: -10.884794235229492
    4. '       ' → logprob: -11.884794235229492
    5. '```' → logprob: -11.884794235229492
    6. '               ' → logprob: -13.759794235229492
    7. 'for' → logprob: -14.009794235229492
    8. '    
' → logprob: -14.009794235229492
    9. '        
' → logprob: -14.259794235229492
    10. '   ' → logprob: -14.509794235229492

Token 2768: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2541598379611969
    2. '
' → logprob: -1.5041598081588745
    3. '       ' → logprob: -6.754159927368164
    4. '```' → logprob: -7.879159927368164
    5. '   ' → logprob: -8.379159927368164
    6. '               ' → logprob: -9.004159927368164
    7. '            
' → logprob: -9.504159927368164
    8. '\n' → logprob: -9.879159927368164
    9. '``' → logprob: -10.004159927368164
    10. '    
' → logprob: -10.129159927368164

Token 2769: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4920136332511902
    2. 'if' (adapté à ' if') → logprob: -0.9920136332511902
    3. 'for' → logprob: -4.242013454437256
    4. '
' → logprob: -5.867013454437256
    5. '```' → logprob: -8.367013931274414
    6. ' if' → logprob: -8.617013931274414
    7. '   ' → logprob: -9.242013931274414
    8. '       ' → logprob: -10.367013931274414
    9. '            
' → logprob: -11.492013931274414
    10. ' for' → logprob: -12.117013931274414

Token 2770: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0024758970830589533
    2. ' pos' → logprob: -6.002475738525391
    3. '           ' → logprob: -15.25247573852539
    4. 'not' → logprob: -18.25247573852539
    5. '_pos' → logprob: -19.75247573852539
    6. 'Pos' → logprob: -20.62747573852539
    7. '	pos' → logprob: -21.12747573852539
    8. '       ' → logprob: -21.62747573852539
    9. 'len' → logprob: -21.62747573852539
    10. '(pos' → logprob: -21.87747573852539

Token 2771: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2677905857563019
    2. ' <' → logprob: -2.0177905559539795
    3. '==' → logprob: -2.7677905559539795
    4. '<' → logprob: -3.3927905559539795
    5. ' !=' → logprob: -5.392790794372559
    6. '<len' → logprob: -7.517790794372559
    7. '!=' → logprob: -8.142790794372559
    8. '<int' → logprob: -9.892790794372559
    9. '   ' → logprob: -10.642790794372559
    10. ' >=' → logprob: -10.892790794372559

Token 2772: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0206720617134124e-05
    2. ' len' → logprob: -11.50001049041748
    3. '=len' → logprob: -17.000009536743164
    4. '	len' → logprob: -17.375009536743164
    5. '<len' → logprob: -17.625009536743164
    6. 'length' → logprob: -17.875009536743164
    7. '(len' → logprob: -18.125009536743164
    8. '[len' → logprob: -18.625009536743164
    9. ',len' → logprob: -19.375009536743164
    10. 'leni' → logprob: -20.625009536743164

Token 2773: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -9.686778503237292e-05
    2. 'text' → logprob: -9.250097274780273
    3. '(' → logprob: -14.625097274780273
    4. ' text' → logprob: -16.125097274780273
    5. '{text' → logprob: -16.875097274780273
    6. '(
' → logprob: -18.625097274780273
    7. 'Text' → logprob: -19.125097274780273
    8. '
' → logprob: -19.125097274780273
    9. '	text' → logprob: -19.375097274780273
    10. '_text' → logprob: -19.500097274780273

Token 2774: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3274174928665161
    2. ':
' → logprob: -1.3274174928665161
    3. '               ' → logprob: -4.702417373657227
    4. '           ' → logprob: -6.077417373657227
    5. ':' → logprob: -6.827417373657227
    6. ')' → logprob: -7.202417373657227
    7. '):' → logprob: -7.327417373657227
    8. '       ' → logprob: -9.202417373657227
    9. ' or' → logprob: -10.702417373657227
    10. '   ' → logprob: -10.827417373657227

Token 2775: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002892258344218135
    2. '```' → logprob: -8.625288963317871
    3. 'continue' → logprob: -9.375288963317871
    4. ' continue' → logprob: -11.500288963317871
    5. '                   ' → logprob: -12.375288963317871
    6. '   ' → logprob: -12.750288963317871
    7. '``' → logprob: -13.125288963317871
    8. '           ' → logprob: -13.500288963317871
    9. '			' → logprob: -14.500288963317871
    10. '`' → logprob: -14.500288963317871

Token 2776: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5802971720695496
    2. '               ' → logprob: -0.8302971720695496
    3. ' continue' → logprob: -5.705296993255615
    4. '```' → logprob: -7.705296993255615
    5. '                   ' → logprob: -8.330297470092773
    6. '	continue' → logprob: -8.705297470092773
    7. '   ' → logprob: -9.580297470092773
    8. '			' → logprob: -10.455297470092773
    9. '``' → logprob: -10.455297470092773
    10. '_continue' → logprob: -11.080297470092773

Token 2777: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6947575211524963
    2. '           ' → logprob: -0.6947575211524963
    3. '       ' → logprob: -7.444757461547852
    4. '```' → logprob: -7.444757461547852
    5. '            
' → logprob: -8.444757461547852
    6. '               ' → logprob: -8.944757461547852
    7. '   ' → logprob: -10.194757461547852
    8. 'for' → logprob: -11.444757461547852
    9. '  
' → logprob: -11.819757461547852
    10. '    
' → logprob: -11.819757461547852

Token 2778: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020618028938770294
    2. '
' → logprob: -4.270617961883545
    3. '       ' → logprob: -5.145617961883545
    4. '   ' → logprob: -8.520618438720703
    5. '               ' → logprob: -9.020618438720703
    6. '```' → logprob: -9.145618438720703
    7. '            
' → logprob: -9.645618438720703
    8. 'for' → logprob: -9.645618438720703
    9. '        
' → logprob: -11.645618438720703
    10. ' for' → logprob: -11.645618438720703

Token 2779: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10029099881649017
    2. '           ' → logprob: -2.3502910137176514
    3. ' for' → logprob: -9.60029125213623
    4. '               ' → logprob: -11.85029125213623
    5. '```' → logprob: -11.97529125213623
    6. '       ' → logprob: -13.97529125213623
    7. 'j' → logprob: -13.97529125213623
    8. '   ' → logprob: -13.97529125213623
    9. '
' → logprob: -15.85029125213623
    10. '#' (adapté à ' #') → logprob: -15.97529125213623

Token 2780: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008722824975848198
    2. '           ' → logprob: -4.75872278213501
    3. ' for' → logprob: -10.008723258972168
    4. '               ' → logprob: -10.258723258972168
    5. 'j' → logprob: -11.383723258972168
    6. '#' → logprob: -11.883723258972168
    7. '```' → logprob: -12.633723258972168
    8. '   ' → logprob: -12.758723258972168
    9. 'length' → logprob: -12.758723258972168
    10. '``' → logprob: -15.758723258972168

Token 2781: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.647130012512207
    2. '               ' → logprob: -0.897130012512207
    3. ':
' → logprob: -2.897130012512207
    4. ' for' → logprob: -4.772130012512207
    5. '{
' → logprob: -6.647130012512207
    6. '           ' → logprob: -6.647130012512207
    7. ':' → logprob: -6.772130012512207
    8. '   ' → logprob: -7.772130012512207
    9. '{' → logprob: -8.522130012512207
    10. '```' → logprob: -8.647130012512207

Token 2782: ' extend' (ID: 20239)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010665126610547304
    2. ' for' → logprob: -6.8760666847229
    3. '```' → logprob: -11.626066207885742
    4. 'j' → logprob: -11.876066207885742
    5. '
' → logprob: -12.501066207885742
    6. '           ' → logprob: -12.751066207885742
    7. '_for' → logprob: -12.876066207885742
    8. 'range' → logprob: -13.501066207885742
    9. 'import' → logprob: -13.501066207885742
    10. '_j' → logprob: -14.126066207885742

Token 2783: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11467991769313812
    2. 'for' → logprob: -2.7396798133850098
    3. 'pos' → logprob: -3.7396798133850098
    4. '               ' → logprob: -4.36467981338501
    5. ' for' → logprob: -5.48967981338501
    6. '(pos' → logprob: -7.36467981338501
    7. '(' → logprob: -7.61467981338501
    8. ':
' → logprob: -7.73967981338501
    9. '(
' → logprob: -7.86467981338501
    10. ' (' → logprob: -7.86467981338501

Token 2784: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.9361264946837764e-07
    2. ' pos' → logprob: -16.0
    3. 'position' → logprob: -19.75
    4. '
' → logprob: -22.25
    5. '```' → logprob: -22.75
    6. '   ' → logprob: -23.125
    7. '	pos' → logprob: -23.25
    8. '           ' → logprob: -23.625
    9. '_pos' → logprob: -23.625
    10. '(pos' → logprob: -24.625

Token 2785: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0059871007688343525
    2. 'for' → logprob: -5.130987167358398
    3. '```' → logprob: -10.630987167358398
    4. ' for' → logprob: -11.380987167358398
    5. '
' → logprob: -11.505987167358398
    6. '               ' → logprob: -11.880987167358398
    7. '            
' → logprob: -13.130987167358398
    8. 'j' → logprob: -13.130987167358398
    9. '   ' → logprob: -14.505987167358398
    10. '       ' → logprob: -15.130987167358398

Token 2786: ' any' (ID: 1062)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9259687662124634
    2. 'all' → logprob: -1.5509687662124634
    3. 'each' → logprob: -1.6759687662124634
    4. 'element' → logprob: -2.550968647003174
    5. 'for' → logprob: -2.550968647003174
    6. ' all' → logprob: -4.425968647003174
    7. ' j' → logprob: -4.800968647003174
    8. 'matches' → logprob: -4.925968647003174
    9. 'the' → logprob: -5.300968647003174
    10. 'next' → logprob: -5.550968647003174

Token 2787: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.10628817975521088
    2. 'j' → logprob: -2.981288194656372
    3. 'unused' → logprob: -3.606288194656372
    4. ' element' → logprob: -4.356287956237793
    5. 'un' → logprob: -5.731287956237793
    6. ' j' → logprob: -6.731287956237793
    7. ' unused' → logprob: -6.731287956237793
    8. '(' → logprob: -7.106287956237793
    9. 'pattern' → logprob: -7.731287956237793
    10. '(element' → logprob: -7.856287956237793

Token 2788: ' string' (ID: 1621)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4180111587047577
    2. '```' → logprob: -1.91801118850708
    3. '_j' → logprob: -2.79301118850708
    4. ' (' → logprob: -3.66801118850708
    5. '[j' → logprob: -4.04301118850708
    6. '               ' → logprob: -4.16801118850708
    7. ',' → logprob: -4.29301118850708
    8. 'for' → logprob: -4.79301118850708
    9. '_' → logprob: -4.79301118850708
    10. 'j' → logprob: -4.91801118850708

Token 2789: ' not' (ID: 625)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.331428200006485
    2. '           ' → logprob: -1.4564281702041626
    3. 'for' → logprob: -3.956428289413452
    4. ' for' → logprob: -4.206428050994873
    5. ':
' → logprob: -4.956428050994873
    6. '```' → logprob: -5.706428050994873
    7. ':' → logprob: -6.956428050994873
    8. ' (' → logprob: -7.081428050994873
    9. ',' → logprob: -7.206428050994873
    10. '_j' → logprob: -7.956428050994873

Token 2790: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.03903310000896454
    2. 'in' → logprob: -3.5390331745147705
    3. ' used' → logprob: -5.039032936096191
    4. ' in' → logprob: -6.289032936096191
    5. 'already' → logprob: -7.414032936096191
    6. 'matched' → logprob: -9.289032936096191
    7. '_used' → logprob: -9.289032936096191
    8. '   ' → logprob: -10.039032936096191
    9. '```' → logprob: -10.914032936096191
    10. 'visited' → logprob: -11.039032936096191

Token 2791: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25434526801109314
    2. '               ' → logprob: -1.8793452978134155
    3. 'for' → logprob: -2.879345178604126
    4. ' for' → logprob: -4.379345417022705
    5. ':
' → logprob: -7.004345417022705
    6. '```' → logprob: -7.004345417022705
    7. ',' → logprob: -7.879345417022705
    8. '
' → logprob: -8.004344940185547
    9. ':' → logprob: -8.379344940185547
    10. '{
' → logprob: -8.879344940185547

Token 2792: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2342107594013214
    2. '           ' → logprob: -1.609210729598999
    3. '```' → logprob: -5.484210968017578
    4. 'for' → logprob: -6.109210968017578
    5. ':
' → logprob: -6.859210968017578
    6. ' for' → logprob: -7.109210968017578
    7. ',' → logprob: -8.484210968017578
    8. ':' → logprob: -9.359210968017578
    9. '{
' → logprob: -9.859210968017578
    10. '                   ' → logprob: -10.109210968017578

Token 2793: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5363187193870544
    2. '               ' → logprob: -0.9113187193870544
    3. ' for' → logprob: -4.911318778991699
    4. 'for' (adapté à ' for') → logprob: -5.286318778991699
    5. '```' → logprob: -7.661318778991699
    6. '
' → logprob: -9.6613187789917
    7. '   ' → logprob: -10.2863187789917
    8. '                   ' → logprob: -10.7863187789917
    9. '            ' → logprob: -10.9113187789917
    10. '             ' → logprob: -11.5363187789917

Token 2794: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005234356038272381
    2. ' j' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.255234718322754
    4. '```' → logprob: -15.755234718322754
    5. '
' → logprob: -16.755233764648438
    6. '_j' → logprob: -17.005233764648438
    7. '	j' → logprob: -17.005233764648438
    8. ' ' → logprob: -17.255233764648438
    9. 'i' → logprob: -17.505233764648438
    10. '`' → logprob: -17.880233764648438

Token 2795: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01815205067396164
    2. 'in' → logprob: -4.018152236938477
    3. '               ' → logprob: -14.143152236938477
    4. ' ' → logprob: -15.268152236938477
    5. ',' → logprob: -15.393152236938477
    6. '	in' → logprob: -15.518152236938477
    7. '           ' → logprob: -15.643152236938477
    8. '            ' → logprob: -16.268152236938477
    9. '   ' → logprob: -16.518152236938477
    10. '                   ' → logprob: -16.768152236938477

Token 2796: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009541209787130356
    2. ' range' → logprob: -4.759541034698486
    3. 'n' → logprob: -7.009541034698486
    4. 'in' → logprob: -11.134541511535645
    5. ' in' → logprob: -12.134541511535645
    6. ' n' → logprob: -13.009541511535645
    7. ' ' → logprob: -15.384541511535645
    8. '   ' → logprob: -15.634541511535645
    9. '(range' → logprob: -15.759541511535645
    10. '(n' → logprob: -16.259540557861328

Token 2797: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.32523515378125e-05
    2. ' n' → logprob: -9.750062942504883
    3. '           ' → logprob: -13.000062942504883
    4. '(n' → logprob: -13.125062942504883
    5. '               ' → logprob: -15.000062942504883
    6. '                   ' → logprob: -15.625062942504883
    7. ')n' → logprob: -16.125062942504883
    8. '	n' → logprob: -16.750062942504883
    9. '
' → logprob: -17.750062942504883
    10. '0' → logprob: -17.750062942504883

Token 2798: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02647898532450199
    2. '               ' → logprob: -3.6514790058135986
    3. '           ' → logprob: -9.52647876739502
    4. '):' → logprob: -9.90147876739502
    5. '                   ' → logprob: -10.90147876739502
    6. '       ' → logprob: -11.90147876739502
    7. '                       ' → logprob: -12.27647876739502
    8. ':
' → logprob: -12.52647876739502
    9. '```' → logprob: -12.52647876739502
    10. ')' → logprob: -13.02647876739502

Token 2799: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006322591798380017
    2. '                
' → logprob: -9.000632286071777
    3. '                   ' → logprob: -9.125632286071777
    4. '                ' → logprob: -9.125632286071777
    5. '              ' → logprob: -9.625632286071777
    6. '           ' → logprob: -10.125632286071777
    7. '                               ' → logprob: -10.250632286071777
    8. '                       ' → logprob: -10.625632286071777
    9. '```' → logprob: -10.750632286071777
    10. '            ' → logprob: -11.000632286071777

Token 2800: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04413050785660744
    2. '                   ' → logprob: -3.294130563735962
    3. ' if' → logprob: -5.794130325317383
    4. 'if' (adapté à ' if') → logprob: -6.044130325317383
    5. '                       ' → logprob: -8.169130325317383
    6. '
' → logprob: -9.169130325317383
    7. ' ' → logprob: -9.294130325317383
    8. '           ' → logprob: -10.044130325317383
    9. '                               ' → logprob: -10.544130325317383
    10. '                ' → logprob: -10.669130325317383

Token 2801: ' (' (ID: 350)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.2015605866909027
    2. ' (' → logprob: -1.701560616493225
    3. '((' → logprob: -9.451560974121094
    4. '(' → logprob: -10.451560974121094
    5. '(m' → logprob: -11.826560974121094
    6. '   ' → logprob: -11.951560974121094
    7. ' ' → logprob: -11.951560974121094
    8. ' ((' → logprob: -11.951560974121094
    9. '               ' → logprob: -12.201560974121094
    10. '(not' → logprob: -12.951560974121094

Token 2802: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.018448878079652786
    2. '(mask' → logprob: -4.643448829650879
    3. ' mask' → logprob: -4.768448829650879
    4. ' (' → logprob: -8.893448829650879
    5. '	mask' → logprob: -12.143448829650879
    6. 'pos' → logprob: -12.393448829650879
    7. ')' → logprob: -12.518448829650879
    8. '   ' → logprob: -12.643448829650879
    9. ' ' → logprob: -13.143448829650879
    10. '               ' → logprob: -13.268448829650879

Token 2803: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.4746858775615692
    2. ' >>' → logprob: -0.9746859073638916
    3. ' &' → logprob: -7.5996856689453125
    4. '&' → logprob: -9.849685668945312
    5. '                   ' → logprob: -10.974685668945312
    6. '               ' → logprob: -11.349685668945312
    7. '>>(' → logprob: -12.099685668945312
    8. ' ' → logprob: -12.974685668945312
    9. '>>&' → logprob: -12.974685668945312
    10. '```' → logprob: -12.974685668945312

Token 2804: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.128163257315464e-07
    2. ' j' → logprob: -15.125
    3. '                   ' → logprob: -17.25
    4. '1' → logprob: -18.0
    5. '           ' → logprob: -18.375
    6. '   ' → logprob: -18.75
    7. '               ' → logprob: -19.25
    8. '	j' → logprob: -19.375
    9. ')' → logprob: -20.625
    10. '_j' → logprob: -20.75

Token 2805: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006553700077347457
    2. ')&' → logprob: -7.375655174255371
    3. '&' → logprob: -10.500655174255371
    4. ' )' → logprob: -14.625655174255371
    5. '[' → logprob: -15.125655174255371
    6. '')' → logprob: -15.750655174255371
    7. '```' → logprob: -16.125656127929688
    8. '           ' → logprob: -16.375656127929688
    9. '       ' → logprob: -16.500656127929688
    10. '               ' → logprob: -17.125656127929688

Token 2806: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22050635516643524
    2. ')&' → logprob: -2.095506429672241
    3. '&' → logprob: -2.595506429672241
    4. '1' → logprob: -9.09550666809082
    5. ' &' → logprob: -9.47050666809082
    6. '```' → logprob: -10.09550666809082
    7. '0' → logprob: -11.47050666809082
    8. '`' → logprob: -11.72050666809082
    9. '&)' → logprob: -12.22050666809082
    10. ' )' → logprob: -12.22050666809082

Token 2807: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '   ' → logprob: -18.875
    5. 'j' → logprob: -19.375
    6. '
' → logprob: -19.5
    7. '```' → logprob: -20.375
    8. '`' → logprob: -21.25
    9. '=' → logprob: -21.375
    10. ')' → logprob: -21.75

Token 2808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033713103039190173
    2. '0' → logprob: -8.000337600708008
    3. ' ' → logprob: -14.125337600708008
    4. 'j' → logprob: -14.250337600708008
    5. '
' → logprob: -15.375337600708008
    6. '   ' → logprob: -17.375337600708008
    7. '```' → logprob: -18.500337600708008
    8. '=' → logprob: -18.750337600708008
    9. ')' → logprob: -18.750337600708008
    10. '!' → logprob: -18.750337600708008

Token 2809: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01906660944223404
    2. ' ==' → logprob: -4.01906681060791
    3. ')==' → logprob: -7.26906681060791
    4. ')' → logprob: -9.89406681060791
    5. '0' → logprob: -10.39406681060791
    6. '                   ' → logprob: -10.39406681060791
    7. '```' → logprob: -10.39406681060791
    8. ']==' → logprob: -10.51906681060791
    9. '=' → logprob: -11.01906681060791
    10. '               ' → logprob: -11.89406681060791

Token 2810: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.625001907348633
    3. '1' → logprob: -14.375001907348633
    4. '   ' → logprob: -20.000001907348633
    5. '
' → logprob: -20.250001907348633
    6. '```' → logprob: -21.000001907348633
    7. ' ' → logprob: -22.125001907348633
    8. '۰' → logprob: -22.750001907348633
    9. 'False' → logprob: -23.000001907348633
    10. '=' → logprob: -23.625001907348633

Token 2811: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. '1' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.875003814697266
    4. '
' → logprob: -17.000003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '```' → logprob: -17.375003814697266
    7. '000' → logprob: -20.000003814697266
    8. ' ' → logprob: -20.312503814697266
    9. 'False' → logprob: -20.375003814697266
    10. 'j' → logprob: -20.437503814697266

Token 2812: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21258175373077393
    2. '==' → logprob: -2.0875816345214844
    3. ' ==' → logprob: -3.2125816345214844
    4. ':
' → logprob: -4.712581634521484
    5. ':' → logprob: -4.962581634521484
    6. '                       ' → logprob: -5.212581634521484
    7. '               ' → logprob: -5.587581634521484
    8. 'continue' → logprob: -7.712581634521484
    9. ' continue' → logprob: -8.212581634521484
    10. '                           ' → logprob: -8.337581634521484

Token 2813: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00790624599903822
    2. '                       ' → logprob: -5.132906436920166
    3. ' continue' → logprob: -7.132906436920166
    4. '                           ' → logprob: -7.882906436920166
    5. '               ' → logprob: -8.257905960083008
    6. '                    ' → logprob: -9.132905960083008
    7. '                               ' → logprob: -9.507905960083008
    8. 'continue' → logprob: -9.507905960083008
    9. '                 ' → logprob: -9.882905960083008
    10. '                  ' → logprob: -10.257905960083008

Token 2814: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2878701984882355
    2. '                   ' → logprob: -1.912870168685913
    3. ' continue' → logprob: -2.287870168685913
    4. '                       ' → logprob: -7.662870407104492
    5. '               ' → logprob: -9.037870407104492
    6. '	continue' → logprob: -9.162870407104492
    7. ' ' → logprob: -9.287870407104492
    8. '```' → logprob: -9.412870407104492
    9. '   ' → logprob: -9.787870407104492
    10. '                 ' → logprob: -11.162870407104492

Token 2815: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5806491374969482
    2. '               ' → logprob: -1.0806491374969482
    3. ':
' → logprob: -2.7056491374969482
    4. ':' → logprob: -3.8306491374969482
    5. '                       ' → logprob: -4.580649375915527
    6. '                ' → logprob: -7.455649375915527
    7. '           ' → logprob: -7.955649375915527
    8. '                    
' → logprob: -8.580649375915527
    9. '                           ' → logprob: -8.830649375915527
    10. '
' → logprob: -8.830649375915527

Token 2816: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12554094195365906
    2. '               ' → logprob: -2.5005409717559814
    3. '```' → logprob: -3.6255409717559814
    4. '                       ' → logprob: -4.750540733337402
    5. '``' → logprob: -8.500540733337402
    6. '                ' → logprob: -9.125540733337402
    7. '                    ' → logprob: -10.500540733337402
    8. '                           ' → logprob: -10.500540733337402
    9. ':
' → logprob: -10.625540733337402
    10. '`' → logprob: -10.750540733337402

Token 2817: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.14185672998428345
    2. '               ' → logprob: -2.3918566703796387
    3. ' length' → logprob: -3.2668566703796387
    4. '                   ' → logprob: -6.016856670379639
    5. '   ' → logprob: -9.766857147216797
    6. '
' → logprob: -10.391857147216797
    7. ',length' → logprob: -10.391857147216797
    8. 'len' → logprob: -10.766857147216797
    9. '(length' → logprob: -10.891857147216797
    10. '           ' → logprob: -11.266857147216797

Token 2818: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.001666611758992076
    2. '_' → logprob: -6.62666654586792
    3. '=' → logprob: -8.751667022705078
    4. ' =' → logprob: -9.251667022705078
    5. '[j' → logprob: -10.001667022705078
    6. 'j' → logprob: -11.376667022705078
    7. '_=' → logprob: -12.251667022705078
    8. '```' → logprob: -12.376667022705078
    9. '_length' → logprob: -12.626667022705078
    10. '=j' → logprob: -13.126667022705078

Token 2819: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30834537744522095
    2. ' =' → logprob: -1.6833453178405762
    3. '               ' → logprob: -2.683345317840576
    4. '                   ' → logprob: -5.308345317840576
    5. '=
' → logprob: -6.308345317840576
    6. '```' → logprob: -6.433345317840576
    7. ':
' → logprob: -6.933345317840576
    8. '                ' → logprob: -7.808345317840576
    9. ')' → logprob: -7.933345317840576
    10. '
' → logprob: -8.183345794677734

Token 2820: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25193214416503906
    2. ' len' → logprob: -1.501932144165039
    3. 'length' → logprob: -13.626932144165039
    4. '(len' → logprob: -13.876932144165039
    5. '[len' → logprob: -14.876932144165039
    6. '	len' → logprob: -16.00193214416504
    7. ' length' → logprob: -16.75193214416504
    8. '```' → logprob: -17.00193214416504
    9. '_len' → logprob: -17.25193214416504
    10. ' ' → logprob: -17.25193214416504

Token 2821: '(element' (ID: 22709)
  Prédit: '(element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(element' → logprob: -0.20142249763011932
    2. 'element' → logprob: -1.7014224529266357
    3. '[element' → logprob: -12.451422691345215
    4. '(' → logprob: -13.201422691345215
    5. ' element' → logprob: -13.326422691345215
    6. '(
' → logprob: -15.076422691345215
    7. '           ' → logprob: -15.076422691345215
    8. '	element' → logprob: -15.326422691345215
    9. '```' → logprob: -15.576422691345215
    10. '                   ' → logprob: -15.826422691345215

Token 2822: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.001229634741321206
    2. '_j' → logprob: -7.376229763031006
    3. 'element' → logprob: -7.876229763031006
    4. '_elements' → logprob: -9.376229286193848
    5. 'Strings' → logprob: -10.376229286193848
    6. '[j' → logprob: -10.376229286193848
    7. '(element' → logprob: -10.501229286193848
    8. '(j' → logprob: -11.376229286193848
    9. 'strings' → logprob: -11.626229286193848
    10. '[element' → logprob: -11.751229286193848

Token 2823: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.6240566083070007e-06
    2. ')' → logprob: -14.000001907348633
    3. '   ' → logprob: -15.250001907348633
    4. 'j' → logprob: -15.375001907348633
    5. '[
' → logprob: -15.750001907348633
    6. '
' → logprob: -16.750001907348633
    7. '```' → logprob: -16.750001907348633
    8. ')
' → logprob: -16.875001907348633
    9. '_j' → logprob: -17.250001907348633
    10. '       ' → logprob: -17.250001907348633

Token 2824: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00494258152320981
    2. '               ' → logprob: -5.629942417144775
    3. ')' → logprob: -6.754942417144775
    4. ')]
' → logprob: -9.754942893981934
    5. ']
' → logprob: -10.004942893981934
    6. '])
' → logprob: -10.254942893981934
    7. '                   ' → logprob: -11.379942893981934
    8. '):
' → logprob: -11.879942893981934
    9. '           ' → logprob: -12.129942893981934
    10. '```' → logprob: -12.754942893981934

Token 2825: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001350710866972804
    2. '
' → logprob: -6.8763508796691895
    3. '                   ' → logprob: -9.126350402832031
    4. 'end' → logprob: -9.626350402832031
    5. '                
' → logprob: -10.376350402832031
    6. ' if' → logprob: -10.501350402832031
    7. ' end' → logprob: -10.626350402832031
    8. '```' → logprob: -10.751350402832031
    9. 'if' → logprob: -11.626350402832031
    10. '                ' → logprob: -12.001350402832031

Token 2826: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.04406457394361496
    2. 'if' → logprob: -3.419064521789551
    3. ' end' → logprob: -4.919064521789551
    4. ' if' → logprob: -6.294064521789551
    5. '               ' → logprob: -6.794064521789551
    6. '                   ' → logprob: -10.16906452178955
    7. '```' → logprob: -11.16906452178955
    8. '
' → logprob: -11.41906452178955
    9. '   ' → logprob: -11.66906452178955
    10. ' ' → logprob: -11.79406452178955

Token 2827: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -9.372294698550832e-06
    2. 'pos' → logprob: -11.750009536743164
    3. '_' → logprob: -15.000009536743164
    4. '_p' → logprob: -15.375009536743164
    5. '=_' → logprob: -15.500009536743164
    6. '```' → logprob: -15.750009536743164
    7. '           ' → logprob: -16.125009536743164
    8. 'Pos' → logprob: -16.375009536743164
    9. ' =' → logprob: -16.375009536743164
    10. '=' → logprob: -16.500009536743164

Token 2828: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31481295824050903
    2. '=' → logprob: -1.3148128986358643
    3. ' ==' → logprob: -7.314813137054443
    4. '```' → logprob: -8.314812660217285
    5. '                   ' → logprob: -8.689812660217285
    6. '==' → logprob: -8.939812660217285
    7. '               ' → logprob: -8.939812660217285
    8. ')' → logprob: -9.564812660217285
    9. '                ' → logprob: -10.189812660217285
    10. '           ' → logprob: -10.939812660217285

Token 2829: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07889000326395035
    2. ' pos' → logprob: -2.578890085220337
    3. '                   ' → logprob: -15.703889846801758
    4. '               ' → logprob: -17.328889846801758
    5. '_pos' → logprob: -17.453889846801758
    6. '[pos' → logprob: -17.703889846801758
    7. '	pos' → logprob: -18.453889846801758
    8. '(pos' → logprob: -18.578889846801758
    9. '           ' → logprob: -18.703889846801758
    10. 'Pos' → logprob: -18.953889846801758

Token 2830: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0430699847638607
    2. ' +' → logprob: -3.168070077896118
    3. '+
' → logprob: -10.668069839477539
    4. '```' → logprob: -10.668069839477539
    5. '+j' → logprob: -10.918069839477539
    6. '=' → logprob: -13.543069839477539
    7. '+=' → logprob: -14.043069839477539
    8. '                   ' → logprob: -14.168069839477539
    9. ' +
' → logprob: -14.418069839477539
    10. '               ' → logprob: -14.543069839477539

Token 2831: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -9.088346359931165e-07
    2. ' length' → logprob: -14.250000953674316
    3. '(length' → logprob: -15.750000953674316
    4. '_length' → logprob: -19.5
    5. '[length' → logprob: -20.375
    6. '	length' → logprob: -21.625
    7. 'len' → logprob: -21.75
    8. '```' → logprob: -22.75
    9. '-length' → logprob: -22.875
    10. 'ength' → logprob: -23.875

Token 2832: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.000000953674316
    3. 'j' → logprob: -17.375
    4. '[j' → logprob: -17.5
    5. '\' → logprob: -17.5
    6. '``' → logprob: -18.625
    7. '`' → logprob: -18.875
    8. 'length' → logprob: -19.25
    9. '_i' → logprob: -19.75
    10. '_length' → logprob: -20.0

Token 2833: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06995255500078201
    2. ' -' → logprob: -2.6949524879455566
    3. ')' → logprob: -11.694952964782715
    4. '```' → logprob: -12.569952964782715
    5. '               ' → logprob: -13.194952964782715
    6. '                   ' → logprob: -14.569952964782715
    7. ' ' → logprob: -14.944952964782715
    8. '``' → logprob: -15.569952964782715
    9. '   ' → logprob: -15.694952964782715
    10. ')-' → logprob: -15.694952964782715

Token 2834: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.000001907348633
    4. '
' → logprob: -21.000001907348633
    5. '   ' → logprob: -21.125001907348633
    6. '`' → logprob: -23.000001907348633
    7. '``' → logprob: -23.000001907348633
    8. '                   ' → logprob: -23.125001907348633
    9. '               ' → logprob: -23.375001907348633
    10. '                       ' → logprob: -23.875001907348633

Token 2835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -19.75
    4. '
' → logprob: -22.25
    5. '   ' → logprob: -23.0
    6. '<|end|>' → logprob: -23.875
    7. '0' → logprob: -24.75
    8. '>' → logprob: -25.125
    9. '`' → logprob: -25.25
    10. ')' → logprob: -25.25

Token 2836: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022403974435292184
    2. '                   ' → logprob: -10.000224113464355
    3. '           ' → logprob: -10.125224113464355
    4. '```' → logprob: -10.250224113464355
    5. '
' → logprob: -10.375224113464355
    6. '<|end|>' → logprob: -11.375224113464355
    7. '              ' → logprob: -11.500224113464355
    8. ' if' → logprob: -11.625224113464355
    9. '                ' → logprob: -11.875224113464355
    10. '                
' → logprob: -12.375224113464355

Token 2837: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010057775070890784
    2. '```' → logprob: -7.62600564956665
    3. '                   ' → logprob: -8.626006126403809
    4. ' if' → logprob: -8.626006126403809
    5. '
' → logprob: -10.376006126403809
    6. 'if' → logprob: -10.751006126403809
    7. '                       ' → logprob: -10.876006126403809
    8. '                               ' → logprob: -10.876006126403809
    9. '           ' → logprob: -11.751006126403809
    10. '                           ' → logprob: -12.001006126403809

Token 2838: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08553212136030197
    2. 'if' (adapté à ' if') → logprob: -3.0855321884155273
    3. ' if' → logprob: -3.3355321884155273
    4. '                   ' → logprob: -7.460532188415527
    5. '           ' → logprob: -10.335532188415527
    6. '                       ' → logprob: -10.960532188415527
    7. '```' → logprob: -11.085532188415527
    8. 'If' → logprob: -11.585532188415527
    9. '                ' → logprob: -11.710532188415527
    10. '              ' → logprob: -12.835532188415527

Token 2839: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00020354038861114532
    2. ' end' → logprob: -8.500203132629395
    3. '(end' → logprob: -17.12520408630371
    4. '               ' → logprob: -17.87520408630371
    5. '                   ' → logprob: -18.62520408630371
    6. '           ' → logprob: -18.75020408630371
    7. '   ' → logprob: -19.50020408630371
    8. '=end' → logprob: -20.50020408630371
    9. '[end' → logprob: -20.87520408630371
    10. '	end' → logprob: -21.00020408630371

Token 2840: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.010872608050704002
    2. '<' → logprob: -4.760872840881348
    3. ' <' → logprob: -6.510872840881348
    4. 'pos' → logprob: -7.760872840881348
    5. '   ' → logprob: -9.385872840881348
    6. '>=' → logprob: -9.760872840881348
    7. 'Pos' → logprob: -10.135872840881348
    8. '       ' → logprob: -10.510872840881348
    9. '```' → logprob: -10.760872840881348
    10. '           ' → logprob: -11.010872840881348

Token 2841: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5146238207817078
    2. '<' → logprob: -1.0146238803863525
    3. ' >=' → logprob: -4.014623641967773
    4. '>=' → logprob: -4.264623641967773
    5. '<len' → logprob: -6.014623641967773
    6. '<int' → logprob: -6.889623641967773
    7. '```' → logprob: -6.889623641967773
    8. '<size' → logprob: -7.264623641967773
    9. ')' → logprob: -7.514623641967773
    10. '<n' → logprob: -8.014623641967773

Token 2842: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00020354038861114532
    2. ' len' → logprob: -8.500203132629395
    3. '(len' → logprob: -17.50020408630371
    4. '[len' → logprob: -18.37520408630371
    5. '   ' → logprob: -19.00020408630371
    6. '	len' → logprob: -19.12520408630371
    7. '<len' → logprob: -20.00020408630371
    8. '```' → logprob: -20.00020408630371
    9. '=len' → logprob: -20.75020408630371
    10. '           ' → logprob: -20.87520408630371

Token 2843: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.03805273771286011
    2. 'text' → logprob: -3.288052797317505
    3. '{text' → logprob: -11.538052558898926
    4. ' text' → logprob: -14.038052558898926
    5. '(' → logprob: -14.663052558898926
    6. '   ' → logprob: -16.663053512573242
    7. '"text' → logprob: -16.663053512573242
    8. '[text' → logprob: -16.913053512573242
    9. '	text' → logprob: -16.913053512573242
    10. ',text' → logprob: -16.913053512573242

Token 2844: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3693963885307312
    2. '                   ' → logprob: -1.369396448135376
    3. '):
' → logprob: -3.494396448135376
    4. '               ' → logprob: -4.119396209716797
    5. ':' → logprob: -5.369396209716797
    6. '                       ' → logprob: -5.994396209716797
    7. '           ' → logprob: -8.119396209716797
    8. ']:
' → logprob: -8.869396209716797
    9. '```' → logprob: -9.369396209716797
    10. '):' → logprob: -9.994396209716797

Token 2845: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018487934721633792
    2. ':
' → logprob: -6.8768486976623535
    3. '               ' → logprob: -7.7518486976623535
    4. 'continue' → logprob: -8.876849174499512
    5. '                       ' → logprob: -9.126849174499512
    6. ':' → logprob: -9.501849174499512
    7. ' continue' → logprob: -9.876849174499512
    8. '```' → logprob: -12.251849174499512
    9. '           ' → logprob: -13.376849174499512
    10. '   ' → logprob: -14.001849174499512

Token 2846: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.3520696461200714
    2. '                   ' → logprob: -1.352069616317749
    3. '                       ' → logprob: -3.352069616317749
    4. ' continue' → logprob: -5.852069854736328
    5. '```' → logprob: -9.602069854736328
    6. '   ' → logprob: -10.227069854736328
    7. '               ' → logprob: -10.352069854736328
    8. '       ' → logprob: -11.602069854736328
    9. '	continue' → logprob: -11.727069854736328
    10. '           ' → logprob: -11.727069854736328

Token 2847: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17285437881946564
    2. '                   ' → logprob: -1.9228544235229492
    3. ':
' → logprob: -4.547854423522949
    4. ':' → logprob: -7.172854423522949
    5. '                       ' → logprob: -7.297854423522949
    6. '           ' → logprob: -8.92285442352295
    7. '
' → logprob: -9.17285442352295
    8. '```' → logprob: -9.29785442352295
    9. 'if' → logprob: -10.42285442352295
    10. '   ' → logprob: -10.79785442352295

Token 2848: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008436208590865135
    2. '                   ' → logprob: -4.88343620300293
    3. '```' → logprob: -7.63343620300293
    4. '                       ' → logprob: -8.13343620300293
    5. 'if' → logprob: -11.50843620300293
    6. ' if' → logprob: -11.75843620300293
    7. '                               ' → logprob: -11.88343620300293
    8. '                           ' → logprob: -12.38343620300293
    9. '``' → logprob: -12.38343620300293
    10. 'continue' → logprob: -12.50843620300293

Token 2849: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005077803041785955
    2. '               ' → logprob: -5.380077838897705
    3. ' if' → logprob: -7.880077838897705
    4. '                   ' → logprob: -9.630077362060547
    5. '```' → logprob: -12.130077362060547
    6. 'for' → logprob: -12.505077362060547
    7. '   ' → logprob: -13.880077362060547
    8. '                       ' → logprob: -14.005077362060547
    9. 'If' → logprob: -14.130077362060547
    10. '#' → logprob: -14.255077362060547

Token 2850: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.007719016633927822
    2. '(pid' → logprob: -5.382719039916992
    3. '(element' → logprob: -7.007719039916992
    4. ' (' → logprob: -7.132719039916992
    5. '((' → logprob: -8.007719039916992
    6. '(' → logprob: -8.007719039916992
    7. '(p' → logprob: -8.257719039916992
    8. '(matches' → logprob: -8.257719039916992
    9. 'matches' → logprob: -9.882719039916992
    10. '(pattern' → logprob: -10.132719039916992

Token 2851: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.5716304410016164e-05
    2. '(j' → logprob: -10.250035285949707
    3. '                   ' → logprob: -15.750035285949707
    4. '   ' → logprob: -16.125036239624023
    5. '
' → logprob: -16.750036239624023
    6. ' j' → logprob: -17.250036239624023
    7. '                       ' → logprob: -17.875036239624023
    8. ' (' → logprob: -18.875036239624023
    9. '                           ' → logprob: -19.125036239624023
    10. '               ' → logprob: -19.250036239624023

Token 2852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002226093056378886
    2. ',length' → logprob: -8.500222206115723
    3. ',
' → logprob: -11.000222206115723
    4. ' ,' → logprob: -14.500222206115723
    5. ',j' → logprob: -14.500222206115723
    6. ',len' → logprob: -14.625222206115723
    7. ',end' → logprob: -15.000222206115723
    8. '                   ' → logprob: -16.37522315979004
    9. '               ' → logprob: -16.50022315979004
    10. ',size' → logprob: -16.62522315979004

Token 2853: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.306760805164231e-05
    2. ' length' → logprob: -11.25001335144043
    3. 'len' → logprob: -17.62501335144043
    4. '                   ' → logprob: -19.37501335144043
    5. 'leng' → logprob: -19.37501335144043
    6. '(length' → logprob: -20.62501335144043
    7. ',length' → logprob: -20.62501335144043
    8. '	length' → logprob: -20.75001335144043
    9. '_length' → logprob: -20.87501335144043
    10. '[length' → logprob: -21.25001335144043

Token 2854: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0003566767554730177
    2. 'length' → logprob: -8.375356674194336
    3. '_length' → logprob: -9.875356674194336
    4. '(length' → logprob: -10.375356674194336
    5. ')' → logprob: -11.375356674194336
    6. ',length' → logprob: -11.500356674194336
    7. ',' → logprob: -11.750356674194336
    8. '_,' → logprob: -12.625356674194336
    9. '[length' → logprob: -13.250356674194336
    10. 'j' → logprob: -13.375356674194336

Token 2855: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. ' )' → logprob: -12.250011444091797
    3. 'in' → logprob: -12.875011444091797
    4. '')' → logprob: -13.375011444091797
    5. '   ' → logprob: -14.375011444091797
    6. ')
' → logprob: -15.000011444091797
    7. ' in' → logprob: -15.250011444091797
    8. '    ' → logprob: -15.375011444091797
    9. ',)' → logprob: -15.375011444091797
    10. '")' → logprob: -15.500011444091797

Token 2856: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016093627782538533
    2. 'in' → logprob: -6.6266093254089355
    3. ' in' → logprob: -8.251609802246094
    4. ' )' → logprob: -11.376609802246094
    5. '')' → logprob: -12.626609802246094
    6. '                   ' → logprob: -13.876609802246094
    7. '               ' → logprob: -14.501609802246094
    8. ',)' → logprob: -14.501609802246094
    9. '                       ' → logprob: -14.626609802246094
    10. '")' → logprob: -14.626609802246094

Token 2857: ' matches' (ID: 15248)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -6.749814019713085e-06
    2. ' matches' → logprob: -12.000006675720215
    3. '(matches' → logprob: -14.500006675720215
    4. '.matches' → logprob: -19.50000762939453
    5. '_matches' → logprob: -20.00000762939453
    6. '   ' → logprob: -21.00000762939453
    7. '           ' → logprob: -21.62500762939453
    8. '```' → logprob: -22.00000762939453
    9. '               ' → logprob: -22.25000762939453
    10. '
' → logprob: -22.50000762939453

Token 2858: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.12693797051906586
    2. '_at' → logprob: -2.1269378662109375
    3. 'set' → logprob: -11.626937866210938
    4. 'at' → logprob: -14.751937866210938
    5. 'Set' → logprob: -15.001937866210938
    6. 'At' → logprob: -16.751937866210938
    7. '   ' → logprob: -16.876937866210938
    8. 'et' → logprob: -17.751937866210938
    9. '_pos' → logprob: -17.751937866210938
    10. '```' → logprob: -17.876937866210938

Token 2859: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -3.531315314830863e-06
    2. 'at' → logprob: -12.750003814697266
    3. 'At' → logprob: -15.000003814697266
    4. '[pos' → logprob: -16.375003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '[' → logprob: -17.625003814697266
    7. '[j' → logprob: -18.000003814697266
    8. '[(' → logprob: -18.250003814697266
    9. '[end' → logprob: -18.375003814697266
    10. '	at' → logprob: -18.500003814697266

Token 2860: '_pos' (ID: 14692)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.051048506051301956
    2. '_pos' → logprob: -3.051048517227173
    3. 'end' → logprob: -6.051048278808594
    4. '[pos' → logprob: -9.676048278808594
    5. '[end' → logprob: -10.176048278808594
    6. 'Pos' → logprob: -14.301048278808594
    7. '_end' → logprob: -15.176048278808594
    8. '[' → logprob: -15.426048278808594
    9. '```' → logprob: -15.551048278808594
    10. ' pos' → logprob: -15.676048278808594

Token 2861: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -1.9361264946837764e-07
    2. 'end' → logprob: -16.0
    3. '[' → logprob: -16.875
    4. '   ' → logprob: -17.875
    5. '=end' → logprob: -20.0
    6. '[
' → logprob: -20.125
    7. ',end' → logprob: -20.25
    8. '(end' → logprob: -20.375
    9. ' [' → logprob: -20.5
    10. ''end' → logprob: -20.875

Token 2862: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0003851517685689032
    2. 'pos' → logprob: -7.875385284423828
    3. 'Pos' → logprob: -13.125385284423828
    4. 'end' → logprob: -13.125385284423828
    5. '[pos' → logprob: -14.625385284423828
    6. '[end' → logprob: -15.500385284423828
    7. '_end' → logprob: -16.375385284423828
    8. ']' → logprob: -17.250385284423828
    9. '[' → logprob: -17.500385284423828
    10. 'o' → logprob: -17.625385284423828

Token 2863: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04205850511789322
    2. '):' → logprob: -3.2920584678649902
    3. '               ' → logprob: -6.04205846786499
    4. '                   ' → logprob: -6.79205846786499
    5. ')' → logprob: -8.292058944702148
    6. '                       ' → logprob: -9.917058944702148
    7. '           ' → logprob: -9.917058944702148
    8. ']:
' → logprob: -10.042058944702148
    9. ':
' → logprob: -10.167058944702148
    10. '):
' → logprob: -11.167058944702148

Token 2864: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03415343165397644
    2. ':
' → logprob: -4.409153461456299
    3. '                       ' → logprob: -4.534153461456299
    4. ':' → logprob: -5.034153461456299
    5. '```' → logprob: -6.534153461456299
    6. '                           ' → logprob: -7.159153461456299
    7. '               ' → logprob: -7.159153461456299
    8. ' and' → logprob: -7.534153461456299
    9. '):
' → logprob: -9.53415298461914
    10. '           ' → logprob: -9.53415298461914

Token 2865: ' next' (ID: 2613)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6578982472419739
    2. 'if' → logprob: -1.782898187637329
    3. 'new' → logprob: -2.657898187637329
    4. ' if' → logprob: -2.657898187637329
    5. ' new' → logprob: -2.907898187637329
    6. '                       ' → logprob: -3.157898187637329
    7. ':
' → logprob: -3.782898187637329
    8. 'next' (adapté à ' next') → logprob: -4.032898426055908
    9. 'mask' → logprob: -4.282898426055908
    10. ' next' → logprob: -5.032898426055908

Token 2866: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.18360210955142975
    2. '_pos' → logprob: -1.8086020946502686
    3. 'pos' → logprob: -6.433602333068848
    4. '```' → logprob: -7.308602333068848
    5. '_' → logprob: -7.683602333068848
    6. 'mask' → logprob: -7.808602333068848
    7. '_,' → logprob: -8.433602333068848
    8. ',' → logprob: -8.683602333068848
    9. '_state' → logprob: -9.558602333068848
    10. '
' → logprob: -9.558602333068848

Token 2867: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18961311876773834
    2. '=' → logprob: -1.8146131038665771
    3. '|' → logprob: -4.689613342285156
    4. ' |=' → logprob: -7.689613342285156
    5. '```' → logprob: -9.939613342285156
    6. ' |' → logprob: -10.314613342285156
    7. '                   ' → logprob: -10.564613342285156
    8. ')' → logprob: -11.439613342285156
    9. '           ' → logprob: -11.689613342285156
    10. '               ' → logprob: -11.814613342285156

Token 2868: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.6329019665718079
    2. ' mask' → logprob: -0.7579019665718079
    3. '(mask' → logprob: -8.382902145385742
    4. '1' → logprob: -10.757902145385742
    5. '	mask' → logprob: -10.882902145385742
    6. '_mask' → logprob: -11.757902145385742
    7. ' ' → logprob: -12.132902145385742
    8. '0' → logprob: -12.132902145385742
    9. ' (' → logprob: -12.632902145385742
    10. ' ' → logprob: -12.757902145385742

Token 2869: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.010384997352957726
    2. ' |' → logprob: -5.010385036468506
    3. '|(' → logprob: -5.635385036468506
    4. '|(
' → logprob: -10.135384559631348
    5. ')|(' → logprob: -11.010384559631348
    6. '                   ' → logprob: -11.635384559631348
    7. '```' → logprob: -12.135384559631348
    8. '|
' → logprob: -12.385384559631348
    9. '                               ' → logprob: -12.760384559631348
    10. ' |=' → logprob: -13.135384559631348

Token 2870: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. ' (' → logprob: -11.50001049041748
    3. '1' → logprob: -16.375009536743164
    4. '```' → logprob: -18.500009536743164
    5. '                   ' → logprob: -19.125009536743164
    6. '   ' → logprob: -19.250009536743164
    7. '               ' → logprob: -21.000009536743164
    8. '
' → logprob: -21.250009536743164
    9. '           ' → logprob: -21.500009536743164
    10. '`' → logprob: -22.250009536743164

Token 2871: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001502598519437015
    2. '(' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.251502990722656
    4. ' (' → logprob: -17.001502990722656
    5. '                   ' → logprob: -17.626502990722656
    6. '               ' → logprob: -18.126502990722656
    7. '   ' → logprob: -18.751502990722656
    8. '```' → logprob: -19.751502990722656
    9. '[' → logprob: -20.001502990722656
    10. '                       ' → logprob: -20.501502990722656

Token 2872: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -3.214019307051785e-05
    2. ' <<' → logprob: -10.375032424926758
    3. '<' → logprob: -15.125032424926758
    4. '<<<' → logprob: -15.125032424926758
    5. '```' → logprob: -16.000032424926758
    6. '   ' → logprob: -16.375032424926758
    7. '<<(' → logprob: -16.875032424926758
    8. ')<<' → logprob: -17.250032424926758
    9. '()<<' → logprob: -17.875032424926758
    10. ' ' → logprob: -18.250032424926758

Token 2873: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.704273118884885e-07
    2. ' j' → logprob: -14.625000953674316
    3. '$j' → logprob: -16.0
    4. '	j' → logprob: -17.375
    5. '_j' → logprob: -17.875
    6. '[j' → logprob: -17.875
    7. '```' → logprob: -20.0
    8. '(j' → logprob: -20.0
    9. '*j' → logprob: -20.625
    10. '   ' → logprob: -21.5

Token 2874: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10157639533281326
    2. ')' → logprob: -2.351576328277588
    3. '                   ' → logprob: -6.726576328277588
    4. '               ' → logprob: -8.976576805114746
    5. '```' → logprob: -11.101576805114746
    6. ')
' → logprob: -11.476576805114746
    7. '                       ' → logprob: -11.976576805114746
    8. '):
' → logprob: -12.476576805114746
    9. '')
' → logprob: -13.601576805114746
    10. ')`
' → logprob: -13.726576805114746

Token 2875: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009438012726604939
    2. '                       ' → logprob: -5.0094380378723145
    3. ',' → logprob: -7.3844380378723145
    4. '               ' → logprob: -7.5094380378723145
    5. '```' → logprob: -7.5094380378723145
    6. '                           ' → logprob: -7.8844380378723145
    7. '           ' → logprob: -8.884437561035156
    8. ')' → logprob: -9.009437561035156
    9. '{
' → logprob: -9.634437561035156
    10. '                               ' → logprob: -9.884437561035156

Token 2876: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7459891438484192
    2. ' if' → logprob: -0.7459891438484192
    3. '                   ' → logprob: -2.9959890842437744
    4. '                       ' → logprob: -6.6209893226623535
    5. '               ' → logprob: -9.620988845825195
    6. '                           ' → logprob: -10.745988845825195
    7. '           ' → logprob: -10.995988845825195
    8. '{
' → logprob: -11.245988845825195
    9. '   ' → logprob: -11.620988845825195
    10. '```' → logprob: -12.495988845825195

Token 2877: ' next' (ID: 2613)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.13880988955497742
    2. 'next' → logprob: -2.2638099193573
    3. ' next' → logprob: -4.263809680938721
    4. ' (' → logprob: -4.513809680938721
    5. '(' → logprob: -8.013810157775879
    6. '(pos' → logprob: -8.888810157775879
    7. '(not' → logprob: -9.513810157775879
    8. '(n' → logprob: -10.763810157775879
    9. 'not' → logprob: -10.888810157775879
    10. '(len' → logprob: -11.638810157775879

Token 2878: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.021952621638774872
    2. '_pos' → logprob: -4.0219526290893555
    3. 'pos' → logprob: -7.3969526290893555
    4. 'in' → logprob: -7.7719526290893555
    5. '```' → logprob: -8.146952629089355
    6. '_masks' → logprob: -8.271952629089355
    7. ' _' → logprob: -8.396952629089355
    8. 'not' → logprob: -8.521952629089355
    9. '                   ' → logprob: -8.646952629089355
    10. ')' → logprob: -8.646952629089355

Token 2879: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4935724437236786
    2. 'not' → logprob: -0.993572473526001
    3. 'in' → logprob: -4.743572235107422
    4. '!=' → logprob: -5.743572235107422
    5. '                   ' → logprob: -6.493572235107422
    6. ')' → logprob: -6.868572235107422
    7. ' in' → logprob: -6.868572235107422
    8. ' !=' → logprob: -6.868572235107422
    9. '[next' → logprob: -7.118572235107422
    10. '               ' → logprob: -7.993572235107422

Token 2880: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.008278146386146545
    2. ' in' → logprob: -4.8832783699035645
    3. 'visited' → logprob: -7.8832783699035645
    4. '                   ' → logprob: -9.008277893066406
    5. '           ' → logprob: -9.383277893066406
    6. '               ' → logprob: -10.133277893066406
    7. '                       ' → logprob: -11.008277893066406
    8. '```' → logprob: -11.758277893066406
    9. '   ' → logprob: -12.133277893066406
    10. '[' → logprob: -12.133277893066406

Token 2881: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.6240566083070007e-06
    2. '   ' → logprob: -14.125001907348633
    3. '       ' → logprob: -15.375001907348633
    4. '           ' → logprob: -15.750001907348633
    5. ' visited' → logprob: -15.750001907348633
    6. '                   ' → logprob: -15.875001907348633
    7. '
' → logprob: -16.125001907348633
    8. '```' → logprob: -16.375001907348633
    9. '               ' → logprob: -17.500001907348633
    10. '                       ' → logprob: -18.000001907348633

Token 2882: '[end' (ID: 125653)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.029757089912891388
    2. '[end' → logprob: -3.529757022857666
    3. '[' → logprob: -12.279757499694824
    4. 'pos' → logprob: -13.904757499694824
    5. '[next' → logprob: -15.404757499694824
    6. '           ' → logprob: -15.529757499694824
    7. '
' → logprob: -15.654757499694824
    8. 'end' → logprob: -16.279756546020508
    9. '               ' → logprob: -16.654756546020508
    10. '                   ' → logprob: -16.654756546020508

Token 2883: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.5097702145576477
    2. 'pos' → logprob: -1.009770154953003
    3. '[pos' → logprob: -3.384770154953003
    4. '           ' → logprob: -7.259770393371582
    5. '       ' → logprob: -8.884770393371582
    6. '               ' → logprob: -8.884770393371582
    7. 'Pos' → logprob: -9.759770393371582
    8. '[' → logprob: -10.009770393371582
    9. '_positions' → logprob: -11.009770393371582
    10. '   ' → logprob: -11.134770393371582

Token 2884: '+' (ID: 10)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.0941949188709259
    2. '[end' → logprob: -2.5941948890686035
    3. ']' → logprob: -4.7191948890686035
    4. '[' → logprob: -6.3441948890686035
    5. '                   ' → logprob: -6.7191948890686035
    6. 'end' → logprob: -7.7191948890686035
    7. '               ' → logprob: -7.7191948890686035
    8. '```' → logprob: -7.8441948890686035
    9. '].' → logprob: -7.9691948890686035
    10. '           ' → logprob: -8.219195365905762

Token 2885: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.839121826691553e-05
    2. ' ' → logprob: -10.125078201293945
    3. '0' → logprob: -10.750078201293945
    4. '```' → logprob: -11.250078201293945
    5. '   ' → logprob: -12.875078201293945
    6. '<|end|>' → logprob: -14.375078201293945
    7. '`' → logprob: -16.375078201293945
    8. ']' → logprob: -16.375078201293945
    9. '{
' → logprob: -16.625078201293945
    10. '``' → logprob: -16.750078201293945

Token 2886: ']:
' (ID: 22152)
  Prédit: '[end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -0.6102834939956665
    2. ']:
' → logprob: -1.4852834939956665
    3. '[' → logprob: -2.485283374786377
    4. '[pos' → logprob: -2.610283374786377
    5. '                   ' → logprob: -3.360283374786377
    6. '               ' → logprob: -4.610283374786377
    7. '           ' → logprob: -4.735283374786377
    8. '                       ' → logprob: -4.985283374786377
    9. '):
' → logprob: -4.985283374786377
    10. ':
' → logprob: -6.360283374786377

Token 2887: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01886623725295067
    2. ':
' → logprob: -4.268866062164307
    3. '                   ' → logprob: -6.143866062164307
    4. '                           ' → logprob: -6.643866062164307
    5. '                               ' → logprob: -7.643866062164307
    6. '```' → logprob: -7.643866062164307
    7. ':' → logprob: -9.268866539001465
    8. '.append' → logprob: -10.393866539001465
    9. '               ' → logprob: -10.518866539001465
    10. '.add' → logprob: -10.643866539001465

Token 2888: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.03648917004466057
    2. '                               ' → logprob: -4.036489009857178
    3. '                           ' → logprob: -4.786489009857178
    4. '                       ' → logprob: -5.036489009857178
    5. '```' → logprob: -6.536489009857178
    6. 'queue' → logprob: -6.661489009857178
    7. '                   ' → logprob: -8.536489486694336
    8. ' visited' → logprob: -8.786489486694336
    9. '                                   ' → logprob: -9.911489486694336
    10. '               ' → logprob: -10.286489486694336

Token 2889: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -1.3544423381972592e-05
    2. '[' → logprob: -12.12501335144043
    3. '[pos' → logprob: -13.00001335144043
    4. '           ' → logprob: -13.12501335144043
    5. '               ' → logprob: -13.62501335144043
    6. '                   ' → logprob: -14.00001335144043
    7. '```' → logprob: -14.25001335144043
    8. '   ' → logprob: -15.25001335144043
    9. '
' → logprob: -15.50001335144043
    10. '       ' → logprob: -15.50001335144043

Token 2890: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0004931025905534625
    2. '[end' → logprob: -8.500493049621582
    3. 'pos' → logprob: -8.875493049621582
    4. '_end' → logprob: -9.250493049621582
    5. 'end' → logprob: -10.000493049621582
    6. '[pos' → logprob: -13.125493049621582
    7. 'Pos' → logprob: -13.125493049621582
    8. '=end' → logprob: -13.625493049621582
    9. '(end' → logprob: -14.500493049621582
    10. '```' → logprob: -14.500493049621582

Token 2891: '+' (ID: 10)
  Prédit: '[end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -0.01196171436458826
    2. '[pos' → logprob: -4.511961936950684
    3. '[' → logprob: -7.261961936950684
    4. '+' → logprob: -9.511961936950684
    5. '           ' → logprob: -10.011961936950684
    6. '                   ' → logprob: -10.386961936950684
    7. '               ' → logprob: -10.761961936950684
    8. '```' → logprob: -11.761961936950684
    9. '[next' → logprob: -12.136961936950684
    10. '       ' → logprob: -12.386961936950684

Token 2892: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. '
' → logprob: -13.750004768371582
    3. '```' → logprob: -13.750004768371582
    4. '0' → logprob: -13.875004768371582
    5. ' ' → logprob: -14.375004768371582
    6. '   ' → logprob: -14.625004768371582
    7. '           ' → logprob: -16.250003814697266
    8. '                   ' → logprob: -16.500003814697266
    9. '       ' → logprob: -16.625003814697266
    10. '``' → logprob: -16.812503814697266

Token 2893: '].' (ID: 1651)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2235373556613922
    2. '[pos' → logprob: -2.5985374450683594
    3. '.' → logprob: -2.7235374450683594
    4. '.add' → logprob: -3.7235374450683594
    5. '].' → logprob: -3.9735374450683594
    6. '                           ' → logprob: -5.348537445068359
    7. '                       ' → logprob: -5.598537445068359
    8. '           ' → logprob: -6.098537445068359
    9. '[j' → logprob: -6.598537445068359
    10. '                   ' → logprob: -6.723537445068359

Token 2894: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -7.896309739408025e-07
    2. '.add' → logprob: -14.250000953674316
    3. '_add' → logprob: -16.25
    4. ' add' → logprob: -18.125
    5. '	add' → logprob: -20.625
    6. '   ' → logprob: -22.0
    7. 'Add' → logprob: -22.125
    8. ')add' → logprob: -22.25
    9. '
' → logprob: -22.375
    10. 'append' → logprob: -22.5

Token 2895: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.00010437761375214905
    2. 'next' → logprob: -9.250103950500488
    3. '(' → logprob: -11.750103950500488
    4. ' next' → logprob: -15.375103950500488
    5. ' (' → logprob: -16.500104904174805
    6. '(
' → logprob: -17.875104904174805
    7. '	next' → logprob: -18.625104904174805
    8. '((' → logprob: -19.125104904174805
    9. '[next' → logprob: -19.500104904174805
    10. ',next' → logprob: -19.500104904174805

Token 2896: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.9361264946837764e-07
    2. 'mask' → logprob: -16.25
    3. '_pos' → logprob: -16.75
    4. '_MASK' → logprob: -18.375
    5. '_masks' → logprob: -18.375
    6. 'Mask' → logprob: -19.0
    7. '_m' → logprob: -19.375
    8. '\' → logprob: -19.625
    9. '_token' → logprob: -19.875
    10. '```' → logprob: -20.0

Token 2897: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5069573521614075
    2. '                       ' → logprob: -1.0069572925567627
    3. '                           ' → logprob: -4.131957530975342
    4. '                   ' → logprob: -4.756957530975342
    5. ')
' → logprob: -5.006957530975342
    6. '```' → logprob: -8.256957054138184
    7. '                               ' → logprob: -8.631957054138184
    8. '):
' → logprob: -9.006957054138184
    9. '               ' → logprob: -9.131957054138184
    10. '           ' → logprob: -9.131957054138184

Token 2898: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9541188478469849
    2. '                           ' → logprob: -1.2041188478469849
    3. '                       ' → logprob: -1.3291188478469849
    4. '                               ' → logprob: -3.4541187286376953
    5. '                   ' → logprob: -4.829118728637695
    6. '``' → logprob: -4.954118728637695
    7. '                        ' → logprob: -7.829118728637695
    8. '						' → logprob: -7.954118728637695
    9. '					' → logprob: -8.079118728637695
    10. '               ' → logprob: -8.329118728637695

Token 2899: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.010545322671532631
    2. '```' → logprob: -4.885545253753662
    3. ' queue' → logprob: -6.010545253753662
    4. '                           ' → logprob: -8.38554573059082
    5. '``' → logprob: -8.51054573059082
    6. '                               ' → logprob: -10.26054573059082
    7. '	queue' → logprob: -12.26054573059082
    8. '
' → logprob: -12.76054573059082
    9. '(queue' → logprob: -13.38554573059082
    10. '`' → logprob: -13.51054573059082

Token 2900: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00013727048644796014
    2. '.' → logprob: -9.625137329101562
    3. '.extend' → logprob: -10.375137329101562
    4. '.p' → logprob: -10.500137329101562
    5. '```' → logprob: -11.750137329101562
    6. 'append' → logprob: -14.125137329101562
    7. '.enqueue' → logprob: -14.125137329101562
    8. '.Append' → logprob: -14.375137329101562
    9. '.
' → logprob: -14.500137329101562
    10. ').' → logprob: -15.125137329101562

Token 2901: '((' (ID: 2054)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.07145712524652481
    2. '((' → logprob: -2.8214571475982666
    3. '(' → logprob: -4.6964569091796875
    4. '(pos' → logprob: -9.196456909179688
    5. '(
' → logprob: -9.321456909179688
    6. '                       ' → logprob: -10.321456909179688
    7. '(next' → logprob: -10.321456909179688
    8. '                   ' → logprob: -11.196456909179688
    9. ' (' → logprob: -11.321456909179688
    10. '                           ' → logprob: -11.446456909179688

Token 2902: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -2.9160102712921798e-05
    2. '(end' → logprob: -10.500029563903809
    3. ' end' → logprob: -13.375029563903809
    4. '   ' → logprob: -17.250028610229492
    5. ''end' → logprob: -18.750028610229492
    6. '           ' → logprob: -19.750028610229492
    7. '[end' → logprob: -19.750028610229492
    8. 'End' → logprob: -19.750028610229492
    9. '               ' → logprob: -20.125028610229492
    10. '
' → logprob: -20.250028610229492

Token 2903: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0002099773846566677
    2. 'pos' → logprob: -8.50020980834961
    3. 'Pos' → logprob: -12.25020980834961
    4. '_p' → logprob: -14.12520980834961
    5. 'end' → logprob: -15.62520980834961
    6. ',' → logprob: -15.75020980834961
    7. '_end' → logprob: -16.12520980834961
    8. '0' → logprob: -16.25020980834961
    9. '+' → logprob: -16.37520980834961
    10. ',end' → logprob: -16.50020980834961

Token 2904: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012511172099038959
    2. ' +' → logprob: -9.00012493133545
    3. ')+' → logprob: -13.62512493133545
    4. '+
' → logprob: -15.75012493133545
    5. ']+' → logprob: -16.875125885009766
    6. ')' → logprob: -17.000125885009766
    7. '+++' → logprob: -17.000125885009766
    8. '```' → logprob: -17.000125885009766
    9. ''+' → logprob: -17.500125885009766
    10. '++' → logprob: -17.500125885009766

Token 2905: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -17.0
    4. ')' → logprob: -17.375
    5. '
' → logprob: -18.75
    6. '   ' → logprob: -18.875
    7. '``' → logprob: -20.375
    8. '2' → logprob: -20.625
    9. '0' → logprob: -21.125
    10. '`' → logprob: -21.125

Token 2906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010405645705759525
    2. '))' → logprob: -5.010405540466309
    3. ')' → logprob: -6.135405540466309
    4. '))
' → logprob: -7.760405540466309
    5. ',))
' → logprob: -8.010405540466309
    6. ',
' → logprob: -8.135405540466309
    7. ',(' → logprob: -9.010405540466309
    8. '                   ' → logprob: -9.635405540466309
    9. '```' → logprob: -9.885405540466309
    10. '                       ' → logprob: -10.135405540466309

Token 2907: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.0445127372804563e-05
    2. ' next' → logprob: -11.50001049041748
    3. '(next' → logprob: -16.500009536743164
    4. '	next' → logprob: -16.625009536743164
    5. 'mask' → logprob: -17.875009536743164
    6. '   ' → logprob: -18.500009536743164
    7. '
' → logprob: -18.625009536743164
    8. '[next' → logprob: -18.750009536743164
    9. '```' → logprob: -19.375009536743164
    10. '                       ' → logprob: -20.000009536743164

Token 2908: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -3.8889261304575484e-06
    2. 'mask' → logprob: -12.500003814697266
    3. '_MASK' → logprob: -17.375003814697266
    4. '_masks' → logprob: -18.000003814697266
    5. '_m' → logprob: -18.125003814697266
    6. '_' → logprob: -18.750003814697266
    7. '_pos' → logprob: -19.000003814697266
    8. '\' → logprob: -19.125003814697266
    9. 'Mask' → logprob: -19.625003814697266
    10. '_mark' → logprob: -20.000003814697266

Token 2909: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011303400620818138
    2. ')' → logprob: -4.511303424835205
    3. '                       ' → logprob: -9.261302947998047
    4. '))
' → logprob: -9.261302947998047
    5. '                   ' → logprob: -9.886302947998047
    6. '               ' → logprob: -12.261302947998047
    7. '           ' → logprob: -12.386302947998047
    8. '       ' → logprob: -13.136302947998047
    9. ')
' → logprob: -13.511302947998047
    10. ')))' → logprob: -14.011302947998047

Token 2910: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7372533082962036
    2. '       ' → logprob: -0.8622533082962036
    3. '\n' → logprob: -3.862253189086914
    4. '   ' → logprob: -4.362253189086914
    5. '                   ' → logprob: -4.612253189086914
    6. '           ' → logprob: -4.612253189086914
    7. '
' → logprob: -4.862253189086914
    8. '               ' → logprob: -4.862253189086914
    9. '``' → logprob: -4.862253189086914
    10. '                       ' → logprob: -5.237253189086914

Token 2911: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16729231178760529
    2. '       ' → logprob: -1.9172923564910889
    3. '```' → logprob: -5.29229211807251
    4. '   ' → logprob: -6.29229211807251
    5. '
' → logprob: -9.542292594909668
    6. '``' → logprob: -9.792292594909668
    7. ' print' → logprob: -10.917292594909668
    8. '`' → logprob: -11.792292594909668
    9. '        
' → logprob: -13.167292594909668
    10. '           ' → logprob: -13.417292594909668

Token 2912: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0001984146365430206
    2. 'len' → logprob: -9.000198364257812
    3. '(' → logprob: -9.625198364257812
    4. '(f' → logprob: -12.250198364257812
    5. '()' → logprob: -12.750198364257812
    6. '(result' → logprob: -15.125198364257812
    7. '(
' → logprob: -15.125198364257812
    8. '('' → logprob: -15.250198364257812
    9. 'f' → logprob: -15.625198364257812
    10. '((' → logprob: -16.625198364257812

Token 2913: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -7.5649528298527e-05
    2. 'result' → logprob: -9.500075340270996
    3. '(' → logprob: -14.250075340270996
    4. '(res' → logprob: -18.375076293945312
    5. '(
' → logprob: -18.750076293945312
    6. '=result' → logprob: -19.125076293945312
    7. '(results' → logprob: -19.375076293945312
    8. '[result' → logprob: -20.375076293945312
    9. '	result' → logprob: -20.875076293945312
    10. '(response' → logprob: -21.000076293945312

Token 2914: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.00030829108436591923
    2. 'result' → logprob: -8.8753080368042
    3. 'Positions' → logprob: -9.7503080368042
    4. '(result' → logprob: -10.2503080368042
    5. 's' → logprob: -10.5003080368042
    6. 'positions' → logprob: -10.7503080368042
    7. '(' → logprob: -11.2503080368042
    8. '(
' → logprob: -11.8753080368042
    9. '```' → logprob: -13.2503080368042
    10. '_result' → logprob: -13.5003080368042

Token 2915: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015191456768661737
    2. '))' → logprob: -6.501519203186035
    3. '())' → logprob: -11.376519203186035
    4. '()' → logprob: -13.251519203186035
    5. ')
' → logprob: -14.126519203186035
    6. '   ' → logprob: -14.251519203186035
    7. ')))' → logprob: -14.751519203186035
    8. ')`' → logprob: -14.751519203186035
    9. ')}' → logprob: -15.001519203186035
    10. '       ' → logprob: -15.126519203186035

Token 2916: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14087869226932526
    2. '```' → logprob: -2.515878677368164
    3. 'main' → logprob: -3.640878677368164
    4. ')' → logprob: -4.640878677368164
    5. '<|end|>' → logprob: -5.140878677368164
    6. '(main' → logprob: -6.390878677368164
    7. '   ' → logprob: -6.390878677368164
    8. '#' → logprob: -6.390878677368164
    9. '()' → logprob: -6.890878677368164
    10. ' if' → logprob: -7.015878677368164

Token 2917: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0017108784522861242
    2. '__' → logprob: -6.376710891723633
    3. '_' → logprob: -12.001710891723633
    4. ' _' → logprob: -13.751710891723633
    5. '_name' → logprob: -14.501710891723633
    6. ' ' → logprob: -15.001710891723633
    7. '___' → logprob: -15.876710891723633
    8. ' ___' → logprob: -15.876710891723633
    9. '​' → logprob: -15.876710891723633
    10. ' ' → logprob: -16.751710891723633

Token 2918: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0038449708372354507
    2. '==' → logprob: -6.128844738006592
    3. '```' → logprob: -7.253844738006592
    4. ' ==' → logprob: -7.503844738006592
    5. '=="' → logprob: -9.37884521484375
    6. '__.__' → logprob: -9.62884521484375
    7. '()==' → logprob: -10.12884521484375
    8. '__":
' → logprob: -10.50384521484375
    9. '()' → logprob: -10.75384521484375
    10. '__
' → logprob: -10.87884521484375

Token 2919: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003897226182743907
    2. '==' → logprob: -6.378897190093994
    3. '```' → logprob: -6.503897190093994
    4. '=="' → logprob: -8.253897666931152
    5. '__.__' → logprob: -8.503897666931152
    6. '__":
' → logprob: -10.003897666931152
    7. ' ==' → logprob: -10.128897666931152
    8. '__
' → logprob: -10.878897666931152
    9. '=='' → logprob: -11.128897666931152
    10. '___' → logprob: -11.378897666931152

Token 2920: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7521615028381348
    2. '__' → logprob: -0.7521615028381348
    3. ' ==' → logprob: -3.2521615028381348
    4. '=="' → logprob: -4.127161502838135
    5. '=='' → logprob: -6.752161502838135
    6. '==
' → logprob: -7.877161502838135
    7. '_' → logprob: -8.377161026000977
    8. '=' → logprob: -8.752161026000977
    9. '()==' → logprob: -9.252161026000977
    10. '```' → logprob: -9.252161026000977

Token 2921: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16023163497447968
    2. ''' → logprob: -1.910231590270996
    3. '__' → logprob: -11.910231590270996
    4. ' "__' → logprob: -14.660231590270996
    5. '   ' → logprob: -16.660232543945312
    6. '`' → logprob: -17.035232543945312
    7. ' '__' → logprob: -17.160232543945312
    8. ''m' → logprob: -17.410232543945312
    9. '"\' → logprob: -18.160232543945312
    10. '```' → logprob: -18.160232543945312

Token 2922: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0004703530576080084
    2. '"' → logprob: -8.500470161437988
    3. 'main' → logprob: -8.500470161437988
    4. ''' → logprob: -9.750470161437988
    5. '__":
' → logprob: -13.000470161437988
    6. '___' → logprob: -14.000470161437988
    7. '__
' → logprob: -14.000470161437988
    8. '____' → logprob: -14.500470161437988
    9. '__':
' → logprob: -15.125470161437988
    10. 'name' → logprob: -15.750470161437988

Token 2923: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06545362621545792
    2. '__' → logprob: -2.94045352935791
    3. '():
' → logprob: -4.81545352935791
    4. '__':
' → logprob: -6.19045352935791
    5. '```' → logprob: -9.06545352935791
    6. '__()
' → logprob: -9.94045352935791
    7. '__:' → logprob: -10.44045352935791
    8. '()' → logprob: -10.69045352935791
    9. ':' → logprob: -10.81545352935791
    10. '_' → logprob: -11.31545352935791

Token 2924: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.15154403448104858
    2. '   ' → logprob: -2.2765440940856934
    3. '(main' → logprob: -3.6515440940856934
    4. '```' → logprob: -5.151544094085693
    5. '	main' → logprob: -5.651544094085693
    6. ' main' → logprob: -6.651544094085693
    7. '_main' → logprob: -7.276544094085693
    8. '():
' → logprob: -8.401543617248535
    9. ':
' → logprob: -9.276543617248535
    10. '    
' → logprob: -9.401543617248535

Token 2925: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.125
    3. '	main' → logprob: -18.625
    4. '(main' → logprob: -19.375
    5. '_main' → logprob: -19.375
    6. '```' → logprob: -20.875
    7. '   ' → logprob: -21.75
    8. '
' → logprob: -22.125
    9. 'm' → logprob: -23.0
    10. 'Main' → logprob: -23.25

Token 2926: '_full' (ID: 36973)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007201932370662689
    2. '_' → logprob: -5.2572021484375
    3. '.' → logprob: -7.0072021484375
    4. '(' → logprob: -7.6322021484375
    5. '._' → logprob: -9.0072021484375
    6. '```' → logprob: -9.1322021484375
    7. '()
' → logprob: -9.2572021484375
    8. '().' → logprob: -9.7572021484375
    9. '()`' → logprob: -10.2572021484375
    10. ')' → logprob: -10.3822021484375

Token 2927: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48230990767478943
    2. '<|end|>' → logprob: -2.1073098182678223
    3. '```' → logprob: -2.3573098182678223
    4. ')' → logprob: -2.4823098182678223
    5. '(' → logprob: -3.8573098182678223
    6. '
' → logprob: -3.9823098182678223
    7. ':' → logprob: -4.482309818267822
    8. '\n' → logprob: -4.482309818267822
    9. '#' → logprob: -4.607309818267822
    10. '(
' → logprob: -5.732309818267822


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2925
Tokens correctement prédits (1ère position, stricte): 944
Tokens correctement prédits (1ère position, avec adaptation): 1046
Tokens correctement prédits (top 10): 2090
Précision stricte (1ère position): 32.27%
Précision adaptée (1ère position): 35.76%
Précision (top 10): 71.45%
================================================================================
