================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n,m=map(int,input().split())
    if n==0 and m==0:
        break
    seats=['#']*n
    for _ in range(m):
        p=input()
        if p=='A':
            for i in range(n):
                if seats[i]=='#':
                    seats[i]='A'
                    break
        elif p=='B':
            candidates=[]
            for i in range(n-1,-1,-1):
                if seats[i]=='#':
                    left=A_pos=right=False
                    if i>0:
                        left=seats[i-1]=='A'
                    if i<n-1:
                        right=seats[i+1]=='A'
                    if not (left or right):
                        candidates.append(i)
            if candidates:
                seats[candidates[0]]='B'
            else:
                for i in range(n):
                    if seats[i]=='#':
                        seats[i]='B'
                        break
        elif p=='C':
            occupied = [i for i,v in enumerate(seats) if v!='#']
            if not occupied:
                if n%2==1:
                    mid=(n+1)//2 -1
                else:
                    mid=n//2
                seats[mid]='C'
            else:
                placed=False
                for pos in occupied:
                    right=pos+1
                    left=pos-1
                    if right<n and seats[right]=='#':
                        seats[right]='C'
                        placed=True
                        break
                    if left>=0 and seats[left]=='#':
                        seats[left]='C'
                        placed=True
                        break
                if not placed:
                    for i in range(n):
                        if seats[i]=='#':
                            seats[i]='C'
                            break
        else: # p=='D'
            occupied = [i for i,v in enumerate(seats) if v!='#']
            if not occupied:
                seats[0]='D'
            else:
                max_dist=-1
                candidate_positions=[]
                for i in range(n):
                    if seats[i]!='#':
                        continue
                    dist=min([abs(i-o) for o in occupied])
                    if dist>max_dist:
                        max_dist=dist
                        candidate_positions=[i]
                    elif dist==max_dist:
                        candidate_positions.append(i)
                seats[candidate_positions[0]]='D'
    print(''.join(seats))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2740963399410248
    2. '\' → logprob: -2.7740962505340576
    3. '```' → logprob: -3.0240962505340576
    4. '    ' → logprob: -3.2740962505340576
    5. '\n' → logprob: -3.6490962505340576
    6. '    
' → logprob: -3.8990962505340576
    7. ' ' → logprob: -4.024096488952637
    8. ' 
' → logprob: -5.649096488952637
    9. '  
' → logprob: -6.024096488952637
    10. '`' → logprob: -6.149096488952637

Token 4: ' n' (ID: 297)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8698859810829163
    2. '   ' → logprob: -1.2448859214782715
    3. ' ' → logprob: -1.6198859214782715
    4. '```' → logprob: -2.7448859214782715
    5. '       ' → logprob: -5.2448859214782715
    6. '  ' → logprob: -5.7448859214782715
    7. ' ```' → logprob: -5.7448859214782715
    8. ' (' → logprob: -6.2448859214782715
    9. '    
' → logprob: -6.3698859214782715
    10. '        ' → logprob: -6.7448859214782715

Token 5: ',m' (ID: 26648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8705378770828247
    2. '=' → logprob: -1.4955378770828247
    3. 'u' → logprob: -1.9955378770828247
    4. '   ' → logprob: -2.745537757873535
    5. 'o' → logprob: -3.245537757873535
    6. '+' → logprob: -3.745537757873535
    7. '_' → logprob: -4.245537757873535
    8. '>' → logprob: -4.245537757873535
    9. ' =' → logprob: -4.370537757873535
    10. '  ' → logprob: -4.620537757873535

Token 6: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8408176302909851
    2. ' =' → logprob: -0.9658176302909851
    3. ' ' → logprob: -1.9658176898956299
    4. ',' → logprob: -3.96581768989563
    5. ' ,' → logprob: -4.590817451477051
    6. ')' → logprob: -4.840817451477051
    7. '  ' → logprob: -5.465817451477051
    8. '[' → logprob: -6.590817451477051
    9. ' >' → logprob: -7.215817451477051
    10. '>' → logprob: -7.340817451477051

Token 7: 'map' (ID: 3726)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.823113739490509
    2. 'map' → logprob: -1.0731136798858643
    3. ' map' → logprob: -1.9481136798858643
    4. ' input' → logprob: -2.5731136798858643
    5. '0' → logprob: -9.698113441467285
    6. 'int' → logprob: -10.073113441467285
    7. ' ' → logprob: -10.698113441467285
    8. 'list' → logprob: -11.448113441467285
    9. 'raw' → logprob: -12.323113441467285
    10. '[' → logprob: -13.198113441467285

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16669471561908722
    2. '(' → logprob: -1.9166947603225708
    3. '(str' → logprob: -5.416694641113281
    4. '(lambda' → logprob: -6.541694641113281
    5. 'int' → logprob: -8.291694641113281
    6. '[int' → logprob: -9.541694641113281
    7. '(
' → logprob: -9.666694641113281
    8. '<|end|>' → logprob: -10.166694641113281
    9. '()' → logprob: -10.416694641113281
    10. '<int' → logprob: -10.666694641113281

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5653418302536011
    2. ')' → logprob: -1.065341830253601
    3. 'input' → logprob: -2.5653419494628906
    4. '(' → logprob: -5.190341949462891
    5. ',input' → logprob: -6.065341949462891
    6. ' input' → logprob: -6.440341949462891
    7. ',' → logprob: -8.19034194946289
    8. '),' → logprob: -9.44034194946289
    9. '=input' → logprob: -9.44034194946289
    10. '`)' → logprob: -10.06534194946289

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.18726912140846252
    2. '()' → logprob: -1.8122690916061401
    3. ')' → logprob: -5.43726921081543
    4. '().' → logprob: -6.31226921081543
    5. '());' → logprob: -7.93726921081543
    6. '(' → logprob: -8.06226921081543
    7. '()))' → logprob: -8.81226921081543
    8. '()),' → logprob: -9.68726921081543
    9. '()`' → logprob: -9.93726921081543
    10. '();)' → logprob: -10.06226921081543

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001613459608051926
    2. 'strip' → logprob: -8.750161170959473
    3. 'rstrip' → logprob: -13.250161170959473
    4. ' split' → logprob: -14.125161170959473
    5. '(split' → logprob: -15.000161170959473
    6. ')' → logprob: -16.37516212463379
    7. 'replace' → logprob: -19.00016212463379
    8. 'startswith' → logprob: -19.75016212463379
    9. 'spl' → logprob: -19.87516212463379
    10. '())' → logprob: -19.87516212463379

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052992165088653564
    2. '())' → logprob: -3.302992105484009
    3. '))' → logprob: -4.427992343902588
    4. '()' → logprob: -5.927992343902588
    5. '()))' → logprob: -8.92799186706543
    6. '(' → logprob: -9.80299186706543
    7. '('' → logprob: -11.05299186706543
    8. '`)' → logprob: -11.42799186706543
    9. '')' → logprob: -12.17799186706543
    10. ')")' → logprob: -12.92799186706543

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5729982852935791
    2. ':' → logprob: -1.072998285293579
    3. '<|end|>' → logprob: -2.697998285293579
    4. '```' → logprob: -4.572998046875
    5. ' if' → logprob: -4.822998046875
    6. ':
' → logprob: -6.572998046875
    7. '<|end|>' → logprob: -6.697998046875
    8. ' ' → logprob: -6.947998046875
    9. ')' → logprob: -7.197998046875
    10. '\n' → logprob: -7.447998046875

Token 14: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2523476481437683
    2. '   ' → logprob: -1.877347707748413
    3. 'if' (adapté à ' if') → logprob: -3.627347707748413
    4. '```' → logprob: -4.252347469329834
    5. '<|end|>' → logprob: -4.752347469329834
    6. '    ' → logprob: -4.752347469329834
    7. '       ' → logprob: -5.127347469329834
    8. '\n' → logprob: -6.377347469329834
    9. ' ' → logprob: -6.627347469329834
    10. ')' → logprob: -7.877347469329834

Token 15: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1648760288953781
    2. ' not' → logprob: -1.9148759841918945
    3. 'n' → logprob: -6.0398759841918945
    4. 'not' → logprob: -6.5398759841918945
    5. ' ' → logprob: -7.9148759841918945
    6. ' m' → logprob: -8.039875984191895
    7. ' ' → logprob: -9.289875984191895
    8. 'm' → logprob: -11.039875984191895
    9. '(n' → logprob: -12.414875984191895
    10. ' (' → logprob: -12.789875984191895

Token 16: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18091559410095215
    2. '==' → logprob: -2.055915594100952
    3. ' <' → logprob: -4.430915832519531
    4. ' <=' → logprob: -4.430915832519531
    5. '<' → logprob: -4.930915832519531
    6. '<=' → logprob: -6.680915832519531
    7. ' >' → logprob: -6.805915832519531
    8. '>' → logprob: -6.805915832519531
    9. ' ' → logprob: -6.930915832519531
    10. '  ' → logprob: -8.055915832519531

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10060559958219528
    2. ' ' → logprob: -2.3506054878234863
    3. 'm' → logprob: -8.100605964660645
    4. ' m' → logprob: -9.600605964660645
    5. '-' → logprob: -10.975605964660645
    6. ' -' → logprob: -13.100605964660645
    7. '  ' → logprob: -13.163105964660645
    8. '   ' → logprob: -13.288105964660645
    9. '1' → logprob: -13.413105964660645
    10. '    ' → logprob: -14.225605964660645

Token 18: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0618738979101181
    2. ':' → logprob: -3.0618739128112793
    3. 'and' → logprob: -4.436873912811279
    4. ' ' → logprob: -7.686873912811279
    5. ' :' → logprob: -7.811873912811279
    6. ' or' → logprob: -8.311873435974121
    7. '   ' → logprob: -8.811873435974121
    8. '  ' → logprob: -10.561873435974121
    9. '    ' → logprob: -10.936873435974121
    10. ' &' → logprob: -11.061873435974121

Token 19: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.018155209720134735
    2. 'm' → logprob: -4.018155097961426
    3. ' ' → logprob: -12.393155097961426
    4. '	m' → logprob: -14.143155097961426
    5. '    ' → logprob: -15.643155097961426
    6. '   ' → logprob: -15.893155097961426
    7. ' ' → logprob: -16.268156051635742
    8. '  ' → logprob: -17.268156051635742
    9. '0' → logprob: -17.893156051635742
    10. '&m' → logprob: -18.143156051635742

Token 20: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07741732895374298
    2. ' ==' → logprob: -2.7024173736572266
    3. '=' → logprob: -5.202417373657227
    4. '<|end|>' → logprob: -7.327417373657227
    5. ' ' → logprob: -7.952417373657227
    6. '```' → logprob: -8.327417373657227
    7. ' ' → logprob: -8.577417373657227
    8. '<|end|>' → logprob: -8.952417373657227
    9. '0' → logprob: -9.202417373657227
    10. '===' → logprob: -9.952417373657227

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234356038272381
    2. ' ' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.505234718322754
    4. ' ' → logprob: -16.005233764648438
    5. '```' → logprob: -16.317733764648438
    6. '  ' → logprob: -16.567733764648438
    7. '۰' → logprob: -17.567733764648438
    8. '‌' → logprob: -18.005233764648438
    9. '`' → logprob: -18.255233764648438
    10. '1' → logprob: -18.505233764648438

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003373534418642521
    2. '       ' → logprob: -6.128373622894287
    3. ':
' → logprob: -7.003373622894287
    4. '   ' → logprob: -8.253373146057129
    5. ' :' → logprob: -11.503373146057129
    6. '    ' → logprob: -12.753373146057129
    7. '      ' → logprob: -13.628373146057129
    8. ':return' → logprob: -14.003373146057129
    9. ':\' → logprob: -14.378373146057129
    10. '     ' → logprob: -14.378373146057129

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002891179174184799
    2. '   ' → logprob: -6.1278910636901855
    3. ':' → logprob: -8.252891540527344
    4. ' break' → logprob: -8.627891540527344
    5. '	break' → logprob: -9.127891540527344
    6. '\n' → logprob: -9.627891540527344
    7. '	' → logprob: -11.127891540527344
    8. 'break' → logprob: -11.502891540527344
    9. ' ' → logprob: -11.752891540527344
    10. ':
' → logprob: -11.877891540527344

Token 24: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.10646405816078186
    2. '       ' → logprob: -2.356464147567749
    3. '   ' → logprob: -5.73146390914917
    4. 'break' (adapté à ' break') → logprob: -5.85646390914917
    5. '	break' → logprob: -9.106464385986328
    6. '           ' → logprob: -11.731464385986328
    7. '```' → logprob: -12.481464385986328
    8. ' ' → logprob: -12.856464385986328
    9. '\n' → logprob: -12.856464385986328
    10. ' ' → logprob: -13.356464385986328

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5527675151824951
    2. ':' → logprob: -1.6777675151824951
    3. '\n' → logprob: -1.6777675151824951
    4. '    
' → logprob: -4.177767753601074
    5. '<|end|>' → logprob: -5.052767753601074
    6. '
' → logprob: -5.302767753601074
    7. '\' → logprob: -5.427767753601074
    8. ':
' → logprob: -6.052767753601074
    9. '       ' → logprob: -6.052767753601074
    10. '  
' → logprob: -6.302767753601074

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03411206603050232
    2. '    
' → logprob: -3.659111976623535
    3. '```' → logprob: -5.659111976623535
    4. '\n' → logprob: -6.284111976623535
    5. '
' → logprob: -7.284111976623535
    6. '       ' → logprob: -7.909111976623535
    7. 'print' → logprob: -8.159111976623535
    8. '    ' → logprob: -8.784111976623535
    9. '\' → logprob: -8.784111976623535
    10. '   
' → logprob: -9.534111976623535

Token 27: ' seats' (ID: 24992)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18226025998592377
    2. ' ' → logprob: -3.307260274887085
    3. '    ' → logprob: -3.557260274887085
    4. '[' → logprob: -3.557260274887085
    5. '       ' → logprob: -3.932260274887085
    6. '\n' → logprob: -4.432260036468506
    7. ':' → logprob: -4.682260036468506
    8. '\' → logprob: -5.057260036468506
    9. '    
' → logprob: -5.432260036468506
    10. '```' → logprob: -5.807260036468506

Token 28: '=['' (ID: 31252)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05448601394891739
    2. '=' → logprob: -3.179486036300659
    3. ' =' → logprob: -4.67948579788208
    4. '[]' → logprob: -7.92948579788208
    5. '_' → logprob: -8.304486274719238
    6. '=[' → logprob: -8.554486274719238
    7. '[:]' → logprob: -8.554486274719238
    8. '[i' → logprob: -8.804486274719238
    9. '=[]' → logprob: -8.929486274719238
    10. '.' → logprob: -9.054486274719238

Token 29: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.36670276522636414
    2. '#' → logprob: -2.2417027950286865
    3. '0' → logprob: -2.4917027950286865
    4. '*' → logprob: -3.2417027950286865
    5. '.'' → logprob: -3.9917027950286865
    6. ''' → logprob: -4.491702556610107
    7. '']' → logprob: -4.741702556610107
    8. '_' → logprob: -5.366702556610107
    9. '-' → logprob: -5.366702556610107
    10. 'o' → logprob: -5.616702556610107

Token 30: '']' (ID: 1089)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01511528342962265
    2. '.'' → logprob: -4.640115261077881
    3. ''' → logprob: -7.015115261077881
    4. '.#' → logprob: -7.015115261077881
    5. '.]' → logprob: -7.140115261077881
    6. ''*' → logprob: -7.265115261077881
    7. '']' → logprob: -7.765115261077881
    8. '..' → logprob: -8.265115737915039
    9. '*' → logprob: -8.390115737915039
    10. '#' → logprob: -8.515115737915039

Token 31: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08434084057807922
    2. '+' → logprob: -3.834340810775757
    3. '[' → logprob: -4.084341049194336
    4. ' *' → logprob: -4.084341049194336
    5. '#' → logprob: -4.709341049194336
    6. '_' → logprob: -5.084341049194336
    7. ')' → logprob: -5.709341049194336
    8. ' for' → logprob: -7.084341049194336
    9. ' ' → logprob: -7.084341049194336
    10. '.' → logprob: -7.209341049194336

Token 32: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4850703477859497
    2. 'n' → logprob: -1.8600703477859497
    3. 'm' → logprob: -2.36007022857666
    4. '(m' → logprob: -2.73507022857666
    5. '(' → logprob: -2.86007022857666
    6. ' (' → logprob: -4.73507022857666
    7. ' n' → logprob: -6.11007022857666
    8. ' m' → logprob: -7.98507022857666
    9. '9' → logprob: -9.11007022857666
    10. '((' → logprob: -9.48507022857666

Token 33: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4999051094055176
    2. '<|end|>' → logprob: -1.8749051094055176
    3. 'for' → logprob: -2.4999051094055176
    4. '\n' → logprob: -2.9999051094055176
    5. ' for' → logprob: -3.2499051094055176
    6. ' ' → logprob: -4.749905109405518
    7. '
' → logprob: -4.999905109405518
    8. '<|end|>' → logprob: -5.249905109405518
    9. '   ' → logprob: -5.374905109405518
    10. '+' → logprob: -5.374905109405518

Token 34: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.10383658856153488
    2. ' i' → logprob: -3.1038365364074707
    3. ' ' → logprob: -3.3538365364074707
    4. '_' → logprob: -3.9788365364074707
    5. 'i' → logprob: -10.353837013244629
    6. ' ‌' → logprob: -11.228837013244629
    7. ' range' → logprob: -11.478837013244629
    8. ' ▁' → logprob: -11.603837013244629
    9. '_i' → logprob: -11.978837013244629
    10. ' m' → logprob: -12.103837013244629

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055217478424310684
    2. 'in' → logprob: -2.9302175045013428
    3. 'n' → logprob: -9.180217742919922
    4. ' ' → logprob: -9.430217742919922
    5. '  ' → logprob: -10.055217742919922
    6. '	in' → logprob: -10.555217742919922
    7. 'range' → logprob: -11.430217742919922
    8. 'i' → logprob: -11.430217742919922
    9. '   ' → logprob: -11.680217742919922
    10. 'm' → logprob: -11.680217742919922

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03365181013941765
    2. ' range' → logprob: -3.408651828765869
    3. 'm' → logprob: -12.533651351928711
    4. '	range' → logprob: -14.283651351928711
    5. 'rang' → logprob: -14.533651351928711
    6. ' ' → logprob: -14.783651351928711
    7. 'ra' → logprob: -15.408651351928711
    8. '(range' → logprob: -15.533651351928711
    9. 'r' → logprob: -16.03365135192871
    10. '  ' → logprob: -16.03365135192871

Token 39: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.02777121402323246
    2. ' (' → logprob: -4.02777099609375
    3. '(' → logprob: -4.77777099609375
    4. ' m' → logprob: -7.02777099609375
    5. 'm' → logprob: -8.27777099609375
    6. '(n' → logprob: -11.65277099609375
    7. ' ' → logprob: -12.40277099609375
    8. '(s' → logprob: -12.65277099609375
    9. '	m' → logprob: -13.40277099609375
    10. '<|end|>' → logprob: -14.02777099609375

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26222288608551025
    2. ')' → logprob: -1.5122228860855103
    3. ' ):' → logprob: -5.262222766876221
    4. ' )' → logprob: -5.512222766876221
    5. ':' → logprob: -8.012223243713379
    6. '):
' → logprob: -8.262223243713379
    7. '   ' → logprob: -8.887223243713379
    8. ',' → logprob: -9.262223243713379
    9. '-' → logprob: -10.262223243713379
    10. ' ' → logprob: -10.512223243713379

Token 41: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0029551982879639
    2. '    ' → logprob: -1.5029551982879639
    3. ' s' → logprob: -2.002955198287964
    4. ' seats' → logprob: -2.252955198287964
    5. ' ' → logprob: -3.002955198287964
    6. ' line' → logprob: -3.627955198287964
    7. ' seat' → logprob: -4.127955436706543
    8. ',' → logprob: -4.627955436706543
    9. 's' → logprob: -5.002955436706543
    10. ' x' → logprob: -5.127955436706543

Token 42: ' p' (ID: 275)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.8237580060958862
    2. 'a' → logprob: -1.9487580060958862
    3. ' x' → logprob: -2.198758125305176
    4. ' l' → logprob: -2.323758125305176
    5. 'x' → logprob: -2.448758125305176
    6. ' i' → logprob: -2.573758125305176
    7. ' s' → logprob: -2.948758125305176
    8. 'l' → logprob: -3.073758125305176
    9. 'i' → logprob: -3.198758125305176
    10. 's' → logprob: -3.323758125305176

Token 43: '=input' (ID: 87911)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3737484216690063
    2. ',q' → logprob: -1.3737484216690063
    3. ',' → logprob: -2.123748302459717
    4. ',l' → logprob: -2.623748302459717
    5. ',r' → logprob: -2.748748302459717
    6. ',a' → logprob: -2.998748302459717
    7. ',s' → logprob: -3.373748302459717
    8. ',x' → logprob: -3.998748302459717
    9. 'os' → logprob: -3.998748302459717
    10. '=' → logprob: -4.498748302459717

Token 44: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2817451059818268
    2. '().' → logprob: -1.4067450761795044
    3. '(' → logprob: -8.781744956970215
    4. '()>' → logprob: -8.906744956970215
    5. '())' → logprob: -9.031744956970215
    6. '.' → logprob: -10.281744956970215
    7. ' ()' → logprob: -10.656744956970215
    8. '()<' → logprob: -10.781744956970215
    9. '("")' → logprob: -11.531744956970215
    10. ')' → logprob: -11.781744956970215

Token 45: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9292166829109192
    2. '[' → logprob: -1.4292166233062744
    3. ' for' → logprob: -2.8042166233062744
    4. ' if' → logprob: -2.9292166233062744
    5. '<|end|>' → logprob: -3.4292166233062744
    6. ' p' → logprob: -3.5542166233062744
    7. ' 
' → logprob: -3.6792166233062744
    8. '   ' → logprob: -4.0542168617248535
    9. 's' → logprob: -4.3042168617248535
    10. ''' → logprob: -4.4292168617248535

Token 47: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.48524215817451477
    2. ''' → logprob: -1.7352421283721924
    3. ' '' → logprob: -2.4852421283721924
    4. 'p' → logprob: -2.6102421283721924
    5. '"' → logprob: -4.1102423667907715
    6. ' '#'' → logprob: -4.1102423667907715
    7. ''p' → logprob: -5.8602423667907715
    8. ' len' → logprob: -5.8602423667907715
    9. ' ' → logprob: -5.9852423667907715
    10. ''#' → logprob: -6.1102423667907715

Token 48: '=='' (ID: 20651)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09869584441184998
    2. ' in' → logprob: -2.973695755004883
    3. '==' → logprob: -3.848695755004883
    4. '.startswith' → logprob: -4.973695755004883
    5. ' ==' → logprob: -5.098695755004883
    6. ' not' → logprob: -5.723695755004883
    7. '.count' → logprob: -7.348695755004883
    8. '.' → logprob: -7.473695755004883
    9. ' [' → logprob: -7.473695755004883
    10. '!=' → logprob: -7.723695755004883

Token 49: 'A' (ID: 32)
  Prédit: 'LEFT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LEFT' → logprob: -1.0005249977111816
    2. 'LL' → logprob: -2.5005249977111816
    3. '"' → logprob: -3.0005249977111816
    4. 'L' → logprob: -3.1255249977111816
    5. 'left' → logprob: -3.3755249977111816
    6. '0' → logprob: -3.3755249977111816
    7. '#' → logprob: -3.5005249977111816
    8. 'C' → logprob: -3.8755249977111816
    9. 'END' → logprob: -3.8755249977111816
    10. ''' → logprob: -3.8755249977111816

Token 50: '':
' (ID: 7669)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -1.7149832248687744
    2. '#' → logprob: -1.8399832248687744
    3. 'C' → logprob: -1.9649832248687744
    4. 'LL' → logprob: -2.2149832248687744
    5. 'I' → logprob: -2.5899832248687744
    6. 'L' → logprob: -2.7149832248687744
    7. '+' → logprob: -2.9649832248687744
    8. 'A' → logprob: -3.7774832248687744
    9. 'c' → logprob: -4.214982986450195
    10. '*' → logprob: -4.277482986450195

Token 51: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8188785314559937
    2. '       ' → logprob: -1.0688785314559937
    3. '    ' → logprob: -3.318878650665283
    4. ' #' → logprob: -3.693878650665283
    5. 'for' → logprob: -3.943878650665283
    6. '<|end|>' → logprob: -4.068878650665283
    7. '   ' → logprob: -4.193878650665283
    8. '        ' → logprob: -4.318878650665283
    9. ' ' → logprob: -4.693878650665283
    10. ' while' → logprob: -4.943878650665283

Token 52: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33374953269958496
    2. 'for' (adapté à ' for') → logprob: -2.208749532699585
    3. ' i' → logprob: -2.458749532699585
    4. 'i' → logprob: -3.958749532699585
    5. ' idx' → logprob: -4.083749771118164
    6. ' found' → logprob: -4.333749771118164
    7. ' try' → logprob: -4.333749771118164
    8. ' pass' → logprob: -4.833749771118164
    9. ' #' → logprob: -5.208749771118164
    10. 'idx' → logprob: -6.083749771118164

Token 53: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04861347749829292
    2. 'i' → logprob: -3.0486135482788086
    3. ' ' → logprob: -12.173613548278809
    4. 'j' → logprob: -12.298613548278809
    5. ' j' → logprob: -12.298613548278809
    6. ' idx' → logprob: -12.798613548278809
    7. '	i' → logprob: -12.923613548278809
    8. ' ' → logprob: -13.798613548278809
    9. '_' → logprob: -14.173613548278809
    10. '_i' → logprob: -14.173613548278809

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007130908314138651
    2. 'in' → logprob: -5.007131099700928
    3. ' ' → logprob: -8.38213062286377
    4. ',' → logprob: -9.00713062286377
    5. 'range' → logprob: -10.50713062286377
    6. ' range' → logprob: -11.00713062286377
    7. 'n' → logprob: -11.75713062286377
    8. 's' → logprob: -13.38213062286377
    9. 'ange' → logprob: -13.75713062286377
    10. ')' → logprob: -13.75713062286377

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17980757355690002
    2. ' range' → logprob: -1.8048075437545776
    3. 'se' → logprob: -9.804807662963867
    4. ' ' → logprob: -13.804807662963867
    5. 'ran' → logprob: -13.804807662963867
    6. 'r' → logprob: -13.929807662963867
    7. 'rang' → logprob: -13.929807662963867
    8. '	range' → logprob: -14.304807662963867
    9. '  ' → logprob: -14.679807662963867
    10. '(range' → logprob: -14.929807662963867

Token 56: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03411010280251503
    2. 'n' → logprob: -4.034110069274902
    3. ' n' → logprob: -4.659110069274902
    4. '(len' → logprob: -5.409110069274902
    5. '(' → logprob: -6.409110069274902
    6. 'len' → logprob: -8.909110069274902
    7. ' (' → logprob: -10.159110069274902
    8. ' len' → logprob: -10.909110069274902
    9. '   ' → logprob: -11.159110069274902
    10. '	n' → logprob: -11.659110069274902

Token 57: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5236291289329529
    2. '):' → logprob: -0.8986291289329529
    3. ' ):' → logprob: -8.773629188537598
    4. ' ):
' → logprob: -8.898629188537598
    5. '):
' → logprob: -9.023629188537598
    6. '-' → logprob: -10.523629188537598
    7. ':' → logprob: -10.898629188537598
    8. ' ' → logprob: -11.898629188537598
    9. '   ' → logprob: -12.023629188537598
    10. ')' → logprob: -12.023629188537598

Token 58: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48695361614227295
    2. '<|end|>' → logprob: -1.111953616142273
    3. '       ' → logprob: -4.2369537353515625
    4. ':' → logprob: -4.2369537353515625
    5. '               ' → logprob: -4.4869537353515625
    6. ' ' → logprob: -5.3619537353515625
    7. '<|end|>' → logprob: -5.8619537353515625
    8. ' and' → logprob: -6.1119537353515625
    9. 'if' → logprob: -6.3619537353515625
    10. ' #' → logprob: -7.2369537353515625

Token 59: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16245533525943756
    2. 'if' (adapté à ' if') → logprob: -1.9124553203582764
    3. '<|end|>' → logprob: -6.5374555587768555
    4. ' ' → logprob: -8.037455558776855
    5. '               ' → logprob: -8.912455558776855
    6. '           ' → logprob: -9.412455558776855
    7. 'se' → logprob: -9.912455558776855
    8. ')' → logprob: -10.537455558776855
    9. ':' → logprob: -10.787455558776855
    10. 's' → logprob: -11.037455558776855

Token 60: ' seats' (ID: 24992)
  Prédit: ' seats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seats' → logprob: -0.11300843209028244
    2. 'se' → logprob: -2.238008499145508
    3. ' seat' → logprob: -10.238008499145508
    4. 's' → logprob: -10.738008499145508
    5. ' ' → logprob: -10.738008499145508
    6. 'seat' → logprob: -10.863008499145508
    7. ' se' → logprob: -11.113008499145508
    8. '<|end|>' → logprob: -11.113008499145508
    9. '	se' → logprob: -11.613008499145508
    10. '(se' → logprob: -12.113008499145508

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8074162653647363e-05
    2. '[' → logprob: -11.000018119812012
    3. 'i' → logprob: -14.250018119812012
    4. '[j' → logprob: -15.250018119812012
    5. '[
' → logprob: -16.625017166137695
    6. '```' → logprob: -16.750017166137695
    7. '[in' → logprob: -17.500017166137695
    8. '

' → logprob: -17.625017166137695
    9. '==' → logprob: -17.625017166137695
    10. '[#' → logprob: -18.250017166137695

Token 62: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.17120350897312164
    2. ']=='' → logprob: -2.79620361328125
    3. '==' → logprob: -3.17120361328125
    4. ' ==' → logprob: -3.42120361328125
    5. ']==' → logprob: -4.29620361328125
    6. ']' → logprob: -5.79620361328125
    7. ' =='' → logprob: -5.92120361328125
    8. ')=='' → logprob: -7.29620361328125
    9. '']=='' → logprob: -7.92120361328125
    10. '=="' → logprob: -8.04620361328125

Token 63: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00015133652777876705
    2. ''#' → logprob: -9.500151634216309
    3. '.' → logprob: -10.875151634216309
    4. '#:' → logprob: -11.000151634216309
    5. ''' → logprob: -11.625151634216309
    6. '-' → logprob: -12.000151634216309
    7. '0' → logprob: -12.125151634216309
    8. '_' → logprob: -12.250151634216309
    9. '':' → logprob: -12.250151634216309
    10. '*' → logprob: -12.625151634216309

Token 64: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.12464733421802521
    2. ' ':' → logprob: -2.499647378921509
    3. ' '' → logprob: -3.999647378921509
    4. ':' → logprob: -4.62464714050293
    5. ''' → logprob: -5.37464714050293
    6. '):' → logprob: -6.99964714050293
    7. '':
' → logprob: -7.49964714050293
    8. '#' → logprob: -8.37464714050293
    9. ''):' → logprob: -9.12464714050293
    10. ')' → logprob: -9.49964714050293

Token 65: '                   ' (ID: 699)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.42722395062446594
    2. '               ' → logprob: -1.9272239208221436
    3. 's' → logprob: -2.6772239208221436
    4. ' seats' → logprob: -3.5522239208221436
    5. '                   ' → logprob: -3.8022239208221436
    6. '<|end|>' → logprob: -3.9272239208221436
    7. '           ' → logprob: -4.302224159240723
    8. ''s' → logprob: -4.802224159240723
    9. ' ' → logprob: -5.552224159240723
    10. '       ' → logprob: -5.552224159240723

Token 66: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.09557726979255676
    2. 's' → logprob: -3.0955772399902344
    3. ' seats' → logprob: -3.3455772399902344
    4. '                   ' → logprob: -6.595577239990234
    5. 'seat' → logprob: -6.720577239990234
    6. ''s' → logprob: -6.720577239990234
    7. ''' → logprob: -7.095577239990234
    8. ' ' → logprob: -7.595577239990234
    9. ' A' → logprob: -7.720577239990234
    10. 'A' → logprob: -7.720577239990234

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5451681974809617e-05
    2. '[' → logprob: -11.125015258789062
    3. '[I' → logprob: -15.250015258789062
    4. '=' → logprob: -16.375015258789062
    5. '```' → logprob: -16.750015258789062
    6. ' [' → logprob: -16.875015258789062
    7. '[
' → logprob: -17.000015258789062
    8. '['' → logprob: -17.250015258789062
    9. '[a' → logprob: -18.000015258789062
    10. '[:]' → logprob: -18.000015258789062

Token 68: ']='' (ID: 69193)
  Prédit: ']=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']='' → logprob: -0.6161810755729675
    2. ']' → logprob: -1.1161811351776123
    3. ']=' → logprob: -2.6161811351776123
    4. '='' → logprob: -2.9911811351776123
    5. ']=='' → logprob: -5.241180896759033
    6. '=' → logprob: -6.616180896759033
    7. '=='' → logprob: -6.991180896759033
    8. ']==' → logprob: -8.116181373596191
    9. '']='' → logprob: -8.116181373596191
    10. '='#' → logprob: -8.241181373596191

Token 69: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07193691283464432
    2. 'I' → logprob: -4.071937084197998
    3. 'a' → logprob: -4.196937084197998
    4. 'C' → logprob: -4.321937084197998
    5. 'i' → logprob: -5.071937084197998
    6. 'P' → logprob: -5.696937084197998
    7. 'J' → logprob: -5.821937084197998
    8. 'O' → logprob: -6.071937084197998
    9. 'X' → logprob: -6.321937084197998
    10. 'o' → logprob: -6.821937084197998

Token 70: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04733293130993843
    2. ''
' → logprob: -3.172333002090454
    3. ''#' → logprob: -5.922332763671875
    4. ''
' → logprob: -6.922332763671875
    5. '#' → logprob: -7.547332763671875
    6. ''

' → logprob: -10.797332763671875
    7. ''s' → logprob: -10.922332763671875
    8. ' '' → logprob: -11.047332763671875
    9. '')' → logprob: -11.797332763671875
    10. '"' → logprob: -12.172332763671875

Token 71: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05683436617255211
    2. '<|end|>' → logprob: -3.0568344593048096
    3. ' break' → logprob: -5.9318342208862305
    4. 'break' → logprob: -6.8068342208862305
    5. '<|end|>' → logprob: -6.8068342208862305
    6. '               ' → logprob: -6.9318342208862305
    7. '				' → logprob: -7.4318342208862305
    8. '                    
' → logprob: -8.05683422088623
    9. ' ' → logprob: -8.68183422088623
    10. '		           ' → logprob: -9.05683422088623

Token 72: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.386966735124588
    2. 'break' (adapté à ' break') → logprob: -1.1369667053222656
    3. '                   ' → logprob: -9.761966705322266
    4. '	break' → logprob: -10.886966705322266
    5. '               ' → logprob: -12.261966705322266
    6. '   ' → logprob: -12.761966705322266
    7. 'b' → logprob: -13.136966705322266
    8. '           ' → logprob: -13.386966705322266
    9. 'print' → logprob: -13.386966705322266
    10. '                           ' → logprob: -13.886966705322266

Token 73: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0376900434494019
    2. ' else' → logprob: -2.0376901626586914
    3. '<|end|>' → logprob: -2.1626901626586914
    4. '   ' → logprob: -2.4126901626586914
    5. '       ' → logprob: -2.5376901626586914
    6. 'elif' → logprob: -2.9126901626586914
    7. '
' → logprob: -3.0376901626586914
    8. 'else' → logprob: -3.1626901626586914
    9. '```' → logprob: -3.6626901626586914
    10. ' elif' → logprob: -3.9126901626586914

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45977917313575745
    2. 'elif' → logprob: -1.459779143333435
    3. 'else' → logprob: -2.5847792625427246
    4. ' elif' → logprob: -3.5847792625427246
    5. '   ' → logprob: -3.8347792625427246
    6. ' else' → logprob: -4.709779262542725
    7. '	elif' → logprob: -6.709779262542725
    8. ' ' → logprob: -8.334778785705566
    9. '```' → logprob: -8.459778785705566
    10. '<|end|>' → logprob: -8.709778785705566

Token 75: ' elif' (ID: 9497)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.4555630683898926
    2. 'else' → logprob: -1.4555630683898926
    3. 'elif' (adapté à ' elif') → logprob: -1.5805630683898926
    4. ' elif' → logprob: -1.7055630683898926
    5. '       ' → logprob: -1.9555630683898926
    6. '   ' → logprob: -5.955563068389893
    7. ' ' → logprob: -7.330563068389893
    8. '	elif' → logprob: -7.705563068389893
    9. '```' → logprob: -7.955563068389893
    10. '  ' → logprob: -9.705562591552734

Token 76: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.005258303135633469
    2. ''' → logprob: -6.130258083343506
    3. ' ' → logprob: -6.380258083343506
    4. ' '' → logprob: -6.880258083343506
    5. 'p' → logprob: -8.880258560180664
    6. ''p' → logprob: -9.755258560180664
    7. ' ' → logprob: -9.880258560180664
    8. ' B' → logprob: -10.380258560180664
    9. '"' → logprob: -11.255258560180664
    10. '`' → logprob: -11.755258560180664

Token 77: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.002103625563904643
    2. '==' → logprob: -6.252103805541992
    3. ' =='' → logprob: -9.127103805541992
    4. '=="' → logprob: -10.627103805541992
    5. ' ==' → logprob: -10.627103805541992
    6. '='' → logprob: -12.252103805541992
    7. ']=='' → logprob: -12.502103805541992
    8. '==='' → logprob: -12.877103805541992
    9. '=' → logprob: -13.127103805541992
    10. ''' → logprob: -13.877103805541992

Token 78: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008890504948794842
    2. 'L' → logprob: -5.883890628814697
    3. 'C' → logprob: -7.258890628814697
    4. 'A' → logprob: -7.383890628814697
    5. 'M' → logprob: -7.383890628814697
    6. 'D' → logprob: -7.508890628814697
    7. 'J' → logprob: -7.633890628814697
    8. 'G' → logprob: -7.758890628814697
    9. 'R' → logprob: -7.758890628814697
    10. 'P' → logprob: -7.758890628814697

Token 79: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6074761748313904
    2. ':' → logprob: -1.1074762344360352
    3. '':
' → logprob: -2.482476234436035
    4. ''' → logprob: -3.357476234436035
    5. ':
' → logprob: -5.982476234436035
    6. ' '' → logprob: -6.107476234436035
    7. ' ':' → logprob: -7.357476234436035
    8. ' :' → logprob: -7.857476234436035
    9. '':
' → logprob: -8.232476234436035
    10. '   ' → logprob: -9.107476234436035

Token 80: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4754922389984131
    2. ':
' → logprob: -0.9754922389984131
    3. '           ' → logprob: -7.225492477416992
    4. '       ' → logprob: -8.225492477416992
    5. ':

' → logprob: -9.600492477416992
    6. ' for' → logprob: -9.600492477416992
    7. ' or' → logprob: -9.850492477416992
    8. ' and' → logprob: -10.100492477416992
    9. '   ' → logprob: -10.100492477416992
    10. '=' → logprob: -10.725492477416992

Token 81: ' candidates' (ID: 18116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3921482563018799
    2. ' for' → logprob: -1.1421482563018799
    3. ' found' → logprob: -6.392148017883301
    4. 'found' → logprob: -6.642148017883301
    5. 'count' → logprob: -7.142148017883301
    6. ' i' → logprob: -8.0171480178833
    7. ' count' → logprob: -8.6421480178833
    8. 'i' → logprob: -8.6421480178833
    9. '       ' → logprob: -9.0171480178833
    10. '           ' → logprob: -9.2671480178833

Token 82: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7396863698959351
    2. '=[]' → logprob: -0.7396863698959351
    3. '=[' → logprob: -3.1146864891052246
    4. ' =' → logprob: -7.114686489105225
    5. '=[],' → logprob: -9.364686012268066
    6. '=[]
' → logprob: -9.864686012268066
    7. '=find' → logprob: -11.239686012268066
    8. '=list' → logprob: -11.239686012268066
    9. '=i' → logprob: -11.239686012268066
    10. '={}' → logprob: -11.489686012268066

Token 83: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12903037667274475
    2. 'for' → logprob: -2.129030466079712
    3. ' ' → logprob: -8.004030227661133
    4. '<|end|>' → logprob: -8.129030227661133
    5. '   ' → logprob: -8.254030227661133
    6. '=' → logprob: -8.379030227661133
    7. ' =' → logprob: -8.754030227661133
    8. '=[]
' → logprob: -8.879030227661133
    9. ':' → logprob: -9.004030227661133
    10. '=[]' → logprob: -9.254030227661133

Token 84: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.43189525604248047
    2. ' for' → logprob: -1.0568952560424805
    3. 'i' → logprob: -6.4318952560424805
    4. ' i' → logprob: -7.0568952560424805
    5. 'last' → logprob: -8.30689525604248
    6. ' last' → logprob: -8.80689525604248
    7. 'prev' → logprob: -9.30689525604248
    8. '           ' → logprob: -9.93189525604248
    9. 'indices' → logprob: -10.55689525604248
    10. 'current' → logprob: -10.55689525604248

Token 85: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0486072339117527
    2. 'i' → logprob: -3.048607349395752
    3. ' ' → logprob: -11.548606872558594
    4. '	i' → logprob: -12.673606872558594
    5. ' j' → logprob: -13.423606872558594
    6. 'j' → logprob: -13.673606872558594
    7. ' ' → logprob: -14.048606872558594
    8. '```' → logprob: -14.736106872558594
    9. '<|end|>' → logprob: -14.798606872558594
    10. '  ' → logprob: -15.048606872558594

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006310671451501548
    2. 'in' → logprob: -7.500630855560303
    3. ',' → logprob: -10.000631332397461
    4. ' ' → logprob: -11.250631332397461
    5. 'range' → logprob: -11.750631332397461
    6. ' range' → logprob: -12.125631332397461
    7. 'n' → logprob: -13.000631332397461
    8. ' i' → logprob: -13.000631332397461
    9. ')' → logprob: -14.750631332397461
    10. 'i' → logprob: -15.500631332397461

Token 87: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.428728312253952
    2. ' range' → logprob: -1.0537283420562744
    3. ' ' → logprob: -11.553728103637695
    4. 'se' → logprob: -11.678728103637695
    5. '  ' → logprob: -13.303728103637695
    6. '   ' → logprob: -13.553728103637695
    7. '	range' → logprob: -13.553728103637695
    8. '(range' → logprob: -14.053728103637695
    9. 'r' → logprob: -14.178728103637695
    10. 'ran' → logprob: -14.616228103637695

Token 88: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12826594710350037
    2. ' range' → logprob: -2.128265857696533
    3. '(range' → logprob: -6.753265857696533
    4. '(' → logprob: -8.753266334533691
    5. 'se' → logprob: -12.628266334533691
    6. '(n' → logprob: -12.878266334533691
    7. 'n' → logprob: -13.628266334533691
    8. 'r' → logprob: -14.128266334533691
    9. '	range' → logprob: -14.128266334533691
    10. 'ran' → logprob: -14.378266334533691

Token 89: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25651171803474426
    2. '):' → logprob: -1.5065116882324219
    3. '-' → logprob: -5.756511688232422
    4. '):

' → logprob: -8.256511688232422
    5. '+' → logprob: -8.756511688232422
    6. '       ' → logprob: -8.881511688232422
    7. ')' → logprob: -8.881511688232422
    8. '           ' → logprob: -8.881511688232422
    9. '):
' → logprob: -9.006511688232422
    10. ':' → logprob: -9.256511688232422

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11329001188278198
    2. '2' → logprob: -2.2382900714874268
    3. ' ' → logprob: -7.988289833068848
    4. '3' → logprob: -9.238289833068848
    5. '-' → logprob: -11.238289833068848
    6. '   ' → logprob: -12.800789833068848
    7. '4' → logprob: -12.925789833068848
    8. '

' → logprob: -12.988289833068848
    9. ')' → logprob: -13.113289833068848
    10. '```' → logprob: -13.738289833068848

Token 91: ',-' (ID: 8202)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4391661584377289
    2. '):' → logprob: -1.0641661882400513
    3. '):
' → logprob: -5.314166069030762
    4. ')' → logprob: -6.689166069030762
    5. '           ' → logprob: -7.064166069030762
    6. ',' → logprob: -7.189166069030762
    7. ':' → logprob: -7.564166069030762
    8. '-' → logprob: -8.189166069030762
    9. '):

' → logprob: -8.314166069030762
    10. '               ' → logprob: -8.314166069030762

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -12.25001049041748
    3. '2' → logprob: -13.62501049041748
    4. '-' → logprob: -14.18751049041748
    5. '

' → logprob: -14.56251049041748
    6. '   ' → logprob: -14.62501049041748
    7. '```' → logprob: -14.81251049041748
    8. '0' → logprob: -15.00001049041748
    9. ' -' → logprob: -15.12501049041748
    10. '
' → logprob: -15.18751049041748

Token 93: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7061125040054321
    2. ',-' → logprob: -0.8311125040054321
    3. '1' → logprob: -2.7061123847961426
    4. '-' → logprob: -5.581112384796143
    5. ' ,' → logprob: -9.3311128616333
    6. '```' → logprob: -9.3311128616333
    7. '   ' → logprob: -10.4561128616333
    8. ' -' → logprob: -10.4561128616333
    9. ' ,-' → logprob: -10.8311128616333
    10. ' ' → logprob: -11.7061128616333

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.375006675720215
    3. '2' → logprob: -13.875006675720215
    4. '   ' → logprob: -14.562506675720215
    5. '
' → logprob: -14.687506675720215
    6. '```' → logprob: -15.562506675720215
    7. '１' → logprob: -16.31250762939453
    8. '0' → logprob: -16.37500762939453
    9. '``' → logprob: -16.37500762939453
    10. '

' → logprob: -16.62500762939453

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09125880897045135
    2. '):
' → logprob: -2.5912587642669678
    3. ',' → logprob: -4.591259002685547
    4. ':' → logprob: -6.591259002685547
    5. ')' → logprob: -7.966259002685547
    6. '):

' → logprob: -9.716259002685547
    7. ' ):' → logprob: -9.841259002685547
    8. '):
' → logprob: -9.966259002685547
    9. '   ' → logprob: -10.216259002685547
    10. '-' → logprob: -10.466259002685547

Token 96: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2916370928287506
    2. '<|end|>' → logprob: -1.9166370630264282
    3. ':
' → logprob: -2.6666371822357178
    4. '               ' → logprob: -4.541636943817139
    5. ' if' → logprob: -4.541636943817139
    6. ' ' → logprob: -5.041636943817139
    7. '<|end|>' → logprob: -5.416636943817139
    8. '       ' → logprob: -7.416636943817139
    9. '):
' → logprob: -7.791636943817139
    10. 'if' → logprob: -8.166637420654297

Token 97: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0977080687880516
    2. 'if' (adapté à ' if') → logprob: -3.222707986831665
    3. '<|end|>' → logprob: -3.222707986831665
    4. ' ' → logprob: -4.847708225250244
    5. '               ' → logprob: -5.847708225250244
    6. '       ' → logprob: -7.347708225250244
    7. '   ' → logprob: -7.722708225250244
    8. '
' → logprob: -8.097707748413086
    9. '<|end|>' → logprob: -8.097707748413086
    10. ' 
' → logprob: -8.347707748413086

Token 98: ' seats' (ID: 24992)
  Prédit: ' seats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seats' → logprob: -0.3134230077266693
    2. 'se' → logprob: -1.3134230375289917
    3. ' se' → logprob: -9.938423156738281
    4. 's' → logprob: -10.188423156738281
    5. '_se' → logprob: -11.313423156738281
    6. '(se' → logprob: -11.438423156738281
    7. '	se' → logprob: -11.438423156738281
    8. ' ' → logprob: -11.688423156738281
    9. 'Seats' → logprob: -12.188423156738281
    10. 'n' → logprob: -12.188423156738281

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.500004768371582
    3. '[
' → logprob: -14.750004768371582
    4. 'i' → logprob: -15.375004768371582
    5. '
' → logprob: -16.2500057220459
    6. '[I' → logprob: -16.3750057220459
    7. ' [' → logprob: -16.5000057220459
    8. '```' → logprob: -16.6250057220459
    9. '[#' → logprob: -16.6250057220459
    10. '[j' → logprob: -16.7500057220459

Token 100: ']=='' (ID: 71177)
  Prédit: ']==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.04980019852519035
    2. '=='' → logprob: -3.174800157546997
    3. ']==' → logprob: -5.549800395965576
    4. ']' → logprob: -6.299800395965576
    5. '']=='' → logprob: -7.674800395965576
    6. ' =='' → logprob: -8.299799919128418
    7. ')=='' → logprob: -8.549799919128418
    8. ']!='' → logprob: -9.674799919128418
    9. ' ]' → logprob: -9.924799919128418
    10. ']=="' → logprob: -11.799799919128418

Token 101: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00011927806917810813
    2. ''#' → logprob: -9.25011920928955
    3. '#:' → logprob: -12.12511920928955
    4. '#
' → logprob: -12.37511920928955
    5. 'A' → logprob: -12.50011920928955
    6. ''' → logprob: -12.75011920928955
    7. ' #' → logprob: -14.37511920928955
    8. 'B' → logprob: -14.50011920928955
    9. ' '#'' → logprob: -14.50011920928955
    10. '#"' → logprob: -14.56261920928955

Token 102: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43600958585739136
    2. '':
' → logprob: -1.6860096454620361
    3. ':' → logprob: -2.311009645462036
    4. '':' → logprob: -3.936009645462036
    5. '                   ' → logprob: -4.061009407043457
    6. ' and' → logprob: -4.811009407043457
    7. '']:
' → logprob: -4.936009407043457
    8. ']:
' → logprob: -5.561009407043457
    9. '               ' → logprob: -5.686009407043457
    10. ''):
' → logprob: -5.686009407043457

Token 103: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02276282012462616
    2. ':' → logprob: -4.647762775421143
    3. '               ' → logprob: -5.272762775421143
    4. ':
' → logprob: -5.772762775421143
    5. '           ' → logprob: -7.022762775421143
    6. '):
' → logprob: -7.147762775421143
    7. '                       ' → logprob: -7.272762775421143
    8. ' and' → logprob: -7.272762775421143
    9. '<|end|>' → logprob: -7.772762775421143
    10. ' candidates' → logprob: -7.897762775421143

Token 104: ' left' (ID: 3561)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05583682283759117
    2. ' candidates' → logprob: -2.9308369159698486
    3. '                   ' → logprob: -7.5558366775512695
    4. 'se' → logprob: -8.43083667755127
    5. '               ' → logprob: -9.43083667755127
    6. ' seats' → logprob: -10.30583667755127
    7. ' c' → logprob: -10.55583667755127
    8. '   ' → logprob: -10.68083667755127
    9. 'b' → logprob: -11.05583667755127
    10. '           ' → logprob: -11.55583667755127

Token 105: '=A' (ID: 112591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41866761445999146
    2. '=i' → logprob: -1.4186675548553467
    3. ' =' → logprob: -2.5436675548553467
    4. '_se' → logprob: -5.418667793273926
    5. '=True' → logprob: -5.543667793273926
    6. '_space' → logprob: -6.418667793273926
    7. '_count' → logprob: -6.918667793273926
    8. 'se' → logprob: -6.918667793273926
    9. 'i' → logprob: -7.043667793273926
    10. '_distance' → logprob: -7.293667793273926

Token 106: '_pos' (ID: 14692)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11577275395393372
    2. 'll' → logprob: -3.4907727241516113
    3. 'b' → logprob: -4.365772724151611
    4. 'bs' → logprob: -4.740772724151611
    5. 'v' → logprob: -4.865772724151611
    6. 'B' → logprob: -4.865772724151611
    7. 'l' → logprob: -4.990772724151611
    8. 'if' → logprob: -5.115772724151611
    9. ' i' → logprob: -5.365772724151611
    10. '[i' → logprob: -5.740772724151611

Token 107: '=' (ID: 28)
  Prédit: '=i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=i' → logprob: -1.5283890962600708
    2. ' =' → logprob: -1.6533890962600708
    3. '[i' → logprob: -2.2783889770507812
    4. 'nd' → logprob: -2.2783889770507812
    5. 'i' → logprob: -2.4033889770507812
    6. '=' → logprob: -2.5283889770507812
    7. '(i' → logprob: -3.4033889770507812
    8. ' i' → logprob: -3.4033889770507812
    9. 's' → logprob: -3.5283889770507812
    10. '.append' → logprob: -4.778388977050781

Token 108: 'right' (ID: 2460)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014002007432281971
    2. ' i' → logprob: -6.139001846313477
    3. 'None' → logprob: -6.139001846313477
    4. 'se' → logprob: -6.264001846313477
    5. 'False' → logprob: -6.264001846313477
    6. '-' → logprob: -6.764001846313477
    7. 'right' → logprob: -6.764001846313477
    8. 'max' → logprob: -7.014001846313477
    9. 'B' → logprob: -7.764001846313477
    10. '0' → logprob: -7.764001846313477

Token 109: '=False' (ID: 12148)
  Prédit: '=i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=i' → logprob: -0.05392976850271225
    2. '=' → logprob: -3.3039298057556152
    3. '=None' → logprob: -4.553929805755615
    4. '=-' → logprob: -6.178929805755615
    5. '=A' → logprob: -6.928929805755615
    6. '=B' → logprob: -7.178929805755615
    7. '=j' → logprob: -7.803929805755615
    8. '=max' → logprob: -8.428929328918457
    9. 'i' → logprob: -8.678929328918457
    10. ' =' → logprob: -8.678929328918457

Token 110: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20722326636314392
    2. '<|end|>' → logprob: -2.2072231769561768
    3. ' for' → logprob: -3.4572231769561768
    4. '
' → logprob: -4.707223415374756
    5. '                    
' → logprob: -5.082223415374756
    6. ' 
' → logprob: -5.207223415374756
    7. 'for' → logprob: -5.332223415374756
    8. '<|end|>' → logprob: -5.582223415374756
    9. ',' → logprob: -5.707223415374756
    10. '               ' → logprob: -5.957223415374756

Token 112: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3822133541107178
    2. '                   ' → logprob: -1.8822133541107178
    3. 'for' → logprob: -3.2572133541107178
    4. ' i' → logprob: -3.5072133541107178
    5. '<|end|>' → logprob: -3.6322133541107178
    6. ' ' → logprob: -3.8822133541107178
    7. ' if' → logprob: -4.007213592529297
    8. '                    ' → logprob: -4.882213592529297
    9. ' while' → logprob: -6.007213592529297
    10. ' j' → logprob: -6.257213592529297

Token 113: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06219892203807831
    2. 'i' → logprob: -2.8121988773345947
    3. ' ' → logprob: -9.562198638916016
    4. '   ' → logprob: -9.937198638916016
    5. '(i' → logprob: -10.437198638916016
    6. '    ' → logprob: -11.062198638916016
    7. ' (' → logprob: -11.187198638916016
    8. '  ' → logprob: -11.437198638916016
    9. '     ' → logprob: -12.062198638916016
    10. '0' → logprob: -12.562198638916016

Token 114: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.34800881147384644
    2. '-' → logprob: -1.5980088710784912
    3. ' >' → logprob: -2.473008871078491
    4. '+' → logprob: -5.473008632659912
    5. ' -' → logprob: -6.098008632659912
    6. '0' → logprob: -8.22300910949707
    7. ' ' → logprob: -8.22300910949707
    8. 'and' → logprob: -9.97300910949707
    9. '1' → logprob: -10.09800910949707
    10. '<n' → logprob: -10.22300910949707

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004108204040676355
    2. ' ' → logprob: -5.504108428955078
    3. '=' → logprob: -11.254108428955078
    4. '1' → logprob: -12.191608428955078
    5. 'n' → logprob: -13.191608428955078
    6. '   ' → logprob: -13.254108428955078
    7. 'i' → logprob: -13.941608428955078
    8. 'p' → logprob: -14.129108428955078
    9. '```' → logprob: -14.566608428955078
    10. '  ' → logprob: -14.566608428955078

Token 116: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023529160767793655
    2. ':
' → logprob: -4.523529052734375
    3. 'and' → logprob: -4.648529052734375
    4. ':' → logprob: -5.898529052734375
    5. '                       ' → logprob: -10.398529052734375
    6. ' :
' → logprob: -10.898529052734375
    7. '                   ' → logprob: -11.648529052734375
    8. ' :' → logprob: -11.648529052734375
    9. ' ' → logprob: -12.023529052734375
    10. '<|end|>' → logprob: -12.773529052734375

Token 117: '                       ' (ID: 968)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.013665871694684029
    2. 'and' → logprob: -5.138665676116943
    3. ':
' → logprob: -5.513665676116943
    4. ':' → logprob: -6.138665676116943
    5. '                       ' → logprob: -6.888665676116943
    6. '<|end|>' → logprob: -8.138666152954102
    7. ' ' → logprob: -9.888666152954102
    8. '                   ' → logprob: -10.013666152954102
    9. ' :
' → logprob: -10.638666152954102
    10. ' :' → logprob: -11.388666152954102

Token 118: ' left' (ID: 3561)
  Prédit: ' seats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seats' → logprob: -0.5940098762512207
    2. 'se' → logprob: -1.0940098762512207
    3. ' left' → logprob: -2.2190098762512207
    4. 'left' (adapté à ' left') → logprob: -6.094009876251221
    5. ' se' → logprob: -7.469009876251221
    6. '                           ' → logprob: -7.969009876251221
    7. ' A' → logprob: -8.594009399414062
    8. ' if' → logprob: -8.594009399414062
    9. '                       ' → logprob: -8.719009399414062
    10. '(se' → logprob: -8.844009399414062

Token 119: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005175882019102573
    2. ' =' → logprob: -5.880176067352295
    3. '=True' → logprob: -7.380176067352295
    4. '='' → logprob: -7.630176067352295
    5. '=(' → logprob: -8.380175590515137
    6. '=s' → logprob: -8.505175590515137
    7. '=i' → logprob: -8.630175590515137
    8. 'se' → logprob: -8.755175590515137
    9. '==' → logprob: -8.755175590515137
    10. '=A' → logprob: -9.880175590515137

Token 120: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5178098082542419
    2. ' seats' → logprob: -1.0178098678588867
    3. '(se' → logprob: -3.2678098678588867
    4. ' (' → logprob: -5.517809867858887
    5. '(s' → logprob: -9.205309867858887
    6. ' ' → logprob: -9.205309867858887
    7. '(' → logprob: -9.392809867858887
    8. '   ' → logprob: -9.517809867858887
    9. '	se' → logprob: -10.205309867858887
    10. 'seat' → logprob: -10.517809867858887

Token 121: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.00010866894444916397
    2. ' ats' → logprob: -11.37510871887207
    3. 'atsby' → logprob: -11.56260871887207
    4. 'a' → logprob: -11.62510871887207
    5. '#' → logprob: -11.81260871887207
    6. 'atso' → logprob: -11.87510871887207
    7. 's' → logprob: -12.00010871887207
    8. 'atsu' → logprob: -12.25010871887207
    9. '```' → logprob: -12.31260871887207
    10. 'e' → logprob: -12.68760871887207

Token 122: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.875000953674316
    3. '```' → logprob: -15.625000953674316
    4. 'i' → logprob: -15.875000953674316
    5. ' [' → logprob: -17.375
    6. '[
' → logprob: -17.375
    7. '
' → logprob: -19.0
    8. '`' → logprob: -19.125
    9. '[I' → logprob: -19.25
    10. '\[' → logprob: -19.75

Token 123: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003291480534244329
    2. ' -' → logprob: -8.25032901763916
    3. '[' → logprob: -9.75032901763916
    4. '```' → logprob: -12.50032901763916
    5. '[i' → logprob: -13.37532901763916
    6. '1' → logprob: -13.75032901763916
    7. '-
' → logprob: -14.50032901763916
    8. ' ' → logprob: -14.62532901763916
    9. '   ' → logprob: -15.12532901763916
    10. ']' → logprob: -15.12532901763916

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005818653153255582
    2. ''' → logprob: -7.750581741333008
    3. ']' → logprob: -9.375581741333008
    4. ' ' → logprob: -10.375581741333008
    5. '']' → logprob: -11.125581741333008
    6. 'i' → logprob: -12.625581741333008
    7. ''i' → logprob: -12.625581741333008
    8. ']!=' → logprob: -13.125581741333008
    9. ']=='' → logprob: -13.125581741333008
    10. ''A' → logprob: -13.125581741333008

Token 125: ']=='' (ID: 71177)
  Prédit: ']==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.006037815939635038
    2. ']==' → logprob: -5.506037712097168
    3. '=='' → logprob: -6.506037712097168
    4. '']=='' → logprob: -8.131037712097168
    5. ']' → logprob: -8.881037712097168
    6. ']=="' → logprob: -11.131037712097168
    7. ')=='' → logprob: -11.631037712097168
    8. ' ]' → logprob: -13.131037712097168
    9. ' =='' → logprob: -13.381037712097168
    10. ']!='' → logprob: -13.756037712097168

Token 126: 'A' (ID: 32)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.39231327176094055
    2. 'A' → logprob: -1.1423132419586182
    3. '#' → logprob: -5.267313480377197
    4. ''' → logprob: -8.517313003540039
    5. ''#' → logprob: -10.767313003540039
    6. ''A' → logprob: -10.892313003540039
    7. 'b' → logprob: -12.329813003540039
    8. ' B' → logprob: -12.454813003540039
    9. 'a' → logprob: -12.954813003540039
    10. 'C' → logprob: -13.142313003540039

Token 127: ''
' (ID: 2207)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5338839292526245
    2. '
' → logprob: -1.1588839292526245
    3. ''
' → logprob: -3.533884048461914
    4. '<|end|>' → logprob: -3.908884048461914
    5. '               ' → logprob: -4.033884048461914
    6. ''' → logprob: -4.658884048461914
    7. '                       ' → logprob: -5.533884048461914
    8. '           ' → logprob: -5.658884048461914
    9. ')
' → logprob: -6.158884048461914
    10. ' and' → logprob: -6.283884048461914

Token 128: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3223353326320648
    2. '
' → logprob: -1.9473353624343872
    3. '<|end|>' → logprob: -2.3223352432250977
    4. '```' → logprob: -3.8223352432250977
    5. '\n' → logprob: -5.572335243225098
    6. '               ' → logprob: -6.072335243225098
    7. ' and' → logprob: -6.697335243225098
    8. '           ' → logprob: -6.822335243225098
    9. '                       ' → logprob: -6.947335243225098
    10. '<|end|>' → logprob: -7.072335243225098

Token 129: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.047380004078149796
    2. ' if' → logprob: -3.672379970550537
    3. '                   ' → logprob: -4.172379970550537
    4. '```' → logprob: -5.422379970550537
    5. '
' → logprob: -7.422379970550537
    6. 'right' → logprob: -8.422380447387695
    7. '               ' → logprob: -9.797380447387695
    8. '``' → logprob: -10.047380447387695
    9. 'and' → logprob: -10.797380447387695
    10. ' right' → logprob: -11.047380447387695

Token 130: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5233209133148193
    2. 'i' → logprob: -0.8983209133148193
    3. 'n' → logprob: -9.398321151733398
    4. ' n' → logprob: -10.023321151733398
    5. ' ' → logprob: -10.273321151733398
    6. '   ' → logprob: -11.648321151733398
    7. '(i' → logprob: -12.023321151733398
    8. ' ' → logprob: -12.648321151733398
    9. '  ' → logprob: -12.773321151733398
    10. '0' → logprob: -13.210821151733398

Token 131: '<n' (ID: 33872)
  Prédit: '<n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.0006893210811540484
    2. '<' → logprob: -8.000689506530762
    3. '<m' → logprob: -8.750689506530762
    4. '<len' → logprob: -9.000689506530762
    5. '<num' → logprob: -11.000689506530762
    6. '<size' → logprob: -11.375689506530762
    7. '>' → logprob: -11.500689506530762
    8. ' <' → logprob: -11.625689506530762
    9. '<N' → logprob: -12.000689506530762
    10. '<i' → logprob: -12.250689506530762

Token 132: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012642296496778727
    2. '1' → logprob: -9.125126838684082
    3. ' -' → logprob: -11.250126838684082
    4. '2' → logprob: -12.500126838684082
    5. ' ' → logprob: -15.375126838684082
    6. 'and' → logprob: -16.250125885009766
    7. '–' → logprob: -16.375125885009766
    8. '3' → logprob: -16.625125885009766
    9. '```' → logprob: -17.125125885009766
    10. '−' → logprob: -17.375125885009766

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034023032640106976
    2. ' ' → logprob: -8.000340461730957
    3. '2' → logprob: -12.875340461730957
    4. '   ' → logprob: -14.000340461730957
    5. '-' → logprob: -14.812840461730957
    6. '
' → logprob: -15.812840461730957
    7. '  ' → logprob: -15.812840461730957
    8. '```' → logprob: -15.875340461730957
    9. '0' → logprob: -16.37533950805664
    10. '...' → logprob: -17.25033950805664

Token 134: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07154668867588043
    2. ':' → logprob: -2.696546792984009
    3. '                       ' → logprob: -6.57154655456543
    4. ':

' → logprob: -9.82154655456543
    5. '                   ' → logprob: -10.32154655456543
    6. ' :
' → logprob: -10.44654655456543
    7. ' and' → logprob: -10.69654655456543
    8. '               ' → logprob: -10.69654655456543
    9. ':
' → logprob: -11.82154655456543
    10. '):
' → logprob: -11.94654655456543

Token 135: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03942832723259926
    2. '                   ' → logprob: -3.664428234100342
    3. ' right' → logprob: -5.039428234100342
    4. 'right' → logprob: -5.414428234100342
    5. '               ' → logprob: -6.539428234100342
    6. '           ' → logprob: -8.4144287109375
    7. '
' → logprob: -9.2894287109375
    8. '```' → logprob: -10.0394287109375
    9. 'A' → logprob: -10.1644287109375
    10. '                           ' → logprob: -10.2894287109375

Token 136: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.00913966540247202
    2. ' right' → logprob: -4.759139537811279
    3. 'A' → logprob: -7.634139537811279
    4. '                   ' → logprob: -10.634140014648438
    5. 'left' → logprob: -12.384140014648438
    6. ' A' → logprob: -12.634140014648438
    7. '   ' → logprob: -12.884140014648438
    8. '           ' → logprob: -13.384140014648438
    9. '                       ' → logprob: -13.634140014648438
    10. 'Right' → logprob: -13.634140014648438

Token 137: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.512236498361744e-07
    2. ' =' → logprob: -15.125000953674316
    3. '==' → logprob: -16.75
    4. 'se' → logprob: -17.125
    5. '=True' → logprob: -17.125
    6. '=
' → logprob: -18.125
    7. '=

' → logprob: -18.75
    8. '=False' → logprob: -19.0
    9. '=is' → logprob: -19.125
    10. '=`' → logprob: -19.125

Token 138: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.00038944309926591814
    2. ' seats' → logprob: -7.875389575958252
    3. '(se' → logprob: -11.625389099121094
    4. '	se' → logprob: -15.625389099121094
    5. 'Seats' → logprob: -16.625389099121094
    6. '(' → logprob: -17.125389099121094
    7. '_se' → logprob: -17.250389099121094
    8. '-se' → logprob: -17.500389099121094
    9. '```' → logprob: -17.500389099121094
    10. 's' → logprob: -17.625389099121094

Token 139: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -2.8921695047756657e-05
    2. 's' → logprob: -12.500028610229492
    3. 'ates' → logprob: -12.500028610229492
    4. 'se' → logprob: -12.500028610229492
    5. 'at' → logprob: -12.750028610229492
    6. 'a' → logprob: -12.875028610229492
    7. '#' → logprob: -13.750028610229492
    8. ' ats' → logprob: -13.875028610229492
    9. 'atso' → logprob: -13.875028610229492
    10. 'ets' → logprob: -14.250028610229492

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. 'i' → logprob: -15.000000953674316
    3. '[' → logprob: -15.125000953674316
    4. '[j' → logprob: -16.5
    5. '[n' → logprob: -17.5
    6. '```' → logprob: -17.5
    7. '[I' → logprob: -19.0
    8. ' [' → logprob: -19.375
    9. '[s' → logprob: -20.0
    10. '[
' → logprob: -20.25

Token 141: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2833981215953827
    2. '-' → logprob: -1.408398151397705
    3. ']=='' → logprob: -6.158398151397705
    4. '+'' → logprob: -10.158397674560547
    5. ']==' → logprob: -10.658397674560547
    6. ']' → logprob: -11.158397674560547
    7. ']!='' → logprob: -11.158397674560547
    8. '[' → logprob: -11.533397674560547
    9. ']['' → logprob: -12.408397674560547
    10. '[i' → logprob: -12.408397674560547

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. ''' → logprob: -11.87501335144043
    3. '0' → logprob: -13.25001335144043
    4. ']' → logprob: -13.37501335144043
    5. '-' → logprob: -13.87501335144043
    6. '2' → logprob: -14.12501335144043
    7. '']' → logprob: -14.50001335144043
    8. '#' → logprob: -15.25001335144043
    9. ' ' → logprob: -15.25001335144043
    10. ']==' → logprob: -15.62501335144043

Token 143: ']=='' (ID: 71177)
  Prédit: ']==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.3904918432235718
    2. '=='' → logprob: -1.1404918432235718
    3. '']=='' → logprob: -5.890491962432861
    4. ']==' → logprob: -7.390491962432861
    5. ' =='' → logprob: -9.015491485595703
    6. ']' → logprob: -10.015491485595703
    7. ')=='' → logprob: -10.015491485595703
    8. '==' → logprob: -11.265491485595703
    9. ']=="' → logprob: -13.140491485595703
    10. ' ==' → logprob: -13.765491485595703

Token 144: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.32361364364624023
    2. 'B' → logprob: -2.1986136436462402
    3. ''A' → logprob: -2.3236136436462402
    4. ''' → logprob: -2.6986136436462402
    5. ' A' → logprob: -9.448614120483398
    6. ''#' → logprob: -9.823614120483398
    7. ' '' → logprob: -10.073614120483398
    8. '#' → logprob: -10.573614120483398
    9. ''b' → logprob: -11.198614120483398
    10. ''a' → logprob: -11.448614120483398

Token 145: ''
' (ID: 2207)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.41423696279525757
    2. ''' → logprob: -1.6642370223999023
    3. ''
' → logprob: -2.4142370223999023
    4. '               ' → logprob: -3.5392370223999023
    5. '
' → logprob: -4.414237022399902
    6. '<|end|>' → logprob: -5.414237022399902
    7. '```' → logprob: -5.539237022399902
    8. '                       ' → logprob: -5.664237022399902
    9. '           ' → logprob: -6.664237022399902
    10. ''''
' → logprob: -6.914237022399902

Token 146: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02672484703361988
    2. 'if' → logprob: -4.901724815368652
    3. '<|end|>' → logprob: -5.026724815368652
    4. '```' → logprob: -5.776724815368652
    5. ' if' → logprob: -5.901724815368652
    6. 'for' → logprob: -6.526724815368652
    7. ' for' → logprob: -6.651724815368652
    8. '               ' → logprob: -7.276724815368652
    9. '           ' → logprob: -7.651724815368652
    10. 'A' → logprob: -7.776724815368652

Token 147: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21731571853160858
    2. 'A' → logprob: -1.967315673828125
    3. '                   ' → logprob: -3.717315673828125
    4. 'for' → logprob: -4.092315673828125
    5. ' if' → logprob: -4.592315673828125
    6. '```' → logprob: -6.467315673828125
    7. ' for' → logprob: -7.342315673828125
    8. '               ' → logprob: -7.717315673828125
    9. '           ' → logprob: -7.967315673828125
    10. ' A' → logprob: -8.342315673828125

Token 148: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6510114073753357
    2. 'not' → logprob: -0.7760114073753357
    3. '(not' → logprob: -4.6510114669799805
    4. 'left' → logprob: -5.2760114669799805
    5. ' left' → logprob: -6.7760114669799805
    6. '(left' → logprob: -7.4010114669799805
    7. ' (' → logprob: -7.7760114669799805
    8. ' p' → logprob: -7.9010114669799805
    9. 'p' → logprob: -8.52601146697998
    10. 'n' → logprob: -9.46351146697998

Token 149: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.3523532450199127
    2. ' (' → logprob: -1.7273532152175903
    3. ' left' → logprob: -2.35235333442688
    4. 'left' → logprob: -3.85235333442688
    5. '(' → logprob: -5.977353096008301
    6. ' ' → logprob: -9.4773530960083
    7. '[left' → logprob: -9.6023530960083
    8. '(right' → logprob: -10.7273530960083
    9. ' any' → logprob: -10.9773530960083
    10. ' lef' → logprob: -11.2273530960083

Token 150: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0025231034960597754
    2. ' left' → logprob: -6.002522945404053
    3. '(left' → logprob: -10.627523422241211
    4. 'right' → logprob: -11.127523422241211
    5. 'A' → logprob: -13.377523422241211
    6. ' ' → logprob: -13.877523422241211
    7. '[left' → logprob: -13.877523422241211
    8. '(' → logprob: -13.877523422241211
    9. ' (' → logprob: -14.127523422241211
    10. '	left' → logprob: -14.627523422241211

Token 151: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00227693491615355
    2. 'or' → logprob: -6.12727689743042
    3. ' and' → logprob: -9.627277374267578
    4. ')' → logprob: -10.877277374267578
    5. 'and' → logprob: -12.627277374267578
    6. ' ' → logprob: -13.002277374267578
    7. ' o' → logprob: -16.002277374267578
    8. ' )' → logprob: -16.002277374267578
    9. '```' → logprob: -16.127277374267578
    10. '
' → logprob: -16.127277374267578

Token 152: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.04862222820520401
    2. ' right' → logprob: -3.0486221313476562
    3. ' ' → logprob: -11.173622131347656
    4. '   ' → logprob: -11.423622131347656
    5. '  ' → logprob: -12.923622131347656
    6. '	right' → logprob: -13.048622131347656
    7. 'A' → logprob: -13.548622131347656
    8. 'left' → logprob: -14.298622131347656
    9. '
' → logprob: -14.548622131347656
    10. '                   ' → logprob: -15.048622131347656

Token 153: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.015954485163092613
    2. '):' → logprob: -4.390954494476318
    3. ')' → logprob: -6.265954494476318
    4. ' ):
' → logprob: -7.390954494476318
    5. '                   ' → logprob: -8.51595401763916
    6. ' and' → logprob: -8.51595401763916
    7. '):

' → logprob: -8.51595401763916
    8. '):
' → logprob: -9.14095401763916
    9. ' or' → logprob: -9.51595401763916
    10. '                       ' → logprob: -9.51595401763916

Token 154: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.18881741166114807
    2. ' candidates' → logprob: -1.8138173818588257
    3. '                   ' → logprob: -5.188817501068115
    4. ',' → logprob: -7.313817501068115
    5. ' and' → logprob: -7.438817501068115
    6. '```' → logprob: -7.938817501068115
    7. ':
' → logprob: -8.313817024230957
    8. '):
' → logprob: -8.438817024230957
    9. '               ' → logprob: -8.563817024230957
    10. '<|end|>' → logprob: -9.063817024230957

Token 155: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04939056187868118
    2. ' candidates' → logprob: -3.0493905544281006
    3. '                   ' → logprob: -7.92439079284668
    4. 'se' → logprob: -8.04939079284668
    5. '               ' → logprob: -10.79939079284668
    6. '                       ' → logprob: -11.04939079284668
    7. '   ' → logprob: -11.04939079284668
    8. '           ' → logprob: -11.29939079284668
    9. ' seats' → logprob: -11.42439079284668
    10. ' c' → logprob: -11.54939079284668

Token 156: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009153862483799458
    2. '.' → logprob: -7.00091552734375
    3. '.app' → logprob: -13.00091552734375
    4. ' .' → logprob: -14.37591552734375
    5. '.ap' → logprob: -14.87591552734375
    6. '.Append' → logprob: -15.37591552734375
    7. '.insert' → logprob: -15.75091552734375
    8. 'append' → logprob: -15.87591552734375
    9. '.add' → logprob: -16.12591552734375
    10. '.push' → logprob: -17.37591552734375

Token 157: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -13.875000953674316
    3. 'i' → logprob: -17.125001907348633
    4. '(
' → logprob: -18.125001907348633
    5. '((' → logprob: -18.375001907348633
    6. ' (' → logprob: -19.625001907348633
    7. '(I' → logprob: -19.875001907348633
    8. '(a' → logprob: -20.250001907348633
    9. '(n' → logprob: -20.500001907348633
    10. '(se' → logprob: -21.000001907348633

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006747855222783983
    2. ')
' → logprob: -7.375674724578857
    3. ' )' → logprob: -10.375675201416016
    4. ')

' → logprob: -13.125675201416016
    5. ']' → logprob: -13.250675201416016
    6. ')]' → logprob: -13.250675201416016
    7. '       ' → logprob: -13.625675201416016
    8. '')' → logprob: -13.750675201416016
    9. ')#' → logprob: -13.750675201416016
    10. '[' → logprob: -14.000675201416016

Token 159: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15373964607715607
    2. '           ' → logprob: -2.6537396907806396
    3. ' if' → logprob: -3.2787396907806396
    4. '
' → logprob: -4.5287394523620605
    5. '               ' → logprob: -4.7787394523620605
    6. ' for' → logprob: -4.9037394523620605
    7. '   ' → logprob: -5.9037394523620605
    8. '                   ' → logprob: -6.0287394523620605
    9. 'if' → logprob: -7.4037394523620605
    10. ')' → logprob: -7.5287394523620605

Token 160: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0779728963971138
    2. 'if' (adapté à ' if') → logprob: -2.827972888946533
    3. '       ' → logprob: -4.577972888946533
    4. ' for' → logprob: -6.577972888946533
    5. '           ' → logprob: -6.702972888946533
    6. '   ' → logprob: -6.827972888946533
    7. ' candidates' → logprob: -6.952972888946533
    8. '               ' → logprob: -8.202973365783691
    9. ' i' → logprob: -9.077973365783691
    10. 'for' → logprob: -9.202973365783691

Token 161: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3238676190376282
    2. ' candidates' → logprob: -1.3238675594329834
    3. 'len' → logprob: -5.4488677978515625
    4. ' len' → logprob: -5.5738677978515625
    5. ' not' → logprob: -6.1988677978515625
    6. 'not' → logprob: -8.698867797851562
    7. ' seats' → logprob: -9.323867797851562
    8. 'se' → logprob: -9.448867797851562
    9. ' c' → logprob: -9.823867797851562
    10. ' ' → logprob: -11.823867797851562

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012005893513560295
    2. '):' → logprob: -7.6262006759643555
    3. '>:' → logprob: -8.001200675964355
    4. '==' → logprob: -9.001200675964355
    5. ':
' → logprob: -9.251200675964355
    6. ' :' → logprob: -9.876200675964355
    7. ']:' → logprob: -10.751200675964355
    8. ':**' → logprob: -10.876200675964355
    9. '=' → logprob: -11.251200675964355
    10. '}:' → logprob: -11.751200675964355

Token 163: '               ' (ID: 506)
  Prédit: ' seats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seats' → logprob: -0.3713199198246002
    2. '               ' → logprob: -1.9963198900222778
    3. 'se' → logprob: -2.4963200092315674
    4. ' i' → logprob: -3.4963200092315674
    5. ' candidates' → logprob: -3.6213200092315674
    6. 'i' → logprob: -4.371319770812988
    7. ' for' → logprob: -4.871319770812988
    8. '                   ' → logprob: -5.371319770812988
    9. '```' → logprob: -5.996319770812988
    10. ' seat' → logprob: -6.746319770812988

Token 164: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.014090044423937798
    2. ' seats' → logprob: -4.764090061187744
    3. 'idx' → logprob: -5.514090061187744
    4. ' idx' → logprob: -7.639090061187744
    5. 'index' → logprob: -7.889090061187744
    6. 'i' → logprob: -8.514089584350586
    7. 'pos' → logprob: -8.889089584350586
    8. 'seat' → logprob: -9.639089584350586
    9. 'c' → logprob: -10.014089584350586
    10. ' index' → logprob: -10.014089584350586

Token 165: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.0802738870552275e-05
    2. '[' → logprob: -11.87501049041748
    3. '[min' → logprob: -12.75001049041748
    4. 'c' → logprob: -15.00001049041748
    5. ' [' → logprob: -15.37501049041748
    6. '[max' → logprob: -16.125011444091797
    7. '[-' → logprob: -16.875011444091797
    8. '[
' → logprob: -17.000011444091797
    9. '[len' → logprob: -17.625011444091797
    10. '[i' → logprob: -17.875011444091797

Token 166: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.01112834457308054
    2. 'and' → logprob: -4.8861284255981445
    3. '.append' → logprob: -6.6361284255981445
    4. 'c' → logprob: -6.8861284255981445
    5. '   ' → logprob: -7.8861284255981445
    6. '           ' → logprob: -8.261128425598145
    7. 'append' → logprob: -8.511128425598145
    8. 'ands' → logprob: -9.886128425598145
    9. '[c' → logprob: -9.886128425598145
    10. '       ' → logprob: -10.136128425598145

Token 167: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0014864159747958183
    2. '[' → logprob: -6.626486301422119
    3. '.pop' → logprob: -8.751486778259277
    4. '[len' → logprob: -13.376486778259277
    5. '0' → logprob: -15.751486778259277
    6. '-' → logprob: -15.876486778259277
    7. '][-' → logprob: -16.12648582458496
    8. 'pop' → logprob: -16.25148582458496
    9. '[
' → logprob: -16.87648582458496
    10. '[::-' → logprob: -17.25148582458496

Token 168: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048676732927560806
    2. '0' → logprob: -3.0486767292022705
    3. '-l' → logprob: -10.048676490783691
    4. ' -' → logprob: -10.923676490783691
    5. '-
' → logprob: -12.673676490783691
    6. '[-' → logprob: -12.798676490783691
    7. ' ' → logprob: -12.798676490783691
    8. 'len' → logprob: -12.923676490783691
    9. '-s' → logprob: -13.048676490783691
    10. '-L' → logprob: -13.798676490783691

Token 169: ']]' (ID: 8928)
  Prédit: ']=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']='' → logprob: -0.02237749844789505
    2. ']' → logprob: -3.8973774909973145
    3. ']=' → logprob: -6.3973774909973145
    4. ' ]' → logprob: -9.397377967834473
    5. ']=='' → logprob: -10.147377967834473
    6. '']='' → logprob: -10.897377967834473
    7. ']="' → logprob: -11.647377967834473
    8. '='' → logprob: -12.397377967834473
    9. ']]' → logprob: -12.647377967834473
    10. ']'' → logprob: -13.022377967834473

Token 170: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.011280066333711147
    2. '=' → logprob: -4.511280059814453
    3. ']='' → logprob: -9.011280059814453
    4. '='#' → logprob: -10.136280059814453
    5. ' ='' → logprob: -10.261280059814453
    6. ']' → logprob: -11.136280059814453
    7. ' =' → logprob: -11.636280059814453
    8. ']=' → logprob: -12.511280059814453
    9. '=('' → logprob: -12.886280059814453
    10. '=''' → logprob: -13.511280059814453

Token 171: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.8219583075260743e-05
    2. 'A' → logprob: -10.500038146972656
    3. ''' → logprob: -11.875038146972656
    4. ' B' → logprob: -13.375038146972656
    5. '"B' → logprob: -14.750038146972656
    6. '	B' → logprob: -15.000038146972656
    7. 'Ｂ' → logprob: -15.000038146972656
    8. '#' → logprob: -15.187538146972656
    9. '`' → logprob: -15.812538146972656
    10. '```' → logprob: -16.625038146972656

Token 172: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04772874712944031
    2. '<|end|>' → logprob: -3.1727287769317627
    3. ''
' → logprob: -5.922728538513184
    4. '
' → logprob: -7.297728538513184
    5. '```' → logprob: -7.422728538513184
    6. ''''' → logprob: -8.797728538513184
    7. '')' → logprob: -8.797728538513184
    8. ''#' → logprob: -9.047728538513184
    9. '<|end|>' → logprob: -9.172728538513184
    10. '']' → logprob: -9.922728538513184

Token 173: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07642631977796555
    2. 'elif' → logprob: -3.5764262676239014
    3. ' else' → logprob: -3.7014262676239014
    4. '       ' → logprob: -4.9514265060424805
    5. 'continue' → logprob: -5.5764265060424805
    6. 'print' → logprob: -5.8264265060424805
    7. '   ' → logprob: -5.8264265060424805
    8. '<|end|>' → logprob: -6.0764265060424805
    9. ' elif' → logprob: -7.4514265060424805
    10. 'for' → logprob: -7.7014265060424805

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24824273586273193
    2. ':
' → logprob: -1.623242735862732
    3. '       ' → logprob: -4.3732428550720215
    4. '               ' → logprob: -5.3732428550720215
    5. '           ' → logprob: -5.8732428550720215
    6. ' for' → logprob: -6.8732428550720215
    7. '   ' → logprob: -6.9982428550720215
    8. 'for' → logprob: -8.623242378234863
    9. '```' → logprob: -10.123242378234863
    10. ' :' → logprob: -10.248242378234863

Token 176: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4353964626789093
    2. ' for' → logprob: -1.435396432876587
    3. '               ' → logprob: -3.185396432876587
    4. 'se' → logprob: -3.310396432876587
    5. '#' → logprob: -4.685396671295166
    6. 'pass' → logprob: -4.935396671295166
    7. '       ' → logprob: -5.060396671295166
    8. '           ' → logprob: -5.435396671295166
    9. ' seats' → logprob: -5.685396671295166
    10. '   ' → logprob: -6.935396671295166

Token 177: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.44226542115211487
    2. 'pass' → logprob: -1.8172653913497925
    3. ' for' → logprob: -2.192265510559082
    4. ' pass' → logprob: -3.817265510559082
    5. 'break' → logprob: -4.067265510559082
    6. 'se' → logprob: -4.067265510559082
    7. 'continue' → logprob: -5.067265510559082
    8. '#' → logprob: -5.317265510559082
    9. ' break' → logprob: -5.442265510559082
    10. ' seats' → logprob: -5.567265510559082

Token 178: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16052815318107605
    2. ' i' → logprob: -1.9105281829833984
    3. 'j' → logprob: -8.785528182983398
    4. 'p' → logprob: -9.785528182983398
    5. ' j' → logprob: -10.785528182983398
    6. ' ' → logprob: -11.598028182983398
    7. ' p' → logprob: -11.660528182983398
    8. 'se' → logprob: -12.223028182983398
    9. 'seat' → logprob: -12.348028182983398
    10. '	i' → logprob: -12.410528182983398

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016158709302544594
    2. 'in' → logprob: -4.141158580780029
    3. 'n' → logprob: -10.016159057617188
    4. ' range' → logprob: -10.016159057617188
    5. 'range' → logprob: -11.141159057617188
    6. ' ' → logprob: -12.266159057617188
    7. '(n' → logprob: -12.391159057617188
    8. ',n' → logprob: -12.766159057617188
    9. ' n' → logprob: -13.391159057617188
    10. '   ' → logprob: -13.391159057617188

Token 180: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029818300157785416
    2. ' range' → logprob: -3.529818296432495
    3. 'se' → logprob: -10.154818534851074
    4. 'n' → logprob: -10.779818534851074
    5. '(range' → logprob: -13.529818534851074
    6. 'r' → logprob: -13.779818534851074
    7. 'ran' → logprob: -13.779818534851074
    8. ' ' → logprob: -14.154818534851074
    9. '0' → logprob: -14.404818534851074
    10. '	range' → logprob: -14.529818534851074

Token 181: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3246348798274994
    2. '(n' → logprob: -1.3246349096298218
    3. ' n' → logprob: -5.699635028839111
    4. '1' → logprob: -5.824635028839111
    5. '(' → logprob: -5.949635028839111
    6. '0' → logprob: -6.574635028839111
    7. 'm' → logprob: -7.449635028839111
    8. '(m' → logprob: -8.324634552001953
    9. '   ' → logprob: -10.074634552001953
    10. ' ' → logprob: -10.074634552001953

Token 182: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.27544620633125305
    2. '):
' → logprob: -1.7754461765289307
    3. '):' → logprob: -2.6504461765289307
    4. ' -' → logprob: -8.400445938110352
    5. '   ' → logprob: -9.025445938110352
    6. ')' → logprob: -9.400445938110352
    7. ' ' → logprob: -9.400445938110352
    8. '       ' → logprob: -10.025445938110352
    9. ' ):
' → logprob: -10.650445938110352
    10. '):

' → logprob: -10.775445938110352

Token 183: '                   ' (ID: 699)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4751262664794922
    2. '               ' → logprob: -1.3501262664794922
    3. ' if' → logprob: -2.225126266479492
    4. '           ' → logprob: -5.225126266479492
    5. '       ' → logprob: -5.975126266479492
    6. '                   ' → logprob: -6.225126266479492
    7. '   ' → logprob: -6.975126266479492
    8. '```' → logprob: -11.100126266479492
    9. '[' → logprob: -11.225126266479492
    10. 'se' → logprob: -11.475126266479492

Token 184: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006398845580406487
    2. ' if' → logprob: -7.625639915466309
    3. '                   ' → logprob: -9.500639915466309
    4. '               ' → logprob: -9.750639915466309
    5. '       ' → logprob: -11.500639915466309
    6. '   ' → logprob: -12.500639915466309
    7. '           ' → logprob: -12.625639915466309
    8. '                       ' → logprob: -13.750639915466309
    9. ' ' → logprob: -15.875639915466309
    10. '#' → logprob: -15.875639915466309

Token 185: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.011097692884504795
    2. ' seats' → logprob: -4.5110979080200195
    3. '   ' → logprob: -10.51109790802002
    4. '(se' → logprob: -12.76109790802002
    5. 'seat' → logprob: -13.01109790802002
    6. '```' → logprob: -13.01109790802002
    7. 'not' → logprob: -13.26109790802002
    8. ' ' → logprob: -13.44859790802002
    9. '       ' → logprob: -13.44859790802002
    10. '	se' → logprob: -13.57359790802002

Token 186: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.625000953674316
    3. 'i' → logprob: -15.125000953674316
    4. '```' → logprob: -15.500000953674316
    5. '==' → logprob: -15.875000953674316
    6. '[n' → logprob: -16.750001907348633
    7. ' [' → logprob: -16.750001907348633
    8. '
' → logprob: -17.250001907348633
    9. '[
' → logprob: -17.250001907348633
    10. '[#' → logprob: -17.625001907348633

Token 187: ']=='' (ID: 71177)
  Prédit: ']==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.01544012688100338
    2. '=='' → logprob: -4.265439987182617
    3. ']==' → logprob: -7.390439987182617
    4. ']' → logprob: -7.640439987182617
    5. '']=='' → logprob: -9.140439987182617
    6. ']!='' → logprob: -10.015439987182617
    7. ')=='' → logprob: -11.265439987182617
    8. ' =='' → logprob: -11.890439987182617
    9. ']=="' → logprob: -13.015439987182617
    10. ' ]' → logprob: -13.765439987182617

Token 188: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.048849985003471375
    2. ''#' → logprob: -3.1738500595092773
    3. 'B' → logprob: -5.423850059509277
    4. ''' → logprob: -7.423850059509277
    5. 'A' → logprob: -7.548850059509277
    6. '#:' → logprob: -9.048850059509277
    7. ''A' → logprob: -10.798850059509277
    8. '#
' → logprob: -10.798850059509277
    9. ' '#'' → logprob: -10.798850059509277
    10. 'C' → logprob: -11.298850059509277

Token 189: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2674976885318756
    2. ' and' → logprob: -2.6424977779388428
    3. '':
' → logprob: -3.0174977779388428
    4. ':' → logprob: -3.5174977779388428
    5. 'and' → logprob: -3.5174977779388428
    6. '                       ' → logprob: -3.8924977779388428
    7. '                   ' → logprob: -5.017497539520264
    8. '':' → logprob: -5.267497539520264
    9. '==' → logprob: -5.767497539520264
    10. ']:
' → logprob: -6.017497539520264

Token 190: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006521391216665506
    2. '                   ' → logprob: -5.256521224975586
    3. 'se' → logprob: -7.131521224975586
    4. 'B' → logprob: -8.881521224975586
    5. '               ' → logprob: -9.256521224975586
    6. '       ' → logprob: -9.631521224975586
    7. ' seats' → logprob: -10.256521224975586
    8. ' B' → logprob: -10.756521224975586
    9. '   ' → logprob: -11.006521224975586
    10. '='' → logprob: -11.256521224975586

Token 191: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0005228889058344066
    2. ' seats' → logprob: -7.625523090362549
    3. '                   ' → logprob: -11.00052261352539
    4. '                       ' → logprob: -11.50052261352539
    5. '               ' → logprob: -12.75052261352539
    6. '   ' → logprob: -13.37552261352539
    7. '           ' → logprob: -14.12552261352539
    8. '       ' → logprob: -14.25052261352539
    9. ' ' → logprob: -15.12552261352539
    10. 'seat' → logprob: -15.12552261352539

Token 192: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4855663721391466e-05
    2. '[' → logprob: -11.250015258789062
    3. 'i' → logprob: -13.750015258789062
    4. '[I' → logprob: -15.875015258789062
    5. '```' → logprob: -16.500015258789062
    6. ' [' → logprob: -16.625015258789062
    7. '[
' → logprob: -17.125015258789062
    8. '[int' → logprob: -17.625015258789062
    9. '[n' → logprob: -17.937515258789062
    10. '#' → logprob: -18.000015258789062

Token 193: ']='' (ID: 69193)
  Prédit: ']=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']='' → logprob: -0.02443721704185009
    2. ']' → logprob: -4.274437427520752
    3. '='' → logprob: -5.274437427520752
    4. ']=' → logprob: -5.399437427520752
    5. ']=='' → logprob: -7.899437427520752
    6. '']='' → logprob: -9.024436950683594
    7. ']!='' → logprob: -10.274436950683594
    8. '='#' → logprob: -11.024436950683594
    9. '=' → logprob: -11.774436950683594
    10. '=='' → logprob: -12.274436950683594

Token 194: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0005201471503823996
    2. 'A' → logprob: -7.7505202293396
    3. ''' → logprob: -9.750519752502441
    4. 'C' → logprob: -11.125519752502441
    5. ' B' → logprob: -11.375519752502441
    6. '#' → logprob: -13.813019752502441
    7. ''A' → logprob: -14.438019752502441
    8. '`' → logprob: -15.125519752502441
    9. ''''' → logprob: -15.250519752502441
    10. ' '' → logprob: -15.313019752502441

Token 195: ''
' (ID: 2207)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013187176547944546
    2. '<|end|>' → logprob: -5.138187408447266
    3. '
' → logprob: -5.388187408447266
    4. 'break' → logprob: -7.013187408447266
    5. ' break' → logprob: -7.138187408447266
    6. '                   ' → logprob: -8.263187408447266
    7. ''
' → logprob: -9.263187408447266
    8. '               ' → logprob: -9.388187408447266
    9. '```' → logprob: -9.388187408447266
    10. '<|end|>' → logprob: -9.638187408447266

Token 196: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001213806332089007
    2. '                   ' → logprob: -7.501214027404785
    3. '<|end|>' → logprob: -8.501214027404785
    4. '               ' → logprob: -8.751214027404785
    5. '           ' → logprob: -9.376214027404785
    6. '                        
' → logprob: -9.751214027404785
    7. '       ' → logprob: -10.001214027404785
    8. '```' → logprob: -10.376214027404785
    9. 'break' → logprob: -10.751214027404785
    10. '
' → logprob: -11.001214027404785

Token 197: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.014197122305631638
    2. ' break' → logprob: -4.26419734954834
    3. '                       ' → logprob: -10.38919734954834
    4. '	break' → logprob: -12.88919734954834
    5. '
' → logprob: -16.014196395874023
    6. '                   ' → logprob: -16.389196395874023
    7. '                           ' → logprob: -17.014196395874023
    8. '_break' → logprob: -17.014196395874023
    9. '                        
' → logprob: -17.139196395874023
    10. '               ' → logprob: -17.139196395874023

Token 198: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20400163531303406
    2. 'print' → logprob: -1.7040016651153564
    3. '<|end|>' → logprob: -6.329001426696777
    4. ' print' → logprob: -8.079001426696777
    5. '```' → logprob: -8.579001426696777
    6. ')' → logprob: -8.829001426696777
    7. '       ' → logprob: -9.704001426696777
    8. '    
' → logprob: -10.954001426696777
    9. '
' → logprob: -11.204001426696777
    10. '	print' → logprob: -11.329001426696777

Token 199: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47419610619544983
    2. 'print' → logprob: -0.9741960763931274
    3. ' print' → logprob: -9.474196434020996
    4. '```' → logprob: -11.224196434020996
    5. 'for' → logprob: -11.349196434020996
    6. '    
' → logprob: -11.849196434020996
    7. '       ' → logprob: -12.224196434020996
    8. '
' → logprob: -13.224196434020996
    9. '<|end|>' → logprob: -13.849196434020996
    10. '``' → logprob: -15.224196434020996

Token 200: ' elif' (ID: 9497)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2825656235218048
    2. '   ' → logprob: -1.4075655937194824
    3. ' print' → logprob: -6.657565593719482
    4. 'for' → logprob: -9.40756607055664
    5. 'else' → logprob: -11.28256607055664
    6. '       ' → logprob: -11.53256607055664
    7. '
' → logprob: -11.90756607055664
    8. '    
' → logprob: -12.28256607055664
    9. '```' → logprob: -12.53256607055664
    10. ' for' → logprob: -13.03256607055664

Token 201: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.020105130970478058
    2. 'p' → logprob: -4.020105361938477
    3. ''' → logprob: -7.270105361938477
    4. ' '' → logprob: -7.520105361938477
    5. ''p' → logprob: -7.770105361938477
    6. ''C' → logprob: -9.020105361938477
    7. ' C' → logprob: -9.395105361938477
    8. 'C' → logprob: -9.645105361938477
    9. ' ' → logprob: -11.270105361938477
    10. '"' → logprob: -13.332605361938477

Token 202: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.014202527701854706
    2. '==' → logprob: -4.26420259475708
    3. '=="' → logprob: -11.014202117919922
    4. ' ==' → logprob: -12.264202117919922
    5. ' =='' → logprob: -12.389202117919922
    6. ']=='' → logprob: -12.514202117919922
    7. '[' → logprob: -12.764202117919922
    8. '']=='' → logprob: -12.889202117919922
    9. '==='' → logprob: -13.014202117919922
    10. '='' → logprob: -13.889202117919922

Token 203: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.003661356633529067
    2. 'A' → logprob: -6.378661155700684
    3. 'B' → logprob: -6.503661155700684
    4. 'AB' → logprob: -8.628661155700684
    5. '#' → logprob: -9.003661155700684
    6. ''C' → logprob: -9.878661155700684
    7. ''' → logprob: -11.003661155700684
    8. ''#' → logprob: -11.191161155700684
    9. 'D' → logprob: -11.253661155700684
    10. ' C' → logprob: -12.441161155700684

Token 204: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.013348923064768314
    2. '':' → logprob: -4.3883490562438965
    3. ''' → logprob: -7.3883490562438965
    4. ':' → logprob: -9.138348579406738
    5. ':
' → logprob: -9.763348579406738
    6. ' '' → logprob: -10.763348579406738
    7. '':
' → logprob: -10.763348579406738
    8. '':

' → logprob: -13.013348579406738
    9. '   ' → logprob: -13.138348579406738
    10. '']:
' → logprob: -13.388348579406738

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10267552733421326
    2. '       ' → logprob: -2.852675437927246
    3. ' for' → logprob: -3.602675437927246
    4. 'for' → logprob: -4.852675437927246
    5. ' candidates' → logprob: -6.227675437927246
    6. '```' → logprob: -7.477675437927246
    7. '
' → logprob: -7.602675437927246
    8. '   ' → logprob: -7.727675437927246
    9. ':
' → logprob: -8.727675437927246
    10. 'indices' → logprob: -8.977675437927246

Token 206: ' occupied' (ID: 46186)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6147905588150024
    2. 'for' → logprob: -0.8647905588150024
    3. 'count' → logprob: -5.114790439605713
    4. 'found' → logprob: -5.114790439605713
    5. 'indices' → logprob: -5.239790439605713
    6. 'positions' → logprob: -5.364790439605713
    7. ' for' → logprob: -5.739790439605713
    8. 'occupied' (adapté à ' occupied') → logprob: -6.239790439605713
    9. 'available' → logprob: -6.614790439605713
    10. 'max' → logprob: -6.739790439605713

Token 207: ' =' (ID: 314)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.9806495308876038
    2. '=' → logprob: -1.355649471282959
    3. '=[' → logprob: -1.855649471282959
    4. '=['' → logprob: -1.855649471282959
    5. ' =' → logprob: -3.855649471282959
    6. '_positions' → logprob: -5.105649471282959
    7. '=set' → logprob: -5.355649471282959
    8. '_indices' → logprob: -5.480649471282959
    9. '=True' → logprob: -5.855649471282959
    10. '=[]
' → logprob: -6.230649471282959

Token 208: ' [' (ID: 723)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -1.0028997659683228
    2. '[' → logprob: -1.3778997659683228
    3. 'False' → logprob: -1.5028997659683228
    4. '[n' → logprob: -3.127899646759033
    5. 'True' → logprob: -3.252899646759033
    6. '[i' → logprob: -3.627899646759033
    7. '[p' → logprob: -4.252899646759033
    8. 'sum' → logprob: -4.627899646759033
    9. '['' → logprob: -5.127899646759033
    10. '[]' → logprob: -5.502899646759033

Token 209: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.032454315572977066
    2. '(i' → logprob: -3.782454252243042
    3. 'idx' → logprob: -5.407454490661621
    4. 'se' → logprob: -6.282454490661621
    5. 'j' → logprob: -6.657454490661621
    6. '(se' → logprob: -7.907454490661621
    7. 'True' → logprob: -8.032454490661621
    8. 'False' → logprob: -8.157454490661621
    9. 'x' → logprob: -9.032454490661621
    10. 'index' → logprob: -9.282454490661621

Token 210: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20147542655467987
    2. ' for' → logprob: -1.7014753818511963
    3. '
' → logprob: -10.076475143432617
    4. '   ' → logprob: -11.826475143432617
    5. ' ' → logprob: -12.076475143432617
    6. '	for' → logprob: -12.826475143432617
    7. '+' → logprob: -13.701475143432617
    8. '```' → logprob: -14.326475143432617
    9. ' 
' → logprob: -14.701475143432617
    10. '    ' → logprob: -14.951475143432617

Token 211: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519327998161316
    2. ' range' → logprob: -1.5019328594207764
    3. ',' → logprob: -13.126933097839355
    4. 'i' → logprob: -14.001933097839355
    5. ' in' → logprob: -14.751933097839355
    6. '(range' → logprob: -15.376933097839355
    7. 'in' → logprob: -16.12693214416504
    8. ' ' → logprob: -16.75193214416504
    9. '	range' → logprob: -17.25193214416504
    10. '_range' → logprob: -17.75193214416504

Token 212: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42001116275787354
    2. ' in' → logprob: -1.7950111627578735
    3. ',se' → logprob: -2.045011043548584
    4. 'in' → logprob: -3.170011043548584
    5. 'range' → logprob: -5.670011043548584
    6. 'se' → logprob: -6.420011043548584
    7. ',in' → logprob: -9.295011520385742
    8. ' range' → logprob: -9.420011520385742
    9. ' ,' → logprob: -9.420011520385742
    10. ',r' → logprob: -10.920011520385742

Token 213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062176622450351715
    2. 'in' → logprob: -2.8121767044067383
    3. ',' → logprob: -9.312176704406738
    4. ',v' → logprob: -9.437176704406738
    5. 'enumer' → logprob: -11.187176704406738
    6. ',in' → logprob: -11.312176704406738
    7. ' ' → logprob: -11.937176704406738
    8. 'v' → logprob: -13.187176704406738
    9. ',p' → logprob: -14.437176704406738
    10. ' ,' → logprob: -14.437176704406738

Token 214: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0009120595059357584
    2. ' enumerate' → logprob: -7.000912189483643
    3. 'enum' → logprob: -15.000911712646484
    4. 'range' → logprob: -16.375911712646484
    5. 'se' → logprob: -16.750911712646484
    6. 'en' → logprob: -16.750911712646484
    7. '```' → logprob: -16.875911712646484
    8. '
' → logprob: -19.125911712646484
    9. '(en' → logprob: -19.375911712646484
    10. 'import' → logprob: -19.500911712646484

Token 215: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.00023119196703191847
    2. 'se' → logprob: -8.37523078918457
    3. ' (' → logprob: -15.25023078918457
    4. ',se' → logprob: -16.12523078918457
    5. '	se' → logprob: -16.62523078918457
    6. ' seats' → logprob: -17.12523078918457
    7. 'in' → logprob: -17.50023078918457
    8. '(' → logprob: -17.50023078918457
    9. ' in' → logprob: -20.12523078918457
    10. '(range' → logprob: -20.25023078918457

Token 216: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.00029613598599098623
    2. '```' → logprob: -9.375296592712402
    3. 'its' → logprob: -10.500296592712402
    4. 's' → logprob: -11.000296592712402
    5. 'enumer' → logprob: -11.125296592712402
    6. 'at' → logprob: -11.125296592712402
    7. '(' → logprob: -11.687796592712402
    8. '   ' → logprob: -11.750296592712402
    9. 'ants' → logprob: -11.875296592712402
    10. 'se' → logprob: -11.875296592712402

Token 217: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21992971003055573
    2. 'if' → logprob: -1.7199296951293945
    3. ')' → logprob: -4.2199296951293945
    4. '()' → logprob: -6.2199296951293945
    5. '   ' → logprob: -6.9699296951293945
    6. 'in' → logprob: -8.344929695129395
    7. '       ' → logprob: -8.844929695129395
    8. ' ' → logprob: -9.594929695129395
    9. ' in' → logprob: -9.844929695129395
    10. '           ' → logprob: -9.969929695129395

Token 218: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4741363525390625
    2. 'if' → logprob: -0.9741363525390625
    3. '           ' → logprob: -10.849136352539062
    4. '   ' → logprob: -11.349136352539062
    5. '       ' → logprob: -11.724136352539062
    6. '          ' → logprob: -12.224136352539062
    7. ' ' → logprob: -12.849136352539062
    8. '               ' → logprob: -12.974136352539062
    9. '        ' → logprob: -13.224136352539062
    10. '                   ' → logprob: -13.474136352539062

Token 219: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00462771812453866
    2. ' v' → logprob: -5.379627704620361
    3. 'se' → logprob: -12.12962818145752
    4. ' seats' → logprob: -14.62962818145752
    5. '	v' → logprob: -14.62962818145752
    6. '(v' → logprob: -15.50462818145752
    7. ' ' → logprob: -15.50462818145752
    8. '   ' → logprob: -15.62962818145752
    9. '
' → logprob: -16.004627227783203
    10. '$v' → logprob: -16.879627227783203

Token 220: '!='' (ID: 58874)
  Prédit: '!=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!='' → logprob: -0.10706264525651932
    2. '=='' → logprob: -2.357062578201294
    3. '!=' → logprob: -5.482062816619873
    4. ' !=' → logprob: -6.607062816619873
    5. ' in' → logprob: -7.732062816619873
    6. '==' → logprob: -7.857062816619873
    7. 'in' → logprob: -8.607062339782715
    8. ']!='' → logprob: -8.607062339782715
    9. ']=='' → logprob: -9.982062339782715
    10. ' =='' → logprob: -10.232062339782715

Token 221: '#' (ID: 2)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.08945289999246597
    2. '#' → logprob: -2.4644529819488525
    3. ' '#' → logprob: -7.714452743530273
    4. '"#' → logprob: -10.589452743530273
    5. ' '#'' → logprob: -10.714452743530273
    6. ''' → logprob: -11.714452743530273
    7. '#
' → logprob: -12.714452743530273
    8. '('#' → logprob: -12.839452743530273
    9. '']' → logprob: -12.839452743530273
    10. '='#' → logprob: -14.339452743530273

Token 222: '']
' (ID: 9756)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20803473889827728
    2. ']
' → logprob: -1.7080347537994385
    3. ' and' → logprob: -5.583034515380859
    4. ' ]
' → logprob: -6.833034515380859
    5. ' ]' → logprob: -6.958034515380859
    6. ' if' → logprob: -8.33303451538086
    7. 'and' → logprob: -8.33303451538086
    8. ']

' → logprob: -9.08303451538086
    9. '   ' → logprob: -9.33303451538086
    10. 'if' → logprob: -10.08303451538086

Token 223: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6208275556564331
    2. '           ' → logprob: -1.245827555656433
    3. ' for' → logprob: -1.870827555656433
    4. 'for' → logprob: -4.620827674865723
    5. ' if' → logprob: -5.745827674865723
    6. '            
' → logprob: -6.120827674865723
    7. '   ' → logprob: -6.745827674865723
    8. ']
' → logprob: -7.245827674865723
    9. '       ' → logprob: -7.495827674865723
    10. ']' → logprob: -7.495827674865723

Token 224: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26045307517051697
    2. 'if' (adapté à ' if') → logprob: -2.13545298576355
    3. ' for' → logprob: -2.76045298576355
    4. ' if' → logprob: -4.260453224182129
    5. '           ' → logprob: -5.010453224182129
    6. 'available' → logprob: -5.260453224182129
    7. 'possible' → logprob: -5.760453224182129
    8. 'free' → logprob: -6.260453224182129
    9. 'found' → logprob: -6.510453224182129
    10. 'occupied' → logprob: -6.760453224182129

Token 225: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9743480682373047
    2. ' len' → logprob: -1.5993480682373047
    3. ' not' → logprob: -1.5993480682373047
    4. 'not' → logprob: -2.2243480682373047
    5. 'occupied' → logprob: -2.3493480682373047
    6. ' occupied' → logprob: -4.474348068237305
    7. 'n' → logprob: -7.099348068237305
    8. ' seats' → logprob: -7.224348068237305
    9. 'se' → logprob: -7.724348068237305
    10. 'p' → logprob: -8.474348068237305

Token 226: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.3138377070426941
    2. ' occupied' → logprob: -1.3138377666473389
    3. ' seats' → logprob: -7.93883752822876
    4. 'se' → logprob: -9.438838005065918
    5. 'occup' → logprob: -9.938838005065918
    6. 'occ' → logprob: -11.063838005065918
    7. ' ' → logprob: -11.313838005065918
    8. ' any' → logprob: -11.438838005065918
    9. ' len' → logprob: -11.813838005065918
    10. 'len' → logprob: -12.063838005065918

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32140010595321655
    2. ':
' → logprob: -1.3214001655578613
    3. ' or' → logprob: -4.821400165557861
    4. '   ' → logprob: -11.196399688720703
    5. ' :' → logprob: -11.571399688720703
    6. ':return' → logprob: -12.196399688720703
    7. '       ' → logprob: -12.321399688720703
    8. '[' → logprob: -12.446399688720703
    9. 'or' → logprob: -12.446399688720703
    10. ' :
' → logprob: -12.821399688720703

Token 228: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015837742015719414
    2. ' for' → logprob: -4.640837669372559
    3. ':
' → logprob: -6.390837669372559
    4. '   ' → logprob: -7.015837669372559
    5. 'for' → logprob: -7.390837669372559
    6. '           ' → logprob: -7.390837669372559
    7. '       ' → logprob: -7.640837669372559
    8. ' continue' → logprob: -7.890837669372559
    9. 'continue' → logprob: -8.015837669372559
    10. '                   ' → logprob: -8.140837669372559

Token 229: ' if' (ID: 538)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.06274419277906418
    2. ' seats' → logprob: -2.812744140625
    3. '                   ' → logprob: -8.437744140625
    4. '               ' → logprob: -8.812744140625
    5. '   ' → logprob: -8.937744140625
    6. '                       ' → logprob: -9.687744140625
    7. '```' → logprob: -10.187744140625
    8. ' for' → logprob: -10.437744140625
    9. ' ' → logprob: -10.687744140625
    10. 'seat' → logprob: -10.937744140625

Token 230: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1698499172925949
    2. 'n' → logprob: -2.2948498725891113
    3. ' seats' → logprob: -3.1698498725891113
    4. ' p' → logprob: -5.169849872589111
    5. 'se' → logprob: -5.669849872589111
    6. 'p' → logprob: -6.919849872589111
    7. ' True' → logprob: -7.544849872589111
    8. ' i' → logprob: -7.669849872589111
    9. ' ' → logprob: -7.919849872589111
    10. ' m' → logprob: -8.16985034942627

Token 231: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3543904423713684
    2. '==' → logprob: -1.7293903827667236
    3. '>=' → logprob: -2.6043903827667236
    4. '>' → logprob: -3.8543903827667236
    5. ' %' → logprob: -4.229390621185303
    6. '[' → logprob: -5.604390621185303
    7. ' >=' → logprob: -6.104390621185303
    8. ' ==' → logprob: -6.104390621185303
    9. '```' → logprob: -6.979390621185303
    10. '<' → logprob: -7.354390621185303

Token 232: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002561864908784628
    2. ' ' → logprob: -6.002562046051025
    3. '```' → logprob: -9.877561569213867
    4. '==' → logprob: -10.877561569213867
    5. '   ' → logprob: -12.502561569213867
    6. '4' → logprob: -13.377561569213867
    7. '``' → logprob: -13.502561569213867
    8. '3' → logprob: -13.502561569213867
    9. '>' → logprob: -13.627561569213867
    10. '  ' → logprob: -13.940061569213867

Token 233: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05508166179060936
    2. ' ==' → logprob: -2.930081605911255
    3. '!=' → logprob: -9.180081367492676
    4. ':' → logprob: -10.305081367492676
    5. ' !=' → logprob: -10.430081367492676
    6. '==
' → logprob: -11.680081367492676
    7. '=' → logprob: -12.180081367492676
    8. '1' → logprob: -12.180081367492676
    9. ')==' → logprob: -12.930081367492676
    10. '2' → logprob: -13.180081367492676

Token 234: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1455908715724945
    2. '0' → logprob: -2.0205907821655273
    3. '1' → logprob: -6.270590782165527
    4. ' ' → logprob: -6.895590782165527
    5. '==' → logprob: -12.395590782165527
    6. '```' → logprob: -13.270590782165527
    7. '=' → logprob: -13.520590782165527
    8. '3' → logprob: -15.270590782165527
    9. '   ' → logprob: -15.770590782165527
    10. ' ==' → logprob: -16.145591735839844

Token 235: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2289673388004303
    2. ':' → logprob: -1.603967308998108
    3. ' and' → logprob: -6.353967189788818
    4. '                   ' → logprob: -7.603967189788818
    5. ' :
' → logprob: -7.978967189788818
    6. '           ' → logprob: -8.103967666625977
    7. '               ' → logprob: -8.353967666625977
    8. '):
' → logprob: -9.228967666625977
    9. '   ' → logprob: -9.728967666625977
    10. '                       ' → logprob: -9.853967666625977

Token 236: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.39374664425849915
    2. ' seats' → logprob: -1.3937466144561768
    3. '   ' → logprob: -3.3937466144561768
    4. '                       ' → logprob: -4.018746852874756
    5. 'se' → logprob: -4.643746852874756
    6. '               ' → logprob: -4.893746852874756
    7. '           ' → logprob: -5.393746852874756
    8. '       ' → logprob: -6.768746852874756
    9. '   ' → logprob: -7.518746852874756
    10. '                           ' → logprob: -7.518746852874756

Token 237: ' mid' (ID: 6959)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5779217481613159
    2. ' seats' → logprob: -0.8279217481613159
    3. '   ' → logprob: -6.5779218673706055
    4. ' mid' → logprob: -9.077921867370605
    5. '                   ' → logprob: -9.202921867370605
    6. 'mid' (adapté à ' mid') → logprob: -9.452921867370605
    7. ' ' → logprob: -9.702921867370605
    8. '       ' → logprob: -10.202921867370605
    9. '           ' → logprob: -10.327921867370605
    10. '    ' → logprob: -10.577921867370605

Token 238: '=(' (ID: 9893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.057661350816488266
    2. '=' → logprob: -3.182661294937134
    3. '=n' → logprob: -4.932661533355713
    4. '=int' → logprob: -5.682661533355713
    5. '=i' → logprob: -6.182661533355713
    6. '=(' → logprob: -7.307661533355713
    7. '=len' → logprob: -7.557661533355713
    8. '=index' → logprob: -8.557661056518555
    9. '=N' → logprob: -9.432661056518555
    10. '=
' → logprob: -10.057661056518555

Token 239: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003821716527454555
    2. ' n' → logprob: -7.875381946563721
    3. ')n' → logprob: -13.875382423400879
    4. '(n' → logprob: -14.000382423400879
    5. '   ' → logprob: -15.500382423400879
    6. '	n' → logprob: -17.000381469726562
    7. ' (' → logprob: -17.250381469726562
    8. ')' → logprob: -17.375381469726562
    9. 'len' → logprob: -17.750381469726562
    10. '
' → logprob: -18.375381469726562

Token 240: '+' (ID: 10)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.07100152969360352
    2. '-' → logprob: -3.1960015296936035
    3. ')//' → logprob: -4.1960015296936035
    4. ' //' → logprob: -4.5710015296936035
    5. ')' → logprob: -6.5710015296936035
    6. ' -' → logprob: -8.071001052856445
    7. ' ' → logprob: -8.196001052856445
    8. ' )' → logprob: -9.196001052856445
    9. '   ' → logprob: -9.446001052856445
    10. '```' → logprob: -11.696001052856445

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010545044642640278
    2. '-' → logprob: -9.250105857849121
    3. ' ' → logprob: -12.250105857849121
    4. '0' → logprob: -13.125105857849121
    5. '2' → logprob: -13.250105857849121
    6. '   ' → logprob: -15.000105857849121
    7. '//' → logprob: -15.125105857849121
    8. ' -' → logprob: -16.250104904174805
    9. '```' → logprob: -17.375104904174805
    10. '     ' → logprob: -18.125104904174805

Token 242: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.0001310719089815393
    2. '//' → logprob: -9.375130653381348
    3. ')' → logprob: -10.000130653381348
    4. ')>>' → logprob: -15.000130653381348
    5. ' )' → logprob: -15.375130653381348
    6. ' //' → logprob: -16.875131607055664
    7. '```' → logprob: -17.125131607055664
    8. '-' → logprob: -17.250131607055664
    9. '0' → logprob: -17.875131607055664
    10. '   ' → logprob: -18.000131607055664

Token 243: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.500003814697266
    4. '1' → logprob: -18.625003814697266
    5. '２' → logprob: -18.750003814697266
    6. '
' → logprob: -19.000003814697266
    7. '

' → logprob: -19.125003814697266
    8. '```' → logprob: -19.250003814697266
    9. '  ' → logprob: -19.500003814697266
    10. '3' → logprob: -19.750003814697266

Token 244: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0494021475315094
    2. ' -' → logprob: -3.0494022369384766
    3. '-se' → logprob: -7.799402236938477
    4. '                   ' → logprob: -8.424402236938477
    5. 'else' → logprob: -9.674402236938477
    6. '               ' → logprob: -10.299402236938477
    7. '           ' → logprob: -10.674402236938477
    8. '-n' → logprob: -11.424402236938477
    9. '
' → logprob: -11.674402236938477
    10. ' ' → logprob: -12.049402236938477

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -19.250009536743164
    4. '0' → logprob: -19.875009536743164
    5. '```' → logprob: -19.875009536743164
    6. '   ' → logprob: -20.500009536743164
    7. '2' → logprob: -20.562509536743164
    8. '۱' → logprob: -20.750009536743164
    9. '１' → logprob: -21.437509536743164
    10. '...' → logprob: -21.437509536743164

Token 246: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5017580389976501
    2. 'else' → logprob: -2.126758098602295
    3. '               ' → logprob: -2.501758098602295
    4. 'se' → logprob: -2.751758098602295
    5. ' else' → logprob: -3.376758098602295
    6. '           ' → logprob: -4.001758098602295
    7. '                    
' → logprob: -4.126758098602295
    8. ' seats' → logprob: -4.251758098602295
    9. '                       ' → logprob: -4.501758098602295
    10. '                        
' → logprob: -5.001758098602295

Token 247: '               ' (ID: 506)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5410411357879639
    2. '                   ' → logprob: -1.2910411357879639
    3. '               ' → logprob: -3.041041135787964
    4. ' seats' → logprob: -3.416041135787964
    5. '           ' → logprob: -3.916041135787964
    6. '                       ' → logprob: -4.041041374206543
    7. '       ' → logprob: -4.916041374206543
    8. '<|end|>' → logprob: -5.666041374206543
    9. '   ' → logprob: -6.166041374206543
    10. '                    
' → logprob: -6.291041374206543

Token 248: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5319269895553589
    2. '               ' → logprob: -1.1569269895553589
    3. ' else' → logprob: -2.4069271087646484
    4. '                   ' → logprob: -5.531927108764648
    5. '           ' → logprob: -6.156927108764648
    6. '```' → logprob: -7.406927108764648
    7. '
' → logprob: -7.656927108764648
    8. ':
' → logprob: -8.906927108764648
    9. '   ' → logprob: -9.156927108764648
    10. '       ' → logprob: -9.281927108764648

Token 249: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15524344146251678
    2. ':' → logprob: -2.155243396759033
    3. '                   ' → logprob: -3.905243396759033
    4. ' mid' → logprob: -5.655243396759033
    5. '(mid' → logprob: -6.655243396759033
    6. 'mid' → logprob: -6.780243396759033
    7. '[mid' → logprob: -7.655243396759033
    8. '{
' → logprob: -8.405243873596191
    9. '=' → logprob: -8.530243873596191
    10. '           ' → logprob: -8.905243873596191

Token 250: '                   ' (ID: 699)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.07134824246168137
    2. 'mid' → logprob: -2.696348190307617
    3. '                   ' → logprob: -6.696348190307617
    4. '               ' → logprob: -9.696348190307617
    5. '
' → logprob: -10.071348190307617
    6. '   ' → logprob: -10.696348190307617
    7. '           ' → logprob: -11.821348190307617
    8. '                    
' → logprob: -11.946348190307617
    9. '(mid' → logprob: -11.946348190307617
    10. '[mid' → logprob: -12.446348190307617

Token 251: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.03365422785282135
    2. ' mid' → logprob: -3.40865421295166
    3. '                   ' → logprob: -13.28365421295166
    4. '[mid' → logprob: -13.53365421295166
    5. '   ' → logprob: -13.65865421295166
    6. 'n' → logprob: -13.90865421295166
    7. ' ' → logprob: -14.03365421295166
    8. '(mid' → logprob: -14.15865421295166
    9. '           ' → logprob: -14.28365421295166
    10. '               ' → logprob: -14.90865421295166

Token 252: '=n' (ID: 47985)
  Prédit: '=('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.39771705865859985
    2. '=' → logprob: -1.397716999053955
    3. '=n' → logprob: -2.522716999053955
    4. '=((' → logprob: -8.022717475891113
    5. ' =' → logprob: -8.272717475891113
    6. ' =(' → logprob: -9.772717475891113
    7. '=
' → logprob: -10.397717475891113
    8. '=int' → logprob: -10.397717475891113
    9. '=

' → logprob: -10.772717475891113
    10. '=N' → logprob: -12.522717475891113

Token 253: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -6.749814019713085e-06
    2. ' //' → logprob: -12.500006675720215
    3. '#' → logprob: -13.625006675720215
    4. '   ' → logprob: -13.875006675720215
    5. '```' → logprob: -15.125006675720215
    6. ')//' → logprob: -15.625006675720215
    7. ' ' → logprob: -16.25000762939453
    8. '/' → logprob: -16.25000762939453
    9. '//=' → logprob: -16.37500762939453
    10. '2' → logprob: -17.62500762939453

Token 254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '۲' → logprob: -15.750007629394531
    4. '=' → logprob: -16.50000762939453
    5. '   ' → logprob: -16.75000762939453
    6. '२' → logprob: -17.25000762939453
    7. '２' → logprob: -17.62500762939453
    8. '```' → logprob: -17.93750762939453
    9. '২' → logprob: -18.00000762939453
    10. '+' → logprob: -18.00000762939453

Token 255: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5847002863883972
    2. ' -' → logprob: -0.8347002863883972
    3. '<|end|>' → logprob: -5.209700107574463
    4. 'else' → logprob: -7.459700107574463
    5. '
' → logprob: -7.584700107574463
    6. '   ' → logprob: -7.834700107574463
    7. '               ' → logprob: -7.834700107574463
    8. '       ' → logprob: -8.209700584411621
    9. '           ' → logprob: -8.709700584411621
    10. ' ' → logprob: -8.834700584411621

Token 256: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3692522048950195
    2. '               ' → logprob: -1.3692522048950195
    3. '                   ' → logprob: -1.9942522048950195
    4. ' for' → logprob: -2.4942522048950195
    5. '<|end|>' → logprob: -2.6192522048950195
    6. 'else' → logprob: -2.9942522048950195
    7. '           ' → logprob: -3.3692522048950195
    8. ' else' → logprob: -3.7442522048950195
    9. 'se' → logprob: -4.6192522048950195
    10. 'for' → logprob: -4.8692522048950195

Token 257: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.1485450267791748
    2. ' seats' → logprob: -2.023545026779175
    3. '                   ' → logprob: -6.523545265197754
    4. '               ' → logprob: -6.773545265197754
    5. '       ' → logprob: -7.148545265197754
    6. '           ' → logprob: -7.398545265197754
    7. ' for' → logprob: -8.148545265197754
    8. '                       ' → logprob: -8.148545265197754
    9. '   ' → logprob: -8.148545265197754
    10. ' if' → logprob: -8.273545265197754

Token 258: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -7.941850526549388e-06
    2. '[' → logprob: -12.625007629394531
    3. '[m' → logprob: -12.625007629394531
    4. '[
' → logprob: -14.500007629394531
    5. ' [' → logprob: -14.750007629394531
    6. '[mem' → logprob: -15.875007629394531
    7. '```' → logprob: -16.75000762939453
    8. '[int' → logprob: -17.12500762939453
    9. '
' → logprob: -17.12500762939453
    10. '[min' → logprob: -17.25000762939453

Token 259: ']='' (ID: 69193)
  Prédit: ']=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']='' → logprob: -0.1547350138425827
    2. ']' → logprob: -2.0297350883483887
    3. ']=' → logprob: -4.779735088348389
    4. '='' → logprob: -5.779735088348389
    5. '='#' → logprob: -8.15473461151123
    6. '']='' → logprob: -9.15473461151123
    7. ']=='' → logprob: -9.90473461151123
    8. ' ]' → logprob: -10.77973461151123
    9. '']' → logprob: -11.77973461151123
    10. '=' → logprob: -11.77973461151123

Token 260: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0017680044984444976
    2. ''C' → logprob: -6.376768112182617
    3. 'A' → logprob: -10.376768112182617
    4. ''' → logprob: -10.376768112182617
    5. '#' → logprob: -13.626768112182617
    6. ' C' → logprob: -14.376768112182617
    7. 'B' → logprob: -14.501768112182617
    8. ''#' → logprob: -14.751768112182617
    9. ''A' → logprob: -15.126768112182617
    10. '"C' → logprob: -15.376768112182617

Token 261: ''
' (ID: 2207)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30674779415130615
    2. 'else' → logprob: -2.0567479133605957
    3. '               ' → logprob: -2.4317479133605957
    4. ''' → logprob: -4.181747913360596
    5. '       ' → logprob: -4.306747913360596
    6. '<|end|>' → logprob: -4.931747913360596
    7. ''
' → logprob: -5.431747913360596
    8. 'elif' → logprob: -6.056747913360596
    9. ' else' → logprob: -6.181747913360596
    10. '                   ' → logprob: -6.306747913360596

Token 262: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11821567267179489
    2. '           ' → logprob: -2.618215560913086
    3. '               ' → logprob: -3.493215560913086
    4. ' else' → logprob: -4.868215560913086
    5. '       ' → logprob: -8.493215560913086
    6. 'continue' → logprob: -8.993215560913086
    7. '   ' → logprob: -10.118215560913086
    8. '```' → logprob: -10.368215560913086
    9. '<|end|>' → logprob: -11.118215560913086
    10. 'import' → logprob: -11.243215560913086

Token 263: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.020779402926564217
    2. ' else' → logprob: -3.8957793712615967
    3. '           ' → logprob: -8.770779609680176
    4. '               ' → logprob: -10.270779609680176
    5. '       ' → logprob: -10.770779609680176
    6. 'continue' → logprob: -11.395779609680176
    7. '	else' → logprob: -12.145779609680176
    8. 'elif' → logprob: -12.270779609680176
    9. '<|end|>' → logprob: -13.520779609680176
    10. '   ' → logprob: -13.645779609680176

Token 264: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2556050717830658
    2. ':' → logprob: -1.5056051015853882
    3. '               ' → logprob: -5.630605220794678
    4. '           ' → logprob: -11.00560474395752
    5. ':

' → logprob: -11.25560474395752
    6. ':
' → logprob: -11.38060474395752
    7. ' if' → logprob: -11.88060474395752
    8. '                   ' → logprob: -12.13060474395752
    9. ' :
' → logprob: -12.13060474395752
    10. '):
' → logprob: -12.75560474395752

Token 265: '               ' (ID: 506)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.49558839201927185
    2. 'left' → logprob: -1.8705884218215942
    3. 'dist' → logprob: -2.4955883026123047
    4. ' positions' → logprob: -3.6205883026123047
    5. 'positions' → logprob: -4.245588302612305
    6. 'pos' → logprob: -4.245588302612305
    7. ' min' → logprob: -4.745588302612305
    8. ' distances' → logprob: -4.745588302612305
    9. ' candidates' → logprob: -4.870588302612305
    10. ' dist' → logprob: -5.120588302612305

Token 266: ' placed' (ID: 12989)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2675640881061554
    2. ' dist' → logprob: -3.142564058303833
    3. 'left' → logprob: -3.267564058303833
    4. 'best' → logprob: -3.767564058303833
    5. ' distances' → logprob: -3.767564058303833
    6. ' left' → logprob: -4.017564296722412
    7. 'd' → logprob: -4.267564296722412
    8. 'pos' → logprob: -4.267564296722412
    9. 'max' → logprob: -4.392564296722412
    10. ' best' → logprob: -4.517564296722412

Token 267: '=False' (ID: 12148)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08709833770990372
    2. '=False' → logprob: -3.3370983600616455
    3. '=True' → logprob: -3.8370983600616455
    4. '=' → logprob: -3.9620983600616455
    5. '_pos' → logprob: -6.087098121643066
    6. '_positions' → logprob: -6.712098121643066
    7. '_token' → logprob: -7.087098121643066
    8. '_index' → logprob: -7.212098121643066
    9. '=None' → logprob: -7.462098121643066
    10. '_tokens' → logprob: -8.087098121643066

Token 268: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5367413759231567
    2. '               ' → logprob: -1.4117413759231567
    3. '
' → logprob: -2.161741256713867
    4. '                   ' → logprob: -4.161741256713867
    5. 'for' → logprob: -4.536741256713867
    6. '           ' → logprob: -4.911741256713867
    7. '<|end|>' → logprob: -5.286741256713867
    8. '                
' → logprob: -5.536741256713867
    9. ' 
' → logprob: -5.786741256713867
    10. '       ' → logprob: -6.411741256713867

Token 269: '               ' (ID: 506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46838459372520447
    2. '               ' → logprob: -1.8433846235275269
    3. '                   ' → logprob: -2.7183845043182373
    4. '
' → logprob: -2.8433845043182373
    5. '       ' → logprob: -3.9683845043182373
    6. '           ' → logprob: -4.093384742736816
    7. 'for' → logprob: -4.343384742736816
    8. '<|end|>' → logprob: -4.843384742736816
    9. '```' → logprob: -5.218384742736816
    10. ',' → logprob: -5.468384742736816

Token 270: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4816253185272217
    2. 'max' → logprob: -1.6066253185272217
    3. 'dist' → logprob: -2.1066253185272217
    4. ' for' → logprob: -4.231625556945801
    5. 'last' → logprob: -4.231625556945801
    6. 'distance' → logprob: -4.731625556945801
    7. 'prev' → logprob: -5.481625556945801
    8. 'empty' → logprob: -5.731625556945801
    9. ' distances' → logprob: -5.731625556945801
    10. ' max' → logprob: -5.981625556945801

Token 271: ' pos' (ID: 1253)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08976742625236511
    2. 'i' → logprob: -2.4647674560546875
    3. ' j' → logprob: -7.8397674560546875
    4. 'j' → logprob: -9.214767456054688
    5. ' distance' → logprob: -9.964767456054688
    6. ' d' → logprob: -10.339767456054688
    7. 'd' → logprob: -10.589767456054688
    8. 'distance' → logprob: -10.589767456054688
    9. ' idx' → logprob: -10.714767456054688
    10. ' seat' → logprob: -10.714767456054688

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005615889094769955
    2. 'in' → logprob: -5.255615711212158
    3. ',' → logprob: -8.130616188049316
    4. ' ' → logprob: -10.505616188049316
    5. ' ,' → logprob: -11.755616188049316
    6. ',in' → logprob: -11.880616188049316
    7. 's' → logprob: -12.005616188049316
    8. '   ' → logprob: -12.380616188049316
    9. '	in' → logprob: -12.630616188049316
    10. 'i' → logprob: -12.630616188049316

Token 273: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.3280119001865387
    2. ' range' → logprob: -1.9530118703842163
    3. 'range' → logprob: -2.578011989593506
    4. ' occupied' → logprob: -2.828011989593506
    5. 'sorted' → logprob: -6.953011989593506
    6. ' seats' → logprob: -7.828011989593506
    7. 'se' → logprob: -8.078011512756348
    8. ' sorted' → logprob: -8.453011512756348
    9. '[' → logprob: -8.453011512756348
    10. 'occup' → logprob: -8.578011512756348

Token 274: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20445607602596283
    2. ':' → logprob: -1.704456090927124
    3. '+' → logprob: -6.704455852508545
    4. '                   ' → logprob: -6.829455852508545
    5. '               ' → logprob: -8.954456329345703
    6. '   ' → logprob: -9.079456329345703
    7. '[::-' → logprob: -9.329456329345703
    8. ',' → logprob: -9.454456329345703
    9. '                       ' → logprob: -10.079456329345703
    10. '=' → logprob: -10.079456329345703

Token 275: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07483987510204315
    2. '   ' → logprob: -3.5748398303985596
    3. '                    
' → logprob: -5.074840068817139
    4. ':' → logprob: -5.074840068817139
    5. '    
' → logprob: -5.199840068817139
    6. '    ' → logprob: -5.449840068817139
    7. '       ' → logprob: -5.699840068817139
    8. ' if' → logprob: -6.074840068817139
    9. '           ' → logprob: -6.074840068817139
    10. '<|end|>' → logprob: -6.074840068817139

Token 276: ' right' (ID: 1849)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22113333642482758
    2. ' left' → logprob: -2.471133232116699
    3. '                   ' → logprob: -3.346133232116699
    4. 'if' → logprob: -4.096133232116699
    5. ' for' → logprob: -4.096133232116699
    6. '                       ' → logprob: -4.971133232116699
    7. '               ' → logprob: -5.471133232116699
    8. 'left' → logprob: -5.721133232116699
    9. '       ' → logprob: -5.971133232116699
    10. '
' → logprob: -5.971133232116699

Token 277: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05256572738289833
    2. '=i' → logprob: -3.927565813064575
    3. ' =' → logprob: -4.177565574645996
    4. '_pos' → logprob: -5.177565574645996
    5. '_idx' → logprob: -5.552565574645996
    6. '_index' → logprob: -5.677565574645996
    7. 'pos' → logprob: -6.427565574645996
    8. '=index' → logprob: -7.427565574645996
    9. '=p' → logprob: -8.177565574645996
    10. '_range' → logprob: -9.177565574645996

Token 278: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.026386216282844543
    2. ' pos' → logprob: -4.526386260986328
    3. 'False' → logprob: -5.151386260986328
    4. 'se' → logprob: -5.526386260986328
    5. '(pos' → logprob: -6.151386260986328
    6. 'None' → logprob: -6.901386260986328
    7. ' seats' → logprob: -7.401386260986328
    8. ' False' → logprob: -7.901386260986328
    9. 'next' → logprob: -8.151386260986328
    10. '-' → logprob: -9.026386260986328

Token 279: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08131251484155655
    2. ' +' → logprob: -3.206312417984009
    3. '=' → logprob: -3.706312417984009
    4. ' =' → logprob: -5.331312656402588
    5. '<n' → logprob: -6.706312656402588
    6. '<' → logprob: -6.831312656402588
    7. ' <' → logprob: -6.956312656402588
    8. '=None' → logprob: -7.081312656402588
    9. '+=' → logprob: -7.331312656402588
    10. '+n' → logprob: -8.08131217956543

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00032044618274085224
    2. '2' → logprob: -8.125320434570312
    3. ' ' → logprob: -10.625320434570312
    4. '   ' → logprob: -15.875320434570312
    5. '
' → logprob: -17.375320434570312
    6. '```' → logprob: -18.375320434570312
    7. '3' → logprob: -18.875320434570312
    8. '=' → logprob: -19.000320434570312
    9. '  ' → logprob: -19.375320434570312
    10. '0' → logprob: -19.750320434570312

Token 281: '
' (ID: 198)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3625285029411316
    2. '<' → logprob: -1.8625285625457764
    3. '<n' → logprob: -2.7375285625457764
    4. '                   ' → logprob: -2.9875285625457764
    5. '<len' → logprob: -3.9875285625457764
    6. '<=' → logprob: -5.112528324127197
    7. ' <=' → logprob: -5.487528324127197
    8. '<|end|>' → logprob: -6.987528324127197
    9. '               ' → logprob: -7.362528324127197
    10. '==' → logprob: -7.737528324127197

Token 282: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030234280973672867
    2. '<|end|>' → logprob: -3.9052343368530273
    3. '               ' → logprob: -5.280234336853027
    4. '           ' → logprob: -7.030234336853027
    5. '<|end|>' → logprob: -7.530234336853027
    6. '		           ' → logprob: -7.530234336853027
    7. '	               ' → logprob: -7.655234336853027
    8. '				' → logprob: -8.405234336853027
    9. '	' → logprob: -8.780234336853027
    10. ' and' → logprob: -8.780234336853027

Token 283: ' left' (ID: 3561)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2237059772014618
    2. '                   ' → logprob: -1.9737060070037842
    3. ' if' → logprob: -3.348706007003784
    4. 'while' → logprob: -3.723706007003784
    5. ' while' → logprob: -6.598705768585205
    6. '               ' → logprob: -8.723706245422363
    7. '
' → logprob: -8.848706245422363
    8. '           ' → logprob: -9.348706245422363
    9. '                    
' → logprob: -9.473706245422363
    10. '   ' → logprob: -9.598706245422363

Token 284: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01315352413803339
    2. '=None' → logprob: -5.513153553009033
    3. '=-' → logprob: -5.888153553009033
    4. ' =' → logprob: -6.013153553009033
    5. '==' → logprob: -7.013153553009033
    6. '=int' → logprob: -7.263153553009033
    7. '=True' → logprob: -7.638153553009033
    8. '=False' → logprob: -8.263153076171875
    9. '=len' → logprob: -8.513153076171875
    10. '=i' → logprob: -8.763153076171875

Token 285: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0005841302336193621
    2. 'right' → logprob: -7.625584125518799
    3. ' pos' → logprob: -10.125584602355957
    4. '0' → logprob: -11.000584602355957
    5. 'se' → logprob: -11.500584602355957
    6. 'p' → logprob: -11.625584602355957
    7. '(pos' → logprob: -12.250584602355957
    8. '1' → logprob: -12.625584602355957
    9. 'None' → logprob: -13.250584602355957
    10. 'occupied' → logprob: -13.500584602355957

Token 286: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2241741418838501
    2. '-' → logprob: -2.5991740226745605
    3. '=' → logprob: -2.5991740226745605
    4. '==' → logprob: -4.2241740226745605
    5. '<|end|>' → logprob: -4.5991740226745605
    6. '>=' → logprob: -5.0991740226745605
    7. ' +' → logprob: -5.3491740226745605
    8. '==-' → logprob: -5.5991740226745605
    9. ' -' → logprob: -6.2241740226745605
    10. '                   ' → logprob: -6.5991740226745605

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.500007629394531
    3. '```' → logprob: -13.000007629394531
    4. '+' → logprob: -14.875007629394531
    5. '
' → logprob: -15.625007629394531
    6. '0' → logprob: -15.875007629394531
    7. '<|end|>' → logprob: -16.37500762939453
    8. '   ' → logprob: -16.75000762939453
    9. '2' → logprob: -16.87500762939453
    10. '-' → logprob: -16.87500762939453

Token 288: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08970923721790314
    2. '<|end|>' → logprob: -2.9647092819213867
    3. '
' → logprob: -4.339709281921387
    4. '                    
' → logprob: -4.839709281921387
    5. ',' → logprob: -5.714709281921387
    6. '<|end|>' → logprob: -6.089709281921387
    7. '               ' → logprob: -6.714709281921387
    8. ' 
' → logprob: -7.339709281921387
    9. '           ' → logprob: -7.589709281921387
    10. '                   
' → logprob: -7.714709281921387

Token 289: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007325724698603153
    2. '<|end|>' → logprob: -5.507325649261475
    3. ' if' → logprob: -7.632325649261475
    4. '               ' → logprob: -8.007326126098633
    5. '```' → logprob: -8.007326126098633
    6. '                    
' → logprob: -8.007326126098633
    7. ',' → logprob: -8.257326126098633
    8. '           ' → logprob: -8.632326126098633
    9. '	               ' → logprob: -8.757326126098633
    10. '
' → logprob: -8.882326126098633

Token 290: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5002102255821228
    2. ' if' → logprob: -1.0002102851867676
    3. '                   ' → logprob: -3.7502102851867676
    4. 'while' → logprob: -6.500210285186768
    5. ' while' → logprob: -7.250210285186768
    6. '                    
' → logprob: -11.12520980834961
    7. '               ' → logprob: -11.75020980834961
    8. '           ' → logprob: -11.75020980834961
    9. 'for' → logprob: -11.75020980834961
    10. '                    ' → logprob: -11.87520980834961

Token 291: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6888018846511841
    2. ' right' → logprob: -1.063801884651184
    3. '0' → logprob: -2.0638017654418945
    4. ' ' → logprob: -3.8138017654418945
    5. 'left' → logprob: -6.3138017654418945
    6. ' left' → logprob: -7.0638017654418945
    7. '(right' → logprob: -7.8138017654418945
    8. '(' → logprob: -9.063801765441895
    9. ' seats' → logprob: -9.313801765441895
    10. '1' → logprob: -9.438801765441895

Token 292: '<n' (ID: 33872)
  Prédit: '<n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.46181216835975647
    2. '<' → logprob: -1.336812138557434
    3. '<len' → logprob: -2.9618122577667236
    4. ' <' → logprob: -3.0868122577667236
    5. '<=' → logprob: -4.8368120193481445
    6. '<N' → logprob: -7.4618120193481445
    7. '<num' → logprob: -7.7118120193481445
    8. ' <=' → logprob: -8.336812019348145
    9. '<size' → logprob: -8.711812019348145
    10. '>=' → logprob: -9.336812019348145

Token 293: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2254541963338852
    2. 'and' → logprob: -1.6004542112350464
    3. ':
' → logprob: -11.100454330444336
    4. '                   ' → logprob: -11.850454330444336
    5. ' ' → logprob: -12.350454330444336
    6. '               ' → logprob: -12.475454330444336
    7. '                       ' → logprob: -13.350454330444336
    8. ':' → logprob: -13.475454330444336
    9. '           ' → logprob: -13.475454330444336
    10. '):
' → logprob: -13.600454330444336

Token 294: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.004096804652363062
    2. ' seats' → logprob: -5.504096984863281
    3. '                   ' → logprob: -12.129096984863281
    4. '   ' → logprob: -13.004096984863281
    5. '(se' → logprob: -13.129096984863281
    6. '               ' → logprob: -13.254096984863281
    7. ' se' → logprob: -14.254096984863281
    8. '       ' → logprob: -14.379096984863281
    9. '           ' → logprob: -14.379096984863281
    10. '```' → logprob: -14.379096984863281

Token 295: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -1.652451464906335e-05
    2. '[left' → logprob: -11.250016212463379
    3. '[' → logprob: -13.375016212463379
    4. 'right' → logprob: -14.250016212463379
    5. '```' → logprob: -14.875016212463379
    6. ' [' → logprob: -15.500016212463379
    7. '[
' → logprob: -15.625016212463379
    8. '   ' → logprob: -16.000017166137695
    9. '	right' → logprob: -16.000017166137695
    10. '==' → logprob: -16.500017166137695

Token 296: ']=='' (ID: 71177)
  Prédit: ']==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.017220845445990562
    2. ']==' → logprob: -4.767220973968506
    3. '=='' → logprob: -5.142220973968506
    4. '']=='' → logprob: -6.642220973968506
    5. ']' → logprob: -6.767220973968506
    6. ' ]' → logprob: -9.142220497131348
    7. ' =='' → logprob: -9.267220497131348
    8. ')=='' → logprob: -10.267220497131348
    9. ']=="' → logprob: -11.642220497131348
    10. ']'' → logprob: -11.892220497131348

Token 297: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6332231163978577
    2. ''#' → logprob: -0.7582231163978577
    3. '#:' → logprob: -8.508223533630371
    4. ' '#' → logprob: -8.508223533630371
    5. '#
' → logprob: -9.633223533630371
    6. ''' → logprob: -10.383223533630371
    7. '='#' → logprob: -10.508223533630371
    8. ' '#'' → logprob: -10.508223533630371
    9. ':'#' → logprob: -11.133223533630371
    10. '('#' → logprob: -11.258223533630371

Token 298: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8704512715339661
    2. '                       ' → logprob: -0.8704512715339661
    3. ':' → logprob: -2.4954512119293213
    4. ' and' → logprob: -2.7454512119293213
    5. '                   ' → logprob: -4.8704514503479
    6. '':
' → logprob: -5.4954514503479
    7. ' :
' → logprob: -6.9954514503479
    8. '':' → logprob: -6.9954514503479
    9. '):
' → logprob: -7.6204514503479
    10. 'and' → logprob: -7.8704514503479

Token 299: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0022822916507720947
    2. '                   ' → logprob: -6.62728214263916
    3. '                        
' → logprob: -7.87728214263916
    4. ':
' → logprob: -8.12728214263916
    5. ':' → logprob: -9.25228214263916
    6. ' and' → logprob: -9.87728214263916
    7. '                           ' → logprob: -10.50228214263916
    8. '       ' → logprob: -10.87728214263916
    9. '                    
' → logprob: -11.50228214263916
    10. ',' → logprob: -11.50228214263916

Token 300: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.018282920122146606
    2. '                           ' → logprob: -4.393282890319824
    3. ' seats' → logprob: -5.393282890319824
    4. '                       ' → logprob: -7.018282890319824
    5. '                               ' → logprob: -8.393282890319824
    6. '   ' → logprob: -10.393282890319824
    7. '                   ' → logprob: -11.268282890319824
    8. '           ' → logprob: -11.518282890319824
    9. ' ' → logprob: -11.518282890319824
    10. '               ' → logprob: -11.768282890319824

Token 301: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -5.848420551046729e-05
    2. '[' → logprob: -10.0000581741333
    3. '                   ' → logprob: -12.2500581741333
    4. '[left' → logprob: -12.7500581741333
    5. 'right' → logprob: -13.0000581741333
    6. '                       ' → logprob: -13.5000581741333
    7. '               ' → logprob: -14.2500581741333
    8. ' [' → logprob: -14.7500581741333
    9. '	right' → logprob: -15.8750581741333
    10. ' right' → logprob: -16.375059127807617

Token 302: ']='' (ID: 69193)
  Prédit: ']=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']='' → logprob: -0.011147095821797848
    2. ']' → logprob: -5.0111470222473145
    3. ']=' → logprob: -6.3861470222473145
    4. ']=='' → logprob: -6.6361470222473145
    5. '='' → logprob: -6.7611470222473145
    6. '']='' → logprob: -8.386147499084473
    7. ' ]' → logprob: -11.261147499084473
    8. ']==' → logprob: -11.886147499084473
    9. '=='' → logprob: -12.011147499084473
    10. ']!='' → logprob: -12.886147499084473

Token 303: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.9981420336989686e-05
    2. ''C' → logprob: -10.875020027160645
    3. ' C' → logprob: -14.500020027160645
    4. ''' → logprob: -14.500020027160645
    5. '"C' → logprob: -18.000019073486328
    6. 'c' → logprob: -18.000019073486328
    7. '`' → logprob: -18.125019073486328
    8. '```' → logprob: -19.125019073486328
    9. 'С' → logprob: -19.250019073486328
    10. '_C' → logprob: -19.625019073486328

Token 304: ''
' (ID: 2207)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5670881867408752
    2. '<|end|>' → logprob: -1.1920881271362305
    3. '
' → logprob: -2.0670881271362305
    4. '                   ' → logprob: -6.6920881271362305
    5. '                        
' → logprob: -8.44208812713623
    6. '           ' → logprob: -8.44208812713623
    7. '               ' → logprob: -8.56708812713623
    8. '<|end|>' → logprob: -8.69208812713623
    9. '```' → logprob: -8.94208812713623
    10. '                           ' → logprob: -9.06708812713623

Token 305: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0028142668306827545
    2. '
' → logprob: -6.752814292907715
    3. '<|end|>' → logprob: -7.002814292907715
    4. '					' → logprob: -8.377814292907715
    5. '                   ' → logprob: -8.752814292907715
    6. '                        
' → logprob: -9.002814292907715
    7. '               ' → logprob: -9.877814292907715
    8. '```' → logprob: -10.252814292907715
    9. '		               ' → logprob: -10.752814292907715
    10. '	                   ' → logprob: -10.877814292907715

Token 306: ' placed' (ID: 12989)
  Prédit: ' placed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.9822056889533997
    2. 'placed' (adapté à ' placed') → logprob: -0.9822056889533997
    3. 'break' → logprob: -1.8572056293487549
    4. ' break' → logprob: -2.357205629348755
    5. '                       ' → logprob: -9.107205390930176
    6. '                               ' → logprob: -10.107205390930176
    7. '
' → logprob: -10.482205390930176
    8. 'Placed' → logprob: -10.482205390930176
    9. '```' → logprob: -11.357205390930176
    10. '               ' → logprob: -12.232205390930176

Token 307: '=True' (ID: 7827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3327675759792328
    2. '=True' → logprob: -1.5827676057815552
    3. '=False' → logprob: -2.5827674865722656
    4. ' =' → logprob: -6.207767486572266
    5. '=
' → logprob: -9.582767486572266
    6. '<|end|>' → logprob: -12.332767486572266
    7. '=true' → logprob: -13.832767486572266
    8. ']=' → logprob: -13.957767486572266
    9. '
' → logprob: -14.957767486572266
    10. '                       ' → logprob: -14.957767486572266

Token 308: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0014625000767409801
    2. '<|end|>' → logprob: -7.376462459564209
    3. '                        
' → logprob: -8.376462936401367
    4. '
' → logprob: -8.751462936401367
    5. '               ' → logprob: -9.001462936401367
    6. '                   ' → logprob: -9.376462936401367
    7. '                           ' → logprob: -9.751462936401367
    8. '					' → logprob: -9.876462936401367
    9. '           ' → logprob: -10.001462936401367
    10. '       ' → logprob: -10.626462936401367

Token 309: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0006652565789408982
    2. '					' → logprob: -8.250665664672852
    3. '               ' → logprob: -8.625665664672852
    4. '                   ' → logprob: -9.250665664672852
    5. '<|end|>' → logprob: -10.625665664672852
    6. '       ' → logprob: -10.875665664672852
    7. '           ' → logprob: -10.875665664672852
    8. '		' → logprob: -11.250665664672852
    9. '```' → logprob: -11.750665664672852
    10. '		               ' → logprob: -11.875665664672852

Token 310: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.017185453325510025
    2. '                       ' → logprob: -4.767185688018799
    3. ' break' → logprob: -4.767185688018799
    4. '                   ' → logprob: -11.39218521118164
    5. '               ' → logprob: -12.14218521118164
    6. 'return' → logprob: -12.39218521118164
    7. '
' → logprob: -12.76718521118164
    8. '	break' → logprob: -12.89218521118164
    9. '           ' → logprob: -13.51718521118164
    10. '                           ' → logprob: -14.14218521118164

Token 311: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8529822826385498
    2. '                   ' → logprob: -0.8529822826385498
    3. '           ' → logprob: -2.47798228263855
    4. ' if' → logprob: -3.85298228263855
    5. 'if' (adapté à ' if') → logprob: -3.97798228263855
    6. '   ' → logprob: -4.602982521057129
    7. '       ' → logprob: -4.977982521057129
    8. '		' → logprob: -6.852982521057129
    9. ' ' → logprob: -6.977982521057129
    10. '				' → logprob: -7.352982521057129

Token 314: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.0086253322660923
    2. 'left' → logprob: -4.758625507354736
    3. ' seats' → logprob: -11.758625030517578
    4. ' right' → logprob: -13.008625030517578
    5. 'right' → logprob: -15.883625030517578
    6. '	left' → logprob: -15.883625030517578
    7. ' ' → logprob: -16.258625030517578
    8. '(left' → logprob: -16.383625030517578
    9. ' seat' → logprob: -16.508625030517578
    10. ' pos' → logprob: -16.633625030517578

Token 315: '>=' (ID: 20974)
  Prédit: '<n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.05611107125878334
    2. '>=' → logprob: -3.1811110973358154
    3. '>' → logprob: -5.181110858917236
    4. ' >=' → logprob: -5.306110858917236
    5. '=='' → logprob: -6.931110858917236
    6. ' <' → logprob: -7.306110858917236
    7. '<'' → logprob: -8.306111335754395
    8. '=n' → logprob: -9.056111335754395
    9. '[n' → logprob: -9.306111335754395
    10. '==' → logprob: -9.681111335754395

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003181159496307373
    2. ' ' → logprob: -5.753180980682373
    3. '1' → logprob: -12.753181457519531
    4. '   ' → logprob: -15.003181457519531
    5. '
' → logprob: -16.50318145751953
    6. '  ' → logprob: -17.37818145751953
    7. '```' → logprob: -17.37818145751953
    8. '    ' → logprob: -17.87818145751953
    9. '=' → logprob: -18.75318145751953
    10. '2' → logprob: -18.87818145751953

Token 317: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03807075694203377
    2. 'and' → logprob: -3.2880706787109375
    3. '                       ' → logprob: -11.038070678710938
    4. '                   ' → logprob: -12.413070678710938
    5. ':
' → logprob: -12.538070678710938
    6. '           ' → logprob: -13.413070678710938
    7. '               ' → logprob: -14.038070678710938
    8. '                           ' → logprob: -14.538070678710938
    9. ' ' → logprob: -14.788070678710938
    10. '<|end|>' → logprob: -14.913070678710938

Token 318: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.005936143919825554
    2. ' seats' → logprob: -5.130936145782471
    3. '   ' → logprob: -13.630935668945312
    4. '	se' → logprob: -13.755935668945312
    5. 'seat' → logprob: -14.130935668945312
    6. '(se' → logprob: -14.130935668945312
    7. ' ' → logprob: -14.130935668945312
    8. '       ' → logprob: -15.005935668945312
    9. 'Seats' → logprob: -15.130935668945312
    10. '_se' → logprob: -15.130935668945312

Token 319: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.0002448893792461604
    2. '[' → logprob: -8.750245094299316
    3. 'left' → logprob: -9.375245094299316
    4. '[right' → logprob: -13.625245094299316
    5. '[
' → logprob: -16.375244140625
    6. '	left' → logprob: -16.375244140625
    7. '```' → logprob: -16.500244140625
    8. ' [' → logprob: -16.875244140625
    9. '[#' → logprob: -17.375244140625
    10. '   ' → logprob: -17.500244140625

Token 320: ']=='' (ID: 71177)
  Prédit: ']==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.02361718937754631
    2. '=='' → logprob: -3.7736172676086426
    3. ']==' → logprob: -8.898616790771484
    4. '']=='' → logprob: -9.148616790771484
    5. ']' → logprob: -9.523616790771484
    6. ' =='' → logprob: -10.523616790771484
    7. ')=='' → logprob: -11.148616790771484
    8. ']!='' → logprob: -11.523616790771484
    9. ' ]' → logprob: -13.148616790771484
    10. ']=="' → logprob: -14.023616790771484

Token 321: '#' (ID: 2)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.25216978788375854
    2. '#' → logprob: -1.5021698474884033
    3. ' '#'' → logprob: -9.002169609069824
    4. ''' → logprob: -9.252169609069824
    5. '#
' → logprob: -12.002169609069824
    6. ' '#' → logprob: -12.752169609069824
    7. '='#' → logprob: -12.877169609069824
    8. '"#' → logprob: -13.127169609069824
    9. '['' → logprob: -13.627169609069824
    10. ''''' → logprob: -13.627169609069824

Token 322: '':
' (ID: 7669)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7988996505737305
    2. '':
' → logprob: -1.5488996505737305
    3. ':
' → logprob: -1.7988996505737305
    4. '']:
' → logprob: -2.6738996505737305
    5. ']:
' → logprob: -3.4238996505737305
    6. '':' → logprob: -4.0488996505737305
    7. '']' → logprob: -4.6738996505737305
    8. '='' → logprob: -4.9238996505737305
    9. '']='' → logprob: -4.9238996505737305
    10. ':' → logprob: -5.0488996505737305

Token 323: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.039936572313308716
    2. 'se' → logprob: -3.2899365425109863
    3. ' seats' → logprob: -6.664936542510986
    4. '                           ' → logprob: -8.039937019348145
    5. '                   ' → logprob: -9.164937019348145
    6. '               ' → logprob: -10.039937019348145
    7. '           ' → logprob: -10.164937019348145
    8. '                               ' → logprob: -10.164937019348145
    9. '```' → logprob: -10.414937019348145
    10. '       ' → logprob: -11.789937019348145

Token 324: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.008815940469503403
    2. ' seats' → logprob: -4.758815765380859
    3. '                       ' → logprob: -8.63381576538086
    4. '                   ' → logprob: -12.25881576538086
    5. '           ' → logprob: -12.50881576538086
    6. '               ' → logprob: -12.50881576538086
    7. '                           ' → logprob: -12.75881576538086
    8. '                               ' → logprob: -13.25881576538086
    9. 'seat' → logprob: -13.75881576538086
    10. '       ' → logprob: -13.88381576538086

Token 325: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -2.081584716506768e-05
    2. 'left' → logprob: -11.375020980834961
    3. '[pos' → logprob: -12.250020980834961
    4. '[' → logprob: -12.750020980834961
    5. '[right' → logprob: -13.875020980834961
    6. '```' → logprob: -15.125020980834961
    7. '[
' → logprob: -16.62502098083496
    8. '[i' → logprob: -16.62502098083496
    9. ' [' → logprob: -16.62502098083496
    10. '	left' → logprob: -17.25002098083496

Token 326: ']='' (ID: 69193)
  Prédit: ']=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']='' → logprob: -0.28564342856407166
    2. '='' → logprob: -1.535643458366394
    3. ']=='' → logprob: -3.7856433391571045
    4. '=='' → logprob: -4.785643577575684
    5. '']='' → logprob: -7.160643577575684
    6. ']' → logprob: -7.410643577575684
    7. '+='' → logprob: -8.285643577575684
    8. ']=' → logprob: -9.035643577575684
    9. ' ='' → logprob: -9.285643577575684
    10. '']=='' → logprob: -9.660643577575684

Token 327: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.3663626305060461e-05
    2. ''C' → logprob: -11.37501335144043
    3. ''' → logprob: -13.25001335144043
    4. ' C' → logprob: -15.00001335144043
    5. '"C' → logprob: -18.87501335144043
    6. '<|end|>' → logprob: -19.75001335144043
    7. 'c' → logprob: -20.00001335144043
    8. '#' → logprob: -20.12501335144043
    9. '"' → logprob: -20.50001335144043
    10. '')' → logprob: -20.75001335144043

Token 328: ''
' (ID: 2207)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.18063035607337952
    2. '<|end|>' → logprob: -1.8056303262710571
    3. '                        
' → logprob: -8.430630683898926
    4. '					' → logprob: -9.055630683898926
    5. '                        ' → logprob: -9.055630683898926
    6. '<|end|>' → logprob: -9.305630683898926
    7. '                   ' → logprob: -9.805630683898926
    8. '               ' → logprob: -10.305630683898926
    9. '
' → logprob: -10.430630683898926
    10. '                      ' → logprob: -10.805630683898926

Token 329: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0025083590298891068
    2. '<|end|>' → logprob: -6.502508163452148
    3. '
' → logprob: -7.627508163452148
    4. '                        
' → logprob: -8.127508163452148
    5. '=' → logprob: -9.877508163452148
    6. '               ' → logprob: -10.502508163452148
    7. '                        ' → logprob: -10.752508163452148
    8. '                   ' → logprob: -10.752508163452148
    9. '```' → logprob: -10.877508163452148
    10. '                           ' → logprob: -11.252508163452148

Token 330: ' placed' (ID: 12989)
  Prédit: 'placed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placed' (adapté à ' placed') → logprob: -0.012660094536840916
    2. ' placed' → logprob: -4.512660026550293
    3. '                       ' → logprob: -7.137660026550293
    4. 'break' → logprob: -7.137660026550293
    5. 'Placed' → logprob: -11.262660026550293
    6. ' break' → logprob: -11.887660026550293
    7. 'place' → logprob: -14.887660026550293
    8. '                   ' → logprob: -15.012660026550293
    9. '                        ' → logprob: -15.137660026550293
    10. '               ' → logprob: -15.387660026550293

Token 331: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0019294669618830085
    2. '=' → logprob: -6.25192928314209
    3. '=False' → logprob: -14.12692928314209
    4. ' =' → logprob: -16.876930236816406
    5. '=
' → logprob: -18.376930236816406
    6. '==' → logprob: -18.501930236816406
    7. 'True' → logprob: -18.626930236816406
    8. '                       ' → logprob: -19.626930236816406
    9. '=true' → logprob: -19.751930236816406
    10. '(True' → logprob: -20.001930236816406

Token 332: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00022392053506337106
    2. '<|end|>' → logprob: -9.125224113464355
    3. '                   ' → logprob: -9.750224113464355
    4. '               ' → logprob: -10.500224113464355
    5. '					' → logprob: -12.000224113464355
    6. '           ' → logprob: -12.125224113464355
    7. '                        
' → logprob: -12.250224113464355
    8. '```' → logprob: -12.750224113464355
    9. '
' → logprob: -12.875224113464355
    10. '       ' → logprob: -13.000224113464355

Token 333: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00010223194840364158
    2. '                   ' → logprob: -9.875102043151855
    3. '               ' → logprob: -10.375102043151855
    4. '           ' → logprob: -11.500102043151855
    5. '       ' → logprob: -12.500102043151855
    6. '					' → logprob: -13.500102043151855
    7. 'if' → logprob: -13.750102043151855
    8. '<|end|>' → logprob: -14.250102043151855
    9. '```' → logprob: -14.250102043151855
    10. '                        
' → logprob: -14.250102043151855

Token 334: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.009196366183459759
    2. '                       ' → logprob: -5.0091962814331055
    3. ' break' → logprob: -6.0091962814331055
    4. '	break' → logprob: -11.884196281433105
    5. '                   ' → logprob: -12.009196281433105
    6. '               ' → logprob: -12.134196281433105
    7. '           ' → logprob: -13.759196281433105
    8. 'return' → logprob: -14.384196281433105
    9. '
' → logprob: -14.509196281433105
    10. '       ' → logprob: -14.759196281433105

Token 335: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003979496657848358
    2. '           ' → logprob: -5.753979682922363
    3. '   ' → logprob: -8.128979682922363
    4. 'if' → logprob: -8.628979682922363
    5. '       ' → logprob: -8.878979682922363
    6. '                   ' → logprob: -9.503979682922363
    7. ' if' → logprob: -9.753979682922363
    8. '<|end|>' → logprob: -10.878979682922363
    9. '
' → logprob: -11.253979682922363
    10. '```' → logprob: -12.503979682922363

Token 336: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17277874052524567
    2. '   ' → logprob: -2.922778844833374
    3. '       ' → logprob: -2.922778844833374
    4. '           ' → logprob: -3.172778844833374
    5. 'if' → logprob: -5.047778606414795
    6. ' if' → logprob: -7.422778606414795
    7. '                   ' → logprob: -7.797778606414795
    8. '<|end|>' → logprob: -7.797778606414795
    9. '
' → logprob: -8.047779083251953
    10. '```' → logprob: -8.547779083251953

Token 337: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16499531269073486
    2. '           ' → logprob: -2.2899951934814453
    3. 'if' (adapté à ' if') → logprob: -3.6649951934814453
    4. ' if' → logprob: -4.414995193481445
    5. '       ' → logprob: -4.539995193481445
    6. '   ' → logprob: -6.039995193481445
    7. ' ' → logprob: -11.164995193481445
    8. '
' → logprob: -11.539995193481445
    9. '                   ' → logprob: -11.664995193481445
    10. '```' → logprob: -12.039995193481445

Token 338: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6403495073318481
    2. 'not' → logprob: -0.7653495073318481
    3. 'placed' → logprob: -5.390349388122559
    4. ' placed' → logprob: -5.765349388122559
    5. '   ' → logprob: -11.515349388122559
    6. '       ' → logprob: -12.390349388122559
    7. '	not' → logprob: -13.015349388122559
    8. ' ' → logprob: -13.140349388122559
    9. '(not' → logprob: -13.515349388122559
    10. '    ' → logprob: -13.640349388122559

Token 339: ' placed' (ID: 12989)
  Prédit: ' placed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.5231291055679321
    2. 'placed' → logprob: -0.8981291055679321
    3. 'place' → logprob: -13.3981294631958
    4. ' ' → logprob: -13.8981294631958
    5. 'Placed' → logprob: -14.3981294631958
    6. 'places' → logprob: -14.6481294631958
    7. 'plac' → logprob: -14.8981294631958
    8. '   ' → logprob: -15.0231294631958
    9. ' ' → logprob: -15.1481294631958
    10. 'pl' → logprob: -15.3981294631958

Token 340: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6518806219100952
    2. ':
' → logprob: -0.7768806219100952
    3. '                   ' → logprob: -4.026880741119385
    4. '           ' → logprob: -7.526880741119385
    5. '               ' → logprob: -8.026880264282227
    6. '                       ' → logprob: -8.151880264282227
    7. '       ' → logprob: -10.651880264282227
    8. ' and' → logprob: -11.026880264282227
    9. '                           ' → logprob: -11.151880264282227
    10. '   ' → logprob: -11.276880264282227

Token 341: '                   ' (ID: 699)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1433970928192139
    2. '       ' → logprob: -1.2683970928192139
    3. ' for' → logprob: -1.3933970928192139
    4. '                   ' → logprob: -2.143397092819214
    5. '           ' → logprob: -3.893397092819214
    6. '   ' → logprob: -4.768397331237793
    7. '               ' → logprob: -5.393397331237793
    8. 'se' → logprob: -8.018397331237793
    9. '```' → logprob: -8.518397331237793
    10. '
' → logprob: -8.643397331237793

Token 342: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008369080605916679
    2. ' for' → logprob: -7.1258368492126465
    3. '                   ' → logprob: -10.625837326049805
    4. '   ' → logprob: -12.875837326049805
    5. '               ' → logprob: -13.000837326049805
    6. 'se' → logprob: -13.500837326049805
    7. '       ' → logprob: -14.375837326049805
    8. 'idx' → logprob: -15.000837326049805
    9. 'continue' → logprob: -15.125837326049805
    10. '           ' → logprob: -15.375837326049805

Token 343: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804183006286621
    2. ' i' → logprob: -3.288041830062866
    3. '	i' → logprob: -15.913042068481445
    4. ' ' → logprob: -16.163042068481445
    5. 'j' → logprob: -17.413042068481445
    6. 'k' → logprob: -17.913042068481445
    7. '```' → logprob: -18.038042068481445
    8. '   ' → logprob: -18.163042068481445
    9. '  ' → logprob: -18.788042068481445
    10. 'idx' → logprob: -19.038042068481445

Token 344: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008619658648967743
    2. 'in' → logprob: -4.758619785308838
    3. 'n' → logprob: -12.75861930847168
    4. ' ' → logprob: -14.50861930847168
    5. '   ' → logprob: -14.88361930847168
    6. 'range' → logprob: -15.38361930847168
    7. '  ' → logprob: -15.50861930847168
    8. 'd' → logprob: -16.00861930847168
    9. '                   ' → logprob: -16.13361930847168
    10. 's' → logprob: -16.13361930847168

Token 345: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048054322600365
    2. ' range' → logprob: -4.511047840118408
    3. 'se' → logprob: -15.511048316955566
    4. '(range' → logprob: -18.13604736328125
    5. 'n' → logprob: -18.26104736328125
    6. ' ' → logprob: -18.63604736328125
    7. '   ' → logprob: -18.76104736328125
    8. 'rang' → logprob: -19.63604736328125
    9. 'r' → logprob: -20.38604736328125
    10. '  ' → logprob: -20.38604736328125

Token 346: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25193750858306885
    2. '(n' → logprob: -1.5019375085830688
    3. '(' → logprob: -12.876937866210938
    4. '   ' → logprob: -13.126937866210938
    5. ' n' → logprob: -13.626937866210938
    6. 'len' → logprob: -14.376937866210938
    7. 'se' → logprob: -14.626937866210938
    8. '           ' → logprob: -14.876937866210938
    9. '(len' → logprob: -15.251937866210938
    10. '```' → logprob: -15.501937866210938

Token 347: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47439610958099365
    2. '):' → logprob: -0.9743961095809937
    3. '-' → logprob: -8.724395751953125
    4. '#' → logprob: -9.599395751953125
    5. '):
' → logprob: -10.349395751953125
    6. '   ' → logprob: -11.974395751953125
    7. 'n' → logprob: -12.099395751953125
    8. '):

' → logprob: -12.224395751953125
    9. '[' → logprob: -12.599395751953125
    10. ' ):' → logprob: -12.599395751953125

Token 348: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.009749242104589939
    2. '               ' → logprob: -5.634749412536621
    3. 'if' → logprob: -6.509749412536621
    4. '       ' → logprob: -6.509749412536621
    5. '<|end|>' → logprob: -6.509749412536621
    6. ' if' → logprob: -7.009749412536621
    7. '                   ' → logprob: -7.759749412536621
    8. '```' → logprob: -8.884749412536621
    9. '           ' → logprob: -9.634749412536621
    10. '                               ' → logprob: -10.759749412536621

Token 349: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16531051695346832
    2. ' if' → logprob: -1.9153105020523071
    3. '                           ' → logprob: -5.915310382843018
    4. '                       ' → logprob: -6.415310382843018
    5. '   ' → logprob: -7.790310382843018
    6. '           ' → logprob: -8.915310859680176
    7. '               ' → logprob: -9.790310859680176
    8. '       ' → logprob: -10.165310859680176
    9. '                               ' → logprob: -10.290310859680176
    10. '<|end|>' → logprob: -10.790310859680176

Token 350: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.3868897557258606
    2. ' seats' → logprob: -1.1368896961212158
    3. '```' → logprob: -12.636889457702637
    4. '	se' → logprob: -12.761889457702637
    5. 'seat' → logprob: -12.886889457702637
    6. '   ' → logprob: -13.011889457702637
    7. ' se' → logprob: -13.261889457702637
    8. '(se' → logprob: -13.386889457702637
    9. 'Seats' → logprob: -14.011889457702637
    10. '_se' → logprob: -14.136889457702637

Token 351: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -15.375000953674316
    3. '```' → logprob: -16.375
    4. ' [' → logprob: -16.625
    5. '[' → logprob: -17.0
    6. '   ' → logprob: -18.25
    7. '                   ' → logprob: -18.75
    8. '[
' → logprob: -18.75
    9. '
' → logprob: -19.25
    10. 's' → logprob: -19.625

Token 352: ']=='' (ID: 71177)
  Prédit: ']==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.003136247396469116
    2. ']==' → logprob: -6.503136157989502
    3. '[i' → logprob: -6.753136157989502
    4. ']' → logprob: -8.00313663482666
    5. ']!='' → logprob: -9.62813663482666
    6. '=='' → logprob: -10.62813663482666
    7. ']['' → logprob: -11.37813663482666
    8. ')=='' → logprob: -11.50313663482666
    9. '']=='' → logprob: -12.00313663482666
    10. ']=="' → logprob: -12.12813663482666

Token 353: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008656646125018597
    2. ''#' → logprob: -4.7586565017700195
    3. ''' → logprob: -10.75865650177002
    4. ' '#'' → logprob: -11.50865650177002
    5. '='#' → logprob: -12.88365650177002
    6. '#
' → logprob: -13.38365650177002
    7. 'C' → logprob: -13.50865650177002
    8. '#"' → logprob: -13.63365650177002
    9. '"#' → logprob: -13.88365650177002
    10. '#
' → logprob: -14.50865650177002

Token 354: '':
' (ID: 7669)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.4351108074188232
    2. '']:
' → logprob: -1.6851108074188232
    3. ']:
' → logprob: -1.8101108074188232
    4. ':
' → logprob: -1.8101108074188232
    5. '':
' → logprob: -2.0601108074188232
    6. '                       ' → logprob: -2.4351108074188232
    7. '':' → logprob: -4.185111045837402
    8. ':' → logprob: -4.935111045837402
    9. ']:' → logprob: -5.935111045837402
    10. '                               ' → logprob: -6.310111045837402

Token 355: '                           ' (ID: 1686)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.17290501296520233
    2. '                           ' → logprob: -2.0479049682617188
    3. '                       ' → logprob: -3.5479049682617188
    4. '                               ' → logprob: -7.547904968261719
    5. '                   ' → logprob: -9.422904968261719
    6. '           ' → logprob: -9.547904968261719
    7. ' seats' → logprob: -9.672904968261719
    8. '               ' → logprob: -9.922904968261719
    9. '```' → logprob: -9.922904968261719
    10. '   ' → logprob: -10.172904968261719

Token 356: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.00019269285257905722
    2. ' seats' → logprob: -9.250192642211914
    3. '                           ' → logprob: -9.750192642211914
    4. '                       ' → logprob: -10.750192642211914
    5. '                               ' → logprob: -11.250192642211914
    6. '   ' → logprob: -13.125192642211914
    7. '               ' → logprob: -14.625192642211914
    8. '           ' → logprob: -15.125192642211914
    9. '                   ' → logprob: -15.375192642211914
    10. ' ' → logprob: -15.375192642211914

Token 357: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '                           ' → logprob: -13.125003814697266
    3. '```' → logprob: -14.750003814697266
    4. '                       ' → logprob: -15.000003814697266
    5. 'i' → logprob: -15.250003814697266
    6. '[' → logprob: -15.250003814697266
    7. '                               ' → logprob: -15.625003814697266
    8. '                   ' → logprob: -15.875003814697266
    9. '[
' → logprob: -17.000003814697266
    10. '               ' → logprob: -18.000003814697266

Token 358: ']='' (ID: 69193)
  Prédit: ']=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']='' → logprob: -0.020694518461823463
    2. ']' → logprob: -4.395694732666016
    3. ']=' → logprob: -5.020694732666016
    4. ']=='' → logprob: -6.895694732666016
    5. '='' → logprob: -7.770694732666016
    6. '']='' → logprob: -9.645694732666016
    7. ']!='' → logprob: -11.145694732666016
    8. ']==' → logprob: -11.270694732666016
    9. '=' → logprob: -11.645694732666016
    10. ' ]' → logprob: -12.395694732666016

Token 359: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00012654215970542282
    2. ''C' → logprob: -9.000126838684082
    3. ''' → logprob: -12.875126838684082
    4. ' C' → logprob: -14.625126838684082
    5. '#' → logprob: -17.250125885009766
    6. '"C' → logprob: -17.875125885009766
    7. '`' → logprob: -18.375125885009766
    8. 'c' → logprob: -18.500125885009766
    9. '>C' → logprob: -19.500125885009766
    10. 'С' → logprob: -19.750125885009766

Token 360: ''
' (ID: 2207)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0023811189457774162
    2. '<|end|>' → logprob: -7.252381324768066
    3. '                       ' → logprob: -7.377381324768066
    4. '
' → logprob: -7.627381324768066
    5. '                            
' → logprob: -8.752381324768066
    6. '                               ' → logprob: -8.752381324768066
    7. '           ' → logprob: -9.377381324768066
    8. '                            ' → logprob: -10.002381324768066
    9. '<|end|>' → logprob: -11.002381324768066
    10. '               ' → logprob: -11.127381324768066

Token 361: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0008229722734540701
    2. '                       ' → logprob: -8.000823020935059
    3. '                               ' → logprob: -8.125823020935059
    4. '           ' → logprob: -9.500823020935059
    5. '                            
' → logprob: -10.250823020935059
    6. '
' → logprob: -10.500823020935059
    7. '               ' → logprob: -11.125823020935059
    8. '                   ' → logprob: -11.125823020935059
    9. '                        
' → logprob: -12.125823020935059
    10. '                            ' → logprob: -12.125823020935059

Token 362: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.023836519569158554
    2. ' break' → logprob: -4.273836612701416
    3. '                           ' → logprob: -4.648836612701416
    4. '                       ' → logprob: -11.023836135864258
    5. '           ' → logprob: -11.273836135864258
    6. '                               ' → logprob: -12.148836135864258
    7. '               ' → logprob: -12.398836135864258
    8. '	break' → logprob: -12.523836135864258
    9. '   ' → logprob: -12.648836135864258
    10. '
' → logprob: -12.773836135864258

Token 363: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002060330705717206
    2. '
' → logprob: -6.377060413360596
    3. 'print' → logprob: -8.752059936523438
    4. '<|end|>' → logprob: -8.752059936523438
    5. '    
' → logprob: -10.627059936523438
    6. '       ' → logprob: -12.002059936523438
    7. '```' → logprob: -12.377059936523438
    8. '<|end|>' → logprob: -12.877059936523438
    9. ' print' → logprob: -13.752059936523438
    10. '	print' → logprob: -14.002059936523438

Token 364: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0419541597366333
    2. '<|end|>' → logprob: -3.5419540405273438
    3. 'print' → logprob: -4.541954040527344
    4. '
' → logprob: -6.791954040527344
    5. '```' → logprob: -9.041954040527344
    6. '    
' → logprob: -9.416954040527344
    7. ' print' → logprob: -9.416954040527344
    8. '<|end|>' → logprob: -10.916954040527344
    9. '	print' → logprob: -11.291954040527344
    10. ')' → logprob: -11.291954040527344

Token 365: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1502523571252823
    2. 'print' → logprob: -2.025252342224121
    3. ' print' → logprob: -4.900252342224121
    4. '```' → logprob: -9.525252342224121
    5. '       ' → logprob: -11.150252342224121
    6. '
' → logprob: -12.150252342224121
    7. '    
' → logprob: -12.150252342224121
    8. '``' → logprob: -13.525252342224121
    9. 'for' → logprob: -14.025252342224121
    10. '`' → logprob: -14.525252342224121

Token 366: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7064494490623474
    2. ':
' → logprob: -0.7064494490623474
    3. '       ' → logprob: -4.581449508666992
    4. '   ' → logprob: -6.581449508666992
    5. '           ' → logprob: -7.831449508666992
    6. ' :
' → logprob: -7.956449508666992
    7. '        ' → logprob: -8.081449508666992
    8. ' :' → logprob: -8.706449508666992
    9. '<|end|>' → logprob: -9.331449508666992
    10. '	' → logprob: -10.206449508666992

Token 367: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9057129621505737
    2. ' pass' → logprob: -1.2807129621505737
    3. '           ' → logprob: -1.7807129621505737
    4. ' for' → logprob: -2.5307130813598633
    5. '   ' → logprob: -3.6557130813598633
    6. ' continue' → logprob: -3.7807130813598633
    7. 'pass' → logprob: -5.030713081359863
    8. ' break' → logprob: -5.405713081359863
    9. ' #' → logprob: -6.155713081359863
    10. 'for' → logprob: -6.405713081359863

Token 368: ' p' (ID: 275)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.7915303707122803
    2. '       ' → logprob: -1.4165303707122803
    3. ' D' → logprob: -2.1665303707122803
    4. '   ' → logprob: -2.9165303707122803
    5. '           ' → logprob: -3.5415303707122803
    6. ''' → logprob: -3.6665303707122803
    7. '#' → logprob: -3.7915303707122803
    8. ''D' → logprob: -4.041530609130859
    9. ' #' → logprob: -4.541530609130859
    10. ' ' → logprob: -5.416530609130859

Token 369: '=='' (ID: 20651)
  Prédit: '==''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.16297048330307007
    2. ' ==' → logprob: -2.412970542907715
    3. '==' → logprob: -3.787970542907715
    4. ' =='' → logprob: -3.787970542907715
    5. '!='' → logprob: -4.662970542907715
    6. '.startswith' → logprob: -5.537970542907715
    7. ' !=' → logprob: -7.662970542907715
    8. '='' → logprob: -7.912970542907715
    9. ''' → logprob: -8.287970542907715
    10. ']=='' → logprob: -8.412970542907715

Token 370: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0006559623870998621
    2. ''' → logprob: -8.625656127929688
    3. ''D' → logprob: -8.750656127929688
    4. ''#' → logprob: -9.125656127929688
    5. 'C' → logprob: -9.500656127929688
    6. '#' → logprob: -10.500656127929688
    7. 'E' → logprob: -11.125656127929688
    8. '')' → logprob: -11.500656127929688
    9. ' D' → logprob: -11.625656127929688
    10. ''''' → logprob: -11.750656127929688

Token 371: ''
' (ID: 2207)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.12708747386932373
    2. '           ' → logprob: -2.6270875930786133
    3. ''' → logprob: -3.3770875930786133
    4. '       ' → logprob: -4.877087593078613
    5. '':' → logprob: -6.377087593078613
    6. ''
' → logprob: -6.627087593078613
    7. '   ' → logprob: -7.252087593078613
    8. ' '' → logprob: -7.752087593078613
    9. '               ' → logprob: -7.752087593078613
    10. ':
' → logprob: -8.752087593078613

Token 372: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7514135241508484
    2. '           ' → logprob: -0.7514135241508484
    3. ' for' → logprob: -3.626413583755493
    4. 'for' → logprob: -3.751413583755493
    5. '        
' → logprob: -6.876413345336914
    6. '
' → logprob: -7.001413345336914
    7. '```' → logprob: -7.001413345336914
    8. '               ' → logprob: -7.751413345336914
    9. 'positions' → logprob: -8.001413345336914
    10. 'occupied' → logprob: -8.251413345336914

Token 373: ' occupied' (ID: 46186)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.238004207611084
    2. 'occupied' (adapté à ' occupied') → logprob: -1.238004207611084
    3. 'c' → logprob: -2.238004207611084
    4. 'max' → logprob: -3.113004207611084
    5. 'placed' → logprob: -3.488004207611084
    6. ' for' → logprob: -3.613004207611084
    7. 'empty' → logprob: -3.613004207611084
    8. 'count' → logprob: -3.863004207611084
    9. 'positions' → logprob: -4.738004207611084
    10. ' occupied' → logprob: -4.738004207611084

Token 374: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15219396352767944
    2. '=' → logprob: -2.652194023132324
    3. '=[' → logprob: -2.777194023132324
    4. '_positions' → logprob: -5.527194023132324
    5. '=[]' → logprob: -6.652194023132324
    6. '_indices' → logprob: -6.777194023132324
    7. 'indices' → logprob: -8.277194023132324
    8. '=set' → logprob: -8.277194023132324
    9. '=[]
' → logprob: -8.402194023132324
    10. 'positions' → logprob: -8.652194023132324

Token 375: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2824416160583496
    2. ' [' → logprob: -1.4074416160583496
    3. '[v' → logprob: -7.03244161605835
    4. '[' → logprob: -8.657442092895508
    5. '[int' → logprob: -10.157442092895508
    6. '[s' → logprob: -10.407442092895508
    7. '[a' → logprob: -10.657442092895508
    8. '[j' → logprob: -11.157442092895508
    9. '[p' → logprob: -11.282442092895508
    10. '[len' → logprob: -11.282442092895508

Token 376: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.656383680412546e-05
    2. ' i' → logprob: -10.000046730041504
    3. '(i' → logprob: -14.375046730041504
    4. '
' → logprob: -16.000045776367188
    5. '[i' → logprob: -16.250045776367188
    6. 'int' → logprob: -16.500045776367188
    7. ']' → logprob: -16.500045776367188
    8. '```' → logprob: -16.625045776367188
    9. 'index' → logprob: -17.125045776367188
    10. '	i' → logprob: -17.500045776367188

Token 377: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759400129318237
    2. ' for' → logprob: -0.8259400129318237
    3. '	for' → logprob: -15.200940132141113
    4. ' ' → logprob: -16.200939178466797
    5. '
' → logprob: -16.325939178466797
    6. '   ' → logprob: -16.575939178466797
    7. '  ' → logprob: -18.700939178466797
    8. '        ' → logprob: -19.075939178466797
    9. '    ' → logprob: -19.200939178466797
    10. '       ' → logprob: -19.325939178466797

Token 378: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7810409069061279
    2. 'i' → logprob: -0.9060409069061279
    3. 'enumer' → logprob: -2.531040906906128
    4. ' range' → logprob: -3.281040906906128
    5. ',' → logprob: -4.156041145324707
    6. ' i' → logprob: -5.531041145324707
    7. 'v' → logprob: -8.156041145324707
    8. '_,' → logprob: -8.406041145324707
    9. ',i' → logprob: -9.156041145324707
    10. 'in' → logprob: -9.531041145324707

Token 379: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -8.625866030342877e-05
    2. ',' → logprob: -9.500085830688477
    3. 'v' → logprob: -11.625085830688477
    4. ',value' → logprob: -14.125085830688477
    5. ' ,' → logprob: -14.375085830688477
    6. ',val' → logprob: -14.500085830688477
    7. ',s' → logprob: -16.250085830688477
    8. ',c' → logprob: -16.500085830688477
    9. 'in' → logprob: -16.625085830688477
    10. ',d' → logprob: -17.000085830688477

Token 380: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03868095576763153
    2. 'in' → logprob: -3.5386810302734375
    3. ',' → logprob: -5.0386810302734375
    4. 'enumer' → logprob: -6.5386810302734375
    5. ',v' → logprob: -7.5386810302734375
    6. ',in' → logprob: -8.538681030273438
    7. ',index' → logprob: -9.913681030273438
    8. ',i' → logprob: -9.913681030273438
    9. ',value' → logprob: -11.038681030273438
    10. ',e' → logprob: -11.163681030273438

Token 381: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -3.2020991056924686e-05
    2. ' enumerate' → logprob: -10.375032424926758
    3. 'se' → logprob: -15.000032424926758
    4. 'enum' → logprob: -15.000032424926758
    5. 'en' → logprob: -16.375032424926758
    6. 'range' → logprob: -16.875032424926758
    7. '
' → logprob: -17.000032424926758
    8. '```' → logprob: -17.625032424926758
    9. '.enumer' → logprob: -19.125032424926758
    10. ',' → logprob: -19.250032424926758

Token 382: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.006716555915772915
    2. 'se' → logprob: -5.006716728210449
    3. ' (' → logprob: -14.13171672821045
    4. ' seats' → logprob: -15.25671672821045
    5. ',se' → logprob: -16.256715774536133
    6. '	se' → logprob: -16.506715774536133
    7. '(' → logprob: -17.381715774536133
    8. '(
' → logprob: -18.381715774536133
    9. '```' → logprob: -18.631715774536133
    10. '
' → logprob: -19.131715774536133

Token 383: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -3.5597102396423e-05
    2. 'at' → logprob: -10.750035285949707
    3. 's' → logprob: -11.750035285949707
    4. '#' → logprob: -14.250035285949707
    5. 'ates' → logprob: -14.250035285949707
    6. 'arts' → logprob: -14.375035285949707
    7. 'ts' → logprob: -14.625035285949707
    8. '```' → logprob: -14.625035285949707
    9. 'ets' → logprob: -14.875035285949707
    10. '['' → logprob: -15.250035285949707

Token 384: ')' (ID: 8)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02993457205593586
    2. ' if' → logprob: -3.7799346446990967
    3. ')' → logprob: -5.029934406280518
    4. '   ' → logprob: -9.029934883117676
    5. '       ' → logprob: -13.279934883117676
    6. '           ' → logprob: -13.654934883117676
    7. ' ' → logprob: -13.779934883117676
    8. '               ' → logprob: -13.904934883117676
    9. ']' → logprob: -14.904934883117676
    10. '```' → logprob: -15.029934883117676

Token 385: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5759437084197998
    2. 'if' → logprob: -0.8259437084197998
    3. '   ' → logprob: -13.575943946838379
    4. '       ' → logprob: -14.075943946838379
    5. '           ' → logprob: -14.325943946838379
    6. '!=' → logprob: -14.575943946838379
    7. '        ' → logprob: -15.200943946838379
    8. ' ' → logprob: -16.075942993164062
    9. '          ' → logprob: -16.075942993164062
    10. '               ' → logprob: -16.200942993164062

Token 386: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002189160557463765
    2. ' v' → logprob: -6.1271891593933105
    3. 'se' → logprob: -13.377189636230469
    4. '   ' → logprob: -14.502189636230469
    5. '#' → logprob: -15.002189636230469
    6. '(v' → logprob: -15.127189636230469
    7. ' ' → logprob: -15.377189636230469
    8. '
' → logprob: -15.627189636230469
    9. ' seats' → logprob: -16.12718963623047
    10. 'not' → logprob: -16.25218963623047

Token 387: '!='' (ID: 58874)
  Prédit: '!=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!='' → logprob: -0.00019746100588236004
    2. ']!='' → logprob: -9.250197410583496
    3. ' !=' → logprob: -9.625197410583496
    4. '!=' → logprob: -10.625197410583496
    5. '!' → logprob: -11.625197410583496
    6. '=='' → logprob: -13.625197410583496
    7. ''' → logprob: -15.500197410583496
    8. 'v' → logprob: -15.500197410583496
    9. '!="' → logprob: -15.875197410583496
    10. '[' → logprob: -16.500198364257812

Token 388: '#' (ID: 2)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.12698060274124146
    2. '#' → logprob: -2.1269805431365967
    3. '"#' → logprob: -10.751980781555176
    4. ''' → logprob: -11.501980781555176
    5. ' '#' → logprob: -11.501980781555176
    6. '('#' → logprob: -12.376980781555176
    7. '']' → logprob: -12.751980781555176
    8. ' '#'' → logprob: -13.126980781555176
    9. '='#' → logprob: -14.251980781555176
    10. ']' → logprob: -14.501980781555176

Token 389: '']
' (ID: 9756)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30321699380874634
    2. ']
' → logprob: -1.4282169342041016
    3. ' if' → logprob: -4.053216934204102
    4. 'if' → logprob: -5.928216934204102
    5. ' and' → logprob: -7.303216934204102
    6. ']

' → logprob: -7.928216934204102
    7. ' ]' → logprob: -8.303216934204102
    8. ' ]
' → logprob: -8.553216934204102
    9. 'and' → logprob: -9.178216934204102
    10. '   ' → logprob: -9.928216934204102

Token 390: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02997852861881256
    2. '```' → logprob: -4.1549787521362305
    3. '
' → logprob: -5.2799787521362305
    4. 'left' → logprob: -6.7799787521362305
    5. 'empty' → logprob: -6.9049787521362305
    6. 'distance' → logprob: -7.2799787521362305
    7. 'for' → logprob: -7.6549787521362305
    8. 'positions' → logprob: -7.6549787521362305
    9. 'right' → logprob: -7.7799787521362305
    10. 'if' → logprob: -7.7799787521362305

Token 391: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.4203307628631592
    2. 'c' → logprob: -1.5453307628631592
    3. 'max' → logprob: -1.9203307628631592
    4. 'if' (adapté à ' if') → logprob: -2.170330762863159
    5. 'for' → logprob: -2.545330762863159
    6. 'placed' → logprob: -3.295330762863159
    7. 'empty' → logprob: -4.045331001281738
    8. 'distance' → logprob: -4.170331001281738
    9. 'left' → logprob: -4.170331001281738
    10. 'found' → logprob: -4.545331001281738

Token 392: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6606133580207825
    2. 'len' → logprob: -1.2856132984161377
    3. 'occupied' → logprob: -1.9106132984161377
    4. ' not' → logprob: -3.4106132984161377
    5. 'n' → logprob: -4.035613536834717
    6. ' len' → logprob: -5.660613536834717
    7. 'se' → logprob: -6.785613536834717
    8. ' occupied' → logprob: -6.910613536834717
    9. '(len' → logprob: -7.160613536834717
    10. 'abs' → logprob: -8.035613059997559

Token 393: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.01419112179428339
    2. ' occupied' → logprob: -4.264191150665283
    3. 'se' → logprob: -11.389190673828125
    4. 'occup' → logprob: -12.139190673828125
    5. ' seats' → logprob: -12.139190673828125
    6. 'len' → logprob: -14.264190673828125
    7. 'n' → logprob: -14.264190673828125
    8. ' len' → logprob: -14.764190673828125
    9. 'occ' → logprob: -14.889190673828125
    10. ' ' → logprob: -14.889190673828125

Token 394: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.008967655710875988
    2. ':' → logprob: -4.758967876434326
    3. '               ' → logprob: -8.383967399597168
    4. ' or' → logprob: -10.133967399597168
    5. '           ' → logprob: -10.258967399597168
    6. '                   ' → logprob: -11.508967399597168
    7. ' and' → logprob: -11.758967399597168
    8. ':

' → logprob: -12.008967399597168
    9. '):
' → logprob: -12.133967399597168
    10. ':
' → logprob: -12.258967399597168

Token 395: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1943274885416031
    2. ':
' → logprob: -2.3193275928497314
    3. 'se' → logprob: -2.8193275928497314
    4. ':' → logprob: -4.194327354431152
    5. '```' → logprob: -6.944327354431152
    6. ' or' → logprob: -7.694327354431152
    7. '                   ' → logprob: -8.194327354431152
    8. ' for' → logprob: -8.319327354431152
    9. ' and' → logprob: -8.319327354431152
    10. '                       ' → logprob: -8.444327354431152

Token 396: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.020885072648525238
    2. 'mid' → logprob: -4.770884990692139
    3. ' seats' → logprob: -5.895884990692139
    4. '               ' → logprob: -6.020884990692139
    5. '                   ' → logprob: -6.395884990692139
    6. 'if' → logprob: -6.520884990692139
    7. 'for' → logprob: -6.770884990692139
    8. '                       ' → logprob: -7.145884990692139
    9. '           ' → logprob: -7.520884990692139
    10. ' mid' → logprob: -8.145885467529297

Token 397: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05089036375284195
    2. '[n' → logprob: -3.0508904457092285
    3. '[-' → logprob: -6.4258904457092285
    4. '[(' → logprob: -8.55088996887207
    5. '=[' → logprob: -8.80088996887207
    6. '=' → logprob: -9.80088996887207
    7. '[int' → logprob: -10.05088996887207
    8. '[mid' → logprob: -10.17588996887207
    9. '[len' → logprob: -10.55088996887207
    10. '['' → logprob: -11.05088996887207

Token 398: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005950483493506908
    2. 'n' → logprob: -5.755950450897217
    3. '(' → logprob: -7.005950450897217
    4. '(n' → logprob: -7.255950450897217
    5. '[n' → logprob: -7.630950450897217
    6. '[' → logprob: -8.130950927734375
    7. ']' → logprob: -9.005950927734375
    8. ' ' → logprob: -9.255950927734375
    9. ' (' → logprob: -10.380950927734375
    10. ':n' → logprob: -10.755950927734375

Token 399: ']='' (ID: 69193)
  Prédit: ']=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']='' → logprob: -0.004774956963956356
    2. ']' → logprob: -5.379775047302246
    3. '='' → logprob: -9.879775047302246
    4. ']=' → logprob: -10.129775047302246
    5. ']=='' → logprob: -10.129775047302246
    6. '']='' → logprob: -10.879775047302246
    7. ' ]' → logprob: -13.254775047302246
    8. ']="' → logprob: -14.129775047302246
    9. '()='' → logprob: -14.379775047302246
    10. ']!='' → logprob: -14.504775047302246

Token 400: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -9.968312951968983e-06
    2. ''D' → logprob: -11.750009536743164
    3. ''' → logprob: -14.250009536743164
    4. ' D' → logprob: -14.500009536743164
    5. '#' → logprob: -15.125009536743164
    6. '	D' → logprob: -15.750009536743164
    7. 'A' → logprob: -15.875009536743164
    8. 'd' → logprob: -16.625009536743164
    9. ''d' → logprob: -16.750009536743164
    10. 'Ｄ' → logprob: -17.125009536743164

Token 401: ''
' (ID: 2207)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11620722711086273
    2. ''' → logprob: -3.1162071228027344
    3. ''
' → logprob: -3.2412071228027344
    4. '               ' → logprob: -4.241207122802734
    5. 'else' → logprob: -5.366207122802734
    6. '
' → logprob: -6.241207122802734
    7. '<|end|>' → logprob: -6.491207122802734
    8. '       ' → logprob: -6.741207122802734
    9. 'elif' → logprob: -7.116207122802734
    10. '```' → logprob: -7.741207122802734

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1332421600818634
    2. 'else' → logprob: -2.258242130279541
    3. ' else' → logprob: -4.508242130279541
    4. '               ' → logprob: -5.008242130279541
    5. '       ' → logprob: -6.133242130279541
    6. '   ' → logprob: -9.2582426071167
    7. '```' → logprob: -9.7582426071167
    8. '                   ' → logprob: -10.2582426071167
    9. 'elif' → logprob: -10.2582426071167
    10. '<|end|>' → logprob: -10.5082426071167

Token 403: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2752724885940552
    2. '           ' → logprob: -1.7752724885940552
    3. ' else' → logprob: -2.6502723693847656
    4. '       ' → logprob: -8.275272369384766
    5. '               ' → logprob: -8.525272369384766
    6. 'elif' → logprob: -9.900272369384766
    7. '   ' → logprob: -11.275272369384766
    8. '          ' → logprob: -11.275272369384766
    9. '```' → logprob: -11.775272369384766
    10. '
' → logprob: -12.025272369384766

Token 404: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31687280535697937
    2. '               ' → logprob: -1.6918728351593018
    3. ':' → logprob: -2.4418728351593018
    4. '           ' → logprob: -9.191872596740723
    5. '```' → logprob: -9.191872596740723
    6. '                   ' → logprob: -9.316872596740723
    7. '              ' → logprob: -10.566872596740723
    8. ':
' → logprob: -10.816872596740723
    9. ':

' → logprob: -11.191872596740723
    10. '):
' → logprob: -11.816872596740723

Token 405: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4957520067691803
    2. 'right' → logprob: -1.870751976966858
    3. ' right' → logprob: -2.2457520961761475
    4. ' placed' → logprob: -3.2457520961761475
    5. 'last' → logprob: -4.495751857757568
    6. '```' → logprob: -4.745751857757568
    7. ' last' → logprob: -4.870751857757568
    8. 'left' → logprob: -4.995751857757568
    9. 'placed' → logprob: -5.120751857757568
    10. 'positions' → logprob: -5.370751857757568

Token 406: ' max' (ID: 2999)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.893391489982605
    2. ' placed' → logprob: -1.893391489982605
    3. 'max' (adapté à ' max') → logprob: -2.0183916091918945
    4. 'c' → logprob: -2.0183916091918945
    5. 'dist' → logprob: -2.3933916091918945
    6. 'placed' → logprob: -2.5183916091918945
    7. 'for' → logprob: -3.0183916091918945
    8. ' right' → logprob: -3.3933916091918945
    9. ' distances' → logprob: -3.6433916091918945
    10. 'last' → logprob: -3.8933916091918945

Token 407: '_dist' (ID: 37968)
  Prédit: '_gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -0.2480340301990509
    2. '_dist' → logprob: -1.6230340003967285
    3. '_len' → logprob: -5.1230340003967285
    4. '_space' → logprob: -5.3730340003967285
    5. 'dist' → logprob: -5.3730340003967285
    6. '_distance' → logprob: -5.6230340003967285
    7. '_empty' → logprob: -7.2480340003967285
    8. 'gap' → logprob: -7.4980340003967285
    9. '_free' → logprob: -7.9980340003967285
    10. '_diff' → logprob: -8.123034477233887

Token 408: '=-' (ID: 21714)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17820914089679718
    2. '=-' → logprob: -2.428209066390991
    3. ' =' → logprob: -2.803209066390991
    4. '=max' → logprob: -4.42820930480957
    5. '=None' → logprob: -6.30320930480957
    6. '=[]' → logprob: -7.92820930480957
    7. '=float' → logprob: -8.92820930480957
    8. '=int' → logprob: -10.17820930480957
    9. ',' → logprob: -10.42820930480957
    10. '=len' → logprob: -10.80320930480957

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. 'se' → logprob: -13.250003814697266
    3. 'float' → logprob: -13.875003814697266
    4. '2' → logprob: -15.250003814697266
    5. '10' → logprob: -15.500003814697266
    6. '-' → logprob: -15.750003814697266
    7. 'inf' → logprob: -16.000003814697266
    8. '100' → logprob: -16.375003814697266
    9. '(se' → logprob: -16.375003814697266
    10. ' ' → logprob: -16.500003814697266

Token 410: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23410294950008392
    2. '               ' → logprob: -2.609102964401245
    3. 'pos' → logprob: -4.109102725982666
    4. ' pos' → logprob: -4.359102725982666
    5. ',pos' → logprob: -4.359102725982666
    6. ',
' → logprob: -4.609102725982666
    7. ' idx' → logprob: -4.859102725982666
    8. ' positions' → logprob: -4.859102725982666
    9. ' for' → logprob: -4.859102725982666
    10. ' candidate' → logprob: -5.234102725982666

Token 411: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2780177593231201
    2. ' pos' → logprob: -1.9030177593231201
    3. 'pos' → logprob: -1.9030177593231201
    4. '           ' → logprob: -2.40301775932312
    5. ',' → logprob: -3.02801775932312
    6. ' max' → logprob: -3.27801775932312
    7. ' idx' → logprob: -3.40301775932312
    8. ' next' → logprob: -3.77801775932312
    9. '       ' → logprob: -3.90301775932312
    10. '   ' → logprob: -4.028017997741699

Token 412: ' candidate' (ID: 17098)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4423049986362457
    2. 'max' → logprob: -1.3173049688339233
    3. 'best' → logprob: -2.817305088043213
    4. 'candidate' (adapté à ' candidate') → logprob: -4.317305088043213
    5. 'idx' → logprob: -5.317305088043213
    6. 'position' → logprob: -5.317305088043213
    7. 'c' → logprob: -5.817305088043213
    8. 'index' → logprob: -6.942305088043213
    9. 'positions' → logprob: -7.192305088043213
    10. 'seat' → logprob: -7.442305088043213

Token 413: '_positions' (ID: 93193)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.907060444355011
    2. '=-' → logprob: -1.4070603847503662
    3. '=' → logprob: -1.7820603847503662
    4. ' =' → logprob: -2.532060384750366
    5. '=[]' → logprob: -2.907060384750366
    6. '=None' → logprob: -3.407060384750366
    7. '_positions' → logprob: -5.407060623168945
    8. '_idx' → logprob: -5.907060623168945
    9. '_indices' → logprob: -6.157060623168945
    10. '_index' → logprob: -6.407060623168945

Token 414: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.038904692977666855
    2. '=' → logprob: -3.2889046669006348
    3. ' =' → logprob: -7.163904666900635
    4. '=[]
' → logprob: -9.663905143737793
    5. '=None' → logprob: -11.538905143737793
    6. '=[],' → logprob: -12.038905143737793
    7. '=[]
' → logprob: -12.288905143737793
    8. '=[' → logprob: -12.663905143737793
    9. '={}' → logprob: -13.663905143737793
    10. '[]' → logprob: -15.663905143737793

Token 415: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0074244108982384205
    2. '           ' → logprob: -5.257424354553223
    3. ' for' → logprob: -6.757424354553223
    4. '       ' → logprob: -7.382424354553223
    5. '   ' → logprob: -8.757424354553223
    6. '<|end|>' → logprob: -9.132424354553223
    7. '```' → logprob: -10.132424354553223
    8. 'for' → logprob: -10.507424354553223
    9. '	       ' → logprob: -11.257424354553223
    10. '
' → logprob: -11.757424354553223

Token 416: ' for' (ID: 395)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.7992649674415588
    2. 'for' (adapté à ' for') → logprob: -1.049264907836914
    3. 'last' → logprob: -1.924264907836914
    4. 'empty' → logprob: -3.549264907836914
    5. 'occupied' → logprob: -4.174264907836914
    6. 'previous' → logprob: -6.174264907836914
    7. 'start' → logprob: -6.549264907836914
    8. 'i' → logprob: -6.674264907836914
    9. '               ' → logprob: -6.924264907836914
    10. 'free' → logprob: -7.049264907836914

Token 417: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0034452839754521847
    2. ' i' → logprob: -5.753445148468018
    3. 'pos' → logprob: -8.378445625305176
    4. 'idx' → logprob: -10.503445625305176
    5. ' pos' → logprob: -12.253445625305176
    6. ' idx' → logprob: -13.128445625305176
    7. 'index' → logprob: -14.378445625305176
    8. '	i' → logprob: -14.503445625305176
    9. 'j' → logprob: -14.878445625305176
    10. 'seat' → logprob: -15.003445625305176

Token 418: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029871514067053795
    2. 'in' → logprob: -3.5298714637756348
    3. 'n' → logprob: -9.904871940612793
    4. 'range' → logprob: -10.029871940612793
    5. ',' → logprob: -11.904871940612793
    6. 'd' → logprob: -12.404871940612793
    7. ' ' → logprob: -12.654871940612793
    8. ',n' → logprob: -12.904871940612793
    9. 'se' → logprob: -13.404871940612793
    10. '```' → logprob: -13.404871940612793

Token 419: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009228924172930419
    2. ' range' → logprob: -7.000922679901123
    3. 'se' → logprob: -11.500923156738281
    4. 'occupied' → logprob: -14.000923156738281
    5. '(range' → logprob: -15.000923156738281
    6. '	range' → logprob: -17.00092315673828
    7. 'n' → logprob: -17.62592315673828
    8. 'r' → logprob: -18.00092315673828
    9. 'ran' → logprob: -18.12592315673828
    10. '   ' → logprob: -18.25092315673828

Token 420: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0048558651469647884
    2. '(n' → logprob: -5.379855632781982
    3. '1' → logprob: -8.50485610961914
    4. '(' → logprob: -11.00485610961914
    5. ' n' → logprob: -11.25485610961914
    6. '   ' → logprob: -13.87985610961914
    7. 'len' → logprob: -14.12985610961914
    8. '	n' → logprob: -14.25485610961914
    9. '0' → logprob: -14.62985610961914
    10. '
' → logprob: -15.25485610961914

Token 421: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2812797427177429
    2. '):' → logprob: -1.4062798023223877
    3. '+' → logprob: -9.781279563903809
    4. '-' → logprob: -10.781279563903809
    5. '):
' → logprob: -11.031279563903809
    6. '#' → logprob: -11.781279563903809
    7. '):

' → logprob: -12.031279563903809
    8. '   ' → logprob: -12.406279563903809
    9. ':
' → logprob: -12.656279563903809
    10. ':' → logprob: -12.656279563903809

Token 422: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.46433913707733154
    2. ' if' → logprob: -1.5893391370773315
    3. '   ' → logprob: -2.839339256286621
    4. ':' → logprob: -3.089339256286621
    5. ':
' → logprob: -3.589339256286621
    6. '               ' → logprob: -3.714339256286621
    7. ' ' → logprob: -5.839339256286621
    8. '           ' → logprob: -6.589339256286621
    9. 'if' → logprob: -6.714339256286621
    10. '    
' → logprob: -7.464339256286621

Token 423: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31390002369880676
    2. 'if' (adapté à ' if') → logprob: -1.3138999938964844
    3. '                   ' → logprob: -8.188899993896484
    4. '               ' → logprob: -8.188899993896484
    5. '                       ' → logprob: -10.188899993896484
    6. '	if' → logprob: -11.563899993896484
    7. '<|end|>' → logprob: -11.563899993896484
    8. ' ' → logprob: -11.813899993896484
    9. '           ' → logprob: -12.688899993896484
    10. '       ' → logprob: -12.938899993896484

Token 424: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.14272558689117432
    2. ' seats' → logprob: -2.0177254676818848
    3. '   ' → logprob: -11.267725944519043
    4. 'i' → logprob: -11.767725944519043
    5. '```' → logprob: -11.767725944519043
    6. ' ' → logprob: -12.517725944519043
    7. '	se' → logprob: -13.080225944519043
    8. 's' → logprob: -13.205225944519043
    9. '
' → logprob: -13.517725944519043
    10. '#' → logprob: -13.767725944519043

Token 425: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. 'i' → logprob: -14.750000953674316
    3. '[
' → logprob: -16.375
    4. '[' → logprob: -16.5
    5. '```' → logprob: -16.75
    6. ' [' → logprob: -17.0
    7. '
' → logprob: -17.375
    8. '[I' → logprob: -19.125
    9. ''''' → logprob: -19.375
    10. '[#' → logprob: -19.625

Token 426: ']!='' (ID: 187656)
  Prédit: ']==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.03082365356385708
    2. '=='' → logprob: -3.6558237075805664
    3. ']' → logprob: -5.780823707580566
    4. ']==' → logprob: -6.655823707580566
    5. '']=='' → logprob: -9.280823707580566
    6. ' =='' → logprob: -10.905823707580566
    7. ')=='' → logprob: -11.905823707580566
    8. ']'' → logprob: -12.280823707580566
    9. '='#' → logprob: -12.280823707580566
    10. ']!='' → logprob: -12.655823707580566

Token 427: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6932799816131592
    2. ''#' → logprob: -0.6932799816131592
    3. '#
' → logprob: -10.193280220031738
    4. ' '#' → logprob: -10.443280220031738
    5. '"#' → logprob: -10.693280220031738
    6. ' '#'' → logprob: -11.068280220031738
    7. '='#' → logprob: -11.943280220031738
    8. '#
' → logprob: -12.568280220031738
    9. '#:' → logprob: -12.943280220031738
    10. ''' → logprob: -13.068280220031738

Token 428: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47633811831474304
    2. ':' → logprob: -0.9763381481170654
    3. '                       ' → logprob: -7.476337909698486
    4. ' continue' → logprob: -7.726337909698486
    5. '                   ' → logprob: -8.226338386535645
    6. ' or' → logprob: -8.351338386535645
    7. '):
' → logprob: -8.851338386535645
    8. 'continue' → logprob: -8.851338386535645
    9. ':return' → logprob: -8.976338386535645
    10. '               ' → logprob: -9.226338386535645

Token 429: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.22726188600063324
    2. ' continue' → logprob: -1.7272619009017944
    3. 'continue' → logprob: -4.727262020111084
    4. '	continue' → logprob: -5.477262020111084
    5. '               ' → logprob: -5.602262020111084
    6. '                   ' → logprob: -5.602262020111084
    7. ':
' → logprob: -6.602262020111084
    8. '       ' → logprob: -6.977262020111084
    9. '	                   ' → logprob: -7.477262020111084
    10. '					' → logprob: -7.852262020111084

Token 430: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.07898330688476562
    2. ' continue' → logprob: -2.5789833068847656
    3. '                   ' → logprob: -9.828983306884766
    4. '               ' → logprob: -11.828983306884766
    5. 'max' → logprob: -11.828983306884766
    6. '	continue' → logprob: -11.828983306884766
    7. '   ' → logprob: -12.203983306884766
    8. '                       ' → logprob: -12.703983306884766
    9. 'break' → logprob: -12.953983306884766
    10. 'contin' → logprob: -13.453983306884766

Token 431: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6654988527297974
    2. '
' → logprob: -0.7904988527297974
    3. '                    
' → logprob: -4.540498733520508
    4. '               ' → logprob: -4.665498733520508
    5. '```' → logprob: -6.040498733520508
    6. '                       ' → logprob: -6.415498733520508
    7. '<|end|>' → logprob: -6.790498733520508
    8. '  
' → logprob: -7.040498733520508
    9. '   ' → logprob: -7.040498733520508
    10. '                        
' → logprob: -7.040498733520508

Token 432: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.32724785804748535
    2. '
' → logprob: -1.4522478580474854
    3. '               ' → logprob: -3.2022478580474854
    4. '           ' → logprob: -7.577247619628906
    5. '   ' → logprob: -7.577247619628906
    6. '                    
' → logprob: -7.702247619628906
    7. 'distance' → logprob: -7.952247619628906
    8. '```' → logprob: -7.952247619628906
    9. ' for' → logprob: -8.202247619628906
    10. 'for' → logprob: -8.327247619628906

Token 433: ' dist' (ID: 3601)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3204525411128998
    2. ' left' → logprob: -1.4454525709152222
    3. 'dist' (adapté à ' dist') → logprob: -3.8204524517059326
    4. 'distance' → logprob: -4.820452690124512
    5. '                   ' → logprob: -5.570452690124512
    6. ' distance' → logprob: -6.570452690124512
    7. ' dist' → logprob: -6.695452690124512
    8. 'prev' → logprob: -7.945452690124512
    9. ' distances' → logprob: -8.070452690124512
    10. 'j' → logprob: -8.070452690124512

Token 434: '=min' (ID: 149377)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014893105253577232
    2. ' =' → logprob: -5.014893054962158
    3. '_left' → logprob: -5.514893054962158
    4. '=i' → logprob: -6.139893054962158
    5. '=[]' → logprob: -7.389893054962158
    6. '=[' → logprob: -8.139893531799316
    7. '=-' → logprob: -8.389893531799316
    8. '=None' → logprob: -8.514893531799316
    9. '=
' → logprob: -9.014893531799316
    10. 's' → logprob: -9.389893531799316

Token 435: '([' (ID: 5194)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0685376524925232
    2. '([' → logprob: -3.318537712097168
    3. '(abs' → logprob: -4.318537712097168
    4. '(' → logprob: -4.943537712097168
    5. '(
' → logprob: -5.193537712097168
    6. '((' → logprob: -6.318537712097168
    7. '[i' → logprob: -7.068537712097168
    8. 'i' → logprob: -7.818537712097168
    9. '([(' → logprob: -8.443537712097168
    10. '([
' → logprob: -8.443537712097168

Token 436: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.010280941613018513
    2. ' abs' → logprob: -4.760281085968018
    3. '(abs' → logprob: -6.510281085968018
    4. 'i' → logprob: -8.88528060913086
    5. '(i' → logprob: -11.26028060913086
    6. '[i' → logprob: -11.51028060913086
    7. '   ' → logprob: -11.88528060913086
    8. ' ' → logprob: -12.63528060913086
    9. ' i' → logprob: -12.88528060913086
    10. '[' → logprob: -13.76028060913086

Token 437: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003984604496508837
    2. '(pos' → logprob: -5.628984451293945
    3. '(' → logprob: -8.628984451293945
    4. '(j' → logprob: -9.503984451293945
    5. 'i' → logprob: -10.128984451293945
    6. 'pos' → logprob: -10.503984451293945
    7. '(o' → logprob: -10.628984451293945
    8. '(se' → logprob: -11.628984451293945
    9. 'occupied' → logprob: -11.878984451293945
    10. '(p' → logprob: -12.128984451293945

Token 438: '-o' (ID: 19765)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11818888038396835
    2. '-j' → logprob: -2.7431888580322266
    3. '-pos' → logprob: -3.7431888580322266
    4. '-' → logprob: -4.368188858032227
    5. '-x' → logprob: -5.243188858032227
    6. '-v' → logprob: -6.368188858032227
    7. '-se' → logprob: -6.743188858032227
    8. '-k' → logprob: -7.493188858032227
    9. '-o' → logprob: -7.618188858032227
    10. '-p' → logprob: -7.618188858032227

Token 439: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4318976402282715
    2. 'cc' → logprob: -1.0568976402282715
    3. 'c' → logprob: -6.5568976402282715
    4. 'n' → logprob: -8.18189811706543
    5. ' )' → logprob: -8.18189811706543
    6. 'p' → logprob: -8.18189811706543
    7. 'cup' → logprob: -8.18189811706543
    8. ')]' → logprob: -8.93189811706543
    9. ')
' → logprob: -9.68189811706543
    10. ')+' → logprob: -9.68189811706543

Token 440: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5830258727073669
    2. 'for' → logprob: -0.8330258727073669
    3. ')' → logprob: -5.083025932312012
    4. ' ' → logprob: -8.458025932312012
    5. '   ' → logprob: -8.458025932312012
    6. 'o' → logprob: -9.583025932312012
    7. '  ' → logprob: -9.958025932312012
    8. ' o' → logprob: -10.333025932312012
    9. '    ' → logprob: -10.583025932312012
    10. '           ' → logprob: -10.583025932312012

Token 441: ' o' (ID: 293)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.20379921793937683
    2. ' occupied' → logprob: -1.7037992477416992
    3. 'o' → logprob: -6.578799247741699
    4. ' o' → logprob: -6.953799247741699
    5. ' ' → logprob: -11.5787992477417
    6. 'occup' → logprob: -11.7037992477417
    7. 'occ' → logprob: -12.3287992477417
    8. '   ' → logprob: -13.0787992477417
    9. ' ocu' → logprob: -13.0787992477417
    10. 'ocup' → logprob: -13.0787992477417

Token 442: ' in' (ID: 306)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.2422933429479599
    2. ' occupied' → logprob: -2.117293357849121
    3. ' in' → logprob: -2.367293357849121
    4. 'in' → logprob: -7.492293357849121
    5. 'occup' → logprob: -7.742293357849121
    6. ' ' → logprob: -9.742293357849121
    7. 'ocup' → logprob: -11.367293357849121
    8. 'o' → logprob: -12.242293357849121
    9. 'Occupied' → logprob: -12.742293357849121
    10. ' ocup' → logprob: -13.242293357849121

Token 443: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.004079112783074379
    2. ' occupied' → logprob: -5.504079341888428
    3. 'occup' → logprob: -15.25407886505127
    4. ' ' → logprob: -15.37907886505127
    5. 'ocup' → logprob: -17.129079818725586
    6. '[' → logprob: -17.504079818725586
    7. '   ' → logprob: -17.879079818725586
    8. '  ' → logprob: -18.504079818725586
    9. 'occ' → logprob: -19.004079818725586
    10. 'Occupied' → logprob: -19.379079818725586

Token 444: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0010359067237004638
    2. ' ])' → logprob: -7.251035690307617
    3. '])
' → logprob: -8.126035690307617
    4. ' if' → logprob: -11.001035690307617
    5. ']' → logprob: -12.626035690307617
    6. '])+' → logprob: -13.376035690307617
    7. ')' → logprob: -13.626035690307617
    8. ' ])
' → logprob: -13.876035690307617
    9. '                   ' → logprob: -14.251035690307617
    10. ']))' → logprob: -14.376035690307617

Token 445: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001656613196246326
    2. '               ' → logprob: -7.126656532287598
    3. '           ' → logprob: -8.001656532287598
    4. '                       ' → logprob: -9.376656532287598
    5. '       ' → logprob: -9.751656532287598
    6. ',' → logprob: -9.876656532287598
    7. '                    
' → logprob: -9.876656532287598
    8. '   ' → logprob: -10.126656532287598
    9. '
' → logprob: -10.251656532287598
    10. '>' → logprob: -10.376656532287598

Token 446: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012842766009271145
    2. ' if' → logprob: -4.887842655181885
    3. ' ' → logprob: -6.762842655181885
    4. 'if' (adapté à ' if') → logprob: -7.137842655181885
    5. '           ' → logprob: -7.137842655181885
    6. '               ' → logprob: -7.137842655181885
    7. '   ' → logprob: -7.762842655181885
    8. '                    ' → logprob: -8.262843132019043
    9. '       ' → logprob: -8.387843132019043
    10. '                    
' → logprob: -8.637843132019043

Token 447: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0336591862142086
    2. ' dist' → logprob: -3.4086592197418213
    3. '	dist' → logprob: -11.658658981323242
    4. '   ' → logprob: -13.283658981323242
    5. '(dist' → logprob: -13.658658981323242
    6. ' ' → logprob: -13.658658981323242
    7. 'max' → logprob: -15.783658981323242
    8. '  ' → logprob: -15.908658981323242
    9. '_dist' → logprob: -16.033658981323242
    10. 'Dist' → logprob: -16.158658981323242

Token 448: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.048596687614917755
    2. ' >' → logprob: -3.0485966205596924
    3. '==' → logprob: -12.423596382141113
    4. ' ' → logprob: -12.673596382141113
    5. '   ' → logprob: -14.798596382141113
    6. ' ==' → logprob: -14.923596382141113
    7. ' ' → logprob: -15.048596382141113
    8. '>
' → logprob: -15.423596382141113
    9. '>

' → logprob: -15.423596382141113
    10. '  ' → logprob: -16.17359733581543

Token 449: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.615255839889869e-05
    2. ' max' → logprob: -9.250096321105957
    3. '=max' → logprob: -19.50009536743164
    4. '	max' → logprob: -20.12509536743164
    5. '_max' → logprob: -20.37509536743164
    6. '               ' → logprob: -21.00009536743164
    7. '                   ' → logprob: -21.25009536743164
    8. '(max' → logprob: -22.12509536743164
    9. '[max' → logprob: -22.12509536743164
    10. '
' → logprob: -22.62509536743164

Token 450: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.3676733690081164e-05
    2. 'dist' → logprob: -11.00002384185791
    3. '_' → logprob: -12.25002384185791
    4. ' _' → logprob: -13.62502384185791
    5. '_distance' → logprob: -15.00002384185791
    6. '_dis' → logprob: -15.50002384185791
    7. '_d' → logprob: -15.62502384185791
    8. '_diff' → logprob: -16.375022888183594
    9. '_DIST' → logprob: -17.625022888183594
    10. '_pos' → logprob: -17.750022888183594

Token 451: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05550453066825867
    2. ':' → logprob: -3.055504560470581
    3. '                       ' → logprob: -5.930504322052002
    4. '):
' → logprob: -6.055504322052002
    5. '                   ' → logprob: -6.930504322052002
    6. '=' → logprob: -7.805504322052002
    7. ' :
' → logprob: -8.43050479888916
    8. '                           ' → logprob: -8.93050479888916
    9. '               ' → logprob: -10.30550479888916
    10. ',' → logprob: -10.80550479888916

Token 452: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02644346095621586
    2. '                   ' → logprob: -4.0264434814453125
    3. ' max' → logprob: -5.2764434814453125
    4. 'max' → logprob: -6.1514434814453125
    5. '               ' → logprob: -7.6514434814453125
    6. '                           ' → logprob: -9.401443481445312
    7. '           ' → logprob: -9.526443481445312
    8. '```' → logprob: -9.776443481445312
    9. '=' → logprob: -9.901443481445312
    10. '                        ' → logprob: -10.026443481445312

Token 453: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.31358611583709717
    2. ' max' → logprob: -1.3135861158370972
    3. '                       ' → logprob: -8.063586235046387
    4. '                           ' → logprob: -12.188586235046387
    5. '                   ' → logprob: -13.313586235046387
    6. '```' → logprob: -14.188586235046387
    7. '	max' → logprob: -14.563586235046387
    8. 'candidate' → logprob: -14.813586235046387
    9. '               ' → logprob: -15.688586235046387
    10. '=max' → logprob: -15.938586235046387

Token 454: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -7.3458322731312364e-06
    2. 'dist' → logprob: -12.000007629394531
    3. '_' → logprob: -15.000007629394531
    4. '_pos' → logprob: -15.500007629394531
    5. '_dis' → logprob: -15.500007629394531
    6. '_distance' → logprob: -16.12500762939453
    7. '_diff' → logprob: -16.62500762939453
    8. '	dist' → logprob: -16.75000762939453
    9. '_token' → logprob: -17.12500762939453
    10. '_d' → logprob: -17.25000762939453

Token 455: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004324573092162609
    2. ' =' → logprob: -7.75043249130249
    3. '=max' → logprob: -14.000432014465332
    4. '=
' → logprob: -14.875432014465332
    5. '=int' → logprob: -16.00043296813965
    6. '=i' → logprob: -16.50043296813965
    7. '=cut' → logprob: -16.62543296813965
    8. '=len' → logprob: -17.12543296813965
    9. '=d' → logprob: -17.25043296813965
    10. '=s' → logprob: -17.37543296813965

Token 456: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.676292231422849e-05
    2. ' dist' → logprob: -11.000017166137695
    3. '	dist' → logprob: -18.000017166137695
    4. '[' → logprob: -20.000017166137695
    5. 'd' → logprob: -20.250017166137695
    6. '(dist' → logprob: -20.375017166137695
    7. '_dist' → logprob: -21.250017166137695
    8. 'distance' → logprob: -21.250017166137695
    9. '
' → logprob: -21.625017166137695
    10. '   ' → logprob: -22.000017166137695

Token 457: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003358800895512104
    2. '                   ' → logprob: -5.878358840942383
    3. 'candidate' → logprob: -8.253358840942383
    4. '               ' → logprob: -8.503358840942383
    5. '                        
' → logprob: -11.128358840942383
    6. '					' → logprob: -11.503358840942383
    7. '                        ' → logprob: -11.628358840942383
    8. '```' → logprob: -11.628358840942383
    9. '                      ' → logprob: -11.753358840942383
    10. ' candidate' → logprob: -11.878358840942383

Token 458: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6860418915748596
    2. '                   ' → logprob: -1.5610418319702148
    3. 'candidate' → logprob: -1.5610418319702148
    4. '```' → logprob: -2.811041831970215
    5. ' candidate' → logprob: -5.311041831970215
    6. '
' → logprob: -5.436041831970215
    7. '``' → logprob: -5.686041831970215
    8. '               ' → logprob: -6.686041831970215
    9. '                        
' → logprob: -7.811041831970215
    10. '           ' → logprob: -7.811041831970215

Token 459: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' (adapté à ' candidate') → logprob: -0.0031796174589544535
    2. ' candidate' → logprob: -5.753179550170898
    3. '                   ' → logprob: -14.503179550170898
    4. '                       ' → logprob: -14.753179550170898
    5. '(candidate' → logprob: -14.753179550170898
    6. '[' → logprob: -15.253179550170898
    7. '[i' → logprob: -16.0031795501709
    8. '_candidate' → logprob: -16.5031795501709
    9. '[c' → logprob: -17.1281795501709
    10. '候' → logprob: -17.8781795501709

Token 460: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.0683535037969705e-05
    2. 'positions' → logprob: -11.50001049041748
    3. 'Positions' → logprob: -14.75001049041748
    4. 's' → logprob: -15.87501049041748
    5. ' positions' → logprob: -18.125011444091797
    6. '```' → logprob: -18.375011444091797
    7. '[]' → logprob: -19.000011444091797
    8. '[_' → logprob: -19.375011444091797
    9. '_' → logprob: -19.625011444091797
    10. '_candidates' → logprob: -20.000011444091797

Token 461: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.024226397275924683
    2. '=' → logprob: -3.774226427078247
    3. '=[]' → logprob: -7.024226188659668
    4. ' =' → logprob: -9.399226188659668
    5. '[' → logprob: -13.024226188659668
    6. ' =[' → logprob: -13.524226188659668
    7. '=['' → logprob: -13.649226188659668
    8. '=[[' → logprob: -14.149226188659668
    9. '=[
' → logprob: -14.149226188659668
    10. '={}' → logprob: -15.399226188659668

Token 462: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.961759259458631e-06
    2. ' i' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.1250057220459
    4. '	i' → logprob: -17.2500057220459
    5. '
' → logprob: -18.6250057220459
    6. '[i' → logprob: -20.2500057220459
    7. '(i' → logprob: -20.3750057220459
    8. '{i' → logprob: -20.8750057220459
    9. ',i' → logprob: -21.2500057220459
    10. '                   ' → logprob: -21.3750057220459

Token 463: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10656072199344635
    2. '                   ' → logprob: -2.856560707092285
    3. ']
' → logprob: -3.231560707092285
    4. '<|end|>' → logprob: -5.731560707092285
    5. '                       ' → logprob: -7.731560707092285
    6. '               ' → logprob: -8.856560707092285
    7. '```' → logprob: -9.731560707092285
    8. '<|end|>' → logprob: -10.106560707092285
    9. '']' → logprob: -10.231560707092285
    10. '           ' → logprob: -10.356560707092285

Token 464: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1079016774892807
    2. 'elif' → logprob: -2.7329015731811523
    3. ' elif' → logprob: -3.3579015731811523
    4. '               ' → logprob: -6.732901573181152
    5. '           ' → logprob: -7.982901573181152
    6. '                       ' → logprob: -8.482901573181152
    7. '   ' → logprob: -8.732901573181152
    8. '```' → logprob: -8.732901573181152
    9. '	elif' → logprob: -8.732901573181152
    10. '<|end|>' → logprob: -9.232901573181152

Token 465: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.31594178080558777
    2. '                   ' → logprob: -1.5659418106079102
    3. ' elif' → logprob: -2.94094181060791
    4. '               ' → logprob: -4.81594181060791
    5. '           ' → logprob: -7.19094181060791
    6. '       ' → logprob: -9.69094181060791
    7. '                       ' → logprob: -9.69094181060791
    8. '   ' → logprob: -9.81594181060791
    9. '	elif' → logprob: -10.06594181060791
    10. '
' → logprob: -10.56594181060791

Token 466: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.31326353549957275
    2. ' dist' → logprob: -1.3132635354995728
    3. '	dist' → logprob: -13.438263893127441
    4. ' ' → logprob: -15.813263893127441
    5. '_dist' → logprob: -16.438262939453125
    6. '   ' → logprob: -16.688262939453125
    7. ' ' → logprob: -17.188262939453125
    8. '(dist' → logprob: -17.688262939453125
    9. '    ' → logprob: -17.813262939453125
    10. 'Dist' → logprob: -18.563262939453125

Token 467: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01962878182530403
    2. ' ==' → logprob: -4.519629001617432
    3. '>' → logprob: -4.769629001617432
    4. ' >' → logprob: -9.894628524780273
    5. '=' → logprob: -11.644628524780273
    6. ']==' → logprob: -14.269628524780273
    7. '===' → logprob: -14.394628524780273
    8. ')==' → logprob: -16.519628524780273
    9. '==
' → logprob: -16.894628524780273
    10. '>=' → logprob: -17.019628524780273

Token 468: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.147740689106286e-05
    2. ' max' → logprob: -10.25007152557373
    3. 'candidate' → logprob: -10.37507152557373
    4. 'dist' → logprob: -12.37507152557373
    5. 'i' → logprob: -15.25007152557373
    6. '=max' → logprob: -15.75007152557373
    7. '[max' → logprob: -16.625070571899414
    8. 'min' → logprob: -17.375070571899414
    9. ' candidate' → logprob: -17.625070571899414
    10. 'cand' → logprob: -17.750070571899414

Token 469: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00442774360999465
    2. 'candidate' → logprob: -5.879427909851074
    3. '_pos' → logprob: -7.129427909851074
    4. 'ist' → logprob: -7.879427909851074
    5. 'dist' → logprob: -8.129427909851074
    6. '_positions' → logprob: -9.754427909851074
    7. ' candidate' → logprob: -10.129427909851074
    8. 'ax' → logprob: -11.254427909851074
    9. '_candidate' → logprob: -11.379427909851074
    10. 'cand' → logprob: -12.629427909851074

Token 470: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3904343247413635
    2. '                       ' → logprob: -1.1404342651367188
    3. ':' → logprob: -6.015434265136719
    4. 'candidate' → logprob: -8.265434265136719
    5. '                   ' → logprob: -8.515434265136719
    6. ':c' → logprob: -8.765434265136719
    7. ' candidate' → logprob: -9.515434265136719
    8. '):
' → logprob: -9.640434265136719
    9. '.append' → logprob: -9.640434265136719
    10. '(candidate' → logprob: -9.640434265136719

Token 471: '                       ' (ID: 968)
  Prédit: ' candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.6003443002700806
    2. 'candidate' → logprob: -0.9753443002700806
    3. '                       ' → logprob: -2.600344181060791
    4. '(candidate' → logprob: -10.47534465789795
    5. '                   ' → logprob: -11.60034465789795
    6. '_candidate' → logprob: -11.85034465789795
    7. ' candidates' → logprob: -12.47534465789795
    8. ' candidat' → logprob: -12.97534465789795
    9. '   ' → logprob: -13.35034465789795
    10. '					' → logprob: -13.35034465789795

Token 472: ' candidate' (ID: 17098)
  Prédit: ' candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.6932393908500671
    2. 'candidate' (adapté à ' candidate') → logprob: -0.6932393908500671
    3. '                       ' → logprob: -9.318239212036133
    4. '(candidate' → logprob: -14.193239212036133
    5. '_candidate' → logprob: -14.443239212036133
    6. '候' → logprob: -14.943239212036133
    7. '                   ' → logprob: -15.193239212036133
    8. 'Candidate' → logprob: -15.818239212036133
    9. ' candidat' → logprob: -15.943239212036133
    10. '                           ' → logprob: -16.068239212036133

Token 473: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.9361264946837764e-07
    2. 'positions' → logprob: -16.5
    3. 's' → logprob: -18.25
    4. ' _' → logprob: -18.625
    5. '```' → logprob: -19.625
    6. '\' → logprob: -19.75
    7. '_candidates' → logprob: -20.0
    8. 'Positions' → logprob: -20.125
    9. ' positions' → logprob: -20.125
    10. ''_' → logprob: -20.375

Token 474: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.750000953674316
    3. '.app' → logprob: -14.875000953674316
    4. ' .' → logprob: -15.875000953674316
    5. '.push' → logprob: -18.0
    6. 'append' → logprob: -19.25
    7. '+.' → logprob: -19.625
    8. '.Append' → logprob: -19.75
    9. '.ap' → logprob: -20.125
    10. '.add' → logprob: -20.375

Token 475: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.0
    3. '(' → logprob: -18.75
    4. '(
' → logprob: -22.375
    5. ' (' → logprob: -22.875
    6. ',i' → logprob: -23.5
    7. '   ' → logprob: -23.75
    8. ' i' → logprob: -24.375
    9. '[i' → logprob: -24.375
    10. '	i' → logprob: -24.5

Token 476: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013535226695239544
    2. ']' → logprob: -4.638535022735596
    3. '[i' → logprob: -6.638535022735596
    4. ')
' → logprob: -7.638535022735596
    5. '               ' → logprob: -7.638535022735596
    6. '                   ' → logprob: -7.638535022735596
    7. '                       ' → logprob: -8.013535499572754
    8. '<|end|>' → logprob: -8.138535499572754
    9. '           ' → logprob: -9.638535499572754
    10. '```' → logprob: -9.763535499572754

Token 477: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.033263180404901505
    2. '
' → logprob: -3.5332632064819336
    3. ' for' → logprob: -7.033263206481934
    4. '```' → logprob: -7.533263206481934
    5. '<|end|>' → logprob: -8.158263206481934
    6. ' if' → logprob: -8.283263206481934
    7. '                   ' → logprob: -8.408263206481934
    8. '#' → logprob: -8.658263206481934
    9. '       ' → logprob: -8.908263206481934
    10. '           ' → logprob: -8.908263206481934

Token 478: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.037668902426958084
    2. ' seats' → logprob: -4.037668704986572
    3. 'if' → logprob: -4.912668704986572
    4. 'candidate' → logprob: -5.537668704986572
    5. '               ' → logprob: -6.162668704986572
    6. 'pos' → logprob: -6.662668704986572
    7. 'seat' → logprob: -7.037668704986572
    8. 'c' → logprob: -7.537668704986572
    9. 'positions' → logprob: -7.537668704986572
    10. 'idx' → logprob: -7.662668704986572

Token 479: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.2113979209971149e-05
    2. '[' → logprob: -12.500012397766113
    3. '[min' → logprob: -12.750012397766113
    4. '[max' → logprob: -13.875012397766113
    5. '[
' → logprob: -14.125012397766113
    6. '=c' → logprob: -14.500012397766113
    7. 'candidate' → logprob: -14.875012397766113
    8. '[i' → logprob: -15.000012397766113
    9. '[[' → logprob: -15.000012397766113
    10. ']' → logprob: -15.250012397766113

Token 480: 'andidate' (ID: 25264)
  Prédit: 'andidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidate' → logprob: -0.00010282796574756503
    2. 'andidates' → logprob: -10.250102996826172
    3. 'candidate' → logprob: -10.250102996826172
    4. 'and' → logprob: -10.750102996826172
    5. '[c' → logprob: -12.250102996826172
    6. '[' → logprob: -12.375102996826172
    7. '(candidate' → logprob: -14.750102996826172
    8. 'andidat' → logprob: -15.125102996826172
    9. '{' → logprob: -15.375102996826172
    10. '#' → logprob: -16.375102996826172

Token 481: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -3.173704271830502e-06
    2. 'positions' → logprob: -13.12500286102295
    3. 'Positions' → logprob: -14.25000286102295
    4. '_' → logprob: -15.75000286102295
    5. ''_' → logprob: -16.250003814697266
    6. 's' → logprob: -16.500003814697266
    7. '[' → logprob: -17.000003814697266
    8. ' positions' → logprob: -17.375003814697266
    9. '[_' → logprob: -17.625003814697266
    10. '_candidates' → logprob: -17.750003814697266

Token 482: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0072014592587947845
    2. '[-' → logprob: -5.007201671600342
    3. '0' → logprob: -8.632201194763184
    4. '.sort' → logprob: -8.882201194763184
    5. '.append' → logprob: -9.757201194763184
    6. '.pop' → logprob: -10.007201194763184
    7. '[len' → logprob: -10.257201194763184
    8. '.index' → logprob: -10.882201194763184
    9. '```' → logprob: -13.007201194763184
    10. '.insert' → logprob: -13.257201194763184

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002274200553074479
    2. '-' → logprob: -6.127274036407471
    3. ' ' → logprob: -9.377274513244629
    4. ' -' → logprob: -12.877274513244629
    5. '   ' → logprob: -14.127274513244629
    6. '
' → logprob: -15.377274513244629
    7. '  ' → logprob: -15.689774513244629
    8. '1' → logprob: -16.314773559570312
    9. '[' → logprob: -16.314773559570312
    10. 'len' → logprob: -16.627273559570312

Token 484: ']]' (ID: 8928)
  Prédit: ']=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']='' → logprob: -0.018414122983813286
    2. ']' → logprob: -4.01841402053833
    3. ']=' → logprob: -8.518414497375488
    4. '']='' → logprob: -10.143414497375488
    5. ']=='' → logprob: -11.643414497375488
    6. ']="' → logprob: -12.143414497375488
    7. ' ]' → logprob: -12.643414497375488
    8. ']!='' → logprob: -13.018414497375488
    9. ']'' → logprob: -13.268414497375488
    10. '']' → logprob: -13.768414497375488

Token 485: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.03207157924771309
    2. '='#' → logprob: -4.032071590423584
    3. '=' → logprob: -4.282071590423584
    4. '=''' → logprob: -12.032071113586426
    5. '='$' → logprob: -13.282071113586426
    6. '="#"' → logprob: -14.032071113586426
    7. ' ='' → logprob: -14.157071113586426
    8. ']='' → logprob: -14.407071113586426
    9. '='\' → logprob: -15.907071113586426
    10. '=('' → logprob: -16.032072067260742

Token 486: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -7.703443770878948e-06
    2. ''D' → logprob: -12.000007629394531
    3. ''' → logprob: -14.000007629394531
    4. '#' → logprob: -15.000007629394531
    5. ' D' → logprob: -15.625007629394531
    6. 'd' → logprob: -17.25000762939453
    7. ''d' → logprob: -17.75000762939453
    8. '"D' → logprob: -17.87500762939453
    9. '```' → logprob: -17.87500762939453
    10. ''#' → logprob: -18.06250762939453

Token 487: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047655221074819565
    2. 'print' → logprob: -3.2976551055908203
    3. ' print' → logprob: -5.04765510559082
    4. '```' → logprob: -6.04765510559082
    5. '
' → logprob: -7.29765510559082
    6. '    
' → logprob: -9.92265510559082
    7. '``' → logprob: -10.29765510559082
    8. '	print' → logprob: -11.92265510559082
    9. '`' → logprob: -12.17265510559082
    10. '\n' → logprob: -13.67265510559082

Token 489: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.032559096813201904
    2. ' print' → logprob: -3.5325591564178467
    3. '   ' → logprob: -5.907558917999268
    4. '```' → logprob: -9.407559394836426
    5. '
' → logprob: -13.157559394836426
    6. '``' → logprob: -13.782559394836426
    7. '	print' → logprob: -15.157559394836426
    8. '`' → logprob: -15.657559394836426
    9. 'for' → logprob: -16.15755844116211
    10. '    
' → logprob: -17.15755844116211

Token 490: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16070599853992462
    2. '("' → logprob: -1.9107060432434082
    3. '(' → logprob: -7.660706043243408
    4. '()' → logprob: -12.53570556640625
    5. '''.' → logprob: -12.78570556640625
    6. '"' → logprob: -13.66070556640625
    7. '(""' → logprob: -13.78570556640625
    8. '(*' → logprob: -13.91070556640625
    9. '("")' → logprob: -15.16070556640625
    10. ' (' → logprob: -15.53570556640625

Token 491: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0025619841180741787
    2. '"' → logprob: -6.002562046051025
    3. ' ''.' → logprob: -10.252561569213867
    4. '''' → logprob: -10.377561569213867
    5. ''.' → logprob: -11.127561569213867
    6. '".' → logprob: -12.627561569213867
    7. ''' → logprob: -13.877561569213867
    8. ' "".' → logprob: -14.752561569213867
    9. '.' → logprob: -16.002561569213867
    10. '```' → logprob: -16.002561569213867

Token 492: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.4855663721391466e-05
    2. ' join' → logprob: -11.125015258789062
    3. 'j' → logprob: -17.125015258789062
    4. 'print' → logprob: -17.750015258789062
    5. 'jo' → logprob: -18.500015258789062
    6. ' ' → logprob: -19.125015258789062
    7. 'strip' → logprob: -19.125015258789062
    8. '```' → logprob: -19.500015258789062
    9. '   ' → logprob: -19.625015258789062
    10. '.join' → logprob: -20.250015258789062

Token 493: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -0.0002614550176076591
    2. 'se' → logprob: -8.250261306762695
    3. ')' → logprob: -16.000261306762695
    4. ',se' → logprob: -17.125261306762695
    5. '	se' → logprob: -17.375261306762695
    6. ' seats' → logprob: -18.500261306762695
    7. ' (' → logprob: -19.875261306762695
    8. 'seat' → logprob: -19.875261306762695
    9. '/se' → logprob: -20.250261306762695
    10. '```' → logprob: -20.375261306762695

Token 494: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -3.173704271830502e-06
    2. 'a' → logprob: -13.87500286102295
    3. 's' → logprob: -14.50000286102295
    4. 'ates' → logprob: -14.62500286102295
    5. '(' → logprob: -15.37500286102295
    6. '#' → logprob: -15.75000286102295
    7. 'at' → logprob: -16.000003814697266
    8. '[' → logprob: -16.500003814697266
    9. ' ats' → logprob: -16.500003814697266
    10. 'ts' → logprob: -16.500003814697266

Token 495: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030900631099939346
    2. '))' → logprob: -3.530900716781616
    3. '())' → logprob: -6.780900478363037
    4. '()' → logprob: -11.530900955200195
    5. '])' → logprob: -13.905900955200195
    6. '')' → logprob: -14.030900955200195
    7. ')")' → logprob: -14.030900955200195
    8. ')))' → logprob: -14.530900955200195
    9. ')`' → logprob: -14.780900955200195
    10. '()))' → logprob: -14.905900955200195


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 493
Tokens correctement prédits (1ère position, stricte): 247
Tokens correctement prédits (1ère position, avec adaptation): 272
Tokens correctement prédits (top 10): 439
Précision stricte (1ère position): 50.10%
Précision adaptée (1ère position): 55.17%
Précision (top 10): 89.05%
================================================================================
