================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Programme pour calculer le nombre minimal d'opérations (multiplications/divisions)
# nécessaires pour calculer x^n à partir de x, en commençant à x (puissance 1).
# Opérations autorisées: multiplication et division entre nombres de la forme x^k
# avec k positif. On évite donc tout résultat intermédiaire avec exposant <= 0.
# Entrée: suite d'entiers n (1 <= n <= 1000), terminée par 0.
# Sortie: nombre minimal d'opérations pour chaque n.

import sys
from collections import deque

def minimal_operations(n_max):
    """
    Calcule le nombre minimal d'opérations pour tous n de 1 à n_max.
    Utilisation d'une recherche en largeur (BFS) sur les puissances atteignables.
    Chaque état est un exposant positif k (1 <= k <= 2*n_max) pour gérer les divisions.
    On commence par k=1 avec 0 opérations.

    A chaque étape, on peut combiner deux exposants déjà atteints (p, q) par multiplication:
        k = p + q
    Ou par division:
        k = p - q si k > 0
    On évite les exposants non positifs (car résultats doivent être x^k avec k>0).
    L'exploration est faite jusqu'à couvrir au moins 1..n_max.

    Renvoie une liste distance tel que distance[i] = minimal opérations pour x^i.
    """
    limit = 2 * n_max  # bornes pour éviter d'explorer trop loin
    dist = [float('inf')] * (limit + 1)
    dist[1] = 0  # x^1 est donné, 0 opérations

    # Pour accélérer, on stocke la liste des exposants déjà découverts
    known = [1]

    # Queue pour BFS: on traite les exposants découverts
    queue = deque([1])

    while queue:
        k = queue.popleft()
        # Pour chaque paire (k, m) où m est un exposant connu, tentons multiplication/division
        for m in known:
            nmul = k + m  # multiplication : exposant somme
            if nmul <= limit and dist[nmul] > dist[k] + 1:
                dist[nmul] = dist[k] + 1
                queue.append(nmul)
                known.append(nmul)
            ndiv = k - m  # division : exposant différence
            if ndiv > 0 and dist[ndiv] > dist[k] + 1:
                dist[ndiv] = dist[k] + 1
                queue.append(ndiv)
                known.append(ndiv)
    return dist

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    nums = [int(line) for line in input_lines]

    max_n = max(nums)
    if max_n == 0:
        return

    dist = minimal_operations(max_n)
    for n in nums:
        if n == 0:
            break
        # Affiche le résultat minimal pour chaque n
        print(dist[n])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Programme' (ID: 50667)
  → Token d'amorce (pas de prédiction)

Token 2: ' pour' (ID: 1930)
  → Token d'amorce (pas de prédiction)

Token 3: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.20805877447128296
    2. ' calcul' → logprob: -2.7080588340759277
    3. 'comp' → logprob: -3.7080588340759277
    4. ' compter' → logprob: -3.7080588340759277
    5. 'tr' → logprob: -4.458058834075928
    6. 'aff' → logprob: -4.583058834075928
    7. ' afficher' → logprob: -4.958058834075928
    8. 'l' → logprob: -5.083058834075928
    9. 'le' → logprob: -5.333058834075928
    10. ' tr' → logprob: -5.708058834075928

Token 4: 'er' (ID: 259)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1943674087524414
    2. '_' → logprob: -1.3193674087524414
    3. ' ' → logprob: -1.4443674087524414
    4. '#' → logprob: -2.8193674087524414
    5. ' de' → logprob: -2.9443674087524414
    6. ' d' → logprob: -4.069367408752441
    7. '```' → logprob: -4.194367408752441
    8. 'd' → logprob: -4.694367408752441
    9. 's' → logprob: -4.944367408752441
    10. 'u' → logprob: -5.319367408752441

Token 5: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.030178885906934738
    2. ' l' → logprob: -3.9051787853240967
    3. ' ' → logprob: -5.280179023742676
    4. ' le' → logprob: -6.405179023742676
    5. ' ' → logprob: -7.280179023742676
    6. 'la' → logprob: -7.405179023742676
    7. 'l' → logprob: -7.780179023742676
    8. ' les' → logprob: -8.280179023742676
    9. 'le' → logprob: -8.405179023742676
    10. '#' → logprob: -9.155179023742676

Token 6: ' nombre' (ID: 9733)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.9066835641860962
    2. ' factor' → logprob: -1.5316835641860962
    3. ' facteur' → logprob: -1.7816835641860962
    4. 'nombre' → logprob: -3.2816834449768066
    5. 's' → logprob: -3.5316834449768066
    6. ' nombre' → logprob: -3.6566834449768066
    7. ' factorial' → logprob: -3.7816834449768066
    8. ' carré' → logprob: -4.156683444976807
    9. 'fact' → logprob: -4.531683444976807
    10. ' ' → logprob: -4.656683444976807

Token 7: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12192350625991821
    2. 's' → logprob: -3.1219234466552734
    3. '_de' → logprob: -3.4969234466552734
    4. ' ' → logprob: -4.121923446655273
    5. '_d' → logprob: -4.871923446655273
    6. 'd' → logprob: -5.371923446655273
    7. '\' → logprob: -5.746923446655273
    8. '_s' → logprob: -5.871923446655273
    9. '```' → logprob: -6.496923446655273
    10. '_space' → logprob: -6.621923446655273

Token 8: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.706628143787384
    2. ' ' → logprob: -1.2066280841827393
    3. ' de' → logprob: -1.5816280841827393
    4. 'd' → logprob: -7.331628322601318
    5. 'de' → logprob: -7.706628322601318
    6. '  ' → logprob: -8.45662784576416
    7. '<|end|>' → logprob: -9.45662784576416
    8. '```' → logprob: -9.58162784576416
    9. ' des' → logprob: -10.08162784576416
    10. '_' → logprob: -10.33162784576416

Token 9: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2961263358592987
    2. ''' → logprob: -2.296126365661621
    3. ''esp' → logprob: -2.421126365661621
    4. ''é' → logprob: -4.046126365661621
    5. ' espaces' → logprob: -4.171126365661621
    6. ''espace' → logprob: -4.421126365661621
    7. ''e' → logprob: -5.171126365661621
    8. ' e' → logprob: -5.546126365661621
    9. 'é' → logprob: -5.796126365661621
    10. 'u' → logprob: -6.421126365661621

Token 10: 'érations' (ID: 152860)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.7127569913864136
    2. 'érations' → logprob: -0.7127569913864136
    3. 'ér' → logprob: -4.462757110595703
    4. 'ération' → logprob: -5.587757110595703
    5. 'e' → logprob: -6.462757110595703
    6. 'éra' → logprob: -7.462757110595703
    7. 'er' → logprob: -7.712757110595703
    8. '```' → logprob: -7.962757110595703
    9. '\' → logprob: -8.462757110595703
    10. '\'' → logprob: -9.212757110595703

Token 11: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45932137966156006
    2. ':' → logprob: -1.83432137966156
    3. 's' → logprob: -2.2093214988708496
    4. '_' → logprob: -3.2093214988708496
    5. ' :' → logprob: -3.7093214988708496
    6. 'def' → logprob: -4.20932149887085
    7. '\' → logprob: -5.70932149887085
    8. '

' → logprob: -6.70932149887085
    9. ''' → logprob: -7.08432149887085
    10. '```' → logprob: -7.20932149887085

Token 12: 'multip' (ID: 163898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45708924531936646
    2. ' )' → logprob: -2.2070891857147217
    3. 's' → logprob: -2.4570891857147217
    4. ' nécessaires' → logprob: -2.5820891857147217
    5. ' ' → logprob: -2.8320891857147217
    6. ' de' → logprob: -4.332089424133301
    7. ' nécessaire' → logprob: -5.582089424133301
    8. ' ' → logprob: -5.707089424133301
    9. ' pour' → logprob: -5.707089424133301
    10. ' necess' → logprob: -5.832089424133301

Token 13: 'lications' (ID: 17986)
  Prédit: 'lications'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lications' → logprob: -0.2673111855983734
    2. 'lication' → logprob: -1.5173112154006958
    3. 'lic' → logprob: -4.517311096191406
    4. 'licit' → logprob: -6.267311096191406
    5. 'li' → logprob: -7.142311096191406
    6. 'lica' → logprob: -7.392311096191406
    7. '*' → logprob: -8.517311096191406
    8. 'lié' → logprob: -9.017311096191406
    9. 'l' → logprob: -9.142311096191406
    10. 'ications' → logprob: -9.267311096191406

Token 14: '/div' (ID: 40715)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1279493272304535
    2. ' )' → logprob: -2.5029492378234863
    3. 's' → logprob: -4.252949237823486
    4. ' nécessaires' → logprob: -4.627949237823486
    5. ' ' → logprob: -5.252949237823486
    6. ',' → logprob: -6.002949237823486
    7. '*' → logprob: -6.627949237823486
    8. '_' → logprob: -7.127949237823486
    9. '  ' → logprob: -7.377949237823486
    10. '```' → logprob: -7.627949237823486

Token 15: 'isions' (ID: 25527)
  Prédit: 'isions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isions' → logprob: -0.004607418552041054
    2. 'is' → logprob: -5.754607200622559
    3. 'ision' → logprob: -6.754607200622559
    4. '#' → logprob: -9.254607200622559
    5. 's' → logprob: -10.504607200622559
    6. '   ' → logprob: -10.629607200622559
    7. '```' → logprob: -10.629607200622559
    8. 'isiones' → logprob: -10.754607200622559
    9. ')' → logprob: -11.504607200622559
    10. 'i' → logprob: -12.004607200622559

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11919289827346802
    2. ' )' → logprob: -2.3691928386688232
    3. ' nécessaires' → logprob: -4.744193077087402
    4. ' ' → logprob: -5.369193077087402
    5. ' pour' → logprob: -6.619193077087402
    6. ' ' → logprob: -6.744193077087402
    7. ' nécessaire' → logprob: -7.744193077087402
    8. 's' → logprob: -7.869193077087402
    9. '_' → logprob: -7.994193077087402
    10. ' necess' → logprob: -8.369193077087402

Token 17: '#' (ID: 2)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.9283409118652344
    2. ' ' → logprob: -1.3033409118652344
    3. '_' → logprob: -2.3033409118652344
    4. ':' → logprob: -2.6783409118652344
    5. '```' → logprob: -2.8033409118652344
    6. 's' → logprob: -3.6783409118652344
    7. '\' → logprob: -3.8033409118652344
    8. 'def' → logprob: -3.9283409118652344
    9. ' ```' → logprob: -5.053340911865234
    10. ' =' → logprob: -5.303340911865234

Token 18: ' nécessaires' (ID: 74402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03952103108167648
    2. 'def' → logprob: -4.789521217346191
    3. ' 

' → logprob: -4.914521217346191
    4. '\' → logprob: -5.539521217346191
    5. ' 
' → logprob: -5.789521217346191
    6. '```' → logprob: -5.789521217346191
    7. ' \' → logprob: -5.914521217346191
    8. ' ```' → logprob: -6.164521217346191
    9. ' #' → logprob: -6.414521217346191
    10. '#' → logprob: -6.414521217346191

Token 19: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10801103711128235
    2. ' :' → logprob: -2.60801100730896
    3. ' pour' → logprob: -4.483011245727539
    4. ':' → logprob: -5.483011245727539
    5. ' à' → logprob: -5.733011245727539
    6. ' ,' → logprob: -6.608011245727539
    7. ' to' → logprob: -6.608011245727539
    8. ',' → logprob: -6.983011245727539
    9. 'pour' → logprob: -6.983011245727539
    10. ' #' → logprob: -7.483011245727539

Token 20: ' calcul' (ID: 7559)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -1.152017593383789
    2. ' calcul' → logprob: -1.402017593383789
    3. ' multiplier' → logprob: -2.277017593383789
    4. ' obtenir' → logprob: -2.277017593383789
    5. ' factor' → logprob: -3.277017593383789
    6. ' optimiser' → logprob: -3.527017593383789
    7. ' atteindre' → logprob: -4.027017593383789
    8. ' convertir' → logprob: -4.027017593383789
    9. ' réaliser' → logprob: -4.277017593383789
    10. ' trouver' → logprob: -4.277017593383789

Token 21: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0033197111915796995
    2. '#' → logprob: -5.75331974029541
    3. 'r' → logprob: -9.25331974029541
    4. 'e' → logprob: -10.37831974029541
    5. 'é' → logprob: -11.50331974029541
    6. 'a' → logprob: -13.87831974029541
    7. '```' → logprob: -14.00331974029541
    8. 'd' → logprob: -15.00331974029541
    9. 'ateur' → logprob: -15.12831974029541
    10. '_' → logprob: -15.75331974029541

Token 22: ' x' (ID: 1215)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8899166584014893
    2. ' ' → logprob: -1.8899166584014893
    3. ' l' → logprob: -1.8899166584014893
    4. ' le' → logprob: -1.8899166584014893
    5. 'l' → logprob: -3.5149166584014893
    6. 'le' → logprob: -3.8899166584014893
    7. '```' → logprob: -3.8899166584014893
    8. 'la' → logprob: -4.38991641998291
    9. '_' → logprob: -4.88991641998291
    10. ' ' → logprob: -5.26491641998291

Token 23: '^' (ID: 61)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.153478741645813
    2. ' ' → logprob: -3.6534786224365234
    3. ' =' → logprob: -3.7784786224365234
    4. ',' → logprob: -3.9034786224365234
    5. '=' → logprob: -3.9034786224365234
    6. ':' → logprob: -4.653478622436523
    7. 'x' → logprob: -4.903478622436523
    8. '#' → logprob: -5.028478622436523
    9. 'def' → logprob: -5.028478622436523
    10. 'u' → logprob: -5.528478622436523

Token 24: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20031756162643433
    2. '2' → logprob: -2.200317621231079
    3. 'y' → logprob: -3.700317621231079
    4. ' ' → logprob: -4.0753173828125
    5. ' n' → logprob: -4.7003173828125
    6. '3' → logprob: -5.3253173828125
    7. 'k' → logprob: -5.5753173828125
    8. 'i' → logprob: -6.4503173828125
    9. '{' → logprob: -6.5753173828125
    10. '-' → logprob: -6.9503173828125

Token 25: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6791437864303589
    2. ':' → logprob: -1.8041437864303589
    3. 'n' → logprob: -2.5541439056396484
    4. ' ' → logprob: -2.9291439056396484
    5. 'def' → logprob: -2.9291439056396484
    6. '#' → logprob: -3.1791439056396484
    7. 'x' → logprob: -3.6791439056396484
    8. ' 
' → logprob: -3.8041439056396484
    9. '```' → logprob: -3.8041439056396484
    10. 'i' → logprob: -5.179143905639648

Token 26: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.0831768810749054
    2. 'part' → logprob: -3.583176851272583
    3. ' ' → logprob: -4.333177089691162
    4. 'n' → logprob: -4.708177089691162
    5. ' ' → logprob: -5.583177089691162
    6. '#' → logprob: -5.958177089691162
    7. ' part' → logprob: -6.083177089691162
    8. ' une' → logprob: -6.208177089691162
    9. 'à' → logprob: -6.458177089691162
    10. ' puissance' → logprob: -6.458177089691162

Token 27: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04337616637349129
    2. ' de' → logprob: -3.4183762073516846
    3. 'd' → logprob: -5.2933759689331055
    4. ' ' → logprob: -6.0433759689331055
    5. ' du' → logprob: -7.0433759689331055
    6. 'x' → logprob: -7.5433759689331055
    7. ' x' → logprob: -8.043375968933105
    8. '_' → logprob: -8.793375968933105
    9. 'de' → logprob: -9.418375968933105
    10. '#' → logprob: -9.793375968933105

Token 28: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1034056767821312
    2. 'x' → logprob: -2.853405714035034
    3. ' ' → logprob: -3.478405714035034
    4. '1' → logprob: -5.228405475616455
    5. ' la' → logprob: -6.978405475616455
    6. ' n' → logprob: -7.228405475616455
    7. ' base' → logprob: -7.978405475616455
    8. '```' → logprob: -7.978405475616455
    9. ' a' → logprob: -8.603405952453613
    10. 'n' → logprob: -8.790905952453613

Token 29: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45703595876693726
    2. 'def' → logprob: -1.957036018371582
    3. ':' → logprob: -2.832036018371582
    4. ' ' → logprob: -3.082036018371582
    5. 'n' → logprob: -3.457036018371582
    6. 'd' → logprob: -3.582036018371582
    7. '#' → logprob: -3.707036018371582
    8. ',' → logprob: -5.082036018371582
    9. 'x' → logprob: -5.082036018371582
    10. '\' → logprob: -5.582036018371582

Token 30: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02623387612402439
    2. ' n' → logprob: -4.776233673095703
    3. 'n' → logprob: -5.151233673095703
    4. ' #' → logprob: -6.151233673095703
    5. ' 
' → logprob: -6.151233673095703
    6. '#' → logprob: -6.276233673095703
    7. 'x' → logprob: -7.151233673095703
    8. ' x' → logprob: -7.276233673095703
    9. '_' → logprob: -7.401233673095703
    10. ' ' → logprob: -7.651233673095703

Token 31: ' comm' (ID: 1394)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.035144172608852386
    2. ' exponent' → logprob: -4.160144329071045
    3. ' part' → logprob: -5.410144329071045
    4. 'ex' → logprob: -6.160144329071045
    5. ' n' → logprob: -6.285144329071045
    6. '#' → logprob: -6.785144329071045
    7. ' suivant' → logprob: -6.785144329071045
    8. ' ' → logprob: -7.285144329071045
    9. ' une' → logprob: -7.285144329071045
    10. 'n' → logprob: -7.535144329071045

Token 32: 'en' (ID: 262)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2990235388278961
    2. 'en' → logprob: -1.7990235090255737
    3. '#' → logprob: -3.5490236282348633
    4. 'ents' → logprob: -3.7990236282348633
    5. 'enta' → logprob: -4.049023628234863
    6. 'e' → logprob: -4.174023628234863
    7. 'a' → logprob: -5.299023628234863
    8. '```' → logprob: -7.674023628234863
    9. 'ant' → logprob: -7.799023628234863
    10. '-' → logprob: -8.861523628234863

Token 33: 'çant' (ID: 78714)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.023540806025266647
    2. '#' → logprob: -3.898540735244751
    3. 'çant' → logprob: -7.02354097366333
    4. 'ç' → logprob: -7.14854097366333
    5. 'ent' → logprob: -8.148540496826172
    6. 'tant' → logprob: -8.398540496826172
    7. 'e' → logprob: -9.398540496826172
    8. 'd' → logprob: -9.523540496826172
    9. '```' → logprob: -9.648540496826172
    10. 'ts' → logprob: -9.773540496826172

Token 34: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.834334135055542
    2. '_' → logprob: -1.334334135055542
    3. ' à' → logprob: -2.084334135055542
    4. ' par' → logprob: -3.084334135055542
    5. ' #' → logprob: -3.334334135055542
    6. '#' → logprob: -3.584334135055542
    7. 'par' → logprob: -3.709334135055542
    8. 'à' → logprob: -3.959334135055542
    9. '_par' → logprob: -4.959334373474121
    10. ' ' → logprob: -5.334334373474121

Token 35: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2938210070133209
    2. '1' → logprob: -1.6688209772109985
    3. ' x' → logprob: -3.043821096420288
    4. ' partir' → logprob: -4.293820858001709
    5. 'x' → logprob: -6.293820858001709
    6. ' part' → logprob: -7.293820858001709
    7. '0' → logprob: -8.418821334838867
    8. '_' → logprob: -8.543821334838867
    9. '```' → logprob: -8.543821334838867
    10. ' n' → logprob: -8.793821334838867

Token 36: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3845125436782837
    2. 'def' → logprob: -1.5095125436782837
    3. ':' → logprob: -3.259512424468994
    4. '_' → logprob: -4.134512424468994
    5. ' d' → logprob: -4.884512424468994
    6. ' de' → logprob: -4.884512424468994
    7. '#' → logprob: -5.259512424468994
    8. ' ' → logprob: -5.259512424468994
    9. 'de' → logprob: -5.884512424468994
    10. ' :' → logprob: -6.134512424468994

Token 37: 'pu' (ID: 5112)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13766901195049286
    2. ' )' → logprob: -2.512669086456299
    3. 'n' → logprob: -4.262669086456299
    4. '#' → logprob: -4.262669086456299
    5. 'x' → logprob: -5.012669086456299
    6. '=' → logprob: -5.637669086456299
    7. '^' → logprob: -6.012669086456299
    8. ',' → logprob: -6.387669086456299
    9. 'def' → logprob: -7.012669086456299
    10. ' =' → logprob: -7.387669086456299

Token 38: 'issance' (ID: 17968)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07506560534238815
    2. 'issance' → logprob: -3.9500656127929688
    3. 'b' → logprob: -4.450065612792969
    4. 'iss' → logprob: -4.575065612792969
    5. 'r' → logprob: -4.825065612792969
    6. '**' → logprob: -4.950065612792969
    7. 'is' → logprob: -5.075065612792969
    8. 's' → logprob: -5.450065612792969
    9. 'x' → logprob: -7.200065612792969
    10. 'issa' → logprob: -7.575065612792969

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8866298794746399
    2. ' de' → logprob: -1.2616298198699951
    3. '1' → logprob: -2.136629819869995
    4. '_' → logprob: -2.386629819869995
    5. '=' → logprob: -3.386629819869995
    6. ' initial' → logprob: -3.761629819869995
    7. ' =' → logprob: -3.886629819869995
    8. ')' → logprob: -5.011630058288574
    9. 's' → logprob: -6.636630058288574
    10. 'de' → logprob: -6.761630058288574

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7935736179351807
    2. ' de' → logprob: -1.7935736179351807
    3. ' ' → logprob: -2.0435736179351807
    4. '=' → logprob: -2.1685736179351807
    5. ' initial' → logprob: -3.2935736179351807
    6. 'de' → logprob: -3.5435736179351807
    7. ' =' → logprob: -3.5435736179351807
    8. ')' → logprob: -4.293573379516602
    9. 'initial' → logprob: -4.918573379516602
    10. '```' → logprob: -5.293573379516602

Token 41: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010382764972746372
    2. ' )' → logprob: -4.760382652282715
    3. '#' → logprob: -7.760382652282715
    4. '):' → logprob: -7.885382652282715
    5. '.' → logprob: -8.385382652282715
    6. ',' → logprob: -8.510382652282715
    7. 'e' → logprob: -9.135382652282715
    8. ':' → logprob: -9.385382652282715
    9. ')
' → logprob: -9.760382652282715
    10. 'def' → logprob: -9.760382652282715

Token 42: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0026362957432866096
    2. 'def' → logprob: -6.252636432647705
    3. 'i' → logprob: -8.502635955810547
    4. '#' → logprob: -8.752635955810547
    5. 'de' → logprob: -8.877635955810547
    6. '_' → logprob: -9.252635955810547
    7. 'n' → logprob: -10.752635955810547
    8. '\' → logprob: -11.127635955810547
    9. ':' → logprob: -11.127635955810547
    10. ' de' → logprob: -11.502635955810547

Token 43: ' Op' (ID: 9378)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.034720081835985184
    2. 'def' → logprob: -3.6597201824188232
    3. '#' → logprob: -5.534719944000244
    4. 'i' → logprob: -7.034719944000244
    5. 'n' → logprob: -7.034719944000244
    6. '_' → logprob: -7.409719944000244
    7. ' 
' → logprob: -7.534719944000244
    8. ' ' → logprob: -8.284720420837402
    9. ' d' → logprob: -8.284720420837402
    10. 'de' → logprob: -8.659720420837402

Token 44: 'érations' (ID: 152860)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7059839963912964
    2. 'érations' → logprob: -1.0809839963912964
    3. 'é' → logprob: -1.9559839963912964
    4. 'e' → logprob: -4.705984115600586
    5. '#' → logprob: -4.955984115600586
    6. 'ération' → logprob: -6.080984115600586
    7. 'er' → logprob: -6.205984115600586
    8. 'tim' → logprob: -6.455984115600586
    9. 'ér' → logprob: -6.955984115600586
    10. 'ti' → logprob: -7.330984115600586

Token 45: ' autor' (ID: 13432)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030286913737654686
    2. '=' → logprob: -4.15528678894043
    3. ' ' → logprob: -4.78028678894043
    4. ' de' → logprob: -6.03028678894043
    5. 'def' → logprob: -6.78028678894043
    6. 's' → logprob: -7.53028678894043
    7. ':' → logprob: -7.65528678894043
    8. ',' → logprob: -8.90528678894043
    9. ' :' → logprob: -9.03028678894043
    10. '_' → logprob: -9.15528678894043

Token 46: 'isées' (ID: 108324)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5136653780937195
    2. 'isées' → logprob: -1.2636654376983643
    3. 'ées' → logprob: -2.5136654376983643
    4. '#' → logprob: -4.263665199279785
    5. 'i' → logprob: -4.638665199279785
    6. 'isé' → logprob: -5.138665199279785
    7. 'is' → logprob: -5.513665199279785
    8. 'és' → logprob: -6.638665199279785
    9. 'è' → logprob: -7.013665199279785
    10. 'a' → logprob: -7.638665199279785

Token 47: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1660919189453125
    2. ' :' → logprob: -1.9160919189453125
    3. ' =' → logprob: -5.7910919189453125
    4. '=' → logprob: -6.1660919189453125
    5. ',' → logprob: -8.666091918945312
    6. ' ' → logprob: -8.791091918945312
    7. ' ' → logprob: -9.041091918945312
    8. ':
' → logprob: -10.041091918945312
    9. '#' → logprob: -10.166091918945312
    10. ' (' → logprob: -10.416091918945312

Token 48: ' multiplication' (ID: 86340)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1364866495132446
    2. ' ' → logprob: -2.011486530303955
    3. '#' → logprob: -2.261486530303955
    4. 'x' → logprob: -2.636486530303955
    5. ' multiplication' → logprob: -2.636486530303955
    6. ' #' → logprob: -3.511486530303955
    7. ' multip' → logprob: -4.011486530303955
    8. '^' → logprob: -4.136486530303955
    9. 'é' → logprob: -4.136486530303955
    10. ' multiplier' → logprob: -4.261486530303955

Token 49: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30955901741981506
    2. '_' → logprob: -1.8095589876174927
    3. ',' → logprob: -3.1845591068267822
    4. ' ' → logprob: -3.4345591068267822
    5. ')' → logprob: -5.434558868408203
    6. ' =' → logprob: -5.559558868408203
    7. '=' → logprob: -5.559558868408203
    8. '#' → logprob: -5.684558868408203
    9. '.' → logprob: -5.809558868408203
    10. 'n' → logprob: -5.934558868408203

Token 50: ' division' (ID: 21629)
  Prédit: ' division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' division' → logprob: -0.48360559344291687
    2. 'division' → logprob: -0.9836056232452393
    3. 'div' → logprob: -5.73360538482666
    4. '/' → logprob: -6.23360538482666
    5. '/div' → logprob: -6.85860538482666
    6. ' exponent' → logprob: -7.35860538482666
    7. ' la' → logprob: -7.60860538482666
    8. ' div' → logprob: -8.35860538482666
    9. ' divisions' → logprob: -8.35860538482666
    10. ' ' → logprob: -8.48360538482666

Token 51: ' entre' (ID: 3853)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2187129259109497
    2. 'def' → logprob: -1.4687129259109497
    3. ':' → logprob: -1.7187129259109497
    4. '#' → logprob: -2.34371280670166
    5. '_' → logprob: -2.84371280670166
    6. 'n' → logprob: -2.96871280670166
    7. ' ' → logprob: -3.84371280670166
    8. '\' → logprob: -3.84371280670166
    9. ',' → logprob: -4.59371280670166
    10. '```' → logprob: -5.21871280670166

Token 52: ' nombres' (ID: 76205)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8632087707519531
    2. 'x' → logprob: -1.8632087707519531
    3. ' deux' → logprob: -2.363208770751953
    4. ' les' → logprob: -2.488208770751953
    5. 'de' → logprob: -2.738208770751953
    6. 'les' → logprob: -3.363208770751953
    7. 'des' → logprob: -3.363208770751953
    8. ' puiss' → logprob: -3.738208770751953
    9. ' ' → logprob: -3.863208770751953
    10. ' x' → logprob: -3.988208770751953

Token 53: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3351755142211914
    2. '_' → logprob: -1.7101755142211914
    3. ')' → logprob: -4.085175514221191
    4. 'x' → logprob: -4.335175514221191
    5. '```' → logprob: -4.835175514221191
    6. '#' → logprob: -4.960175514221191
    7. ' )' → logprob: -4.960175514221191
    8. ' ' → logprob: -5.085175514221191
    9. 'import' → logprob: -5.085175514221191
    10. ',' → logprob: -5.085175514221191

Token 54: ' la' (ID: 557)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.24985085427761078
    2. ' puiss' → logprob: -2.6248507499694824
    3. 'la' → logprob: -3.3748507499694824
    4. 'p' → logprob: -3.7498507499694824
    5. '2' → logprob: -4.124850749969482
    6. 'l' → logprob: -4.374850749969482
    7. 'pot' → logprob: -4.874850749969482
    8. ' puissance' → logprob: -4.874850749969482
    9. '```' → logprob: -4.874850749969482
    10. 'x' → logprob: -4.999850749969482

Token 55: ' forme' (ID: 27450)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.8049276471138
    2. ' même' → logprob: -1.3049275875091553
    3. 'pu' → logprob: -2.1799275875091553
    4. ' puissance' → logprob: -2.4299275875091553
    5. 'liste' → logprob: -4.304927825927734
    6. ' sé' → logprob: -4.429927825927734
    7. ' forme' → logprob: -5.054927825927734
    8. ' sequence' → logprob: -5.179927825927734
    9. ' série' → logprob: -5.304927825927734
    10. ' puiss' → logprob: -5.804927825927734

Token 56: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8826576471328735
    2. '2' → logprob: -1.0076576471328735
    3. ' x' → logprob: -1.7576576471328735
    4. 'x' → logprob: -3.257657527923584
    5. '```' → logprob: -5.007657527923584
    6. ' powers' → logprob: -7.257657527923584
    7. '``' → logprob: -7.507657527923584
    8. ' deux' → logprob: -8.132658004760742
    9. 'powers' → logprob: -8.257658004760742
    10. '`' → logprob: -8.507658004760742

Token 57: '^' (ID: 61)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.40137550234794617
    2. 'def' → logprob: -1.4013755321502686
    3. '_' → logprob: -3.4013755321502686
    4. 'de' → logprob: -4.9013752937316895
    5. ' d' → logprob: -5.0263752937316895
    6. ' de' → logprob: -5.2763752937316895
    7. ':' → logprob: -5.2763752937316895
    8. ' ' → logprob: -5.2763752937316895
    9. '#' → logprob: -5.6513752937316895
    10. ' 

' → logprob: -5.9013752937316895

Token 58: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6129418015480042
    2. '2' → logprob: -1.2379417419433594
    3. 'n' → logprob: -2.8629417419433594
    4. 'm' → logprob: -2.9879417419433594
    5. 'i' → logprob: -3.2379417419433594
    6. ' ' → logprob: -5.237941741943359
    7. 'a' → logprob: -5.487941741943359
    8. ' k' → logprob: -5.612941741943359
    9. 'y' → logprob: -6.362941741943359
    10. '1' → logprob: -6.487941741943359

Token 59: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6645199656486511
    2. 'def' → logprob: -1.039520025253296
    3. ':' → logprob: -2.914520025253296
    4. '_' → logprob: -3.039520025253296
    5. ' de' → logprob: -5.539519786834717
    6. '\' → logprob: -5.664519786834717
    7. 'de' → logprob: -5.914519786834717
    8. '#' → logprob: -5.914519786834717
    9. ' d' → logprob: -5.914519786834717
    10. ' ' → logprob: -6.164519786834717

Token 60: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0071064233779907
    2. 'def' → logprob: -1.3821064233779907
    3. ':' → logprob: -1.8821064233779907
    4. 'd' → logprob: -2.007106304168701
    5. '#' → logprob: -2.757106304168701
    6. '\' → logprob: -4.882106304168701
    7. ',' → logprob: -5.132106304168701
    8. '```' → logprob: -5.382106304168701
    9. ' ' → logprob: -6.007106304168701
    10. 'n' → logprob: -6.257106304168701

Token 61: ' avec' (ID: 3937)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06086702644824982
    2. 'def' → logprob: -3.3108670711517334
    3. '\' → logprob: -4.935866832733154
    4. ':' → logprob: -4.935866832733154
    5. '#' → logprob: -5.685866832733154
    6. '_' → logprob: -7.060866832733154
    7. '```' → logprob: -7.060866832733154
    8. ' 
' → logprob: -7.310866832733154
    9. 'n' → logprob: -7.685866832733154
    10. ',' → logprob: -7.935866832733154

Token 62: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4293016195297241
    2. ' k' → logprob: -1.0543016195297241
    3. ' des' → logprob: -7.679301738739014
    4. ' ' → logprob: -9.429301261901855
    5. ' un' → logprob: -10.304301261901855
    6. ' n' → logprob: -12.304301261901855
    7. ' ' → logprob: -12.679301261901855
    8. 'n' → logprob: -12.929301261901855
    9. 'x' → logprob: -12.929301261901855
    10. 'des' → logprob: -13.179301261901855

Token 63: ' positif' (ID: 89008)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.3649768829345703
    2. '>=' → logprob: -1.6149768829345703
    3. ' >=' → logprob: -1.6149768829345703
    4. ' >' → logprob: -1.9899768829345703
    5. ' <=' → logprob: -3.2399768829345703
    6. '<=' → logprob: -3.4899768829345703
    7. '≥' → logprob: -3.4899768829345703
    8. '=' → logprob: -3.7399768829345703
    9. ' <' → logprob: -3.9899768829345703
    10. '<' → logprob: -3.9899768829345703

Token 64: '.' (ID: 13)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7527208924293518
    2. '#' → logprob: -1.752720832824707
    3. ':' → logprob: -1.752720832824707
    4. 'd' → logprob: -2.002720832824707
    5. '\' → logprob: -4.252720832824707
    6. ',' → logprob: -5.502720832824707
    7. '_' → logprob: -5.502720832824707
    8. '
' → logprob: -5.627720832824707
    9. '```' → logprob: -5.627720832824707
    10. '.' → logprob: -5.752720832824707

Token 65: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008355705998837948
    2. 'def' → logprob: -5.008355617523193
    3. '#' → logprob: -6.758355617523193
    4. ':' → logprob: -8.508356094360352
    5. 'i' → logprob: -9.508356094360352
    6. '_' → logprob: -10.383356094360352
    7. '\' → logprob: -10.383356094360352
    8. 'de' → logprob: -10.883356094360352
    9. ' 
' → logprob: -10.883356094360352
    10. '```' → logprob: -10.883356094360352

Token 66: ' év' (ID: 23692)
  Prédit: ' considère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' considère' → logprob: -1.2588238716125488
    2. ' veut' → logprob: -2.008823871612549
    3. ' souhaite' → logprob: -2.133823871612549
    4. ' peut' → logprob: -2.633823871612549
    5. ' part' → logprob: -3.383823871612549
    6. 'n' → logprob: -3.383823871612549
    7. '#' → logprob: -3.633823871612549
    8. ' cherche' → logprob: -3.758823871612549
    9. ' a' → logprob: -4.008823871612549
    10. ' suppose' → logprob: -4.008823871612549

Token 67: 'ite' (ID: 651)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.6831963658332825
    2. 'ale' → logprob: -1.4331963062286377
    3. 'a' → logprob: -2.1831963062286377
    4. 'alu' → logprob: -3.5581963062286377
    5. '#' → logprob: -3.8081963062286377
    6. 'é' → logprob: -3.8081963062286377
    7. 'alité' → logprob: -4.308196544647217
    8. 'e' → logprob: -4.433196544647217
    9. 'alue' → logprob: -5.058196544647217
    10. 'ide' → logprob: -5.433196544647217

Token 68: ' donc' (ID: 14206)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.10218682140111923
    2. ' d' → logprob: -3.602186918258667
    3. ' de' → logprob: -3.602186918258667
    4. 'les' → logprob: -3.852186918258667
    5. '_' → logprob: -4.602186679840088
    6. ' la' → logprob: -5.602186679840088
    7. 'd' → logprob: -6.602186679840088
    8. ' l' → logprob: -6.602186679840088
    9. ' le' → logprob: -6.727186679840088
    10. 'de' → logprob: -7.227186679840088

Token 69: ' tout' (ID: 5501)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7860575914382935
    2. 'les' → logprob: -0.9110575914382935
    3. 'd' → logprob: -3.161057472229004
    4. ' d' → logprob: -3.411057472229004
    5. ' de' → logprob: -3.536057472229004
    6. 'de' → logprob: -3.911057472229004
    7. ' la' → logprob: -4.911057472229004
    8. 'le' → logprob: -5.911057472229004
    9. 'l' → logprob: -6.286057472229004
    10. 'la' → logprob: -6.661057472229004

Token 70: ' résultat' (ID: 62556)
  Prédit: ' expos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' expos' → logprob: -1.1819846630096436
    2. ' passage' → logprob: -1.3069846630096436
    3. 'ex' → logprob: -2.0569846630096436
    4. ' usage' → logprob: -2.5569846630096436
    5. ' exponent' → logprob: -2.9319846630096436
    6. 'e' → logprob: -3.8069846630096436
    7. ' retour' → logprob: -4.181984901428223
    8. ' k' → logprob: -4.306984901428223
    9. 'es' → logprob: -4.556984901428223
    10. ' x' → logprob: -4.681984901428223

Token 71: ' interm' (ID: 120489)
  Prédit: ' nég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.037203382700681686
    2. ' interm' → logprob: -3.787203311920166
    3. ' nul' → logprob: -4.787203311920166
    4. 'n' → logprob: -7.537203311920166
    5. ' n' → logprob: -7.537203311920166
    6. 'inter' → logprob: -7.662203311920166
    7. '<' → logprob: -7.787203311920166
    8. ' de' → logprob: -7.912203311920166
    9. ' inférieur' → logprob: -8.037203788757324
    10. ' avec' → logprob: -8.287203788757324

Token 72: 'édiaire' (ID: 161555)
  Prédit: 'édiaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'édiaire' → logprob: -0.000782826216891408
    2. 'édia' → logprob: -8.25078296661377
    3. '```' → logprob: -8.62578296661377
    4. 'é' → logprob: -8.87578296661377
    5. 'édi' → logprob: -10.00078296661377
    6. 'iaire' → logprob: -10.62578296661377
    7. 'edia' → logprob: -11.12578296661377
    8. '   ' → logprob: -11.12578296661377
    9. 'mediate' → logprob: -11.25078296661377
    10. '#' → logprob: -11.25078296661377

Token 73: ' avec' (ID: 3937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5847876071929932
    2. 'd' → logprob: -1.2097876071929932
    3. '_' → logprob: -3.084787607192993
    4. ':' → logprob: -3.209787607192993
    5. ' def' → logprob: -4.834787368774414
    6. ' ' → logprob: -4.834787368774414
    7. ' de' → logprob: -5.084787368774414
    8. ' d' → logprob: -5.209787368774414
    9. '\' → logprob: -5.209787368774414
    10. '#' → logprob: -5.209787368774414

Token 74: ' expos' (ID: 10300)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7166439890861511
    2. ' un' → logprob: -1.466644048690796
    3. 'ex' → logprob: -2.716644048690796
    4. ' des' → logprob: -2.716644048690796
    5. 'k' → logprob: -2.841644048690796
    6. ' une' → logprob: -3.091644048690796
    7. 'un' → logprob: -4.466643810272217
    8. ' expos' → logprob: -4.716643810272217
    9. 'une' → logprob: -4.841643810272217
    10. ' ' → logprob: -5.341643810272217

Token 75: 'ant' (ID: 493)
  Prédit: 'onent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onent' → logprob: -1.0414873361587524
    2. 'ents' → logprob: -1.2914873361587524
    3. 'on' → logprob: -1.6664873361587524
    4. 'ent' → logprob: -3.166487216949463
    5. 'n' → logprob: -3.416487216949463
    6. 'onts' → logprob: -4.291487216949463
    7. 'é' → logprob: -4.791487216949463
    8. 'ons' → logprob: -5.353987216949463
    9. 'ont' → logprob: -5.353987216949463
    10. 'en' → logprob: -5.478987216949463

Token 76: ' <=' (ID: 5017)
  Prédit: ' nég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.17469781637191772
    2. 's' → logprob: -2.0496978759765625
    3. ' ' → logprob: -4.7996978759765625
    4. 'n' → logprob: -5.6746978759765625
    5. '0' → logprob: -5.7996978759765625
    6. ' n' → logprob: -5.9246978759765625
    7. ')' → logprob: -6.1746978759765625
    8. ' s' → logprob: -6.2996978759765625
    9. ' negatif' → logprob: -6.4246978759765625
    10. '>' → logprob: -6.5496978759765625

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023247340694069862
    2. ' ' → logprob: -3.773247241973877
    3. ' zéro' → logprob: -14.898247718811035
    4. ' ' → logprob: -15.585747718811035
    5. '1' → logprob: -15.710747718811035
    6. '00' → logprob: -15.835747718811035
    7. '۰' → logprob: -15.898247718811035
    8. 'o' → logprob: -16.08574676513672
    9. '<|end|>' → logprob: -16.39824676513672
    10. '  ' → logprob: -16.46074676513672

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011474833445390686
    2. ' ' → logprob: -9.125114440917969
    3. '00' → logprob: -13.812614440917969
    4. '1' → logprob: -13.937614440917969
    5. '010' → logprob: -14.125114440917969
    6. '000' → logprob: -14.625114440917969
    7. '01' → logprob: -14.875114440917969
    8. '۰' → logprob: -15.312614440917969
    9. '012' → logprob: -15.625114440917969
    10. '016' → logprob: -15.750114440917969

Token 79: '.
' (ID: 558)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1605318933725357
    2. 'def' → logprob: -2.410531997680664
    3. ':' → logprob: -3.285531997680664
    4. ' d' → logprob: -5.535531997680664
    5. ' ' → logprob: -5.910531997680664
    6. '#' → logprob: -5.910531997680664
    7. 'i' → logprob: -6.410531997680664
    8. 'import' → logprob: -6.535531997680664
    9. ' 
' → logprob: -6.535531997680664
    10. ' :' → logprob: -6.785531997680664

Token 80: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00672448705881834
    2. 'def' → logprob: -6.0067243576049805
    3. '#' → logprob: -6.2567243576049805
    4. 'i' → logprob: -6.8817243576049805
    5. ':' → logprob: -8.00672435760498
    6. ' 
' → logprob: -8.13172435760498
    7. '_' → logprob: -9.13172435760498
    8. ' d' → logprob: -9.75672435760498
    9. ' ' → logprob: -9.75672435760498
    10. 'n' → logprob: -9.88172435760498

Token 81: ' Entr' (ID: 50650)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005129986093379557
    2. 'def' → logprob: -7.625513076782227
    3. ' 
' → logprob: -12.000513076782227
    4. 'i' → logprob: -12.000513076782227
    5. '#' → logprob: -12.375513076782227
    6. 'import' → logprob: -13.250513076782227
    7. ' d' → logprob: -13.375513076782227
    8. '\' → logprob: -13.500513076782227
    9. 'de' → logprob: -13.500513076782227
    10. '```' → logprob: -14.000513076782227

Token 82: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.016425641253590584
    2. 'rée' → logprob: -4.891425609588623
    3. 'r' → logprob: -5.891425609588623
    4. 'é' → logprob: -6.016425609588623
    5. 'er' → logprob: -6.266425609588623
    6. 'ées' → logprob: -7.266425609588623
    7. 'e' → logprob: -8.016426086425781
    8. 'ê' → logprob: -8.766426086425781
    9. 'éer' → logprob: -8.891426086425781
    10. 'êt' → logprob: -8.891426086425781

Token 83: ':' (ID: 25)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6005193591117859
    2. ':' → logprob: -1.3505194187164307
    3. 'n' → logprob: -1.8505194187164307
    4. 'x' → logprob: -4.475519180297852
    5. ' =' → logprob: -4.600519180297852
    6. ' ' → logprob: -5.600519180297852
    7. ' n' → logprob: -5.850519180297852
    8. 's' → logprob: -5.975519180297852
    9. '=' → logprob: -6.600519180297852
    10. 't' → logprob: -7.350519180297852

Token 84: ' suite' (ID: 13800)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2186182141304016
    2. ' n' → logprob: -1.9686181545257568
    3. 'x' → logprob: -3.093618154525757
    4. ' x' → logprob: -4.593618392944336
    5. ' ' → logprob: -6.843618392944336
    6. 'a' → logprob: -10.468618392944336
    7. 'e' → logprob: -10.593618392944336
    8. 'k' → logprob: -10.843618392944336
    9. ' #' → logprob: -11.218618392944336
    10. ' "' → logprob: -11.468618392944336

Token 85: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.4094990491867065
    2. ' d' → logprob: -1.5344990491867065
    3. ' de' → logprob: -2.034499168395996
    4. ' =' → logprob: -2.159499168395996
    5. 'd' → logprob: -2.284499168395996
    6. 's' → logprob: -2.284499168395996
    7. 'de' → logprob: -3.784499168395996
    8. 'des' → logprob: -4.284499168395996
    9. 'n' → logprob: -4.659499168395996
    10. '[' → logprob: -5.034499168395996

Token 86: ''ent' (ID: 53422)
  Prédit: ''ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.5923590064048767
    2. ''ent' → logprob: -0.8423590064048767
    3. 'ex' → logprob: -4.9673590660095215
    4. 'e' → logprob: -6.2173590660095215
    5. ''n' → logprob: -6.5923590660095215
    6. ''e' → logprob: -6.8423590660095215
    7. ''' → logprob: -6.9673590660095215
    8. ''un' → logprob: -7.0923590660095215
    9. ' ent' → logprob: -7.5923590660095215
    10. '’ent' → logprob: -7.7173590660095215

Token 87: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.015614904463291168
    2. 'r' → logprob: -4.515614986419678
    3. 'rée' → logprob: -6.140614986419678
    4. 'rees' → logprob: -7.265614986419678
    5. 'ières' → logprob: -7.515614986419678
    6. 'ier' → logprob: -8.01561450958252
    7. '```' → logprob: -8.64061450958252
    8. 'ri' → logprob: -9.14061450958252
    9. 'ries' → logprob: -9.26561450958252
    10. 'i' → logprob: -9.64061450958252

Token 88: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47281941771507263
    2. 'def' → logprob: -1.722819447517395
    3. 'd' → logprob: -3.2228193283081055
    4. 's' → logprob: -3.9728193283081055
    5. '```' → logprob: -3.9728193283081055
    6. '#' → logprob: -3.9728193283081055
    7. ':' → logprob: -4.0978193283081055
    8. 'i' → logprob: -4.0978193283081055
    9. '
' → logprob: -4.5978193283081055
    10. '\' → logprob: -4.7228193283081055

Token 89: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3447585105895996
    2. 's' → logprob: -1.4697585105895996
    3. 'def' → logprob: -1.7197585105895996
    4. ',' → logprob: -1.8447585105895996
    5. 'n' → logprob: -2.8447585105895996
    6. '\' → logprob: -3.4697585105895996
    7. '#' → logprob: -4.0947585105896
    8. ' =' → logprob: -4.4697585105896
    9. ' ' → logprob: -4.7197585105896
    10. ' :' → logprob: -5.0947585105896

Token 90: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45317649841308594
    2. ' )' → logprob: -1.328176498413086
    3. 's' → logprob: -2.828176498413086
    4. ',' → logprob: -4.453176498413086
    5. ' ,' → logprob: -5.328176498413086
    6. '>' → logprob: -5.453176498413086
    7. ' >' → logprob: -5.828176498413086
    8. ' ' → logprob: -6.203176498413086
    9. ' positive' → logprob: -6.203176498413086
    10. ')>' → logprob: -6.453176498413086

Token 91: ' <=' (ID: 5017)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22038233280181885
    2. ')' → logprob: -2.0953822135925293
    3. ' )' → logprob: -4.595382213592529
    4. '=' → logprob: -4.845382213592529
    5. '<=' → logprob: -4.845382213592529
    6. '),' → logprob: -4.970382213592529
    7. ' ,' → logprob: -5.095382213592529
    8. ' <=' → logprob: -5.470382213592529
    9. ' =' → logprob: -5.845382213592529
    10. 's' → logprob: -5.845382213592529

Token 92: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5126530528068542
    2. 'n' → logprob: -1.012653112411499
    3. ' ' → logprob: -3.637653112411499
    4. ')' → logprob: -5.26265287399292
    5. ' )' → logprob: -6.13765287399292
    6. '1' → logprob: -6.13765287399292
    7. '<|end|>' → logprob: -7.26265287399292
    8. ')n' → logprob: -7.63765287399292
    9. 's' → logprob: -9.012653350830078
    10. ' ' → logprob: -9.262653350830078

Token 93: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7944953441619873
    2. '<=' → logprob: -1.0444953441619873
    3. ')' → logprob: -1.9194953441619873
    4. ',' → logprob: -4.794495582580566
    5. ' )' → logprob: -5.044495582580566
    6. '<' → logprob: -5.044495582580566
    7. ' ≤' → logprob: -5.044495582580566
    8. ' ' → logprob: -5.294495582580566
    9. '≤' → logprob: -5.544495582580566
    10. '=' → logprob: -5.794495582580566

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2447013556957245
    2. '10' → logprob: -1.7447013854980469
    3. '100' → logprob: -3.369701385498047
    4. '20' → logprob: -6.119701385498047
    5. '2' → logprob: -6.494701385498047
    6. '200' → logprob: -6.744701385498047
    7. ')' → logprob: -7.119701385498047
    8. ' )' → logprob: -7.744701385498047
    9. '500' → logprob: -7.869701385498047
    10. '50' → logprob: -7.994701385498047

Token 95: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22323179244995117
    2. '100' → logprob: -1.7232317924499512
    3. ' ' → logprob: -4.098231792449951
    4. '200' → logprob: -5.848231792449951
    5. '500' → logprob: -6.973231792449951
    6. '300' → logprob: -8.72323226928711
    7. '2' → logprob: -8.97323226928711
    8. '1' → logprob: -8.97323226928711
    9. '50' → logprob: -8.97323226928711
    10. '64' → logprob: -9.09823226928711

Token 96: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033125266432762146
    2. '0' → logprob: -3.658125162124634
    3. ' )' → logprob: -5.408125400543213
    4. ')
' → logprob: -6.908125400543213
    5. '),' → logprob: -7.908125400543213
    6. '#' → logprob: -8.783124923706055
    7. ')

' → logprob: -8.908124923706055
    8. '000' → logprob: -9.033124923706055
    9. '%' → logprob: -9.158124923706055
    10. ').' → logprob: -9.283124923706055

Token 97: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01149716041982174
    2. ' )' → logprob: -4.6364970207214355
    3. '):' → logprob: -7.0114970207214355
    4. ',' → logprob: -7.8864970207214355
    5. '#' → logprob: -9.261497497558594
    6. 's' → logprob: -9.636497497558594
    7. ')
' → logprob: -9.886497497558594
    8. '),' → logprob: -10.136497497558594
    9. ' ' → logprob: -10.386497497558594
    10. ')\' → logprob: -10.636497497558594

Token 98: ' termin' (ID: 18412)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.632045567035675
    2. ' jusqu' → logprob: -2.0070455074310303
    3. 'while' → logprob: -3.2570455074310303
    4. 'def' → logprob: -3.2570455074310303
    5. 's' → logprob: -3.5070455074310303
    6. ' ligne' → logprob: -3.6320455074310303
    7. ' while' → logprob: -4.007045745849609
    8. '```' → logprob: -4.007045745849609
    9. ' tant' → logprob: -4.132045745849609
    10. ' until' → logprob: -4.132045745849609

Token 99: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5706838369369507
    2. 'ée' → logprob: -1.4456838369369507
    3. 'e' → logprob: -2.5706839561462402
    4. 'és' → logprob: -3.0706839561462402
    5. 'ant' → logprob: -4.19568395614624
    6. 'ées' → logprob: -4.32068395614624
    7. 'ais' → logprob: -4.32068395614624
    8. 'es' → logprob: -4.57068395614624
    9. 'a' → logprob: -4.69568395614624
    10. 'aison' → logprob: -4.94568395614624

Token 100: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16045889258384705
    2. '0' → logprob: -1.9104589223861694
    3. ' EOF' → logprob: -9.1604585647583
    4. '-' → logprob: -10.6604585647583
    5. ' un' → logprob: -10.6604585647583
    6. 'EOF' → logprob: -10.7854585647583
    7. '   ' → logprob: -11.5354585647583
    8. '```' → logprob: -11.9104585647583
    9. ' zéro' → logprob: -12.2229585647583
    10. '  ' → logprob: -12.4729585647583

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016504127415828407
    2. ' ' → logprob: -8.750164985656738
    3. '-' → logprob: -12.125164985656738
    4. '   ' → logprob: -15.875164985656738
    5. 'EOF' → logprob: -16.000165939331055
    6. '```' → logprob: -16.125165939331055
    7. 'n' → logprob: -16.250165939331055
    8. ''' → logprob: -16.250165939331055
    9. '"' → logprob: -16.625165939331055
    10. ' -' → logprob: -16.625165939331055

Token 103: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.909545361995697
    2. 'def' → logprob: -1.0345454216003418
    3. '
' → logprob: -1.5345454216003418
    4. '```' → logprob: -4.534545421600342
    5. 'while' → logprob: -4.659545421600342
    6. 'import' → logprob: -6.284545421600342
    7. 'd' → logprob: -6.534545421600342
    8. '

' → logprob: -7.034545421600342
    9. 'i' → logprob: -7.909545421600342
    10. '\' → logprob: -7.909545421600342

Token 104: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12087571620941162
    2. 'def' → logprob: -3.120875835418701
    3. '```' → logprob: -3.245875835418701
    4. '
' → logprob: -3.745875835418701
    5. '\n' → logprob: -6.245875835418701
    6. 'd' → logprob: -6.370875835418701
    7. '\' → logprob: -6.745875835418701
    8. 'for' → logprob: -7.120875835418701
    9. 'i' → logprob: -7.495875835418701
    10. 'while' → logprob: -7.870875835418701

Token 105: ' Sort' (ID: 25945)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8066489100456238
    2. 'n' → logprob: -1.0566489696502686
    3. 'def' → logprob: -1.6816489696502686
    4. '```' → logprob: -4.4316487312316895
    5. 'd' → logprob: -5.5566487312316895
    6. ' while' → logprob: -5.9316487312316895
    7. 'import' → logprob: -7.3066487312316895
    8. 'i' → logprob: -8.431649208068848
    9. '
' → logprob: -8.556649208068848
    10. 'for' → logprob: -8.806649208068848

Token 106: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -3.166338137816638e-05
    2. 'i' → logprob: -10.625031471252441
    3. ' ie' → logprob: -12.375031471252441
    4. 'ies' → logprob: -13.750031471252441
    5. '#' → logprob: -14.375031471252441
    6. '```' → logprob: -14.625031471252441
    7. '-ie' → logprob: -15.500031471252441
    8. '
' → logprob: -15.750031471252441
    9. '

' → logprob: -15.875031471252441
    10. '   ' → logprob: -16.625032424926758

Token 107: ':' (ID: 25)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.07901393622159958
    2. ':' → logprob: -2.5790138244628906
    3. ' =' → logprob: -10.07901382446289
    4. ' #' → logprob: -10.70401382446289
    5. ' :
' → logprob: -11.45401382446289
    6. ' ' → logprob: -11.82901382446289
    7. 's' → logprob: -11.82901382446289
    8. ' ' → logprob: -12.45401382446289
    9. '#' → logprob: -12.45401382446289
    10. ' :

' → logprob: -12.57901382446289

Token 108: ' nombre' (ID: 9733)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2215242385864258
    2. ' le' → logprob: -1.5965242385864258
    3. ' nombre' → logprob: -2.096524238586426
    4. ' Le' → logprob: -2.596524238586426
    5. ' #' → logprob: -3.221524238586426
    6. ' Nombre' → logprob: -3.346524238586426
    7. 'for' → logprob: -3.471524238586426
    8. ' la' → logprob: -3.596524238586426
    9. ' les' → logprob: -3.721524238586426
    10. ' minimal' → logprob: -3.971524238586426

Token 109: ' minimal' (ID: 19957)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5812454223632812
    2. 'import' → logprob: -1.3312454223632812
    3. 's' → logprob: -2.7062454223632812
    4. 'dp' → logprob: -2.9562454223632812
    5. 'd' → logprob: -3.5812454223632812
    6. 'max' → logprob: -5.081245422363281
    7. 'from' → logprob: -5.331245422363281
    8. 'n' → logprob: -5.456245422363281
    9. '
' → logprob: -5.956245422363281
    10. '```' → logprob: -6.206245422363281

Token 110: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6303197145462036
    2. 's' → logprob: -1.0053197145462036
    3. 'import' → logprob: -3.255319595336914
    4. '_' → logprob: -4.380319595336914
    5. ' ' → logprob: -5.005319595336914
    6. '_de' → logprob: -5.005319595336914
    7. '_s' → logprob: -5.130319595336914
    8. '_d' → logprob: -5.380319595336914
    9. ' def' → logprob: -5.380319595336914
    10. ' de' → logprob: -5.755319595336914

Token 111: ''op' (ID: 70747)
  Prédit: ''op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''op' → logprob: -0.03980575129389763
    2. ' opérations' → logprob: -3.4148056507110596
    3. ''' → logprob: -5.414805889129639
    4. ''o' → logprob: -7.789805889129639
    5. '’op' → logprob: -8.16480541229248
    6. 'e' → logprob: -8.78980541229248
    7. ' ' → logprob: -8.91480541229248
    8. ' op' → logprob: -9.03980541229248
    9. 'op' → logprob: -9.16480541229248
    10. ''é' → logprob: -9.41480541229248

Token 112: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.0129929194226861
    2. 'é' → logprob: -4.762992858886719
    3. 'ér' → logprob: -5.512992858886719
    4. '#' → logprob: -8.512992858886719
    5. 'ération' → logprob: -9.762992858886719
    6. 'és' → logprob: -11.637992858886719
    7. 'er' → logprob: -11.637992858886719
    8. 'éra' → logprob: -11.762992858886719
    9. '\' → logprob: -11.887992858886719
    10. '{' → logprob: -12.512992858886719

Token 113: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17033112049102783
    2. 'n' → logprob: -2.6703310012817383
    3. 'import' → logprob: -2.6703310012817383
    4. 'd' → logprob: -4.420331001281738
    5. '```' → logprob: -6.045331001281738
    6. 'from' → logprob: -6.295331001281738
    7. '
' → logprob: -7.045331001281738
    8. ' 
' → logprob: -8.295331001281738
    9. '#' → logprob: -8.295331001281738
    10. '\' → logprob: -9.295331001281738

Token 114: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.6533946990966797
    2. ' n' → logprob: -1.7783946990966797
    3. ' calcul' → logprob: -1.7783946990966797
    4. ' ' → logprob: -3.2783946990966797
    5. 'n' → logprob: -3.5283946990966797
    6. 'calcul' → logprob: -3.6533946990966797
    7. ' each' → logprob: -4.52839469909668
    8. ' x' → logprob: -5.27839469909668
    9. 'x' → logprob: -5.40339469909668
    10. ' obtenir' → logprob: -5.65339469909668

Token 115: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5891799330711365
    2. 'n' → logprob: -0.8391799330711365
    3. 'ex' → logprob: -5.339179992675781
    4. ' puissance' → logprob: -6.089179992675781
    5. 'nombre' → logprob: -6.589179992675781
    6. ' ' → logprob: -6.714179992675781
    7. ' nombre' → logprob: -7.089179992675781
    8. ' entier' → logprob: -7.464179992675781
    9. 'ent' → logprob: -7.839179992675781
    10. ' expos' → logprob: -8.339179992675781

Token 116: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13712413609027863
    2. 'n' → logprob: -2.3871240615844727
    3. 'd' → logprob: -4.012124061584473
    4. 'import' → logprob: -4.637124061584473
    5. '
' → logprob: -5.637124061584473
    6. '#' → logprob: -6.137124061584473
    7. '```' → logprob: -6.637124061584473
    8. '\' → logprob: -7.887124061584473
    9. 'from' → logprob: -8.137124061584473
    10. ' 
' → logprob: -8.262124061584473

Token 117: 'import' (ID: 561)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9180432558059692
    2. 'd' → logprob: -1.2930432558059692
    3. 'def' → logprob: -1.2930432558059692
    4. 'import' → logprob: -3.2930431365966797
    5. 'n' → logprob: -4.66804313659668
    6. 'f' → logprob: -6.54304313659668
    7. 'from' → logprob: -6.66804313659668
    8. 'max' → logprob: -7.04304313659668
    9. 'm' → logprob: -7.66804313659668
    10. 'memo' → logprob: -7.79304313659668

Token 118: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1280098557472229
    2. 'sys' → logprob: -2.128009796142578
    3. ' math' → logprob: -7.378009796142578
    4. 'collections' → logprob: -8.378009796142578
    5. 'math' → logprob: -8.878009796142578
    6. ' collections' → logprob: -9.378009796142578
    7. ' functools' → logprob: -13.503009796142578
    8. '=sys' → logprob: -14.128009796142578
    9. '	sys' → logprob: -15.878009796142578
    10. ' queue' → logprob: -16.253009796142578

Token 119: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39825761318206787
    2. 'def' → logprob: -1.8982576131820679
    3. '

' → logprob: -2.0232577323913574
    4. 'dp' → logprob: -3.2732577323913574
    5. 'import' → logprob: -6.023257732391357
    6. '#' → logprob: -6.523257732391357
    7. 'from' → logprob: -6.773257732391357
    8. '
' → logprob: -7.023257732391357
    9. 'dist' → logprob: -7.273257732391357
    10. 'd' → logprob: -7.648257732391357

Token 120: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09565093368291855
    2. '
' → logprob: -3.0956509113311768
    3. '

' → logprob: -4.220651149749756
    4. 'dp' → logprob: -4.345651149749756
    5. 'import' → logprob: -4.845651149749756
    6. 'from' → logprob: -5.845651149749756
    7. 'INF' → logprob: -6.220651149749756
    8. '#' → logprob: -6.720651149749756
    9. 'n' → logprob: -6.845651149749756
    10. 'memo' → logprob: -6.970651149749756

Token 121: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.058826908469200134
    2. ' math' → logprob: -3.5588269233703613
    3. 'collections' → logprob: -3.5588269233703613
    4. 'math' → logprob: -8.808826446533203
    5. ' functools' → logprob: -10.933826446533203
    6. ' queue' → logprob: -11.183826446533203
    7. ' sys' → logprob: -13.183826446533203
    8. 'queue' → logprob: -13.683826446533203
    9. '_math' → logprob: -14.808826446533203
    10. ' itertools' → logprob: -15.183826446533203

Token 122: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.04706275463104248
    2. ' import' → logprob: -3.297062873840332
    3. 'port' → logprob: -5.172062873840332
    4. 'rt' → logprob: -6.172062873840332
    5. 'ort' → logprob: -7.797062873840332
    6. 'abc' → logprob: -8.297062873840332
    7. 'from' → logprob: -8.672062873840332
    8. 't' → logprob: -9.672062873840332
    9. 'ptions' → logprob: -9.797062873840332
    10. 'ations' → logprob: -9.797062873840332

Token 123: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.22588948905467987
    2. 'deque' → logprob: -1.7258894443511963
    3. ' defaultdict' → logprob: -3.7258894443511963
    4. 'default' → logprob: -9.350889205932617
    5. 'de' → logprob: -14.600889205932617
    6. 'collections' → logprob: -17.350889205932617
    7. '```' → logprob: -17.600889205932617
    8. 'queue' → logprob: -17.850889205932617
    9. ' default' → logprob: -17.850889205932617
    10. 'named' → logprob: -18.475889205932617

Token 124: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2794651687145233
    2. '

' → logprob: -1.9044651985168457
    3. 'dp' → logprob: -3.4044651985168457
    4. 'def' → logprob: -3.5294651985168457
    5. 'max' → logprob: -4.029465198516846
    6. 'MAX' → logprob: -4.779465198516846
    7. 'dist' → logprob: -6.029465198516846
    8. '#' → logprob: -7.154465198516846
    9. '
' → logprob: -7.279465198516846
    10. 'n' → logprob: -7.529465198516846

Token 125: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06265764683485031
    2. 'MAX' → logprob: -3.187657594680786
    3. 'max' → logprob: -4.687657833099365
    4. 'dp' → logprob: -4.812657833099365
    5. 'INF' → logprob: -6.812657833099365
    6. 'memo' → logprob: -7.687657833099365
    7. '#' → logprob: -7.812657833099365
    8. 'cache' → logprob: -9.937657356262207
    9. 'DP' → logprob: -10.812657356262207
    10. 'n' → logprob: -10.937657356262207

Token 126: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.08330094069242477
    2. ' min' → logprob: -2.708300828933716
    3. 'minimal' → logprob: -5.458301067352295
    4. 'min' → logprob: -6.208301067352295
    5. ' minimale' → logprob: -6.833301067352295
    6. ' minimum' → logprob: -6.958301067352295
    7. ' calcul' → logprob: -7.208301067352295
    8. ' nombre' → logprob: -7.208301067352295
    9. '_min' → logprob: -7.458301067352295
    10. ' calc' → logprob: -7.708301067352295

Token 127: '_operations' (ID: 148404)
  Prédit: '_operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -0.031223857775330544
    2. '_steps' → logprob: -4.531223773956299
    3. '_ops' → logprob: -4.531223773956299
    4. '_ex' → logprob: -4.781223773956299
    5. '_op' → logprob: -8.281224250793457
    6. '_exp' → logprob: -8.406224250793457
    7. '_cost' → logprob: -9.281224250793457
    8. '_operation' → logprob: -9.656224250793457
    9. '_m' → logprob: -10.281224250793457
    10. '_' → logprob: -10.406224250793457

Token 128: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009163997136056423
    2. '(' → logprob: -4.759163856506348
    3. ' (' → logprob: -7.509163856506348
    4. '(num' → logprob: -14.884163856506348
    5. '(N' → logprob: -15.384163856506348
    6. '():' → logprob: -16.134164810180664
    7. '(
' → logprob: -16.384164810180664
    8. '(s' → logprob: -16.634164810180664
    9. '(max' → logprob: -16.634164810180664
    10. '(nn' → logprob: -16.884164810180664

Token 129: '_max' (ID: 13731)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00325222359970212
    2. ')' → logprob: -6.003252029418945
    3. '):
' → logprob: -7.628252029418945
    4. ':' → logprob: -8.628252029418945
    5. ' ):' → logprob: -9.128252029418945
    6. '):
' → logprob: -13.878252029418945
    7. ' )' → logprob: -14.628252029418945
    8. ' :' → logprob: -15.003252029418945
    9. '}:' → logprob: -16.253252029418945
    10. '):

' → logprob: -16.378252029418945

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005338470451533794
    2. ')' → logprob: -5.880338668823242
    3. '):
' → logprob: -6.380338668823242
    4. ':' → logprob: -7.755338668823242
    5. ' ):' → logprob: -7.880338668823242
    6. ' :' → logprob: -11.380338668823242
    7. '=' → logprob: -11.505338668823242
    8. ':int' → logprob: -13.005338668823242
    9. '):
' → logprob: -13.380338668823242
    10. ' )' → logprob: -14.005338668823242

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002662458224222064
    2. ' dp' → logprob: -6.002662658691406
    3. 'dp' → logprob: -9.627662658691406
    4. ' ops' → logprob: -10.627662658691406
    5. ' minimal' → logprob: -10.752662658691406
    6. '    
' → logprob: -11.127662658691406
    7. ' operations' → logprob: -11.627662658691406
    8. ' ' → logprob: -11.752662658691406
    9. '	dp' → logprob: -11.752662658691406
    10. ' op' → logprob: -11.877662658691406

Token 132: ' """
' (ID: 7037)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5840821862220764
    2. 'ops' → logprob: -1.7090821266174316
    3. 'min' → logprob: -2.5840821266174316
    4. 'dist' → logprob: -2.9590821266174316
    5. ' dp' → logprob: -3.3340821266174316
    6. '   ' → logprob: -3.7090821266174316
    7. ' min' → logprob: -4.209082126617432
    8. 'cost' → logprob: -4.459082126617432
    9. ' ops' → logprob: -4.834082126617432
    10. ' dist' → logprob: -4.959082126617432

Token 133: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1012078523635864
    2. '   ' → logprob: -1.2262078523635864
    3. 'ops' → logprob: -1.9762078523635864
    4. ' dp' → logprob: -2.601207733154297
    5. ' ops' → logprob: -2.851207733154297
    6. '#' → logprob: -3.976207733154297
    7. 'operations' → logprob: -4.476207733154297
    8. ' min' → logprob: -4.726207733154297
    9. ' operations' → logprob: -4.976207733154297
    10. 'd' → logprob: -5.101207733154297

Token 134: ' Cal' (ID: 4453)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20409135520458221
    2. ' dp' → logprob: -1.9540913105010986
    3. '#' → logprob: -4.829091548919678
    4. ' dist' → logprob: -5.079091548919678
    5. ' distances' → logprob: -5.454091548919678
    6. '   ' → logprob: -5.704091548919678
    7. ' min' → logprob: -5.829091548919678
    8. ' minimal' → logprob: -5.829091548919678
    9. 'dist' → logprob: -5.954091548919678
    10. 'min' → logprob: -6.079091548919678

Token 135: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.06421346962451935
    2. 'cule' → logprob: -2.814213514328003
    3. 'c' → logprob: -6.314213275909424
    4. 'culate' → logprob: -8.189213752746582
    5. 'cules' → logprob: -9.564213752746582
    6. 'culator' → logprob: -10.564213752746582
    7. 'culated' → logprob: -11.314213752746582
    8. 'culation' → logprob: -11.314213752746582
    9. 'cu' → logprob: -11.939213752746582
    10. 'ul' → logprob: -12.064213752746582

Token 136: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.6089448928833008
    2. '   ' → logprob: -1.8589448928833008
    3. '[]' → logprob: -1.8589448928833008
    4. 's' → logprob: -2.358944892883301
    5. '(n' → logprob: -2.858944892883301
    6. ' minimal' → logprob: -3.108944892883301
    7. ' la' → logprob: -3.108944892883301
    8. ' un' → logprob: -3.233944892883301
    9. ' les' → logprob: -3.483944892883301
    10. 'le' → logprob: -3.483944892883301

Token 137: ' nombre' (ID: 9733)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.7265284061431885
    2. 'dp' → logprob: -1.1015284061431885
    3. 'min' → logprob: -1.9765284061431885
    4. ' dp' → logprob: -4.351528167724609
    5. 'dist' → logprob: -5.601528167724609
    6. ' minimal' → logprob: -5.601528167724609
    7. ' ops' → logprob: -5.601528167724609
    8. ' min' → logprob: -5.601528167724609
    9. 'res' → logprob: -5.726528167724609
    10. 'minimal' → logprob: -5.726528167724609

Token 138: ' minimal' (ID: 19957)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.4952182173728943
    2. '_operations' → logprob: -1.745218276977539
    3. '_ops' → logprob: -1.995218276977539
    4. '_' → logprob: -3.120218276977539
    5. '_des' → logprob: -4.995218276977539
    6. 's' → logprob: -4.995218276977539
    7. '   ' → logprob: -5.245218276977539
    8. 'minimal' → logprob: -5.245218276977539
    9. '_op' → logprob: -5.370218276977539
    10. ' minimal' → logprob: -5.620218276977539

Token 139: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6551979184150696
    2. '_d' → logprob: -1.5301978588104248
    3. '_operations' → logprob: -1.6551978588104248
    4. '_des' → logprob: -3.280197858810425
    5. '_' → logprob: -4.155198097229004
    6. 'd' → logprob: -4.905198097229004
    7. '_ops' → logprob: -5.405198097229004
    8. '_de' → logprob: -6.030198097229004
    9. 's' → logprob: -6.280198097229004
    10. ' des' → logprob: -6.780198097229004

Token 140: ''op' (ID: 70747)
  Prédit: ' opérations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opérations' → logprob: -0.9140328168869019
    2. '_operations' → logprob: -0.9140328168869019
    3. '_' → logprob: -2.2890329360961914
    4. ' d' → logprob: -3.5390329360961914
    5. ' operations' → logprob: -3.5390329360961914
    6. 'operations' → logprob: -4.539032936096191
    7. '_op' → logprob: -4.664032936096191
    8. ''op' → logprob: -4.789032936096191
    9. '_ops' → logprob: -6.039032936096191
    10. 'op' → logprob: -6.289032936096191

Token 141: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -1.5451681974809617e-05
    2. 'ér' → logprob: -12.000015258789062
    3. 'er' → logprob: -12.125015258789062
    4. '#' → logprob: -13.625015258789062
    5. 's' → logprob: -13.875015258789062
    6. 'é' → logprob: -14.500015258789062
    7. '```' → logprob: -15.500015258789062
    8. '_operations' → logprob: -15.750015258789062
    9. 'ération' → logprob: -15.875015258789062
    10. '   ' → logprob: -16.250015258789062

Token 142: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7103742957115173
    2. '   ' → logprob: -1.460374355316162
    3. ' =' → logprob: -1.585374355316162
    4. '_ops' → logprob: -4.085374355316162
    5. '(n' → logprob: -4.710374355316162
    6. ' pour' → logprob: -5.085374355316162
    7. '_par' → logprob: -5.210374355316162
    8. '_' → logprob: -5.335374355316162
    9. '(' → logprob: -5.460374355316162
    10. '  ' → logprob: -6.210374355316162

Token 143: ' tous' (ID: 10688)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3253196477890015
    2. '   ' → logprob: -1.8253196477890015
    3. ' ops' → logprob: -2.075319766998291
    4. ' les' → logprob: -2.450319766998291
    5. ' chaque' → logprob: -2.575319766998291
    6. ' ' → logprob: -3.450319766998291
    7. ' x' → logprob: -3.450319766998291
    8. ' op' → logprob: -3.700319766998291
    9. ' range' → logprob: -3.950319766998291
    10. ' le' → logprob: -4.075319766998291

Token 144: ' n' (ID: 297)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.07857775688171387
    2. 'les' → logprob: -2.953577756881714
    3. ' n' → logprob: -4.328577995300293
    4. 'n' → logprob: -5.328577995300293
    5. ' ' → logprob: -6.203577995300293
    6. '(n' → logprob: -6.328577995300293
    7. '   ' → logprob: -7.453577995300293
    8. ' i' → logprob: -8.328577995300293
    9. '_n' → logprob: -8.453577995300293
    10. 's' → logprob: -9.328577995300293

Token 145: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47713470458984375
    2. '_' → logprob: -1.8521347045898438
    3. 's' → logprob: -2.6021347045898438
    4. '=' → logprob: -3.3521347045898438
    5. ' up' → logprob: -3.9771347045898438
    6. '   ' → logprob: -4.102134704589844
    7. ' jusqu' → logprob: -4.102134704589844
    8. '_de' → logprob: -4.227134704589844
    9. 'jus' → logprob: -5.227134704589844
    10. '_pos' → logprob: -5.352134704589844

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013903543585911393
    2. 'range' → logprob: -6.87639045715332
    3. ' range' → logprob: -8.62639045715332
    4. ' ' → logprob: -8.75139045715332
    5. '2' → logprob: -11.25139045715332
    6. '   ' → logprob: -12.12639045715332
    7. '0' → logprob: -14.00139045715332
    8. 'n' → logprob: -15.00139045715332
    9. '```' → logprob: -16.25139045715332
    10. '
' → logprob: -16.50139045715332

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048657312989234924
    2. 'range' → logprob: -3.0486574172973633
    3. ' range' → logprob: -10.173657417297363
    4. 'n' → logprob: -10.548657417297363
    5. '2' → logprob: -12.798657417297363
    6. '
' → logprob: -13.798657417297363
    7. ' ' → logprob: -14.298657417297363
    8. '   ' → logprob: -14.673657417297363
    9. '0' → logprob: -15.798657417297363
    10. '

' → logprob: -16.298656463623047

Token 148: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.47737064957618713
    2. 'à' → logprob: -0.9773706197738647
    3. '   ' → logprob: -6.227370738983154
    4. ' ' → logprob: -8.227370262145996
    5. 'au' → logprob: -8.352370262145996
    6. ' jusqu' → logprob: -8.352370262145996
    7. ' a' → logprob: -8.852370262145996
    8. 'jus' → logprob: -9.352370262145996
    9. ' au' → logprob: -9.477370262145996
    10. ',' → logprob: -9.727370262145996

Token 149: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4740934669971466
    2. 'n' → logprob: -0.9740934371948242
    3. '   ' → logprob: -11.349093437194824
    4. ' ' → logprob: -12.724093437194824
    5. '	n' → logprob: -14.349093437194824
    6. '```' → logprob: -14.474093437194824
    7. '_n' → logprob: -15.974093437194824
    8. '    ' → logprob: -16.59909439086914
    9. ',n' → logprob: -16.72409439086914
    10. '(n' → logprob: -16.84909439086914

Token 150: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00020866614067927003
    2. 'max' → logprob: -8.500208854675293
    3. '_' → logprob: -13.250208854675293
    4. '_MAX' → logprob: -13.875208854675293
    5. '   ' → logprob: -14.000208854675293
    6. '+' → logprob: -14.125208854675293
    7. '_min' → logprob: -15.750208854675293
    8. '=' → logprob: -15.875208854675293
    9. ')' → logprob: -16.250207901000977
    10. '_plus' → logprob: -16.375207901000977

Token 151: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37075695395469666
    2. ':' → logprob: -1.620756983757019
    3. ' :' → logprob: -2.8707568645477295
    4. '.' → logprob: -3.4957568645477295
    5. '):' → logprob: -4.870757102966309
    6. ',' → logprob: -4.995757102966309
    7. '):
' → logprob: -5.870757102966309
    8. ':
' → logprob: -5.995757102966309
    9. ')' → logprob: -6.120757102966309
    10. ' :
' → logprob: -7.370757102966309

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.841743303695694e-05
    2. '    
' → logprob: -10.12509822845459
    3. 'dp' → logprob: -10.50009822845459
    4. '"""' → logprob: -11.12509822845459
    5. '
' → logprob: -12.50009822845459
    6. 'results' → logprob: -13.25009822845459
    7. '```' → logprob: -13.37509822845459
    8. ' dp' → logprob: -13.50009822845459
    9. ' operations' → logprob: -13.87509822845459
    10. '  ' → logprob: -13.87509822845459

Token 153: ' Util' (ID: 13564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010859043337404728
    2. '"""' → logprob: -4.76085901260376
    3. '
' → logprob: -7.13585901260376
    4. '    
' → logprob: -7.51085901260376
    5. '"""
' → logprob: -8.010859489440918
    6. '```' → logprob: -9.010859489440918
    7. '"' → logprob: -9.510859489440918
    8. ':' → logprob: -9.510859489440918
    9. '  
' → logprob: -9.760859489440918
    10. '\n' → logprob: -10.135859489440918

Token 154: 'isation' (ID: 6993)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5469815135002136
    2. 'ser' → logprob: -0.9219815135002136
    3. 's' → logprob: -4.046981334686279
    4. 'sé' → logprob: -6.671981334686279
    5. 'ses' → logprob: -7.046981334686279
    6. 'isant' → logprob: -7.171981334686279
    7. '#' → logprob: -7.671981334686279
    8. 'sement' → logprob: -7.921981334686279
    9. 'sage' → logprob: -8.046981811523438
    10. '```' → logprob: -8.171981811523438

Token 155: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.28661859035491943
    2. ' =' → logprob: -2.036618709564209
    3. '=' → logprob: -2.411618709564209
    4. ' de' → logprob: -3.911618709564209
    5. '   ' → logprob: -5.911618709564209
    6. ' des' → logprob: -6.286618709564209
    7. ' ' → logprob: -6.411618709564209
    8. 'd' → logprob: -6.786618709564209
    9. '_de' → logprob: -7.911618709564209
    10. ':' → logprob: -8.78661823272705

Token 156: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1040551662445068
    2. ''une' → logprob: -1.1040551662445068
    3. ' une' → logprob: -1.6040551662445068
    4. 'une' → logprob: -2.479055166244507
    5. ''un' → logprob: -3.604055166244507
    6. ' un' → logprob: -4.854055404663086
    7. 'a' → logprob: -5.104055404663086
    8. 'un' → logprob: -5.854055404663086
    9. ' e' → logprob: -6.229055404663086
    10. ' a' → logprob: -6.729055404663086

Token 157: ' recherche' (ID: 24975)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.709237813949585
    2. 'liste' → logprob: -1.709237813949585
    3. 'queue' → logprob: -1.959237813949585
    4. ' file' → logprob: -2.959237813949585
    5. 'deque' → logprob: -3.084237813949585
    6. 'large' → logprob: -3.834237813949585
    7. ' liste' → logprob: -3.959237813949585
    8. ' queue' → logprob: -4.334238052368164
    9. 'appro' → logprob: -5.084238052368164
    10. ' large' → logprob: -5.334238052368164

Token 158: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6303401589393616
    2. 'en' → logprob: -1.0053400993347168
    3. '   ' → logprob: -3.005340099334717
    4. ' breadth' → logprob: -4.130340099334717
    5. 'b' → logprob: -4.505340099334717
    6. '_b' → logprob: -5.130340099334717
    7. 'bread' → logprob: -5.255340099334717
    8. 'de' → logprob: -5.880340099334717
    9. '_en' → logprob: -6.380340099334717
    10. 'par' → logprob: -6.380340099334717

Token 159: ' largeur' (ID: 180807)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.0014597621047869325
    2. ' largeur' → logprob: -6.62645959854126
    3. ' large' → logprob: -9.751460075378418
    4. 'b' → logprob: -10.626460075378418
    5. '_large' → logprob: -10.751460075378418
    6. 'bread' → logprob: -10.876460075378418
    7. 'Large' → logprob: -12.626460075378418
    8. 'larg' → logprob: -13.126460075378418
    9. 'width' → logprob: -14.126460075378418
    10. '

' → logprob: -14.126460075378418

Token 160: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00687450310215354
    2. '(' → logprob: -6.2568745613098145
    3. '(B' → logprob: -6.3818745613098145
    4. ')' → logprob: -7.1318745613098145
    5. ' d' → logprob: -7.6318745613098145
    6. 'd' → logprob: -8.006874084472656
    7. ' breadth' → logprob: -8.006874084472656
    8. 'bread' → logprob: -8.506874084472656
    9. '(b' → logprob: -8.631874084472656
    10. '(level' → logprob: -9.131874084472656

Token 161: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7783940434455872
    2. 'b' → logprob: -1.5283939838409424
    3. 'queue' → logprob: -2.4033939838409424
    4. ')' → logprob: -2.5283939838409424
    5. ' BFS' → logprob: -2.6533939838409424
    6. ' bfs' → logprob: -3.5283939838409424
    7. ' queue' → logprob: -3.9033939838409424
    8. 'deque' → logprob: -4.1533942222595215
    9. 'bread' → logprob: -4.7783942222595215
    10. ' breadth' → logprob: -5.5283942222595215

Token 162: 'FS' (ID: 14179)
  Prédit: 'FS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FS' → logprob: -4.370294846012257e-05
    2. 'F' → logprob: -10.375043869018555
    3. 'read' → logprob: -11.625043869018555
    4. 'fs' → logprob: -13.000043869018555
    5. 'R' → logprob: -15.125043869018555
    6. 're' → logprob: -15.250043869018555
    7. 'RE' → logprob: -15.750043869018555
    8. 'r' → logprob: -15.875043869018555
    9. 'FT' → logprob: -16.125043869018555
    10. 'FE' → logprob: -16.375043869018555

Token 163: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008707699365913868
    2. ').' → logprob: -5.258707523345947
    3. ' )' → logprob: -6.258707523345947
    4. '):' → logprob: -6.633707523345947
    5. ')
' → logprob: -9.633708000183105
    6. '   ' → logprob: -9.758708000183105
    7. '):
' → logprob: -10.008708000183105
    8. ' pour' → logprob: -11.008708000183105
    9. ')...' → logprob: -11.508708000183105
    10. '),' → logprob: -12.008708000183105

Token 164: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09173180162906647
    2. ':' → logprob: -3.5917317867279053
    3. '.' → logprob: -4.091732025146484
    4. ' :' → logprob: -4.091732025146484
    5. '):' → logprob: -4.591732025146484
    6. ')' → logprob: -5.091732025146484
    7. ',' → logprob: -5.216732025146484
    8. ' pour' → logprob: -6.216732025146484
    9. '):
' → logprob: -7.341732025146484
    10. 'def' → logprob: -8.091732025146484

Token 165: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.16682739555835724
    2. ' la' → logprob: -2.041827440261841
    3. ' range' → logprob: -4.916827201843262
    4. ' l' → logprob: -5.041827201843262
    5. 'les' → logprob: -5.416827201843262
    6. ' le' → logprob: -6.541827201843262
    7. ' des' → logprob: -6.791827201843262
    8. ' une' → logprob: -6.916827201843262
    9. ' ' → logprob: -7.416827201843262
    10. ' deque' → logprob: -7.916827201843262

Token 166: ' puiss' (ID: 102546)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.27872616052627563
    2. ' ex' → logprob: -2.153726100921631
    3. ' expos' → logprob: -2.528726100921631
    4. ' exponent' → logprob: -4.153726100921631
    5. ' puiss' → logprob: -5.028726100921631
    6. 'range' → logprob: -5.278726100921631
    7. ' range' → logprob: -5.653726100921631
    8. 'n' → logprob: -5.653726100921631
    9. 'pu' → logprob: -6.278726100921631
    10. ' expo' → logprob: -6.278726100921631

Token 167: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.4431147277355194
    2. 'ences' → logprob: -1.0681147575378418
    3. '   ' → logprob: -4.318114757537842
    4. 'en' → logprob: -8.443114280700684
    5. 'entes' → logprob: -9.693114280700684
    6. '```' → logprob: -9.818114280700684
    7. 'es' → logprob: -9.818114280700684
    8. 'ence' → logprob: -10.068114280700684
    9. 's' → logprob: -10.068114280700684
    10. '       ' → logprob: -10.318114280700684

Token 168: ' atte' (ID: 43312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18939504027366638
    2. ' de' → logprob: -2.439394950866699
    3. 'de' → logprob: -3.689394950866699
    4. ' ' → logprob: -4.189394950866699
    5. ' x' → logprob: -4.814394950866699
    6. ' possibles' → logprob: -5.189394950866699
    7. ')' → logprob: -5.314394950866699
    8. '  ' → logprob: -5.439394950866699
    9. 'def' → logprob: -5.439394950866699
    10. '):
' → logprob: -5.814394950866699

Token 169: 'ign' (ID: 733)
  Prédit: 'ign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.403114378452301
    2. 'intes' → logprob: -1.1531143188476562
    3. 'ints' → logprob: -5.153114318847656
    4. 'n' → logprob: -5.278114318847656
    5. 'int' → logprob: -6.778114318847656
    6. 'ind' → logprob: -7.028114318847656
    7. 'inte' → logprob: -7.153114318847656
    8. 'ss' → logprob: -7.903114318847656
    9. 'gn' → logprob: -8.403114318847656
    10. 'in' → logprob: -8.403114318847656

Token 170: 'ables' (ID: 3232)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10033315420150757
    2. 'ues' → logprob: -2.9753332138061523
    3. 'ables' → logprob: -3.7253332138061523
    4. 's' → logprob: -4.475333213806152
    5. 'bles' → logprob: -5.475333213806152
    6. 'tes' → logprob: -5.975333213806152
    7. 'u' → logprob: -7.100333213806152
    8. 'e' → logprob: -7.475333213806152
    9. 'ies' → logprob: -8.225333213806152
    10. 'able' → logprob: -9.100333213806152

Token 171: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49192696809768677
    2. ')' → logprob: -1.616926908493042
    3. '):' → logprob: -2.366926908493042
    4. '.' → logprob: -2.741926908493042
    5. ' )' → logprob: -4.616927146911621
    6. '):
' → logprob: -5.241927146911621
    7. ').' → logprob: -5.991927146911621
    8. ',' → logprob: -6.241927146911621
    9. ' ):' → logprob: -6.241927146911621
    10. 'def' → logprob: -6.366927146911621

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004274038597941399
    2. ')' → logprob: -5.629273891448975
    3. '"""' → logprob: -8.129274368286133
    4. '):' → logprob: -8.629274368286133
    5. 'def' → logprob: -10.004274368286133
    6. '"' → logprob: -10.129274368286133
    7. '    ' → logprob: -10.629274368286133
    8. ' )' → logprob: -11.004274368286133
    9. ' """' → logprob: -11.129274368286133
    10. ':' → logprob: -11.379274368286133

Token 173: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018380836118012667
    2. '"""' → logprob: -6.501838207244873
    3. '"""
' → logprob: -9.001837730407715
    4. ')' → logprob: -9.001837730407715
    5. '"' → logprob: -10.626837730407715
    6. '
' → logprob: -11.376837730407715
    7. '    
' → logprob: -11.501837730407715
    8. '```' → logprob: -11.876837730407715
    9. ' """' → logprob: -12.001837730407715
    10. '  ' → logprob: -12.126837730407715

Token 174: ' état' (ID: 59181)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.5146106481552124
    2. ' def' → logprob: -1.8896106481552124
    3. ' niveau' → logprob: -1.8896106481552124
    4. 'def' → logprob: -2.014610767364502
    5. 'niveau' → logprob: -3.139610767364502
    6. ' ' → logprob: -3.139610767364502
    7. ' n' → logprob: -3.389610767364502
    8. ')' → logprob: -3.514610767364502
    9. ' ' → logprob: -3.639610767364502
    10. ' étape' → logprob: -3.889610767364502

Token 175: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10013958811759949
    2. ',' → logprob: -3.600139617919922
    3. ':' → logprob: -3.850139617919922
    4. '=' → logprob: -4.100139617919922
    5. ')' → logprob: -4.350139617919922
    6. '):' → logprob: -4.600139617919922
    7. 's' → logprob: -6.725139617919922
    8. ' ,' → logprob: -6.850139617919922
    9. '<|end|>' → logprob: -6.975139617919922
    10. ' :' → logprob: -7.100139617919922

Token 176: ' un' (ID: 537)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.17325682938098907
    2. ' un' → logprob: -2.5482568740844727
    3. ' représent' → logprob: -3.7982568740844727
    4. '(un' → logprob: -4.048256874084473
    5. '(' → logprob: -4.173256874084473
    6. ' une' → logprob: -4.548256874084473
    7. ' represented' → logprob: -6.048256874084473
    8. ' constitué' → logprob: -6.173256874084473
    9. '(re' → logprob: -6.548256874084473
    10. 'un' → logprob: -6.923256874084473

Token 177: ' expos' (ID: 10300)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.1209273710846901
    2. 'set' → logprob: -3.245927333831787
    3. 'ent' → logprob: -3.495927333831787
    4. ' ensemble' → logprob: -3.620927333831787
    5. 'tuple' → logprob: -4.245927333831787
    6. ' tuple' → logprob: -7.245927333831787
    7. 'ense' → logprob: -7.245927333831787
    8. ' set' → logprob: -7.370927333831787
    9. 'fro' → logprob: -7.745927333831787
    10. 'nombre' → logprob: -8.495927810668945

Token 178: 'ant' (ID: 493)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5531104207038879
    2. 'onent' → logprob: -1.3031103610992432
    3. 'ponent' → logprob: -2.053110361099243
    4. 'pos' → logprob: -4.303110599517822
    5. 'ément' → logprob: -5.178110599517822
    6. '   ' → logprob: -7.303110599517822
    7. 'érent' → logprob: -7.553110599517822
    8. ' pos' → logprob: -7.553110599517822
    9. ' exponent' → logprob: -7.928110599517822
    10. ')' → logprob: -8.178110122680664

Token 179: ' positif' (ID: 89008)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06662925332784653
    2. ' ,' → logprob: -3.44162917137146
    3. ' =' → logprob: -4.816629409790039
    4. ' )' → logprob: -5.441629409790039
    5. ' actuel' → logprob: -5.566629409790039
    6. ')' → logprob: -5.691629409790039
    7. ' courant' → logprob: -5.691629409790039
    8. 's' → logprob: -5.941629409790039
    9. ' current' → logprob: -6.191629409790039
    10. ',
' → logprob: -6.816629409790039

Token 180: ' k' (ID: 372)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2923072874546051
    2. ' ,' → logprob: -1.4173072576522827
    3. ')' → logprob: -5.417307376861572
    4. ' )' → logprob: -5.667307376861572
    5. '):' → logprob: -7.417307376861572
    6. ' ' → logprob: -7.542307376861572
    7. 's' → logprob: -7.917307376861572
    8. '   ' → logprob: -7.917307376861572
    9. ':' → logprob: -8.792306900024414
    10. ' ):' → logprob: -8.792306900024414

Token 181: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062089692801237106
    2. ' ,' → logprob: -4.062089920043945
    3. ' reachable' → logprob: -4.437089920043945
    4. ')' → logprob: -4.812089920043945
    5. ' et' → logprob: -5.187089920043945
    6. ' atteint' → logprob: -5.437089920043945
    7. '   ' → logprob: -5.812089920043945
    8. ' dans' → logprob: -6.312089920043945
    9. '),' → logprob: -6.437089920043945
    10. 'reachable' → logprob: -7.437089920043945

Token 182: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020805789157748222
    2. ',' → logprob: -4.395805835723877
    3. ' )' → logprob: -5.395805835723877
    4. '),' → logprob: -5.895805835723877
    5. ' k' → logprob: -8.270805358886719
    6. '):' → logprob: -9.145805358886719
    7. ' ,' → logprob: -9.770805358886719
    8. 'k' → logprob: -9.895805358886719
    9. '   ' → logprob: -9.895805358886719
    10. 'int' → logprob: -9.895805358886719

Token 183: ' <=' (ID: 5017)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4582081735134125
    2. ',' → logprob: -1.0832082033157349
    3. ' )' → logprob: -4.208208084106445
    4. '+' → logprob: -5.708208084106445
    5. ',
' → logprob: -6.208208084106445
    6. ' ,' → logprob: -6.458208084106445
    7. ',)' → logprob: -6.583208084106445
    8. '):' → logprob: -6.833208084106445
    9. ' +' → logprob: -7.083208084106445
    10. '
' → logprob: -7.208208084106445

Token 184: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01418301835656166
    2. ' k' → logprob: -4.264183044433594
    3. 'n' → logprob: -11.514183044433594
    4. ' n' → logprob: -11.764183044433594
    5. ')' → logprob: -14.264183044433594
    6. ' ' → logprob: -14.889183044433594
    7. '	k' → logprob: -15.389183044433594
    8. '1' → logprob: -16.264183044433594
    9. '   ' → logprob: -16.264183044433594
    10. '```' → logprob: -16.264183044433594

Token 185: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3299693763256073
    2. '<=' → logprob: -1.3299694061279297
    3. ')' → logprob: -4.57996940612793
    4. '+' → logprob: -5.32996940612793
    5. ')<=' → logprob: -8.32996940612793
    6. ' <' → logprob: -8.32996940612793
    7. ' +' → logprob: -8.82996940612793
    8. '<' → logprob: -9.07996940612793
    9. '   ' → logprob: -9.32996940612793
    10. 'le' → logprob: -9.32996940612793

Token 186: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3485839366912842
    2. ' n' → logprob: -1.2235839366912842
    3. ' ' → logprob: -9.598584175109863
    4. '2' → logprob: -9.723584175109863
    5. '100' → logprob: -11.473584175109863
    6. '   ' → logprob: -14.723584175109863
    7. ' ' → logprob: -15.098584175109863
    8. '	n' → logprob: -15.723584175109863
    9. '_n' → logprob: -16.348583221435547
    10. '1' → logprob: -16.848583221435547

Token 187: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010851968079805374
    2. ' n' → logprob: -4.635851860046387
    3. '100' → logprob: -7.385851860046387
    4. '2' → logprob: -7.760851860046387
    5. ' ' → logprob: -10.010851860046387
    6. '   ' → logprob: -13.010851860046387
    7. '10' → logprob: -14.885851860046387
    8. '	n' → logprob: -14.885851860046387
    9. 'max' → logprob: -15.010851860046387
    10. '1' → logprob: -15.260851860046387

Token 188: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.2578798532485962
    2. ' *' → logprob: -1.5078798532485962
    3. '*' → logprob: -5.132879734039307
    4. ' ' → logprob: -11.757880210876465
    5. '*k' → logprob: -11.882880210876465
    6. '   ' → logprob: -12.007880210876465
    7. 'n' → logprob: -12.507880210876465
    8. '*N' → logprob: -13.007880210876465
    9. '*m' → logprob: -13.132880210876465
    10. '**' → logprob: -14.132880210876465

Token 189: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.014745697379112244
    2. 'max' → logprob: -4.264745712280273
    3. ')' → logprob: -7.514745712280273
    4. '_' → logprob: -10.639745712280273
    5. '_MAX' → logprob: -12.139745712280273
    6. '_)' → logprob: -12.514745712280273
    7. ' max' → logprob: -13.014745712280273
    8. 'Max' → logprob: -14.264745712280273
    9. ')_' → logprob: -15.139745712280273
    10. ' )' → logprob: -15.389745712280273

Token 190: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07163567841053009
    2. ').' → logprob: -3.4466357231140137
    3. '+' → logprob: -4.196635723114014
    4. '   ' → logprob: -4.821635723114014
    5. ')
' → logprob: -5.696635723114014
    6. '),' → logprob: -5.821635723114014
    7. ' )' → logprob: -5.821635723114014
    8. '):
' → logprob: -6.321635723114014
    9. '):' → logprob: -6.446635723114014
    10. ' +' → logprob: -6.821635723114014

Token 191: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047398194670677185
    2. ')' → logprob: -3.547398090362549
    3. '):' → logprob: -5.047398090362549
    4. ',' → logprob: -5.422398090362549
    5. '):
' → logprob: -6.172398090362549
    6. '
' → logprob: -6.547398090362549
    7. 'def' → logprob: -6.672398090362549
    8. ':' → logprob: -7.922398090362549
    9. ' )' → logprob: -8.297398567199707
    10. '.' → logprob: -8.297398567199707

Token 192: ' gérer' (ID: 86786)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.25015193223953247
    2. ' éviter' → logprob: -2.6251518726348877
    3. ' n' → logprob: -3.2501518726348877
    4. 'k' → logprob: -3.7501518726348877
    5. 'n' → logprob: -4.375152111053467
    6. ' lequel' → logprob: -4.500152111053467
    7. 'quoi' → logprob: -5.000152111053467
    8. ' la' → logprob: -5.000152111053467
    9. ' which' → logprob: -5.250152111053467
    10. ' garantir' → logprob: -5.625152111053467

Token 193: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.16429844498634338
    2. ' la' → logprob: -2.4142985343933105
    3. ' l' → logprob: -3.0392985343933105
    4. ' le' → logprob: -5.7892985343933105
    5. ' )' → logprob: -6.1642985343933105
    6. ')' → logprob: -6.1642985343933105
    7. ' ' → logprob: -6.7892985343933105
    8. ' ' → logprob: -7.1642985343933105
    9. ' un' → logprob: -7.6642985343933105
    10. ' des' → logprob: -7.6642985343933105

Token 194: ' divisions' (ID: 66578)
  Prédit: ' multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multip' → logprob: -0.6620038747787476
    2. ' ' → logprob: -1.5370038747787476
    3. ' espaces' → logprob: -2.287003993988037
    4. ' opérations' → logprob: -3.037003993988037
    5. ' multiples' → logprob: -4.412003993988037
    6. ' pas' → logprob: -4.412003993988037
    7. 'multip' → logprob: -4.912003993988037
    8. ' multiplic' → logprob: -4.912003993988037
    9. '  ' → logprob: -5.287003993988037
    10. ' operations' → logprob: -5.287003993988037

Token 195: '.
' (ID: 558)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.8742752075195312
    2. ')' → logprob: -1.2492752075195312
    3. '   ' → logprob: -2.1242752075195312
    4. '):' → logprob: -2.6242752075195312
    5. ' )' → logprob: -3.1242752075195312
    6. ' ).' → logprob: -4.249275207519531
    7. '),' → logprob: -4.249275207519531
    8. '):
' → logprob: -4.624275207519531
    9. ',' → logprob: -4.749275207519531
    10. ' ):' → logprob: -6.249275207519531

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04244178533554077
    2. ')' → logprob: -3.2924418449401855
    3. '):' → logprob: -6.2924418449401855
    4. 'def' → logprob: -6.7924418449401855
    5. '"""' → logprob: -7.5424418449401855
    6. '
' → logprob: -8.792441368103027
    7. '):
' → logprob: -9.042441368103027
    8. ' ' → logprob: -9.417441368103027
    9. ' )' → logprob: -9.417441368103027
    10. '    ' → logprob: -9.417441368103027

Token 197: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01163444947451353
    2. ')' → logprob: -4.636634349822998
    3. '"""' → logprob: -6.761634349822998
    4. 'def' → logprob: -8.761634826660156
    5. '
' → logprob: -9.261634826660156
    6. '"""
' → logprob: -9.386634826660156
    7. '    ' → logprob: -9.761634826660156
    8. ' """
' → logprob: -9.886634826660156
    9. ' """' → logprob: -9.886634826660156
    10. ' )' → logprob: -9.886634826660156

Token 198: ' commence' (ID: 44755)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9928900599479675
    2. 'def' → logprob: -1.9928901195526123
    3. ' continue' → logprob: -2.1178901195526123
    4. ')' → logprob: -2.4928901195526123
    5. ' def' → logprob: -2.9928901195526123
    6. '=' → logprob: -3.7428901195526123
    7. ' )' → logprob: -3.8678901195526123
    8. '_initial' → logprob: -4.117889881134033
    9. ':' → logprob: -4.242889881134033
    10. '_' → logprob: -4.367889881134033

Token 199: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.07150785624980927
    2. ' avec' → logprob: -3.0715079307556152
    3. ' à' → logprob: -4.821507930755615
    4. 'par' → logprob: -5.196507930755615
    5. '   ' → logprob: -5.321507930755615
    6. '_par' → logprob: -6.321507930755615
    7. ' ' → logprob: -7.821507930755615
    8. ' =' → logprob: -7.946507930755615
    9. 'avec' → logprob: -7.946507930755615
    10. ' with' → logprob: -8.696507453918457

Token 200: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5119778513908386
    2. ' ' → logprob: -1.0119779109954834
    3. ' deque' → logprob: -3.7619779109954834
    4. 'deque' → logprob: -5.261977672576904
    5. ' k' → logprob: -6.386977672576904
    6. ' la' → logprob: -6.511977672576904
    7. ' (' → logprob: -6.636977672576904
    8. ' {' → logprob: -6.761977672576904
    9. '{' → logprob: -6.886977672576904
    10. 'k' → logprob: -7.636977672576904

Token 201: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891226559877396
    2. ' =' → logprob: -2.5789122581481934
    3. '=k' → logprob: -11.203912734985352
    4. 's' → logprob: -12.203912734985352
    5. ')' → logprob: -13.703912734985352
    6. ',' → logprob: -14.578912734985352
    7. ' ' → logprob: -15.203912734985352
    8. '=int' → logprob: -15.328912734985352
    9. 'k' → logprob: -15.453912734985352
    10. ' à' → logprob: -15.828912734985352

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00671584764495492
    2. ' ' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.756715774536133
    4. '   ' → logprob: -16.381715774536133
    5. '  ' → logprob: -16.631715774536133
    6. '[' → logprob: -17.256715774536133
    7. '=' → logprob: -17.381715774536133
    8. 's' → logprob: -17.381715774536133
    9. '<|end|>' → logprob: -17.881715774536133
    10. ' [' → logprob: -17.944215774536133

Token 203: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011535927653312683
    2. ',' → logprob: -4.511536121368408
    3. '
' → logprob: -9.01153564453125
    4. '.' → logprob: -9.26153564453125
    5. ':' → logprob: -9.26153564453125
    6. ',
' → logprob: -10.26153564453125
    7. '    ' → logprob: -10.88653564453125
    8. '  ' → logprob: -11.01153564453125
    9. 'def' → logprob: -11.13653564453125
    10. '    
' → logprob: -11.13653564453125

Token 204: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33217060565948486
    2. '0' → logprob: -1.4571706056594849
    3. ' deque' → logprob: -3.5821704864501953
    4. 'deque' → logprob: -5.082170486450195
    5. ' une' → logprob: -5.457170486450195
    6. ' distance' → logprob: -5.582170486450195
    7. 'distance' → logprob: -6.457170486450195
    8. ' dist' → logprob: -6.707170486450195
    9. ' queue' → logprob: -6.832170486450195
    10. ' un' → logprob: -6.957170486450195

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026610400527715683
    2. 'deque' → logprob: -3.9016103744506836
    3. ' ' → logprob: -5.526610374450684
    4. 'distance' → logprob: -6.901610374450684
    5. 'dist' → logprob: -8.151610374450684
    6. ' deque' → logprob: -8.276610374450684
    7. 'queue' → logprob: -9.151610374450684
    8. 'de' → logprob: -9.401610374450684
    9. 'operations' → logprob: -9.526610374450684
    10. 'niveau' → logprob: -10.526610374450684

Token 206: ' opérations' (ID: 102793)
  Prédit: ' opérations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opérations' → logprob: -0.15470752120018005
    2. ' operations' → logprob: -2.904707431793213
    3. ' )' → logprob: -3.154707431793213
    4. 'operations' → logprob: -4.279707431793213
    5. ')' → logprob: -4.529707431793213
    6. ' ' → logprob: -5.404707431793213
    7. ' ' → logprob: -5.529707431793213
    8. ' ),' → logprob: -5.904707431793213
    9. '_operations' → logprob: -6.529707431793213
    10. ',' → logprob: -6.904707431793213

Token 207: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03567323461174965
    2. ',' → logprob: -3.660673141479492
    3. '.' → logprob: -4.785673141479492
    4. ':' → logprob: -7.660673141479492
    5. 'def' → logprob: -9.160673141479492
    6. '    
' → logprob: -9.160673141479492
    7. ')' → logprob: -9.410673141479492
    8. ',
' → logprob: -9.660673141479492
    9. '
' → logprob: -9.785673141479492
    10. '.
' → logprob: -11.410673141479492

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015383612480945885
    2. 'def' → logprob: -9.875153541564941
    3. 'dp' → logprob: -10.125153541564941
    4. ')' → logprob: -10.750153541564941
    5. '
' → logprob: -11.250153541564941
    6. 'dist' → logprob: -12.000153541564941
    7. '    
' → logprob: -12.250153541564941
    8. ' distances' → logprob: -12.875153541564941
    9. 'visited' → logprob: -13.250153541564941
    10. 'states' → logprob: -13.250153541564941

Token 209: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0952180624008179
    2. 'dist' → logprob: -1.0952180624008179
    3. 'dp' → logprob: -1.3452180624008179
    4. ' dist' → logprob: -3.3452181816101074
    5. ' dp' → logprob: -4.970218181610107
    6. 'visited' → logprob: -5.095218181610107
    7. ' distances' → logprob: -5.095218181610107
    8. 'distance' → logprob: -5.220218181610107
    9. 'min' → logprob: -5.970218181610107
    10. 'def' → logprob: -6.220218181610107

Token 210: ' chaque' (ID: 21194)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06581064313650131
    2. '  ' → logprob: -3.8158106803894043
    3. '    ' → logprob: -4.940810680389404
    4. 'cc' → logprob: -5.315810680389404
    5. ' ' → logprob: -5.440810680389404
    6. 'd' → logprob: -5.940810680389404
    7. 'ct' → logprob: -6.065810680389404
    8. 'ccess' → logprob: -6.315810680389404
    9. ' def' → logprob: -6.565810680389404
    10. ' distances' → logprob: -6.565810680389404

Token 211: ' étape' (ID: 83661)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.3336924910545349
    2. ' niveau' → logprob: -2.3336925506591797
    3. ' étape' → logprob: -2.5836925506591797
    4. ':' → logprob: -3.2086925506591797
    5. 'pas' → logprob: -4.08369255065918
    6. 'ét' → logprob: -4.33369255065918
    7. ')' → logprob: -5.20869255065918
    8. 'iteration' → logprob: -5.45869255065918
    9. '_' → logprob: -5.58369255065918
    10. ' it' → logprob: -5.95869255065918

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02273683063685894
    2. ' ,' → logprob: -4.2727370262146
    3. ':' → logprob: -5.5227370262146
    4. '   ' → logprob: -5.6477370262146
    5. ' :' → logprob: -7.3977370262146
    6. '):' → logprob: -8.647736549377441
    7. '    ' → logprob: -10.022736549377441
    8. ':
' → logprob: -10.272736549377441
    9. ',
' → logprob: -10.522736549377441
    10. ' :
' → logprob: -11.022736549377441

Token 213: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10635580867528915
    2. 'for' → logprob: -2.856355905532837
    3. ' queue' → logprob: -3.606355905532837
    4. '   ' → logprob: -5.231355667114258
    5. ' next' → logprob: -5.231355667114258
    6. ' new' → logprob: -6.106355667114258
    7. 'queue' → logprob: -6.606355667114258
    8. ' current' → logprob: -6.981355667114258
    9. ' states' → logprob: -8.106355667114258
    10. 'next' → logprob: -8.356355667114258

Token 214: ' peut' (ID: 9216)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8890203833580017
    2. 'for' → logprob: -1.0140204429626465
    3. ' explore' → logprob: -2.2640204429626465
    4. '   ' → logprob: -3.0140204429626465
    5. 'expl' → logprob: -3.6390204429626465
    6. '    ' → logprob: -4.5140204429626465
    7. ' ajoute' → logprob: -4.6390204429626465
    8. ' explores' → logprob: -5.0140204429626465
    9. ')' → logprob: -5.5140204429626465
    10. ' découvre' → logprob: -6.0140204429626465

Token 215: ' comb' (ID: 4134)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.9824392199516296
    2. '   ' → logprob: -1.6074392795562744
    3. ' for' → logprob: -2.2324392795562744
    4. ' ajouter' → logprob: -2.3574392795562744
    5. ' multiplier' → logprob: -2.9824392795562744
    6. 'for' → logprob: -3.2324392795562744
    7. ':' → logprob: -3.2324392795562744
    8. ' appliquer' → logprob: -3.9824392795562744
    9. ' faire' → logprob: -4.732439041137695
    10. '       ' → logprob: -4.857439041137695

Token 216: 'iner' (ID: 6010)
  Prédit: 'iner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.007665659300982952
    2. 'ine' → logprob: -4.882665634155273
    3. 'ina' → logprob: -11.132665634155273
    4. 'ler' → logprob: -11.507665634155273
    5. 'er' → logprob: -11.632665634155273
    6. 'inir' → logprob: -12.632665634155273
    7. 'in' → logprob: -12.882665634155273
    8. '#' → logprob: -13.132665634155273
    9. '```' → logprob: -13.132665634155273
    10. 'iné' → logprob: -13.257665634155273

Token 217: ' deux' (ID: 10301)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5066030621528625
    2. ' deux' → logprob: -1.0066030025482178
    3. 'k' → logprob: -4.756603240966797
    4. ' les' → logprob: -4.881603240966797
    5. ' two' → logprob: -5.256603240966797
    6. ' le' → logprob: -5.631603240966797
    7. ' l' → logprob: -5.881603240966797
    8. ' un' → logprob: -6.506603240966797
    9. ' current' → logprob: -7.631603240966797
    10. ' la' → logprob: -8.006603240966797

Token 218: ' expos' (ID: 10300)
  Prédit: ' expos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expos' → logprob: -0.8486835956573486
    2. ' puiss' → logprob: -1.7236835956573486
    3. ' k' → logprob: -2.2236835956573486
    4. ' états' → logprob: -2.3486835956573486
    5. ' exponent' → logprob: -2.4736835956573486
    6. 'ex' → logprob: -3.0986835956573486
    7. ' espaces' → logprob: -3.8486835956573486
    8. ' ex' → logprob: -4.2236833572387695
    9. 'k' → logprob: -4.2236833572387695
    10. '_ex' → logprob: -6.3486833572387695

Token 219: 'ants' (ID: 2027)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.3040446937084198
    2. 'ponents' → logprob: -2.304044723510742
    3. '   ' → logprob: -2.429044723510742
    4. 'nts' → logprob: -3.929044723510742
    5. 'ent' → logprob: -4.554044723510742
    6. 'p' → logprob: -4.679044723510742
    7. '       ' → logprob: -5.054044723510742
    8. 'ants' → logprob: -5.929044723510742
    9. 'ponent' → logprob: -6.054044723510742
    10. 'pos' → logprob: -6.054044723510742

Token 220: ' déjà' (ID: 21229)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6124603152275085
    2. '   ' → logprob: -1.8624603748321533
    3. 'k' → logprob: -2.2374603748321533
    4. ',' → logprob: -3.2374603748321533
    5. ' exist' → logprob: -3.4874603748321533
    6. ' i' → logprob: -3.8624603748321533
    7. ' déjà' → logprob: -4.237460136413574
    8. ' connus' → logprob: -4.237460136413574
    9. ' présents' → logprob: -4.237460136413574
    10. ' u' → logprob: -5.112460136413574

Token 221: ' atte' (ID: 43312)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.06825553625822067
    2. ' atte' → logprob: -4.068255424499512
    3. ' connus' → logprob: -4.068255424499512
    4. 'atte' → logprob: -4.193255424499512
    5. 'ob' → logprob: -5.443255424499512
    6. 'con' → logprob: -5.443255424499512
    7. 'vus' → logprob: -6.943255424499512
    8. ' obten' → logprob: -7.068255424499512
    9. 'calcul' → logprob: -7.068255424499512
    10. 'obt' → logprob: -7.068255424499512

Token 222: 'ints' (ID: 20448)
  Prédit: 'ints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.0012438016710802913
    2. 'int' → logprob: -7.751243591308594
    3. 'i' → logprob: -8.376243591308594
    4. 'nts' → logprob: -9.126243591308594
    5. 'in' → logprob: -9.251243591308594
    6. 'intes' → logprob: -9.876243591308594
    7. 'inte' → logprob: -10.376243591308594
    8. 'ins' → logprob: -10.626243591308594
    9. 'n' → logprob: -10.751243591308594
    10. 's' → logprob: -10.876243591308594

Token 223: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6844359040260315
    2. '   ' → logprob: -0.9344359040260315
    3. ' pour' → logprob: -3.1844358444213867
    4. '    ' → logprob: -4.559435844421387
    5. ':' → logprob: -4.559435844421387
    6. '       ' → logprob: -4.684435844421387
    7. ' for' → logprob: -5.559435844421387
    8. ' ,' → logprob: -5.684435844421387
    9. '           ' → logprob: -5.809435844421387
    10. ' ' → logprob: -5.934435844421387

Token 224: 'p' (ID: 79)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0194154977798462
    2. ' for' → logprob: -1.3944154977798462
    3. ')' → logprob: -2.5194153785705566
    4. ' k' → logprob: -3.0194153785705566
    5. 'tokens' → logprob: -3.0194153785705566
    6. ' pour' → logprob: -3.3944153785705566
    7. ' tokens' → logprob: -3.6444153785705566
    8. ' )' → logprob: -3.8944153785705566
    9. ',' → logprob: -3.8944153785705566
    10. 'pour' → logprob: -4.269415378570557

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5516968369483948
    2. 'u' → logprob: -1.30169677734375
    3. 'r' → logprob: -3.17669677734375
    4. ')' → logprob: -3.67669677734375
    5. 'our' → logprob: -4.05169677734375
    6. 'rev' → logprob: -4.05169677734375
    7. '=' → logprob: -4.92669677734375
    8. ' ,' → logprob: -5.30169677734375
    9. 'ar' → logprob: -5.42669677734375
    10. ' =' → logprob: -5.92669677734375

Token 226: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1142047867178917
    2. ' q' → logprob: -2.2392048835754395
    3. 'k' → logprob: -6.8642048835754395
    4. 'c' → logprob: -8.864204406738281
    5. ' k' → logprob: -9.364204406738281
    6. ')' → logprob: -10.364204406738281
    7. ' c' → logprob: -10.489204406738281
    8. ' ' → logprob: -11.864204406738281
    9. '	q' → logprob: -11.989204406738281
    10. 'r' → logprob: -12.239204406738281

Token 227: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002963203703984618
    2. '),' → logprob: -6.377963066101074
    3. ')
' → logprob: -7.752963066101074
    4. ' )' → logprob: -8.252963066101074
    5. '):' → logprob: -8.502963066101074
    6. '):
' → logprob: -8.752963066101074
    7. ')=' → logprob: -9.502963066101074
    8. ' =' → logprob: -9.877963066101074
    9. '))' → logprob: -11.127963066101074
    10. '=' → logprob: -11.627963066101074

Token 228: ' par' (ID: 686)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pour' → logprob: -1.1144047975540161
    2. '   ' → logprob: -1.2394047975540161
    3. ',' → logprob: -1.8644047975540161
    4. '       ' → logprob: -2.6144046783447266
    5. '           ' → logprob: -2.8644046783447266
    6. ' for' → logprob: -3.2394046783447266
    7. 'pour' → logprob: -3.9894046783447266
    8. ')' → logprob: -4.489404678344727
    9. '               ' → logprob: -4.739404678344727
    10. 'for' → logprob: -4.989404678344727

Token 229: ' multiplication' (ID: 86340)
  Prédit: ' multiplication'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiplication' → logprob: -0.7853402495384216
    2. 'multip' → logprob: -1.1603403091430664
    3. ' addition' → logprob: -2.5353403091430664
    4. 'addition' → logprob: -3.4103403091430664
    5. ' multip' → logprob: -3.5353403091430664
    6. ' k' → logprob: -4.035340309143066
    7. ' p' → logprob: -4.410340309143066
    8. '*' → logprob: -4.535340309143066
    9. '+' → logprob: -4.660340309143066
    10. 'k' → logprob: -5.035340309143066

Token 230: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5865235328674316
    2. ')' → logprob: -1.9615235328674316
    3. ',' → logprob: -2.3365235328674316
    4. '       ' → logprob: -3.0865235328674316
    5. ' pour' → logprob: -3.0865235328674316
    6. ' ou' → logprob: -3.0865235328674316
    7. '           ' → logprob: -4.586523532867432
    8. ' et' → logprob: -4.586523532867432
    9. ']' → logprob: -5.086523532867432
    10. 'for' → logprob: -5.211523532867432

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9108811020851135
    2. '           ' → logprob: -1.7858810424804688
    3. '   ' → logprob: -1.9108810424804688
    4. '               ' → logprob: -2.1608810424804688
    5. '    ' → logprob: -3.2858810424804688
    6. 'for' → logprob: -3.2858810424804688
    7. ' for' → logprob: -3.5358810424804688
    8. '                   ' → logprob: -3.6608810424804688
    9. '        ' → logprob: -4.535881042480469
    10. '                ' → logprob: -5.410881042480469

Token 232: ' k' (ID: 372)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6502600312232971
    2. 'for' → logprob: -0.7752600312232971
    3. '           ' → logprob: -5.525259971618652
    4. '#' → logprob: -6.150259971618652
    5. ' next' → logprob: -6.275259971618652
    6. '       ' → logprob: -6.525259971618652
    7. '   ' → logprob: -6.650259971618652
    8. '               ' → logprob: -6.775259971618652
    9. ' new' → logprob: -6.775259971618652
    10. ' #' → logprob: -7.150259971618652

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11541730910539627
    2. '=' → logprob: -2.615417242050171
    3. '_new' → logprob: -3.490417242050171
    4. 'new' → logprob: -6.74041748046875
    5. '_next' → logprob: -6.86541748046875
    6. ' +' → logprob: -7.49041748046875
    7. 's' → logprob: -7.74041748046875
    8. ')' → logprob: -7.86541748046875
    9. '=p' → logprob: -8.24041748046875
    10. '+' → logprob: -8.36541748046875

Token 234: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007827948778867722
    2. ' p' → logprob: -4.8828277587890625
    3. '(p' → logprob: -8.757827758789062
    4. ' (' → logprob: -10.507827758789062
    5. '   ' → logprob: -11.382827758789062
    6. 'k' → logprob: -12.257827758789062
    7. '(' → logprob: -12.570327758789062
    8. 'pq' → logprob: -12.757827758789062
    9. ' ' → logprob: -13.382827758789062
    10. '[p' → logprob: -13.445327758789062

Token 235: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142580568790436
    2. ' +' → logprob: -1.7014257907867432
    3. '   ' → logprob: -12.451425552368164
    4. ' ' → logprob: -12.951425552368164
    5. '    ' → logprob: -13.451425552368164
    6. '       ' → logprob: -13.951425552368164
    7. '+
' → logprob: -14.201425552368164
    8. ' ' → logprob: -14.701425552368164
    9. '+p' → logprob: -14.701425552368164
    10. '  ' → logprob: -15.076425552368164

Token 236: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.20141665637493134
    2. ' q' → logprob: -1.7014166116714478
    3. '	q' → logprob: -13.951416969299316
    4. '    ' → logprob: -14.326416969299316
    5. ' ' → logprob: -14.576416969299316
    6. '   ' → logprob: -15.076416969299316
    7. ' ' → logprob: -15.451416969299316
    8. '       ' → logprob: -15.576416969299316
    9. ',q' → logprob: -15.826416969299316
    10. '  ' → logprob: -16.326416015625

Token 237: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19001610577106476
    2. '   ' → logprob: -2.440016031265259
    3. ')' → logprob: -3.565016031265259
    4. ',' → logprob: -3.815016031265259
    5. '
' → logprob: -4.190016269683838
    6. '           ' → logprob: -4.815016269683838
    7. '               ' → logprob: -6.065016269683838
    8. '    ' → logprob: -6.440016269683838
    9. '        
' → logprob: -6.565016269683838
    10. '    
' → logprob: -7.065016269683838

Token 238: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11907713860273361
    2. '   ' → logprob: -2.494077205657959
    3. '           ' → logprob: -4.494077205657959
    4. ')' → logprob: -4.744077205657959
    5. ',' → logprob: -5.619077205657959
    6. '               ' → logprob: -6.244077205657959
    7. '    ' → logprob: -7.119077205657959
    8. '
' → logprob: -7.619077205657959
    9. '\n' → logprob: -7.619077205657959
    10. '        ' → logprob: -8.2440767288208

Token 239: ' Ou' (ID: 33134)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0183558389544487
    2. '       ' → logprob: -4.643355846405029
    3. ',' → logprob: -5.768355846405029
    4. 'def' → logprob: -6.268355846405029
    5. '
' → logprob: -7.268355846405029
    6. ')' → logprob: -7.268355846405029
    7. '           ' → logprob: -7.893355846405029
    8. '    
' → logprob: -8.143355369567871
    9. '#' → logprob: -8.268355369567871
    10. ' ' → logprob: -8.893355369567871

Token 240: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.973909854888916
    2. 'par' → logprob: -1.848909854888916
    3. ' division' → logprob: -2.598909854888916
    4. 'k' → logprob: -2.848909854888916
    5. ' k' → logprob: -2.973909854888916
    6. '           ' → logprob: -3.223909854888916
    7. '       ' → logprob: -3.473909854888916
    8. 'div' → logprob: -3.473909854888916
    9. 'division' → logprob: -3.723909854888916
    10. ' on' → logprob: -3.848909854888916

Token 241: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.08851098269224167
    2. ' division' → logprob: -2.5885109901428223
    3. 'sou' → logprob: -6.088510990142822
    4. ' la' → logprob: -6.338510990142822
    5. 'multip' → logprob: -7.088510990142822
    6. 'addition' → logprob: -7.463510990142822
    7. 'div' → logprob: -7.463510990142822
    8. '   ' → logprob: -7.713510990142822
    9. 'k' → logprob: -7.963510990142822
    10. '#' → logprob: -8.213510513305664

Token 242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007962074130773544
    2. ' :' → logprob: -5.882962226867676
    3. ':
' → logprob: -6.007962226867676
    4. '   ' → logprob: -6.632962226867676
    5. '       ' → logprob: -6.882962226867676
    6. ',' → logprob: -9.257962226867676
    7. 'def' → logprob: -9.507962226867676
    8. '=' → logprob: -10.007962226867676
    9. '           ' → logprob: -10.507962226867676
    10. ' =' → logprob: -10.632962226867676

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010004170471802354
    2. ' k' → logprob: -7.50100040435791
    3. '   ' → logprob: -8.87600040435791
    4. 'k' → logprob: -9.25100040435791
    5. '           ' → logprob: -10.00100040435791
    6. '    ' → logprob: -10.37600040435791
    7. '        ' → logprob: -10.75100040435791
    8. '      ' → logprob: -10.87600040435791
    9. ''' → logprob: -11.37600040435791
    10. '     ' → logprob: -11.75100040435791

Token 244: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.013763939030468464
    2. ' k' → logprob: -4.388763904571533
    3. '       ' → logprob: -7.263763904571533
    4. '   ' → logprob: -8.513764381408691
    5. 'p' → logprob: -8.638764381408691
    6. ' p' → logprob: -10.138764381408691
    7. '           ' → logprob: -10.763764381408691
    8. ' ' → logprob: -10.763764381408691
    9. 'if' → logprob: -10.888764381408691
    10. '    ' → logprob: -11.013764381408691

Token 245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. ',' → logprob: -16.938261032104492
    4. ' ' → logprob: -17.188261032104492
    5. ')' → logprob: -17.688261032104492
    6. ' =
' → logprob: -17.813261032104492
    7. '=k' → logprob: -17.813261032104492
    8. 's' → logprob: -17.938261032104492
    9. '=
' → logprob: -17.938261032104492
    10. '＝' → logprob: -18.313261032104492

Token 246: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008618000894784927
    2. 'abs' → logprob: -5.008617877960205
    3. ' p' → logprob: -6.508617877960205
    4. ' abs' → logprob: -8.633618354797363
    5. '   ' → logprob: -8.758618354797363
    6. '       ' → logprob: -10.258618354797363
    7. '|' → logprob: -10.633618354797363
    8. ' ' → logprob: -12.758618354797363
    9. '    ' → logprob: -13.008618354797363
    10. '     ' → logprob: -13.133618354797363

Token 247: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20144735276699066
    2. '-' → logprob: -1.7014473676681519
    3. '-q' → logprob: -10.576447486877441
    4. '+' → logprob: -12.326447486877441
    5. ' ' → logprob: -13.076447486877441
    6. ' +' → logprob: -13.951447486877441
    7. ',' → logprob: -15.576447486877441
    8. ' ' → logprob: -15.826447486877441
    9. ' q' → logprob: -16.326446533203125
    10. ')' → logprob: -16.451446533203125

Token 248: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0040785204619169235
    2. ' q' → logprob: -5.504078388214111
    3. '?q' → logprob: -17.504077911376953
    4. '	q' → logprob: -17.629077911376953
    5. '1' → logprob: -18.254077911376953
    6. '<|end|>' → logprob: -18.879077911376953
    7. ',q' → logprob: -19.004077911376953
    8. '[q' → logprob: -19.504077911376953
    9. ' ' → logprob: -19.629077911376953
    10. ''q' → logprob: -19.754077911376953

Token 249: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1385076940059662
    2. ')' → logprob: -2.763507604598999
    3. '       ' → logprob: -3.638507604598999
    4. ',' → logprob: -4.638507843017578
    5. '           ' → logprob: -5.013507843017578
    6. ' )' → logprob: -5.513507843017578
    7. 'def' → logprob: -5.763507843017578
    8. '
' → logprob: -6.013507843017578
    9. '    ' → logprob: -6.263507843017578
    10. ' ' → logprob: -6.263507843017578

Token 250: ' k' (ID: 372)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.162521094083786
    2. ' p' → logprob: -1.9125211238861084
    3. 'k' → logprob: -6.787520885467529
    4. 'q' → logprob: -7.037520885467529
    5. ' q' → logprob: -9.037521362304688
    6. ' k' → logprob: -9.287521362304688
    7. '>' → logprob: -10.537521362304688
    8. '(p' → logprob: -11.287521362304688
    9. '       ' → logprob: -11.662521362304688
    10. '0' → logprob: -12.037521362304688

Token 251: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31584250926971436
    2. ' >' → logprob: -1.3158425092697144
    3. '1' → logprob: -6.690842628479004
    4. ' ' → logprob: -7.315842628479004
    5. '0' → logprob: -8.440842628479004
    6. ' p' → logprob: -9.815842628479004
    7. ' >=' → logprob: -9.815842628479004
    8. ')' → logprob: -9.815842628479004
    9. '>=' → logprob: -9.815842628479004
    10. '   ' → logprob: -10.565842628479004

Token 252: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '>' → logprob: -17.875295639038086
    4. '   ' → logprob: -18.500295639038086
    5. '=' → logprob: -18.625295639038086
    6. '```' → logprob: -19.375295639038086
    7. '1' → logprob: -19.750295639038086
    8. '  ' → logprob: -20.125295639038086
    9. '۰' → logprob: -20.500295639038086
    10. ' ' → logprob: -20.750295639038086

Token 253: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -19.1250057220459
    4. '=' → logprob: -19.2500057220459
    5. '>' → logprob: -19.8750057220459
    6. '   ' → logprob: -20.1250057220459
    7. '1' → logprob: -20.2500057220459
    8. '۰' → logprob: -20.2500057220459
    9. '#' → logprob: -20.5000057220459
    10. '[' → logprob: -21.2500057220459

Token 254: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22796767950057983
    2. ')' → logprob: -1.8529677391052246
    3. '       ' → logprob: -3.3529677391052246
    4. '           ' → logprob: -5.852967739105225
    5. ',' → logprob: -6.102967739105225
    6. '    ' → logprob: -6.352967739105225
    7. ' )' → logprob: -6.352967739105225
    8. '               ' → logprob: -7.477967739105225
    9. '.' → logprob: -7.852967739105225
    10. '  ' → logprob: -7.977967739105225

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030334316194057465
    2. ')' → logprob: -3.780334234237671
    3. '       ' → logprob: -5.78033447265625
    4. ',' → logprob: -6.53033447265625
    5. '    ' → logprob: -7.40533447265625
    6. 'def' → logprob: -7.90533447265625
    7. ' )' → logprob: -8.03033447265625
    8. '):' → logprob: -8.15533447265625
    9. '"""' → logprob: -8.65533447265625
    10. '    
' → logprob: -9.15533447265625

Token 256: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004738891497254372
    2. '"""' → logprob: -6.254738807678223
    3. '"""
' → logprob: -6.379738807678223
    4. 'def' → logprob: -7.754738807678223
    5. ')' → logprob: -8.004738807678223
    6. ' """
' → logprob: -8.754738807678223
    7. ')
' → logprob: -10.004738807678223
    8. ' """' → logprob: -10.254738807678223
    9. '
' → logprob: -10.754738807678223
    10. ' def' → logprob: -11.254738807678223

Token 257: ' év' (ID: 23692)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.070472002029419
    2. '   ' → logprob: -1.195472002029419
    3. ' def' → logprob: -1.695472002029419
    4. ')' → logprob: -2.820472002029419
    5. ' continue' → logprob: -4.19547176361084
    6. '    ' → logprob: -4.57047176361084
    7. ' )' → logprob: -4.82047176361084
    8. ' queue' → logprob: -5.19547176361084
    9. ' iter' → logprob: -5.32047176361084
    10. 'from' → logprob: -5.57047176361084

Token 258: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.2068762183189392
    2. 'o' → logprob: -3.081876277923584
    3. 'ol' → logprob: -3.206876277923584
    4. 'al' → logprob: -3.206876277923584
    5. 'alite' → logprob: -3.456876277923584
    6. 'a' → logprob: -5.206876277923584
    7. 'iter' → logprob: -5.206876277923584
    8. 'ale' → logprob: -5.831876277923584
    9. 'olite' → logprob: -6.331876277923584
    10. 'alue' → logprob: -6.331876277923584

Token 259: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.12094321846961975
    2. ' d' → logprob: -3.120943307876587
    3. 'les' → logprob: -3.745943307876587
    4. ' de' → logprob: -3.745943307876587
    5. ' la' → logprob: -5.120943069458008
    6. 'd' → logprob: -5.245943069458008
    7. '   ' → logprob: -6.120943069458008
    8. '    ' → logprob: -6.245943069458008
    9. ' tout' → logprob: -6.620943069458008
    10. ' l' → logprob: -7.120943069458008

Token 260: ' expos' (ID: 10300)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.0396536588668823
    2. ' états' → logprob: -1.0396536588668823
    3. ' doubl' → logprob: -1.9146536588668823
    4. 'dou' → logprob: -3.789653778076172
    5. 'exp' → logprob: -4.039653778076172
    6. 'rés' → logprob: -4.539653778076172
    7. 'ét' → logprob: -4.664653778076172
    8. ' expos' → logprob: -4.914653778076172
    9. ' ex' → logprob: -4.914653778076172
    10. ' states' → logprob: -5.039653778076172

Token 261: 'ants' (ID: 2027)
  Prédit: 'ités'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ités' → logprob: -0.4419456422328949
    2. 'its' → logprob: -1.6919456720352173
    3. 'l' → logprob: -2.8169455528259277
    4. 'ites' → logprob: -3.4419455528259277
    5. 'it' → logprob: -3.5669455528259277
    6. '#' → logprob: -5.191945552825928
    7. 'ents' → logprob: -5.191945552825928
    8. 'lus' → logprob: -5.629445552825928
    9. 's' → logprob: -5.691945552825928
    10. 'ité' → logprob: -5.879445552825928

Token 262: ' non' (ID: 2893)
  Prédit: ' nég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.7292452454566956
    2. ' déjà' → logprob: -0.8542452454566956
    3. ' n' → logprob: -3.729245185852051
    4. ' dépass' → logprob: -4.479245185852051
    5. 'dé' → logprob: -4.729245185852051
    6. ' <=' → logprob: -4.854245185852051
    7. ' =' → logprob: -5.479245185852051
    8. '=' → logprob: -5.479245185852051
    9. '<=' → logprob: -5.604245185852051
    10. '   ' → logprob: -5.729245185852051

Token 263: ' posit' (ID: 13047)
  Prédit: 'posit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'posit' → logprob: -0.036241915076971054
    2. ' posit' → logprob: -3.6612420082092285
    3. 'strict' → logprob: -4.7862420082092285
    4. 'pos' → logprob: -7.5362420082092285
    5. '```' → logprob: -8.03624153137207
    6. 'valid' → logprob: -8.28624153137207
    7. '   ' → logprob: -9.03624153137207
    8. 'n' → logprob: -9.28624153137207
    9. ' strict' → logprob: -9.41124153137207
    10. 'positive' → logprob: -10.53624153137207

Token 264: 'ifs' (ID: 14119)
  Prédit: 'ifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifs' → logprob: -0.008137567900121212
    2. 'if' → logprob: -5.0081377029418945
    3. 's' → logprob: -6.7581377029418945
    4. 'fs' → logprob: -8.883137702941895
    5. 'és' → logprob: -10.008137702941895
    6. 'f' → logprob: -10.883137702941895
    7. 'es' → logprob: -11.508137702941895
    8. '#' → logprob: -11.508137702941895
    9. '```' → logprob: -11.508137702941895
    10. '   ' → logprob: -11.633137702941895

Token 265: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8564544916152954
    2. '   ' → logprob: -1.2314544916152954
    3. ')' → logprob: -1.4814544916152954
    4. '.' → logprob: -4.106454372406006
    5. ' )' → logprob: -4.356454372406006
    6. '    ' → logprob: -5.356454372406006
    7. ' ' → logprob: -5.481454372406006
    8. ' ,' → logprob: -5.606454372406006
    9. '  ' → logprob: -5.981454372406006
    10. ':' → logprob: -6.231454372406006

Token 266: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046403031796216965
    2. 'k' → logprob: -4.671402931213379
    3. ' )' → logprob: -4.796402931213379
    4. 'n' → logprob: -5.046402931213379
    5. ').' → logprob: -5.421402931213379
    6. ' k' → logprob: -5.546402931213379
    7. '   ' → logprob: -6.171402931213379
    8. '"""' → logprob: -6.296402931213379
    9. '```' → logprob: -6.421402931213379
    10. 'def' → logprob: -6.546402931213379

Token 267: ' résultats' (ID: 48985)
  Prédit: ' invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' invalid' → logprob: -1.2247393131256104
    2. 'invalid' → logprob: -1.3497393131256104
    3. 'inter' → logprob: -2.3497393131256104
    4. 'cela' → logprob: -2.7247393131256104
    5. ' ils' → logprob: -2.8497393131256104
    6. ' cela' → logprob: -3.4747393131256104
    7. 'ils' → logprob: -3.8497393131256104
    8. ' on' → logprob: -4.099739074707031
    9. 'pas' → logprob: -4.599739074707031
    10. ' inutil' → logprob: -4.599739074707031

Token 268: ' doivent' (ID: 44722)
  Prédit: ' interm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interm' → logprob: -0.49238359928131104
    2. 'inter' → logprob: -0.992383599281311
    3. ' intermedi' → logprob: -4.7423834800720215
    4. ' invalid' → logprob: -5.4923834800720215
    5. 'invalid' → logprob: -5.8673834800720215
    6. '   ' → logprob: -7.6173834800720215
    7. 'n' → logprob: -8.11738395690918
    8. ' interd' → logprob: -8.24238395690918
    9. ' intermediate' → logprob: -8.99238395690918
    10. '_inter' → logprob: -9.11738395690918

Token 269: ' être' (ID: 9104)
  Prédit: ' rester'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rester' → logprob: -0.5193071961402893
    2. ' être' → logprob: -1.7693071365356445
    3. 'être' → logprob: -1.8943071365356445
    4. 'rest' → logprob: -3.8943071365356445
    5. ' rest' → logprob: -4.0193071365356445
    6. ' toujours' → logprob: -4.2693071365356445
    7. 'strict' → logprob: -4.2693071365356445
    8. '>' → logprob: -5.1443071365356445
    9. 'êtres' → logprob: -6.0193071365356445
    10. ' etre' → logprob: -6.5193071365356445

Token 270: ' x' (ID: 1215)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.4638475179672241
    2. 'posit' → logprob: -1.8388475179672241
    3. 'x' → logprob: -2.9638476371765137
    4. ' val' → logprob: -3.4638476371765137
    5. 'val' → logprob: -3.5888476371765137
    6. '>' → logprob: -3.7138476371765137
    7. 'valid' → logprob: -3.7138476371765137
    8. ' posit' → logprob: -4.588847637176514
    9. ' strict' → logprob: -4.713847637176514
    10. ' x' → logprob: -4.963847637176514

Token 271: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.04114140197634697
    2. '**' → logprob: -4.041141510009766
    3. '^{' → logprob: -4.416141510009766
    4. '>' → logprob: -5.166141510009766
    5. 'k' → logprob: -6.666141510009766
    6. 'strict' → logprob: -7.041141510009766
    7. '```' → logprob: -7.166141510009766
    8. 'positive' → logprob: -8.166141510009766
    9. 'élé' → logprob: -8.541141510009766
    10. '^)' → logprob: -8.541141510009766

Token 272: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013394330628216267
    2. 'positive' → logprob: -4.763394355773926
    3. '1' → logprob: -5.763394355773926
    4. '```' → logprob: -7.388394355773926
    5. 'n' → logprob: -7.763394355773926
    6. '>' → logprob: -9.013394355773926
    7. ' positive' → logprob: -9.388394355773926
    8. 'posit' → logprob: -9.513394355773926
    9. ' k' → logprob: -9.638394355773926
    10. '0' → logprob: -9.888394355773926

Token 273: ' avec' (ID: 3937)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6393343806266785
    2. ')' → logprob: -0.7643343806266785
    3. ' )' → logprob: -6.389334201812744
    4. '),' → logprob: -6.764334201812744
    5. ' ).' → logprob: -7.014334201812744
    6. '   ' → logprob: -7.514334201812744
    7. '>' → logprob: -7.889334201812744
    8. '):
' → logprob: -8.139334678649902
    9. '):' → logprob: -8.264334678649902
    10. ')
' → logprob: -8.389334678649902

Token 274: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0019422034965828061
    2. ' k' → logprob: -6.251942157745361
    3. ')' → logprob: -12.75194263458252
    4. '```' → logprob: -12.87694263458252
    5. '   ' → logprob: -13.12694263458252
    6. '
' → logprob: -13.62694263458252
    7. 'positive' → logprob: -13.75194263458252
    8. '>' → logprob: -13.87694263458252
    9. 'posit' → logprob: -14.37694263458252
    10. ' ' → logprob: -14.62694263458252

Token 275: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2519976496696472
    2. ' >' → logprob: -1.501997709274292
    3. '>=' → logprob: -10.001997947692871
    4. ' >=' → logprob: -11.001997947692871
    5. '   ' → logprob: -13.126997947692871
    6. ' ' → logprob: -14.126997947692871
    7. ' ' → logprob: -14.251997947692871
    8. 'strict' → logprob: -14.751997947692871
    9. ' strictly' → logprob: -14.876997947692871
    10. ' >
' → logprob: -14.876997947692871

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004902417422272265
    2. ' ' → logprob: -7.625490188598633
    3. '=' → logprob: -13.250490188598633
    4. '  ' → logprob: -16.500490188598633
    5. ')' → logprob: -16.625490188598633
    6. ' ' → logprob: -16.625490188598633
    7. '```' → logprob: -17.000490188598633
    8. '   ' → logprob: -17.375490188598633
    9. '
' → logprob: -17.625490188598633
    10. '>' → logprob: -17.625490188598633

Token 277: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3837117552757263
    2. ').' → logprob: -1.258711814880371
    3. '   ' → logprob: -3.508711814880371
    4. ')
' → logprob: -6.508711814880371
    5. '):
' → logprob: -7.258711814880371
    6. ' )' → logprob: -7.383711814880371
    7. ').
' → logprob: -7.508711814880371
    8. '):' → logprob: -8.008711814880371
    9. ' ).' → logprob: -8.508711814880371
    10. '),' → logprob: -8.633711814880371

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026508092414587736
    2. 'def' → logprob: -6.377650737762451
    3. ')' → logprob: -7.752650737762451
    4. '"""' → logprob: -8.37765121459961
    5. '
' → logprob: -9.00265121459961
    6. '    
' → logprob: -9.37765121459961
    7. '"""
' → logprob: -11.37765121459961
    8. '```' → logprob: -11.50265121459961
    9. ' def' → logprob: -11.62765121459961
    10. '       ' → logprob: -11.87765121459961

Token 279: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02270163968205452
    2. 'def' → logprob: -3.8977017402648926
    3. ')' → logprob: -6.647701740264893
    4. ':' → logprob: -8.522701263427734
    5. '):' → logprob: -9.522701263427734
    6. ' def' → logprob: -9.522701263427734
    7. 'dp' → logprob: -9.897701263427734
    8. ',' → logprob: -9.897701263427734
    9. ' )' → logprob: -10.022701263427734
    10. '    ' → logprob: -10.147701263427734

Token 280: ''ex' (ID: 23472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44456788897514343
    2. 'e' → logprob: -1.9445679187774658
    3. '   ' → logprob: -2.319567918777466
    4. 'a' → logprob: -3.194567918777466
    5. 'es' → logprob: -3.819567918777466
    6. 'ef' → logprob: -4.319567680358887
    7. 'et' → logprob: -5.069567680358887
    8. '#' → logprob: -5.694567680358887
    9. 'eurs' → logprob: -5.819567680358887
    10. 'expl' → logprob: -5.819567680358887

Token 281: 'pl' (ID: 528)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08202583342790604
    2. 'pl' → logprob: -2.8320257663726807
    3. 'planation' → logprob: -4.45702600479126
    4. 'plic' → logprob: -5.08202600479126
    5. 'ponent' → logprob: -8.082025527954102
    6. 'def' → logprob: -8.207025527954102
    7. '#' → logprob: -8.207025527954102
    8. 'plan' → logprob: -8.457025527954102
    9. 'pli' → logprob: -8.832025527954102
    10. '
' → logprob: -9.832025527954102

Token 282: 'oration' (ID: 9063)
  Prédit: 'oration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oration' → logprob: -0.1568458378314972
    2. 'ored' → logprob: -2.406845808029175
    3. 'or' → logprob: -3.031845808029175
    4. 'ore' → logprob: -6.406846046447754
    5. 'orer' → logprob: -6.781846046447754
    6. 'icit' → logprob: -6.906846046447754
    7. 'ique' → logprob: -8.031846046447754
    8. 'pl' → logprob: -8.156846046447754
    9. 'iqué' → logprob: -8.156846046447754
    10. 'oring' → logprob: -8.156846046447754

Token 283: ' est' (ID: 893)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.728314995765686
    2. '   ' → logprob: -1.103314995765686
    3. ' =' → logprob: -2.6033148765563965
    4. ' est' → logprob: -3.9783148765563965
    5. ' s' → logprob: -4.1033148765563965
    6. '    ' → logprob: -4.4783148765563965
    7. ' se' → logprob: -4.6033148765563965
    8. ' ' → logprob: -4.7283148765563965
    9. ')' → logprob: -4.9783148765563965
    10. ' de' → logprob: -4.9783148765563965

Token 284: ' faite' (ID: 78359)
  Prédit: ' limitée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limitée' → logprob: -0.5387153029441833
    2. ' effectu' → logprob: -1.6637153625488281
    3. '   ' → logprob: -2.288715362548828
    4. ' complète' → logprob: -3.288715362548828
    5. ' réalisée' → logprob: -4.663715362548828
    6. ' limité' → logprob: -4.913715362548828
    7. 'limit' → logprob: -5.038715362548828
    8. ' en' → logprob: -5.163715362548828
    9. ' faite' → logprob: -5.663715362548828
    10. ' continue' → logprob: -5.663715362548828

Token 285: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40190234780311584
    2. ' ' → logprob: -2.401902437210083
    3. ' en' → logprob: -2.401902437210083
    4. ' sur' → logprob: -3.276902437210083
    5. 'e' → logprob: -3.651902437210083
    6. ' avec' → logprob: -3.901902437210083
    7. ' jusqu' → logprob: -4.651902198791504
    8. ' par' → logprob: -5.026902198791504
    9. '       ' → logprob: -5.276902198791504
    10. ')' → logprob: -5.276902198791504

Token 286: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.004799157381057739
    2. 'à' → logprob: -5.6297993659973145
    3. ''au' → logprob: -7.3797993659973145
    4. 'a' → logprob: -8.504798889160156
    5. '’à' → logprob: -8.629798889160156
    6. ''a' → logprob: -9.504798889160156
    7. 'au' → logprob: -9.754798889160156
    8. ''' → logprob: -9.879798889160156
    9. ' à' → logprob: -12.254798889160156
    10. '   ' → logprob: -13.129798889160156

Token 287: ' couvrir' (ID: 197187)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.052623867988586426
    2. ' n' → logprob: -3.052623748779297
    3. '2' → logprob: -6.177623748779297
    4. 'k' → logprob: -7.177623748779297
    5. ' atteindre' → logprob: -8.052623748779297
    6. ' ' → logprob: -8.552623748779297
    7. 'max' → logprob: -9.052623748779297
    8. 'l' → logprob: -9.052623748779297
    9. ' k' → logprob: -9.677623748779297
    10. 'niveau' → logprob: -10.177623748779297

Token 288: ' au' (ID: 2791)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7714051008224487
    2. ' tous' → logprob: -1.0214051008224487
    3. 'n' → logprob: -2.1464052200317383
    4. ' toutes' → logprob: -4.271405220031738
    5. ' ' → logprob: -4.396405220031738
    6. ' all' → logprob: -4.646405220031738
    7. 't' → logprob: -5.271405220031738
    8. 'all' → logprob: -5.771405220031738
    9. ' les' → logprob: -5.896405220031738
    10. ' l' → logprob: -6.271405220031738

Token 289: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.19309812784194946
    2. ' moins' → logprob: -1.9430980682373047
    3. 'n' → logprob: -3.5680980682373047
    4. 'x' → logprob: -6.568098068237305
    5. 'max' → logprob: -6.818098068237305
    6. 'mo' → logprob: -7.568098068237305
    7. 'less' → logprob: -8.318098068237305
    8. '   ' → logprob: -8.943098068237305
    9. 'menos' → logprob: -8.943098068237305
    10. '2' → logprob: -9.068098068237305

Token 290: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.027352914214134216
    2. 'n' → logprob: -3.652352809906006
    3. ' ' → logprob: -7.277352809906006
    4. ' l' → logprob: -8.902353286743164
    5. ' le' → logprob: -9.652353286743164
    6. ' tous' → logprob: -9.902353286743164
    7. 'le' → logprob: -10.402353286743164
    8. ' la' → logprob: -10.777353286743164
    9. ' les' → logprob: -10.777353286743164
    10. 'l' → logprob: -11.652353286743164

Token 291: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07890509814023972
    2. ' n' → logprob: -2.5789051055908203
    3. ' ' → logprob: -11.82890510559082
    4. 'l' → logprob: -12.70390510559082
    5. 'le' → logprob: -13.45390510559082
    6. 'la' → logprob: -14.32890510559082
    7. '   ' → logprob: -14.70390510559082
    8. '`' → logprob: -14.95390510559082
    9. ' le' → logprob: -14.95390510559082
    10. '```' → logprob: -15.07890510559082

Token 292: '..' (ID: 485)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9189155697822571
    2. ' ' → logprob: -2.1689155101776123
    3. ' _' → logprob: -2.2939155101776123
    4. 'e' → logprob: -2.4189155101776123
    5. ' n' → logprob: -2.5439155101776123
    6. ' à' → logprob: -2.9189155101776123
    7. '0' → logprob: -3.5439155101776123
    8. ' +' → logprob: -3.6689155101776123
    9. '000' → logprob: -4.043915748596191
    10. '_n' → logprob: -4.418915748596191

Token 293: 'n' (ID: 77)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06692887842655182
    2. 'n' → logprob: -2.8169288635253906
    3. ' ' → logprob: -5.691928863525391
    4. '   ' → logprob: -8.06692886352539
    5. '2' → logprob: -8.44192886352539
    6. ' {' → logprob: -8.81692886352539
    7. ' `' → logprob: -8.81692886352539
    8. ',' → logprob: -9.06692886352539
    9. ' ,' → logprob: -9.19192886352539
    10. '    ' → logprob: -10.19192886352539

Token 294: '_max' (ID: 13731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16937191784381866
    2. '.' → logprob: -2.9193718433380127
    3. '
' → logprob: -4.169372081756592
    4. ',' → logprob: -4.294372081756592
    5. '_max' → logprob: -4.294372081756592
    6. ')' → logprob: -5.044372081756592
    7. '\n' → logprob: -5.044372081756592
    8. 'max' → logprob: -5.294372081756592
    9. '0' → logprob: -5.669372081756592
    10. '  ' → logprob: -5.919372081756592

Token 295: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38389724493026733
    2. '   ' → logprob: -1.258897304534912
    3. '.
' → logprob: -4.758897304534912
    4. ',' → logprob: -4.758897304534912
    5. 'def' → logprob: -5.508897304534912
    6. ')' → logprob: -5.633897304534912
    7. ').' → logprob: -6.008897304534912
    8. '
' → logprob: -6.508897304534912
    9. ':' → logprob: -7.133897304534912
    10. '.

' → logprob: -7.258897304534912

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005425465060397983
    2. 'def' → logprob: -8.125542640686035
    3. '
' → logprob: -9.125542640686035
    4. '    
' → logprob: -9.500542640686035
    5. ')' → logprob: -10.625542640686035
    6. '"""' → logprob: -11.250542640686035
    7. '"""
' → logprob: -11.625542640686035
    8. '    ' → logprob: -12.625542640686035
    9. '       ' → logprob: -13.000542640686035
    10. ')
' → logprob: -13.250542640686035

Token 297: ' Ren' (ID: 17631)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09392006695270538
    2. 'def' → logprob: -3.4689199924468994
    3. '"""
' → logprob: -3.5939199924468994
    4. 'visited' → logprob: -4.2189202308654785
    5. 'dp' → logprob: -5.5939202308654785
    6. '"""' → logprob: -5.7189202308654785
    7. 'max' → logprob: -6.0939202308654785
    8. 'queue' → logprob: -6.0939202308654785
    9. 'n' → logprob: -7.0939202308654785
    10. ')' → logprob: -7.3439202308654785

Token 298: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.2749732732772827
    2. 'def' → logprob: -1.6499732732772827
    3. '   ' → logprob: -4.149973392486572
    4. 'omme' → logprob: -4.274973392486572
    5. 'ommer' → logprob: -5.274973392486572
    6. 'd' → logprob: -6.149973392486572
    7. 'de' → logprob: -6.274973392486572
    8. 'e' → logprob: -6.274973392486572
    9. 'ome' → logprob: -7.149973392486572
    10. '```' → logprob: -7.149973392486572

Token 299: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.3165615797042847
    2. '[' → logprob: -1.6915615797042847
    3. ' une' → logprob: -1.6915615797042847
    4. ' [' → logprob: -1.9415615797042847
    5. '   ' → logprob: -2.566561698913574
    6. 'un' → logprob: -2.816561698913574
    7. '[n' → logprob: -3.441561698913574
    8. '[min' → logprob: -4.191561698913574
    9. 'une' → logprob: -4.316561698913574
    10. ' la' → logprob: -4.941561698913574

Token 300: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5982175469398499
    2. ' liste' → logprob: -0.8482175469398499
    3. 'list' → logprob: -4.098217487335205
    4. 'dict' → logprob: -6.223217487335205
    5. ' dict' → logprob: -6.348217487335205
    6. ' list' → logprob: -7.348217487335205
    7. '   ' → logprob: -7.473217487335205
    8. 'Liste' → logprob: -8.598217964172363
    9. 'table' → logprob: -9.348217964172363
    10. ' ' → logprob: -9.723217964172363

Token 301: ' distance' (ID: 9324)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.2716492414474487
    2. ' de' → logprob: -1.5216492414474487
    3. '[' → logprob: -1.8966492414474487
    4. '[min' → logprob: -2.0216493606567383
    5. ' d' → logprob: -2.2716493606567383
    6. ' minimal' → logprob: -3.0216493606567383
    7. ' [' → logprob: -4.021649360656738
    8. '[num' → logprob: -4.896649360656738
    9. '[int' → logprob: -5.271649360656738
    10. ' of' → logprob: -5.396649360656738

Token 302: ' tel' (ID: 10716)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011622306890785694
    2. '=[' → logprob: -5.386622428894043
    3. '=' → logprob: -6.011622428894043
    4. 's' → logprob: -7.011622428894043
    5. '   ' → logprob: -7.136622428894043
    6. ']' → logprob: -7.261622428894043
    7. '_' → logprob: -7.886622428894043
    8. '_dist' → logprob: -8.011622428894043
    9. '_distance' → logprob: -8.136622428894043
    10. ' =[' → logprob: -8.386622428894043

Token 303: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.06896622478961945
    2. '=' → logprob: -4.068966388702393
    3. '_' → logprob: -4.193966388702393
    4. ' =' → logprob: -4.443966388702393
    5. 'que' → logprob: -4.943966388702393
    6. ' ' → logprob: -5.318966388702393
    7. ' qu' → logprob: -5.693966388702393
    8. '[' → logprob: -5.943966388702393
    9. ' that' → logprob: -6.193966388702393
    10. 'qu' → logprob: -7.443966388702393

Token 304: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4007306396961212
    2. ' distance' → logprob: -1.2757306098937988
    3. ' distances' → logprob: -3.400730609893799
    4. '   ' → logprob: -4.275730609893799
    5. 'dist' → logprob: -5.900730609893799
    6. '[' → logprob: -7.775730609893799
    7. '(distance' → logprob: -8.275731086730957
    8. ' dist' → logprob: -9.400731086730957
    9. '[]' → logprob: -9.775731086730957
    10. ' ' → logprob: -10.650731086730957

Token 305: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9582750201225281
    2. ' =' → logprob: -0.9582750201225281
    3. '[' → logprob: -1.9582750797271729
    4. 's' → logprob: -2.833275079727173
    5. '[n' → logprob: -4.458274841308594
    6. '=[' → logprob: -4.583274841308594
    7. '```' → logprob: -6.583274841308594
    8. '[i' → logprob: -6.708274841308594
    9. '[s' → logprob: -6.708274841308594
    10. '[
' → logprob: -7.208274841308594

Token 306: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2566433250904083
    2. '[i' → logprob: -2.131643295288086
    3. ']=' → logprob: -2.756643295288086
    4. '=' → logprob: -4.006643295288086
    5. '[' → logprob: -4.131643295288086
    6. ' =' → logprob: -5.881643295288086
    7. ' ]' → logprob: -6.131643295288086
    8. 's' → logprob: -7.006643295288086
    9. ']==' → logprob: -7.006643295288086
    10. '==' → logprob: -7.756643295288086

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8733161687850952
    2. '[i' → logprob: -1.2483161687850952
    3. '=' → logprob: -1.9983161687850952
    4. '[' → logprob: -2.2483162879943848
    5. '=[' → logprob: -2.9983162879943848
    6. ' =[' → logprob: -6.623316287994385
    7. 's' → logprob: -7.248316287994385
    8. '[n' → logprob: -7.623316287994385
    9. '.append' → logprob: -7.873316287994385
    10. '[
' → logprob: -8.498315811157227

Token 308: ' minimal' (ID: 19957)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04374069347977638
    2. ' i' → logprob: -3.418740749359131
    3. ' nombre' → logprob: -5.918740749359131
    4. '0' → logprob: -5.918740749359131
    5. ' minimal' → logprob: -6.793740749359131
    6. 'nombre' → logprob: -6.793740749359131
    7. ' le' → logprob: -7.293740749359131
    8. '   ' → logprob: -7.668740749359131
    9. ' -' → logprob: -8.168740272521973
    10. 'min' → logprob: -8.793740272521973

Token 309: ' opérations' (ID: 102793)
  Prédit: '_operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_operations' → logprob: -0.21977518498897552
    2. '_' → logprob: -1.8447751998901367
    3. '[i' → logprob: -4.469775199890137
    4. '_ops' → logprob: -4.719775199890137
    5. ' _' → logprob: -5.094775199890137
    6. 's' → logprob: -6.469775199890137
    7. '[_' → logprob: -6.469775199890137
    8. '_des' → logprob: -6.594775199890137
    9. '[' → logprob: -6.719775199890137
    10. '   ' → logprob: -6.969775199890137

Token 310: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18382351100444794
    2. '[i' → logprob: -2.183823585510254
    3. ' pour' → logprob: -3.808823585510254
    4. '   ' → logprob: -5.058823585510254
    5. '_' → logprob: -5.308823585510254
    6. '[' → logprob: -5.558823585510254
    7. '[s' → logprob: -5.558823585510254
    8. 'pour' → logprob: -6.058823585510254
    9. ' for' → logprob: -6.183823585510254
    10. ']' → logprob: -6.308823585510254

Token 311: ' x' (ID: 1215)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.7180559635162354
    2. ' i' → logprob: -1.0930559635162354
    3. 'i' → logprob: -2.3430559635162354
    4. 'calcul' → logprob: -3.2180559635162354
    5. ' x' → logprob: -4.093055725097656
    6. 'x' → logprob: -4.468055725097656
    7. ' atteindre' → logprob: -5.843055725097656
    8. ' obtenir' → logprob: -5.968055725097656
    9. ' ' → logprob: -6.468055725097656
    10. ' le' → logprob: -6.968055725097656

Token 312: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.016799993813037872
    2. '[i' → logprob: -4.6417999267578125
    3. '**' → logprob: -6.0167999267578125
    4. '```' → logprob: -6.8917999267578125
    5. ' ^' → logprob: -7.2667999267578125
    6. '_^' → logprob: -7.3917999267578125
    7. '^[' → logprob: -7.6417999267578125
    8. ' ' → logprob: -7.6417999267578125
    9. '^{' → logprob: -8.016799926757812
    10. '   ' → logprob: -8.516799926757812

Token 313: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004787884186953306
    2. ' i' → logprob: -5.379787921905518
    3. '[i' → logprob: -8.87978744506836
    4. ' ' → logprob: -11.50478744506836
    5. '   ' → logprob: -11.87978744506836
    6. '```' → logprob: -12.62978744506836
    7. '
' → logprob: -13.25478744506836
    8. '`' → logprob: -13.62978744506836
    9. '[' → logprob: -13.62978744506836
    10. '{i' → logprob: -13.87978744506836

Token 314: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19689936935901642
    2. ' =' → logprob: -1.8218994140625
    3. ')' → logprob: -5.6968994140625
    4. '):
' → logprob: -5.6968994140625
    5. ']' → logprob: -6.4468994140625
    6. ':' → logprob: -6.6968994140625
    7. ',' → logprob: -6.9468994140625
    8. '=' → logprob: -7.0718994140625
    9. '[i' → logprob: -7.4468994140625
    10. ' ' → logprob: -7.4468994140625

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030045978724956512
    2. 'def' → logprob: -4.280045986175537
    3. '"""
' → logprob: -4.780045986175537
    4. '"""' → logprob: -5.155045986175537
    5. ' def' → logprob: -7.655045986175537
    6. ')' → logprob: -8.405045509338379
    7. ' """
' → logprob: -8.405045509338379
    8. '```' → logprob: -8.780045509338379
    9. '"' → logprob: -8.905045509338379
    10. ':' → logprob: -9.030045509338379

Token 316: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0056730336509644985
    2. '"""' → logprob: -6.130672931671143
    3. 'def' → logprob: -6.255672931671143
    4. '"""
' (adapté à ' """
') → logprob: -7.380672931671143
    5. ')' → logprob: -8.2556734085083
    6. '):
' → logprob: -8.7556734085083
    7. ':' → logprob: -9.0056734085083
    8. '):' → logprob: -9.3806734085083
    9. '```' → logprob: -9.8806734085083
    10. 'distance' → logprob: -10.1306734085083

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2471589798224159e-05
    2. 'distance' → logprob: -11.375012397766113
    3. '    
' → logprob: -14.875012397766113
    4. 'dist' → logprob: -15.125012397766113
    5. 'def' → logprob: -15.875012397766113
    6. 'n' → logprob: -16.50001335144043
    7. '
' → logprob: -16.87501335144043
    8. 'visited' → logprob: -17.50001335144043
    9. ' distance' → logprob: -17.62501335144043
    10. 'dp' → logprob: -17.62501335144043

Token 318: ' limit' (ID: 5967)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.01913479156792164
    2. ' distance' → logprob: -4.269134998321533
    3. '   ' → logprob: -5.394134998321533
    4. 'from' → logprob: -8.394134521484375
    5. 'dist' → logprob: -8.894134521484375
    6. 'max' → logprob: -11.144134521484375
    7. ' from' → logprob: -11.769134521484375
    8. 'queue' → logprob: -11.894134521484375
    9. 'import' → logprob: -12.144134521484375
    10. ' distances' → logprob: -12.269134521484375

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009818539954721928
    2. '=' → logprob: -4.6348185539245605
    3. 's' → logprob: -10.384818077087402
    4. '   ' → logprob: -10.759818077087402
    5. ' ' → logprob: -12.259818077087402
    6. '_' → logprob: -13.384818077087402
    7. '  ' → logprob: -13.509818077087402
    8. 'e' → logprob: -14.134818077087402
    9. ',' → logprob: -14.509818077087402
    10. '    ' → logprob: -14.509818077087402

Token 320: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.019468508660793304
    2. ' ' → logprob: -4.394468307495117
    3. 'n' → logprob: -5.019468307495117
    4. ' n' → logprob: -8.144468307495117
    5. '   ' → logprob: -10.894468307495117
    6. 'max' → logprob: -11.519468307495117
    7. '  ' → logprob: -12.519468307495117
    8. ' max' → logprob: -13.394468307495117
    9. '100' → logprob: -14.269468307495117
    10. '3' → logprob: -14.769468307495117

Token 321: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005651841638609767
    2. 'n' → logprob: -7.625565052032471
    3. ' ' → logprob: -9.500565528869629
    4. 'max' → logprob: -13.875565528869629
    5. '   ' → logprob: -14.250565528869629
    6. ' n' → logprob: -15.000565528869629
    7. '3' → logprob: -15.625565528869629
    8. '  ' → logprob: -15.750565528869629
    9. '100' → logprob: -17.000564575195312
    10. '(' → logprob: -17.000564575195312

Token 322: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16332076489925385
    2. '*n' → logprob: -1.913320779800415
    3. '*' → logprob: -5.788320541381836
    4. '   ' → logprob: -10.663320541381836
    5. '
' → logprob: -13.538320541381836
    6. ' ' → logprob: -13.663320541381836
    7. '*N' → logprob: -13.663320541381836
    8. 'n' → logprob: -14.788320541381836
    9. '*num' → logprob: -15.288320541381836
    10. ' ' → logprob: -16.288320541381836

Token 323: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005234121344983578
    2. ' n' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.005233764648438
    4. ' ' → logprob: -16.880233764648438
    5. '	n' → logprob: -18.380233764648438
    6. '  ' → logprob: -19.005233764648438
    7. '_n' → logprob: -20.755233764648438
    8. '(n' → logprob: -21.005233764648438
    9. '*n' → logprob: -21.130233764648438
    10. '
' → logprob: -21.255233764648438

Token 324: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0004307884373702109
    2. 'max' → logprob: -7.750430583953857
    3. '_MAX' → logprob: -16.250431060791016
    4. 'Max' → logprob: -18.125431060791016
    5. '_' → logprob: -19.250431060791016
    6. ' max' → logprob: -19.625431060791016
    7. '_min' → logprob: -19.750431060791016
    8. '	max' → logprob: -20.000431060791016
    9. '_limit' → logprob: -20.500431060791016
    10. '(max' → logprob: -20.625431060791016

Token 325: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17455866932868958
    2. '   ' → logprob: -2.549558639526367
    3. 'distance' → logprob: -2.549558639526367
    4. '    
' → logprob: -6.549558639526367
    5. ' distance' → logprob: -7.299558639526367
    6. '
' → logprob: -7.299558639526367
    7. 'dist' → logprob: -7.299558639526367
    8. '   
' → logprob: -9.174558639526367
    9. '  
' → logprob: -9.299558639526367
    10. ' distances' → logprob: -9.549558639526367

Token 326: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5297179818153381
    2. 'distance' → logprob: -1.2797179222106934
    3. '
' → logprob: -2.0297179222106934
    4. 'dist' → logprob: -6.654717922210693
    5. '    
' → logprob: -8.279718399047852
    6. '
' → logprob: -9.529718399047852
    7. ' distance' → logprob: -9.654718399047852
    8. ' distances' → logprob: -11.029718399047852
    9. '   
' → logprob: -11.654718399047852
    10. '_distance' → logprob: -12.529718399047852

Token 327: ' born' (ID: 12275)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.010589320212602615
    2. ' distance' → logprob: -5.010589122772217
    3. 'from' → logprob: -6.635589122772217
    4. 'INF' → logprob: -7.260589122772217
    5. '   ' → logprob: -7.510589122772217
    6. 'max' → logprob: -7.885589122772217
    7. 'dist' → logprob: -8.010589599609375
    8. 'import' → logprob: -8.760589599609375
    9. 'queue' → logprob: -9.135589599609375
    10. 'inf' → logprob: -9.260589599609375

Token 328: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0006272526225075126
    2. '=' → logprob: -8.625627517700195
    3. 'ary' → logprob: -9.000627517700195
    4. 'é' → logprob: -9.500627517700195
    5. ' =' → logprob: -9.500627517700195
    6. '_limit' → logprob: -9.875627517700195
    7. 'ed' → logprob: -10.625627517700195
    8. '   ' → logprob: -10.750627517700195
    9. 'limit' → logprob: -10.750627517700195
    10. '_e' → logprob: -11.750627517700195

Token 329: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9946773052215576
    2. 'distance' → logprob: -1.2446773052215576
    3. ' =' → logprob: -1.6196773052215576
    4. '
' → logprob: -2.1196773052215576
    5. ' distance' → logprob: -4.994677543640137
    6. '=' → logprob: -5.244677543640137
    7. '    
' → logprob: -5.494677543640137
    8. 'dist' → logprob: -5.744677543640137
    9. '_distance' → logprob: -7.744677543640137
    10. ' distances' → logprob: -7.744677543640137

Token 330: ' éviter' (ID: 64013)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -1.3460811376571655
    2. 'k' → logprob: -1.5960811376571655
    3. 'la' → logprob: -1.8460811376571655
    4. 'les' → logprob: -2.221081256866455
    5. 'l' → logprob: -2.596081256866455
    6. ' k' → logprob: -2.971081256866455
    7. ' la' → logprob: -2.971081256866455
    8. ' les' → logprob: -3.971081256866455
    9. 'i' → logprob: -4.221081256866455
    10. 'le' → logprob: -4.596081256866455

Token 331: ' d' (ID: 272)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5204023718833923
    2. 'les' → logprob: -1.895402431488037
    3. ' la' → logprob: -2.520402431488037
    4. ' l' → logprob: -3.145402431488037
    5. 'l' → logprob: -3.645402431488037
    6. '   ' → logprob: -4.270402431488037
    7. ' ' → logprob: -4.395402431488037
    8. 'le' → logprob: -4.395402431488037
    9. ' une' → logprob: -4.645402431488037
    10. 'range' → logprob: -5.145402431488037

Token 332: ''ex' (ID: 23472)
  Prédit: ''ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.7708766460418701
    2. 'e' → logprob: -1.1458766460418701
    3. 'expl' → logprob: -2.64587664604187
    4. ''aller' → logprob: -3.27087664604187
    5. 'éc' → logprob: -3.89587664604187
    6. ''' → logprob: -4.020876884460449
    7. ''être' → logprob: -4.020876884460449
    8. 'ex' → logprob: -4.645876884460449
    9. 'u' → logprob: -5.145876884460449
    10. ''avoir' → logprob: -5.395876884460449

Token 333: 'plorer' (ID: 127296)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.15575292706489563
    2. 'plorer' → logprob: -2.1557528972625732
    3. 'p' → logprob: -3.9057528972625732
    4. 'c' → logprob: -5.905753135681152
    5. 'plo' → logprob: -7.280753135681152
    6. 'plore' → logprob: -7.905753135681152
    7. 'ced' → logprob: -7.905753135681152
    8. 'ploit' → logprob: -8.155753135681152
    9. 'ceed' → logprob: -8.280753135681152
    10. 'cé' → logprob: -8.280753135681152

Token 334: ' trop' (ID: 14765)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6771317720413208
    2. 'distance' → logprob: -2.4271316528320312
    3. ' la' → logprob: -2.5521316528320312
    4. 'limit' → logprob: -2.9271316528320312
    5. ' ' → logprob: -3.0521316528320312
    6. '    ' → logprob: -3.9271316528320312
    7. '[]' → logprob: -3.9271316528320312
    8. ' distance' → logprob: -4.052131652832031
    9. ' les' → logprob: -4.052131652832031
    10. 'visited' → logprob: -4.177131652832031

Token 335: ' loin' (ID: 40875)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09825833141803741
    2. 'de' → logprob: -4.0982584953308105
    3. 'large' → logprob: -4.4732584953308105
    4. ' large' → logprob: -4.5982584953308105
    5. 'inf' → logprob: -4.8482584953308105
    6. ' de' → logprob: -4.8482584953308105
    7. '_' → logprob: -5.3482584953308105
    8. '  ' → logprob: -5.3482584953308105
    9. 'larg' → logprob: -5.4732584953308105
    10. 'visited' → logprob: -5.5982584953308105

Token 336: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2143719345331192
    2. '   ' → logprob: -1.839371919631958
    3. 'distance' → logprob: -3.589371919631958
    4. '    
' → logprob: -5.339372158050537
    5. '
' → logprob: -7.714372158050537
    6. '   
' → logprob: -8.214371681213379
    7. 'dist' → logprob: -8.589371681213379
    8. '  
' → logprob: -8.714371681213379
    9. ',' → logprob: -9.339371681213379
    10. ',
' → logprob: -9.464371681213379

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08397537469863892
    2. 'distance' → logprob: -2.708975315093994
    3. '
' → logprob: -4.708975315093994
    4. ' distance' → logprob: -5.708975315093994
    5. '    
' → logprob: -6.833975315093994
    6. 'dist' → logprob: -8.708975791931152
    7. ' distances' → logprob: -8.958975791931152
    8. ',' → logprob: -9.583975791931152
    9. '   
' → logprob: -10.958975791931152
    10. '
' → logprob: -11.333975791931152

Token 338: ' dist' (ID: 3601)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.007057522889226675
    2. '   ' → logprob: -5.3820576667785645
    3. ' distance' → logprob: -6.2570576667785645
    4. 'dist' (adapté à ' dist') → logprob: -7.7570576667785645
    5. 'from' → logprob: -10.257057189941406
    6. 'queue' → logprob: -10.632057189941406
    7. ' distances' → logprob: -11.882057189941406
    8. ' ' → logprob: -12.632057189941406
    9. 'dp' → logprob: -12.882057189941406
    10. 'INF' → logprob: -12.882057189941406

Token 339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931737065315247
    2. ' =' → logprob: -0.6931737065315247
    3. '[' → logprob: -11.1931734085083
    4. '=[' → logprob: -11.6931734085083
    5. '=[]' → logprob: -14.0681734085083
    6. ',' → logprob: -14.1931734085083
    7. '   ' → logprob: -14.3181734085083
    8. ' ' → logprob: -14.9431734085083
    9. ' =[' → logprob: -15.1931734085083
    10. ')' → logprob: -15.4431734085083

Token 340: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.051105257123708725
    2. '[' → logprob: -3.051105260848999
    3. ' [-' → logprob: -6.80110502243042
    4. '{' → logprob: -7.30110502243042
    5. ' [' → logprob: -7.30110502243042
    6. '[n' → logprob: -10.301105499267578
    7. '{-' → logprob: -12.301105499267578
    8. '   ' → logprob: -12.676105499267578
    9. '[int' → logprob: -12.676105499267578
    10. '[a' → logprob: -13.926105499267578

Token 341: 'float' (ID: 7829)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38806581497192383
    2. 'float' → logprob: -1.1380658149719238
    3. 'None' → logprob: -6.763065814971924
    4. '0' → logprob: -11.388065338134766
    5. '10' → logprob: -11.888065338134766
    6. ' -' → logprob: -11.888065338134766
    7. '-f' → logprob: -12.138065338134766
    8. '100' → logprob: -13.138065338134766
    9. 'sys' → logprob: -13.388065338134766
    10. '999' → logprob: -13.513065338134766

Token 342: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.018300827592611313
    2. ''in' → logprob: -4.018301010131836
    3. ''' → logprob: -9.018301010131836
    4. ''l' → logprob: -12.768301010131836
    5. ''ins' → logprob: -13.143301010131836
    6. '(' → logprob: -13.268301010131836
    7. '(in' → logprob: -13.268301010131836
    8. ''il' → logprob: -13.268301010131836
    9. ''op' → logprob: -13.393301010131836
    10. ''inc' → logprob: -13.393301010131836

Token 343: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00016206118743866682
    2. ''in' → logprob: -8.750162124633789
    3. ''' → logprob: -12.625162124633789
    4. 'in' → logprob: -15.750162124633789
    5. 'info' → logprob: -18.00016212463379
    6. '-inf' → logprob: -18.37516212463379
    7. '_inf' → logprob: -18.62516212463379
    8. ' inf' → logprob: -18.87516212463379
    9. '"' → logprob: -19.12516212463379
    10. ''ins' → logprob: -19.25016212463379

Token 344: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.010158928111195564
    2. ')]' → logprob: -4.885159015655518
    3. ']' → logprob: -6.635159015655518
    4. ')' → logprob: -7.385159015655518
    5. '')' → logprob: -7.510159015655518
    6. ' '' → logprob: -10.51015853881836
    7. '']' → logprob: -10.88515853881836
    8. ''' → logprob: -11.88515853881836
    9. '")]' → logprob: -12.13515853881836
    10. '('' → logprob: -12.63515853881836

Token 345: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45240819454193115
    2. ' for' → logprob: -1.0774081945419312
    3. 'for' → logprob: -5.077408313751221
    4. ' ]' → logprob: -5.202408313751221
    5. ']*' → logprob: -5.202408313751221
    6. ']*(' → logprob: -5.827408313751221
    7. ',' → logprob: -6.077408313751221
    8. '(' → logprob: -8.827407836914062
    9. '   ' → logprob: -8.952407836914062
    10. ')' → logprob: -9.077407836914062

Token 346: ' (' (ID: 350)
  Prédit: '(limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.00011915886716451496
    2. ' (' → logprob: -9.25011920928955
    3. '(' → logprob: -11.00011920928955
    4. '((' → logprob: -12.87511920928955
    5. '   ' → logprob: -13.50011920928955
    6. '(l' → logprob: -13.87511920928955
    7. '(max' → logprob: -14.87511920928955
    8. '(n' → logprob: -15.00011920928955
    9. '(range' → logprob: -15.87511920928955
    10. 'limit' → logprob: -16.500118255615234

Token 347: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.927930654550437e-05
    2. ' limit' → logprob: -11.250029563903809
    3. '(limit' → logprob: -11.250029563903809
    4. '2' → logprob: -12.750029563903809
    5. '(' → logprob: -15.750029563903809
    6. '   ' → logprob: -16.250028610229492
    7. 'lim' → logprob: -17.000028610229492
    8. ' ' → logprob: -17.875028610229492
    9. '0' → logprob: -18.500028610229492
    10. '  ' → logprob: -18.750028610229492

Token 348: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016612187027931213
    2. ')' → logprob: -4.3916120529174805
    3. ' +' → logprob: -5.5166120529174805
    4. '+)' → logprob: -10.01661205291748
    5. '+
' → logprob: -11.64161205291748
    6. ')+' → logprob: -12.14161205291748
    7. ' )' → logprob: -12.14161205291748
    8. ']' → logprob: -13.14161205291748
    9. '1' → logprob: -13.26661205291748
    10. ')
' → logprob: -13.51661205291748

Token 349: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6047699318733066e-05
    2. ' ' → logprob: -11.125016212463379
    3. '2' → logprob: -13.750016212463379
    4. '   ' → logprob: -15.875016212463379
    5. '0' → logprob: -18.000015258789062
    6. '  ' → logprob: -18.000015258789062
    7. '```' → logprob: -19.187515258789062
    8. '10' → logprob: -19.562515258789062
    9. '
' → logprob: -19.562515258789062
    10. ')' → logprob: -19.750015258789062

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. '2' → logprob: -12.125007629394531
    3. ' ' → logprob: -13.125007629394531
    4. '10' → logprob: -17.00000762939453
    5. '   ' → logprob: -17.25000762939453
    6. '0' → logprob: -17.62500762939453
    7. '100' → logprob: -18.00000762939453
    8. '{' → logprob: -19.00000762939453
    9. '```' → logprob: -19.00000762939453
    10. '5' → logprob: -19.12500762939453

Token 351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018232580623589456
    2. ' )' → logprob: -9.125182151794434
    3. ')
' → logprob: -9.625182151794434
    4. '   ' → logprob: -12.000182151794434
    5. ')

' → logprob: -15.250182151794434
    6. ')]' → logprob: -15.500182151794434
    7. ']' → logprob: -15.500182151794434
    8. ')
' → logprob: -16.37518310546875
    9. ' ' → logprob: -16.87518310546875
    10. ' )
' → logprob: -17.00018310546875

Token 352: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5306580662727356
    2. '   ' → logprob: -1.0306580066680908
    3. ' dist' → logprob: -2.905658006668091
    4. '	dist' → logprob: -8.155657768249512
    5. '  ' → logprob: -12.780657768249512
    6. ' ' → logprob: -13.155657768249512
    7. '_dist' → logprob: -13.655657768249512
    8. '```' → logprob: -14.030657768249512
    9. 'Dist' → logprob: -14.280657768249512
    10. '    ' → logprob: -14.405657768249512

Token 353: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0014737951569259167
    2. ' dist' → logprob: -6.876473903656006
    3. '   ' → logprob: -7.751473903656006
    4. 'from' → logprob: -12.001473426818848
    5. '1' → logprob: -13.251473426818848
    6. 'queue' → logprob: -13.876473426818848
    7. ' ' → logprob: -14.126473426818848
    8. '	dist' → logprob: -14.626473426818848
    9. 'distance' → logprob: -15.626473426818848
    10. 'de' → logprob: -16.001474380493164

Token 354: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. ' [' → logprob: -13.375003814697266
    3. '=' → logprob: -13.500003814697266
    4. ' =' → logprob: -14.750003814697266
    5. '[
' → logprob: -15.000003814697266
    6. ']' → logprob: -16.125003814697266
    7. '1' → logprob: -16.750003814697266
    8. '][' → logprob: -16.750003814697266
    9. 'def' → logprob: -17.000003814697266
    10. '```' → logprob: -17.000003814697266

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.602024900028482e-05
    2. ']' → logprob: -9.625085830688477
    3. '0' → logprob: -11.625085830688477
    4. ' ' → logprob: -11.625085830688477
    5. ')' → logprob: -14.000085830688477
    6. ' ]' → logprob: -15.125085830688477
    7. '][' → logprob: -15.625085830688477
    8. ']=' → logprob: -15.875085830688477
    9. '[' → logprob: -16.250085830688477
    10. '
' → logprob: -16.375085830688477

Token 356: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.41129949549213e-05
    2. ' ]' → logprob: -9.500083923339844
    3. ']=' → logprob: -11.750083923339844
    4. '=' → logprob: -14.000083923339844
    5. ')' → logprob: -15.000083923339844
    6. ' =' → logprob: -16.625083923339844
    7. '[' → logprob: -18.250083923339844
    8. ']
' → logprob: -18.875083923339844
    9. '`]' → logprob: -19.125083923339844
    10. '']' → logprob: -19.250083923339844

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. ']=' → logprob: -18.878177642822266
    4. '0' → logprob: -19.628177642822266
    5. ']' → logprob: -20.378177642822266
    6. ',' → logprob: -20.628177642822266
    7. '=}' → logprob: -20.753177642822266
    8. ')=' → logprob: -21.128177642822266
    9. '＝' → logprob: -21.128177642822266
    10. '[' → logprob: -21.503177642822266

Token 358: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -18.875
    4. '۰' → logprob: -20.125
    5. '  ' → logprob: -21.75
    6. '０' → logprob: -22.125
    7. '00' → logprob: -22.5
    8. '	' → logprob: -22.75
    9. '=' → logprob: -22.875
    10. '000' → logprob: -22.9375

Token 359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -19.375
    4. '   ' → logprob: -19.625
    5. '00' → logprob: -21.625
    6. '０' → logprob: -21.875
    7. '  ' → logprob: -22.25
    8. '[' → logprob: -22.5625
    9. ' ' → logprob: -22.6875
    10. '০' → logprob: -22.75

Token 360: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001787513610906899
    2. ' queue' → logprob: -7.0017876625061035
    3. 'queue' → logprob: -7.2517876625061035
    4. '	queue' → logprob: -9.376787185668945
    5. '    
' → logprob: -10.001787185668945
    6. '
' → logprob: -10.626787185668945
    7. ',' → logprob: -12.751787185668945
    8. '  ' → logprob: -13.001787185668945
    9. '    ' → logprob: -14.001787185668945
    10. '(queue' → logprob: -14.376787185668945

Token 361: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26115041971206665
    2. 'queue' → logprob: -1.5111503601074219
    3. ' queue' → logprob: -5.011150360107422
    4. '
' → logprob: -6.511150360107422
    5. '	queue' → logprob: -7.886150360107422
    6. 'q' → logprob: -8.011150360107422
    7. '    
' → logprob: -8.636150360107422
    8. 'que' → logprob: -9.761150360107422
    9. 'deque' → logprob: -11.136150360107422
    10. ',' → logprob: -11.136150360107422

Token 362: ' x' (ID: 1215)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.047244470566511154
    2. '0' → logprob: -3.9222445487976074
    3. 'q' → logprob: -4.172244548797607
    4. ' queue' → logprob: -5.172244548797607
    5. 'deque' → logprob: -5.922244548797607
    6. '1' → logprob: -6.922244548797607
    7. 'que' → logprob: -8.04724407196045
    8. 'start' → logprob: -8.29724407196045
    9. 'operations' → logprob: -8.54724407196045
    10. '#' → logprob: -8.92224407196045

Token 363: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.00469676498323679
    2. '^{' → logprob: -6.754696846008301
    3. '**' → logprob: -6.879696846008301
    4. ' ^' → logprob: -6.879696846008301
    5. '[' → logprob: -7.379696846008301
    6. ')' → logprob: -8.0046968460083
    7. ']' → logprob: -9.5046968460083
    8. ' (' → logprob: -9.6296968460083
    9. '<|end|>' → logprob: -9.7546968460083
    10. '^(' → logprob: -9.8796968460083

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.125001907348633
    3. '0' → logprob: -14.500001907348633
    4. '<|end|>' → logprob: -16.250001907348633
    5. '[' → logprob: -17.000001907348633
    6. '¹' → logprob: -17.625001907348633
    7. '```' → logprob: -18.250001907348633
    8. '(' → logprob: -18.625001907348633
    9. '<|end|>' → logprob: -19.500001907348633
    10. '۱' → logprob: -19.500001907348633

Token 365: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004953675088472664
    2. 'queue' → logprob: -8.500494956970215
    3. '    
' → logprob: -9.250494956970215
    4. '
' → logprob: -9.250494956970215
    5. ' queue' → logprob: -9.875494956970215
    6. ',' → logprob: -11.000494956970215
    7. ')' → logprob: -11.500494956970215
    8. ' =' → logprob: -12.500494956970215
    9. '	queue' → logprob: -13.125494956970215
    10. 'q' → logprob: -13.250494956970215

Token 366: ' donné' (ID: 52079)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.43290746212005615
    2. 'le' → logprob: -2.8079075813293457
    3. 'la' → logprob: -2.8079075813293457
    4. ' la' → logprob: -2.9329075813293457
    5. 'd' → logprob: -3.4329075813293457
    6. ' déjà' → logprob: -3.5579075813293457
    7. ' le' → logprob: -4.057907581329346
    8. '0' → logprob: -4.057907581329346
    9. ' atteint' → logprob: -4.432907581329346
    10. ' ' → logprob: -4.682907581329346

Token 367: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004523606039583683
    2. '
' → logprob: -8.500452041625977
    3. '    
' → logprob: -8.625452041625977
    4. 'queue' → logprob: -10.750452041625977
    5. ' queue' → logprob: -11.250452041625977
    6. ',' → logprob: -11.625452041625977
    7. '  ' → logprob: -12.250452041625977
    8. '       ' → logprob: -12.875452041625977
    9. '	queue' → logprob: -13.000452041625977
    10. '    ' → logprob: -13.250452041625977

Token 368: ' ' (ID: 220)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.20020319521427155
    2. 'queue' → logprob: -2.3252031803131104
    3. '   ' → logprob: -2.5752031803131104
    4. 'deque' → logprob: -5.7002034187316895
    5. ' que' → logprob: -6.7002034187316895
    6. ' deque' → logprob: -7.2002034187316895
    7. '	queue' → logprob: -7.7002034187316895
    8. ' q' → logprob: -8.075202941894531
    9. ' None' → logprob: -8.325202941894531
    10. '
' → logprob: -8.325202941894531

Token 369: '0' (ID: 15)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.9497190713882446
    2. 'deque' → logprob: -1.0747190713882446
    3. 'que' → logprob: -2.074718952178955
    4. '0' → logprob: -3.949718952178955
    5. 'q' → logprob: -4.199718952178955
    6. 'car' → logprob: -4.324718952178955
    7. 'et' → logprob: -4.449718952178955
    8. ' queue' → logprob: -4.449718952178955
    9. 'de' → logprob: -4.574718952178955
    10. 'start' → logprob: -4.699718952178955

Token 370: ' opérations' (ID: 102793)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operations' → logprob: -0.5370441675186157
    2. ' opérations' → logprob: -1.2870441675186157
    3. ' operations' → logprob: -2.287044048309326
    4. ' op' → logprob: -4.412044048309326
    5. 'op' → logprob: -4.537044048309326
    6. 'operation' → logprob: -5.412044048309326
    7. 'ops' → logprob: -5.662044048309326
    8. '
' → logprob: -6.537044048309326
    9. ' opération' → logprob: -6.912044048309326
    10. ' operaciones' → logprob: -6.912044048309326

Token 371: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03640216961503029
    2. '
' → logprob: -3.4114022254943848
    3. '    
' → logprob: -6.661402225494385
    4. ' queue' → logprob: -7.411402225494385
    5. ',' → logprob: -8.286401748657227
    6. 'queue' → logprob: -8.661401748657227
    7. '	queue' → logprob: -8.911401748657227
    8. '  
' → logprob: -9.661401748657227
    9. '  ' → logprob: -10.036401748657227
    10. ')' → logprob: -10.661401748657227

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6995947957038879
    2. 'queue' → logprob: -0.6995947957038879
    3. ' queue' → logprob: -5.074594974517822
    4. 'from' → logprob: -9.574594497680664
    5. 'q' → logprob: -9.949594497680664
    6. '	queue' → logprob: -10.824594497680664
    7. '```' → logprob: -11.324594497680664
    8. '    
' → logprob: -11.699594497680664
    9. 'que' → logprob: -12.199594497680664
    10. 'visited' → logprob: -13.449594497680664

Token 373: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.007321577984839678
    2. 'from' → logprob: -5.382321357727051
    3. 'q' → logprob: -6.382321357727051
    4. 'visited' → logprob: -8.25732135772705
    5. ' queue' → logprob: -8.25732135772705
    6. 'front' → logprob: -8.50732135772705
    7. 'reachable' → logprob: -8.88232135772705
    8. 'for' → logprob: -10.25732135772705
    9. 'states' → logprob: -10.38232135772705
    10. 'que' → logprob: -10.88232135772705

Token 374: ' Pour' (ID: 13931)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.01461660023778677
    2. 'from' → logprob: -5.1396164894104
    3. 'front' → logprob: -5.5146164894104
    4. ' queue' → logprob: -6.5146164894104
    5. 'for' → logprob: -6.6396164894104
    6. 'q' → logprob: -7.0146164894104
    7. 'visited' → logprob: -7.8896164894104
    8. 'states' → logprob: -8.889616966247559
    9. 'reachable' → logprob: -9.014616966247559
    10. 'operations' → logprob: -9.639616966247559

Token 375: ' accél' (ID: 152966)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43013912439346313
    2. 'k' → logprob: -1.4301390647888184
    3. 'queue' → logprob: -3.5551390647888184
    4. ' i' → logprob: -3.8051390647888184
    5. ' k' → logprob: -4.305139064788818
    6. 'q' → logprob: -4.555139064788818
    7. ' chaque' → logprob: -5.055139064788818
    8. ' queue' → logprob: -5.055139064788818
    9. 'comb' → logprob: -5.305139064788818
    10. 'p' → logprob: -5.680139064788818

Token 376: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.00493914308026433
    2. 'él' → logprob: -6.254939079284668
    3. 'erer' → logprob: -6.754939079284668
    4. 'er' → logprob: -6.879939079284668
    5. 'ération' → logprob: -8.254939079284668
    6. 'eler' → logprob: -8.504939079284668
    7. 'el' → logprob: -9.754939079284668
    8. 'éder' → logprob: -9.879939079284668
    9. 'é' → logprob: -10.254939079284668
    10. 'éer' → logprob: -10.504939079284668

Token 377: ',' (ID: 11)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.3109207153320312
    2. 'i' → logprob: -1.5609207153320312
    3. ' queue' → logprob: -1.5609207153320312
    4. 'k' → logprob: -2.1859207153320312
    5. ' k' → logprob: -3.1859207153320312
    6. ' i' → logprob: -3.3109207153320312
    7. 'visited' → logprob: -3.6859207153320312
    8. 'q' → logprob: -4.435920715332031
    9. ' visited' → logprob: -4.810920715332031
    10. 'ex' → logprob: -4.810920715332031

Token 378: ' on' (ID: 402)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.0246392488479614
    2. 'front' → logprob: -1.5246392488479614
    3. 'reachable' → logprob: -2.274639129638672
    4. 'visited' → logprob: -2.524639129638672
    5. 'states' → logprob: -3.024639129638672
    6. 'known' → logprob: -3.024639129638672
    7. 'from' → logprob: -3.274639129638672
    8. ' queue' → logprob: -3.524639129638672
    9. ' reachable' → logprob: -4.774639129638672
    10. 'ex' → logprob: -4.774639129638672

Token 379: ' stock' (ID: 6546)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.4778881072998047
    2. 'contin' → logprob: -1.4778881072998047
    3. 'continue' → logprob: -2.2278881072998047
    4. 'queue' → logprob: -2.7278881072998047
    5. 's' → logprob: -2.8528881072998047
    6. 'pe' → logprob: -2.9778881072998047
    7. '_queue' → logprob: -3.1028881072998047
    8. 'aj' → logprob: -3.9778881072998047
    9. '#' → logprob: -4.102888107299805
    10. 'enqueue' → logprob: -4.227888107299805

Token 380: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.016256291419267654
    2. 'er' → logprob: -4.141256332397461
    3. '   ' → logprob: -8.516256332397461
    4. 'age' → logprob: -11.266256332397461
    5. 'é' → logprob: -12.891256332397461
    6. 'ez' → logprob: -13.641256332397461
    7. '       ' → logprob: -13.891256332397461
    8. '
' → logprob: -14.141256332397461
    9. 'era' → logprob: -14.391256332397461
    10. 'ons' → logprob: -14.641256332397461

Token 381: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.37309759855270386
    2. ' les' → logprob: -1.9980976581573486
    3. 'reachable' → logprob: -3.3730976581573486
    4. 'for' → logprob: -3.4980976581573486
    5. 'pour' → logprob: -3.8730976581573486
    6. ' reachable' → logprob: -4.2480974197387695
    7. '   ' → logprob: -4.3730974197387695
    8. 'visited' → logprob: -4.8730974197387695
    9. ' for' → logprob: -5.2480974197387695
    10. 't' → logprob: -5.3730974197387695

Token 382: ' liste' (ID: 31719)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5671133399009705
    2. 'reachable' → logprob: -2.0671133995056152
    3. 'front' → logprob: -2.5671133995056152
    4. 'possible' → logprob: -3.0671133995056152
    5. 'sets' → logprob: -3.3171133995056152
    6. 'file' → logprob: -3.4421133995056152
    7. ' queue' → logprob: -3.4421133995056152
    8. 'poss' → logprob: -4.692113399505615
    9. 'visited' → logprob: -4.692113399505615
    10. 'known' → logprob: -4.817113399505615

Token 383: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8963573575019836
    2. '_des' → logprob: -1.3963572978973389
    3. 'des' → logprob: -1.5213572978973389
    4. '   ' → logprob: -4.146357536315918
    5. ' d' → logprob: -4.271357536315918
    6. 'd' → logprob: -4.396357536315918
    7. '_ops' → logprob: -4.771357536315918
    8. 'de' → logprob: -4.771357536315918
    9. '_re' → logprob: -4.771357536315918
    10. '[]' → logprob: -4.771357536315918

Token 384: ' expos' (ID: 10300)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.7472098469734192
    2. ' expos' → logprob: -1.7472097873687744
    3. ' états' → logprob: -2.4972097873687744
    4. 'pu' → logprob: -3.2472097873687744
    5. 'states' → logprob: -3.2472097873687744
    6. 'exp' → logprob: -3.2472097873687744
    7. ' states' → logprob: -3.3722097873687744
    8. ' puiss' → logprob: -3.8722097873687744
    9. ' ex' → logprob: -4.4972100257873535
    10. 'dé' → logprob: -4.6222100257873535

Token 385: 'ants' (ID: 2027)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.19575533270835876
    2. '   ' → logprob: -3.3207552433013916
    3. 'és' → logprob: -3.9457552433013916
    4. 'pos' → logprob: -4.445755481719971
    5. 'ons' → logprob: -4.445755481719971
    6. 'ants' → logprob: -4.570755481719971
    7. 'ats' → logprob: -4.820755481719971
    8. 'os' → logprob: -4.945755481719971
    9. 'ints' → logprob: -4.945755481719971
    10. '[' → logprob: -5.070755481719971

Token 386: ' déjà' (ID: 21229)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.5970450639724731
    2. '_at' → logprob: -2.0970449447631836
    3. ' atte' → logprob: -2.2220449447631836
    4. 'conn' → logprob: -2.8470449447631836
    5. 'dé' → logprob: -3.2220449447631836
    6. '   ' → logprob: -3.3470449447631836
    7. '_' → logprob: -3.9720449447631836
    8. ' accessibles' → logprob: -4.597044944763184
    9. 'poss' → logprob: -4.972044944763184
    10. '[]' → logprob: -5.597044944763184

Token 387: ' déc' (ID: 8498)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.020615343004465103
    2. ' atte' → logprob: -5.270615577697754
    3. 'at' → logprob: -5.395615577697754
    4. '_at' → logprob: -5.395615577697754
    5. 'conn' → logprob: -6.020615577697754
    6. 'vis' → logprob: -7.270615577697754
    7. 'ob' → logprob: -7.395615577697754
    8. 'util' → logprob: -7.895615577697754
    9. 'valid' → logprob: -8.395615577697754
    10. ' at' → logprob: -8.520615577697754

Token 388: 'ouver' (ID: 10298)
  Prédit: 'ouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouver' → logprob: -0.00121916679199785
    2. 'ouverte' → logprob: -7.751219272613525
    3. 'ou' → logprob: -7.876219272613525
    4. 'ouvr' → logprob: -8.876218795776367
    5. 'ouv' → logprob: -9.876218795776367
    6. 'over' → logprob: -10.126218795776367
    7. 'ont' → logprob: -10.126218795776367
    8. '[' → logprob: -11.251218795776367
    9. 'onts' → logprob: -11.251218795776367
    10. 'oints' → logprob: -11.376218795776367

Token 389: 'ts' (ID: 1561)
  Prédit: 'erts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erts' → logprob: -0.022576941177248955
    2. 'verts' → logprob: -4.772576808929443
    3. 'ts' → logprob: -5.147576808929443
    4. 'us' → logprob: -6.022576808929443
    5. 'ert' → logprob: -6.272576808929443
    6. 'erte' → logprob: -6.897576808929443
    7. 'ers' → logprob: -7.647576808929443
    8. 'ents' → logprob: -8.147577285766602
    9. 'orts' → logprob: -8.272577285766602
    10. 's' → logprob: -8.272577285766602

Token 390: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039280250668525696
    2. 'ex' → logprob: -4.539280414581299
    3. ',' → logprob: -4.789280414581299
    4. 'reachable' → logprob: -5.289280414581299
    5. 'expl' → logprob: -5.539280414581299
    6. 'known' → logprob: -6.414280414581299
    7. ' discovered' → logprob: -6.414280414581299
    8. 'found' → logprob: -6.664280414581299
    9. 'visited' → logprob: -6.789280414581299
    10. ' reachable' → logprob: -7.414280414581299

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0049559855833649635
    2. 'ex' → logprob: -6.504955768585205
    3. ',' → logprob: -7.004955768585205
    4. 'reachable' → logprob: -7.129955768585205
    5. 'expl' → logprob: -7.629955768585205
    6. 're' → logprob: -8.754956245422363
    7. 'visited' → logprob: -9.004956245422363
    8. ' reachable' → logprob: -9.254956245422363
    9. ' discovered' → logprob: -9.379956245422363
    10. 'dis' → logprob: -9.504956245422363

Token 392: ' known' (ID: 5542)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4898182153701782
    2. 'known' (adapté à ' known') → logprob: -1.4898182153701782
    3. 'reachable' → logprob: -1.6148182153701782
    4. 'ex' → logprob: -2.1148180961608887
    5. 'found' → logprob: -2.3648180961608887
    6. 'visited' → logprob: -3.8648180961608887
    7. ' discovered' → logprob: -3.8648180961608887
    8. 'states' → logprob: -4.239818096160889
    9. 'dis' → logprob: -4.364818096160889
    10. 're' → logprob: -4.489818096160889

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025186091661453
    2. '=' → logprob: -2.3502519130706787
    3. 's' → logprob: -11.475252151489258
    4. '=[]' → logprob: -11.475252151489258
    5. '   ' → logprob: -11.975252151489258
    6. '=[' → logprob: -12.475252151489258
    7. '=[]
' → logprob: -12.975252151489258
    8. ',' → logprob: -13.225252151489258
    9. '_ex' → logprob: -13.475252151489258
    10. '	' → logprob: -13.600252151489258

Token 394: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13106901943683624
    2. '{' → logprob: -2.1310689449310303
    3. 'set' → logprob: -6.256069183349609
    4. ' [' → logprob: -6.381069183349609
    5. ' {' → logprob: -8.00606918334961
    6. 'deque' → logprob: -9.00606918334961
    7. ' set' → logprob: -9.75606918334961
    8. ' deque' → logprob: -12.13106918334961
    9. '[]' → logprob: -14.88106918334961
    10. '[{' → logprob: -16.00606918334961

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009143244242295623
    2. 'False' → logprob: -7.125914096832275
    3. '[]' → logprob: -10.500914573669434
    4. ']' → logprob: -10.875914573669434
    5. '[' → logprob: -10.875914573669434
    6. 'i' → logprob: -10.875914573669434
    7. ' ' → logprob: -12.500914573669434
    8. 'True' → logprob: -12.625914573669434
    9. '[]
' → logprob: -12.625914573669434
    10. '[],' → logprob: -12.750914573669434

Token 396: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023920904844999313
    2. ']
' → logprob: -3.773921012878418
    3. ' ]' → logprob: -7.773921012878418
    4. ',' → logprob: -9.023921012878418
    5. ']
' → logprob: -10.023921012878418
    6. ']

' → logprob: -10.148921012878418
    7. ' ]
' → logprob: -10.773921012878418
    8. '1' → logprob: -11.148921012878418
    9. '0' → logprob: -12.523921012878418
    10. '   ' → logprob: -13.023921012878418

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004915529862046242
    2. '    
' → logprob: -8.50049114227295
    3. 'for' → logprob: -8.87549114227295
    4. ',' → logprob: -9.75049114227295
    5. 'queue' → logprob: -10.25049114227295
    6. ' for' → logprob: -10.62549114227295
    7. ' queue' → logprob: -11.87549114227295
    8. '
' → logprob: -12.12549114227295
    9. ')' → logprob: -12.37549114227295
    10. '	queue' → logprob: -12.62549114227295

Token 398: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11745759099721909
    2. 'queue' → logprob: -2.367457628250122
    3. '   ' → logprob: -4.242457389831543
    4. ' for' → logprob: -6.492457389831543
    5. 'from' → logprob: -7.117457389831543
    6. ' queue' → logprob: -8.242457389831543
    7. 'q' → logprob: -9.742457389831543
    8. 'while' → logprob: -11.117457389831543
    9. 'steps' → logprob: -11.367457389831543
    10. 'front' → logprob: -11.617457389831543

Token 399: ' Queue' (ID: 35581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2653687298297882
    2. 'queue' → logprob: -1.5153687000274658
    3. '   ' → logprob: -4.640368938446045
    4. 'from' → logprob: -6.015368938446045
    5. ' for' → logprob: -7.515368938446045
    6. ' queue' → logprob: -7.890368938446045
    7. 'q' → logprob: -9.140368461608887
    8. 'front' → logprob: -9.640368461608887
    9. 'while' → logprob: -9.640368461608887
    10. 'i' → logprob: -9.640368461608887

Token 400: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740794599056244
    2. '=' → logprob: -0.9740794897079468
    3. ',' → logprob: -14.224079132080078
    4. '   ' → logprob: -14.474079132080078
    5. ')' → logprob: -15.099079132080078
    6. '=[]' → logprob: -15.349079132080078
    7. ' ' → logprob: -15.474079132080078
    8. 'deque' → logprob: -16.099079132080078
    9. ':' → logprob: -16.349079132080078
    10. '(queue' → logprob: -16.474079132080078

Token 401: ' BFS' (ID: 190016)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0067279222421348095
    2. ' deque' → logprob: -5.006727695465088
    3. 'queue' → logprob: -12.381728172302246
    4. 'de' → logprob: -12.381728172302246
    5. 'que' → logprob: -12.631728172302246
    6. 'b' → logprob: -15.506728172302246
    7. 'q' → logprob: -15.881728172302246
    8. 'Deque' → logprob: -16.13172721862793
    9. 'enqueue' → logprob: -16.25672721862793
    10. 'd' → logprob: -16.25672721862793

Token 402: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028566619381308556
    2. '=' → logprob: -3.903566598892212
    3. '   ' → logprob: -4.903566837310791
    4. ':' → logprob: -8.028566360473633
    5. 'queue' → logprob: -9.153566360473633
    6. ' queue' → logprob: -9.778566360473633
    7. 'q' → logprob: -10.903566360473633
    8. '(queue' → logprob: -11.028566360473633
    9. ' :' → logprob: -11.528566360473633
    10. ',' → logprob: -11.778566360473633

Token 403: ' on' (ID: 402)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.011450017802417278
    2. '   ' → logprob: -4.886449813842773
    3. ' deque' → logprob: -6.136449813842773
    4. 'queue' → logprob: -6.511449813842773
    5. 'q' → logprob: -9.386449813842773
    6. 'dq' → logprob: -9.636449813842773
    7. 'que' → logprob: -10.636449813842773
    8. ' queue' → logprob: -12.136449813842773
    9. 'from' → logprob: -12.261449813842773
    10. 'de' → logprob: -13.761449813842773

Token 404: ' traite' (ID: 180696)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.11873865127563477
    2. '.append' → logprob: -2.3687386512756348
    3. 'put' → logprob: -4.243738651275635
    4. ' append' → logprob: -6.618738651275635
    5. '   ' → logprob: -6.993738651275635
    6. 'app' → logprob: -7.368738651275635
    7. '.' → logprob: -7.493738651275635
    8. 'extend' → logprob: -9.368738174438477
    9. '.put' → logprob: -9.368738174438477
    10. '.extend' → logprob: -9.493738174438477

Token 405: ' les' (ID: 1341)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.09634101390838623
    2. '   ' → logprob: -3.721341133117676
    3. ' deque' → logprob: -3.846341133117676
    4. 'known' → logprob: -3.971341133117676
    5. ' known' → logprob: -5.096341133117676
    6. 'q' → logprob: -5.471341133117676
    7. 'de' → logprob: -5.846341133117676
    8. 'queue' → logprob: -5.846341133117676
    9. 'ex' → logprob: -5.971341133117676
    10. 'que' → logprob: -6.221341133117676

Token 406: ' expos' (ID: 10300)
  Prédit: 'known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'known' → logprob: -0.6345066428184509
    2. ' known' → logprob: -1.2595067024230957
    3. 'deque' → logprob: -2.5095067024230957
    4. 'ex' → logprob: -3.0095067024230957
    5. ' ex' → logprob: -4.509506702423096
    6. ' deque' → logprob: -4.634506702423096
    7. ' states' → logprob: -5.259506702423096
    8. 'k' → logprob: -5.509506702423096
    9. ' k' → logprob: -5.759506702423096
    10. ' current' → logprob: -5.884506702423096

Token 407: 'ants' (ID: 2027)
  Prédit: 'nts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nts' → logprob: -0.3749660551548004
    2. 'ts' → logprob: -1.624966025352478
    3. 'r' → logprob: -2.7499661445617676
    4. 'ents' → logprob: -3.7499661445617676
    5. 's' → logprob: -4.374966144561768
    6. 'ints' → logprob: -5.749966144561768
    7. 't' → logprob: -5.874966144561768
    8. 'n' → logprob: -5.999966144561768
    9. 'nants' → logprob: -5.999966144561768
    10. 'ats' → logprob: -7.124966144561768

Token 408: ' déc' (ID: 8498)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11327703297138214
    2. '=' → logprob: -2.613276958465576
    3. '   ' → logprob: -3.738276958465576
    4. 'deque' → logprob: -5.238276958465576
    5. ',' → logprob: -6.238276958465576
    6. 'queue' → logprob: -7.613276958465576
    7. ' deque' → logprob: -7.738276958465576
    8. 'de' → logprob: -7.738276958465576
    9. '(queue' → logprob: -7.988276958465576
    10. 'q' → logprob: -7.988276958465576

Token 409: 'ouver' (ID: 10298)
  Prédit: 'ouver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouver' → logprob: -0.06931142508983612
    2. 'u' → logprob: -2.8193113803863525
    3. 'ouverte' → logprob: -6.069311618804932
    4. 'ue' → logprob: -6.319311618804932
    5. 'ouvr' → logprob: -6.819311618804932
    6. 'ont' → logprob: -7.944311618804932
    7. 'ou' → logprob: -8.319311141967773
    8. 'over' → logprob: -8.319311141967773
    9. 'us' → logprob: -8.444311141967773
    10. 'ued' → logprob: -8.694311141967773

Token 410: 'ts' (ID: 1561)
  Prédit: 'ued'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.16494791209697723
    2. 'u' → logprob: -2.289947986602783
    3. 'ed' → logprob: -4.289947986602783
    4. 'r' → logprob: -4.414947986602783
    5. 'red' → logprob: -4.789947986602783
    6. 'ue' → logprob: -4.789947986602783
    7. 'd' → logprob: -5.164947986602783
    8. 'ues' → logprob: -6.539947986602783
    9. 'ered' → logprob: -8.164947509765625
    10. '```' → logprob: -8.789947509765625

Token 411: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23752829432487488
    2. '   ' → logprob: -2.4875283241271973
    3. ',' → logprob: -2.6125283241271973
    4. '=' → logprob: -3.3625283241271973
    5. 'deque' → logprob: -4.612528324127197
    6. 'queue' → logprob: -5.737528324127197
    7. ' deque' → logprob: -5.862528324127197
    8. ' queue' → logprob: -6.362528324127197
    9. '(queue' → logprob: -6.487528324127197
    10. 'de' → logprob: -8.737527847290039

Token 412: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1154082864522934
    2. '   ' → logprob: -2.615408182144165
    3. '=' → logprob: -3.365408182144165
    4. 'q' → logprob: -7.865408420562744
    5. ',' → logprob: -7.990408420562744
    6. 'queue' → logprob: -8.115407943725586
    7. 'deque' → logprob: -9.490407943725586
    8. ' ' → logprob: -10.365407943725586
    9. ':' → logprob: -10.365407943725586
    10. ' queue' → logprob: -10.490407943725586

Token 413: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.21696379780769348
    2. ' queue' → logprob: -1.716963768005371
    3. 'q' → logprob: -4.216963768005371
    4. ' q' → logprob: -7.716963768005371
    5. 'que' → logprob: -9.091963768005371
    6. 'deque' → logprob: -9.466963768005371
    7. 'Q' → logprob: -10.591963768005371
    8. '   ' → logprob: -11.341963768005371
    9. 'dq' → logprob: -11.966963768005371
    10. ' que' → logprob: -12.591963768005371

Token 414: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132619559764862
    2. '=' → logprob: -1.3132619857788086
    3. '.append' → logprob: -16.813261032104492
    4. '=[]' → logprob: -17.063261032104492
    5. '   ' → logprob: -17.063261032104492
    6. ' ' → logprob: -17.188261032104492
    7. ')' → logprob: -17.563261032104492
    8. '.' → logprob: -18.313261032104492
    9. '	' → logprob: -18.313261032104492
    10. '＝' → logprob: -18.438261032104492

Token 415: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0001234428636962548
    2. ' deque' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.125123977661133
    4. 'Deque' → logprob: -17.750123977661133
    5. 'de' → logprob: -17.875123977661133
    6. ' ' → logprob: -20.125123977661133
    7. 'collections' → logprob: -20.500123977661133
    8. '[(' → logprob: -22.000123977661133
    9. '  ' → logprob: -22.625123977661133
    10. '[' → logprob: -22.875123977661133

Token 416: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.06401680409908295
    2. '(' → logprob: -2.939016819000244
    3. '([(' → logprob: -4.814016819000244
    4. '()' → logprob: -7.439016819000244
    5. '()
' → logprob: -8.189016342163086
    6. '((' → logprob: -9.439016342163086
    7. '([[' → logprob: -11.689016342163086
    8. 'known' → logprob: -11.689016342163086
    9. '[' → logprob: -12.564016342163086
    10. '([
' → logprob: -12.814016342163086

Token 417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.125015258789062
    3. ' ' → logprob: -16.250015258789062
    4. '[' → logprob: -17.500015258789062
    5. '   ' → logprob: -17.500015258789062
    6. '{' → logprob: -18.000015258789062
    7. 'i' → logprob: -18.000015258789062
    8. '(i' → logprob: -18.375015258789062
    9. ' (' → logprob: -18.562515258789062
    10. ']' → logprob: -18.625015258789062

Token 418: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -4.8232690460281447e-05
    2. ')' → logprob: -11.000048637390137
    3. '])
' → logprob: -11.375048637390137
    4. ')])' → logprob: -11.625048637390137
    5. ' ])' → logprob: -11.750048637390137
    6. '])

' → logprob: -13.750048637390137
    7. '))' → logprob: -14.750048637390137
    8. ',' → logprob: -15.125048637390137
    9. ')]' → logprob: -15.125048637390137
    10. ''])' → logprob: -15.500048637390137

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03830540552735329
    2. 'while' → logprob: -3.4133055210113525
    3. ' while' → logprob: -5.538305282592773
    4. '	while' → logprob: -7.288305282592773
    5. '   ' → logprob: -11.288305282592773
    6. '    
' → logprob: -11.663305282592773
    7. '
' → logprob: -12.663305282592773
    8. ')' → logprob: -12.663305282592773
    9. ',' → logprob: -13.538305282592773
    10. '```' → logprob: -14.288305282592773

Token 420: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02990703657269478
    2. '   ' → logprob: -3.529906988143921
    3. ' while' → logprob: -8.7799072265625
    4. '	while' → logprob: -12.9049072265625
    5. '```' → logprob: -16.1549072265625
    6. 'for' → logprob: -16.4049072265625
    7. '
' → logprob: -17.0299072265625
    8. '    
' → logprob: -17.1549072265625
    9. 'While' → logprob: -17.5299072265625
    10. '  ' → logprob: -17.5299072265625

Token 421: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0003382038848940283
    2. ' queue' → logprob: -8.000338554382324
    3. 'len' → logprob: -13.125338554382324
    4. '	queue' → logprob: -14.625338554382324
    5. '(queue' → logprob: -16.250337600708008
    6. 'que' → logprob: -16.250337600708008
    7. '   ' → logprob: -16.750337600708008
    8. ' ' → logprob: -18.500337600708008
    9. '  ' → logprob: -18.625337600708008
    10. '
' → logprob: -19.125337600708008

Token 422: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04701430723071098
    2. '.p' → logprob: -3.5470142364501953
    3. ':
' → logprob: -4.172014236450195
    4. '.pop' → logprob: -8.047014236450195
    5. '):' → logprob: -8.047014236450195
    6. '   ' → logprob: -8.297014236450195
    7. '():' → logprob: -8.297014236450195
    8. '.' → logprob: -8.922014236450195
    9. 'opleft' → logprob: -9.172014236450195
    10. '):
' → logprob: -9.797014236450195

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022772490978240967
    2. '   ' → logprob: -3.8977725505828857
    3. 'current' → logprob: -7.147772312164307
    4. ' current' → logprob: -7.272772312164307
    5. ' k' → logprob: -7.397772312164307
    6. 'k' → logprob: -9.272772789001465
    7. 'u' → logprob: -11.897772789001465
    8. 'cur' → logprob: -11.897772789001465
    9. '```' → logprob: -12.022772789001465
    10. 'curr' → logprob: -12.897772789001465

Token 424: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.06604479253292084
    2. 'current' → logprob: -2.816044807434082
    3. 'curr' → logprob: -5.816044807434082
    4. 'cur' → logprob: -7.566044807434082
    5. '   ' → logprob: -7.816044807434082
    6. 'u' → logprob: -8.816044807434082
    7. ' current' → logprob: -11.566044807434082
    8. 'x' → logprob: -12.316044807434082
    9. ' k' → logprob: -12.691044807434082
    10. '       ' → logprob: -13.441044807434082

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28122836351394653
    2. '=' → logprob: -1.4062283039093018
    3. '   ' → logprob: -9.531228065490723
    4. ')' → logprob: -13.906228065490723
    5. ' ' → logprob: -14.406228065490723
    6. '	' → logprob: -14.531228065490723
    7. '    ' → logprob: -14.781228065490723
    8. '=k' → logprob: -14.906228065490723
    9. 'p' → logprob: -15.031228065490723
    10. 's' → logprob: -15.156228065490723

Token 426: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.01814994215965271
    2. ' queue' → logprob: -4.0181498527526855
    3. ' ' → logprob: -16.893150329589844
    4. '   ' → logprob: -17.268150329589844
    5. '	queue' → logprob: -17.518150329589844
    6. 'que' → logprob: -18.643150329589844
    7. '  ' → logprob: -19.143150329589844
    8. '.queue' → logprob: -19.893150329589844
    9. '(queue' → logprob: -20.143150329589844
    10. '       ' → logprob: -21.018150329589844

Token 427: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00016229959146585315
    2. '.pop' → logprob: -8.875162124633789
    3. '.' → logprob: -10.750162124633789
    4. '   ' → logprob: -14.250162124633789
    5. ' .' → logprob: -15.500162124633789
    6. 'p' → logprob: -15.750162124633789
    7. '=' → logprob: -18.37516212463379
    8. ').' → logprob: -18.62516212463379
    9. '       ' → logprob: -18.75016212463379
    10. 'pop' → logprob: -19.12516212463379

Token 428: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.029770513996481895
    2. 'op' → logprob: -3.529770612716675
    3. 'ople' → logprob: -10.904770851135254
    4. 'opl' → logprob: -13.654770851135254
    5. 'opf' → logprob: -16.529769897460938
    6. 'p' → logprob: -16.529769897460938
    7. '   ' → logprob: -16.779769897460938
    8. 'oplevel' → logprob: -17.279769897460938
    9. 'oph' → logprob: -17.404769897460938
    10. 'opup' → logprob: -17.404769897460938

Token 429: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2569568157196045
    2. '
' → logprob: -1.5069568157196045
    3. '        
' → logprob: -5.506957054138184
    4. '
' → logprob: -7.756957054138184
    5. ' 
' → logprob: -9.381957054138184
    6. '    
' → logprob: -9.631957054138184
    7. '  
' → logprob: -9.631957054138184
    8. 'for' → logprob: -9.756957054138184
    9. '   ' → logprob: -10.381957054138184
    10. '       
' → logprob: -10.381957054138184

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02131880261003971
    2. ' for' → logprob: -4.1463189125061035
    3. 'for' → logprob: -5.2713189125061035
    4. '   ' → logprob: -9.646318435668945
    5. '        
' → logprob: -10.646318435668945
    6. '#' → logprob: -11.646318435668945
    7. ',' → logprob: -11.771318435668945
    8. '	for' → logprob: -12.021318435668945
    9. '           ' → logprob: -12.271318435668945
    10. '	' → logprob: -13.021318435668945

Token 431: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.265633419388905e-05
    2. '       ' → logprob: -9.750062942504883
    3. ' for' → logprob: -12.875062942504883
    4. 'current' → logprob: -13.875062942504883
    5. '   ' → logprob: -15.000062942504883
    6. 'ops' → logprob: -15.750062942504883
    7. '#' (adapté à ' #') → logprob: -15.875062942504883
    8. '	for' → logprob: -16.000062942504883
    9. 'if' → logprob: -18.000062942504883
    10. '        
' → logprob: -18.125062942504883

Token 432: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.306760805164231e-05
    2. '       ' → logprob: -11.62501335144043
    3. '#' → logprob: -13.00001335144043
    4. ' for' → logprob: -13.50001335144043
    5. '   ' → logprob: -15.12501335144043
    6. 'current' → logprob: -15.87501335144043
    7. 'new' → logprob: -17.00001335144043
    8. '	for' → logprob: -17.12501335144043
    9. 'ops' → logprob: -17.25001335144043
    10. '        
' → logprob: -17.62501335144043

Token 433: ' chaque' (ID: 21194)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004947916604578495
    2. 'i' → logprob: -6.629948139190674
    3. 'x' → logprob: -6.879948139190674
    4. 'ex' → logprob: -7.379948139190674
    5. 'exp' → logprob: -7.504948139190674
    6. 'q' → logprob: -8.004947662353516
    7. 'e' → logprob: -8.254947662353516
    8. 'new' → logprob: -8.879947662353516
    9. 'base' → logprob: -9.129947662353516
    10. 'm' → logprob: -9.379947662353516

Token 434: ' paire' (ID: 148856)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008521550917066634
    2. 'i' → logprob: -7.375852108001709
    3. 'ex' → logprob: -9.625852584838867
    4. 'm' → logprob: -9.875852584838867
    5. 'x' → logprob: -10.375852584838867
    6. 'e' → logprob: -10.875852584838867
    7. 'exp' → logprob: -10.875852584838867
    8. ' p' → logprob: -11.250852584838867
    9. 'a' → logprob: -11.500852584838867
    10. 'j' → logprob: -12.375852584838867

Token 435: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.30135485529899597
    2. ' (' → logprob: -1.4263548851013184
    3. 'p' → logprob: -4.301354885101318
    4. ' p' → logprob: -5.551354885101318
    5. '   ' → logprob: -7.176354885101318
    6. '(i' → logprob: -7.426354885101318
    7. '(k' → logprob: -7.426354885101318
    8. '       ' → logprob: -8.67635440826416
    9. '(' → logprob: -9.05135440826416
    10. ' ' → logprob: -9.80135440826416

Token 436: 'k' (ID: 74)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0034591832663863897
    2. '(p' → logprob: -6.2534589767456055
    3. 'i' → logprob: -7.0034589767456055
    4. ' p' → logprob: -8.003458976745605
    5. 'k' → logprob: -9.253458976745605
    6. '(k' → logprob: -10.003458976745605
    7. 'a' → logprob: -10.253458976745605
    8. '(i' → logprob: -10.378458976745605
    9. ')' → logprob: -10.503458976745605
    10. ' (' → logprob: -11.003458976745605

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014415422920137644
    2. ',p' → logprob: -7.501441478729248
    3. ' ,' → logprob: -8.251441955566406
    4. '_,' → logprob: -8.376441955566406
    5. ',k' → logprob: -9.001441955566406
    6. 'p' → logprob: -9.501441955566406
    7. 'known' → logprob: -9.751441955566406
    8. '1' → logprob: -10.751441955566406
    9. 'for' → logprob: -10.876441955566406
    10. '2' → logprob: -10.876441955566406

Token 438: ' m' (ID: 284)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6119755506515503
    2. 'm' → logprob: -1.2369755506515503
    3. 'x' → logprob: -1.9869755506515503
    4. 'k' → logprob: -4.11197566986084
    5. 'known' → logprob: -5.11197566986084
    6. 'q' → logprob: -6.11197566986084
    7. 'l' → logprob: -6.86197566986084
    8. 'e' → logprob: -6.86197566986084
    9. 'i' → logprob: -7.23697566986084
    10. 'j' → logprob: -7.61197566986084

Token 439: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002736138121690601
    2. '),' → logprob: -9.500273704528809
    3. ' in' → logprob: -9.625273704528809
    4. '):' → logprob: -9.875273704528809
    5. 'for' → logprob: -10.625273704528809
    6. ' )' → logprob: -10.750273704528809
    7. '):
' → logprob: -11.250273704528809
    8. 'in' → logprob: -11.875273704528809
    9. ')
' → logprob: -12.250273704528809
    10. '
' → logprob: -13.125273704528809

Token 440: ' où' (ID: 15113)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.633464515209198
    2. ' for' → logprob: -1.0084645748138428
    3. 'for' → logprob: -3.1334645748138428
    4. ' in' → logprob: -3.6334645748138428
    5. ',' → logprob: -4.133464336395264
    6. '           ' → logprob: -4.508464336395264
    7. ':' → logprob: -5.883464336395264
    8. '   ' → logprob: -7.008464336395264
    9. ' dans' → logprob: -7.133464336395264
    10. 'in' → logprob: -7.258464336395264

Token 441: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006715967319905758
    2. ' m' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.381715774536133
    4. ' ' → logprob: -16.506715774536133
    5. 'k' → logprob: -16.631715774536133
    6. ' ' → logprob: -16.756715774536133
    7. 'for' → logprob: -17.006715774536133
    8. '  ' → logprob: -17.131715774536133
    9. '    ' → logprob: -17.381715774536133
    10. '	m' → logprob: -17.631715774536133

Token 442: ' est' (ID: 893)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2254982441663742
    2. ' in' → logprob: -1.6004981994628906
    3. '=' → logprob: -10.85049819946289
    4. ' =' → logprob: -11.35049819946289
    5. '_in' → logprob: -11.47549819946289
    6. '<|end|>' → logprob: -12.10049819946289
    7. ' ' → logprob: -12.22549819946289
    8. ' en' → logprob: -12.35049819946289
    9. ')' → logprob: -12.47549819946289
    10. 's' → logprob: -12.72549819946289

Token 443: ' un' (ID: 537)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6624983549118042
    2. 'dans' → logprob: -1.5374983549118042
    3. 'known' → logprob: -1.7874983549118042
    4. ' in' → logprob: -2.9124984741210938
    5. ' dans' → logprob: -3.4124984741210938
    6. ' known' → logprob: -4.787498474121094
    7. ' connu' → logprob: -5.537498474121094
    8. 'con' → logprob: -6.787498474121094
    9. 'en' → logprob: -7.537498474121094
    10. 'une' → logprob: -8.412498474121094

Token 444: ' expos' (ID: 10300)
  Prédit: 'known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'known' → logprob: -0.13106516003608704
    2. ' in' → logprob: -2.7560651302337646
    3. 'in' → logprob: -3.3810651302337646
    4. ' known' → logprob: -4.631065368652344
    5. 'ex' → logprob: -4.756065368652344
    6. ' connu' → logprob: -6.381065368652344
    7. 'con' → logprob: -6.881065368652344
    8. 'element' → logprob: -6.881065368652344
    9. ' element' → logprob: -7.631065368652344
    10. ' élément' → logprob: -7.881065368652344

Token 445: 'ant' (ID: 493)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.8811766505241394
    2. 'ent' → logprob: -1.3811767101287842
    3. 'ant' → logprob: -1.8811767101287842
    4. 'u' → logprob: -2.506176710128784
    5. 'ponent' → logprob: -4.631176471710205
    6. 'on' → logprob: -4.631176471710205
    7. 'pon' → logprob: -5.006176471710205
    8. 'tant' → logprob: -5.381176471710205
    9. 'rt' → logprob: -5.631176471710205
    10. 'p' → logprob: -5.818676471710205

Token 446: ' connu' (ID: 64644)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22563210129737854
    2. 'in' → logprob: -2.3506321907043457
    3. ' for' → logprob: -3.3506321907043457
    4. ' connu' → logprob: -3.8506321907043457
    5. '   ' → logprob: -4.350632190704346
    6. 'for' → logprob: -4.475632190704346
    7. ' known' → logprob: -5.100632190704346
    8. 'known' → logprob: -5.475632190704346
    9. ' dans' → logprob: -5.850632190704346
    10. 'con' → logprob: -5.975632190704346

Token 447: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4759863615036011
    2. ' for' → logprob: -1.225986361503601
    3. ',' → logprob: -3.4759864807128906
    4. ':' → logprob: -3.7259864807128906
    5. '   ' → logprob: -4.225986480712891
    6. 'for' → logprob: -4.850986480712891
    7. '           ' → logprob: -5.475986480712891
    8. ' in' → logprob: -6.975986480712891
    9. ':
' → logprob: -7.100986480712891
    10. ' ,' → logprob: -7.350986480712891

Token 448: ' tent' (ID: 11645)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20435862243175507
    2. '       ' → logprob: -2.0793585777282715
    3. 'for' → logprob: -2.8293585777282715
    4. '	for' → logprob: -7.8293585777282715
    5. '   ' → logprob: -8.82935905456543
    6. '	' → logprob: -10.07935905456543
    7. ' ' → logprob: -10.07935905456543
    8. '	   ' → logprob: -10.20435905456543
    9. '           ' → logprob: -10.45435905456543
    10. '	       ' → logprob: -11.20435905456543

Token 449: 'ons' (ID: 1808)
  Prédit: 'ative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.05495946481823921
    2. 'e' → logprob: -3.179959535598755
    3. 'ant' → logprob: -5.429959297180176
    4. 'é' → logprob: -6.554959297180176
    5. 'ée' → logprob: -6.554959297180176
    6. 'atives' → logprob: -7.054959297180176
    7. 'ate' → logprob: -7.179959297180176
    8. 'ent' → logprob: -7.304959297180176
    9. 'er' → logprob: -7.429959297180176
    10. 'a' → logprob: -7.929959297180176

Token 450: ' multiplication' (ID: 86340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8032423257827759
    2. ' de' → logprob: -1.0532423257827759
    3. '   ' → logprob: -2.1782422065734863
    4. ' d' → logprob: -2.8032422065734863
    5. '    ' → logprob: -4.178242206573486
    6. 'd' → logprob: -5.803242206573486
    7. '        ' → logprob: -5.803242206573486
    8. 'de' → logprob: -6.428242206573486
    9. ':' → logprob: -6.553242206573486
    10. '           ' → logprob: -6.678242206573486

Token 451: '/div' (ID: 40715)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01231667771935463
    2. ',' → logprob: -5.012316703796387
    3. ' for' → logprob: -6.637316703796387
    4. ' et' → logprob: -6.887316703796387
    5. ' and' → logprob: -7.012316703796387
    6. 'for' → logprob: -7.262316703796387
    7. ' or' → logprob: -8.012316703796387
    8. '           ' → logprob: -8.387316703796387
    9. '        
' → logprob: -8.762316703796387
    10. '        ' → logprob: -8.762316703796387

Token 452: 'ision' (ID: 3625)
  Prédit: 'ision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -0.00040528984391130507
    2. 'isions' → logprob: -8.000405311584473
    3. '       ' → logprob: -10.875405311584473
    4. '   ' → logprob: -11.125405311584473
    5. 'ition' → logprob: -11.875405311584473
    6. 'isión' → logprob: -12.375405311584473
    7. 'ide' → logprob: -12.500405311584473
    8. 'ers' → logprob: -12.625405311584473
    9. 'ersion' → logprob: -13.500405311584473
    10. 'is' → logprob: -13.500405311584473

Token 453: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009471880039200187
    2. ' for' → logprob: -7.250946998596191
    3. ',' → logprob: -9.125946998596191
    4. 'for' → logprob: -9.750946998596191
    5. ':' → logprob: -10.625946998596191
    6. '           ' → logprob: -11.125946998596191
    7. '        
' → logprob: -12.125946998596191
    8. '   ' → logprob: -12.688446998596191
    9. '=' → logprob: -12.813446998596191
    10. '
' → logprob: -13.063446998596191

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013440960901789367
    2. ' for' → logprob: -9.875134468078613
    3. ',' → logprob: -10.375134468078613
    4. '<|end|>' → logprob: -10.625134468078613
    5. '        
' → logprob: -11.375134468078613
    6. '           ' → logprob: -12.500134468078613
    7. '	' → logprob: -12.875134468078613
    8. '   ' → logprob: -13.875134468078613
    9. 'for' → logprob: -13.875134468078613
    10. '        ' → logprob: -13.875134468078613

Token 455: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19282950460910797
    2. '       ' → logprob: -2.3178296089172363
    3. ' for' → logprob: -2.5678296089172363
    4. '   ' → logprob: -9.067829132080078
    5. '	for' → logprob: -9.692829132080078
    6. ' ' → logprob: -12.317829132080078
    7. '	' → logprob: -13.067829132080078
    8. '	   ' → logprob: -13.192829132080078
    9. '           ' → logprob: -14.067829132080078
    10. ' ' → logprob: -14.692829132080078

Token 456: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011048054322600365
    2. ' m' → logprob: -4.511047840118408
    3. '	m' → logprob: -16.38604736328125
    4. '   ' → logprob: -16.51104736328125
    5. 'known' → logprob: -16.63604736328125
    6. ' ' → logprob: -17.38604736328125
    7. 'k' → logprob: -18.76104736328125
    8. '  ' → logprob: -19.01104736328125
    9. ' known' → logprob: -19.01104736328125
    10. '_m' → logprob: -19.38604736328125

Token 457: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0889502614736557
    2. 'in' → logprob: -2.4639501571655273
    3. '	in' → logprob: -12.588950157165527
    4. ' ' → logprob: -12.713950157165527
    5. '  ' → logprob: -14.213950157165527
    6. '   ' → logprob: -14.213950157165527
    7. '_in' → logprob: -14.838950157165527
    8. 's' → logprob: -14.838950157165527
    9. ')' → logprob: -14.963950157165527
    10. 'In' → logprob: -15.463950157165527

Token 458: ' known' (ID: 5542)
  Prédit: 'known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'known' → logprob: -0.001929228543303907
    2. ' known' → logprob: -6.25192928314209
    3. 'unknown' → logprob: -14.50192928314209
    4. '   ' → logprob: -17.126928329467773
    5. ' ' → logprob: -17.626928329467773
    6. '
' → logprob: -17.626928329467773
    7. '-known' → logprob: -18.251928329467773
    8. '_known' → logprob: -18.501928329467773
    9. 'Known' → logprob: -18.876928329467773
    10. '  ' → logprob: -18.876928329467773

Token 459: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004095377866178751
    2. ':
' → logprob: -5.504095554351807
    3. ' :' → logprob: -11.504095077514648
    4. '):' → logprob: -12.629095077514648
    5. '       ' → logprob: -13.754095077514648
    6. ':
' → logprob: -14.504095077514648
    7. '   ' → logprob: -14.879095077514648
    8. '+' → logprob: -15.004095077514648
    9. '+:' → logprob: -15.129095077514648
    10. ']:' → logprob: -15.379095077514648

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03605622053146362
    2. ':' → logprob: -3.9110562801361084
    3. ':
' → logprob: -4.786056041717529
    4. '       ' → logprob: -5.661056041717529
    5. ',' → logprob: -6.661056041717529
    6. '	       ' → logprob: -7.661056041717529
    7. '            
' → logprob: -8.161056518554688
    8. '
' → logprob: -8.286056518554688
    9. '):
' → logprob: -8.536056518554688
    10. '        
' → logprob: -8.786056518554688

Token 461: ' nm' (ID: 43183)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4347159266471863
    2. 's' → logprob: -1.809715986251831
    3. '#' → logprob: -2.434715986251831
    4. 'for' → logprob: -3.684715986251831
    5. 'new' → logprob: -3.684715986251831
    6. 'sum' → logprob: -4.059715747833252
    7. 'add' → logprob: -5.184715747833252
    8. 'prod' → logprob: -5.184715747833252
    9. 'mul' → logprob: -5.309715747833252
    10. '+' → logprob: -5.434715747833252

Token 462: 'ul' (ID: 361)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038190897554159164
    2. '=' → logprob: -3.2881908416748047
    3. 'ult' → logprob: -10.163190841674805
    4. 'w' → logprob: -10.413190841674805
    5. 'ul' → logprob: -10.913190841674805
    6. '1' → logprob: -11.038190841674805
    7. '_plus' → logprob: -11.163190841674805
    8. '=k' → logprob: -11.788190841674805
    9. '+' → logprob: -12.538190841674805
    10. '_' → logprob: -13.038190841674805

Token 463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519368827342987
    2. '=' → logprob: -1.501936912536621
    3. '=k' → logprob: -12.001936912536621
    4. ' ' → logprob: -14.126936912536621
    5. '   ' → logprob: -14.876936912536621
    6. ',' → logprob: -16.501935958862305
    7. 'k' → logprob: -16.626935958862305
    8. '=
' → logprob: -16.626935958862305
    9. 't' → logprob: -16.751935958862305
    10. '  ' → logprob: -17.376935958862305

Token 464: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0206720617134124e-05
    2. ' k' → logprob: -11.50001049041748
    3. '           ' → logprob: -17.375009536743164
    4. '   ' → logprob: -19.750009536743164
    5. '[k' → logprob: -20.000009536743164
    6. ' ' → logprob: -20.750009536743164
    7. '	k' → logprob: -20.875009536743164
    8. '    ' → logprob: -21.125009536743164
    9. '               ' → logprob: -21.375009536743164
    10. '            ' → logprob: -21.500009536743164

Token 465: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31348180770874023
    2. ' +' → logprob: -1.3134818077087402
    3. '+m' → logprob: -8.438482284545898
    4. '+k' → logprob: -12.688482284545898
    5. '+
' → logprob: -15.188482284545898
    6. '＋' → logprob: -16.1884822845459
    7. '   ' → logprob: -16.6884822845459
    8. ' ' → logprob: -16.6884822845459
    9. ' plus' → logprob: -16.8134822845459
    10. '+n' → logprob: -17.3134822845459

Token 466: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0007099286303855479
    2. ' m' → logprob: -7.2507100105285645
    3. '	m' → logprob: -21.875709533691406
    4. '   ' → logprob: -24.000709533691406
    5. ' ' → logprob: -24.125709533691406
    6. 'м' → logprob: -24.375709533691406
    7. ' ' → logprob: -25.250709533691406
    8. '  ' → logprob: -25.500709533691406
    9. ' м' → logprob: -26.625709533691406
    10. '+m' → logprob: -26.875709533691406

Token 467: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37606891989707947
    2. '<|end|>' → logprob: -2.2510688304901123
    3. '            
' → logprob: -2.3760688304901123
    4. ' if' → logprob: -3.2510688304901123
    5. '
' → logprob: -3.6260688304901123
    6. ' 
' → logprob: -4.376069068908691
    7. '       ' → logprob: -4.501069068908691
    8. ')' → logprob: -5.501069068908691
    9. '<|end|>' → logprob: -5.751069068908691
    10. 'if' → logprob: -6.001069068908691

Token 468: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.028549075126648
    2. ' if' → logprob: -1.153549075126648
    3. '<|end|>' → logprob: -2.2785491943359375
    4. '            
' → logprob: -2.4035491943359375
    5. 'if' → logprob: -2.7785491943359375
    6. '
' → logprob: -3.2785491943359375
    7. ' 
' → logprob: -4.2785491943359375
    8. '               ' → logprob: -5.7785491943359375
    9. ')' → logprob: -6.1535491943359375
    10. '<|end|>' → logprob: -6.2785491943359375

Token 469: ' multiplication' (ID: 86340)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8415337204933167
    2. '<|end|>' → logprob: -1.5915336608886719
    3. ' 
' → logprob: -2.091533660888672
    4. ' if' → logprob: -2.341533660888672
    5. '           ' → logprob: -2.716533660888672
    6. 'if' → logprob: -3.466533660888672
    7. '            
' → logprob: -3.841533660888672
    8. ' ' → logprob: -4.341533660888672
    9. '<|end|>' → logprob: -5.966533660888672
    10. '  
' → logprob: -6.216533660888672

Token 470: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0944414958357811
    2. '<|end|>' → logprob: -2.8444414138793945
    3. '            
' → logprob: -3.9694414138793945
    4. ' if' → logprob: -5.0944414138793945
    5. '<|end|>' → logprob: -5.9694414138793945
    6. 'if' → logprob: -6.8444414138793945
    7. '            ' → logprob: -7.3444414138793945
    8. ')' → logprob: -7.4694414138793945
    9. '               ' → logprob: -7.8444414138793945
    10. '          ' → logprob: -7.8444414138793945

Token 471: ' expos' (ID: 10300)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.6293305158615112
    2. ' nm' → logprob: -1.6293305158615112
    3. 'if' → logprob: -2.754330635070801
    4. 'k' → logprob: -3.004330635070801
    5. ' if' → logprob: -3.254330635070801
    6. '1' → logprob: -3.504330635070801
    7. ' 
' → logprob: -3.629330635070801
    8. ' ' → logprob: -4.004330635070801
    9. ' k' → logprob: -4.629330635070801
    10. ')' → logprob: -5.004330635070801

Token 472: 'ant' (ID: 493)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.06210146099328995
    2. 'ponent' → logprob: -4.062101364135742
    3. 'ents' → logprob: -4.062101364135742
    4. 'ant' → logprob: -4.562101364135742
    5. 'n' → logprob: -5.437101364135742
    6. 'nent' → logprob: -6.062101364135742
    7. 'on' → logprob: -6.437101364135742
    8. ')' → logprob: -6.687101364135742
    9. 'p' → logprob: -7.062101364135742
    10. 'onent' → logprob: -7.312101364135742

Token 473: ' somme' (ID: 64484)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019219355657696724
    2. ' if' → logprob: -4.019219398498535
    3. 'if' → logprob: -7.269219398498535
    4. '            
' → logprob: -8.394219398498535
    5. '<|end|>' → logprob: -9.519219398498535
    6. '               ' → logprob: -11.269219398498535
    7. '		' → logprob: -11.519219398498535
    8. '          ' → logprob: -11.644219398498535
    9. ',' → logprob: -12.019219398498535
    10. '       ' → logprob: -12.269219398498535

Token 476: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00746523542329669
    2. '           ' → logprob: -5.007465362548828
    3. ' if' → logprob: -7.257465362548828
    4. 'nd' → logprob: -10.132465362548828
    5. '            
' → logprob: -13.632465362548828
    6. '#' → logprob: -14.132465362548828
    7. '               ' → logprob: -14.382465362548828
    8. 'n' → logprob: -14.507465362548828
    9. 'div' → logprob: -14.507465362548828
    10. '```' → logprob: -15.382465362548828

Token 477: ' nm' (ID: 43183)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.002425598446279764
    2. ' nm' → logprob: -6.502425670623779
    3. '1' → logprob: -7.002425670623779
    4. '0' → logprob: -12.252425193786621
    5. ' ' → logprob: -12.502425193786621
    6. '   ' → logprob: -13.002425193786621
    7. 'n' → logprob: -14.127425193786621
    8. '_nm' → logprob: -14.502425193786621
    9. '  ' → logprob: -14.752425193786621
    10. 'dist' → logprob: -15.752425193786621

Token 478: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -4.008129963040119e-06
    2. '<ul' → logprob: -12.875003814697266
    3. 'mul' → logprob: -14.000003814697266
    4. 'ул' → logprob: -15.375003814697266
    5. 'ult' → logprob: -16.250003814697266
    6. 'u' → logprob: -16.750003814697266
    7. '   ' → logprob: -16.750003814697266
    8. 'um' → logprob: -17.750003814697266
    9. '```' → logprob: -17.875003814697266
    10. '
' → logprob: -18.000003814697266

Token 479: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07888989895582199
    2. ' <=' → logprob: -2.578889846801758
    3. ')<=' → logprob: -17.203889846801758
    4. ']<=' → logprob: -17.703889846801758
    5. '<' → logprob: -17.828889846801758
    6. '```' → logprob: -17.953889846801758
    7. '>=' → logprob: -18.078889846801758
    8. '≤' → logprob: -18.203889846801758
    9. '>' → logprob: -18.328889846801758
    10. ' ' → logprob: -18.578889846801758

Token 480: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.0206720617134124e-05
    2. ' limit' → logprob: -11.50001049041748
    3. '2' → logprob: -18.375009536743164
    4. '   ' → logprob: -19.250009536743164
    5. '(limit' → logprob: -21.125009536743164
    6. 'lim' → logprob: -22.000009536743164
    7. '
' → logprob: -22.250009536743164
    8. '_limit' → logprob: -22.250009536743164
    9. ' ' → logprob: -22.375009536743164
    10. 'Limit' → logprob: -23.000009536743164

Token 481: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03805456683039665
    2. 'and' → logprob: -3.2880544662475586
    3. '           ' → logprob: -12.163054466247559
    4. '   ' → logprob: -12.788054466247559
    5. ' ' → logprob: -13.288054466247559
    6. '       ' → logprob: -13.913054466247559
    7. '               ' → logprob: -14.038054466247559
    8. '	and' → logprob: -14.163054466247559
    9. ' и' → logprob: -15.288054466247559
    10. ':' → logprob: -15.788054466247559

Token 482: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -8.387458365177736e-05
    2. ' dist' → logprob: -9.875083923339844
    3. '   ' → logprob: -10.500083923339844
    4. '       ' → logprob: -13.500083923339844
    5. '           ' → logprob: -13.625083923339844
    6. '     ' → logprob: -14.500083923339844
    7. '(dist' → logprob: -14.875083923339844
    8. 'nm' → logprob: -15.000083923339844
    9. '    ' → logprob: -15.125083923339844
    10. '	dist' → logprob: -15.375083923339844

Token 483: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.000491076149046421
    2. '[k' → logprob: -7.625491142272949
    3. 'nm' → logprob: -13.37549114227295
    4. '[' → logprob: -14.75049114227295
    5. '```' → logprob: -15.25049114227295
    6. '[[' → logprob: -16.250490188598633
    7. '[m' → logprob: -16.250490188598633
    8. '[num' → logprob: -16.750490188598633
    9. '[int' → logprob: -16.750490188598633
    10. '[
' → logprob: -17.000490188598633

Token 484: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -6.64708495605737e-05
    2. '[m' → logprob: -11.000066757202148
    3. '```' → logprob: -11.000066757202148
    4. 'ul' → logprob: -12.250066757202148
    5. 'm' → logprob: -12.500066757202148
    6. '[' → logprob: -12.500066757202148
    7. 'mu' → logprob: -12.625066757202148
    8. 'nm' → logprob: -12.875066757202148
    9. ']' → logprob: -13.375066757202148
    10. 'um' → logprob: -13.500066757202148

Token 485: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41174569725990295
    2. '>' → logprob: -1.6617456674575806
    3. '==' → logprob: -2.16174578666687
    4. ' ==' → logprob: -3.78674578666687
    5. ']==' → logprob: -5.161745548248291
    6. ' >' → logprob: -6.036745548248291
    7. '[' → logprob: -6.536745548248291
    8. ']>' → logprob: -8.41174602508545
    9. ' ]' → logprob: -9.91174602508545
    10. '[k' → logprob: -10.66174602508545

Token 486: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.28674277663230896
    2. '==' → logprob: -1.4117428064346313
    3. ' ==' → logprob: -5.661742687225342
    4. '[' → logprob: -6.536742687225342
    5. ' >' → logprob: -7.661742687225342
    6. '=' → logprob: -9.4117431640625
    7. '```' → logprob: -10.5367431640625
    8. '[k' → logprob: -11.0367431640625
    9. '===' → logprob: -11.2867431640625
    10. ']' → logprob: -11.4117431640625

Token 487: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001065559103153646
    2. ' dist' → logprob: -6.876065731048584
    3. '   ' → logprob: -10.876065254211426
    4. '	dist' → logprob: -11.376065254211426
    5. '(dist' → logprob: -14.626065254211426
    6. '_dist' → logprob: -15.001065254211426
    7. 'd' → logprob: -15.126065254211426
    8. '  ' → logprob: -15.126065254211426
    9. '=' → logprob: -15.251065254211426
    10. 'Dist' → logprob: -15.251065254211426

Token 488: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.01417174469679594
    2. 'k' → logprob: -4.264171600341797
    3. '[n' → logprob: -13.389171600341797
    4. ' k' → logprob: -13.514171600341797
    5. '[' → logprob: -13.764171600341797
    6. ' [' → logprob: -14.389171600341797
    7. '   ' → logprob: -14.514171600341797
    8. '{k' → logprob: -14.514171600341797
    9. '(k' → logprob: -14.764171600341797
    10. '	k' → logprob: -14.764171600341797

Token 489: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02442755736410618
    2. ']+' → logprob: -4.02442741394043
    3. '[k' → logprob: -5.77442741394043
    4. '[' → logprob: -5.89942741394043
    5. '+' → logprob: -8.52442741394043
    6. '[m' → logprob: -9.77442741394043
    7. 'k' → logprob: -10.02442741394043
    8. '[n' → logprob: -10.14942741394043
    9. ' ]' → logprob: -10.89942741394043
    10. '[
' → logprob: -11.39942741394043

Token 490: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193649530410767
    2. ' +' → logprob: -1.501936435699463
    3. '[' → logprob: -12.251936912536621
    4. '+k' → logprob: -14.126936912536621
    5. 'dist' → logprob: -14.751936912536621
    6. '   ' → logprob: -15.501936912536621
    7. '+
' → logprob: -15.626936912536621
    8. ']' → logprob: -15.876936912536621
    9. '+[' → logprob: -15.876936912536621
    10. ']+' → logprob: -16.001935958862305

Token 491: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -17.0
    4. '  ' → logprob: -20.875
    5. '+' → logprob: -21.0
    6. '```' → logprob: -21.0
    7. '
' → logprob: -21.5
    8. '=' → logprob: -22.0
    9. 'import' → logprob: -22.25
    10. '[' → logprob: -22.25

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -18.625
    4. '```' → logprob: -19.25
    5. '2' → logprob: -19.8125
    6. '+' → logprob: -20.1875
    7. '
' → logprob: -20.25
    8. '  ' → logprob: -21.0
    9. '۱' → logprob: -21.0
    10. '0' → logprob: -21.125

Token 493: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12945589423179626
    2. ':
' → logprob: -2.129455804824829
    3. ' and' → logprob: -6.129456043243408
    4. 'and' → logprob: -8.75445556640625
    5. '):
' → logprob: -10.00445556640625
    6. '):' → logprob: -10.37945556640625
    7. ' :' → logprob: -10.75445556640625
    8. ':

' → logprob: -10.87945556640625
    9. ' :
' → logprob: -10.87945556640625
    10. ':
' → logprob: -11.00445556640625

Token 494: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018831972032785416
    2. '           ' → logprob: -4.393832206726074
    3. '                
' → logprob: -6.893832206726074
    4. '                       ' → logprob: -7.018832206726074
    5. ')' → logprob: -7.518832206726074
    6. '[' → logprob: -7.518832206726074
    7. '<|end|>' → logprob: -7.518832206726074
    8. ':
' → logprob: -8.018832206726074
    9. '                   ' → logprob: -8.268832206726074
    10. '       ' → logprob: -8.393832206726074

Token 495: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.02614179067313671
    2. ' dist' → logprob: -3.901141881942749
    3. '               ' → logprob: -5.27614164352417
    4. '                   ' → logprob: -7.77614164352417
    5. '	dist' → logprob: -10.026142120361328
    6. '           ' → logprob: -12.901142120361328
    7. '   ' → logprob: -13.776142120361328
    8. '_dist' → logprob: -13.776142120361328
    9. '(dist' → logprob: -14.151142120361328
    10. '.dist' → logprob: -14.401142120361328

Token 496: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.45848218582978e-06
    2. '```' → logprob: -13.75000286102295
    3. '[' → logprob: -14.37500286102295
    4. 'nm' → logprob: -15.12500286102295
    5. '``' → logprob: -16.250001907348633
    6. '[k' → logprob: -16.500001907348633
    7. '\[' → logprob: -16.750001907348633
    8. '   ' → logprob: -17.125001907348633
    9. '][' → logprob: -17.375001907348633
    10. '[num' → logprob: -17.375001907348633

Token 497: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.0012208210537210107
    2. '[m' → logprob: -6.876220703125
    3. '[k' → logprob: -9.626220703125
    4. 'ul' → logprob: -9.751220703125
    5. '[n' → logprob: -10.626220703125
    6. 'm' → logprob: -11.751220703125
    7. '.mul' → logprob: -12.376220703125
    8. '```' → logprob: -12.501220703125
    9. 'k' → logprob: -12.626220703125
    10. '_mul' → logprob: -12.876220703125

Token 498: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1477167010307312
    2. ']' → logprob: -2.147716760635376
    3. '=' → logprob: -3.897716760635376
    4. ' ]' → logprob: -8.897716522216797
    5. ']=' → logprob: -9.022716522216797
    6. ')' → logprob: -10.647716522216797
    7. '[k' → logprob: -13.397716522216797
    8. '=k' → logprob: -13.897716522216797
    9. '   ' → logprob: -14.272716522216797
    10. '[' → logprob: -14.522716522216797

Token 499: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '=

' → logprob: -19.538042068481445
    4. '＝' → logprob: -19.788042068481445
    5. '.=' → logprob: -19.788042068481445
    6. ']' → logprob: -19.913042068481445
    7. ']=' → logprob: -20.288042068481445
    8. '=
' → logprob: -20.538042068481445
    9. '[' → logprob: -20.913042068481445
    10. ',' → logprob: -22.038042068481445

Token 500: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005233882926404476
    2. ' dist' → logprob: -5.2552337646484375
    3. '	dist' → logprob: -16.755233764648438
    4. '   ' → logprob: -18.005233764648438
    5. '(dist' → logprob: -18.505233764648438
    6. '               ' → logprob: -18.880233764648438
    7. '_dist' → logprob: -19.130233764648438
    8. 'Dist' → logprob: -19.755233764648438
    9. '           ' → logprob: -20.005233764648438
    10. '.dist' → logprob: -20.255233764648438

Token 501: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. 'k' → logprob: -15.875000953674316
    4. '[m' → logprob: -16.5
    5. '[n' → logprob: -16.625
    6. ' [' → logprob: -17.25
    7. '[key' → logprob: -18.125
    8. ' k' → logprob: -18.375
    9. '{k' → logprob: -18.5
    10. '[token' → logprob: -19.125

Token 502: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010831453837454319
    2. ']+' → logprob: -5.260831356048584
    3. '[k' → logprob: -5.635831356048584
    4. '+' → logprob: -6.260831356048584
    5. ' +' → logprob: -9.510831832885742
    6. '   ' → logprob: -11.510831832885742
    7. '[' → logprob: -11.885831832885742
    8. ' ]' → logprob: -12.385831832885742
    9. 'k' → logprob: -13.135831832885742
    10. '"]' → logprob: -13.510831832885742

Token 503: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47408124804496765
    2. '+' → logprob: -0.97408127784729
    3. '[k' → logprob: -13.349081039428711
    4. '[' → logprob: -13.724081039428711
    5. '[token' → logprob: -13.974081039428711
    6. '+k' → logprob: -15.849081039428711
    7. ' ' → logprob: -16.09908103942871
    8. '               ' → logprob: -16.34908103942871
    9. '   ' → logprob: -16.72408103942871
    10. '           ' → logprob: -16.84908103942871

Token 504: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -19.000015258789062
    4. '   ' → logprob: -20.000015258789062
    5. '[' → logprob: -22.125015258789062
    6. '
' → logprob: -22.375015258789062
    7. ' ' → logprob: -22.687515258789062
    8. '  ' → logprob: -22.812515258789062
    9. '۱' → logprob: -23.000015258789062
    10. '2' → logprob: -23.062515258789062

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -20.375
    4. '۱' → logprob: -22.25
    5. '
' → logprob: -22.25
    6. '১' → logprob: -22.5625
    7. '   ' → logprob: -22.6875
    8. '<|end|>' → logprob: -22.9375
    9. '' → logprob: -23.375
    10. '१' → logprob: -23.375

Token 506: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.3120038501219824e-05
    2. '                   ' → logprob: -11.000053405761719
    3. '           ' → logprob: -11.125053405761719
    4. '
' → logprob: -12.000053405761719
    5. ',' → logprob: -12.625053405761719
    6. 'queue' → logprob: -12.625053405761719
    7. ' queue' → logprob: -12.625053405761719
    8. '       ' → logprob: -13.125053405761719
    9. '                
' → logprob: -13.875053405761719
    10. '              ' → logprob: -14.250053405761719

Token 507: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005404045223258436
    2. ' queue' → logprob: -8.250540733337402
    3. 'queue' → logprob: -8.250540733337402
    4. '           ' → logprob: -11.625540733337402
    5. '                   ' → logprob: -12.125540733337402
    6. '```' → logprob: -13.750540733337402
    7. '       ' → logprob: -14.250540733337402
    8. ',' → logprob: -14.625540733337402
    9. '   ' → logprob: -15.250540733337402
    10. '
' → logprob: -15.375540733337402

Token 508: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -4.596781946020201e-05
    2. 'known' → logprob: -10.875045776367188
    3. ' queue' → logprob: -11.125045776367188
    4. '   ' → logprob: -11.625045776367188
    5. '       ' → logprob: -13.000045776367188
    6. 'que' → logprob: -15.000045776367188
    7. '	queue' → logprob: -15.000045776367188
    8. '           ' → logprob: -15.250045776367188
    9. '```' → logprob: -16.250045776367188
    10. '               ' → logprob: -17.375045776367188

Token 509: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.961759259458631e-06
    2. '.' → logprob: -12.875004768371582
    3. '.extend' → logprob: -13.250004768371582
    4. '.enqueue' → logprob: -15.125004768371582
    5. '.put' → logprob: -15.625004768371582
    6. '.push' → logprob: -15.875004768371582
    7. '.Append' → logprob: -17.2500057220459
    8. 'append' → logprob: -18.2500057220459
    9. '.add' → logprob: -18.3750057220459
    10. ' .' → logprob: -18.3750057220459

Token 510: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.25
    3. 'n' → logprob: -19.25
    4. '((' → logprob: -19.75
    5. '	n' → logprob: -19.875
    6. 'left' → logprob: -20.25
    7. '(N' → logprob: -20.75
    8. '(nd' → logprob: -20.875
    9. 'nm' → logprob: -21.125
    10. '(
' → logprob: -21.25

Token 511: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -2.7968066206085496e-05
    2. 'mu' → logprob: -11.375027656555176
    3. 'm' → logprob: -11.875027656555176
    4. 'nm' → logprob: -13.000027656555176
    5. 'um' → logprob: -13.125027656555176
    6. 'mum' → logprob: -13.500027656555176
    7. '(m' → logprob: -14.250027656555176
    8. '[m' → logprob: -14.250027656555176
    9. '(n' → logprob: -14.625027656555176
    10. 'mol' → logprob: -14.875027656555176

Token 512: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07475581765174866
    2. ')' → logprob: -3.324755907058716
    3. '               ' → logprob: -3.324755907058716
    4. ')
' → logprob: -10.074755668640137
    5. '           ' → logprob: -11.074755668640137
    6. '       ' → logprob: -12.324755668640137
    7. ' )
' → logprob: -13.699755668640137
    8. '                   ' → logprob: -13.949755668640137
    9. ')

' → logprob: -13.949755668640137
    10. '              ' → logprob: -14.324755668640137

Token 513: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01734023541212082
    2. '               ' → logprob: -4.142340183258057
    3. '            
' → logprob: -7.517340183258057
    4. '       ' → logprob: -8.017340660095215
    5. 'known' → logprob: -9.517340660095215
    6. '          ' → logprob: -9.892340660095215
    7. '                
' → logprob: -10.142340660095215
    8. '
' → logprob: -10.142340660095215
    9. ' known' → logprob: -10.267340660095215
    10. '	       ' → logprob: -10.267340660095215

Token 514: ' known' (ID: 5542)
  Prédit: 'known'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'known' (adapté à ' known') → logprob: -0.0006283254479058087
    2. '               ' → logprob: -8.000628471374512
    3. '           ' → logprob: -8.625628471374512
    4. '   ' → logprob: -9.875628471374512
    5. ' known' → logprob: -10.000628471374512
    6. '                   ' → logprob: -11.250628471374512
    7. 'unknown' → logprob: -13.750628471374512
    8. 'if' → logprob: -14.625628471374512
    9. '       ' → logprob: -15.000628471374512
    10. '_known' → logprob: -15.125628471374512

Token 515: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.375000953674316
    3. '.app' → logprob: -14.625000953674316
    4. '.add' → logprob: -16.250001907348633
    5. '.ap' → logprob: -16.875001907348633
    6. 'append' → logprob: -17.500001907348633
    7. '.remove' → logprob: -17.625001907348633
    8. ' .' → logprob: -19.250001907348633
    9. '.insert' → logprob: -19.375001907348633
    10. '.push' → logprob: -19.750001907348633

Token 516: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.320199877838604e-07
    2. 'nm' → logprob: -16.0
    3. 'n' → logprob: -16.125
    4. '(' → logprob: -16.125
    5. '	n' → logprob: -17.375
    6. '(m' → logprob: -17.75
    7. '[n' → logprob: -18.375
    8. '_n' → logprob: -19.625
    9. '(k' → logprob: -20.125
    10. '```' → logprob: -20.125

Token 517: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -5.371605948312208e-05
    2. 'ul' → logprob: -10.000053405761719
    3. 'mu' → logprob: -12.750053405761719
    4. 'm' → logprob: -12.875053405761719
    5. 'um' → logprob: -14.000053405761719
    6. 'pul' → logprob: -14.625053405761719
    7. 'w' → logprob: -15.250053405761719
    8. 'mult' → logprob: -15.250053405761719
    9. 'Mul' → logprob: -16.00005340576172
    10. '_mul' → logprob: -16.00005340576172

Token 518: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. ')
' → logprob: -10.500035285949707
    3. '           ' → logprob: -11.875035285949707
    4. '       ' → logprob: -14.875035285949707
    5. '               ' → logprob: -15.000035285949707
    6. ' )' → logprob: -16.125036239624023
    7. ']' → logprob: -16.250036239624023
    8. '）' → logprob: -16.500036239624023
    9. ')

' → logprob: -16.625036239624023
    10. '))' → logprob: -17.125036239624023

Token 519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002441646996885538
    2. '            
' → logprob: -6.377441883087158
    3. '          ' → logprob: -7.627441883087158
    4. '           
' → logprob: -9.87744140625
    5. '		' → logprob: -10.37744140625
    6. '               ' → logprob: -10.37744140625
    7. '            ' → logprob: -10.50244140625
    8. '       ' → logprob: -10.75244140625
    9. '         ' → logprob: -11.50244140625
    10. '            

' → logprob: -11.75244140625

Token 520: ' n' (ID: 297)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.1307348906993866
    2. '       ' → logprob: -2.630734920501709
    3. 'n' (adapté à ' n') → logprob: -3.380734920501709
    4. '           ' → logprob: -4.755734920501709
    5. 'nm' → logprob: -5.255734920501709
    6. '   ' → logprob: -6.255734920501709
    7. ' n' → logprob: -8.13073444366455
    8. 'm' → logprob: -9.13073444366455
    9. '#' → logprob: -9.50573444366455
    10. '               ' → logprob: -10.00573444366455

Token 521: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0009500489104539156
    2. 'sub' → logprob: -7.000949859619141
    3. 'dif' → logprob: -11.12594985961914
    4. 'dev' → logprob: -12.00094985961914
    5. 'diff' → logprob: -12.25094985961914
    6. '-' → logprob: -13.00094985961914
    7. 'm' → logprob: -13.50094985961914
    8. 'rev' → logprob: -13.62594985961914
    9. ' div' → logprob: -13.75094985961914
    10. '_div' → logprob: -13.75094985961914

Token 522: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. '=k' → logprob: -15.673587799072266
    4. '＝' → logprob: -19.173587799072266
    5. '=n' → logprob: -19.298587799072266
    6. ' ' → logprob: -20.423587799072266
    7. '=
' → logprob: -20.923587799072266
    8. '=int' → logprob: -20.923587799072266
    9. 's' → logprob: -20.923587799072266
    10. 'n' → logprob: -21.173587799072266

Token 523: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004890497075393796
    2. 'abs' → logprob: -7.625489234924316
    3. ' k' → logprob: -14.000489234924316
    4. ' abs' → logprob: -16.37548828125
    5. '   ' → logprob: -16.87548828125
    6. 'kx' → logprob: -17.87548828125
    7. 'max' → logprob: -18.12548828125
    8. '[k' → logprob: -18.12548828125
    9. '{k' → logprob: -18.12548828125
    10. ' ' → logprob: -18.37548828125

Token 524: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01814994215965271
    2. ' -' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.893150329589844
    4. '=' → logprob: -18.018150329589844
    5. '>' → logprob: -18.393150329589844
    6. '-m' → logprob: -18.393150329589844
    7. 'm' → logprob: -18.893150329589844
    8. '−' → logprob: -19.268150329589844
    9. '[' → logprob: -19.393150329589844
    10. '-
' → logprob: -19.893150329589844

Token 525: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.704273118884885e-07
    2. ' m' → logprob: -14.250000953674316
    3. '	m' → logprob: -22.5
    4. '   ' → logprob: -23.375
    5. 'м' → logprob: -23.5
    6. '           ' → logprob: -25.5
    7. '[m' → logprob: -25.625
    8. '  ' → logprob: -25.75
    9. '       ' → logprob: -25.875
    10. '<|end|>' → logprob: -26.0

Token 526: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10993454605340958
    2. ' >' → logprob: -3.4849345684051514
    3. '<|end|>' → logprob: -3.7349345684051514
    4. ' if' → logprob: -4.109934329986572
    5. ' ' → logprob: -4.734934329986572
    6. ' #' → logprob: -5.234934329986572
    7. '>' → logprob: -5.359934329986572
    8. ' 
' → logprob: -5.609934329986572
    9. '
' → logprob: -5.984934329986572
    10. '            ' → logprob: -6.484934329986572

Token 527: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47996798157691956
    2. ' if' → logprob: -1.6049679517745972
    3. ' #' → logprob: -2.4799680709838867
    4. '#' → logprob: -2.8549680709838867
    5. ' ' → logprob: -3.7299680709838867
    6. 'if' → logprob: -4.604968070983887
    7. '       ' → logprob: -6.229968070983887
    8. '   ' → logprob: -6.479968070983887
    9. '          ' → logprob: -7.604968070983887
    10. '         ' → logprob: -8.354968070983887

Token 528: ' division' (ID: 21629)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08398392051458359
    2. ' if' → logprob: -2.583983898162842
    3. 'nd' → logprob: -6.333983898162842
    4. '           ' → logprob: -6.833983898162842
    5. 'k' → logprob: -7.083983898162842
    6. 'n' → logprob: -8.458984375
    7. ' nd' → logprob: -8.708984375
    8. '#' → logprob: -8.958984375
    9. ' k' → logprob: -8.958984375
    10. '            
' → logprob: -8.958984375

Token 529: ' :' (ID: 712)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027903614565730095
    2. ' if' → logprob: -4.0279035568237305
    3. '<|end|>' → logprob: -5.2779035568237305
    4. ' >' → logprob: -6.4029035568237305
    5. '>' → logprob: -7.4029035568237305
    6. 'if' → logprob: -7.6529035568237305
    7. '<|end|>' → logprob: -7.7779035568237305
    8. '            ' → logprob: -7.9029035568237305
    9. ' =' → logprob: -8.15290355682373
    10. '            
' → logprob: -8.40290355682373

Token 530: ' expos' (ID: 10300)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25866228342056274
    2. ' if' → logprob: -2.008662223815918
    3. 'k' → logprob: -2.508662223815918
    4. ' k' → logprob: -4.508662223815918
    5. '           ' → logprob: -7.133662223815918
    6. '            
' → logprob: -8.633662223815918
    7. 'n' → logprob: -9.008662223815918
    8. '               ' → logprob: -9.758662223815918
    9. '            ' → logprob: -10.633662223815918
    10. ' n' → logprob: -11.008662223815918

Token 531: 'ant' (ID: 493)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09444594383239746
    2. '>' → logprob: -3.5944459438323975
    3. 'p' → logprob: -3.5944459438323975
    4. 'k' → logprob: -4.344446182250977
    5. 'nt' → logprob: -5.094446182250977
    6. '   ' → logprob: -5.469446182250977
    7. 'ption' → logprob: -5.969446182250977
    8. 'pon' → logprob: -6.594446182250977
    9. 'pt' → logprob: -6.844446182250977
    10. 's' → logprob: -7.094446182250977

Token 532: ' différence' (ID: 79196)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6082527041435242
    2. 'if' → logprob: -0.8582527041435242
    3. '>' → logprob: -4.23325252532959
    4. '           ' → logprob: -5.35825252532959
    5. ' >' → logprob: -5.35825252532959
    6. '=' → logprob: -6.35825252532959
    7. 'n' → logprob: -6.35825252532959
    8. ' =' → logprob: -7.35825252532959
    9. '+' → logprob: -7.85825252532959
    10. '            ' → logprob: -7.98325252532959

Token 533: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013275875709950924
    2. '<|end|>' → logprob: -4.513276100158691
    3. ' if' → logprob: -7.013276100158691
    4. '<|end|>' → logprob: -7.638276100158691
    5. '            ' → logprob: -7.763276100158691
    6. '          ' → logprob: -9.638276100158691
    7. '		' → logprob: -10.013276100158691
    8. ' ' → logprob: -10.138276100158691
    9. '            
' → logprob: -10.138276100158691
    10. ' =' → logprob: -10.263276100158691

Token 534: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00118368084076792
    2. ' if' → logprob: -7.25118350982666
    3. '<|end|>' → logprob: -8.37618350982666
    4. '          ' → logprob: -9.50118350982666
    5. '	       ' → logprob: -10.37618350982666
    6. '		' → logprob: -10.37618350982666
    7. '   ' → logprob: -11.12618350982666
    8. ' ' → logprob: -11.12618350982666
    9. '       ' → logprob: -11.37618350982666
    10. ' >' → logprob: -11.87618350982666

Token 535: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25510114431381226
    2. 'if' (adapté à ' if') → logprob: -1.505101203918457
    3. '           ' → logprob: -5.755101203918457
    4. ' ' → logprob: -16.50510025024414
    5. '          ' → logprob: -16.63010025024414
    6. '	if' → logprob: -16.75510025024414
    7. '            
' → logprob: -17.00510025024414
    8. '>' → logprob: -17.50510025024414
    9. '		' → logprob: -17.63010025024414
    10. '            ' → logprob: -17.88010025024414

Token 536: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3285791277885437
    2. ' n' → logprob: -1.7035791873931885
    3. 'nd' → logprob: -2.3285791873931885
    4. 'k' → logprob: -7.828578948974609
    5. ' nd' → logprob: -9.45357894897461
    6. ' k' → logprob: -10.07857894897461
    7. 'nm' → logprob: -10.07857894897461
    8. 'ndir' → logprob: -12.32857894897461
    9. 'nde' → logprob: -12.82857894897461
    10. 'nk' → logprob: -12.82857894897461

Token 537: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.01089548785239458
    2. 'nd' → logprob: -4.760895252227783
    3. 'k' → logprob: -6.135895252227783
    4. '>' → logprob: -9.385895729064941
    5. ' >' → logprob: -11.260895729064941
    6. ' k' → logprob: -12.135895729064941
    7. 'td' → logprob: -13.135895729064941
    8. '<div' → logprob: -13.885895729064941
    9. 'md' → logprob: -14.010895729064941
    10. '(k' → logprob: -14.135895729064941

Token 538: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5759557485580444
    2. '>' → logprob: -0.8259557485580444
    3. ' >=' → logprob: -12.450955390930176
    4. '=' → logprob: -12.575955390930176
    5. ' =' → logprob: -13.325955390930176
    6. '>=' → logprob: -13.325955390930176
    7. ' ' → logprob: -13.325955390930176
    8. ' and' → logprob: -13.325955390930176
    9. ' :=' → logprob: -13.950955390930176
    10. '   ' → logprob: -14.575955390930176

Token 539: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020592445798683912
    2. ' ' → logprob: -8.500205993652344
    3. 'm' → logprob: -13.000205993652344
    4. ' m' → logprob: -15.875205993652344
    5. '   ' → logprob: -18.625205993652344
    6. '  ' → logprob: -19.875205993652344
    7. '    ' → logprob: -20.625205993652344
    8. '<|end|>' → logprob: -21.250205993652344
    9. '>' → logprob: -21.500205993652344
    10. '           ' → logprob: -21.875205993652344

Token 540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. 'm' → logprob: -13.875003814697266
    4. '۰' → logprob: -19.875003814697266
    5. '   ' → logprob: -20.125003814697266
    6. ' m' → logprob: -20.625003814697266
    7. 'k' → logprob: -20.625003814697266
    8. '  ' → logprob: -21.375003814697266
    9. '00' → logprob: -21.375003814697266
    10. '000' → logprob: -21.375003814697266

Token 541: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0007145775598473847
    2. 'and' → logprob: -7.2507147789001465
    3. '           ' → logprob: -12.750714302062988
    4. '            ' → logprob: -14.000714302062988
    5. ' ' → logprob: -15.250714302062988
    6. ',' → logprob: -15.875714302062988
    7. '<|end|>' → logprob: -16.125715255737305
    8. '               ' → logprob: -16.500715255737305
    9. ' и' → logprob: -16.875715255737305
    10. '          ' → logprob: -16.875715255737305

Token 542: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12693703174591064
    2. ' dist' → logprob: -2.126936912536621
    3. '           ' → logprob: -12.126936912536621
    4. '               ' → logprob: -13.626936912536621
    5. '	dist' → logprob: -14.001936912536621
    6. '   ' → logprob: -14.501936912536621
    7. '(dist' → logprob: -14.876936912536621
    8. '            ' → logprob: -16.001937866210938
    9. '       ' → logprob: -16.251937866210938
    10. ' ' → logprob: -16.626937866210938

Token 543: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005444537382572889
    2. 'nd' → logprob: -8.250544548034668
    3. '[n' → logprob: -8.500544548034668
    4. '[k' → logprob: -9.625544548034668
    5. '(nd' → logprob: -12.125544548034668
    6. '```' → logprob: -12.125544548034668
    7. ' nd' → logprob: -14.375544548034668
    8. ']' → logprob: -14.875544548034668
    9. ' [' → logprob: -15.125544548034668
    10. '   ' → logprob: -15.375544548034668

Token 544: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -5.240481914370321e-05
    2. 'n' → logprob: -10.000052452087402
    3. 'k' → logprob: -12.750052452087402
    4. 'ndir' → logprob: -13.625052452087402
    5. '[' → logprob: -13.750052452087402
    6. 'ndi' → logprob: -14.125052452087402
    7. 'ndef' → logprob: -15.250052452087402
    8. 'ndum' → logprob: -15.875052452087402
    9. '```' → logprob: -16.000051498413086
    10. ' nd' → logprob: -16.375051498413086

Token 545: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.03831321373581886
    2. 'div' → logprob: -3.288313150405884
    3. 'v' → logprob: -9.038312911987305
    4. 'm' → logprob: -10.038312911987305
    5. 'k' → logprob: -10.163312911987305
    6. 'id' → logprob: -10.163312911987305
    7. 'vid' → logprob: -11.788312911987305
    8. 'vi' → logprob: -12.163312911987305
    9. 'di' → logprob: -12.663312911987305
    10. 'd' → logprob: -12.788312911987305

Token 546: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008689268492162228
    2. ' >' → logprob: -5.2586894035339355
    3. '>' → logprob: -5.8836894035339355
    4. ']>' → logprob: -7.5086894035339355
    5. ' ]' → logprob: -9.508688926696777
    6. '[k' → logprob: -10.258688926696777
    7. '[' → logprob: -12.883688926696777
    8. '   ' → logprob: -13.633688926696777
    9. ' ' → logprob: -14.008688926696777
    10. ')' → logprob: -14.383688926696777

Token 547: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25193464756011963
    2. '>' → logprob: -1.5019346475601196
    3. ' ' → logprob: -13.126935005187988
    4. '   ' → logprob: -14.001935005187988
    5. ']' → logprob: -14.376935005187988
    6. '[k' → logprob: -14.501935005187988
    7. '[' → logprob: -14.751935005187988
    8. ')' → logprob: -15.001935005187988
    9. 'dist' → logprob: -15.376935005187988
    10. ' dist' → logprob: -15.376935005187988

Token 548: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10020806640386581
    2. ' dist' → logprob: -2.350208044052124
    3. '	dist' → logprob: -14.225208282470703
    4. '   ' → logprob: -14.725208282470703
    5. '(dist' → logprob: -15.100208282470703
    6. '_dist' → logprob: -17.475208282470703
    7. '.dist' → logprob: -17.725208282470703
    8. 'Dist' → logprob: -18.100208282470703
    9. ' ' → logprob: -18.225208282470703
    10. '    ' → logprob: -18.725208282470703

Token 549: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00011236425780225545
    2. 'k' → logprob: -9.125112533569336
    3. '[' → logprob: -13.250112533569336
    4. '[n' → logprob: -14.625112533569336
    5. ' k' → logprob: -15.375112533569336
    6. '	k' → logprob: -15.625112533569336
    7. '(k' → logprob: -15.750112533569336
    8. ' [' → logprob: -16.375112533569336
    9. '   ' → logprob: -16.375112533569336
    10. 'dist' → logprob: -16.375112533569336

Token 550: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029743758495897055
    2. ']+' → logprob: -5.877974510192871
    3. '+' → logprob: -9.002974510192871
    4. ' +' → logprob: -10.877974510192871
    5. ' ]' → logprob: -11.127974510192871
    6. '[' → logprob: -11.502974510192871
    7. '   ' → logprob: -13.377974510192871
    8. ')' → logprob: -14.502974510192871
    9. ' ' → logprob: -15.627974510192871
    10. '']' → logprob: -16.377973556518555

Token 551: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06197933852672577
    2. '+' → logprob: -2.811979293823242
    3. '[' → logprob: -11.811979293823242
    4. ' ' → logprob: -13.186979293823242
    5. ']' → logprob: -13.561979293823242
    6. ']+' → logprob: -14.186979293823242
    7. ' plus' → logprob: -16.686979293823242
    8. ')' → logprob: -16.811979293823242
    9. '＋' → logprob: -16.811979293823242
    10. '   ' → logprob: -17.186979293823242

Token 552: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -20.125001907348633
    4. '0' → logprob: -20.875001907348633
    5. '```' → logprob: -21.000001907348633
    6. '[' → logprob: -21.500001907348633
    7. '+' → logprob: -21.875001907348633
    8. '  ' → logprob: -22.500001907348633
    9. '<|end|>' → logprob: -22.625001907348633
    10. '2' → logprob: -22.750001907348633

Token 553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -20.5
    4. '0' → logprob: -20.875
    5. '[' → logprob: -21.25
    6. '<|end|>' → logprob: -21.375
    7. '+' → logprob: -21.75
    8. '   ' → logprob: -22.0
    9. '=' → logprob: -23.125
    10. '۱' → logprob: -23.125

Token 554: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46019405126571655
    2. '               ' → logprob: -1.3351941108703613
    3. ':
' → logprob: -2.7101941108703613
    4. ' and' → logprob: -3.8351941108703613
    5. '<|end|>' → logprob: -4.710194110870361
    6. '           ' → logprob: -5.710194110870361
    7. ',' → logprob: -6.960194110870361
    8. '=' → logprob: -7.085194110870361
    9. 'and' → logprob: -7.210194110870361
    10. '```' → logprob: -7.835194110870361

Token 555: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00040242893737740815
    2. '           ' → logprob: -8.125402450561523
    3. '                   ' → logprob: -10.250402450561523
    4. '```' → logprob: -10.750402450561523
    5. '                               ' → logprob: -11.875402450561523
    6. '            ' → logprob: -11.875402450561523
    7. '                ' → logprob: -12.000402450561523
    8. '              ' → logprob: -12.000402450561523
    9. '       ' → logprob: -12.125402450561523
    10. ' nd' → logprob: -12.250402450561523

Token 556: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.015275774523615837
    2. ' dist' → logprob: -4.765275955200195
    3. '               ' → logprob: -5.015275955200195
    4. '	dist' → logprob: -13.265275955200195
    5. '                   ' → logprob: -14.140275955200195
    6. '           ' → logprob: -15.390275955200195
    7. '   ' → logprob: -15.765275955200195
    8. '(dist' → logprob: -15.890275955200195
    9. '.dist' → logprob: -15.890275955200195
    10. '_dist' → logprob: -16.265275955200195

Token 557: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '[k' → logprob: -15.375
    3. '[n' → logprob: -16.875
    4. '```' → logprob: -17.625
    5. ' [' → logprob: -18.125
    6. '[
' → logprob: -19.75
    7. '[np' → logprob: -19.75
    8. '[idx' → logprob: -20.5
    9. '   ' → logprob: -20.5
    10. '
' → logprob: -20.625

Token 558: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.008937880396842957
    2. 'k' → logprob: -4.758937835693359
    3. '[' → logprob: -8.13393783569336
    4. 'kd' → logprob: -10.88393783569336
    5. 'n' → logprob: -12.88393783569336
    6. ' nd' → logprob: -13.13393783569336
    7. 'ndi' → logprob: -13.38393783569336
    8. ' k' → logprob: -13.75893783569336
    9. '[k' → logprob: -13.75893783569336
    10. 'ndir' → logprob: -14.25893783569336

Token 559: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.3880619406700134
    2. 'div' → logprob: -1.1380620002746582
    3. 'id' → logprob: -7.513062000274658
    4. 'vid' → logprob: -7.763062000274658
    5. 'v' → logprob: -9.6380615234375
    6. 'di' → logprob: -10.5130615234375
    7. 'd' → logprob: -10.7630615234375
    8. 'vd' → logprob: -10.7630615234375
    9. 'nd' → logprob: -11.0130615234375
    10. 'ivid' → logprob: -11.5130615234375

Token 560: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21375611424446106
    2. ' =' → logprob: -1.8387560844421387
    3. '=' → logprob: -3.4637560844421387
    4. ']=' → logprob: -6.588756084442139
    5. '[k' → logprob: -7.963756084442139
    6. ' ]' → logprob: -8.338756561279297
    7. '               ' → logprob: -9.713756561279297
    8. '[' → logprob: -10.838756561279297
    9. '                   ' → logprob: -10.963756561279297
    10. '[n' → logprob: -10.963756561279297

Token 561: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. '=
' → logprob: -17.001928329467773
    4. ']' → logprob: -17.876928329467773
    5. '   ' → logprob: -18.376928329467773
    6. ')' → logprob: -18.376928329467773
    7. ' =
' → logprob: -18.751928329467773
    8. '[' → logprob: -18.751928329467773
    9. ']=' → logprob: -19.001928329467773
    10. '＝' → logprob: -19.251928329467773

Token 562: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0031777136027812958
    2. ' dist' → logprob: -5.753177642822266
    3. '	dist' → logprob: -17.253177642822266
    4. '(dist' → logprob: -18.253177642822266
    5. '.dist' → logprob: -20.503177642822266
    6. '_dist' → logprob: -20.878177642822266
    7. '   ' → logprob: -20.878177642822266
    8. 'Dist' → logprob: -21.003177642822266
    9. ' ' → logprob: -22.753177642822266
    10. 'd' → logprob: -23.253177642822266

Token 563: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00015085970517247915
    2. 'k' → logprob: -8.875150680541992
    3. '{k' → logprob: -12.000150680541992
    4. '[' → logprob: -13.375150680541992
    5. '[n' → logprob: -13.875150680541992
    6. '(k' → logprob: -14.000150680541992
    7. ' k' → logprob: -14.500150680541992
    8. 'dist' → logprob: -14.875150680541992
    9. '	k' → logprob: -16.000150680541992
    10. '[key' → logprob: -16.875150680541992

Token 564: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3284519910812378
    2. '[k' → logprob: -1.3284519910812378
    3. ']+' → logprob: -4.203452110290527
    4. '+' → logprob: -9.703452110290527
    5. '[' → logprob: -10.328452110290527
    6. 'k' → logprob: -10.703452110290527
    7. '']' → logprob: -11.953452110290527
    8. '   ' → logprob: -13.078452110290527
    9. '+]' → logprob: -13.953452110290527
    10. ' ]' → logprob: -14.578452110290527

Token 565: ' +' (ID: 659)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.05553024634718895
    2. '+' → logprob: -2.930530309677124
    3. '[' → logprob: -8.430530548095703
    4. 'k' → logprob: -8.680530548095703
    5. ' +' → logprob: -8.805530548095703
    6. '+k' → logprob: -9.930530548095703
    7. '```' → logprob: -10.930530548095703
    8. ']+' → logprob: -10.930530548095703
    9. ']' → logprob: -11.805530548095703
    10. '   ' → logprob: -12.680530548095703

Token 566: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002003218833124265
    2. 'dist' → logprob: -9.125200271606445
    3. ' ' → logprob: -9.375200271606445
    4. ' dist' → logprob: -12.375200271606445
    5. '(dist' → logprob: -13.750200271606445
    6. 'k' → logprob: -14.375200271606445
    7. '[k' → logprob: -15.500200271606445
    8. '(k' → logprob: -15.750200271606445
    9. '   ' → logprob: -16.000200271606445
    10. '(' → logprob: -16.750200271606445

Token 567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '+' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.125000953674316
    4. 'dist' → logprob: -15.500000953674316
    5. '
' → logprob: -16.25
    6. '[k' → logprob: -17.75
    7. 'k' → logprob: -18.125
    8. '```' → logprob: -18.25
    9. '   ' → logprob: -18.625
    10. ' dist' → logprob: -18.6875

Token 568: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016218038217630237
    2. '```' → logprob: -9.000162124633789
    3. '                
' → logprob: -11.375162124633789
    4. '                ' → logprob: -11.875162124633789
    5. '                   ' → logprob: -12.000162124633789
    6. '              ' → logprob: -12.500162124633789
    7. '           ' → logprob: -12.625162124633789
    8. '       ' → logprob: -13.375162124633789
    9. '<|end|>' → logprob: -13.375162124633789
    10. '``' → logprob: -14.250162124633789

Token 569: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00043639098294079304
    2. 'queue' → logprob: -8.250436782836914
    3. '```' → logprob: -9.000436782836914
    4. ' queue' → logprob: -10.750436782836914
    5. '                
' → logprob: -12.250436782836914
    6. '           ' → logprob: -12.250436782836914
    7. '       ' → logprob: -12.500436782836914
    8. '                   ' → logprob: -12.500436782836914
    9. '              ' → logprob: -12.625436782836914
    10. '                ' → logprob: -12.625436782836914

Token 570: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -5.200166469876422e-06
    2. ' queue' → logprob: -12.250004768371582
    3. '               ' → logprob: -15.500004768371582
    4. '   ' → logprob: -17.2500057220459
    5. '           ' → logprob: -17.3750057220459
    6. '	queue' → logprob: -17.5000057220459
    7. '       ' → logprob: -18.1250057220459
    8. 'que' → logprob: -18.5000057220459
    9. '```' → logprob: -19.1250057220459
    10. 'deque' → logprob: -19.8750057220459

Token 571: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3306015716807451e-05
    2. '.extend' → logprob: -11.50001335144043
    3. '.' → logprob: -13.25001335144043
    4. 'append' → logprob: -14.12501335144043
    5. '.enqueue' → logprob: -14.50001335144043
    6. '.app' → logprob: -16.87501335144043
    7. '.Append' → logprob: -17.50001335144043
    8. '.p' → logprob: -17.62501335144043
    9. '```' → logprob: -18.00001335144043
    10. '.put' → logprob: -18.50001335144043

Token 572: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: 0.0
    2. '(' → logprob: -17.125
    3. '(n' → logprob: -17.625
    4. 'nd' → logprob: -18.0
    5. '(div' → logprob: -18.75
    6. '(nt' → logprob: -20.0
    7. '(nx' → logprob: -20.25
    8. '((' → logprob: -20.625
    9. '(nb' → logprob: -21.5
    10. ' (' → logprob: -22.375

Token 573: 'iv' (ID: 349)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.16256913542747498
    2. 'iv' → logprob: -1.9125691652297974
    3. 'id' → logprob: -6.412569046020508
    4. 'vid' → logprob: -7.662569046020508
    5. 'ud' → logprob: -9.162569046020508
    6. 'ivid' → logprob: -9.787569046020508
    7. 'idx' → logprob: -11.412569046020508
    8. '(div' → logprob: -11.787569046020508
    9. 'uid' → logprob: -11.912569046020508
    10. 'nd' → logprob: -12.037569046020508

Token 574: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042683638632297516
    2. '               ' → logprob: -3.2926836013793945
    3. ')
' → logprob: -5.4176836013793945
    4. '           ' → logprob: -10.167683601379395
    5. ')n' → logprob: -10.292683601379395
    6. '              ' → logprob: -10.542683601379395
    7. '       ' → logprob: -10.792683601379395
    8. '<|end|>' → logprob: -10.917683601379395
    9. '(n' → logprob: -11.167683601379395
    10. ')
' → logprob: -12.417683601379395

Token 575: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.240481914370321e-05
    2. 'known' → logprob: -10.000052452087402
    3. '           ' → logprob: -12.625052452087402
    4. '              ' → logprob: -13.000052452087402
    5. '                   ' → logprob: -14.625052452087402
    6. '   ' → logprob: -15.125052452087402
    7. '       ' → logprob: -15.250052452087402
    8. ' known' → logprob: -15.750052452087402
    9. '                ' → logprob: -16.000051498413086
    10. '             ' → logprob: -16.375051498413086

Token 576: ' known' (ID: 5542)
  Prédit: 'known'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'known' (adapté à ' known') → logprob: -1.9146995327901095e-05
    2. '               ' → logprob: -12.000019073486328
    3. ' known' → logprob: -12.000019073486328
    4. '           ' → logprob: -12.250019073486328
    5. 'unknown' → logprob: -14.000019073486328
    6. '                   ' → logprob: -14.750019073486328
    7. '   ' → logprob: -15.375019073486328
    8. 'Known' → logprob: -15.500019073486328
    9. '_known' → logprob: -15.750019073486328
    10. 'know' → logprob: -16.625019073486328

Token 577: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000493937055580318
    2. '.' → logprob: -7.625494003295898
    3. '.app' → logprob: -13.125494003295898
    4. '.extend' → logprob: -13.625494003295898
    5. ' .' → logprob: -13.750494003295898
    6. '.ap' → logprob: -14.625494003295898
    7. '.remove' → logprob: -14.875494003295898
    8. 'append' → logprob: -15.125494003295898
    9. '.pop' → logprob: -15.250494003295898
    10. '.add' → logprob: -16.5004940032959

Token 578: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. '(n' → logprob: -16.500001907348633
    4. '(nt' → logprob: -19.875001907348633
    5. 'nd' → logprob: -20.000001907348633
    6. '	' → logprob: -21.000001907348633
    7. '(nx' → logprob: -21.125001907348633
    8. '(N' → logprob: -21.250001907348633
    9. '(
' → logprob: -21.375001907348633
    10. '```' → logprob: -21.625001907348633

Token 579: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.03388749808073044
    2. 'div' → logprob: -3.4088873863220215
    3. 'id' → logprob: -8.78388786315918
    4. 'v' → logprob: -10.28388786315918
    5. 'vi' → logprob: -11.03388786315918
    6. 'vid' → logprob: -11.28388786315918
    7. 'ul' → logprob: -11.28388786315918
    8. 'uv' → logprob: -13.03388786315918
    9. 'ив' → logprob: -13.28388786315918
    10. 'Div' → logprob: -14.03388786315918

Token 580: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018804390856530517
    2. ')
' → logprob: -8.625187873840332
    3. '           ' → logprob: -13.250187873840332
    4. '())' → logprob: -13.375187873840332
    5. '               ' → logprob: -13.500187873840332
    6. '(n' → logprob: -13.875187873840332
    7. '])' → logprob: -14.625187873840332
    8. '))' → logprob: -14.750187873840332
    9. ' )' → logprob: -14.875187873840332
    10. '()' → logprob: -15.125187873840332

Token 581: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011638808064162731
    2. 'return' (adapté à ' return') → logprob: -4.511638641357422
    3. ' return' → logprob: -8.011638641357422
    4. '<|end|>' → logprob: -8.386638641357422
    5. ')' → logprob: -11.511638641357422
    6. '```' → logprob: -11.886638641357422
    7. '       ' → logprob: -13.011638641357422
    8. '[' → logprob: -13.136638641357422
    9. ' ' → logprob: -13.261638641357422
    10. '	return' → logprob: -13.261638641357422

Token 583: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001170225441455841
    2. ' dist' → logprob: -6.7511701583862305
    3. '(dist' → logprob: -18.751171112060547
    4. '   ' → logprob: -18.876171112060547
    5. '	dist' → logprob: -18.876171112060547
    6. 'distance' → logprob: -19.001171112060547
    7. '[' → logprob: -21.126171112060547
    8. 'diff' → logprob: -21.501171112060547
    9. 'dest' → logprob: -21.876171112060547
    10. 'Dist' → logprob: -22.126171112060547

Token 584: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005301565979607403
    2. 'def' → logprob: -8.375530242919922
    3. 'if' → logprob: -9.000530242919922
    4. '#' → logprob: -9.125530242919922
    5. ' for' → logprob: -9.875530242919922
    6. 'inputs' → logprob: -11.875530242919922
    7. 'n' → logprob: -12.750530242919922
    8. 'input' → logprob: -13.125530242919922
    9. '```' → logprob: -13.125530242919922
    10. 'import' → logprob: -13.375530242919922

Token 585: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00967287179082632
    2. 'if' → logprob: -5.25967264175415
    3. 'def' → logprob: -5.50967264175415
    4. '#' → logprob: -8.134673118591309
    5. ' for' → logprob: -9.884673118591309
    6. 'n' → logprob: -10.509673118591309
    7. '```' → logprob: -12.009673118591309
    8. 'inputs' → logprob: -13.259673118591309
    9. 'import' → logprob: -13.759673118591309
    10. 'input' → logprob: -13.884673118591309

Token 586: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.202083557844162
    2. 'main' → logprob: -1.7020835876464844
    3. ' minimal' → logprob: -8.077083587646484
    4. 'solve' → logprob: -8.452083587646484
    5. ' solve' → logprob: -9.452083587646484
    6. 'minimal' → logprob: -10.577083587646484
    7. 'process' → logprob: -11.452083587646484
    8. 'read' → logprob: -12.077083587646484
    9. ' process' → logprob: -12.077083587646484
    10. ' read' → logprob: -12.202083587646484

Token 587: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00016039233014453202
    2. '():
' → logprob: -8.750160217285156
    3. ' ():' → logprob: -13.750160217285156
    4. 'def' → logprob: -15.000160217285156
    5. '():
' → logprob: -15.500160217285156
    6. '()' → logprob: -16.125160217285156
    7. ':' → logprob: -16.250160217285156
    8. '():

' → logprob: -16.375160217285156
    9. '(argv' → logprob: -17.750160217285156
    10. '()>' → logprob: -17.875160217285156

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3307267129421234
    2. 'for' → logprob: -1.7057267427444458
    3. '```' → logprob: -2.5807266235351562
    4. ' for' → logprob: -4.205726623535156
    5. 'while' → logprob: -5.330726623535156
    6. 'import' → logprob: -5.705726623535156
    7. '<|end|>' → logprob: -8.330726623535156
    8. '	for' → logprob: -8.580726623535156
    9. '``' → logprob: -9.330726623535156
    10. ' while' → logprob: -9.455726623535156

Token 589: ' input' (ID: 3422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03261655941605568
    2. ' for' → logprob: -3.78261661529541
    3. 'while' → logprob: -5.53261661529541
    4. '   ' → logprob: -5.53261661529541
    5. 'import' → logprob: -6.78261661529541
    6. '```' → logprob: -9.03261661529541
    7. 'n' → logprob: -9.15761661529541
    8. ' while' → logprob: -9.90761661529541
    9. ' import' → logprob: -13.65761661529541
    10. 'lines' → logprob: -13.78261661529541

Token 590: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.3989415466785431
    2. '()' → logprob: -2.2739415168762207
    3. '_line' → logprob: -2.2739415168762207
    4. '_data' → logprob: -2.8989415168762207
    5. 's' → logprob: -2.8989415168762207
    6. '_l' → logprob: -4.773941516876221
    7. '_' → logprob: -6.398941516876221
    8. ' =' → logprob: -6.773941516876221
    9. '=' → logprob: -8.023941993713379
    10. '_list' → logprob: -8.273941993713379

Token 591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18117740750312805
    2. ' =' → logprob: -1.8061773777008057
    3. '=[]' → logprob: -7.431177616119385
    4. '   ' → logprob: -7.806177616119385
    5. '()' → logprob: -7.931177616119385
    6. '=[]
' → logprob: -10.181177139282227
    7. '=sys' → logprob: -11.056177139282227
    8. '="""' → logprob: -12.556177139282227
    9. ' ' → logprob: -12.681177139282227
    10. '=
' → logprob: -13.431177139282227

Token 592: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0003361774142831564
    2. ' sys' → logprob: -8.000336647033691
    3. '[' → logprob: -14.500336647033691
    4. '(sys' → logprob: -15.375336647033691
    5. '=sys' → logprob: -17.875335693359375
    6. '	sys' → logprob: -18.125335693359375
    7. ' [' → logprob: -19.250335693359375
    8. 'list' → logprob: -20.000335693359375
    9. 'map' → logprob: -20.500335693359375
    10. '.sys' → logprob: -21.625335693359375

Token 593: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00039409202872775495
    2. 'stdin' → logprob: -7.875393867492676
    3. '.stdout' → logprob: -11.875393867492676
    4. '(stdin' → logprob: -13.125393867492676
    5. '.' → logprob: -13.250393867492676
    6. '.argv' → logprob: -13.750393867492676
    7. ' stdin' → logprob: -14.125393867492676
    8. '.readline' → logprob: -14.500393867492676
    9. '.std' → logprob: -14.625393867492676
    10. 'import' → logprob: -15.750393867492676

Token 594: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.023541739210486412
    2. '.readlines' → logprob: -3.7735416889190674
    3. 'read' → logprob: -8.398541450500488
    4. '.' → logprob: -9.898541450500488
    5. '.read' → logprob: -12.148541450500488
    6. 'for' → logprob: -12.523541450500488
    7. 'buffer' → logprob: -12.773541450500488
    8. ' readline' → logprob: -13.023541450500488
    9. '=' → logprob: -13.148541450500488
    10. 'lines' → logprob: -13.523541450500488

Token 595: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020509003661572933
    2. '()' → logprob: -8.500205039978027
    3. '()
' → logprob: -14.875205039978027
    4. ' ().' → logprob: -14.875205039978027
    5. '_lines' → logprob: -15.250205039978027
    6. 'lines' → logprob: -15.875205039978027
    7. '(' → logprob: -16.000205993652344
    8. '.split' → logprob: -16.125205993652344
    9. '()).' → logprob: -16.500205993652344
    10. '()

' → logprob: -17.125205993652344

Token 596: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20577602088451385
    2. 'strip' → logprob: -1.7057759761810303
    3. 'read' → logprob: -5.455776214599609
    4. 'decode' → logprob: -9.45577621459961
    5. 'lines' → logprob: -13.20577621459961
    6. 'rstrip' → logprob: -13.45577621459961
    7. ' split' → logprob: -15.70577621459961
    8. 'replace' → logprob: -17.33077621459961
    9. '(split' → logprob: -17.83077621459961
    10. 'str' → logprob: -18.33077621459961

Token 597: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4974866644479334e-05
    2. '()' → logprob: -11.125015258789062
    3. '()
' → logprob: -16.250015258789062
    4. '.split' → logprob: -16.750015258789062
    5. 'split' → logprob: -17.375015258789062
    6. '('\' → logprob: -17.625015258789062
    7. '(' → logprob: -18.250015258789062
    8. ' ().' → logprob: -19.250015258789062
    9. '()\' → logprob: -20.250015258789062
    10. '()

' → logprob: -21.000015258789062

Token 598: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.0
    3. '(split' → logprob: -21.0
    4. 'spl' → logprob: -21.75
    5. '.split' → logprob: -22.25
    6. '_split' → logprob: -22.625
    7. 'lines' → logprob: -25.5
    8. 'decode' → logprob: -25.75
    9. 'Split' → logprob: -26.125
    10. 'plit' → logprob: -26.25

Token 599: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7044078707695007
    2. '('\' → logprob: -0.7044078707695007
    3. 'lines' → logprob: -4.579407691955566
    4. '("\' → logprob: -8.079407691955566
    5. '()\' → logprob: -8.329407691955566
    6. '()
' → logprob: -8.454407691955566
    7. '('' → logprob: -9.204407691955566
    8. '()[' → logprob: -10.204407691955566
    9. '(' → logprob: -10.704407691955566
    10. '()]' → logprob: -12.829407691955566

Token 600: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: 0.0
    2. 'newline' → logprob: -18.625
    3. ' n' → logprob: -19.125
    4. '
' → logprob: -19.375
    5. '\n' → logprob: -19.625
    6. 'ndef' → logprob: -20.25
    7. 'lines' → logprob: -21.25
    8. 't' → logprob: -21.5
    9. '	n' → logprob: -22.125
    10. '```' → logprob: -22.75

Token 601: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2727094888687134
    2. ')' → logprob: -2.022709369659424
    3. '')
' → logprob: -2.272709369659424
    4. ')
' → logprob: -6.022709369659424
    5. '   ' → logprob: -7.397709369659424
    6. '()' → logprob: -8.897709846496582
    7. ')')
' → logprob: -9.022709846496582
    8. '')
' → logprob: -10.397709846496582
    9. 'def' → logprob: -11.397709846496582
    10. ''' → logprob: -12.522709846496582

Token 602: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3980376124382019
    2. '   ' → logprob: -1.1480376720428467
    3. ' for' → logprob: -4.648037433624268
    4. 'results' → logprob: -7.023037433624268
    5. '```' → logprob: -8.023037910461426
    6. 'inputs' → logprob: -8.773037910461426
    7. 'outputs' → logprob: -10.023037910461426
    8. 'result' → logprob: -10.398037910461426
    9. 'i' → logprob: -11.148037910461426
    10. 'idx' → logprob: -11.523037910461426

Token 603: ' nums' (ID: 18117)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24586398899555206
    2. '   ' → logprob: -1.7458640336990356
    3. 'dist' → logprob: -3.370863914489746
    4. 'results' → logprob: -5.370863914489746
    5. ' for' → logprob: -6.120863914489746
    6. 'n' → logprob: -6.370863914489746
    7. '```' → logprob: -8.370863914489746
    8. 'numbers' → logprob: -10.120863914489746
    9. 'result' → logprob: -10.245863914489746
    10. 'nums' (adapté à ' nums') → logprob: -10.370863914489746

Token 604: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38704317808151245
    2. ' =' → logprob: -1.1370432376861572
    3. '=[]' → logprob: -8.762042999267578
    4. '   ' → logprob: -11.887042999267578
    5. '=[]
' → logprob: -12.637042999267578
    6. 'for' → logprob: -13.512042999267578
    7. ')' → logprob: -13.887042999267578
    8. '[]' → logprob: -14.012042999267578
    9. '=[' → logprob: -14.637042999267578
    10. '_' → logprob: -15.262042999267578

Token 605: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.31815648078918457
    2. 'list' → logprob: -1.3181564807891846
    3. '[' → logprob: -5.8181562423706055
    4. '[int' → logprob: -6.8181562423706055
    5. '[i' → logprob: -8.068156242370605
    6. ' list' → logprob: -8.318156242370605
    7. '[input' → logprob: -9.568156242370605
    8. '[n' → logprob: -10.068156242370605
    9. '[m' → logprob: -10.193156242370605
    10. '[List' → logprob: -10.818156242370605

Token 606: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ' int' → logprob: -18.5
    3. '   ' → logprob: -21.25
    4. '(int' → logprob: -22.0
    5. '```' → logprob: -23.375
    6. '
' → logprob: -23.625
    7. '[int' → logprob: -23.875
    8. '	int' → logprob: -24.875
    9. '0' → logprob: -25.375
    10. '=int' → logprob: -25.5

Token 607: '(line' (ID: 18178)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.13213162124156952
    2. '(line' → logprob: -2.132131576538086
    3. 'line' → logprob: -5.882131576538086
    4. '(l' → logprob: -6.382131576538086
    5. 'x' → logprob: -7.507131576538086
    6. '(n' → logprob: -9.382131576538086
    7. '(s' → logprob: -10.257131576538086
    8. '(i' → logprob: -10.882131576538086
    9. '(num' → logprob: -11.132131576538086
    10. 'ligne' → logprob: -12.632131576538086

Token 608: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010027975076809525
    2. '.strip' → logprob: -7.501002788543701
    3. 'for' → logprob: -8.12600326538086
    4. ' for' → logprob: -9.00100326538086
    5. ' )' → logprob: -11.00100326538086
    6. '()' → logprob: -11.75100326538086
    7. 'strip' → logprob: -12.12600326538086
    8. '())' → logprob: -14.75100326538086
    9. '))' → logprob: -16.62600326538086
    10. ']' → logprob: -17.00100326538086

Token 609: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868992328643799
    2. 'for' → logprob: -1.1368992328643799
    3. ')' → logprob: -10.7618989944458
    4. '	for' → logprob: -12.1368989944458
    5. 'in' → logprob: -13.8868989944458
    6. '()' → logprob: -15.1368989944458
    7. ' in' → logprob: -15.2618989944458
    8. '   ' → logprob: -16.261899948120117
    9. 'if' → logprob: -17.761899948120117
    10. ']' → logprob: -17.761899948120117

Token 610: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.15310683415737e-05
    2. ' line' → logprob: -10.750021934509277
    3. '	line' → logprob: -17.25002098083496
    4. '(line' → logprob: -19.00002098083496
    5. '#line' → logprob: -20.12502098083496
    6. '=line' → logprob: -20.12502098083496
    7. 'ligne' → logprob: -20.62502098083496
    8. '[line' → logprob: -21.75002098083496
    9. 'lin' → logprob: -23.12502098083496
    10. 'linie' → logprob: -23.37502098083496

Token 611: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0486072339117527
    2. 'in' → logprob: -3.048607349395752
    3. 'line' → logprob: -10.923606872558594
    4. ' line' → logprob: -14.798606872558594
    5. ' ' → logprob: -15.673606872558594
    6. 'import' → logprob: -15.798606872558594
    7. 'n' → logprob: -15.923606872558594
    8. '<|end|>' → logprob: -15.923606872558594
    9. '	in' → logprob: -16.298606872558594
    10. 'ine' → logprob: -16.423606872558594

Token 612: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.7697225252486533e-06
    2. ' input' → logprob: -12.500003814697266
    3. '(input' → logprob: -22.250003814697266
    4. 'import' → logprob: -22.750003814697266
    5. 'user' → logprob: -22.875003814697266
    6. '	input' → logprob: -23.375003814697266
    7. 'output' → logprob: -23.625003814697266
    8. '<input' → logprob: -23.750003814697266
    9. '
' → logprob: -24.000003814697266
    10. ' ' → logprob: -24.250003814697266

Token 613: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.816093228830141e-06
    2. 'lines' → logprob: -13.75000286102295
    3. '_LINES' → logprob: -13.75000286102295
    4. '	lines' → logprob: -16.125001907348633
    5. 's' → logprob: -16.250001907348633
    6. 'Lines' → logprob: -16.250001907348633
    7. '(lines' → logprob: -16.625001907348633
    8. '```' → logprob: -17.125001907348633
    9. ' lines' → logprob: -17.625001907348633
    10. '_' → logprob: -17.875001907348633

Token 614: ']

' (ID: 3144)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.063127800822258
    2. 'if' → logprob: -2.8131277561187744
    3. ']' → logprob: -6.8131279945373535
    4. '   ' → logprob: -10.188127517700195
    5. '	if' → logprob: -11.063127517700195
    6. ')' → logprob: -12.563127517700195
    7. ' in' → logprob: -14.438127517700195
    8. ' ]' → logprob: -14.563127517700195
    9. '  ' → logprob: -14.688127517700195
    10. '<|end|>' → logprob: -14.813127517700195

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6966045498847961
    2. 'dist' → logprob: -1.3216044902801514
    3. 'for' → logprob: -1.5716044902801514
    4. 'max' → logprob: -4.0716047286987305
    5. ' for' → logprob: -5.5716047286987305
    6. '```' → logprob: -5.9466047286987305
    7. 'results' → logprob: -7.1966047286987305
    8. 'distance' → logprob: -7.1966047286987305
    9. 'i' → logprob: -7.4466047286987305
    10. 'limit' → logprob: -7.9466047286987305

Token 616: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.9999952912330627
    2. 'dist' → logprob: -1.124995231628418
    3. 'results' → logprob: -1.999995231628418
    4. 'for' → logprob: -2.749995231628418
    5. 'limit' → logprob: -3.249995231628418
    6. 'n' → logprob: -3.624995231628418
    7. 'pre' → logprob: -4.124995231628418
    8. 'dp' → logprob: -4.874995231628418
    9. 'res' → logprob: -5.124995231628418
    10. 'result' → logprob: -5.624995231628418

Token 617: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0009575550211593509
    2. '_num' → logprob: -7.375957489013672
    3. '_val' → logprob: -8.125957489013672
    4. 'n' → logprob: -10.625957489013672
    5. '_' → logprob: -12.250957489013672
    6. '_value' → logprob: -12.750957489013672
    7. '_input' → logprob: -13.000957489013672
    8. '(n' → logprob: -15.625957489013672
    9. 'val' → logprob: -16.000957489013672
    10. 'num' → logprob: -16.125957489013672

Token 618: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022079944610596
    2. ' =' → logprob: -2.3502206802368164
    3. '=max' → logprob: -11.225220680236816
    4. '_=' → logprob: -15.350220680236816
    5. '=int' → logprob: -15.475220680236816
    6. '_' → logprob: -16.350221633911133
    7. '=n' → logprob: -16.600221633911133
    8. '=_' → logprob: -16.975221633911133
    9. '＝' → logprob: -17.350221633911133
    10. '   ' → logprob: -17.600221633911133

Token 619: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005309535190463066
    2. ' max' → logprob: -5.255309581756592
    3. '0' → logprob: -9.505309104919434
    4. 'nums' → logprob: -14.380309104919434
    5. '(max' → logprob: -14.380309104919434
    6. '   ' → logprob: -16.63031005859375
    7. ' ' → logprob: -17.13031005859375
    8. '100' → logprob: -17.38031005859375
    9. '	max' → logprob: -17.50531005859375
    10. '[max' → logprob: -18.50531005859375

Token 620: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -7.183501293184236e-05
    2. '([' → logprob: -10.37507152557373
    3. 'nums' → logprob: -10.50007152557373
    4. '(n' → logprob: -12.00007152557373
    5. '(num' → logprob: -12.00007152557373
    6. '(' → logprob: -15.12507152557373
    7. '(x' → logprob: -16.000072479248047
    8. '(i' → logprob: -16.250072479248047
    9. '(
' → logprob: -16.750072479248047
    10. '(numbers' → logprob: -17.000072479248047

Token 621: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04541752114892006
    2. ' if' → logprob: -3.670417547225952
    3. 'if' → logprob: -4.295417308807373
    4. '(nums' → logprob: -6.170417308807373
    5. '[:-' → logprob: -7.045417308807373
    6. ')
' → logprob: -7.045417308807373
    7. '   ' → logprob: -8.420417785644531
    8. '[' → logprob: -8.420417785644531
    9. '(' → logprob: -8.545417785644531
    10. '(n' → logprob: -8.545417785644531

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4911213517189026
    2. ' if' → logprob: -1.2411212921142578
    3. 'dist' → logprob: -3.116121292114258
    4. 'if' → logprob: -4.366121292114258
    5. '
' → logprob: -4.491121292114258
    6. ' dist' → logprob: -4.616121292114258
    7. ' for' → logprob: -4.866121292114258
    8. '```' → logprob: -4.866121292114258
    9. '    
' → logprob: -6.616121292114258
    10. 'distance' → logprob: -6.866121292114258

Token 623: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023441478610038757
    2. ' dist' → logprob: -4.523441314697266
    3. '   ' → logprob: -5.398441314697266
    4. 'if' (adapté à ' if') → logprob: -5.648441314697266
    5. 'd' → logprob: -6.398441314697266
    6. ' if' → logprob: -6.648441314697266
    7. 'distance' → logprob: -7.398441314697266
    8. 'max' → logprob: -8.273441314697266
    9. ' distances' → logprob: -8.773441314697266
    10. ' d' → logprob: -10.273441314697266

Token 624: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.474077433347702
    2. ' max' → logprob: -0.9740774631500244
    3. '(max' → logprob: -15.349077224731445
    4. '[max' → logprob: -17.099077224731445
    5. '=max' → logprob: -17.599077224731445
    6. '_max' → logprob: -17.599077224731445
    7. '0' → logprob: -17.974077224731445
    8. '	max' → logprob: -17.974077224731445
    9. ' ' → logprob: -18.849077224731445
    10. 'nums' → logprob: -18.974077224731445

Token 625: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0035687077324837446
    2. '==' → logprob: -6.878568649291992
    3. 'max' → logprob: -7.128568649291992
    4. '_max' → logprob: -7.378568649291992
    5. '>' → logprob: -7.878568649291992
    6. '_' → logprob: -8.253568649291992
    7. ' ==' → logprob: -9.003568649291992
    8. '   ' → logprob: -9.253568649291992
    9. '(max' → logprob: -9.378568649291992
    10. '!=' → logprob: -9.503568649291992

Token 626: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8031905889511108
    2. '>' → logprob: -1.3031905889511108
    3. ' ==' → logprob: -1.3031905889511108
    4. ' >' → logprob: -4.8031907081604
    5. ' !=' → logprob: -8.303190231323242
    6. '!=' → logprob: -8.803190231323242
    7. '=' → logprob: -9.553190231323242
    8. '```' → logprob: -10.053190231323242
    9. '<' → logprob: -11.178190231323242
    10. '[' → logprob: -11.678190231323242

Token 627: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -20.125003814697266
    4. '۰' → logprob: -20.250003814697266
    5. '```' → logprob: -20.500003814697266
    6. '=' → logprob: -21.375003814697266
    7. '  ' → logprob: -21.500003814697266
    8. '>' → logprob: -22.437503814697266
    9. '০' → logprob: -22.500003814697266
    10. '０' → logprob: -22.750003814697266

Token 628: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '=' → logprob: -20.5
    4. '۰' → logprob: -22.0
    5. '100' → logprob: -22.125
    6. '>' → logprob: -22.375
    7. '1' → logprob: -23.375
    8. '০' → logprob: -23.375
    9. '[' → logprob: -23.625
    10. '   ' → logprob: -23.9375

Token 629: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016001636162400246
    2. ':
' → logprob: -4.2660017013549805
    3. ':return' → logprob: -6.5160017013549805
    4. '   ' → logprob: -8.14100170135498
    5. '       ' → logprob: -9.76600170135498
    6. ' :' → logprob: -12.14100170135498
    7. 'return' → logprob: -14.01600170135498
    8. ' return' → logprob: -14.51600170135498
    9. ':
' → logprob: -15.01600170135498
    10. ' or' → logprob: -15.01600170135498

Token 630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042351046577095985
    2. '   ' → logprob: -5.75423526763916
    3. 'return' → logprob: -6.87923526763916
    4. ' return' → logprob: -10.50423526763916
    5. '	return' → logprob: -14.87923526763916
    6. '
' → logprob: -16.004234313964844
    7. '           ' → logprob: -17.879234313964844
    8. ':return' → logprob: -18.129234313964844
    9. '```' → logprob: -18.254234313964844
    10. ' ' → logprob: -18.254234313964844

Token 631: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.1928003813372925e-05
    2. '   ' → logprob: -10.000051498413086
    3. ' return' → logprob: -12.000051498413086
    4. '	return' → logprob: -15.250051498413086
    5. '       ' → logprob: -17.000051498413086
    6. '
' → logprob: -18.250051498413086
    7. 'import' → logprob: -18.625051498413086
    8. '    
' → logprob: -19.375051498413086
    9. '```' → logprob: -19.375051498413086
    10. 'eturn' → logprob: -20.125051498413086

Token 632: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3380213975906372
    2. '
' → logprob: -1.3380213975906372
    3. '    
' → logprob: -3.8380212783813477
    4. 'dist' → logprob: -6.088021278381348
    5. '  
' → logprob: -8.463021278381348
    6. '```' → logprob: -9.588021278381348
    7. ' dist' → logprob: -9.713021278381348
    8. '        
' → logprob: -9.713021278381348
    9. '
' → logprob: -9.713021278381348
    10. ' 
' → logprob: -9.963021278381348

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7017465829849243
    2. 'dist' → logprob: -0.7017465829849243
    3. ' dist' → logprob: -4.826746463775635
    4. '	dist' → logprob: -8.576746940612793
    5. 'distance' → logprob: -8.951746940612793
    6. '    
' → logprob: -9.826746940612793
    7. ' distances' → logprob: -9.951746940612793
    8. '```' → logprob: -10.076746940612793
    9. 'd' → logprob: -10.576746940612793
    10. '_dist' → logprob: -10.951746940612793

Token 634: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.007775917649269104
    2. '   ' → logprob: -5.757775783538818
    3. 'd' → logprob: -6.132775783538818
    4. ' dist' → logprob: -6.257775783538818
    5. 'ops' → logprob: -8.007776260375977
    6. 'distance' → logprob: -9.382776260375977
    7. 'results' → logprob: -10.257776260375977
    8. 'operations' → logprob: -11.757776260375977
    9. ' distances' → logprob: -11.882776260375977
    10. 'dp' → logprob: -11.882776260375977

Token 635: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602243334054947
    2. ' =' → logprob: -1.9102243185043335
    3. '＝' → logprob: -15.910223960876465
    4. '   ' → logprob: -17.16022491455078
    5. ' ' → logprob: -17.53522491455078
    6. '[' → logprob: -17.66022491455078
    7. '_=' → logprob: -17.78522491455078
    8. '_' → logprob: -18.53522491455078
    9. '=create' → logprob: -18.78522491455078
    10. '=
' → logprob: -18.91022491455078

Token 636: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.0485873706638813
    2. ' minimal' → logprob: -3.0485873222351074
    3. 'Minimal' → logprob: -17.298587799072266
    4. 'min' → logprob: -18.173587799072266
    5. '   ' → logprob: -19.923587799072266
    6. 'minimum' → logprob: -20.423587799072266
    7. ' ' → logprob: -20.923587799072266
    8. 'm' → logprob: -21.298587799072266
    9. ' миним' → logprob: -22.048587799072266
    10. ' ' → logprob: -22.923587799072266

Token 637: '_operations' (ID: 148404)
  Prédit: '_operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -4.320199877838604e-07
    2. 'operations' → logprob: -15.25
    3. '_' → logprob: -15.875
    4. '_operation' → logprob: -17.5
    5. '```' → logprob: -18.75
    6. 'Operations' → logprob: -18.875
    7. '_ops' → logprob: -19.5
    8. '_oper' → logprob: -20.375
    9. '_options' → logprob: -20.875
    10. '_op' → logprob: -21.375

Token 638: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -1.4378848391061183e-05
    2. '(' → logprob: -11.375014305114746
    3. 'max' → logprob: -13.500014305114746
    4. ' (' → logprob: -13.625014305114746
    5. ',max' → logprob: -17.000015258789062
    6. ' max' → logprob: -17.125015258789062
    7. '[max' → logprob: -17.375015258789062
    8. '(Max' → logprob: -17.375015258789062
    9. '=max' → logprob: -17.500015258789062
    10. '(MAX' → logprob: -18.500015258789062

Token 639: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.3856492842023727e-06
    2. ')' → logprob: -14.250000953674316
    3. 'n' → logprob: -15.250000953674316
    4. '_' → logprob: -15.875000953674316
    5. '_max' → logprob: -16.750001907348633
    6. ')_' → logprob: -17.500001907348633
    7. '_x' → logprob: -17.750001907348633
    8. 'max' → logprob: -17.750001907348633
    9. '_k' → logprob: -17.750001907348633
    10. '_num' → logprob: -17.875001907348633

Token 640: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.718606891809031e-05
    2. ')
' → logprob: -9.625066757202148
    3. ' )' → logprob: -14.500066757202148
    4. ')

' → logprob: -15.000066757202148
    5. '   ' → logprob: -15.625066757202148
    6. ')
' → logprob: -17.50006675720215
    7. ' ' → logprob: -19.12506675720215
    8. ')`' → logprob: -19.12506675720215
    9. ')n' → logprob: -20.62506675720215
    10. ').' → logprob: -20.75006675720215

Token 641: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03808658942580223
    2. '   ' → logprob: -3.2880866527557373
    3. ' for' → logprob: -10.538086891174316
    4. '```' → logprob: -10.913086891174316
    5. '
' → logprob: -15.663086891174316
    6. '	for' → logprob: -15.788086891174316
    7. '    
' → logprob: -16.0380859375
    8. '``' → logprob: -16.9130859375
    9. 'i' → logprob: -18.5380859375
    10. '  ' → logprob: -19.7880859375

Token 642: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001793457195162773
    2. '   ' → logprob: -9.000179290771484
    3. ' for' → logprob: -10.500179290771484
    4. '```' → logprob: -10.500179290771484
    5. '``' → logprob: -14.500179290771484
    6. '
' → logprob: -15.250179290771484
    7. 'i' → logprob: -16.250179290771484
    8. '    
' → logprob: -16.875179290771484
    9. '	for' → logprob: -17.750179290771484
    10. 'idx' → logprob: -18.250179290771484

Token 643: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009137284359894693
    2. ' n' → logprob: -7.000913619995117
    3. 'num' → logprob: -13.250913619995117
    4. '   ' → logprob: -14.625913619995117
    5. '	n' → logprob: -17.625913619995117
    6. 'x' → logprob: -18.000913619995117
    7. ' ' → logprob: -19.250913619995117
    8. '```' → logprob: -19.500913619995117
    9. 'i' → logprob: -20.250913619995117
    10. ' num' → logprob: -20.375913619995117

Token 644: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031784253660589457
    2. 'in' → logprob: -5.753178596496582
    3. ',' → logprob: -15.503178596496582
    4. 'n' → logprob: -15.628178596496582
    5. '_in' → logprob: -16.128177642822266
    6. ' ' → logprob: -16.128177642822266
    7. '	in' → logprob: -16.878177642822266
    8. 's' → logprob: -17.378177642822266
    9. ' ,' → logprob: -17.753177642822266
    10. ' n' → logprob: -18.003177642822266

Token 645: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.008642463013529778
    2. ' nums' → logprob: -4.758642673492432
    3. 'num' → logprob: -10.758642196655273
    4. '(nums' → logprob: -12.133642196655273
    5. '   ' → logprob: -15.008642196655273
    6. '[' → logprob: -15.258642196655273
    7. 'numbers' → logprob: -15.508642196655273
    8. '_nums' → logprob: -15.758642196655273
    9. 'Nums' → logprob: -16.008642196655273
    10. ' ' → logprob: -16.133642196655273

Token 646: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3606176972389221
    2. ':
' → logprob: -1.2356176376342773
    3. '       ' → logprob: -5.235617637634277
    4. '   ' → logprob: -6.110617637634277
    5. '<|end|>' → logprob: -6.485617637634277
    6. '):
' → logprob: -6.610617637634277
    7. '<|end|>' → logprob: -7.610617637634277
    8. '[::-' → logprob: -8.735617637634277
    9. '():
' → logprob: -8.860617637634277
    10. ',' → logprob: -8.985617637634277

Token 647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004715450922958553
    2. ' if' → logprob: -8.500471115112305
    3. '<|end|>' → logprob: -8.875471115112305
    4. '   ' → logprob: -10.375471115112305
    5. '```' → logprob: -10.500471115112305
    6. 'if' → logprob: -10.625471115112305
    7. '[' → logprob: -11.125471115112305
    8. ',' → logprob: -11.625471115112305
    9. '<|end|>' → logprob: -11.875471115112305
    10. ' ' → logprob: -13.125471115112305

Token 648: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4124501645565033
    2. 'if' (adapté à ' if') → logprob: -1.4124501943588257
    3. '       ' → logprob: -2.412450075149536
    4. '   ' → logprob: -5.412450313568115
    5. '	if' → logprob: -8.787449836730957
    6. '```' → logprob: -9.162449836730957
    7. '           ' → logprob: -9.537449836730957
    8. ' ' → logprob: -10.912449836730957
    9. 'print' → logprob: -11.162449836730957
    10. '	   ' → logprob: -13.412449836730957

Token 649: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1269284337759018
    2. 'n' → logprob: -2.1269283294677734
    3. '       ' → logprob: -15.876928329467773
    4. '	n' → logprob: -16.376928329467773
    5. ')n' → logprob: -17.626928329467773
    6. ' ' → logprob: -17.751928329467773
    7. ' not' → logprob: -17.751928329467773
    8. ' н' → logprob: -18.626928329467773
    9. '   ' → logprob: -18.751928329467773
    10. '    ' → logprob: -18.876928329467773

Token 650: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08044314384460449
    2. '==' → logprob: -2.8304431438446045
    3. ' !=' → logprob: -4.080443382263184
    4. '>' → logprob: -7.455443382263184
    5. '!=' → logprob: -7.705443382263184
    6. ' >' → logprob: -7.955443382263184
    7. '=' → logprob: -11.205443382263184
    8. ' and' → logprob: -12.705443382263184
    9. '<|end|>' → logprob: -13.080443382263184
    10. 'and' → logprob: -13.455443382263184

Token 651: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -22.250003814697266
    4. '```' → logprob: -22.750003814697266
    5. '   ' → logprob: -22.875003814697266
    6. '০' → logprob: -24.125003814697266
    7. ' ' → logprob: -24.375003814697266
    8. '=' → logprob: -24.875003814697266
    9. ' ' → logprob: -24.875003814697266
    10. '<|end|>' → logprob: -25.000003814697266

Token 652: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '```' → logprob: -23.5
    4. '=' → logprob: -25.125
    5. '۰' → logprob: -26.0
    6. '>' → logprob: -26.25
    7. '   ' → logprob: -26.25
    8. '`' → logprob: -26.875
    9. '#' → logprob: -27.25
    10. '``' → logprob: -27.375

Token 653: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007340633776038885
    2. '           ' → logprob: -5.257340431213379
    3. ':
' → logprob: -6.257340431213379
    4. '       ' → logprob: -8.882340431213379
    5. ':return' → logprob: -10.632340431213379
    6. ' :' → logprob: -11.882340431213379
    7. '   ' → logprob: -12.132340431213379
    8. '	       ' → logprob: -13.382340431213379
    9. '          ' → logprob: -13.507340431213379
    10. ',' → logprob: -13.632340431213379

Token 654: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015133652777876705
    2. '       ' → logprob: -9.125151634216309
    3. 'break' → logprob: -10.250151634216309
    4. '		' → logprob: -12.875151634216309
    5. '	       ' → logprob: -13.375151634216309
    6. ' break' → logprob: -14.125151634216309
    7. '```' → logprob: -14.250151634216309
    8. 'return' → logprob: -14.750151634216309
    9. '
' → logprob: -15.375151634216309
    10. '          ' → logprob: -15.375151634216309

Token 655: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20256780087947845
    2. 'break' (adapté à ' break') → logprob: -1.7025678157806396
    3. ' break' → logprob: -7.3275675773620605
    4. 'return' → logprob: -8.452568054199219
    5. '               ' → logprob: -9.077568054199219
    6. '	       ' → logprob: -9.577568054199219
    7. '	break' → logprob: -9.827568054199219
    8. '		' → logprob: -10.827568054199219
    9. '```' → logprob: -10.952568054199219
    10. '       ' → logprob: -13.202568054199219

Token 656: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.1424973713001236e-05
    2. 'print' → logprob: -11.250031471252441
    3. '```' → logprob: -11.625031471252441
    4. ' print' → logprob: -11.875031471252441
    5. ',' → logprob: -13.750031471252441
    6. '   ' → logprob: -14.375031471252441
    7. '
' → logprob: -15.125031471252441
    8. '           ' → logprob: -16.000030517578125
    9. '<|end|>' → logprob: -16.250030517578125
    10. '`' → logprob: -17.250030517578125

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03586900234222412
    2. '   ' → logprob: -3.6608691215515137
    3. ' print' → logprob: -4.910869121551514
    4. 'print' → logprob: -6.160869121551514
    5. '```' → logprob: -10.035868644714355
    6. '	print' → logprob: -14.035868644714355
    7. ',' → logprob: -14.285868644714355
    8. '<|end|>' → logprob: -14.910868644714355
    9. '   ' → logprob: -15.535868644714355
    10. '
' → logprob: -15.785868644714355

Token 658: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005618385039269924
    2. ' print' → logprob: -5.255618572235107
    3. '       ' → logprob: -8.38061809539795
    4. '   ' → logprob: -9.25561809539795
    5. '```' → logprob: -9.75561809539795
    6. '
' → logprob: -14.00561809539795
    7. '	print' → logprob: -14.50561809539795
    8. '``' → logprob: -15.38061809539795
    9. '        
' → logprob: -16.755619049072266
    10. '           ' → logprob: -17.255619049072266

Token 659: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002060436672763899
    2. ' print' → logprob: -8.500205993652344
    3. '       ' → logprob: -13.250205993652344
    4. '   ' → logprob: -14.125205993652344
    5. '	print' → logprob: -18.375205993652344
    6. '```' → logprob: -18.500205993652344
    7. '
' → logprob: -18.750205993652344
    8. '#print' → logprob: -20.625205993652344
    9. '        
' → logprob: -21.750205993652344
    10. '           ' → logprob: -22.250205993652344

Token 660: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.31370362639427185
    2. 'iche' → logprob: -1.3137036561965942
    3. 'ichage' → logprob: -8.563703536987305
    4. 'ich' → logprob: -9.188703536987305
    5. 'ic' → logprob: -9.688703536987305
    6. '#' → logprob: -10.438703536987305
    7. '   ' → logprob: -10.438703536987305
    8. '       ' → logprob: -11.563703536987305
    9. '
' → logprob: -11.813703536987305
    10. '```' → logprob: -13.063703536987305

Token 661: ' le' (ID: 505)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.47555527091026306
    2. '(dist' → logprob: -1.2255553007125854
    3. ' dist' → logprob: -2.475555181503296
    4. '       ' → logprob: -7.350555419921875
    5. '(' → logprob: -10.100555419921875
    6. '   ' → logprob: -10.350555419921875
    7. ' (' → logprob: -11.100555419921875
    8. 'print' → logprob: -11.725555419921875
    9. '	dist' → logprob: -12.100555419921875
    10. '_dist' → logprob: -13.725555419921875

Token 662: ' résultat' (ID: 62556)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.0126840758603066e-05
    2. ' dist' → logprob: -10.250040054321289
    3. '(dist' → logprob: -13.125040054321289
    4. 'print' → logprob: -13.250040054321289
    5. 'result' → logprob: -14.750040054321289
    6. '   ' → logprob: -15.625040054321289
    7. 'distance' → logprob: -16.00004005432129
    8. 'nombre' → logprob: -16.37504005432129
    9. '	dist' → logprob: -16.87504005432129
    10. 'minimal' → logprob: -17.12504005432129

Token 663: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019302254542708397
    2. 'print' → logprob: -4.0193023681640625
    3. ' print' → logprob: -6.8943023681640625
    4. '   ' → logprob: -8.894302368164062
    5. ',' → logprob: -15.519302368164062
    6. '(print' → logprob: -15.519302368164062
    7. '           ' → logprob: -15.644302368164062
    8. '	print' → logprob: -15.644302368164062
    9. '```' → logprob: -16.144302368164062
    10. '      ' → logprob: -17.019302368164062

Token 664: ' pour' (ID: 1930)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.09943637996912003
    2. 'dist' → logprob: -2.7244362831115723
    3. 'print' → logprob: -3.5994362831115723
    4. '   ' → logprob: -7.349436283111572
    5. '       ' → logprob: -7.599436283111572
    6. '(min' → logprob: -8.72443675994873
    7. '(print' → logprob: -8.97443675994873
    8. '(' → logprob: -9.34943675994873
    9. '(f' → logprob: -9.59943675994873
    10. ' (' → logprob: -9.97443675994873

Token 665: ' chaque' (ID: 21194)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12703268229961395
    2. ' n' → logprob: -2.12703275680542
    3. 'print' → logprob: -9.502032279968262
    4. '   ' → logprob: -11.252032279968262
    5. ' print' → logprob: -12.002032279968262
    6. ' ' → logprob: -12.627032279968262
    7. '(n' → logprob: -12.877032279968262
    8. '       ' → logprob: -14.002032279968262
    9. '    ' → logprob: -14.252032279968262
    10. 'str' → logprob: -15.002032279968262

Token 666: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003377099521458149
    2. ' n' → logprob: -5.7533769607543945
    3. 'print' → logprob: -8.628376960754395
    4. '   ' → logprob: -11.003376960754395
    5. 'nombre' → logprob: -13.253376960754395
    6. ' print' → logprob: -14.253376960754395
    7. '
' → logprob: -14.878376960754395
    8. ' ' → logprob: -15.378376960754395
    9. '```' → logprob: -15.378376960754395
    10. '	n' → logprob: -16.37837791442871

Token 667: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058158036321401596
    2. 'print' → logprob: -2.9331579208374023
    3. ' print' → logprob: -5.933157920837402
    4. '   ' → logprob: -7.558157920837402
    5. '```' → logprob: -10.058157920837402
    6. '(print' → logprob: -10.933157920837402
    7. ',' → logprob: -11.183157920837402
    8. '(' → logprob: -11.683157920837402
    9. '{' → logprob: -12.808157920837402
    10. '	print' → logprob: -12.933157920837402

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015406081452965736
    2. 'print' → logprob: -4.265406131744385
    3. ' print' → logprob: -6.765406131744385
    4. '   ' → logprob: -9.765405654907227
    5. '```' → logprob: -10.390405654907227
    6. '	print' → logprob: -15.140405654907227
    7. '`' → logprob: -15.265405654907227
    8. '           ' → logprob: -16.390405654907227
    9. '``' → logprob: -16.765405654907227
    10. '        
' → logprob: -17.140405654907227

Token 669: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00013774730905424803
    2. ' print' → logprob: -9.000137329101562
    3. '       ' → logprob: -11.250137329101562
    4. '   ' → logprob: -13.750137329101562
    5. '```' → logprob: -15.500137329101562
    6. '	print' → logprob: -17.250137329101562
    7. '#print' → logprob: -19.625137329101562
    8. '
' → logprob: -20.875137329101562
    9. '.print' → logprob: -21.125137329101562
    10. '        
' → logprob: -21.500137329101562

Token 670: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.00013047587708570063
    2. 'dist' → logprob: -9.000130653381348
    3. '(' → logprob: -11.875130653381348
    4. ' dist' → logprob: -16.00012969970703
    5. ' (' → logprob: -18.25012969970703
    6. '(distance' → logprob: -18.37512969970703
    7. '	dist' → logprob: -18.75012969970703
    8. '(f' → logprob: -19.50012969970703
    9. '(dest' → logprob: -19.62512969970703
    10. '(d' → logprob: -19.62512969970703

Token 671: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.703443770878948e-06
    2. ')[' → logprob: -13.000007629394531
    3. '[' → logprob: -13.250007629394531
    4. '[
' → logprob: -13.375007629394531
    5. 'n' → logprob: -14.000007629394531
    6. ')n' → logprob: -14.000007629394531
    7. ' [' → logprob: -15.125007629394531
    8. ')' → logprob: -16.75000762939453
    9. '][' → logprob: -17.25000762939453
    10. ' n' → logprob: -17.37500762939453

Token 672: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -1.2113979209971149e-05
    2. ')' → logprob: -11.625012397766113
    3. ' ])' → logprob: -13.375012397766113
    4. '])
' → logprob: -14.625012397766113
    5. '[n' → logprob: -14.625012397766113
    6. ']' → logprob: -14.875012397766113
    7. ')])' → logprob: -16.250011444091797
    8. '))' → logprob: -16.875011444091797
    9. '[' → logprob: -17.000011444091797
    10. '   ' → logprob: -17.875011444091797

Token 673: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01673680543899536
    2. 'minimal' → logprob: -4.76673698425293
    3. '```' → logprob: -6.14173698425293
    4. '#' → logprob: -6.14173698425293
    5. '<|end|>' → logprob: -6.26673698425293
    6. ' if' → logprob: -6.76673698425293
    7. 'main' → logprob: -7.64173698425293
    8. ' minimal' → logprob: -9.01673698425293
    9. '
' → logprob: -10.64173698425293
    10. '<|end|>' → logprob: -10.89173698425293

Token 674: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012552506290376186
    2. ' __' → logprob: -4.387552738189697
    3. 'name' → logprob: -10.387552261352539
    4. '_name' → logprob: -12.137552261352539
    5. 'True' → logprob: -12.512552261352539
    6. ' name' → logprob: -14.387552261352539
    7. 'Name' → logprob: -14.512552261352539
    8. '/__' → logprob: -14.762552261352539
    9. '```' → logprob: -15.262552261352539
    10. '___' → logprob: -15.387552261352539

Token 675: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11103461682796478
    2. '==' → logprob: -2.486034631729126
    3. ' ==' → logprob: -4.236034393310547
    4. '=="' → logprob: -5.236034393310547
    5. '=='' → logprob: -6.986034393310547
    6. '```' → logprob: -7.986034393310547
    7. '[' → logprob: -8.361034393310547
    8. 'name' → logprob: -8.736034393310547
    9. '__.__' → logprob: -8.736034393310547
    10. '__[' → logprob: -10.486034393310547

Token 676: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005922158248722553
    2. '__.__' → logprob: -5.755922317504883
    3. '==' → logprob: -6.255922317504883
    4. '=="' → logprob: -7.630922317504883
    5. ' ==' → logprob: -8.755922317504883
    6. '__.' → logprob: -10.130922317504883
    7. '__["' → logprob: -10.255922317504883
    8. '=='' → logprob: -10.255922317504883
    9. '```' → logprob: -11.630922317504883
    10. '.__' → logprob: -11.630922317504883

Token 677: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.24149028956890106
    2. ' ==' → logprob: -1.7414902448654175
    3. '=="' → logprob: -3.741490364074707
    4. '__' → logprob: -4.741490364074707
    5. '=='' → logprob: -4.991490364074707
    6. '==
' → logprob: -10.991490364074707
    7. '=' → logprob: -11.741490364074707
    8. '===' → logprob: -11.741490364074707
    9. '==="' → logprob: -13.116490364074707
    10. '==='' → logprob: -13.241490364074707

Token 678: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16023844480514526
    2. ''' → logprob: -1.91023850440979
    3. '__' → logprob: -11.160238265991211
    4. ' "__' → logprob: -16.03523826599121
    5. ' '__' → logprob: -18.41023826599121
    6. ''m' → logprob: -19.16023826599121
    7. '"name' → logprob: -19.41023826599121
    8. ''app' → logprob: -19.53523826599121
    9. '"user' → logprob: -19.53523826599121
    10. ''name' → logprob: -20.16023826599121

Token 679: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0022620675154030323
    2. 'name' → logprob: -6.502262115478516
    3. '__' → logprob: -7.252262115478516
    4. 'built' → logprob: -10.377262115478516
    5. 'python' → logprob: -12.252262115478516
    6. '__":
' → logprob: -12.627262115478516
    7. 'py' → logprob: -13.002262115478516
    8. 'builtin' → logprob: -13.627262115478516
    9. '```' → logprob: -13.627262115478516
    10. '"' → logprob: -14.252262115478516

Token 680: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07307753711938858
    2. '__' → logprob: -2.698077440261841
    3. '__':
' → logprob: -5.82307767868042
    4. '__["' → logprob: -9.323077201843262
    5. '__.__' → logprob: -11.198077201843262
    6. '==' → logprob: -11.573077201843262
    7. '__.' → logprob: -11.698077201843262
    8. '__((' → logprob: -11.698077201843262
    9. '__()
' → logprob: -11.948077201843262
    10. '__:' → logprob: -12.323077201843262

Token 681: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.7372048862162046e-05
    2. ' main' → logprob: -11.250027656555176
    3. '	main' → logprob: -11.250027656555176
    4. '   ' → logprob: -14.000027656555176
    5. '__' → logprob: -15.625027656555176
    6. '(main' → logprob: -15.875027656555176
    7. '_main' → logprob: -15.875027656555176
    8. '```' → logprob: -16.25002670288086
    9. '.main' → logprob: -17.87502670288086
    10. 'mainwindow' → logprob: -18.87502670288086

Token 682: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -9.088346359931165e-07
    2. ' main' → logprob: -14.000000953674316
    3. '	main' → logprob: -21.25
    4. '   ' → logprob: -22.25
    5. '(main' → logprob: -26.25
    6. '.main' → logprob: -26.375
    7. '_main' → logprob: -27.375
    8. ' ' → logprob: -27.75
    9. '```' → logprob: -28.375
    10. 'Main' → logprob: -29.0

Token 683: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 681
Tokens correctement prédits (1ère position, stricte): 238
Tokens correctement prédits (1ère position, avec adaptation): 257
Tokens correctement prédits (top 10): 480
Précision stricte (1ère position): 34.95%
Précision adaptée (1ère position): 37.74%
Précision (top 10): 70.48%
================================================================================
