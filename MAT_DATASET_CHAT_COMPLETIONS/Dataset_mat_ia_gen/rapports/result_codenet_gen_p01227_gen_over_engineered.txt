================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple
import sys

class DataSet:
    def __init__(self, n: int, k: int, houses: List[int]):
        self.n = n
        self.k = k
        self.houses = houses

class InputReader:
    def __init__(self, input_source=sys.stdin):
        self.input_source = input_source
        self.lines = self.input_source.read().strip().split('\n')
        self.index = 0

    def read_int(self) -> int:
        val = int(self.lines[self.index])
        self.index += 1
        return val

    def read_ints(self) -> List[int]:
        vals = list(map(int, self.lines[self.index].split()))
        self.index += 1
        return vals

    def read_dataset(self) -> DataSet:
        n, k = self.read_ints()
        houses = self.read_ints()
        return DataSet(n, k, houses)

class EdgeDifferences:
    def __init__(self, houses: List[int]):
        self.houses = houses
        self.differences = self._compute_differences()

    def _compute_differences(self) -> List[int]:
        return [self.houses[i+1] - self.houses[i] for i in range(len(self.houses)-1)]

class WireLengthOptimizer:
    def __init__(self, dataset: DataSet):
        self.dataset = dataset
        self.diff = EdgeDifferences(dataset.houses).differences

    def minimal_total_wire_length(self) -> int:
        if self.dataset.k >= self.dataset.n:
            # Each house can have its own generator, no wire needed
            return 0
        # Sort differences descendingly to find biggest gaps
        sorted_gaps = sorted(self.diff, reverse=True)
        # Sum of gaps minus the largest k-1 gaps where generators can be placed
        return sum(self.diff) - sum(sorted_gaps[:self.dataset.k-1])

class ProblemESolver:
    def __init__(self, input_reader: InputReader):
        self.input_reader = input_reader

    def solve(self) -> List[int]:
        t = self.input_reader.read_int()
        results = []
        for _ in range(t):
            dataset = self.input_reader.read_dataset()
            optimizer = WireLengthOptimizer(dataset)
            min_length = optimizer.minimal_total_wire_length()
            results.append(min_length)
        return results

def main():
    reader = InputReader()
    solver = ProblemESolver(reader)
    results = solver.solve()
    print('\n'.join(map(str, results)))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.3551808297634125
    2. 'List' → logprob: -1.7301808595657349
    3. 'Any' → logprob: -2.4801807403564453
    4. ' Any' → logprob: -3.3551807403564453
    5. ' Optional' → logprob: -6.730180740356445
    6. 'Optional' → logprob: -7.105180740356445
    7. ' Union' → logprob: -7.855180740356445
    8. 'Union' → logprob: -8.355180740356445
    9. 'Iterable' → logprob: -8.605180740356445
    10. ' Generator' → logprob: -9.230180740356445

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4787392020225525
    2. 'def' → logprob: -1.4787392616271973
    3. '<|end|>' → logprob: -3.3537392616271973
    4. '
' → logprob: -3.6037392616271973
    5. '\n' → logprob: -4.228739261627197
    6. '\' → logprob: -4.228739261627197
    7. '[' → logprob: -4.353739261627197
    8. ',' → logprob: -4.478739261627197
    9. 'import' → logprob: -4.853739261627197
    10. 'a' → logprob: -5.478739261627197

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.40772536396980286
    2. 'Optional' → logprob: -1.1577253341674805
    3. ' Dict' → logprob: -4.7827253341674805
    4. 'Dict' → logprob: -4.9077253341674805
    5. 'Tuple' → logprob: -5.7827253341674805
    6. ' Tuple' → logprob: -7.0327253341674805
    7. ' Union' → logprob: -7.4077253341674805
    8. 'Union' → logprob: -9.28272533416748
    9. 'Iterable' → logprob: -10.03272533416748
    10. 'Any' → logprob: -10.53272533416748

Token 6: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6439837217330933
    2. '```' → logprob: -2.018983840942383
    3. ',' → logprob: -2.518983840942383
    4. '\n' → logprob: -2.518983840942383
    5. '\' → logprob: -3.018983840942383
    6. 'import' → logprob: -3.393983840942383
    7. '[' → logprob: -3.518983840942383
    8. ':' → logprob: -4.268983840942383
    9. '(' → logprob: -4.393983840942383
    10. 'a' → logprob: -4.518983840942383

Token 7: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7070744633674622
    2. '\n' → logprob: -1.7070744037628174
    3. '```' → logprob: -1.8320744037628174
    4. 'import' → logprob: -3.0820744037628174
    5. 'a' → logprob: -3.7070744037628174
    6. '\' → logprob: -3.8320744037628174
    7. '
' → logprob: -4.0820746421813965
    8. ',' → logprob: -4.2070746421813965
    9. '`' → logprob: -4.3320746421813965
    10. 'd' → logprob: -5.7070746421813965

Token 8: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.2747032344341278
    2. ' numpy' → logprob: -2.27470326423645
    3. ' sys' → logprob: -3.02470326423645
    4. ' pandas' → logprob: -3.14970326423645
    5. ' typing' → logprob: -3.89970326423645
    6. ' re' → logprob: -4.149703025817871
    7. ' math' → logprob: -5.774703025817871
    8. ' torch' → logprob: -6.524703025817871
    9. ' json' → logprob: -7.149703025817871
    10. ' collections' → logprob: -7.149703025817871

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1697242259979248
    2. '
' → logprob: -1.4197242259979248
    3. '```' → logprob: -1.7947242259979248
    4. '.' → logprob: -2.044724225997925
    5. '\' → logprob: -2.669724225997925
    6. 'import' → logprob: -3.669724225997925
    7. '

' → logprob: -4.169724464416504
    8. 'def' → logprob: -4.419724464416504
    9. ',' → logprob: -5.169724464416504
    10. '.
' → logprob: -5.544724464416504

Token 10: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01726911962032318
    2. '```' → logprob: -5.142269134521484
    3. 'import' → logprob: -5.392269134521484
    4. '\n' → logprob: -6.767269134521484
    5. '`' → logprob: -7.017269134521484
    6. 'class' → logprob: -7.267269134521484
    7. '\' → logprob: -7.392269134521484
    8. 'de' → logprob: -7.767269134521484
    9. '.' → logprob: -7.767269134521484
    10. '
' → logprob: -8.017269134521484

Token 11: ' Data' (ID: 4833)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006147769279778004
    2. ' My' → logprob: -5.256147861480713
    3. ' Data' → logprob: -8.256147384643555
    4. ' Space' → logprob: -8.381147384643555
    5. ' Parser' → logprob: -9.631147384643555
    6. ' Solution' → logprob: -10.381147384643555
    7. ' System' → logprob: -10.381147384643555
    8. ' Vector' → logprob: -10.506147384643555
    9. ' Processor' → logprob: -10.756147384643555
    10. ' Calculator' → logprob: -10.756147384643555

Token 12: 'Set' (ID: 1984)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47844210267066956
    2. ':' → logprob: -0.9784420728683472
    3. 'Processor' → logprob: -5.728442192077637
    4. ':
' → logprob: -8.978442192077637
    5. '(
' → logprob: -8.978442192077637
    6. ' :' → logprob: -9.103442192077637
    7. 'Source' → logprob: -9.103442192077637
    8. 'Handler' → logprob: -9.228442192077637
    9. '():' → logprob: -9.478442192077637
    10. ' (' → logprob: -10.103442192077637

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007687662728130817
    2. '(' → logprob: -4.882687568664551
    3. '(:' → logprob: -11.00768756866455
    4. '():' → logprob: -11.00768756866455
    5. ' :' → logprob: -11.25768756866455
    6. '```' → logprob: -11.25768756866455
    7. '):' → logprob: -12.38268756866455
    8. ':**' → logprob: -12.63268756866455
    9. '[' → logprob: -12.75768756866455
    10. ':
' → logprob: -13.25768756866455

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16102458536624908
    2. ':' → logprob: -2.036024570465088
    3. '(' → logprob: -4.161024570465088
    4. '```' → logprob: -6.411024570465088
    5. 'def' → logprob: -8.536025047302246
    6. ':
' → logprob: -9.036025047302246
    7. '(object' → logprob: -9.036025047302246
    8. '    
' → logprob: -9.161025047302246
    9. '():' → logprob: -9.661025047302246
    10. '  ' → logprob: -10.036025047302246

Token 15: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6960532665252686
    2. ' def' → logprob: -1.1960532665252686
    3. 'def' (adapté à ' def') → logprob: -2.0710532665252686
    4. '    ' → logprob: -2.9460532665252686
    5. ' ' → logprob: -5.071053504943848
    6. '    
' → logprob: -5.071053504943848
    7. '(' → logprob: -6.696053504943848
    8. ' pass' → logprob: -6.821053504943848
    9. '     
' → logprob: -6.946053504943848
    10. '\' → logprob: -7.071053504943848

Token 16: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02509334683418274
    2. 'itialize' → logprob: -4.0250935554504395
    3. 'ialize' → logprob: -5.5250935554504395
    4. ' init' → logprob: -7.1500935554504395
    5. ' _' → logprob: -7.2750935554504395
    6. '__' → logprob: -7.5250935554504395
    7. ' ' → logprob: -7.9000935554504395
    8. 'inition' → logprob: -9.525093078613281
    9. 'italize' → logprob: -9.525093078613281
    10. '_init' → logprob: -9.775093078613281

Token 17: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -17.125
    3. ' init' → logprob: -18.625
    4. 'int' → logprob: -20.375
    5. 'in' → logprob: -20.75
    6. 'innit' → logprob: -21.0
    7. 'inite' → logprob: -21.375
    8. '_init' → logprob: -21.75
    9. 'inti' → logprob: -22.5
    10. '	init' → logprob: -22.625

Token 18: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.024762431159615517
    2. '__' → logprob: -3.7747623920440674
    3. '__(
' → logprob: -7.0247626304626465
    4. '__((' → logprob: -8.274762153625488
    5. '(self' → logprob: -8.399762153625488
    6. '(' → logprob: -9.524762153625488
    7. '__('' → logprob: -10.149762153625488
    8. '__(*' → logprob: -11.649762153625488
    9. '```' → logprob: -12.524762153625488
    10. '__("' → logprob: -12.524762153625488

Token 19: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009122979827225208
    2. ' self' → logprob: -7.000912189483643
    3. '(self' → logprob: -14.8759126663208
    4. ')' → logprob: -15.0009126663208
    5. ',self' → logprob: -16.375911712646484
    6. ' ' → logprob: -16.750911712646484
    7. '	self' → logprob: -17.250911712646484
    8. '_self' → logprob: -17.500911712646484
    9. '$self' → logprob: -18.375911712646484
    10. '[self' → logprob: -18.500911712646484

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03798123076558113
    2. ' ,' → logprob: -3.9129812717437744
    3. 'self' → logprob: -4.662981033325195
    4. ',self' → logprob: -5.662981033325195
    5. '(self' → logprob: -6.287981033325195
    6. ')' → logprob: -6.287981033325195
    7. '<|end|>' → logprob: -8.662981033325195
    8. '_self' → logprob: -9.412981033325195
    9. ' self' → logprob: -9.787981033325195
    10. ' )' → logprob: -10.037981033325195

Token 21: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6723117828369141
    2. ' data' → logprob: -0.9223117828369141
    3. 'self' → logprob: -2.672311782836914
    4. 'data' → logprob: -3.797311782836914
    5. ' file' → logprob: -9.547311782836914
    6. ' samples' → logprob: -10.172311782836914
    7. ' ' → logprob: -10.422311782836914
    8. ' records' → logprob: -10.547311782836914
    9. ' )' → logprob: -10.672311782836914
    10. ' features' → logprob: -10.797311782836914

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5248973965644836
    2. '_' → logprob: -1.5248973369598389
    3. ')' → logprob: -2.024897336959839
    4. 'umber' → logprob: -4.399897575378418
    5. '_:' → logprob: -4.649897575378418
    6. '_samples' → logprob: -4.899897575378418
    7. '):' → logprob: -5.024897575378418
    8. '_)' → logprob: -5.024897575378418
    9. 'ame' → logprob: -5.774897575378418
    10. ',' → logprob: -5.774897575378418

Token 23: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0796772763133049
    2. 'int' → logprob: -2.5796773433685303
    3. ' List' → logprob: -7.204677104949951
    4. ' ' → logprob: -11.20467758178711
    5. 'List' → logprob: -11.45467758178711
    6. ' )' → logprob: -11.57967758178711
    7. ')' → logprob: -12.45467758178711
    8. '[int' → logprob: -12.57967758178711
    9. '=int' → logprob: -13.32967758178711
    10. ']int' → logprob: -15.20467758178711

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3230724334716797
    2. '):' → logprob: -1.4480724334716797
    3. ')' → logprob: -3.1980724334716797
    4. ',n' → logprob: -9.82307243347168
    5. ':' → logprob: -10.07307243347168
    6. ' ,' → logprob: -10.57307243347168
    7. ')->' → logprob: -10.69807243347168
    8. ',int' → logprob: -10.82307243347168
    9. ',a' → logprob: -12.44807243347168
    10. '),' → logprob: -12.44807243347168

Token 25: ' k' (ID: 372)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.030385198071599007
    2. 'data' → logprob: -4.0303850173950195
    3. ' values' → logprob: -5.2803850173950195
    4. ' ' → logprob: -6.5303850173950195
    5. ' samples' → logprob: -6.7803850173950195
    6. ' rows' → logprob: -7.6553850173950195
    7. ' features' → logprob: -7.9053850173950195
    8. ' items' → logprob: -7.9053850173950195
    9. ' points' → logprob: -8.15538501739502
    10. ' dataset' → logprob: -8.15538501739502

Token 26: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016855321591719985
    2. '):' → logprob: -6.876685619354248
    3. ')' → logprob: -7.751685619354248
    4. ':int' → logprob: -9.25168514251709
    5. '=' → logprob: -9.62668514251709
    6. ' :' → logprob: -10.50168514251709
    7. ',' → logprob: -10.75168514251709
    8. ' ):' → logprob: -12.37668514251709
    9. '_:' → logprob: -13.00168514251709
    10. ' )' → logprob: -13.87668514251709

Token 27: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28137439489364624
    2. ' int' → logprob: -1.406374454498291
    3. ' List' → logprob: -9.281373977661133
    4. 'List' → logprob: -9.406373977661133
    5. '[int' → logprob: -10.906373977661133
    6. '	int' → logprob: -11.906373977661133
    7. ')' → logprob: -11.906373977661133
    8. ' ' → logprob: -12.156373977661133
    9. ']int' → logprob: -13.156373977661133
    10. ':int' → logprob: -13.281373977661133

Token 28: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3984827697277069
    2. ',' → logprob: -1.2734827995300293
    3. ')' → logprob: -3.0234827995300293
    4. ':' → logprob: -8.773482322692871
    5. ')->' → logprob: -11.648482322692871
    6. '),' → logprob: -12.898482322692871
    7. ' ,' → logprob: -13.023482322692871
    8. ' ):' → logprob: -13.023482322692871
    9. ',int' → logprob: -14.023482322692871
    10. '):
' → logprob: -14.398482322692871

Token 29: ' houses' (ID: 20327)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.018947891891002655
    2. ' values' → logprob: -5.768948078155518
    3. ' points' → logprob: -6.018948078155518
    4. ' d' → logprob: -6.143948078155518
    5. ' samples' → logprob: -6.268948078155518
    6. ' ' → logprob: -6.393948078155518
    7. 'data' → logprob: -6.518948078155518
    8. ' sequences' → logprob: -6.893948078155518
    9. ' lst' → logprob: -7.268948078155518
    10. ' m' → logprob: -7.518948078155518

Token 30: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002042840700596571
    2. '):' → logprob: -6.252042770385742
    3. ')' → logprob: -9.502042770385742
    4. ' :' → logprob: -11.002042770385742
    5. ' ):' → logprob: -12.002042770385742
    6. '_list' → logprob: -12.752042770385742
    7. '_positions' → logprob: -13.002042770385742
    8. '_:' → logprob: -13.127042770385742
    9. '_locations' → logprob: -13.252042770385742
    10. ':list' → logprob: -13.377042770385742

Token 31: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.05512407422065735
    2. 'List' → logprob: -2.930124044418335
    3. ' ' → logprob: -9.555124282836914
    4. '	List' → logprob: -9.805124282836914
    5. ')' → logprob: -10.305124282836914
    6. ':' → logprob: -11.180124282836914
    7. '[List' → logprob: -11.305124282836914
    8. '   ' → logprob: -11.555124282836914
    9. ' list' → logprob: -11.930124282836914
    10. ' Tuple' → logprob: -12.180124282836914

Token 32: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47436821460723877
    2. '[int' → logprob: -0.9743682146072388
    3. '[List' → logprob: -8.84936809539795
    4. '[str' → logprob: -8.97436809539795
    5. '[Int' → logprob: -11.97436809539795
    6. ')' → logprob: -12.47436809539795
    7. '<|end|>' → logprob: -12.72436809539795
    8. '[
' → logprob: -13.09936809539795
    9. '<Tuple' → logprob: -13.34936809539795
    10. '<int' → logprob: -13.47436809539795

Token 33: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.21773941814899445
    2. ']' → logprob: -2.2177393436431885
    3. '])' → logprob: -2.9677393436431885
    4. '],' → logprob: -3.5927393436431885
    5. ']:' → logprob: -5.842739582061768
    6. ')' → logprob: -5.967739582061768
    7. '):' → logprob: -6.217739582061768
    8. ',' → logprob: -8.09273910522461
    9. ']):
' → logprob: -10.34273910522461
    10. ':' → logprob: -11.59273910522461

Token 34: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5147733092308044
    2. '):' → logprob: -1.1397733688354492
    3. '       ' → logprob: -2.639773368835449
    4. ')' → logprob: -4.639773368835449
    5. ',' → logprob: -7.639773368835449
    6. '<|end|>' → logprob: -8.13977336883545
    7. '):
' → logprob: -8.63977336883545
    8. '   ' → logprob: -8.63977336883545
    9. ' ):' → logprob: -9.38977336883545
    10. ' :' → logprob: -9.76477336883545

Token 35: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2211371511220932
    2. '       ' → logprob: -1.8461371660232544
    3. ' self' → logprob: -3.221137046813965
    4. '   ' → logprob: -7.721137046813965
    5. 'n' → logprob: -10.221137046813965
    6. ' ' → logprob: -10.596137046813965
    7. '```' → logprob: -10.596137046813965
    8. ' ' → logprob: -10.971137046813965
    9. '	self' → logprob: -11.221137046813965
    10. '        ' → logprob: -11.221137046813965

Token 36: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.586474597454071
    2. '.n' → logprob: -0.836474597454071
    3. ' .' → logprob: -4.586474418640137
    4. ' n' → logprob: -9.336474418640137
    5. '.k' → logprob: -9.586474418640137
    6. 'n' → logprob: -9.711474418640137
    7. '.h' → logprob: -10.836474418640137
    8. ' ' → logprob: -11.086474418640137
    9. '._' → logprob: -11.586474418640137
    10. '.data' → logprob: -12.961474418640137

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33718910813331604
    2. '=' → logprob: -1.4621890783309937
    3. '<|end|>' → logprob: -3.337189197540283
    4. ',' → logprob: -4.837189197540283
    5. '.' → logprob: -5.587189197540283
    6. ' ' → logprob: -6.087189197540283
    7. '<|end|>' → logprob: -6.462189197540283
    8. ')' → logprob: -7.087189197540283
    9. ' ,' → logprob: -7.087189197540283
    10. '    ' → logprob: -7.837189197540283

Token 38: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03804321587085724
    2. 'n' → logprob: -3.288043260574341
    3. ' ' → logprob: -13.913043022155762
    4. ' ' → logprob: -14.163043022155762
    5. '	n' → logprob: -16.413043975830078
    6. '```' → logprob: -18.288043975830078
    7. ')n' → logprob: -18.913043975830078
    8. '_n' → logprob: -19.413043975830078
    9. '=n' → logprob: -19.538043975830078
    10. '    ' → logprob: -19.663043975830078

Token 39: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01272730901837349
    2. '        ' → logprob: -4.7627272605896
    3. '<|end|>' → logprob: -5.7627272605896
    4. '        
' → logprob: -8.137727737426758
    5. '      ' → logprob: -8.637727737426758
    6. ',' → logprob: -9.262727737426758
    7. ' ' → logprob: -9.387727737426758
    8. '
' → logprob: -9.637727737426758
    9. '    ' → logprob: -9.887727737426758
    10. '<|end|>' → logprob: -10.012727737426758

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03813479095697403
    2. '<|end|>' → logprob: -3.413134813308716
    3. '        
' → logprob: -6.538134574890137
    4. '
' → logprob: -6.538134574890137
    5. '        ' → logprob: -7.288134574890137
    6. ',' → logprob: -8.788134574890137
    7. '<|end|>' → logprob: -8.788134574890137
    8. '      ' → logprob: -8.913134574890137
    9. ' ' → logprob: -9.163134574890137
    10. '    
' → logprob: -9.413134574890137

Token 41: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.37923353910446167
    2. 'self' (adapté à ' self') → logprob: -1.5042335987091064
    3. '       ' → logprob: -2.3792335987091064
    4. ' ' → logprob: -8.129233360290527
    5. ' ' → logprob: -8.754233360290527
    6. '	self' → logprob: -9.129233360290527
    7. '        ' → logprob: -9.254233360290527
    8. '   ' → logprob: -9.754233360290527
    9. '```' → logprob: -11.129233360290527
    10. '	' → logprob: -11.129233360290527

Token 42: '.k' (ID: 9040)
  Prédit: '.k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.k' → logprob: -0.6354470252990723
    2. '.' → logprob: -0.7604470252990723
    3. '.n' → logprob: -6.260447025299072
    4. '.h' → logprob: -7.635447025299072
    5. ' .' → logprob: -9.135446548461914
    6. ',' → logprob: -9.635446548461914
    7. 'k' → logprob: -10.135446548461914
    8. '.к' → logprob: -10.510446548461914
    9. '=' → logprob: -10.635446548461914
    10. '=k' → logprob: -10.885446548461914

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06261900812387466
    2. '=' → logprob: -2.8126189708709717
    3. ' ' → logprob: -7.437619209289551
    4. '<|end|>' → logprob: -9.81261920928955
    5. ' =
' → logprob: -12.93761920928955
    6. '<|end|>' → logprob: -13.06261920928955
    7. ',' → logprob: -13.93761920928955
    8. ')' → logprob: -14.81261920928955
    9. '    ' → logprob: -14.93761920928955
    10. '.' → logprob: -15.18761920928955

Token 44: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.20141518115997314
    2. 'k' → logprob: -1.7014151811599731
    3. ' ' → logprob: -14.076415061950684
    4. ' ' → logprob: -14.451415061950684
    5. '	k' → logprob: -14.576415061950684
    6. '=k' → logprob: -15.826415061950684
    7. '```' → logprob: -17.951416015625
    8. '_k' → logprob: -18.076416015625
    9. '​' → logprob: -18.326416015625
    10. ' к' → logprob: -18.451416015625

Token 45: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012754731578752398
    2. '<|end|>' → logprob: -6.876275539398193
    3. '
' → logprob: -8.876275062561035
    4. 'self' → logprob: -10.501275062561035
    5. '        
' → logprob: -10.626275062561035
    6. '   ' → logprob: -11.501275062561035
    7. '<|end|>' → logprob: -11.501275062561035
    8. '      ' → logprob: -11.626275062561035
    9. '        ' → logprob: -12.751275062561035
    10. ' ' → logprob: -12.751275062561035

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004541486850939691
    2. 'self' → logprob: -7.875453948974609
    3. ' self' → logprob: -10.00045394897461
    4. '<|end|>' → logprob: -11.12545394897461
    5. '   ' → logprob: -12.62545394897461
    6. '	self' → logprob: -13.12545394897461
    7. '
' → logprob: -13.25045394897461
    8. '	' → logprob: -13.62545394897461
    9. '      ' → logprob: -13.75045394897461
    10. '<|end|>' → logprob: -14.25045394897461

Token 47: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.448190838098526
    2. '       ' → logprob: -1.1981908082962036
    3. ' self' → logprob: -2.823190927505493
    4. '	self' → logprob: -10.698190689086914
    5. '   ' → logprob: -10.948190689086914
    6. '```' → logprob: -12.198190689086914
    7. '      ' → logprob: -12.448190689086914
    8. ' ' → logprob: -12.823190689086914
    9. ' ' → logprob: -13.323190689086914
    10. '        ' → logprob: -13.573190689086914

Token 48: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.0018508200300857425
    2. '.' → logprob: -6.376850605010986
    3. ' .' → logprob: -9.251851081848145
    4. '.house' → logprob: -10.501851081848145
    5. 'houses' → logprob: -10.751851081848145
    6. '```' → logprob: -14.126851081848145
    7. '`.' → logprob: -14.501851081848145
    8. '.data' → logprob: -14.626851081848145
    9. '​.' → logprob: -15.376851081848145
    10. ' houses' → logprob: -15.626851081848145

Token 49: 'ouses' (ID: 26940)
  Prédit: 'ouses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouses' → logprob: -1.723973582556937e-05
    2. 'houses' → logprob: -11.125017166137695
    3. 'ouse' → logprob: -13.375017166137695
    4. '   ' → logprob: -14.500017166137695
    5. 'ous' → logprob: -15.875017166137695
    6. 'ou' → logprob: -16.875017166137695
    7. ' houses' → logprob: -17.750017166137695
    8. 'o' → logprob: -17.875017166137695
    9. '       ' → logprob: -17.875017166137695
    10. '```' → logprob: -18.250017166137695

Token 50: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7952175140380859
    2. '.' → logprob: -1.045217514038086
    3. ' =' → logprob: -2.795217514038086
    4. '=' → logprob: -2.920217514038086
    5. '[:]' → logprob: -2.920217514038086
    6. '.append' → logprob: -4.295217514038086
    7. '<|end|>' → logprob: -4.670217514038086
    8. '.extend' → logprob: -6.420217514038086
    9. '[]' → logprob: -7.670217514038086
    10. '<|end|>' → logprob: -7.670217514038086

Token 51: ' houses' (ID: 20327)
  Prédit: ' houses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' houses' → logprob: -0.42871183156967163
    2. 'houses' → logprob: -1.0537118911743164
    3. 'house' → logprob: -12.428711891174316
    4. ' ' → logprob: -13.303711891174316
    5. ' house' → logprob: -13.303711891174316
    6. '[]' → logprob: -13.928711891174316
    7. '   ' → logprob: -14.553711891174316
    8. ' ' → logprob: -14.678711891174316
    9. 'ouses' → logprob: -15.178711891174316
    10. '```' → logprob: -15.303711891174316

Token 52: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009648189879953861
    2. '<|end|>' → logprob: -5.009648323059082
    3. '   ' → logprob: -6.759648323059082
    4. '

' → logprob: -7.509648323059082
    5. 'def' → logprob: -7.634648323059082
    6. '    
' → logprob: -7.884648323059082
    7. '<|end|>' → logprob: -8.884648323059082
    8. '\n' → logprob: -9.634648323059082
    9. '
    
' → logprob: -10.134648323059082
    10. ' def' → logprob: -10.634648323059082

Token 53: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09463910013437271
    2. '   ' → logprob: -2.5946390628814697
    3. 'def' → logprob: -4.344639301300049
    4. '    
' → logprob: -6.094639301300049
    5. ' def' → logprob: -8.46963882446289
    6. '        
' → logprob: -10.09463882446289
    7. '

' → logprob: -10.34463882446289
    8. '<|end|>' → logprob: -10.34463882446289
    9. '\n' → logprob: -11.09463882446289
    10. ' 
' → logprob: -11.21963882446289

Token 54: ' Input' (ID: 10090)
  Prédit: ' Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solver' → logprob: -0.6916138529777527
    2. ' Solution' → logprob: -1.0666139125823975
    3. ' Data' → logprob: -1.9416139125823975
    4. ' Processor' → logprob: -6.066613674163818
    5. ' Runner' → logprob: -6.441613674163818
    6. ' Main' → logprob: -6.816613674163818
    7. ' Input' → logprob: -7.316613674163818
    8. ' Validator' → logprob: -7.316613674163818
    9. ' Point' → logprob: -8.191614151000977
    10. 'Solution' → logprob: -8.316614151000977

Token 55: 'Reader' (ID: 7171)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.09203095734119415
    2. 'Reader' → logprob: -2.4670310020446777
    3. ':' → logprob: -6.717031002044678
    4. 'Handler' → logprob: -7.092031002044678
    5. 'Parser' → logprob: -7.092031002044678
    6. 'Processor' → logprob: -9.71703052520752
    7. '():' → logprob: -10.09203052520752
    8. 'Provider' → logprob: -10.21703052520752
    9. 'Source' → logprob: -11.59203052520752
    10. 'Generator' → logprob: -11.71703052520752

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.0126840758603066e-05
    2. ':
' → logprob: -10.625040054321289
    3. '():' → logprob: -12.125040054321289
    4. ' :' → logprob: -12.250040054321289
    5. '(' → logprob: -13.500040054321289
    6. '):' → logprob: -13.750040054321289
    7. '<|end|>' → logprob: -13.875040054321289
    8. ':def' → logprob: -14.250040054321289
    9. '(object' → logprob: -14.625040054321289
    10. ':

' → logprob: -15.250040054321289

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20242741703987122
    2. '    
' → logprob: -2.327427387237549
    3. ' def' → logprob: -2.827427387237549
    4. '<|end|>' → logprob: -4.577427387237549
    5. '
' → logprob: -5.077427387237549
    6. '```' → logprob: -5.577427387237549
    7. '<|end|>' → logprob: -6.452427387237549
    8. 'def' → logprob: -6.952427387237549
    9. '    ' → logprob: -7.327427387237549
    10. ' 
' → logprob: -7.327427387237549

Token 58: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.025327930226922035
    2. 'def' (adapté à ' def') → logprob: -4.275328159332275
    3. '   ' → logprob: -4.900328159332275
    4. ' @' → logprob: -5.650328159332275
    5. '@' → logprob: -8.900327682495117
    6. '	def' → logprob: -13.400327682495117
    7. 'staticmethod' → logprob: -13.900327682495117
    8. ' ' → logprob: -14.025327682495117
    9. '    ' → logprob: -14.275327682495117
    10. '```' → logprob: -14.650327682495117

Token 59: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.9031585454940796
    2. '_init' → logprob: -1.1531585454940796
    3. '__' → logprob: -2.903158664703369
    4. 'init' → logprob: -2.903158664703369
    5. 'put' → logprob: -3.028158664703369
    6. 'it' → logprob: -3.028158664703369
    7. 'itialize' → logprob: -4.028158664703369
    8. 't' → logprob: -4.153158664703369
    9. 'nit' → logprob: -4.278158664703369
    10. ' init' → logprob: -4.778158664703369

Token 60: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0280383548888494e-06
    2. '_init' → logprob: -14.750000953674316
    3. ' init' → logprob: -16.000001907348633
    4. 'ini' → logprob: -16.000001907348633
    5. 'def' → logprob: -16.125001907348633
    6. '```' → logprob: -16.250001907348633
    7. 'call' → logprob: -17.250001907348633
    8. '__' → logprob: -17.625001907348633
    9. 'new' → logprob: -17.750001907348633
    10. 'in' → logprob: -17.875001907348633

Token 61: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6013251543045044
    2. '(' → logprob: -1.1013251543045044
    3. ' (' → logprob: -2.226325035095215
    4. '__(' → logprob: -4.601325035095215
    5. ')(' → logprob: -7.351325035095215
    6. 'self' → logprob: -8.476325035095215
    7. '_(' → logprob: -9.351325035095215
    8. ',' → logprob: -9.476325035095215
    9. ' ' → logprob: -9.726325035095215
    10. '_' → logprob: -9.726325035095215

Token 62: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009348372928798199
    2. ')' → logprob: -4.759348392486572
    3. ' self' → logprob: -7.259348392486572
    4. '   ' → logprob: -11.134347915649414
    5. ' )' → logprob: -12.009347915649414
    6. '<|end|>' → logprob: -12.884347915649414
    7. '(self' → logprob: -13.509347915649414
    8. '

' → logprob: -14.134347915649414
    9. ' ' → logprob: -14.259347915649414
    10. '
' → logprob: -14.509347915649414

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23833058774471283
    2. '):' → logprob: -1.738330602645874
    3. ' ):' → logprob: -3.613330602645874
    4. ' ,' → logprob: -4.988330364227295
    5. 'self' → logprob: -6.863330364227295
    6. ')' → logprob: -7.238330364227295
    7. ' )' → logprob: -8.488330841064453
    8. '   ' → logprob: -8.738330841064453
    9. '):
' → logprob: -8.863330841064453
    10. ',self' → logprob: -10.488330841064453

Token 64: ' input' (ID: 3422)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08178222179412842
    2. ')' → logprob: -3.206782341003418
    3. '):' → logprob: -3.831782341003418
    4. ' self' → logprob: -5.081782341003418
    5. 'sys' → logprob: -5.581782341003418
    6. '):
' → logprob: -6.331782341003418
    7. 'input' → logprob: -6.581782341003418
    8. 'stream' → logprob: -6.831782341003418
    9. '   ' → logprob: -7.331782341003418
    10. 'file' → logprob: -8.331782341003418

Token 65: '_source' (ID: 23344)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.7537121176719666
    2. '_stream' → logprob: -1.3787121772766113
    3. '):' → logprob: -2.2537121772766113
    4. '_lines' → logprob: -2.6287121772766113
    5. '_source' → logprob: -3.2537121772766113
    6. ':' → logprob: -3.7537121772766113
    7. ')' → logprob: -4.503712177276611
    8. '=sys' → logprob: -5.003712177276611
    9. '_' → logprob: -5.378712177276611
    10. '_file' → logprob: -5.378712177276611

Token 66: '=sys' (ID: 149200)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029130762442946434
    2. ':' → logprob: -3.779130697250366
    3. ')' → logprob: -5.529130935668945
    4. '=' → logprob: -7.029130935668945
    5. ' ):' → logprob: -7.529130935668945
    6. '=None' → logprob: -8.029130935668945
    7. ',' → logprob: -9.779130935668945
    8. '):
' → logprob: -10.279130935668945
    9. ' :' → logprob: -10.529130935668945
    10. '=sys' → logprob: -11.029130935668945

Token 67: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.013492299243807793
    2. '.' → logprob: -4.638492107391357
    3. '.argv' → logprob: -6.013492107391357
    4. '._' → logprob: -7.763492107391357
    5. 'stdin' → logprob: -8.013492584228516
    6. '.stdout' → logprob: -9.013492584228516
    7. ')' → logprob: -9.138492584228516
    8. '.__' → logprob: -9.263492584228516
    9. '.stderr' → logprob: -10.013492584228516
    10. ' .' → logprob: -10.513492584228516

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008732284768484533
    2. ')' → logprob: -7.75087308883667
    3. '):
' → logprob: -8.000873565673828
    4. ':' → logprob: -10.000873565673828
    5. ' ):' → logprob: -10.000873565673828
    6. ',' → logprob: -11.500873565673828
    7. '.readline' → logprob: -13.125873565673828
    8. '):
' → logprob: -13.500873565673828
    9. '   ' → logprob: -13.750873565673828
    10. ' ' → logprob: -15.125873565673828

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0155278155580163
    2. '   ' → logprob: -5.640527725219727
    3. '<|end|>' → logprob: -5.640527725219727
    4. ':' → logprob: -6.015527725219727
    5. '    ' → logprob: -6.140527725219727
    6. ')' → logprob: -6.640527725219727
    7. 'self' → logprob: -7.515527725219727
    8. '):' → logprob: -8.015527725219727
    9. '        
' → logprob: -8.140527725219727
    10. '
' → logprob: -8.140527725219727

Token 70: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.21172408759593964
    2. ' self' → logprob: -1.836724042892456
    3. '       ' → logprob: -3.461724042892456
    4. '	self' → logprob: -9.961724281311035
    5. 'input' → logprob: -10.961724281311035
    6. '   ' → logprob: -11.586724281311035
    7. '	' → logprob: -12.086724281311035
    8. 'def' → logprob: -12.211724281311035
    9. 'import' → logprob: -12.961724281311035
    10. ' ' → logprob: -12.961724281311035

Token 71: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.3143185079097748
    2. '.' → logprob: -1.3143185377120972
    3. ' .' → logprob: -7.564318656921387
    4. '._' → logprob: -7.939318656921387
    5. '.source' → logprob: -9.564318656921387
    6. '.readline' → logprob: -10.064318656921387
    7. '=input' → logprob: -10.939318656921387
    8. 'input' → logprob: -11.189318656921387
    9. '.stdin' → logprob: -11.689318656921387
    10. '.read' → logprob: -12.314318656921387

Token 72: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.0005019200034439564
    2. '_' → logprob: -7.750502109527588
    3. '_line' → logprob: -10.75050163269043
    4. '_lines' → logprob: -11.62550163269043
    5. ' =' → logprob: -11.75050163269043
    6. 'source' → logprob: -11.87550163269043
    7. '_stream' → logprob: -12.00050163269043
    8. '_data' → logprob: -12.37550163269043
    9. '_s' → logprob: -12.50050163269043
    10. '=' → logprob: -13.00050163269043

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1286597102880478
    2. '=' → logprob: -2.128659725189209
    3. '.readline' → logprob: -7.128659725189209
    4. ' ' → logprob: -7.253659725189209
    5. '.' → logprob: -8.87865924835205
    6. '.read' → logprob: -10.37865924835205
    7. ' .' → logprob: -10.75365924835205
    8. '  ' → logprob: -12.12865924835205
    9. '_read' → logprob: -13.00365924835205
    10. ' =
' → logprob: -13.12865924835205

Token 74: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804171830415726
    2. ' input' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.413042068481445
    4. '	input' → logprob: -16.663042068481445
    5. '<input' → logprob: -17.288042068481445
    6. '=input' → logprob: -17.913042068481445
    7. '(input' → logprob: -19.163042068481445
    8. '   ' → logprob: -19.163042068481445
    9. '_input' → logprob: -19.288042068481445
    10. '  ' → logprob: -19.413042068481445

Token 75: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -2.093505099765025e-05
    2. '_' → logprob: -11.000020980834961
    3. '_s' → logprob: -14.125020980834961
    4. '._' → logprob: -14.500020980834961
    5. '_SOURCE' → logprob: -14.500020980834961
    6. 'Source' → logprob: -14.750020980834961
    7. '_
' → logprob: -14.875020980834961
    8. '_sources' → logprob: -15.250020980834961
    9. '_Source' → logprob: -15.375020980834961
    10. '_reader' → logprob: -15.500020980834961

Token 76: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0920192152261734
    2. '<|end|>' → logprob: -3.0920193195343018
    3. '    
' → logprob: -4.217019081115723
    4. '   ' → logprob: -4.842019081115723
    5. ' def' → logprob: -4.967019081115723
    6. 'def' → logprob: -5.467019081115723
    7. ' 
' → logprob: -5.717019081115723
    8. '<|end|>' → logprob: -5.967019081115723
    9. '  
' → logprob: -6.842019081115723
    10. '   
' → logprob: -7.467019081115723

Token 77: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.062215834856033325
    2. '   ' → logprob: -3.437215805053711
    3. '    
' → logprob: -3.687215805053711
    4. '

' → logprob: -6.312215805053711
    5. '<|end|>' → logprob: -7.437215805053711
    6. 'def' → logprob: -8.562215805053711
    7. '        
' → logprob: -8.562215805053711
    8. '  
' → logprob: -9.312215805053711
    9. ' 
' → logprob: -9.687215805053711
    10. '       ' → logprob: -9.937215805053711

Token 78: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8107521533966064
    2. '
' → logprob: -1.0607521533966064
    3. 'def' → logprob: -2.1857521533966064
    4. '    
' → logprob: -2.6857521533966064
    5. '       ' → logprob: -4.310751914978027
    6. '

' → logprob: -4.560751914978027
    7. '        
' → logprob: -5.810751914978027
    8. '<|end|>' → logprob: -7.810751914978027
    9. '
    
' → logprob: -8.185751914978027
    10. ' def' → logprob: -8.685751914978027

Token 79: '.lines' (ID: 96601)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.537499725818634
    2. '._' → logprob: -1.0374996662139893
    3. '.buffer' → logprob: -3.2874996662139893
    4. '.readline' → logprob: -4.787499904632568
    5. '_buffer' → logprob: -5.287499904632568
    6. '.lines' → logprob: -5.537499904632568
    7. '_lines' → logprob: -7.037499904632568
    8. '.data' → logprob: -7.162499904632568
    9. 'data' → logprob: -7.162499904632568
    10. 'buffer' → logprob: -7.537499904632568

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0381443090736866
    2. '=' → logprob: -3.28814435005188
    3. '=[]' → logprob: -9.4131441116333
    4. ' ' → logprob: -11.9131441116333
    5. ':' → logprob: -12.6631441116333
    6. '.' → logprob: -12.9131441116333
    7. '_' → logprob: -13.0381441116333
    8. '.readline' → logprob: -13.6631441116333
    9. '<|end|>' → logprob: -13.9131441116333
    10. '.append' → logprob: -14.0381441116333

Token 81: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3859595060348511
    2. 'iter' → logprob: -1.510959506034851
    3. '[]' → logprob: -2.6359596252441406
    4. ' iter' → logprob: -3.8859596252441406
    5. ' self' → logprob: -5.635959625244141
    6. 'input' → logprob: -6.010959625244141
    7. ' []' → logprob: -7.010959625244141
    8. '[self' → logprob: -8.88595962524414
    9. '[]
' → logprob: -10.01095962524414
    10. 'deque' → logprob: -10.13595962524414

Token 82: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.011223121546208858
    2. '.' → logprob: -4.636223316192627
    3. 'input' → logprob: -6.886223316192627
    4. '.readline' → logprob: -8.386222839355469
    5. ' .' → logprob: -9.011222839355469
    6. '_input' → logprob: -10.886222839355469
    7. '.readlines' → logprob: -10.886222839355469
    8. '.source' → logprob: -11.511222839355469
    9. '_.' → logprob: -12.011222839355469
    10. '.read' → logprob: -12.261222839355469

Token 83: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.0006262990063987672
    2. '_lines' → logprob: -7.500626087188721
    3. '_' → logprob: -10.875626564025879
    4. 'source' → logprob: -11.125626564025879
    5. '_sources' → logprob: -11.375626564025879
    6. '_buffer' → logprob: -11.750626564025879
    7. 'Source' → logprob: -12.375626564025879
    8. '_line' → logprob: -13.250626564025879
    9. '_SOURCE' → logprob: -13.625626564025879
    10. '()' → logprob: -13.625626564025879

Token 84: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.39633944630622864
    2. '.readline' → logprob: -1.1463394165039062
    3. '<|end|>' → logprob: -4.896339416503906
    4. '.__' → logprob: -7.021339416503906
    5. '.read' → logprob: -8.271339416503906
    6. '.' → logprob: -8.271339416503906
    7. '<|end|>' → logprob: -8.646339416503906
    8. 'read' → logprob: -9.521339416503906
    9. '```' → logprob: -9.896339416503906
    10. '__' → logprob: -10.146339416503906

Token 85: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.23179054260253906
    2. '()' → logprob: -1.606790542602539
    3. '(' → logprob: -5.231790542602539
    4. 'line' → logprob: -7.106790542602539
    5. 'lines' → logprob: -9.731790542602539
    6. '_line' → logprob: -10.731790542602539
    7. '()
' → logprob: -10.856790542602539
    8. '(

' → logprob: -11.231790542602539
    9. '()\' → logprob: -11.356790542602539
    10. '()

' → logprob: -11.481790542602539

Token 86: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.20145563781261444
    2. 'split' → logprob: -1.7014555931091309
    3. 'decode' → logprob: -10.201456069946289
    4. 'rstrip' → logprob: -12.201456069946289
    5. ' split' → logprob: -16.32645606994629
    6. ' strip' → logprob: -16.82645606994629
    7. 'str' → logprob: -18.20145606994629
    8. '```' → logprob: -18.70145606994629
    9. '(split' → logprob: -18.82645606994629
    10. '(strip' → logprob: -19.70145606994629

Token 87: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.030708130449056625
    2. '()' → logprob: -3.530708074569702
    3. '(' → logprob: -7.030708312988281
    4. '('' → logprob: -10.030708312988281
    5. '('\' → logprob: -11.155708312988281
    6. '()
' → logprob: -12.655708312988281
    7. '()\' → logprob: -12.655708312988281
    8. '(\' → logprob: -13.405708312988281
    9. '(
' → logprob: -13.655708312988281
    10. '(

' → logprob: -13.780708312988281

Token 88: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -16.75
    3. 'spl' → logprob: -18.875
    4. '(split' → logprob: -20.125
    5. '_split' → logprob: -21.125
    6. '.split' → logprob: -22.25
    7. 'sp' → logprob: -23.0
    8. 'rstrip' → logprob: -23.25
    9. 'lines' → logprob: -23.75
    10. 'strip' → logprob: -23.75

Token 89: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.034303076565265656
    2. '()' → logprob: -4.409303188323975
    3. 'lines' → logprob: -4.534303188323975
    4. '('' → logprob: -4.909303188323975
    5. '("\' → logprob: -6.159303188323975
    6. '(' → logprob: -6.659303188323975
    7. ''\' → logprob: -11.409302711486816
    8. '()
' → logprob: -11.409302711486816
    9. '()\' → logprob: -11.909302711486816
    10. '("("' → logprob: -12.534302711486816

Token 90: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. '\n' → logprob: -15.75
    3. ' n' → logprob: -16.875
    4. 'newline' → logprob: -19.125
    5. '	n' → logprob: -19.625
    6. '
' → logprob: -20.625
    7. '_n' → logprob: -20.625
    8. ')n' → logprob: -20.875
    9. '```' → logprob: -21.375
    10. 'ndef' → logprob: -22.25

Token 91: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0014662963803857565
    2. ')' → logprob: -6.626466274261475
    3. '")' → logprob: -9.001466751098633
    4. ''' → logprob: -11.751466751098633
    5. '')
' → logprob: -11.876466751098633
    6. '')"' → logprob: -13.501466751098633
    7. '']' → logprob: -15.751466751098633
    8. '       ' → logprob: -15.751466751098633
    9. '   ' → logprob: -15.751466751098633
    10. ']' → logprob: -16.126466751098633

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03417324647307396
    2. '   ' → logprob: -3.4091732501983643
    3. '    
' → logprob: -8.909173011779785
    4. '        
' → logprob: -8.909173011779785
    5. '<|end|>' → logprob: -9.034173011779785
    6. '    ' → logprob: -10.159173011779785
    7. '        ' → logprob: -10.534173011779785
    8. '     ' → logprob: -11.159173011779785
    9. ' ' → logprob: -11.159173011779785
    10. '      ' → logprob: -11.409173011779785

Token 93: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3067900538444519
    2. '       ' → logprob: -1.4317901134490967
    3. '   ' → logprob: -3.8067901134490967
    4. ' self' → logprob: -5.806789875030518
    5. 'def' → logprob: -9.931790351867676
    6. '           ' → logprob: -11.306790351867676
    7. '	self' → logprob: -11.556790351867676
    8. '     ' → logprob: -12.931790351867676
    9. '
' → logprob: -12.931790351867676
    10. '    ' → logprob: -13.181790351867676

Token 94: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.9513753056526184
    2. '.current' → logprob: -1.0763752460479736
    3. '._' → logprob: -2.2013752460479736
    4. '.' → logprob: -2.9513752460479736
    5. 'index' → logprob: -3.0763752460479736
    6. '.idx' → logprob: -3.4513752460479736
    7. '_index' → logprob: -4.576375484466553
    8. 'current' → logprob: -4.826375484466553
    9. '.pos' → logprob: -5.201375484466553
    10. '.position' → logprob: -6.826375484466553

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014239545911550522
    2. '=' → logprob: -4.264239311218262
    3. ' ' → logprob: -9.764239311218262
    4. ' +=' → logprob: -11.014239311218262
    5. '<|end|>' → logprob: -14.139239311218262
    6. ' =
' → logprob: -14.514239311218262
    7. '0' → logprob: -14.639239311218262
    8. '+=' → logprob: -15.639239311218262
    9. ' =)' → logprob: -16.889240264892578
    10. '  ' → logprob: -16.889240264892578

Token 96: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '۰' → logprob: -18.256715774536133
    4. '<|end|>' → logprob: -18.506715774536133
    5. '1' → logprob: -19.006715774536133
    6. ' ' → logprob: -19.881715774536133
    7. '  ' → logprob: -19.881715774536133
    8. '٠' → logprob: -21.506715774536133
    9. ' 
' → logprob: -21.756715774536133
    10. '０' → logprob: -21.881715774536133

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.37507438659668
    4. '۰' → logprob: -17.75007438659668
    5. '  ' → logprob: -18.25007438659668
    6. '-' → logprob: -18.93757438659668
    7. '```' → logprob: -19.25007438659668
    8. '00' → logprob: -19.37507438659668
    9. '1' → logprob: -19.43757438659668
    10. '`' → logprob: -19.56257438659668

Token 98: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0475693978369236
    2. '<|end|>' → logprob: -3.547569513320923
    3. '    
' → logprob: -5.297569274902344
    4. '

' → logprob: -5.422569274902344
    5. '   ' → logprob: -5.672569274902344
    6. '  
' → logprob: -7.047569274902344
    7. ' 
' → logprob: -7.422569274902344
    8. '\n' → logprob: -7.422569274902344
    9. '<|end|>' → logprob: -7.422569274902344
    10. 'newline' → logprob: -7.547569274902344

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6992104649543762
    2. '
' → logprob: -1.4492104053497314
    3. 'def' → logprob: -2.0742104053497314
    4. '    
' → logprob: -2.6992104053497314
    5. ' def' → logprob: -3.1992104053497314
    6. ' ' → logprob: -4.6992106437683105
    7. '  
' → logprob: -5.0742106437683105
    8. '<|end|>' → logprob: -5.0742106437683105
    9. '	def' → logprob: -5.6992106437683105
    10. '        
' → logprob: -6.3242106437683105

Token 100: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06916815787553787
    2. ' def' → logprob: -2.8191680908203125
    3. '   ' → logprob: -4.9441680908203125
    4. '    
' → logprob: -10.694168090820312
    5. '	def' → logprob: -11.444168090820312
    6. ' ' → logprob: -11.944168090820312
    7. 'de' → logprob: -12.819168090820312
    8. '
' → logprob: -12.944168090820312
    9. ' 
' → logprob: -13.944168090820312
    10. 'd' → logprob: -14.444168090820312

Token 101: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.072170615196228
    2. ' has' → logprob: -1.447170615196228
    3. ' read' → logprob: -1.572170615196228
    4. ' next' → logprob: -2.3221707344055176
    5. ' readline' → logprob: -2.6971707344055176
    6. 'next' → logprob: -3.4471707344055176
    7. 'has' → logprob: -4.072170734405518
    8. ' get' → logprob: -8.44717025756836
    9. 'def' → logprob: -9.57217025756836
    10. ' def' → logprob: -9.94717025756836

Token 102: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.002960823243483901
    2. '_' → logprob: -6.502960681915283
    3. '(self' → logprob: -7.127960681915283
    4. '()' → logprob: -8.377961158752441
    5. '(' → logprob: -8.877961158752441
    6. '_next' → logprob: -9.377961158752441
    7. 'line' → logprob: -9.627961158752441
    8. '_token' → logprob: -9.877961158752441
    9. '_one' → logprob: -10.377961158752441
    10. 'Line' → logprob: -11.377961158752441

Token 103: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008665603818371892
    2. '()' → logprob: -7.625866413116455
    3. '():' → logprob: -8.500866889953613
    4. '(' → logprob: -8.875866889953613
    5. '_line' → logprob: -11.375866889953613
    6. 's' → logprob: -12.000866889953613
    7. 'self' → logprob: -12.250866889953613
    8. '()(' → logprob: -12.250866889953613
    9. '   ' → logprob: -13.125866889953613
    10. '(s' → logprob: -13.500866889953613

Token 104: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21710848808288574
    2. ')' → logprob: -1.7171084880828857
    3. '):
' → logprob: -4.217108726501465
    4. 'self' → logprob: -7.592108726501465
    5. 's' → logprob: -8.967108726501465
    6. ',' → logprob: -9.717108726501465
    7. ' ):' → logprob: -9.967108726501465
    8. '(self' → logprob: -10.467108726501465
    9. '()' → logprob: -10.967108726501465
    10. '   ' → logprob: -11.592108726501465

Token 105: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01728576235473156
    2. '(' → logprob: -4.2672858238220215
    3. '():' → logprob: -6.0172858238220215
    4. 'self' → logprob: -7.8922858238220215
    5. '()' → logprob: -9.017285346984863
    6. ':' → logprob: -9.142285346984863
    7. '   ' → logprob: -10.892285346984863
    8. ' ->' → logprob: -11.392285346984863
    9. '       ' → logprob: -11.392285346984863
    10. 's' → logprob: -12.017285346984863

Token 106: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931489109992981
    2. ' int' → logprob: -0.6931489109992981
    3. ' ' → logprob: -13.693148612976074
    4. '[int' → logprob: -15.693148612976074
    5. '  ' → logprob: -16.44314956665039
    6. '   ' → logprob: -16.56814956665039
    7. '	int' → logprob: -16.81814956665039
    8. '(int' → logprob: -17.19314956665039
    9. '    ' → logprob: -17.81814956665039
    10. '<int' → logprob: -18.31814956665039

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3885929584503174
    2. '():' → logprob: -1.1385929584503174
    3. '):' → logprob: -6.638592720031738
    4. '():
' → logprob: -8.388592720031738
    5. ':
' → logprob: -9.763592720031738
    6. '()' → logprob: -9.763592720031738
    7. ' :' → logprob: -10.388592720031738
    8. ' ():' → logprob: -11.638592720031738
    9. '   ' → logprob: -12.263592720031738
    10. ':return' → logprob: -12.388592720031738

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002145027741789818
    2. '    ' → logprob: -7.752144813537598
    3. ' return' → logprob: -8.252144813537598
    4. '   ' → logprob: -8.252144813537598
    5. ' ' → logprob: -8.377144813537598
    6. '<|end|>' → logprob: -9.127144813537598
    7. '        
' → logprob: -9.252144813537598
    8. 'return' → logprob: -9.252144813537598
    9. '      ' → logprob: -9.377144813537598
    10. '
' → logprob: -9.377144813537598

Token 109: ' val' (ID: 1459)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.36492666602134705
    2. ' value' → logprob: -2.11492657661438
    3. 'val' (adapté à ' val') → logprob: -2.48992657661438
    4. '       ' → logprob: -3.36492657661438
    5. ' val' → logprob: -3.86492657661438
    6. 'result' → logprob: -3.98992657661438
    7. 'res' → logprob: -4.864926815032959
    8. 'line' → logprob: -4.864926815032959
    9. ' line' → logprob: -5.739926815032959
    10. ' res' → logprob: -5.864926815032959

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030064716935157776
    2. '=' → logprob: -3.530064821243286
    3. ' ' → logprob: -8.155064582824707
    4. '   ' → logprob: -11.405064582824707
    5. '  ' → logprob: -12.405064582824707
    6. '       ' → logprob: -12.530064582824707
    7. ' =
' → logprob: -12.780064582824707
    8. 'ex' → logprob: -13.530064582824707
    9. 'ue' → logprob: -14.030064582824707
    10. '    ' → logprob: -14.530064582824707

Token 111: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804447129368782
    2. ' int' → logprob: -3.2880444526672363
    3. '   ' → logprob: -13.538044929504395
    4. '       ' → logprob: -14.163044929504395
    5. '	int' → logprob: -15.413044929504395
    6. '    ' → logprob: -15.788044929504395
    7. '<int' → logprob: -16.038043975830078
    8. ' ' → logprob: -16.038043975830078
    9. '
' → logprob: -16.163043975830078
    10. '(int' → logprob: -16.413043975830078

Token 112: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0031822288874536753
    2. '(' → logprob: -5.753182411193848
    3. '(
' → logprob: -12.503182411193848
    4. '(s' → logprob: -15.253182411193848
    5. '(this' → logprob: -15.753182411193848
    6. '(

' → logprob: -16.00318145751953
    7. 'self' → logprob: -16.12818145751953
    8. ' (' → logprob: -16.37818145751953
    9. '((' → logprob: -17.12818145751953
    10. '(sel' → logprob: -18.87818145751953

Token 113: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0022364973556250334
    2. '.' → logprob: -6.127236366271973
    3. ' .' → logprob: -10.502236366271973
    4. 'lines' → logprob: -11.002236366271973
    5. '	lines' → logprob: -12.752236366271973
    6. ' lines' → logprob: -13.252236366271973
    7. '(lines' → logprob: -14.002236366271973
    8. ').' → logprob: -14.377236366271973
    9. '.
' → logprob: -15.252236366271973
    10. '.readlines' → logprob: -15.627236366271973

Token 114: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0011209264630451798
    2. '[' → logprob: -6.8761210441589355
    3. 'self' → logprob: -9.376120567321777
    4. '[
' → logprob: -13.626120567321777
    5. '   ' → logprob: -14.126120567321777
    6. ' self' → logprob: -14.376120567321777
    7. ')' → logprob: -15.251120567321777
    8. ')[' → logprob: -15.251120567321777
    9. ' [' → logprob: -15.501120567321777
    10. '(self' → logprob: -16.626121520996094

Token 115: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0011486716102808714
    2. 'index' → logprob: -7.001148700714111
    3. '.' → logprob: -8.376148223876953
    4. ').' → logprob: -12.751148223876953
    5. ' .' → logprob: -14.251148223876953
    6. '[index' → logprob: -14.751148223876953
    7. ' index' → logprob: -14.876148223876953
    8. '.ind' → logprob: -15.001148223876953
    9. '.user' → logprob: -15.126148223876953
    10. ':index' → logprob: -15.501148223876953

Token 116: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04134868085384369
    2. '])' → logprob: -3.916348695755005
    3. ')
' → logprob: -4.041348457336426
    4. '.strip' → logprob: -6.166348457336426
    5. '])
' → logprob: -7.541348457336426
    6. ']' → logprob: -9.041348457336426
    7. ' )' → logprob: -9.291348457336426
    8. '[' → logprob: -9.791348457336426
    9. '.split' → logprob: -9.916348457336426
    10. ')

' → logprob: -11.166348457336426

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05946039780974388
    2. '
' → logprob: -3.309460401535034
    3. '<|end|>' → logprob: -3.934460401535034
    4. '<|end|>' → logprob: -7.059460163116455
    5. 'self' → logprob: -7.934460163116455
    6. '        
' → logprob: -9.059460639953613
    7. '   ' → logprob: -10.184460639953613
    8. '\n' → logprob: -10.309460639953613
    9. ')' → logprob: -10.434460639953613
    10. ',' → logprob: -10.809460639953613

Token 118: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06676965951919556
    2. 'self' (adapté à ' self') → logprob: -3.316769599914551
    3. ' self' → logprob: -3.566769599914551
    4. '
' → logprob: -9.81676959991455
    5. '	self' → logprob: -11.69176959991455
    6. '```' → logprob: -13.19176959991455
    7. '   ' → logprob: -13.44176959991455
    8. '\' → logprob: -13.56676959991455
    9. '        
' → logprob: -13.94176959991455
    10. '[self' → logprob: -13.94176959991455

Token 119: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.029808469116687775
    2. '.' → logprob: -3.529808521270752
    3. 'index' → logprob: -10.404808044433594
    4. ' .' → logprob: -10.904808044433594
    5. '.
' → logprob: -13.029808044433594
    6. '_index' → logprob: -14.279808044433594
    7. '.input' → logprob: -14.529808044433594
    8. '	index' → logprob: -14.529808044433594
    9. '.next' → logprob: -14.529808044433594
    10. '[index' → logprob: -14.654808044433594

Token 120: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07976578176021576
    2. '+=' → logprob: -2.579765796661377
    3. '+' → logprob: -7.079765796661377
    4. ' +' → logprob: -10.704765319824219
    5. ' ' → logprob: -12.329765319824219
    6. '<|end|>' → logprob: -12.829765319824219
    7. '    ' → logprob: -13.829765319824219
    8. ']+=' → logprob: -13.829765319824219
    9. '+="' → logprob: -14.579765319824219
    10. '+='' → logprob: -14.704765319824219

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '```' → logprob: -18.37747573852539
    4. ' ' → logprob: -20.25247573852539
    5. '   ' → logprob: -20.25247573852539
    6. '
' → logprob: -20.75247573852539
    7. '１' → logprob: -21.50247573852539
    8. '`' → logprob: -21.75247573852539
    9. '۱' → logprob: -22.62747573852539
    10. '‌' → logprob: -22.81497573852539

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -21.375
    4. '   ' → logprob: -22.5
    5. '
' → logprob: -23.0
    6. '１' → logprob: -23.25
    7. '۱' → logprob: -23.375
    8. '

' → logprob: -24.75
    9. '१' → logprob: -24.75
    10. '`' → logprob: -24.875

Token 123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01480747852474451
    2. 'return' → logprob: -4.63980770111084
    3. ' return' → logprob: -6.26480770111084
    4. '
' → logprob: -6.51480770111084
    5. '<|end|>' → logprob: -7.26480770111084
    6. '   ' → logprob: -7.88980770111084
    7. '        
' → logprob: -8.26480770111084
    8. '	return' → logprob: -9.51480770111084
    9. '\n' → logprob: -10.26480770111084
    10. '    
' → logprob: -10.26480770111084

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011930868495255709
    2. 'return' → logprob: -7.126193046569824
    3. ' return' → logprob: -8.126193046569824
    4. '   ' → logprob: -9.751193046569824
    5. '<|end|>' → logprob: -10.626193046569824
    6. '	return' → logprob: -12.376193046569824
    7. ',' → logprob: -13.626193046569824
    8. '        
' → logprob: -14.251193046569824
    9. '	' → logprob: -14.251193046569824
    10. '```' → logprob: -14.376193046569824

Token 125: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013806506991386414
    2. '       ' → logprob: -4.763806343078613
    3. ' return' → logprob: -5.263806343078613
    4. '	return' → logprob: -13.388806343078613
    5. '   ' → logprob: -14.138806343078613
    6. ':return' → logprob: -15.138806343078613
    7. '{return' → logprob: -16.51380729675293
    8. '
' → logprob: -16.51380729675293
    9. '```' → logprob: -17.26380729675293
    10. ')return' → logprob: -17.26380729675293

Token 126: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.47407710552215576
    2. ' val' → logprob: -0.9740771055221558
    3. '	val' → logprob: -16.474077224731445
    4. 'v' → logprob: -18.974077224731445
    5. '(val' → logprob: -19.849077224731445
    6. '_val' → logprob: -20.224077224731445
    7. 'Val' → logprob: -20.349077224731445
    8. '[val' → logprob: -20.349077224731445
    9. ',val' → logprob: -21.974077224731445
    10. ' ' → logprob: -22.474077224731445

Token 127: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0014448761940002441
    2. ' def' → logprob: -6.6264448165893555
    3. '   ' → logprob: -9.126444816589355
    4. '    
' → logprob: -12.251444816589355
    5. '	def' → logprob: -12.626444816589355
    6. ' ' → logprob: -13.876444816589355
    7. '```' → logprob: -15.001444816589355
    8. '
' → logprob: -15.626444816589355
    9. '  ' → logprob: -15.751444816589355
    10. '        
' → logprob: -15.876444816589355

Token 130: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.07042118161916733
    2. ' read' → logprob: -2.6954212188720703
    3. 'def' → logprob: -7.94542121887207
    4. ' def' → logprob: -9.32042121887207
    5. ' ' → logprob: -11.32042121887207
    6. '	read' → logprob: -12.07042121887207
    7. '_read' → logprob: -12.32042121887207
    8. '.read' → logprob: -12.44542121887207
    9. ' reads' → logprob: -13.07042121887207
    10. 'reads' → logprob: -13.32042121887207

Token 131: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0344336032867432
    2. '_line' → logprob: -1.1594336032867432
    3. '_list' → logprob: -1.5344336032867432
    4. '_tuple' → logprob: -2.659433603286743
    5. '_int' → logprob: -3.159433603286743
    6. ' _' → logprob: -7.159433364868164
    7. '_t' → logprob: -8.284433364868164
    8. '_token' → logprob: -8.409433364868164
    9. '_array' → logprob: -8.534433364868164
    10. '_lst' → logprob: -8.659433364868164

Token 132: 's' (ID: 82)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.47606566548347473
    2. 's' → logprob: -0.9760656356811523
    3. '_array' → logprob: -6.476065635681152
    4. '_' → logprob: -8.726065635681152
    5. 'list' → logprob: -8.851065635681152
    6. 'List' → logprob: -10.351065635681152
    7. '_line' → logprob: -10.726065635681152
    8. '_lst' → logprob: -10.726065635681152
    9. '()' → logprob: -10.851065635681152
    10. '_arr' → logprob: -11.226065635681152

Token 133: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017666933126747608
    2. '(' → logprob: -6.376766681671143
    3. ' (' → logprob: -10.0017671585083
    4. '()' → logprob: -12.0017671585083
    5. '(
' → logprob: -12.3767671585083
    6. 'self' → logprob: -12.6267671585083
    7. '(s' → logprob: -12.8767671585083
    8. 's' → logprob: -14.1267671585083
    9. '   ' → logprob: -14.7517671585083
    10. '(se' → logprob: -15.0017671585083

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002506111632101238
    2. 'self' → logprob: -8.750250816345215
    3. '):' → logprob: -10.375250816345215
    4. ' )' → logprob: -10.375250816345215
    5. '):
' → logprob: -11.000250816345215
    6. '(self' → logprob: -11.875250816345215
    7. ')->' → logprob: -13.500250816345215
    8. '   ' → logprob: -13.875250816345215
    9. '       ' → logprob: -14.250250816345215
    10. '()' → logprob: -14.375250816345215

Token 135: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004673623014241457
    2. ' ->' → logprob: -5.629673480987549
    3. ')' → logprob: -7.629673480987549
    4. '->' → logprob: -8.379673957824707
    5. 'self' → logprob: -8.754673957824707
    6. ' self' → logprob: -9.129673957824707
    7. ' (' → logprob: -10.004673957824707
    8. '       ' → logprob: -11.254673957824707
    9. '   ' → logprob: -12.004673957824707
    10. '(' → logprob: -12.129673957824707

Token 136: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.10026879608631134
    2. ' List' → logprob: -2.350268840789795
    3. 'list' → logprob: -10.475268363952637
    4. '[List' → logprob: -10.850268363952637
    5. ' list' → logprob: -11.225268363952637
    6. ' ' → logprob: -13.975268363952637
    7. '_list' → logprob: -15.975268363952637
    8. '	List' → logprob: -16.225269317626953
    9. '  ' → logprob: -17.600269317626953
    10. '<List' → logprob: -17.850269317626953

Token 137: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.7252845029579476e-05
    2. '<int' → logprob: -11.375027656555176
    3. '[' → logprob: -11.875027656555176
    4. 'int' → logprob: -11.875027656555176
    5. '(int' → logprob: -14.375027656555176
    6. '[Int' → logprob: -14.375027656555176
    7. '<|end|>' → logprob: -15.000027656555176
    8. ']int' → logprob: -15.750027656555176
    9. '[
' → logprob: -15.875027656555176
    10. '[in' → logprob: -17.37502670288086

Token 138: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.041043587028980255
    2. '):' → logprob: -3.666043519973755
    3. '():' → logprob: -4.291043758392334
    4. ']:
' → logprob: -7.416043758392334
    5. ']' → logprob: -9.541043281555176
    6. '"]:' → logprob: -9.666043281555176
    7. '():
' → logprob: -9.791043281555176
    8. '):
' → logprob: -10.166043281555176
    9. '']:' → logprob: -10.291043281555176
    10. ']:
' → logprob: -10.916043281555176

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010549608850851655
    2. '[]' → logprob: -7.626054763793945
    3. 'val' → logprob: -9.501054763793945
    4. 'tokens' → logprob: -9.501054763793945
    5. ' ' → logprob: -9.626054763793945
    6. '        
' → logprob: -10.001054763793945
    7. '```' → logprob: -10.251054763793945
    8. 'vals' → logprob: -10.376054763793945
    9. '()' → logprob: -10.626054763793945
    10. '   ' → logprob: -10.876054763793945

Token 140: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' (adapté à ' vals') → logprob: -0.4416939616203308
    2. 'ints' → logprob: -1.3166940212249756
    3. 'val' → logprob: -2.6916940212249756
    4. ' vals' → logprob: -4.4416937828063965
    5. 'int' → logprob: -6.0666937828063965
    6. 'return' → logprob: -6.4416937828063965
    7. '       ' → logprob: -6.8166937828063965
    8. 'lst' → logprob: -7.0666937828063965
    9. 'values' → logprob: -7.6916937828063965
    10. 'nums' → logprob: -7.6916937828063965

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132622241973877
    2. ' =' → logprob: -1.3132622241973877
    3. ' ' → logprob: -14.938261985778809
    4. '   ' → logprob: -16.563262939453125
    5. ')' → logprob: -17.063262939453125
    6. '＝' → logprob: -17.813262939453125
    7. '	' → logprob: -18.063262939453125
    8. '[' → logprob: -18.438262939453125
    9. ' =
' → logprob: -18.438262939453125
    10. '()' → logprob: -18.563262939453125

Token 142: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.048608023673295975
    2. ' list' → logprob: -3.0486080646514893
    3. '[list' → logprob: -10.79860782623291
    4. '[' → logprob: -15.92360782623291
    5. ' [' → logprob: -15.92360782623291
    6. '	list' → logprob: -17.923608779907227
    7. '   ' → logprob: -19.048608779907227
    8. 'List' → logprob: -19.173608779907227
    9. '(list' → logprob: -19.423608779907227
    10. '=list' → logprob: -20.173608779907227

Token 143: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.2762428822461516e-05
    2. '(' → logprob: -10.000052452087402
    3. 'map' → logprob: -11.875052452087402
    4. '(
' → logprob: -15.625052452087402
    5. ' map' → logprob: -16.62505340576172
    6. '	map' → logprob: -17.12505340576172
    7. '(int' → logprob: -17.75005340576172
    8. '.map' → logprob: -18.37505340576172
    9. '()' → logprob: -18.75005340576172
    10. '_map' → logprob: -19.37505340576172

Token 144: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0060804798267781734
    2. '(' → logprob: -5.131080627441406
    3. 'int' → logprob: -9.381080627441406
    4. '(
' → logprob: -9.756080627441406
    5. '<int' → logprob: -12.131080627441406
    6. '[int' → logprob: -13.631080627441406
    7. ')' → logprob: -14.506080627441406
    8. '(

' → logprob: -14.631080627441406
    9. ',int' → logprob: -14.756080627441406
    10. ' int' → logprob: -14.756080627441406

Token 145: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.590056836605072
    2. ',' → logprob: -0.840056836605072
    3. '(' → logprob: -4.590056896209717
    4. ',self' → logprob: -5.965056896209717
    5. 'self' → logprob: -7.340056896209717
    6. ' (' → logprob: -7.840056896209717
    7. ' ,' → logprob: -8.840056419372559
    8. ' self' → logprob: -9.715056419372559
    9. '(
' → logprob: -10.590056419372559
    10. ',(' → logprob: -11.215056419372559

Token 146: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3133227825164795
    2. ' self' → logprob: -1.3133227825164795
    3. '(self' → logprob: -9.813323020935059
    4. ' ' → logprob: -13.438323020935059
    5. '   ' → logprob: -13.438323020935059
    6. '	self' → logprob: -13.688323020935059
    7. '       ' → logprob: -14.063323020935059
    8. '[self' → logprob: -15.063323020935059
    9. '    ' → logprob: -15.188323020935059
    10. ',self' → logprob: -15.438323020935059

Token 147: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0001410850090906024
    2. '.' → logprob: -9.250141143798828
    3. '(lines' → logprob: -11.250141143798828
    4. 'lines' → logprob: -11.500141143798828
    5. ' .' → logprob: -11.625141143798828
    6. '	lines' → logprob: -12.000141143798828
    7. '.
' → logprob: -13.250141143798828
    8. ' lines' → logprob: -13.750141143798828
    9. ').' → logprob: -14.125141143798828
    10. '.readlines' → logprob: -14.375141143798828

Token 148: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -3.833878508885391e-05
    2. '[' → logprob: -10.375038146972656
    3. 'self' → logprob: -12.375038146972656
    4. ' [' → logprob: -13.750038146972656
    5. '[
' → logprob: -13.875038146972656
    6. '   ' → logprob: -14.625038146972656
    7. ')[' → logprob: -15.875038146972656
    8. '       ' → logprob: -16.500038146972656
    9. '(self' → logprob: -16.750038146972656
    10. ' self' → logprob: -16.750038146972656

Token 149: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.001483674393966794
    2. 'index' → logprob: -6.62648344039917
    3. '.' → logprob: -9.126483917236328
    4. '[index' → logprob: -10.501483917236328
    5. ').' → logprob: -12.751483917236328
    6. ' .' → logprob: -12.751483917236328
    7. '   ' → logprob: -12.876483917236328
    8. '].' → logprob: -13.126483917236328
    9. ' index' → logprob: -13.126483917236328
    10. 'self' → logprob: -13.376483917236328

Token 150: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00017672323156148195
    2. '[self' → logprob: -8.875176429748535
    3. ' ].' → logprob: -11.125176429748535
    4. ']' → logprob: -11.750176429748535
    5. 'self' → logprob: -12.375176429748535
    6. ''].' → logprob: -12.750176429748535
    7. '.split' → logprob: -12.875176429748535
    8. '][' → logprob: -13.250176429748535
    9. ']
' → logprob: -13.875176429748535
    10. ']))' → logprob: -14.250176429748535

Token 151: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3132949769496918
    2. 'strip' → logprob: -1.3132950067520142
    3. ' strip' → logprob: -10.813295364379883
    4. ' split' → logprob: -11.313295364379883
    5. 'rstrip' → logprob: -14.438295364379883
    6. '.strip' → logprob: -15.063295364379883
    7. '.split' → logprob: -16.813295364379883
    8. 'spl' → logprob: -17.813295364379883
    9. '(split' → logprob: -18.063295364379883
    10. '(strip' → logprob: -18.563295364379883

Token 152: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.007072316948324442
    2. '()' → logprob: -5.132072448730469
    3. '()))
' → logprob: -6.882072448730469
    4. '('' → logprob: -10.007072448730469
    5. '(' → logprob: -10.257072448730469
    6. '())' → logprob: -11.257072448730469
    7. '))' → logprob: -11.882072448730469
    8. '()))

' → logprob: -12.007072448730469
    9. '()
' → logprob: -12.632072448730469
    10. '()));' → logprob: -12.757072448730469

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002239708323031664
    2. '
' → logprob: -6.37723970413208
    3. 'self' → logprob: -7.62723970413208
    4. '<|end|>' → logprob: -10.502240180969238
    5. ' self' → logprob: -12.252240180969238
    6. '<|end|>' → logprob: -12.752240180969238
    7. '   ' → logprob: -13.002240180969238
    8. '
' → logprob: -13.502240180969238
    9. '\' → logprob: -13.502240180969238
    10. ',' → logprob: -13.502240180969238

Token 154: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03166709095239639
    2. '       ' → logprob: -3.7816669940948486
    3. ' self' → logprob: -4.781667232513428
    4. '   ' → logprob: -13.03166675567627
    5. '	self' → logprob: -13.78166675567627
    6. ' ' → logprob: -14.40666675567627
    7. '[self' → logprob: -16.031667709350586
    8. '        
' → logprob: -16.406667709350586
    9. '(self' → logprob: -16.656667709350586
    10. '  ' → logprob: -17.281667709350586

Token 155: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00043376852408982813
    2. 'index' → logprob: -7.750433921813965
    3. '.' → logprob: -13.000433921813965
    4. ' .' → logprob: -14.750433921813965
    5. ' index' → logprob: -15.375433921813965
    6. '	index' → logprob: -16.87543296813965
    7. '=index' → logprob: -17.00043296813965
    8. '[index' → logprob: -17.25043296813965
    9. '_index' → logprob: -17.50043296813965
    10. '.indices' → logprob: -17.62543296813965

Token 156: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16030465066432953
    2. '+=' → logprob: -1.9103046655654907
    3. '    ' → logprob: -9.66030502319336
    4. '   ' → logprob: -12.28530502319336
    5. '+' → logprob: -12.53530502319336
    6. ']+=' → logprob: -12.53530502319336
    7. '        ' → logprob: -13.41030502319336
    8. ' ' → logprob: -13.53530502319336
    9. '       ' → logprob: -14.41030502319336
    10. '      ' → logprob: -15.16030502319336

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '```' → logprob: -18.625553131103516
    4. '
' → logprob: -19.125553131103516
    5. '   ' → logprob: -19.500553131103516
    6. '１' → logprob: -20.375553131103516
    7. ' ' → logprob: -20.813053131103516
    8. '۱' → logprob: -21.000553131103516
    9. '<|end|>' → logprob: -21.438053131103516
    10. '+' → logprob: -22.125553131103516

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -21.500001907348633
    4. '１' → logprob: -21.750001907348633
    5. '
' → logprob: -22.250001907348633
    6. '۱' → logprob: -22.375001907348633
    7. '   ' → logprob: -22.750001907348633
    8. '১' → logprob: -23.625001907348633
    9. '+' → logprob: -23.812501907348633
    10. '१' → logprob: -23.812501907348633

Token 159: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022670666221529245
    2. 'return' → logprob: -6.502266883850098
    3. ' return' → logprob: -7.627266883850098
    4. '   ' → logprob: -9.002266883850098
    5. '
' → logprob: -9.127266883850098
    6. '<|end|>' → logprob: -11.127266883850098
    7. '	return' → logprob: -11.127266883850098
    8. '	' → logprob: -12.752266883850098
    9. ':return' → logprob: -12.877266883850098
    10. '        
' → logprob: -13.002266883850098

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019507692195475101
    2. 'return' → logprob: -8.625195503234863
    3. ' return' → logprob: -11.625195503234863
    4. '   ' → logprob: -12.000195503234863
    5. '	return' → logprob: -15.750195503234863
    6. '<|end|>' → logprob: -16.875194549560547
    7. '	' → logprob: -17.125194549560547
    8. ' ' → logprob: -17.875194549560547
    9. ',' → logprob: -17.875194549560547
    10. '```' → logprob: -18.125194549560547

Token 161: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00038479414070025086
    2. '       ' → logprob: -8.250384330749512
    3. ' return' → logprob: -9.000384330749512
    4. '	return' → logprob: -16.250385284423828
    5. '   ' → logprob: -18.000385284423828
    6. 'eturn' → logprob: -19.750385284423828
    7. ':return' → logprob: -19.875385284423828
    8. '{return' → logprob: -20.000385284423828
    9. ')return' → logprob: -20.500385284423828
    10. '```' → logprob: -20.625385284423828

Token 162: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0011735594598576427
    2. ' vals' → logprob: -6.751173496246338
    3. 'val' → logprob: -12.751173973083496
    4. '(vals' → logprob: -14.751173973083496
    5. 'vall' → logprob: -17.87617301940918
    6. 'vars' → logprob: -18.25117301940918
    7. '_vals' → logprob: -18.50117301940918
    8. 'v' → logprob: -18.87617301940918
    9. 'Vals' → logprob: -18.87617301940918
    10. ' ' → logprob: -19.62617301940918

Token 163: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7080711722373962
    2. '<|end|>' → logprob: -0.8330711722373962
    3. '   ' → logprob: -3.083071231842041
    4. '    
' → logprob: -4.208071231842041
    5. 'def' → logprob: -5.083071231842041
    6. '<|end|>' → logprob: -5.583071231842041
    7. '

' → logprob: -7.083071231842041
    8. '```' → logprob: -7.333071231842041
    9. '  
' → logprob: -8.458070755004883
    10. ' 
' → logprob: -9.958070755004883

Token 164: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4428238272666931
    2. '
' → logprob: -1.067823886871338
    3. '   ' → logprob: -4.817823886871338
    4. '    
' → logprob: -6.067823886871338
    5. '

' → logprob: -6.192823886871338
    6. 'class' → logprob: -7.442823886871338
    7. '<|end|>' → logprob: -8.06782341003418
    8. '```' → logprob: -8.19282341003418
    9. '  
' → logprob: -8.44282341003418
    10. ' def' → logprob: -9.44282341003418

Token 165: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.625001907348633
    3. ' def' → logprob: -13.875001907348633
    4. 'class' → logprob: -17.625001907348633
    5. '
' → logprob: -18.000001907348633
    6. '    
' → logprob: -18.750001907348633
    7. '	def' → logprob: -18.875001907348633
    8. ' ' → logprob: -20.625001907348633
    9. 'd' → logprob: -20.625001907348633
    10. 'de' → logprob: -20.875001907348633

Token 166: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.014550217427313328
    2. ' read' → logprob: -4.38955020904541
    3. 'has' → logprob: -6.88955020904541
    4. 'peek' → logprob: -7.76455020904541
    5. ' has' → logprob: -8.01455020904541
    6. 'def' → logprob: -9.01455020904541
    7. 'load' → logprob: -10.38955020904541
    8. ' peek' → logprob: -10.76455020904541
    9. ' def' → logprob: -11.01455020904541
    10. 'parse' → logprob: -11.26455020904541

Token 167: '_dataset' (ID: 40568)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.27662256360054016
    2. '_dataset' → logprob: -1.5266225337982178
    3. '_Data' → logprob: -3.7766225337982178
    4. '_tuple' → logprob: -7.901622772216797
    5. '_dat' → logprob: -8.026622772216797
    6. '_' → logprob: -8.026622772216797
    7. '_datas' → logprob: -8.901622772216797
    8. '_D' → logprob: -9.026622772216797
    9. '_d' → logprob: -9.526622772216797
    10. 'Data' → logprob: -10.151622772216797

Token 168: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.877503907773644e-05
    2. '(' → logprob: -9.375099182128906
    3. ' (' → logprob: -11.500099182128906
    4. 'self' → logprob: -12.750099182128906
    5. '   ' → logprob: -14.875099182128906
    6. '(
' → logprob: -15.125099182128906
    7. ' self' → logprob: -15.875099182128906
    8. ' ' → logprob: -17.000099182128906
    9. '       ' → logprob: -17.500099182128906
    10. '	self' → logprob: -17.500099182128906

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08691804111003876
    2. '(self' → logprob: -2.8369181156158447
    3. 'self' → logprob: -3.7119181156158447
    4. ' self' → logprob: -9.836917877197266
    5. '
' → logprob: -9.961917877197266
    6. '   ' → logprob: -10.211917877197266
    7. 's' → logprob: -10.836917877197266
    8. ' )' → logprob: -11.211917877197266
    9. ' ' → logprob: -11.461917877197266
    10. '       ' → logprob: -11.961917877197266

Token 170: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002688371343538165
    2. ' ->' → logprob: -6.252688407897949
    3. '->' → logprob: -7.377688407897949
    4. ')' → logprob: -10.00268840789795
    5. '(' → logprob: -10.37768840789795
    6. '(s' → logprob: -11.25268840789795
    7. 'self' → logprob: -11.25268840789795
    8. ' (' → logprob: -11.37768840789795
    9. '       ' → logprob: -12.37768840789795
    10. ':' → logprob: -12.62768840789795

Token 171: ' Data' (ID: 4833)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.0232953242957592
    2. ' Data' → logprob: -3.7732954025268555
    3. 'Tuple' → logprob: -10.023295402526855
    4. 'List' → logprob: -12.773295402526855
    5. '	Data' → logprob: -14.273295402526855
    6. ' Tuple' → logprob: -14.523295402526855
    7. 'Dataset' → logprob: -14.648295402526855
    8. '   ' → logprob: -14.773295402526855
    9. '_Data' → logprob: -15.523295402526855
    10. 'Optional' → logprob: -16.02329444885254

Token 172: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -4.60414821645827e-06
    2. 'et' → logprob: -13.125004768371582
    3. 'set' → logprob: -13.500004768371582
    4. '_set' → logprob: -15.000004768371582
    5. 'ataset' → logprob: -15.250004768371582
    6. ' Set' → logprob: -15.500004768371582
    7. 'S' → logprob: -15.500004768371582
    8. '	Set' → logprob: -16.000003814697266
    9. '_SET' → logprob: -17.750003814697266
    10. '_Set' → logprob: -17.875003814697266

Token 173: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.29598766565322876
    2. '(' → logprob: -1.670987606048584
    3. ':' → logprob: -2.795987606048584
    4. '(
' → logprob: -5.920987606048584
    5. '       ' → logprob: -6.170987606048584
    6. '   ' → logprob: -6.795987606048584
    7. ':
' → logprob: -7.295987606048584
    8. '():' → logprob: -8.295988082885742
    9. 'self' → logprob: -9.420988082885742
    10. ')' → logprob: -10.420988082885742

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000318065780447796
    2. '        
' → logprob: -9.00031852722168
    3. 'n' → logprob: -9.12531852722168
    4. '
' → logprob: -10.37531852722168
    5. '```' → logprob: -10.87531852722168
    6. '  
' → logprob: -11.87531852722168
    7. '(n' → logprob: -12.12531852722168
    8. ' n' → logprob: -12.75031852722168
    9. '    
' → logprob: -12.87531852722168
    10. '      ' → logprob: -13.00031852722168

Token 175: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0008429800509475172
    2. ' n' → logprob: -7.250843048095703
    3. '       ' → logprob: -9.875843048095703
    4. 'nk' → logprob: -9.875843048095703
    5. '   ' → logprob: -11.500843048095703
    6. '	n' → logprob: -12.000843048095703
    7. '```' → logprob: -13.000843048095703
    8. '(n' → logprob: -13.500843048095703
    9. '[n' → logprob: -13.625843048095703
    10. 'nm' → logprob: -13.750843048095703

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006920627201907337
    2. ',k' → logprob: -7.375691890716553
    3. ' ,' → logprob: -10.000692367553711
    4. '=' → logprob: -11.625692367553711
    5. 'k' → logprob: -12.125692367553711
    6. ' =' → logprob: -12.250692367553711
    7. ',n' → logprob: -15.375692367553711
    8. '_,' → logprob: -16.12569236755371
    9. ',self' → logprob: -16.25069236755371
    10. ',
' → logprob: -16.25069236755371

Token 177: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5974781513214111
    2. 'k' → logprob: -0.8474781513214111
    3. '<|end|>' → logprob: -4.472477912902832
    4. ' ' → logprob: -4.847477912902832
    5. ' =' → logprob: -6.722477912902832
    6. '=' → logprob: -7.972477912902832
    7. 's' → logprob: -9.097477912902832
    8. 'self' → logprob: -9.347477912902832
    9. ' 
' → logprob: -9.472477912902832
    10. ' self' → logprob: -10.222477912902832

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0700293555855751
    2. '=' → logprob: -2.6950292587280273
    3. ',' → logprob: -9.320029258728027
    4. ' ' → logprob: -13.070029258728027
    5. '    ' → logprob: -15.195029258728027
    6. ')' → logprob: -15.195029258728027
    7. ' =
' → logprob: -15.820029258728027
    8. ' ,' → logprob: -15.945029258728027
    9. '<|end|>' → logprob: -15.945029258728027
    10. '        ' → logprob: -16.070030212402344

Token 179: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0890895202755928
    2. 'self' → logprob: -2.4640896320343018
    3. ' tuple' → logprob: -9.964089393615723
    4. ' map' → logprob: -10.089089393615723
    5. ' ' → logprob: -10.214089393615723
    6. 'map' → logprob: -11.839089393615723
    7. '    ' → logprob: -12.089089393615723
    8. 'tuple' → logprob: -12.464089393615723
    9. '        ' → logprob: -12.964089393615723
    10. '(self' → logprob: -13.214089393615723

Token 180: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.0018476052209734917
    2. '.' → logprob: -6.376847743988037
    3. '.lines' → logprob: -9.376847267150879
    4. '.readline' → logprob: -10.626847267150879
    5. '.readlines' → logprob: -10.626847267150879
    6. 'read' → logprob: -11.376847267150879
    7. ' .' → logprob: -15.126847267150879
    8. ' read' → logprob: -16.126848220825195
    9. '().' → logprob: -16.126848220825195
    10. ').' → logprob: -16.876848220825195

Token 181: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0003741887048818171
    2. '_' → logprob: -8.000373840332031
    3. '_in' → logprob: -10.500373840332031
    4. 'int' → logprob: -12.375373840332031
    5. '_uint' → logprob: -13.625373840332031
    6. '_tuple' → logprob: -14.125373840332031
    7. '_i' → logprob: -14.250373840332031
    8. 'Ints' → logprob: -14.250373840332031
    9. '_Int' → logprob: -14.250373840332031
    10. '_INT' → logprob: -14.625373840332031

Token 182: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11638126522302628
    2. '(),' → logprob: -2.4913811683654785
    3. '()' → logprob: -3.6163811683654785
    4. ',' → logprob: -9.116381645202637
    5. '()
' → logprob: -9.741381645202637
    6. ' ()' → logprob: -12.366381645202637
    7. '(' → logprob: -12.491381645202637
    8. ' s' → logprob: -12.616381645202637
    9. ' (),' → logprob: -13.116381645202637
    10. '().' → logprob: -13.741381645202637

Token 183: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010747690976131707
    2. ')' → logprob: -10.125107765197754
    3. '()
' → logprob: -10.250107765197754
    4. '<|end|>' → logprob: -11.125107765197754
    5. ' ()' → logprob: -12.500107765197754
    6. 'return' → logprob: -13.125107765197754
    7. ',' → logprob: -13.125107765197754
    8. '       ' → logprob: -13.125107765197754
    9. '(' → logprob: -13.125107765197754
    10. '())' → logprob: -13.375107765197754

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0261580441147089
    2. ' houses' → logprob: -4.401157855987549
    3. 'houses' → logprob: -4.776157855987549
    4. '<|end|>' → logprob: -6.151157855987549
    5. 'h' → logprob: -7.026157855987549
    6. ',' → logprob: -7.651157855987549
    7. '        
' → logprob: -7.776157855987549
    8. '
' → logprob: -8.151158332824707
    9. ',h' → logprob: -9.026158332824707
    10. '	h' → logprob: -9.151158332824707

Token 185: ' houses' (ID: 20327)
  Prédit: 'houses'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'houses' (adapté à ' houses') → logprob: -0.010021083056926727
    2. ' houses' → logprob: -4.635021209716797
    3. '       ' → logprob: -8.510021209716797
    4. 'h' → logprob: -9.760021209716797
    5. 'house' → logprob: -12.510021209716797
    6. 'homes' → logprob: -14.385021209716797
    7. 'hou' → logprob: -15.010021209716797
    8. 'hus' → logprob: -15.010021209716797
    9. '   ' → logprob: -15.260021209716797
    10. '	h' → logprob: -16.135021209716797

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193095207214355
    2. ' =' → logprob: -1.5019309520721436
    3. ')' → logprob: -13.876931190490723
    4. ' ' → logprob: -15.376931190490723
    5. '=self' → logprob: -16.001930236816406
    6. 's' → logprob: -16.126930236816406
    7. ')=' → logprob: -16.751930236816406
    8. ':' → logprob: -17.001930236816406
    9. '<|end|>' → logprob: -17.001930236816406
    10. '.' → logprob: -17.126930236816406

Token 187: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16034364700317383
    2. ' self' → logprob: -1.9103436470031738
    3. '[self' → logprob: -9.910343170166016
    4. '(self' → logprob: -9.910343170166016
    5. '       ' → logprob: -11.285343170166016
    6. '	self' → logprob: -12.660343170166016
    7. '        ' → logprob: -13.660343170166016
    8. '<|end|>' → logprob: -14.035343170166016
    9. '=self' → logprob: -14.660343170166016
    10. '$self' → logprob: -15.035343170166016

Token 188: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -1.7835754988482222e-05
    2. '.' → logprob: -11.750018119812012
    3. 'read' → logprob: -11.875018119812012
    4. '.readline' → logprob: -13.125018119812012
    5. ' .' → logprob: -14.375018119812012
    6. '.readlines' → logprob: -15.000018119812012
    7. ' read' → logprob: -18.875017166137695
    8. '.get' → logprob: -19.375017166137695
    9. '.h' → logprob: -19.500017166137695
    10. '.s' → logprob: -19.625017166137695

Token 189: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -4.320199877838604e-07
    2. 'ints' → logprob: -16.0
    3. 'int' → logprob: -16.5
    4. '_in' → logprob: -16.75
    5. 'Ints' → logprob: -17.875
    6. '_' → logprob: -18.5
    7. 's' → logprob: -19.375
    8. '_uint' → logprob: -19.625
    9. '_Int' → logprob: -19.625
    10. '_INT' → logprob: -19.875

Token 190: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006757052149623632
    2. 'ts' → logprob: -5.0067572593688965
    3. 't' → logprob: -10.256756782531738
    4. 'sts' → logprob: -12.506756782531738
    5. ' s' → logprob: -13.131756782531738
    6. 'nts' → logprob: -15.881756782531738
    7. 'с' → logprob: -16.006757736206055
    8. '()' → logprob: -16.381757736206055
    9. '   ' → logprob: -16.506757736206055
    10. 'st' → logprob: -16.506757736206055

Token 191: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.538490950129926e-05
    2. '()
' → logprob: -9.875055313110352
    3. '())' → logprob: -12.875055313110352
    4. ' ()' → logprob: -14.500055313110352
    5. '()

' → logprob: -15.250055313110352
    6. ')' → logprob: -15.500055313110352
    7. '()`' → logprob: -15.625055313110352
    8. '()]' → logprob: -16.00005531311035
    9. '()
' → logprob: -17.87505531311035
    10. '(' → logprob: -17.87505531311035

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006181775592267513
    2. '
' → logprob: -5.256181716918945
    3. 'return' → logprob: -8.006181716918945
    4. '   ' → logprob: -8.256181716918945
    5. '<|end|>' → logprob: -8.881181716918945
    6. ' return' → logprob: -9.006181716918945
    7. '        
' → logprob: -10.131181716918945
    8. '	' → logprob: -11.381181716918945
    9. '  
' → logprob: -11.631181716918945
    10. '	return' → logprob: -12.756181716918945

Token 193: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10636717081069946
    2. '       ' → logprob: -2.3563671112060547
    3. ' return' → logprob: -5.106367111206055
    4. '   ' → logprob: -10.106367111206055
    5. '
' → logprob: -10.231367111206055
    6. '	return' → logprob: -12.106367111206055
    7. '        
' → logprob: -14.731367111206055
    8. '	' → logprob: -15.481367111206055
    9. ' ' → logprob: -16.106367111206055
    10. '      ' → logprob: -16.106367111206055

Token 194: ' Data' (ID: 4833)
  Prédit: ' Data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Data' → logprob: -0.004078639671206474
    2. 'Data' → logprob: -5.5040788650512695
    3. '	Data' → logprob: -15.50407886505127
    4. '_Data' → logprob: -19.129077911376953
    5. '(Data' → logprob: -20.754077911376953
    6. '   ' → logprob: -22.004077911376953
    7. '<Data' → logprob: -22.004077911376953
    8. '\Data' → logprob: -23.004077911376953
    9. ' ' → logprob: -23.129077911376953
    10. ' data' → logprob: -23.254077911376953

Token 195: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -2.522638169466518e-05
    2. 'et' → logprob: -11.000024795532227
    3. 'ata' → logprob: -12.375024795532227
    4. 'Data' → logprob: -13.500024795532227
    5. 'ataset' → logprob: -13.625024795532227
    6. 'set' → logprob: -14.000024795532227
    7. 't' → logprob: -14.625024795532227
    8. '_set' → logprob: -15.750024795532227
    9. ' Set' → logprob: -16.250024795532227
    10. 'Dataset' → logprob: -16.750024795532227

Token 196: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0016475648153573275
    2. '(' → logprob: -6.501647472381592
    3. '(
' → logprob: -8.87664794921875
    4. ' (' → logprob: -12.75164794921875
    5. '(self' → logprob: -13.62664794921875
    6. '((' → logprob: -13.62664794921875
    7. '(

' → logprob: -15.50164794921875
    8. '(
' → logprob: -16.87664794921875
    9. '   ' → logprob: -17.00164794921875
    10. '       ' → logprob: -17.62664794921875

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002016331272898242
    2. ',k' → logprob: -8.875201225280762
    3. ' ,' → logprob: -9.875201225280762
    4. '=' → logprob: -11.875201225280762
    5. ',
' → logprob: -12.875201225280762
    6. ')' → logprob: -15.250201225280762
    7. ',n' → logprob: -16.000202178955078
    8. '   ' → logprob: -16.125202178955078
    9. '=k' → logprob: -16.625202178955078
    10. 'k' → logprob: -16.750202178955078

Token 198: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.006716079078614712
    2. 'k' → logprob: -5.006716251373291
    3. '	k' → logprob: -15.256715774536133
    4. ' ' → logprob: -15.506715774536133
    5. ' 
' → logprob: -16.381715774536133
    6. '<|end|>' → logprob: -16.381715774536133
    7. ' ' → logprob: -17.006715774536133
    8. ' к' → logprob: -17.131715774536133
    9. '```' → logprob: -18.256715774536133
    10. ',k' → logprob: -18.881715774536133

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -12.875003814697266
    3. ',h' → logprob: -14.375003814697266
    4. ',
' → logprob: -14.875003814697266
    5. ')' → logprob: -17.875003814697266
    6. ' houses' → logprob: -19.500003814697266
    7. ',

' → logprob: -19.625003814697266
    8. '‌,' → logprob: -19.875003814697266
    9. '=' → logprob: -20.375003814697266
    10. '   ' → logprob: -20.500003814697266

Token 200: ' houses' (ID: 20327)
  Prédit: 'houses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'houses' → logprob: -0.008620131760835648
    2. ' houses' → logprob: -4.758620262145996
    3. 'house' → logprob: -12.633620262145996
    4. '   ' → logprob: -14.008620262145996
    5. 'h' → logprob: -14.508620262145996
    6. 'hou' → logprob: -14.883620262145996
    7. ' ' → logprob: -16.00861930847168
    8. 'homes' → logprob: -16.50861930847168
    9. 'hors' → logprob: -16.50861930847168
    10. ' ' → logprob: -16.88361930847168

Token 201: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. ')
' → logprob: -11.375011444091797
    3. ' )' → logprob: -16.125011444091797
    4. '   ' → logprob: -17.875011444091797
    5. ')

' → logprob: -18.500011444091797
    6. ')#' → logprob: -19.125011444091797
    7. ')return' → logprob: -19.250011444091797
    8. '}' → logprob: -20.125011444091797
    9. ')`' → logprob: -20.250011444091797
    10. '))' → logprob: -20.500011444091797

Token 202: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9081094264984131
    2. 'def' → logprob: -1.158109426498413
    3. '
' → logprob: -1.658109426498413
    4. '<|end|>' → logprob: -2.408109426498413
    5. '<|end|>' → logprob: -7.283109664916992
    6. '```' → logprob: -7.408109664916992
    7. '

' → logprob: -8.408109664916992
    8. '  
' → logprob: -8.658109664916992
    9. '#' → logprob: -9.408109664916992
    10. ' class' → logprob: -9.533109664916992

Token 203: ' Edge' (ID: 16396)
  Prédit: ' Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solver' → logprob: -1.1480213403701782
    2. ' Solution' → logprob: -1.3980213403701782
    3. 'Solver' → logprob: -1.5230213403701782
    4. 'Solution' → logprob: -1.6480213403701782
    5. ' Data' → logprob: -5.023021221160889
    6. 'Data' → logprob: -5.273021221160889
    7. 'Processor' → logprob: -6.273021221160889
    8. 'House' → logprob: -6.648021221160889
    9. 'Optimizer' → logprob: -6.648021221160889
    10. ' Processor' → logprob: -6.773021221160889

Token 204: 'Dif' (ID: 121656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036287005059421062
    2. ':
' → logprob: -5.628628730773926
    3. '):' → logprob: -11.503628730773926
    4. '>:' → logprob: -12.253628730773926
    5. '():' → logprob: -12.753628730773926
    6. '<|end|>' → logprob: -12.753628730773926
    7. ':

' → logprob: -12.878628730773926
    8. ' :' → logprob: -14.003628730773926
    9. '(' → logprob: -14.003628730773926
    10. ':**' → logprob: -14.753628730773926

Token 205: 'ferences' (ID: 10131)
  Prédit: 'ference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ference' → logprob: -0.021445879712700844
    2. 'f' → logprob: -4.1464457511901855
    3. 'fer' → logprob: -5.5214457511901855
    4. 'ferences' → logprob: -6.6464457511901855
    5. 'fs' → logprob: -10.521446228027344
    6. 'fect' → logprob: -11.021446228027344
    7. 'fe' → logprob: -11.521446228027344
    8. 'fic' → logprob: -12.021446228027344
    9. '{
' → logprob: -12.271446228027344
    10. '{}' → logprob: -12.521446228027344

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011847536079585552
    2. ':
' → logprob: -6.751184940338135
    3. '(' → logprob: -12.001184463500977
    4. ' :' → logprob: -12.751184463500977
    5. ':

' → logprob: -13.126184463500977
    6. '(Data' → logprob: -14.376184463500977
    7. '(object' → logprob: -14.501184463500977
    8. '(List' → logprob: -14.876184463500977
    9. ':def' → logprob: -14.876184463500977
    10. '):' → logprob: -15.251184463500977

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3022506833076477
    2. ':
' → logprob: -1.427250623703003
    3. ':' → logprob: -3.927250623703003
    4. 'def' → logprob: -7.552250862121582
    5. ' def' → logprob: -7.677250862121582
    6. '(' → logprob: -9.677250862121582
    7. '):
' → logprob: -9.927250862121582
    8. ' :
' → logprob: -11.177250862121582
    9. '    
' → logprob: -11.177250862121582
    10. '	def' → logprob: -11.177250862121582

Token 208: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8741170167922974
    2. '   ' → logprob: -1.2491170167922974
    3. 'def' (adapté à ' def') → logprob: -1.2491170167922974
    4. ':' → logprob: -5.749116897583008
    5. 'staticmethod' → logprob: -5.749116897583008
    6. ':
' → logprob: -6.499116897583008
    7. ' ' → logprob: -7.624116897583008
    8. '@' → logprob: -7.749116897583008
    9. '  ' → logprob: -8.999116897583008
    10. ' @' → logprob: -9.624116897583008

Token 209: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.09036899358034134
    2. 'init' → logprob: -2.8403689861297607
    3. ' init' → logprob: -4.46536922454834
    4. '__' → logprob: -5.09036922454834
    5. '_init' → logprob: -5.09036922454834
    6. ' ' → logprob: -6.21536922454834
    7. ' def' → logprob: -6.84036922454834
    8. ' _' → logprob: -7.59036922454834
    9. 'Init' → logprob: -8.71536922454834
    10. '```' → logprob: -9.59036922454834

Token 210: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -15.625
    3. 'def' → logprob: -16.625
    4. '```' → logprob: -17.375
    5. 'ini' → logprob: -17.5
    6. 'int' → logprob: -18.125
    7. '(init' → logprob: -18.5
    8. '_init' → logprob: -18.75
    9. 'call' → logprob: -18.75
    10. 'i' → logprob: -19.0

Token 211: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006959984544664621
    2. '__' → logprob: -5.006959915161133
    3. '__(
' → logprob: -8.506959915161133
    4. '__((' → logprob: -10.756959915161133
    5. '(self' → logprob: -11.756959915161133
    6. '(' → logprob: -11.881959915161133
    7. '__('' → logprob: -12.381959915161133
    8. '__("' → logprob: -14.131959915161133
    9. '___' → logprob: -15.006959915161133
    10. ' (' → logprob: -15.256959915161133

Token 212: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012594614236149937
    2. ' self' → logprob: -9.250125885009766
    3. ')' → logprob: -11.250125885009766
    4. '       ' → logprob: -12.250125885009766
    5. ',' → logprob: -12.375125885009766
    6. '   ' → logprob: -12.625125885009766
    7. '
' → logprob: -13.500125885009766
    8. '(self' → logprob: -13.625125885009766
    9. '):
' → logprob: -14.000125885009766
    10. ',self' → logprob: -14.750125885009766

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0065712458454072475
    2. 'self' → logprob: -5.381571292877197
    3. ' ,' → logprob: -6.381571292877197
    4. ' self' → logprob: -9.256570816040039
    5. '(self' → logprob: -9.881570816040039
    6. ',self' → logprob: -10.131570816040039
    7. '):
' → logprob: -10.381570816040039
    8. ')' → logprob: -11.506570816040039
    9. '<|end|>' → logprob: -11.756570816040039
    10. '):' → logprob: -12.006570816040039

Token 214: ' houses' (ID: 20327)
  Prédit: 'houses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'houses' → logprob: -0.6566604971885681
    2. 'self' → logprob: -1.781660556793213
    3. 'data' → logprob: -2.031660556793213
    4. ' data' → logprob: -2.781660556793213
    5. ' self' → logprob: -3.656660556793213
    6. 'dataset' → logprob: -3.781660556793213
    7. ' dataset' → logprob: -3.906660556793213
    8. ' houses' → logprob: -4.031660556793213
    9. 'n' → logprob: -4.906660556793213
    10. '   ' → logprob: -5.156660556793213

Token 215: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49113425612449646
    2. ':' → logprob: -1.2411342859268188
    3. '):
' → logprob: -2.3661341667175293
    4. ',' → logprob: -5.866134166717529
    5. ' ):' → logprob: -6.366134166717529
    6. ')' → logprob: -8.116134643554688
    7. ' ):
' → logprob: -8.991134643554688
    8. ' :' → logprob: -9.491134643554688
    9. '):
' → logprob: -10.116134643554688
    10. '   ' → logprob: -10.991134643554688

Token 216: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0005580356228165329
    2. ' List' → logprob: -7.500557899475098
    3. ')' → logprob: -13.000557899475098
    4. 'list' → logprob: -13.375557899475098
    5. '	List' → logprob: -14.500557899475098
    6. '[List' → logprob: -14.875557899475098
    7. '   ' → logprob: -15.000557899475098
    8. ' ' → logprob: -16.750558853149414
    9. '):
' → logprob: -17.875558853149414
    10. '       ' → logprob: -18.000558853149414

Token 217: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.399378566537052e-05
    2. '):' → logprob: -9.750083923339844
    3. '):
' → logprob: -11.000083923339844
    4. '[' → logprob: -12.625083923339844
    5. '<int' → logprob: -13.125083923339844
    6. '   ' → logprob: -13.500083923339844
    7. 'int' → logprob: -14.250083923339844
    8. ')' → logprob: -14.625083923339844
    9. ':' → logprob: -15.250083923339844
    10. '[Int' → logprob: -15.375083923339844

Token 218: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.37868252396583557
    2. ']):
' → logprob: -1.2536824941635132
    3. '):' → logprob: -4.128682613372803
    4. ']' → logprob: -4.628682613372803
    5. '])' → logprob: -6.503682613372803
    6. '):
' → logprob: -6.628682613372803
    7. ')' → logprob: -7.253682613372803
    8. '>):' → logprob: -8.878682136535645
    9. ']:' → logprob: -9.128682136535645
    10. '']):
' → logprob: -10.003682136535645

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011713240382960066
    2. '   ' → logprob: -9.750117301940918
    3. 'self' → logprob: -10.250117301940918
    4. ' self' → logprob: -10.875117301940918
    5. '      ' → logprob: -13.250117301940918
    6. '        ' → logprob: -14.750117301940918
    7. ',' → logprob: -14.875117301940918
    8. ')' → logprob: -14.875117301940918
    9. '<|end|>' → logprob: -15.000117301940918
    10. '    ' → logprob: -15.125117301940918

Token 220: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5036777853965759
    2. 'self' (adapté à ' self') → logprob: -1.1286778450012207
    3. ' self' → logprob: -2.6286778450012207
    4. '   ' → logprob: -10.378677368164062
    5. 'import' → logprob: -11.503677368164062
    6. 'from' → logprob: -12.378677368164062
    7. ' ' → logprob: -12.378677368164062
    8. '	self' → logprob: -13.003677368164062
    9. 'super' → logprob: -13.253677368164062
    10. '      ' → logprob: -13.253677368164062

Token 221: '.h' (ID: 1508)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18083153665065765
    2. '.h' → logprob: -1.8058315515518188
    3. ' .' → logprob: -7.680831432342529
    4. '.house' → logprob: -8.430831909179688
    5. '.edges' → logprob: -10.180831909179688
    6. 'houses' → logprob: -10.430831909179688
    7. '[' → logprob: -10.430831909179688
    8. '.n' → logprob: -10.680831909179688
    9. '`.' → logprob: -10.805831909179688
    10. '.positions' → logprob: -10.930831909179688

Token 222: 'ouses' (ID: 26940)
  Prédit: 'ouses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouses' → logprob: -0.0005643534241244197
    2. 'houses' → logprob: -7.5005645751953125
    3. 'ouse' → logprob: -12.250564575195312
    4. '=' → logprob: -13.125564575195312
    5. '   ' → logprob: -13.375564575195312
    6. 'uses' → logprob: -14.250564575195312
    7. ' houses' → logprob: -14.375564575195312
    8. 'ou' → logprob: -15.250564575195312
    9. 'ous' → logprob: -15.375564575195312
    10. '#' → logprob: -15.750564575195312

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6488926410675049
    2. '=' → logprob: -1.1488926410675049
    3. '.sort' → logprob: -1.8988926410675049
    4. '.' → logprob: -5.023892402648926
    5. '.append' → logprob: -6.023892402648926
    6. '_sorted' → logprob: -7.023892402648926
    7. '[' → logprob: -8.273892402648926
    8. '   ' → logprob: -9.023892402648926
    9. ')' → logprob: -9.648892402648926
    10. '_' → logprob: -9.648892402648926

Token 224: ' houses' (ID: 20327)
  Prédit: 'houses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'houses' → logprob: -0.25197744369506836
    2. ' houses' → logprob: -1.5019774436950684
    3. 'sorted' → logprob: -10.876977920532227
    4. 'house' → logprob: -11.251977920532227
    5. '   ' → logprob: -12.251977920532227
    6. ' sorted' → logprob: -12.376977920532227
    7. ' ' → logprob: -12.876977920532227
    8. 'homes' → logprob: -14.251977920532227
    9. '[' → logprob: -14.501977920532227
    10. ' house' → logprob: -14.501977920532227

Token 225: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7069404721260071
    2. '       ' → logprob: -0.8319404721260071
    3. '   ' → logprob: -3.0819404125213623
    4. '<|end|>' → logprob: -3.8319404125213623
    5. '    
' → logprob: -6.331940650939941
    6. ' ' → logprob: -7.456940650939941
    7. ',' → logprob: -7.956940650939941
    8. '  
' → logprob: -8.206940650939941
    9. '        
' → logprob: -8.331940650939941
    10. '<|end|>' → logprob: -8.956940650939941

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11685355752706528
    2. '   ' → logprob: -2.3668534755706787
    3. '
' → logprob: -4.241853713989258
    4. '<|end|>' → logprob: -6.491853713989258
    5. '    
' → logprob: -8.491853713989258
    6. 'def' → logprob: -8.616853713989258
    7. ' ' → logprob: -9.616853713989258
    8. ',' → logprob: -9.866853713989258
    9. '        
' → logprob: -10.491853713989258
    10. '<|end|>' → logprob: -11.241853713989258

Token 227: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0839495062828064
    2. '       ' → logprob: -2.958949565887451
    3. 'def' → logprob: -3.583949565887451
    4. '   ' → logprob: -7.708949565887451
    5. ' self' → logprob: -7.833949565887451
    6. '
' → logprob: -11.208949089050293
    7. '	self' → logprob: -12.208949089050293
    8. 's' → logprob: -12.583949089050293
    9. 'from' → logprob: -12.833949089050293
    10. 'n' → logprob: -13.083949089050293

Token 228: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.1296485811471939
    2. '.edges' → logprob: -3.0046486854553223
    3. '.' → logprob: -3.6296486854553223
    4. '.edge' → logprob: -4.254648685455322
    5. ' .' → logprob: -4.754648685455322
    6. '.sorted' → logprob: -4.879648685455322
    7. '.h' → logprob: -6.004648685455322
    8. '.n' → logprob: -6.004648685455322
    9. '.diff' → logprob: -6.004648685455322
    10. '.dist' → logprob: -6.129648685455322

Token 229: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2825290560722351
    2. 'iffs' → logprob: -1.4075291156768799
    3. 'iff' → logprob: -6.782528877258301
    4. 'ist' → logprob: -9.1575288772583
    5. ' if' → logprob: -9.7825288772583
    6. 'eltas' → logprob: -10.0325288772583
    7. 'ifference' → logprob: -11.7825288772583
    8. 'ists' → logprob: -11.9075288772583
    9. 'ata' → logprob: -12.6575288772583
    10. 'e' → logprob: -12.9075288772583

Token 230: 'ferences' (ID: 10131)
  Prédit: 'ferences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -4.704065213445574e-05
    2. 'fs' → logprob: -10.750046730041504
    3. 'f' → logprob: -11.500046730041504
    4. 'fer' → logprob: -11.750046730041504
    5. 'er' → logprob: -12.375046730041504
    6. 'ference' → logprob: -14.375046730041504
    7. 's' → logprob: -14.375046730041504
    8. '   ' → logprob: -14.500046730041504
    9. 'fic' → logprob: -15.000046730041504
    10. 'érences' → logprob: -15.125046730041504

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02977907471358776
    2. '=' → logprob: -3.5297789573669434
    3. ' ' → logprob: -10.779779434204102
    4. '=[]' → logprob: -12.654779434204102
    5. '   ' → logprob: -13.654779434204102
    6. '[' → logprob: -14.529779434204102
    7. ' =[' → logprob: -14.529779434204102
    8. 's' → logprob: -14.654779434204102
    9. '_' → logprob: -14.654779434204102
    10. '<|end|>' → logprob: -15.154779434204102

Token 232: ' self' (ID: 1051)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.19695205986499786
    2. '[' → logprob: -1.9469521045684814
    3. ' []' → logprob: -3.8219521045684814
    4. ' [' → logprob: -4.321951866149902
    5. '[
' → logprob: -7.946951866149902
    6. '[self' → logprob: -8.446951866149902
    7. '[]
' → logprob: -9.321951866149902
    8. '[len' → logprob: -10.071951866149902
    9. '[int' → logprob: -10.446951866149902
    10. '[]}' → logprob: -10.696951866149902

Token 233: '._' (ID: 2697)
  Prédit: '.h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.2929684817790985
    2. 'ouses' → logprob: -1.417968511581421
    3. '.' → logprob: -5.667968273162842
    4. '[' → logprob: -6.042968273162842
    5. 'ouse' → logprob: -6.542968273162842
    6. 'houses' → logprob: -6.792968273162842
    7. '.s' → logprob: -7.542968273162842
    8. '._' → logprob: -7.917968273162842
    9. '.calculate' → logprob: -8.04296875
    10. '.d' → logprob: -8.41796875

Token 234: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.576022744178772
    2. 'calculate' → logprob: -0.826022744178772
    3. 'calc' → logprob: -9.45102310180664
    4. '[' → logprob: -14.20102310180664
    5. 'build' → logprob: -14.45102310180664
    6. ' compute' → logprob: -14.45102310180664
    7. 'generate' → logprob: -14.57602310180664
    8. '.compute' → logprob: -14.70102310180664
    9. ' calculate' → logprob: -14.82602310180664
    10. 'get' → logprob: -14.82602310180664

Token 235: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.10975061357021332
    2. '_' → logprob: -2.484750509262085
    3. '()' → logprob: -4.734750747680664
    4. '_diff' → logprob: -5.609750747680664
    5. '_edge' → logprob: -5.859750747680664
    6. 'dif' → logprob: -6.609750747680664
    7. '_edges' → logprob: -6.734750747680664
    8. '_dist' → logprob: -6.859750747680664
    9. '_difference' → logprob: -7.234750747680664
    10. '(' → logprob: -7.484750747680664

Token 236: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.265633419388905e-05
    2. ' if' → logprob: -9.875062942504883
    3. 'dif' → logprob: -11.500062942504883
    4. 'ifference' → logprob: -15.500062942504883
    5. 'iff' → logprob: -15.750062942504883
    6. '(if' → logprob: -15.875062942504883
    7. 'iffs' → logprob: -16.125062942504883
    8. 'ist' → logprob: -16.375062942504883
    9. '_if' → logprob: -16.625062942504883
    10. 'ffer' → logprob: -16.625062942504883

Token 237: 'ferences' (ID: 10131)
  Prédit: 'ferences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -0.04853910580277443
    2. 'r' → logprob: -3.298539161682129
    3. 'ffer' → logprob: -4.673539161682129
    4. 'er' → logprob: -7.923539161682129
    5. 'rer' → logprob: -8.173539161682129
    6. 'f' → logprob: -8.673539161682129
    7. 'ff' → logprob: -8.798539161682129
    8. 'if' → logprob: -10.548539161682129
    9. 'rence' → logprob: -10.923539161682129
    10. 'ren' → logprob: -11.173539161682129

Token 238: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002222516923211515
    2. '(' → logprob: -9.500222206115723
    3. '(h' → logprob: -9.500222206115723
    4. '()
' → logprob: -10.375222206115723
    5. ' ()' → logprob: -10.750222206115723
    6. '()

' → logprob: -12.375222206115723
    7. '()`' → logprob: -12.625222206115723
    8. '()[' → logprob: -13.000222206115723
    9. '()]' → logprob: -13.500222206115723
    10. '().' → logprob: -14.000222206115723

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5081093311309814
    2. 'def' → logprob: -1.3831093311309814
    3. '
' → logprob: -2.1331093311309814
    4. ' def' → logprob: -3.7581093311309814
    5. '    
' → logprob: -5.508109092712402
    6. '[' → logprob: -8.133109092712402
    7. ':' → logprob: -8.133109092712402
    8. '(' → logprob: -8.508109092712402
    9. '	def' → logprob: -8.508109092712402
    10. ' ' → logprob: -8.633109092712402

Token 240: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0026669732760638
    2. ' def' → logprob: -6.00266695022583
    3. '   ' → logprob: -8.627667427062988
    4. '	def' → logprob: -11.627667427062988
    5. '
' → logprob: -13.252667427062988
    6. '    
' → logprob: -14.377667427062988
    7. ' ' → logprob: -14.627667427062988
    8. ')' → logprob: -15.502667427062988
    9. ':def' → logprob: -15.877667427062988
    10. '_def' → logprob: -16.252666473388672

Token 241: ' _' (ID: 1175)
  Prédit: '_compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_compute' → logprob: -0.0017105208244174719
    2. ' _' → logprob: -6.376710414886475
    3. '_' → logprob: -13.376710891723633
    4. '_d' → logprob: -13.751710891723633
    5. '_difference' → logprob: -13.751710891723633
    6. '_diff' → logprob: -14.501710891723633
    7. '\' → logprob: -14.626710891723633
    8. '_generate' → logprob: -14.876710891723633
    9. 'def' → logprob: -15.001710891723633
    10. '_define' → logprob: -15.001710891723633

Token 242: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -7.896309739408025e-07
    2. '_compute' → logprob: -14.250000953674316
    3. ' compute' → logprob: -16.75
    4. '.compute' → logprob: -19.5
    5. 'comput' → logprob: -19.625
    6. 'calculate' → logprob: -19.625
    7. 'computer' → logprob: -20.5
    8. '`' → logprob: -20.75
    9. '```' → logprob: -21.0
    10. '
' → logprob: -21.125

Token 243: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.01687360554933548
    2. '_' → logprob: -4.266873836517334
    3. '_difference' → logprob: -6.266873836517334
    4. '_diff' → logprob: -7.141873836517334
    5. '_dist' → logprob: -12.516873359680176
    6. ' _' → logprob: -12.891873359680176
    7. '_def' → logprob: -13.641873359680176
    8. '_
' → logprob: -13.641873359680176
    9. '_a' → logprob: -14.391873359680176
    10. '_s' → logprob: -14.391873359680176

Token 244: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4855663721391466e-05
    2. ' if' → logprob: -11.250015258789062
    3. '_if' → logprob: -14.375015258789062
    4. '_' → logprob: -14.500015258789062
    5. 'ffer' → logprob: -15.625015258789062
    6. 'iffer' → logprob: -15.875015258789062
    7. '(if' → logprob: -15.875015258789062
    8. 'iff' → logprob: -16.375015258789062
    9. 'dif' → logprob: -17.125015258789062
    10. '   ' → logprob: -17.375015258789062

Token 245: 'ferences' (ID: 10131)
  Prédit: 'ferences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -0.0027285520918667316
    2. 'fer' → logprob: -6.502728462219238
    3. 'ffer' → logprob: -7.377728462219238
    4. 'er' → logprob: -7.877728462219238
    5. 'r' → logprob: -9.127728462219238
    6. 'ference' → logprob: -9.752728462219238
    7. 'f' → logprob: -11.377728462219238
    8. '```' → logprob: -11.502728462219238
    9. 'rence' → logprob: -12.127728462219238
    10. '_' → logprob: -12.252728462219238

Token 246: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011415231710998341
    2. '(' → logprob: -9.375114440917969
    3. 'self' → logprob: -10.875114440917969
    4. '   ' → logprob: -12.375114440917969
    5. ' (' → logprob: -12.750114440917969
    6. ' self' → logprob: -13.750114440917969
    7. '	self' → logprob: -14.250114440917969
    8. ' ' → logprob: -14.500114440917969
    9. '(
' → logprob: -15.125114440917969
    10. '       ' → logprob: -15.125114440917969

Token 247: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18173617124557495
    2. ')' → logprob: -1.8067362308502197
    3. '):
' → logprob: -6.556735992431641
    4. 'self' → logprob: -7.806735992431641
    5. ' ):' → logprob: -9.80673599243164
    6. ')->' → logprob: -10.18173599243164
    7. ' )' → logprob: -10.93173599243164
    8. '   ' → logprob: -11.05673599243164
    9. '):
' → logprob: -11.80673599243164
    10. '(self' → logprob: -11.80673599243164

Token 248: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07144448161125183
    2. '->' → logprob: -3.196444511413574
    3. ' ->' → logprob: -3.696444511413574
    4. 'self' → logprob: -6.821444511413574
    5. '(' → logprob: -7.071444511413574
    6. ')' → logprob: -7.946444511413574
    7. ':' → logprob: -8.071444511413574
    8. '       ' → logprob: -8.196444511413574
    9. '   ' → logprob: -8.821444511413574
    10. ')->' → logprob: -9.696444511413574

Token 249: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.04863835126161575
    2. ' List' → logprob: -3.048638343811035
    3. '[List' → logprob: -9.923638343811035
    4. 'list' → logprob: -13.548638343811035
    5. ' list' → logprob: -15.298638343811035
    6. '   ' → logprob: -16.04863929748535
    7. '	List' → logprob: -16.29863929748535
    8. ' ' → logprob: -17.04863929748535
    9. '[' → logprob: -17.29863929748535
    10. '[]' → logprob: -17.79863929748535

Token 250: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.896309739408025e-07
    2. 'int' → logprob: -14.375000953674316
    3. '[' → logprob: -16.75
    4. '<int' → logprob: -17.0
    5. '[in' → logprob: -18.125
    6. '[i' → logprob: -18.25
    7. '(int' → logprob: -18.875
    8. '[Int' → logprob: -18.875
    9. '[
' → logprob: -19.125
    10. ':int' → logprob: -20.0

Token 251: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.06263479590415955
    2. ']:
' → logprob: -2.8126347064971924
    3. ']' → logprob: -7.6876349449157715
    4. ']:
' → logprob: -8.562634468078613
    5. ']:

' → logprob: -12.187634468078613
    6. '):' → logprob: -12.687634468078613
    7. ' ]' → logprob: -13.312634468078613
    8. '):
' → logprob: -13.437634468078613
    9. '   ' → logprob: -13.687634468078613
    10. '():
' → logprob: -13.937634468078613

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.7159857786027715e-05
    2. 'diff' → logprob: -10.500046730041504
    3. 'dif' → logprob: -11.375046730041504
    4. 'd' → logprob: -12.625046730041504
    5. '```' → logprob: -13.625046730041504
    6. 'return' → logprob: -14.000046730041504
    7. '      ' → logprob: -14.375046730041504
    8. 'result' → logprob: -14.500046730041504
    9. '[' → logprob: -15.250046730041504
    10. '   ' → logprob: -15.375046730041504

Token 253: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6127066016197205
    2. 'return' (adapté à ' return') → logprob: -1.6127066612243652
    3. 'diff' → logprob: -1.6127066612243652
    4. 'dif' → logprob: -2.8627066612243652
    5. ' return' → logprob: -6.862706661224365
    6. '[' → logprob: -7.612706661224365
    7. 'd' → logprob: -7.987706661224365
    8. ' diff' → logprob: -8.487706184387207
    9. 'result' → logprob: -9.112706184387207
    10. ' dif' → logprob: -9.862706184387207

Token 254: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20444686710834503
    2. ' [' → logprob: -1.9544469118118286
    3. '[self' → logprob: -3.954446792602539
    4. '[max' → logprob: -4.829446792602539
    5. '[i' → logprob: -5.079446792602539
    6. '[h' → logprob: -5.329446792602539
    7. '[
' → logprob: -5.704446792602539
    8. '[int' → logprob: -7.704446792602539
    9. '[len' → logprob: -7.954446792602539
    10. '[min' → logprob: -8.704446792602539

Token 255: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03374851495027542
    2. 'abs' → logprob: -3.4087486267089844
    3. ' self' → logprob: -9.408748626708984
    4. 'j' → logprob: -11.658748626708984
    5. ' abs' → logprob: -11.658748626708984
    6. 'b' → logprob: -13.283748626708984
    7. '   ' → logprob: -14.408748626708984
    8. '(self' → logprob: -14.783748626708984
    9. '
' → logprob: -15.158748626708984
    10. 'y' → logprob: -15.283748626708984

Token 256: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.375000953674316
    3. ').' → logprob: -15.625000953674316
    4. 'houses' → logprob: -15.750000953674316
    5. '].' → logprob: -16.125
    6. '.house' → logprob: -17.375
    7. '.d' → logprob: -17.875
    8. ' houses' → logprob: -18.25
    9. ' .' → logprob: -18.25
    10. '.s' → logprob: -18.625

Token 257: 'ouses' (ID: 26940)
  Prédit: 'ouses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouses' → logprob: -0.0005518406978808343
    2. 'houses' → logprob: -8.6255521774292
    3. '.' → logprob: -8.8755521774292
    4. 'uses' → logprob: -9.7505521774292
    5. '[' → logprob: -9.8755521774292
    6. '   ' → logprob: -11.0005521774292
    7. 'ous' → logprob: -11.2505521774292
    8. '[self' → logprob: -11.3755521774292
    9. '[i' → logprob: -11.5005521774292
    10. 's' → logprob: -11.7505521774292

Token 258: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. 'i' → logprob: -12.87500286102295
    3. '
' → logprob: -16.625001907348633
    4. '[' → logprob: -18.375001907348633
    5. ' i' → logprob: -18.875001907348633
    6. ']' → logprob: -18.875001907348633
    7. '][' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.125001907348633
    9. '[j' → logprob: -19.125001907348633
    10. '	i' → logprob: -19.125001907348633

Token 259: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003267552936449647
    2. ' +' → logprob: -5.753267765045166
    3. ']' → logprob: -9.753267288208008
    4. '+
' → logprob: -10.628267288208008
    5. '
' → logprob: -13.003267288208008
    6. ' +
' → logprob: -13.253267288208008
    7. ' ' → logprob: -13.628267288208008
    8. '1' → logprob: -14.128267288208008
    9. '+]' → logprob: -14.628267288208008
    10. '   ' → logprob: -14.628267288208008

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8921695047756657e-05
    2. ']' → logprob: -10.875028610229492
    3. ' ' → logprob: -11.625028610229492
    4. '+' → logprob: -14.750028610229492
    5. '   ' → logprob: -15.125028610229492
    6. '
' → logprob: -15.500028610229492
    7. '  ' → logprob: -17.125028610229492
    8. ']-' → logprob: -17.625028610229492
    9. '-' → logprob: -17.875028610229492
    10. ']
' → logprob: -18.125028610229492

Token 261: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31432244181632996
    2. ']' → logprob: -1.4393224716186523
    3. '-' → logprob: -3.4393224716186523
    4. ']-' → logprob: -8.189322471618652
    5. ' ]' → logprob: -8.564322471618652
    6. ' ' → logprob: -10.689322471618652
    7. ')' → logprob: -10.814322471618652
    8. '[' → logprob: -11.564322471618652
    9. ' -
' → logprob: -11.939322471618652
    10. ' ' → logprob: -12.314322471618652

Token 262: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16022878885269165
    2. '-' → logprob: -1.9102287292480469
    3. ' ' → logprob: -13.160228729248047
    4. ' -
' → logprob: -13.535228729248047
    5. ' ' → logprob: -14.535228729248047
    6. '-
' → logprob: -15.160228729248047
    7. ']' → logprob: -15.285228729248047
    8. ')' → logprob: -16.660228729248047
    9. '-self' → logprob: -16.660228729248047
    10. '[' → logprob: -16.785228729248047

Token 263: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014164687134325504
    2. ' self' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.889164924621582
    4. '	self' → logprob: -15.139164924621582
    5. '<|end|>' → logprob: -15.514164924621582
    6. '(self' → logprob: -16.139163970947266
    7. '=self' → logprob: -16.889163970947266
    8. '[self' → logprob: -17.139163970947266
    9. '       ' → logprob: -17.389163970947266
    10. '`' → logprob: -17.389163970947266

Token 264: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -2.927930654550437e-05
    2. '].' → logprob: -11.375029563903809
    3. '.' → logprob: -11.625029563903809
    4. ').' → logprob: -12.250029563903809
    5. ' .' → logprob: -13.375029563903809
    6. '}.' → logprob: -14.000029563903809
    7. '.house' → logprob: -14.625029563903809
    8. 'ouses' → logprob: -14.875029563903809
    9. 'houses' → logprob: -15.625029563903809
    10. '.s' → logprob: -15.875029563903809

Token 265: 'ouses' (ID: 26940)
  Prédit: 'ouses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouses' → logprob: -0.002783600240945816
    2. '.' → logprob: -6.00278377532959
    3. 'houses' → logprob: -8.75278377532959
    4. '.h' → logprob: -9.12778377532959
    5. 'uses' → logprob: -11.75278377532959
    6. 'ouse' → logprob: -12.00278377532959
    7. 'ous' → logprob: -12.62778377532959
    8. 's' → logprob: -12.87778377532959
    9. '.i' → logprob: -13.25278377532959
    10. '```' → logprob: -13.25278377532959

Token 266: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.522638169466518e-05
    2. ']' → logprob: -10.750024795532227
    3. '[' → logprob: -12.750024795532227
    4. '][' → logprob: -14.500024795532227
    5. 'for' → logprob: -16.375024795532227
    6. '   ' → logprob: -16.500024795532227
    7. ')' → logprob: -16.625024795532227
    8. ' ' → logprob: -16.875024795532227
    9. '```' → logprob: -17.000024795532227
    10. ' for' → logprob: -17.500024795532227

Token 267: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.024285616353154182
    2. 'for' → logprob: -3.7742855548858643
    3. ']' → logprob: -7.274285793304443
    4. ' ' → logprob: -8.274285316467285
    5. '	for' → logprob: -9.774285316467285
    6. '
' → logprob: -11.149285316467285
    7. ' ]' → logprob: -11.524285316467285
    8. '    ' → logprob: -13.024285316467285
    9. ')' → logprob: -13.149285316467285
    10. '   ' → logprob: -13.274285316467285

Token 268: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.020656224340200424
    2. 'for' → logprob: -3.895656108856201
    3. '	for' → logprob: -9.27065658569336
    4. ' ' → logprob: -11.14565658569336
    5. '       ' → logprob: -13.52065658569336
    6. '        ' → logprob: -13.77065658569336
    7. '   ' → logprob: -14.27065658569336
    8. '		' → logprob: -14.39565658569336
    9. '    ' → logprob: -14.52065658569336
    10. '	' → logprob: -14.52065658569336

Token 269: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4740775227546692
    2. 'i' → logprob: -0.9740775227546692
    3. '	i' → logprob: -14.474077224731445
    4. ' ' → logprob: -17.849077224731445
    5. ' in' → logprob: -17.849077224731445
    6. '
' → logprob: -17.974077224731445
    7. ' range' → logprob: -18.974077224731445
    8. 'range' → logprob: -19.099077224731445
    9. '(i' → logprob: -20.349077224731445
    10. ' 
' → logprob: -20.474077224731445

Token 270: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008672484196722507
    2. 'in' → logprob: -4.758672714233398
    3. 'range' → logprob: -10.133672714233398
    4. ' ' → logprob: -11.508672714233398
    5. ' range' → logprob: -12.383672714233398
    6. ' i' → logprob: -13.383672714233398
    7. '+' → logprob: -14.133672714233398
    8. '<|end|>' → logprob: -14.508672714233398
    9. '	in' → logprob: -15.383672714233398
    10. '  ' → logprob: -15.758672714233398

Token 271: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324547804892063
    2. ' range' → logprob: -3.7732455730438232
    3. ' ' → logprob: -19.023244857788086
    4. '	range' → logprob: -19.148244857788086
    5. '(range' → logprob: -20.523244857788086
    6. '  ' → logprob: -22.023244857788086
    7. '   ' → logprob: -22.648244857788086
    8. '_range' → logprob: -22.773244857788086
    9. '.range' → logprob: -23.648244857788086
    10. 'rang' → logprob: -24.023244857788086

Token 272: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0007698441040702164
    2. '(self' → logprob: -7.25076961517334
    3. '(' → logprob: -9.75076961517334
    4. 'len' → logprob: -13.37576961517334
    5. ' len' → logprob: -16.750770568847656
    6. ' (' → logprob: -17.375770568847656
    7. '(
' → logprob: -17.875770568847656
    8. 'self' → logprob: -19.000770568847656
    9. '(s' → logprob: -21.000770568847656
    10. '[len' → logprob: -21.125770568847656

Token 273: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.5597102396423e-05
    2. '(' → logprob: -10.250035285949707
    3. 'self' → logprob: -15.875035285949707
    4. '(
' → logprob: -18.250036239624023
    5. '(s' → logprob: -19.000036239624023
    6. ' self' → logprob: -19.000036239624023
    7. ' (' → logprob: -21.125036239624023
    8. '(this' → logprob: -22.000036239624023
    9. '	self' → logprob: -22.250036239624023
    10. '(

' → logprob: -22.500036239624023

Token 274: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -2.45848218582978e-06
    2. ').' → logprob: -13.25000286102295
    3. ' .' → logprob: -15.37500286102295
    4. '.house' → logprob: -15.87500286102295
    5. 'houses' → logprob: -16.125001907348633
    6. '.' → logprob: -16.375001907348633
    7. '].' → logprob: -18.750001907348633
    8. ')' → logprob: -19.375001907348633
    9. '>.' → logprob: -19.625001907348633
    10. '}.' → logprob: -19.750001907348633

Token 275: 'ouses' (ID: 26940)
  Prédit: 'ouses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouses' → logprob: -0.03679417073726654
    2. '.' → logprob: -3.4117941856384277
    3. '.h' → logprob: -5.911794185638428
    4. 'ous' → logprob: -8.53679370880127
    5. 'houses' → logprob: -8.66179370880127
    6. '.os' → logprob: -11.03679370880127
    7. '   ' → logprob: -11.78679370880127
    8. 'uses' → logprob: -12.16179370880127
    9. '```' → logprob: -12.16179370880127
    10. '-' → logprob: -12.28679370880127

Token 276: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10572538524866104
    2. ' -' → logprob: -2.8557252883911133
    3. '-' → logprob: -3.2307252883911133
    4. ')-' → logprob: -5.980725288391113
    5. ' )' → logprob: -7.355725288391113
    6. ' ' → logprob: -9.480725288391113
    7. ']' → logprob: -10.730725288391113
    8. '1' → logprob: -11.855725288391113
    9. '   ' → logprob: -12.730725288391113
    10. '-)' → logprob: -13.355725288391113

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '
' → logprob: -17.12500762939453
    4. '```' → logprob: -17.12500762939453
    5. ')' → logprob: -18.00000762939453
    6. '   ' → logprob: -18.25000762939453
    7. '2' → logprob: -19.75000762939453
    8. '{
' → logprob: -19.81250762939453
    9. '<|end|>' → logprob: -20.00000762939453
    10. '`' → logprob: -20.12500762939453

Token 278: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1010553389787674
    2. ']' → logprob: -2.351055383682251
    3. ')' → logprob: -7.226055145263672
    4. ' ]' → logprob: -9.226055145263672
    5. '       ' → logprob: -11.851055145263672
    6. ']
' → logprob: -12.226055145263672
    7. ' )' → logprob: -12.726055145263672
    8. '])' → logprob: -12.976055145263672
    9. ']}' → logprob: -13.851055145263672
    10. '}]' → logprob: -13.976055145263672

Token 279: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: ' Wire' (ID: 28885)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.2948547899723053
    2. 'Solver' → logprob: -2.9198548793792725
    3. ' Solution' → logprob: -3.1698548793792725
    4. 'Cluster' → logprob: -3.5448548793792725
    5. 'Edge' → logprob: -3.7948548793792725
    6. 'Optimizer' → logprob: -3.9198548793792725
    7. 'Distance' → logprob: -4.169854640960693
    8. 'K' → logprob: -4.794854640960693
    9. 'Minimal' → logprob: -4.794854640960693
    10. 'House' → logprob: -5.169854640960693

Token 281: 'Length' (ID: 6563)
  Prédit: 'Cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cut' → logprob: -1.0240336656570435
    2. 'Length' → logprob: -1.7740336656570435
    3. 'Lengths' → logprob: -2.024033546447754
    4. 'Splitter' → logprob: -2.524033546447754
    5. 'Optimizer' → logprob: -3.024033546447754
    6. 'Bundle' → logprob: -3.399033546447754
    7. 'Cuts' → logprob: -4.149033546447754
    8. 'Connections' → logprob: -4.274033546447754
    9. 'Bund' → logprob: -4.524033546447754
    10. 'Router' → logprob: -4.649033546447754

Token 282: 'Optimizer' (ID: 120293)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024310054257512093
    2. 'Optimizer' → logprob: -4.149310111999512
    3. 'Splitter' → logprob: -6.024310111999512
    4. ':
' → logprob: -6.149310111999512
    5. 'Calculator' → logprob: -6.274310111999512
    6. '(' → logprob: -7.524310111999512
    7. 'Planner' → logprob: -8.274310111999512
    8. 'Optimization' → logprob: -8.899310111999512
    9. 'Estimator' → logprob: -8.899310111999512
    10. 'Split' → logprob: -9.274310111999512

Token 283: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005060884868726134
    2. ':
' → logprob: -8.250506401062012
    3. ' :' → logprob: -8.375506401062012
    4. ':def' → logprob: -11.875506401062012
    5. '(' → logprob: -12.875506401062012
    6. ':

' → logprob: -13.375506401062012
    7. '):' → logprob: -13.875506401062012
    8. '(object' → logprob: -14.250506401062012
    9. ' :
' → logprob: -14.875506401062012
    10. '():' → logprob: -15.250506401062012

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003876077476888895
    2. ' def' → logprob: -5.628876209259033
    3. 'def' → logprob: -8.253875732421875
    4. '    
' → logprob: -11.628875732421875
    5. '	def' → logprob: -12.878875732421875
    6. '
' → logprob: -13.253875732421875
    7. '   ' → logprob: -14.128875732421875
    8. '<|end|>' → logprob: -15.003875732421875
    9. ',' → logprob: -15.128875732421875
    10. '(' → logprob: -15.378875732421875

Token 285: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.02413632534444332
    2. 'def' (adapté à ' def') → logprob: -3.7741363048553467
    3. '   ' → logprob: -7.024136543273926
    4. '    ' → logprob: -16.02413558959961
    5. '	def' → logprob: -16.27413558959961
    6. ' __' → logprob: -17.39913558959961
    7. 'class' → logprob: -17.39913558959961
    8. ' ' → logprob: -17.77413558959961
    9. ':def' → logprob: -18.14913558959961
    10. '    
' → logprob: -19.52413558959961

Token 286: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0017420548247173429
    2. '__' → logprob: -7.001741886138916
    3. ' def' → logprob: -7.376741886138916
    4. ' ' → logprob: -9.251742362976074
    5. ' init' → logprob: -10.001742362976074
    6. '_init' → logprob: -10.001742362976074
    7. 'init' → logprob: -11.626742362976074
    8. ' ' → logprob: -12.626742362976074
    9. 'def' → logprob: -12.751742362976074
    10. ' _' → logprob: -14.126742362976074

Token 287: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.723973582556937e-05
    2. 'def' → logprob: -11.250017166137695
    3. 'nit' → logprob: -13.750017166137695
    4. '_init' → logprob: -13.750017166137695
    5. ' init' → logprob: -14.250017166137695
    6. 'it' → logprob: -14.875017166137695
    7. '__' → logprob: -15.250017166137695
    8. '```' → logprob: -15.500017166137695
    9. '(init' → logprob: -15.625017166137695
    10. '   ' → logprob: -15.750017166137695

Token 288: '__(' (ID: 8241)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6007653474807739
    2. '(self' → logprob: -0.8507653474807739
    3. '__(' → logprob: -3.7257652282714844
    4. '(' → logprob: -8.100765228271484
    5. ' ' → logprob: -10.475765228271484
    6. '__' → logprob: -10.600765228271484
    7. '__(
' → logprob: -11.100765228271484
    8. '   ' → logprob: -11.600765228271484
    9. 'self' → logprob: -11.725765228271484
    10. ' self' → logprob: -11.725765228271484

Token 289: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019628899171948433
    2. ' self' → logprob: -6.251962661743164
    3. '(self' → logprob: -11.376962661743164
    4. '
' → logprob: -11.501962661743164
    5. ')' → logprob: -12.126962661743164
    6. ',' → logprob: -12.626962661743164
    7. '   ' → logprob: -13.501962661743164
    8. ',self' → logprob: -14.001962661743164
    9. '       ' → logprob: -14.626962661743164
    10. '	self' → logprob: -15.126962661743164

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005434981547296047
    2. ' ,' → logprob: -5.255434989929199
    3. 'self' → logprob: -8.6304349899292
    4. ' self' → logprob: -11.0054349899292
    5. ',self' → logprob: -12.8804349899292
    6. ',
' → logprob: -13.5054349899292
    7. '   ' → logprob: -15.2554349899292
    8. ' (' → logprob: -15.3804349899292
    9. '(self' → logprob: -15.6304349899292
    10. '__,' → logprob: -15.7554349899292

Token 291: ' dataset' (ID: 20830)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06654616445302963
    2. ' self' → logprob: -3.1915462017059326
    3. 'houses' → logprob: -4.5665459632873535
    4. 'data' → logprob: -4.9415459632873535
    5. ' data' → logprob: -6.3165459632873535
    6. 'dataset' → logprob: -6.3165459632873535
    7. ' dataset' → logprob: -7.4415459632873535
    8. ' houses' → logprob: -7.5665459632873535
    9. '   ' → logprob: -8.316546440124512
    10. 'datasets' → logprob: -8.566546440124512

Token 292: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004782899748533964
    2. '):' → logprob: -5.379782676696777
    3. ' :' → logprob: -9.254782676696777
    4. ' ):' → logprob: -10.254782676696777
    5. '):
' → logprob: -10.504782676696777
    6. ')' → logprob: -13.629782676696777
    7. ',' → logprob: -13.879782676696777
    8. '}:' → logprob: -14.379782676696777
    9. '   ' → logprob: -15.004782676696777
    10. '>:' → logprob: -15.129782676696777

Token 293: ' Data' (ID: 4833)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.1002078503370285
    2. ' Data' → logprob: -2.350207805633545
    3. '	Data' → logprob: -14.600208282470703
    4. 'Dataset' → logprob: -15.100208282470703
    5. '_Data' → logprob: -15.350208282470703
    6. '<Data' → logprob: -16.225208282470703
    7. ' data' → logprob: -16.725208282470703
    8. ')' → logprob: -17.600208282470703
    9. '   ' → logprob: -17.600208282470703
    10. ' ' → logprob: -17.725208282470703

Token 294: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -1.1875571544806007e-05
    2. 'set' → logprob: -11.500011444091797
    3. 'et' → logprob: -13.375011444091797
    4. 'ataset' → logprob: -16.625011444091797
    5. '_set' → logprob: -17.125011444091797
    6. 'S' → logprob: -19.250011444091797
    7. ' set' → logprob: -19.375011444091797
    8. ' Set' → logprob: -19.500011444091797
    9. 'aset' → logprob: -19.625011444091797
    10. '	Set' → logprob: -20.250011444091797

Token 295: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.054934076964855194
    2. '):
' → logprob: -2.929934024810791
    3. '):
' → logprob: -10.55493450164795
    4. ',' → logprob: -11.05493450164795
    5. ')' → logprob: -12.30493450164795
    6. ' ):' → logprob: -12.80493450164795
    7. ':' → logprob: -13.67993450164795
    8. '):

' → logprob: -14.42993450164795
    9. '   ' → logprob: -14.55493450164795
    10. '       ' → logprob: -15.67993450164795

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005011024884879589
    2. '   ' → logprob: -5.755011081695557
    3. 'self' → logprob: -6.880011081695557
    4. ' self' → logprob: -7.630011081695557
    5. '<|end|>' → logprob: -8.755010604858398
    6. '        
' → logprob: -10.255010604858398
    7. ',' → logprob: -10.505010604858398
    8. '
' → logprob: -10.880010604858398
    9. ')' → logprob: -11.130010604858398
    10. ' ' → logprob: -11.380010604858398

Token 297: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1723058670759201
    2. '       ' → logprob: -1.9223058223724365
    3. ' self' → logprob: -4.422306060791016
    4. '   ' → logprob: -13.547306060791016
    5. '	self' → logprob: -14.047306060791016
    6. '(self' → logprob: -15.922306060791016
    7. 's' → logprob: -16.547306060791016
    8. ' ' → logprob: -17.047306060791016
    9. '[self' → logprob: -17.422306060791016
    10. '           ' → logprob: -17.672306060791016

Token 298: '.dataset' (ID: 48314)
  Prédit: '.dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dataset' → logprob: -0.03250901401042938
    2. ' .' → logprob: -4.032508850097656
    3. '.' → logprob: -4.407508850097656
    4. 'dataset' → logprob: -6.532508850097656
    5. ' dataset' → logprob: -7.532508850097656
    6. '.data' → logprob: -10.532508850097656
    7. '.datasets' → logprob: -11.032508850097656
    8. '.Dataset' → logprob: -11.532508850097656
    9. '.n' → logprob: -11.657508850097656
    10. '_dataset' → logprob: -12.157508850097656

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10032884031534195
    2. ' =' → logprob: -2.3503289222717285
    3. '.' → logprob: -9.97532844543457
    4. '   ' → logprob: -10.85032844543457
    5. '=
' → logprob: -11.47532844543457
    6. ')' → logprob: -11.72532844543457
    7. '=data' → logprob: -11.97532844543457
    8. ' ' → logprob: -12.22532844543457
    9. '=n' → logprob: -12.22532844543457
    10. ',' → logprob: -12.35032844543457

Token 300: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.16022492945194244
    2. ' dataset' → logprob: -1.9102249145507812
    3. '(dataset' → logprob: -15.035224914550781
    4. 'ataset' → logprob: -15.535224914550781
    5. '.dataset' → logprob: -15.910224914550781
    6. '   ' → logprob: -16.66022491455078
    7. 'data' → logprob: -16.91022491455078
    8. '_dataset' → logprob: -17.53522491455078
    9. ' ' → logprob: -17.91022491455078
    10. '
' → logprob: -18.28522491455078

Token 301: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028881913051009178
    2. '   ' → logprob: -4.028882026672363
    3. '<|end|>' → logprob: -4.903882026672363
    4. '    
' → logprob: -6.403882026672363
    5. '<|end|>' → logprob: -8.028882026672363
    6. 'def' → logprob: -8.153882026672363
    7. '  
' → logprob: -8.403882026672363
    8. '       ' → logprob: -8.653882026672363
    9. ' def' → logprob: -8.778882026672363
    10. '        
' → logprob: -9.028882026672363

Token 302: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03957993537187576
    2. '
' → logprob: -3.5395798683166504
    3. '    
' → logprob: -5.03957986831665
    4. 'def' → logprob: -6.03957986831665
    5. '        
' → logprob: -8.039580345153809
    6. '       ' → logprob: -8.539580345153809
    7. '<|end|>' → logprob: -8.539580345153809
    8. ' def' → logprob: -9.039580345153809
    9. '  
' → logprob: -10.039580345153809
    10. ' 
' → logprob: -11.039580345153809

Token 303: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06675782799720764
    2. 'def' → logprob: -2.816757917404175
    3. '       ' → logprob: -5.691757678985596
    4. '   ' → logprob: -7.316757678985596
    5. ' self' → logprob: -7.566757678985596
    6. '
' → logprob: -9.066758155822754
    7. ' def' → logprob: -10.441758155822754
    8. 'class' → logprob: -11.066758155822754
    9. '@property' → logprob: -11.941758155822754
    10. 'sorted' → logprob: -11.941758155822754

Token 304: '.diff' (ID: 97998)
  Prédit: '.h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.7645012736320496
    2. '.edges' → logprob: -1.6395013332366943
    3. '.result' → logprob: -2.6395013332366943
    4. '.sorted' → logprob: -2.8895013332366943
    5. '.d' → logprob: -3.0145013332366943
    6. '.best' → logprob: -3.8895013332366943
    7. '.positions' → logprob: -3.8895013332366943
    8. '.' → logprob: -3.8895013332366943
    9. '.dataset' → logprob: -4.139501094818115
    10. '.results' → logprob: -4.639501094818115

Token 305: ' =' (ID: 314)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0024568685330450535
    2. 's' → logprob: -6.6274566650390625
    3. ' =' → logprob: -7.5024566650390625
    4. 'ferences' → logprob: -8.127456665039062
    5. '=' → logprob: -9.627456665039062
    6. 'fer' → logprob: -10.002456665039062
    7. 'érences' → logprob: -10.002456665039062
    8. 'ere' → logprob: -10.252456665039062
    9. 'eren' → logprob: -11.002456665039062
    10. 'ences' → logprob: -11.002456665039062

Token 306: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.07889441400766373
    2. ' Edge' → logprob: -2.5788943767547607
    3. '   ' → logprob: -13.07889461517334
    4. ' ' → logprob: -13.95389461517334
    5. '<Edge' → logprob: -14.70389461517334
    6. 'sorted' → logprob: -15.20389461517334
    7. ' sorted' → logprob: -15.20389461517334
    8. '_edge' → logprob: -15.57889461517334
    9. '.Edge' → logprob: -15.95389461517334
    10. '  ' → logprob: -16.203893661499023

Token 307: 'Dif' (ID: 121656)
  Prédit: 'Dif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dif' → logprob: -1.0280383548888494e-06
    2. 'dif' → logprob: -14.000000953674316
    3. 'Difference' → logprob: -15.875000953674316
    4. ' Differences' → logprob: -16.750001907348633
    5. 'Distances' → logprob: -17.125001907348633
    6. 'Differ' → logprob: -17.625001907348633
    7. 'Diff' → logprob: -18.625001907348633
    8. 'if' → logprob: -18.625001907348633
    9. ' differences' → logprob: -19.875001907348633
    10. 'D' → logprob: -20.375001907348633

Token 308: 'ferences' (ID: 10131)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.020722774788737297
    2. 'ferences' → logprob: -3.8957228660583496
    3. 'érences' → logprob: -9.145722389221191
    4. 'eren' → logprob: -9.770722389221191
    5. 'ences' → logprob: -11.520722389221191
    6. 'ere' → logprob: -13.395722389221191
    7. ' er' → logprob: -13.645722389221191
    8. 'e' → logprob: -13.770722389221191
    9. 'Dif' → logprob: -14.520722389221191
    10. 'erer' → logprob: -14.520722389221191

Token 309: '(dataset' (ID: 67333)
  Prédit: '(dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dataset' → logprob: -0.5821804404258728
    2. '(self' → logprob: -0.8321804404258728
    3. '(' → logprob: -5.082180500030518
    4. ' (' → logprob: -11.83218002319336
    5. '(data' → logprob: -13.33218002319336
    6. '(dat' → logprob: -13.58218002319336
    7. '(d' → logprob: -13.70718002319336
    8. '(
' → logprob: -14.08218002319336
    9. 'self' → logprob: -14.33218002319336
    10. '(this' → logprob: -14.33218002319336

Token 310: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.00018685187387745827
    2. '.' → logprob: -8.750186920166016
    3. ').' → logprob: -10.625186920166016
    4. '.house' → logprob: -13.000186920166016
    5. ' .' → logprob: -13.875186920166016
    6. '.s' → logprob: -15.000186920166016
    7. 'houses' → logprob: -15.125186920166016
    8. ')' → logprob: -17.375186920166016
    9. '].' → logprob: -17.375186920166016
    10. '.H' → logprob: -17.625186920166016

Token 311: 'ouses' (ID: 26940)
  Prédit: 'ouses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouses' → logprob: -7.541112427134067e-05
    2. 'houses' → logprob: -9.500075340270996
    3. 'ouse' → logprob: -15.500075340270996
    4. 'ous' → logprob: -16.125076293945312
    5. 'ou' → logprob: -16.875076293945312
    6. '   ' → logprob: -17.375076293945312
    7. 'uses' → logprob: -17.875076293945312
    8. ' houses' → logprob: -17.875076293945312
    9. '```' → logprob: -18.250076293945312
    10. '#' → logprob: -18.500076293945312

Token 312: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08917566388845444
    2. ').' → logprob: -2.4641757011413574
    3. ' )' → logprob: -8.4641752243042
    4. ' ).' → logprob: -11.3391752243042
    5. ')
' → logprob: -11.9641752243042
    6. ' ' → logprob: -12.8391752243042
    7. '   ' → logprob: -13.9641752243042
    8. ')

' → logprob: -14.7141752243042
    9. ').__' → logprob: -14.7141752243042
    10. '.' → logprob: -15.0891752243042

Token 313: 'dif' (ID: 92027)
  Prédit: 'dif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -6.511406809295295e-06
    2. ' differences' → logprob: -12.000006675720215
    3. 'difference' → logprob: -15.250006675720215
    4. 'diff' → logprob: -16.8750057220459
    5. 'd' → logprob: -17.8750057220459
    6. ' ' → logprob: -17.8750057220459
    7. '   ' → logprob: -19.0000057220459
    8. '```' → logprob: -19.8750057220459
    9. '  ' → logprob: -20.7500057220459
    10. 'Dif' → logprob: -21.0000057220459

Token 314: 'ferences' (ID: 10131)
  Prédit: 'ferences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -2.069664333248511e-05
    2. 'er' → logprob: -11.250020980834961
    3. 'fer' → logprob: -11.875020980834961
    4. 'érences' → logprob: -15.125020980834961
    5. 'ference' → logprob: -15.750020980834961
    6. 'feren' → logprob: -16.62502098083496
    7. ' fer' → logprob: -16.87502098083496
    8. '```' → logprob: -17.00002098083496
    9. 'f' → logprob: -17.37502098083496
    10. 'fér' → logprob: -17.62502098083496

Token 315: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.032887667417526245
    2. '   ' → logprob: -3.5328876972198486
    3. '    
' → logprob: -6.6578874588012695
    4. '

' → logprob: -7.0328874588012695
    5. 'def' → logprob: -7.1578874588012695
    6. '<|end|>' → logprob: -9.28288745880127
    7. '
' → logprob: -10.90788745880127
    8. ' def' → logprob: -11.28288745880127
    9. '        
' → logprob: -11.28288745880127
    10. '  
' → logprob: -11.40788745880127

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25723209977149963
    2. '
' → logprob: -1.6322320699691772
    3. 'def' → logprob: -3.757232189178467
    4. ' def' → logprob: -5.382232189178467
    5. '    
' → logprob: -5.882232189178467
    6. '<|end|>' → logprob: -8.882231712341309
    7. '

' → logprob: -9.007231712341309
    8. '        
' → logprob: -9.257231712341309
    9. '	def' → logprob: -9.507231712341309
    10. '       ' → logprob: -10.007231712341309

Token 317: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.97155623533763e-05
    2. ' def' → logprob: -9.750089645385742
    3. '   ' → logprob: -10.375089645385742
    4. 'de' → logprob: -16.750089645385742
    5. '	def' → logprob: -16.875089645385742
    6. '
' → logprob: -17.375089645385742
    7. ')' → logprob: -18.000089645385742
    8. ' ' → logprob: -18.125089645385742
    9. '    
' → logprob: -18.375089645385742
    10. 'd' → logprob: -19.000089645385742

Token 318: ' minimal' (ID: 19957)
  Prédit: ' minimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimize' → logprob: -0.9297948479652405
    2. ' optimize' → logprob: -1.4297947883605957
    3. ' def' → logprob: -1.5547947883605957
    4. 'opt' → logprob: -2.8047947883605957
    5. ' min' → logprob: -3.1797947883605957
    6. 'min' → logprob: -4.429794788360596
    7. ' compute' → logprob: -4.804794788360596
    8. 'def' → logprob: -5.054794788360596
    9. ' minimal' → logprob: -5.054794788360596
    10. ' minimum' → logprob: -5.804794788360596

Token 319: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.5844391584396362
    2. '_wire' → logprob: -0.8344391584396362
    3. '_length' → logprob: -5.959439277648926
    4. '_sum' → logprob: -6.834439277648926
    5. '_max' → logprob: -6.834439277648926
    6. '_w' → logprob: -7.084439277648926
    7. 'total' → logprob: -7.209439277648926
    8. '_cost' → logprob: -7.209439277648926
    9. 'wire' → logprob: -7.584439277648926
    10. '_distance' → logprob: -7.834439277648926

Token 320: '_wire' (ID: 163785)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.26002660393714905
    2. '_wire' → logprob: -1.6350265741348267
    3. '_distance' → logprob: -3.510026693344116
    4. 'length' → logprob: -6.885026454925537
    5. '_cost' → logprob: -7.135026454925537
    6. 'wire' → logprob: -7.260026454925537
    7. '_gap' → logprob: -7.385026454925537
    8. '_' → logprob: -7.635026454925537
    9. '_w' → logprob: -8.760026931762695
    10. 'distance' → logprob: -8.885026931762695

Token 321: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.07943551242351532
    2. 'length' → logprob: -2.5794355869293213
    3. '(self' → logprob: -7.579435348510742
    4. 'Length' → logprob: -11.704435348510742
    5. '   ' → logprob: -12.079435348510742
    6. '(length' → logprob: -12.329435348510742
    7. '_' → logprob: -12.329435348510742
    8. ' length' → logprob: -12.454435348510742
    9. 'len' → logprob: -12.704435348510742
    10. '_len' → logprob: -13.829435348510742

Token 322: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023596010578330606
    2. '(' → logprob: -8.375235557556152
    3. ' (' → logprob: -12.375235557556152
    4. '   ' → logprob: -14.750235557556152
    5. 'self' → logprob: -15.125235557556152
    6. '(
' → logprob: -15.250235557556152
    7. '(s' → logprob: -16.37523651123047
    8. '       ' → logprob: -16.75023651123047
    9. ' self' → logprob: -17.50023651123047
    10. '(sel' → logprob: -18.00023651123047

Token 323: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011746368370950222
    2. '):' → logprob: -4.511746406555176
    3. ' )' → logprob: -7.761746406555176
    4. '):
' → logprob: -8.761746406555176
    5. 'self' → logprob: -9.761746406555176
    6. ')->' → logprob: -10.636746406555176
    7. ',' → logprob: -11.261746406555176
    8. ' ):' → logprob: -11.261746406555176
    9. '):
' → logprob: -12.636746406555176
    10. ':' → logprob: -13.386746406555176

Token 324: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01632537506520748
    2. ' ->' → logprob: -4.6413254737854
    3. '(' → logprob: -5.3913254737854
    4. '->' → logprob: -6.8913254737854
    5. ':' → logprob: -7.0163254737854
    6. 'self' → logprob: -10.641324996948242
    7. ' (' → logprob: -11.391324996948242
    8. '   ' → logprob: -11.391324996948242
    9. '       ' → logprob: -11.516324996948242
    10. ')' → logprob: -12.641324996948242

Token 325: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038044363260269165
    2. ' int' → logprob: -3.2880444526672363
    3. '(int' → logprob: -12.913043975830078
    4. '   ' → logprob: -15.913043975830078
    5. 'None' → logprob: -16.038043975830078
    6. '[int' → logprob: -16.038043975830078
    7. ' None' → logprob: -16.913043975830078
    8. ':int' → logprob: -17.663043975830078
    9. '	int' → logprob: -18.163043975830078
    10. '<int' → logprob: -19.163043975830078

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007468193303793669
    2. ':
' → logprob: -5.007468223571777
    3. '       ' → logprob: -7.382468223571777
    4. '(self' → logprob: -10.132468223571777
    5. '():' → logprob: -10.257468223571777
    6. '):' → logprob: -10.882468223571777
    7. '():
' → logprob: -11.757468223571777
    8. '   ' → logprob: -12.007468223571777
    9. ':self' → logprob: -12.257468223571777
    10. '):
' → logprob: -12.507468223571777

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011108051985502243
    2. 'n' → logprob: -7.001111030578613
    3. '        
' → logprob: -9.501111030578613
    4. '
' → logprob: -10.001111030578613
    5. ' n' → logprob: -10.626111030578613
    6. '```' → logprob: -11.376111030578613
    7. ' if' → logprob: -12.001111030578613
    8. '    ' → logprob: -12.126111030578613
    9. '      ' → logprob: -12.126111030578613
    10. '        ' → logprob: -12.376111030578613

Token 328: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7484264373779297
    2. '       ' → logprob: -1.3734264373779297
    3. 'if' (adapté à ' if') → logprob: -2.1234264373779297
    4. 'n' → logprob: -2.9984264373779297
    5. ' n' → logprob: -3.6234264373779297
    6. 'total' → logprob: -3.6234264373779297
    7. ' total' → logprob: -3.8734264373779297
    8. 'sorted' → logprob: -4.87342643737793
    9. ' sorted' → logprob: -5.49842643737793
    10. 'h' → logprob: -6.12342643737793

Token 329: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07899146527051926
    2. 'self' → logprob: -2.578991413116455
    3. ' len' → logprob: -9.328991889953613
    4. 'len' → logprob: -11.453991889953613
    5. '       ' → logprob: -13.953991889953613
    6. ' not' → logprob: -14.453991889953613
    7. '(self' → logprob: -14.828991889953613
    8. '	self' → logprob: -15.328991889953613
    9. ' ' → logprob: -16.703990936279297
    10. '   ' → logprob: -16.828990936279297

Token 330: '.dataset' (ID: 48314)
  Prédit: '.dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dataset' → logprob: -0.0011587966000661254
    2. '.k' → logprob: -7.501158714294434
    3. ' .' → logprob: -7.876158714294434
    4. '.' → logprob: -8.876158714294434
    5. 'dataset' → logprob: -10.126158714294434
    6. '.datasets' → logprob: -11.126158714294434
    7. '.n' → logprob: -11.251158714294434
    8. '.data' → logprob: -12.251158714294434
    9. '.dat' → logprob: -13.251158714294434
    10. ').' → logprob: -13.501158714294434

Token 331: '.k' (ID: 9040)
  Prédit: '.k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.k' → logprob: -0.00016992862219922245
    2. '.n' → logprob: -8.75016975402832
    3. '.' → logprob: -11.87516975402832
    4. ' .' → logprob: -12.87516975402832
    5. 'k' → logprob: -14.87516975402832
    6. '`.' → logprob: -14.87516975402832
    7. '   ' → logprob: -15.12516975402832
    8. '.h' → logprob: -16.00016975402832
    9. '```' → logprob: -16.12516975402832
    10. ').' → logprob: -16.50016975402832

Token 332: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.0514675378799438
    2. ' ==' → logprob: -1.1764675378799438
    3. '==' → logprob: -1.4264675378799438
    4. '>=' → logprob: -2.3014674186706543
    5. ' <=' → logprob: -7.176467418670654
    6. '<=' → logprob: -7.801467418670654
    7. '=' → logprob: -8.051467895507812
    8. '1' → logprob: -8.551467895507812
    9. '       ' → logprob: -9.176467895507812
    10. ' ' → logprob: -9.801467895507812

Token 333: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.015132773667573929
    2. ' self' → logprob: -4.265132904052734
    3. 'len' → logprob: -7.015132904052734
    4. ' len' → logprob: -10.140132904052734
    5. '       ' → logprob: -11.140132904052734
    6. '=self' → logprob: -11.890132904052734
    7. '=' → logprob: -12.390132904052734
    8. '   ' → logprob: -12.890132904052734
    9. '1' → logprob: -14.140132904052734
    10. '           ' → logprob: -14.390132904052734

Token 334: '.dataset' (ID: 48314)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.4750736355781555
    2. '.dataset' → logprob: -0.9750736355781555
    3. 'dataset' → logprob: -7.22507381439209
    4. 'ataset' → logprob: -8.85007381439209
    5. 'n' → logprob: -9.85007381439209
    6. '.' → logprob: -11.47507381439209
    7. '.datasets' → logprob: -11.47507381439209
    8. 'self' → logprob: -11.60007381439209
    9. '_dataset' → logprob: -11.85007381439209
    10. '.k' → logprob: -11.85007381439209

Token 335: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0011984437005594373
    2. 'n' → logprob: -6.7511982917785645
    3. '.' → logprob: -10.751198768615723
    4. '.k' → logprob: -12.251198768615723
    5. '	n' → logprob: -14.251198768615723
    6. '   ' → logprob: -14.501198768615723
    7. ' .' → logprob: -14.876198768615723
    8. '_n' → logprob: -15.876198768615723
    9. 'N' → logprob: -16.001197814941406
    10. 'k' → logprob: -16.251197814941406

Token 336: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14610590040683746
    2. ':' → logprob: -2.021106004714966
    3. ':return' → logprob: -5.896105766296387
    4. '       ' → logprob: -7.521105766296387
    5. '           ' → logprob: -9.396105766296387
    6. ' :
' → logprob: -11.021105766296387
    7. ' or' → logprob: -11.271105766296387
    8. ':
' → logprob: -12.021105766296387
    9. 'return' → logprob: -12.271105766296387
    10. ' :' → logprob: -12.521105766296387

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033832306507974863
    2. 'return' → logprob: -8.375338554382324
    3. ':
' → logprob: -10.000338554382324
    4. ' return' → logprob: -10.750338554382324
    5. ':' → logprob: -11.250338554382324
    6. '       ' → logprob: -11.500338554382324
    7. '0' → logprob: -11.875338554382324
    8. '
' → logprob: -12.750338554382324
    9. ':return' → logprob: -12.750338554382324
    10. '   ' → logprob: -13.125338554382324

Token 338: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02918298915028572
    2. '           ' → logprob: -3.7791829109191895
    3. ' return' → logprob: -5.2791829109191895
    4. '0' → logprob: -7.2791829109191895
    5. '       ' → logprob: -9.529183387756348
    6. '
' → logprob: -10.654183387756348
    7. ':return' → logprob: -11.029183387756348
    8. '   ' → logprob: -12.404183387756348
    9. '	return' → logprob: -12.654183387756348
    10. '               ' → logprob: -12.779183387756348

Token 339: ' Each' (ID: 11555)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007821110193617642
    2. '       ' → logprob: -7.875782012939453
    3. '#' → logprob: -8.625782012939453
    4. '           ' → logprob: -9.250782012939453
    5. ' return' → logprob: -9.625782012939453
    6. '0' → logprob: -9.750782012939453
    7. '   ' → logprob: -13.375782012939453
    8. '         ' → logprob: -16.250782012939453
    9. '
' → logprob: -16.375782012939453
    10. ' ' → logprob: -16.375782012939453

Token 340: ' house' (ID: 4276)
  Prédit: 'house'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'house' → logprob: -0.004618695471435785
    2. ' house' → logprob: -5.8796186447143555
    3. 'wire' → logprob: -6.5046186447143555
    4. 'point' → logprob: -10.254618644714355
    5. 'device' → logprob: -10.254618644714355
    6. '```' → logprob: -10.879618644714355
    7. 'node' → logprob: -11.254618644714355
    8. 'sensor' → logprob: -11.254618644714355
    9. '   ' → logprob: -11.379618644714355
    10. 'router' → logprob: -11.379618644714355

Token 341: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.1248859167099
    2. ' can' → logprob: -1.3748859167099
    3. 'gets' → logprob: -1.7498859167099
    4. ' gets' → logprob: -1.8748859167099
    5. 'has' → logprob: -2.7498860359191895
    6. ' has' → logprob: -4.3748860359191895
    7. 'will' → logprob: -5.6248860359191895
    8. 'could' → logprob: -5.6248860359191895
    9. 'would' → logprob: -5.9998860359191895
    10. ' could' → logprob: -6.3748860359191895

Token 342: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.05727361515164375
    2. 'be' → logprob: -3.5572736263275146
    3. ' have' → logprob: -4.0572733879089355
    4. 'get' → logprob: -5.3072733879089355
    5. ' be' → logprob: -5.8072733879089355
    6. 'connect' → logprob: -7.4322733879089355
    7. ' get' → logprob: -7.5572733879089355
    8. 'use' → logprob: -7.9322733879089355
    9. 'stand' → logprob: -9.432273864746094
    10. 'potential' → logprob: -9.932273864746094

Token 343: ' its' (ID: 1617)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07905062288045883
    2. 'a' → logprob: -3.5790505409240723
    3. 'its' → logprob: -3.7040505409240723
    4. ' its' → logprob: -4.579050540924072
    5. 'zero' → logprob: -4.829050540924072
    6. 'wire' → logprob: -5.454050540924072
    7. ' zero' → logprob: -7.704050540924072
    8. ' a' → logprob: -8.70405101776123
    9. ' ' → logprob: -8.95405101776123
    10. ' wire' → logprob: -10.07905101776123

Token 344: ' own' (ID: 2316)
  Prédit: 'own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.012535549700260162
    2. ' own' → logprob: -4.512535572052002
    3. 'wire' → logprob: -6.637535572052002
    4. '0' → logprob: -9.512535095214844
    5. '```' → logprob: -10.637535095214844
    6. '
' → logprob: -11.262535095214844
    7. 'connection' → logprob: -12.137535095214844
    8. 'c' → logprob: -12.450035095214844
    9. 'ow' → logprob: -12.450035095214844
    10. ' wire' → logprob: -12.512535095214844

Token 345: ' generator' (ID: 23989)
  Prédit: 'wire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wire' → logprob: -0.04941926524043083
    2. 'power' → logprob: -4.049419403076172
    3. 'line' → logprob: -5.049419403076172
    4. 'connection' → logprob: -5.299419403076172
    5. 'router' → logprob: -5.424419403076172
    6. 'anten' → logprob: -5.924419403076172
    7. ' wire' → logprob: -5.924419403076172
    8. 'station' → logprob: -6.299419403076172
    9. 'segment' → logprob: -6.549419403076172
    10. '0' → logprob: -6.674419403076172

Token 346: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20976021885871887
    2. '       ' → logprob: -2.0847601890563965
    3. 'return' → logprob: -3.4597601890563965
    4. '           ' → logprob: -4.2097601890563965
    5. ',' → logprob: -4.4597601890563965
    6. ' return' → logprob: -5.9597601890563965
    7. '0' → logprob: -6.8347601890563965
    8. ',
' → logprob: -7.4597601890563965
    9. '
' → logprob: -7.4597601890563965
    10. ':
' → logprob: -7.7097601890563965

Token 347: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008221990428864956
    2. ' return' → logprob: -5.2582221031188965
    3. '       ' → logprob: -6.1332221031188965
    4. '           ' → logprob: -7.1332221031188965
    5. '	return' → logprob: -12.008221626281738
    6. '
' → logprob: -12.133221626281738
    7. '               ' → logprob: -13.258221626281738
    8. '   ' → logprob: -13.883221626281738
    9. '0' → logprob: -14.258221626281738
    10. '{return' → logprob: -15.258221626281738

Token 348: ' wire' (ID: 11394)
  Prédit: 'wire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wire' → logprob: -0.17219047248363495
    2. 'w' → logprob: -1.9221904277801514
    3. 'need' → logprob: -4.9221906661987305
    4. ' wire' → logprob: -5.5471906661987305
    5. ' wiring' → logprob: -8.17219066619873
    6. ' need' → logprob: -8.42219066619873
    7. 'connection' → logprob: -10.17219066619873
    8. 'wired' → logprob: -10.29719066619873
    9. ' wires' → logprob: -10.54719066619873
    10. '
' → logprob: -10.92219066619873

Token 349: ' needed' (ID: 6118)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5584095120429993
    2. 'needed' → logprob: -0.9334095120429993
    3. ' needed' → logprob: -3.5584094524383545
    4. ' length' → logprob: -6.058409690856934
    5. 'required' → logprob: -6.808409690856934
    6. '       ' → logprob: -7.433409690856934
    7. '_length' → logprob: -7.683409690856934
    8. '           ' → logprob: -7.683409690856934
    9. '_needed' → logprob: -7.808409690856934
    10. '
' → logprob: -8.808409690856934

Token 350: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8647456169128418
    2. '
' → logprob: -0.9897456169128418
    3. '0' → logprob: -1.7397456169128418
    4. 'return' → logprob: -3.614745616912842
    5. ' return' → logprob: -6.114745616912842
    6. '           ' → logprob: -6.864745616912842
    7. '
' → logprob: -7.864745616912842
    8. ',' → logprob: -7.989745616912842
    9. '        
' → logprob: -8.23974609375
    10. ' ' → logprob: -9.48974609375

Token 351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05392095819115639
    2. '       ' → logprob: -3.0539209842681885
    3. '
' → logprob: -5.553920745849609
    4. 'return' → logprob: -6.678920745849609
    5. ' return' → logprob: -9.67892074584961
    6. '               ' → logprob: -10.42892074584961
    7. '   ' → logprob: -10.67892074584961
    8. '        
' → logprob: -10.92892074584961
    9. '            
' → logprob: -11.42892074584961
    10. ',' → logprob: -11.67892074584961

Token 352: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00021772195759695023
    2. '           ' → logprob: -9.00021743774414
    3. ' return' → logprob: -9.75021743774414
    4. '0' → logprob: -10.75021743774414
    5. '       ' → logprob: -11.25021743774414
    6. '
' → logprob: -14.25021743774414
    7. '	return' → logprob: -14.37521743774414
    8. '   ' → logprob: -15.62521743774414
    9. '               ' → logprob: -16.12521743774414
    10. '
' → logprob: -17.37521743774414

Token 353: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -22.125
    4. '       ' → logprob: -22.125
    5. '           ' → logprob: -22.25
    6. '
' → logprob: -23.25
    7. '۰' → logprob: -23.75
    8. '00' → logprob: -24.625
    9. '```' → logprob: -24.625
    10. '000' → logprob: -24.875

Token 354: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -18.875
    4. '00' → logprob: -21.625
    5. '۰' → logprob: -21.875
    6. 'self' → logprob: -22.125
    7. '000' → logprob: -22.25
    8. '```' → logprob: -22.375
    9. '       ' → logprob: -22.5
    10. '
' → logprob: -22.625

Token 355: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.557125985622406
    2. '
' → logprob: -0.932125985622406
    3. '        
' → logprob: -3.432126045227051
    4. '<|end|>' → logprob: -8.18212604522705
    5. '\n' → logprob: -8.68212604522705
    6. '        ' → logprob: -8.93212604522705
    7. '    
' → logprob: -8.93212604522705
    8. '		
' → logprob: -9.93212604522705
    9. '
        
' → logprob: -10.43212604522705
    10. '      ' → logprob: -10.43212604522705

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03192898631095886
    2. '
' → logprob: -4.156929016113281
    3. '        
' → logprob: -4.156929016113281
    4. '    
' → logprob: -10.781929016113281
    5. '  
' → logprob: -11.281929016113281
    6. '       
' → logprob: -11.281929016113281
    7. '        ' → logprob: -11.406929016113281
    8. '```' → logprob: -11.781929016113281
    9. '      ' → logprob: -11.906929016113281
    10. '        
        
' → logprob: -12.156929016113281

Token 357: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8122033476829529
    2. 'sorted' → logprob: -1.0622034072875977
    3. 'diff' → logprob: -2.3122034072875977
    4. 'length' → logprob: -2.6872034072875977
    5. 'dif' → logprob: -4.062203407287598
    6. 'g' → logprob: -4.937203407287598
    7. ' sorted' → logprob: -4.937203407287598
    8. '        
' → logprob: -5.937203407287598
    9. 'd' → logprob: -6.062203407287598
    10. 'segments' → logprob: -6.812203407287598

Token 358: ' Sort' (ID: 25945)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.754158616065979
    2. 'dif' → logprob: -1.629158616065979
    3. 'total' → logprob: -1.879158616065979
    4. 'diff' → logprob: -2.2541584968566895
    5. '#' → logprob: -3.2541584968566895
    6. 'length' → logprob: -4.2541584968566895
    7. 'segments' → logprob: -5.3791584968566895
    8. 'base' → logprob: -5.7541584968566895
    9. 'edges' → logprob: -6.2541584968566895
    10. 'self' → logprob: -6.2541584968566895

Token 359: ' differences' (ID: 19504)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.501138687133789
    2. 'self' → logprob: -1.501138687133789
    3. ' self' → logprob: -2.251138687133789
    4. 'd' → logprob: -2.251138687133789
    5. '_diff' → logprob: -2.376138687133789
    6. 'diff' → logprob: -2.501138687133789
    7. '       ' → logprob: -3.001138687133789
    8. '_d' → logprob: -3.001138687133789
    9. '_lengths' → logprob: -4.251138687133789
    10. '(self' → logprob: -4.376138687133789

Token 360: ' descending' (ID: 89489)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6438429355621338
    2. '       ' → logprob: -0.7688429355621338
    3. '=' → logprob: -4.768842697143555
    4. 'sorted' → logprob: -6.518842697143555
    5. '_sorted' → logprob: -7.268842697143555
    6. 's' → logprob: -8.768842697143555
    7. '.sort' → logprob: -8.768842697143555
    8. ' sorted' → logprob: -9.018842697143555
    9. 'sort' → logprob: -11.018842697143555
    10. '.sorted' → logprob: -11.518842697143555

Token 361: 'ly' (ID: 423)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003404428483918309
    2. '
' → logprob: -6.62840461730957
    3. ',' → logprob: -7.12840461730957
    4. '        
' → logprob: -7.87840461730957
    5. 's' → logprob: -8.75340461730957
    6. 'sorted' → logprob: -8.75340461730957
    7. ' sorted' → logprob: -9.12840461730957
    8. ':' → logprob: -9.12840461730957
    9. ':
' → logprob: -9.62840461730957
    10. '_sorted' → logprob: -10.00340461730957

Token 362: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021521867893170565
    2. ',' → logprob: -9.250215530395508
    3. ' sorted' → logprob: -10.375215530395508
    4. 'sorted' → logprob: -10.500215530395508
    5. '
' → logprob: -10.625215530395508
    6. '        
' → logprob: -11.500215530395508
    7. ':' → logprob: -12.375215530395508
    8. '_sorted' → logprob: -12.500215530395508
    9. 's' → logprob: -12.625215530395508
    10. '.sort' → logprob: -13.250215530395508

Token 363: ' find' (ID: 1646)
  Prédit: ' remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remove' → logprob: -1.6396656036376953
    2. ' find' → logprob: -2.0146656036376953
    3. ' select' → logprob: -2.1396656036376953
    4. ' pick' → logprob: -2.6396656036376953
    5. ' get' → logprob: -2.7646656036376953
    6. ' split' → logprob: -2.7646656036376953
    7. ' consider' → logprob: -2.8896656036376953
    8. 'split' → logprob: -3.2646656036376953
    9. 'max' → logprob: -3.3896656036376953
    10. ' identify' → logprob: -3.8896656036376953

Token 364: ' biggest' (ID: 13385)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.046681929379701614
    2. 'the' → logprob: -3.5466818809509277
    3. ' which' → logprob: -4.421681880950928
    4. 'largest' → logprob: -6.171681880950928
    5. ' largest' → logprob: -6.296681880950928
    6. 'which' → logprob: -7.546681880950928
    7. ' k' → logprob: -9.421682357788086
    8. 'cuts' → logprob: -10.171682357788086
    9. ' gaps' → logprob: -10.421682357788086
    10. 'self' → logprob: -10.921682357788086

Token 365: ' gaps' (ID: 52008)
  Prédit: ' gaps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gaps' → logprob: -0.06399992108345032
    2. 'g' → logprob: -3.438999891281128
    3. 'dif' → logprob: -4.314000129699707
    4. ' edges' → logprob: -4.814000129699707
    5. 'diff' → logprob: -6.064000129699707
    6. ' differences' → logprob: -6.439000129699707
    7. 'edges' → logprob: -6.814000129699707
    8. ' cuts' → logprob: -7.189000129699707
    9. 'cuts' → logprob: -7.564000129699707
    10. 'd' → logprob: -7.689000129699707

Token 366: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042209390085190535
    2. '
' → logprob: -9.000422477722168
    3. 'sorted' → logprob: -9.250422477722168
    4. ',' → logprob: -9.625422477722168
    5. '        
' → logprob: -10.000422477722168
    6. ' sorted' → logprob: -10.250422477722168
    7. 'diff' → logprob: -11.250422477722168
    8. 'd' → logprob: -11.375422477722168
    9. 's' → logprob: -11.875422477722168
    10. ' and' → logprob: -12.500422477722168

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029387109680101275
    2. '
' → logprob: -9.125293731689453
    3. ',' → logprob: -9.250293731689453
    4. '        
' → logprob: -10.625293731689453
    5. 'sorted' → logprob: -11.000293731689453
    6. ' sorted' → logprob: -11.000293731689453
    7. '```' → logprob: -12.250293731689453
    8. 's' → logprob: -12.375293731689453
    9. '   ' → logprob: -12.875293731689453
    10. ':' → logprob: -12.875293731689453

Token 368: ' sorted' (ID: 20099)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2839083969593048
    2. 'sorted' (adapté à ' sorted') → logprob: -2.0339083671569824
    3. ' sorted' → logprob: -2.7839083671569824
    4. 'diff' → logprob: -3.1589083671569824
    5. 'd' → logprob: -5.783908367156982
    6. ' dif' → logprob: -6.033908367156982
    7. 'dif' → logprob: -6.033908367156982
    8. ' gaps' → logprob: -6.158908367156982
    9. ' diff' → logprob: -6.533908367156982
    10. ' d' → logprob: -9.28390884399414

Token 369: '_g' (ID: 5439)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.1609783172607422
    2. '_diff' → logprob: -1.9109783172607422
    3. 'diff' → logprob: -8.160978317260742
    4. ' =' → logprob: -8.285978317260742
    5. '_g' → logprob: -9.910978317260742
    6. '_desc' → logprob: -10.035978317260742
    7. '_' → logprob: -10.160978317260742
    8. '_dist' → logprob: -11.035978317260742
    9. 'Diff' → logprob: -11.160978317260742
    10. '=' → logprob: -11.285978317260742

Token 370: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.11317270994186401
    2. 'ap' → logprob: -2.238172769546509
    3. ' =' → logprob: -8.98817253112793
    4. 'dif' → logprob: -9.11317253112793
    5. 'apped' → logprob: -10.61317253112793
    6. '=' → logprob: -10.61317253112793
    7. 'diff' → logprob: -11.23817253112793
    8. 'roups' → logprob: -12.23817253112793
    9. 'd' → logprob: -12.23817253112793
    10. 'roup' → logprob: -12.36317253112793

Token 371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693031132221222
    2. '=' → logprob: -2.1269302368164062
    3. '       ' → logprob: -14.251930236816406
    4. '   ' → logprob: -14.876930236816406
    5. '        ' → logprob: -15.001930236816406
    6. ' ' → logprob: -15.376930236816406
    7. '    ' → logprob: -15.376930236816406
    8. 's' → logprob: -15.501930236816406
    9. '＝' → logprob: -16.001930236816406
    10. '=self' → logprob: -16.126930236816406

Token 372: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.011058545671403408
    2. ' sorted' → logprob: -4.511058330535889
    3. '   ' → logprob: -11.511058807373047
    4. '       ' → logprob: -14.761058807373047
    5. '(sorted' → logprob: -15.511058807373047
    6. '.sorted' → logprob: -16.761058807373047
    7. '    ' → logprob: -17.511058807373047
    8. ' ' → logprob: -17.886058807373047
    9. 'sort' → logprob: -18.261058807373047
    10. '  ' → logprob: -18.386058807373047

Token 373: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.750001907348633
    3. 'self' → logprob: -15.000001907348633
    4. '(
' → logprob: -17.750001907348633
    5. '((' → logprob: -20.125001907348633
    6. '(set' → logprob: -20.750001907348633
    7. '(this' → logprob: -21.625001907348633
    8. ' (' → logprob: -21.750001907348633
    9. '[self' → logprob: -22.000001907348633
    10. '([' → logprob: -22.125001907348633

Token 374: '.diff' (ID: 97998)
  Prédit: '.diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.diff' → logprob: -6.76628842484206e-05
    2. '.dataset' → logprob: -10.875067710876465
    3. ' .' → logprob: -11.125067710876465
    4. '.' → logprob: -11.750067710876465
    5. 'diff' → logprob: -11.875067710876465
    6. '.self' → logprob: -12.000067710876465
    7. '.d' → logprob: -12.125067710876465
    8. '	diff' → logprob: -13.125067710876465
    9. '(diff' → logprob: -13.500067710876465
    10. 'self' → logprob: -13.750067710876465

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.550411151489243e-05
    2. ' ,' → logprob: -9.875055313110352
    3. 'reverse' → logprob: -12.875055313110352
    4. '(),' → logprob: -13.750055313110352
    5. '(reverse' → logprob: -16.50005531311035
    6. '[],' → logprob: -16.87505531311035
    7. '),' → logprob: -17.25005531311035
    8. ')' → logprob: -17.62505531311035
    9. '[::-' → logprob: -18.00005531311035
    10. ',
' → logprob: -18.25005531311035

Token 376: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.0015024791937321424
    2. ' reverse' → logprob: -6.501502513885498
    3. '(reverse' → logprob: -15.75150203704834
    4. '.reverse' → logprob: -19.751502990722656
    5. '_reverse' → logprob: -20.501502990722656
    6. 'Reverse' → logprob: -21.001502990722656
    7. '   ' → logprob: -21.376502990722656
    8. ' ' → logprob: -23.876502990722656
    9. '    ' → logprob: -23.876502990722656
    10. '  ' → logprob: -24.251502990722656

Token 377: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0008061755215749145
    2. '=' → logprob: -7.1258063316345215
    3. ')=' → logprob: -14.250805854797363
    4. '=
' → logprob: -14.375805854797363
    5. ')' → logprob: -15.500805854797363
    6. 'True' → logprob: -15.875805854797363
    7. '(True' → logprob: -16.00080680847168
    8. ' =' → logprob: -17.87580680847168
    9. '=False' → logprob: -18.25080680847168
    10. '=T' → logprob: -18.25080680847168

Token 378: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01259594690054655
    2. ')
' → logprob: -4.387596130371094
    3. '       ' → logprob: -9.637596130371094
    4. ')
' → logprob: -11.137596130371094
    5. ')

' → logprob: -12.387596130371094
    6. ')#' → logprob: -14.262596130371094
    7. ' )' → logprob: -14.387596130371094
    8. ')[' → logprob: -14.637596130371094
    9. '),' → logprob: -16.137596130371094
    10. ')return' → logprob: -16.262596130371094

Token 379: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02533048391342163
    2. '
' → logprob: -4.400330543518066
    3. '        
' → logprob: -5.525330543518066
    4. 'total' → logprob: -5.525330543518066
    5. ' total' → logprob: -5.775330543518066
    6. 'length' → logprob: -8.400330543518066
    7. ',' → logprob: -8.525330543518066
    8. 'result' → logprob: -8.775330543518066
    9. ' length' → logprob: -9.025330543518066
    10. ' wire' → logprob: -9.275330543518066

Token 380: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9599339962005615
    2. '       ' → logprob: -1.2099339962005615
    3. ' total' → logprob: -1.2099339962005615
    4. 'sum' → logprob: -5.084934234619141
    5. 'cut' → logprob: -5.709934234619141
    6. ' sum' → logprob: -6.834934234619141
    7. 'result' → logprob: -6.834934234619141
    8. 'cuts' → logprob: -6.834934234619141
    9. ' gaps' → logprob: -6.959934234619141
    10. ' cut' → logprob: -7.084934234619141

Token 381: ' Sum' (ID: 34138)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5488089323043823
    2. ' total' → logprob: -1.7988089323043823
    3. '       ' → logprob: -2.798809051513672
    4. 'g' → logprob: -3.173809051513672
    5. 'sum' → logprob: -3.298809051513672
    6. ' gaps' → logprob: -3.673809051513672
    7. 'base' → logprob: -3.798809051513672
    8. ' base' → logprob: -4.548809051513672
    9. ' sum' → logprob: -4.798809051513672
    10. 'wire' → logprob: -5.423809051513672

Token 382: ' of' (ID: 328)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.5214958190917969
    2. '_of' → logprob: -2.396495819091797
    3. '_diff' → logprob: -2.521495819091797
    4. 'total' → logprob: -3.146495819091797
    5. '(self' → logprob: -3.271495819091797
    6. '_length' → logprob: -3.521495819091797
    7. '_all' → logprob: -3.896495819091797
    8. '_lengths' → logprob: -4.396495819091797
    9. 'self' → logprob: -4.521495819091797
    10. 'diff' → logprob: -4.646495819091797

Token 383: ' gaps' (ID: 52008)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0144259138032794
    2. 'sorted' → logprob: -5.389425754547119
    3. ' self' → logprob: -5.639425754547119
    4. '(self' → logprob: -5.639425754547119
    5. 'sum' → logprob: -6.889425754547119
    6. '(sorted' → logprob: -7.014425754547119
    7. 'all' → logprob: -8.514426231384277
    8. 'the' → logprob: -9.264426231384277
    9. ' all' → logprob: -9.264426231384277
    10. '[self' → logprob: -9.639426231384277

Token 384: ' minus' (ID: 40335)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3518258035182953
    2. '=' → logprob: -1.2268258333206177
    3. '       ' → logprob: -6.476825714111328
    4. ' -' → logprob: -7.726825714111328
    5. ' is' → logprob: -7.851825714111328
    6. ')' → logprob: -7.976825714111328
    7. ':' → logprob: -8.226825714111328
    8. ',' → logprob: -9.351825714111328
    9. '        ' → logprob: -9.726825714111328
    10. '-' → logprob: -9.726825714111328

Token 385: ' the' (ID: 290)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6932780146598816
    2. 'sum' → logprob: -0.6932780146598816
    3. '(sum' → logprob: -9.318278312683105
    4. '	sum' → logprob: -11.193278312683105
    5. '   ' → logprob: -12.068278312683105
    6. '=sum' → logprob: -12.693278312683105
    7. '       ' → logprob: -12.818278312683105
    8. 'sorted' → logprob: -13.068278312683105
    9. ' (' → logprob: -13.318278312683105
    10. ' the' → logprob: -13.318278312683105

Token 386: ' largest' (ID: 10574)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.16063231229782104
    2. ' sum' → logprob: -1.9106323719024658
    3. '   ' → logprob: -8.785632133483887
    4. '(sum' → logprob: -9.410632133483887
    5. '       ' → logprob: -10.035632133483887
    6. '	sum' → logprob: -10.410632133483887
    7. '    ' → logprob: -10.535632133483887
    8. ' ' → logprob: -10.910632133483887
    9. '  ' → logprob: -11.285632133483887
    10. '
' → logprob: -11.910632133483887

Token 387: ' k' (ID: 372)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.810761034488678
    2. ' self' → logprob: -1.1857609748840332
    3. '(self' → logprob: -1.4357609748840332
    4. ' (' → logprob: -4.810760974884033
    5. 'sum' → logprob: -6.310760974884033
    6. '[self' → logprob: -7.435760974884033
    7. '(sum' → logprob: -7.810760974884033
    8. ' sum' → logprob: -7.935760974884033
    9. '(s' → logprob: -8.185761451721191
    10. 'k' → logprob: -9.185761451721191

Token 388: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2254810333251953
    2. ' -' → logprob: -1.6004810333251953
    3. ' ' → logprob: -10.600481033325195
    4. '1' → logprob: -11.850481033325195
    5. 'minus' → logprob: -12.100481033325195
    6. 'sorted' → logprob: -12.350481033325195
    7. '```' → logprob: -12.350481033325195
    8. ' sorted' → logprob: -12.850481033325195
    9. '   ' → logprob: -12.850481033325195
    10. ' ' → logprob: -12.975481033325195

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006532243569381535
    2. '-' → logprob: -7.750653266906738
    3. ' ' → logprob: -8.500653266906738
    4. ' -' → logprob: -11.875653266906738
    5. 'sorted' → logprob: -12.625653266906738
    6. ' gaps' → logprob: -13.125653266906738
    7. '```' → logprob: -13.625653266906738
    8. '
' → logprob: -14.125653266906738
    9. 's' → logprob: -14.375653266906738
    10. 'g' → logprob: -14.500653266906738

Token 390: ' gaps' (ID: 52008)
  Prédit: ' gaps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gaps' → logprob: -0.05866684764623642
    2. ' sorted' → logprob: -3.808666944503784
    3. ' ones' → logprob: -4.308666706085205
    4. 'g' → logprob: -4.808666706085205
    5. 'sorted' → logprob: -4.933666706085205
    6. ' differences' → logprob: -6.433666706085205
    7. '(sorted' → logprob: -7.058666706085205
    8. ' of' → logprob: -7.183666706085205
    9. 'dif' → logprob: -7.183666706085205
    10. ' ' → logprob: -7.933666706085205

Token 391: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33031487464904785
    2. 'return' → logprob: -1.5803148746490479
    3. ' return' → logprob: -3.455314874649048
    4. 'sum' → logprob: -4.580314636230469
    5. 'total' → logprob: -4.955314636230469
    6. ' =' → logprob: -4.955314636230469
    7. ')' → logprob: -5.205314636230469
    8. ',' → logprob: -5.205314636230469
    9. '=' → logprob: -5.955314636230469
    10. ' total' → logprob: -6.830314636230469

Token 392: ' generators' (ID: 74652)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.4624978303909302
    2. 'the' → logprob: -1.5874978303909302
    3. ' we' → logprob: -1.8374978303909302
    4. ' the' → logprob: -2.0874977111816406
    5. 'g' → logprob: -2.8374977111816406
    6. ' to' → logprob: -3.4624977111816406
    7. 'they' → logprob: -3.8374977111816406
    8. 'to' → logprob: -3.8374977111816406
    9. '#' → logprob: -4.212497711181641
    10. 'sorted' → logprob: -4.212497711181641

Token 393: ' can' (ID: 665)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6646738052368164
    2. 'are' → logprob: -0.9146738052368164
    3. ' can' → logprob: -3.9146738052368164
    4. ' will' → logprob: -4.289673805236816
    5. 'would' → logprob: -4.414673805236816
    6. ' would' → logprob: -4.539673805236816
    7. 'can' → logprob: -4.664673805236816
    8. 'will' → logprob: -5.414673805236816
    9. 'split' → logprob: -5.914673805236816
    10. ' could' → logprob: -5.914673805236816

Token 394: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.28800269961357117
    2. 'be' → logprob: -1.6630027294158936
    3. 'break' → logprob: -3.6630027294158936
    4. 'cut' → logprob: -4.2880024909973145
    5. 'replace' → logprob: -5.0380024909973145
    6. 'split' → logprob: -5.1630024909973145
    7. ' cut' → logprob: -5.6630024909973145
    8. ' break' → logprob: -5.9130024909973145
    9. 'start' → logprob: -6.9130024909973145
    10. 'stop' → logprob: -7.9130024909973145

Token 395: ' placed' (ID: 12989)
  Prédit: 'placed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placed' → logprob: -0.05895817652344704
    2. 'installed' → logprob: -2.9339582920074463
    3. ' placed' → logprob: -5.683958053588867
    4. 'insert' → logprob: -8.058958053588867
    5. 'located' → logprob: -9.183958053588867
    6. ' installed' → logprob: -9.558958053588867
    7. '```' → logprob: -10.308958053588867
    8. 'put' → logprob: -10.808958053588867
    9. 'connected' → logprob: -10.808958053588867
    10. '<|end|>' → logprob: -10.808958053588867

Token 396: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06870894879102707
    2. 'return' → logprob: -3.193708896636963
    3. ' return' → logprob: -4.193708896636963
    4. '
' → logprob: -5.818708896636963
    5. ',' → logprob: -6.193708896636963
    6. ' =' → logprob: -6.443708896636963
    7. 'total' → logprob: -6.568708896636963
    8. ' total' → logprob: -7.818708896636963
    9. '=' → logprob: -8.068709373474121
    10. ')' → logprob: -8.068709373474121

Token 397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017120659351348877
    2. 'return' → logprob: -4.767120838165283
    3. ' return' → logprob: -5.392120838165283
    4. 'total' → logprob: -6.392120838165283
    5. ' total' → logprob: -6.642120838165283
    6. '
' → logprob: -8.142120361328125
    7. ',' → logprob: -8.767120361328125
    8. '   ' → logprob: -9.142120361328125
    9. ':' → logprob: -9.767120361328125
    10. 'sum' → logprob: -10.017120361328125

Token 398: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.294344425201416
    2. ' return' → logprob: -2.419344425201416
    3. 'total' → logprob: -2.419344425201416
    4. '       ' → logprob: -3.169344425201416
    5. ' total' → logprob: -3.419344425201416
    6. 'result' → logprob: -6.669344425201416
    7. ' result' → logprob: -8.669343948364258
    8. 'base' → logprob: -8.919343948364258
    9. '   ' → logprob: -9.044343948364258
    10. 'sum' → logprob: -9.419343948364258

Token 399: ' sum' (ID: 4215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3007451295852661
    2. 'sum' → logprob: -1.6757451295852661
    3. ' self' → logprob: -3.0507450103759766
    4. ' sum' → logprob: -4.175745010375977
    5. '(self' → logprob: -5.300745010375977
    6. '(sum' → logprob: -5.675745010375977
    7. 'max' → logprob: -7.050745010375977
    8. ' (' → logprob: -7.800745010375977
    9. ' max' → logprob: -9.550745010375977
    10. '(max' → logprob: -9.800745010375977

Token 400: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008213033434003592
    2. '(sorted' → logprob: -7.125821113586426
    3. '(' → logprob: -11.125821113586426
    4. '(s' → logprob: -13.625821113586426
    5. 'self' → logprob: -14.875821113586426
    6. '((' → logprob: -16.375822067260742
    7. ' (' → logprob: -16.500822067260742
    8. '(
' → logprob: -16.500822067260742
    9. '(len' → logprob: -16.625822067260742
    10. '(sort' → logprob: -16.875822067260742

Token 401: '.diff' (ID: 97998)
  Prédit: '.diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.diff' → logprob: -3.650518920039758e-06
    2. 'diff' → logprob: -12.750003814697266
    3. '	diff' → logprob: -15.375003814697266
    4. '.d' → logprob: -15.625003814697266
    5. '.dist' → logprob: -16.250003814697266
    6. '.dataset' → logprob: -17.375003814697266
    7. '.df' → logprob: -17.750003814697266
    8. ').' → logprob: -17.875003814697266
    9. '.' → logprob: -17.875003814697266
    10. '.def' → logprob: -18.375003814697266

Token 402: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ' )' → logprob: -11.50001049041748
    3. ')-' → logprob: -15.00001049041748
    4. '）' → logprob: -17.250011444091797
    5. '`)' → logprob: -17.625011444091797
    6. '-)' → logprob: -18.375011444091797
    7. '")' → logprob: -19.000011444091797
    8. ']' → logprob: -19.125011444091797
    9. '_)' → logprob: -19.875011444091797
    10. '
' → logprob: -19.875011444091797

Token 403: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0028213970363140106
    2. '-' → logprob: -5.877821445465088
    3. ' ' → logprob: -11.37782096862793
    4. ' ' → logprob: -13.37782096862793
    5. '   ' → logprob: -13.75282096862793
    6. ')' → logprob: -14.25282096862793
    7. ' -
' → logprob: -14.75282096862793
    8. ' minus' → logprob: -14.75282096862793
    9. '       ' → logprob: -15.37782096862793
    10. '  ' → logprob: -15.87782096862793

Token 404: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0019291093340143561
    2. ' sum' → logprob: -6.25192928314209
    3. '	sum' → logprob: -15.00192928314209
    4. '(sum' → logprob: -16.251928329467773
    5. '   ' → logprob: -18.251928329467773
    6. '=sum' → logprob: -18.751928329467773
    7. ' ' → logprob: -19.501928329467773
    8. 'summ' → logprob: -19.626928329467773
    9. '.sum' → logprob: -19.751928329467773
    10. 's' → logprob: -19.876928329467773

Token 405: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.0001249925117008388
    2. 'sorted' → logprob: -9.00012493133545
    3. '(' → logprob: -13.50012493133545
    4. ' (' → logprob: -17.250125885009766
    5. '(sort' → logprob: -17.500125885009766
    6. ' sorted' → logprob: -17.625125885009766
    7. '(s' → logprob: -18.250125885009766
    8. '(
' → logprob: -18.500125885009766
    9. '(selected' → logprob: -18.875125885009766
    10. 's' → logprob: -19.875125885009766

Token 406: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -2.081584716506768e-05
    2. '(sorted' → logprob: -11.000020980834961
    3. 'sorted' → logprob: -13.375020980834961
    4. ')' → logprob: -14.875020980834961
    5. 'g' → logprob: -14.875020980834961
    6. '(' → logprob: -15.000020980834961
    7. '(s' → logprob: -15.250020980834961
    8. '(g' → logprob: -15.250020980834961
    9. '_' → logprob: -15.375020980834961
    10. 's' → logprob: -16.00002098083496

Token 407: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.0001105762057704851
    2. 'ap' → logprob: -9.750110626220703
    3. '_g' → logprob: -10.000110626220703
    4. 'g' → logprob: -13.375110626220703
    5. 'ags' → logprob: -13.625110626220703
    6. 'ps' → logprob: -13.875110626220703
    7. 'abs' → logprob: -14.000110626220703
    8. 'apses' → logprob: -14.125110626220703
    9. '[' → logprob: -15.125110626220703
    10. 's' → logprob: -15.125110626220703

Token 408: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00043221889063715935
    2. '[' → logprob: -7.750432014465332
    3. ' [:' → logprob: -13.750432014465332
    4. '][:' → logprob: -15.250432014465332
    5. '[
' → logprob: -15.875432014465332
    6. '0' → logprob: -17.87543296813965
    7. '   ' → logprob: -18.12543296813965
    8. '[:-' → logprob: -18.37543296813965
    9. '[i' → logprob: -18.87543296813965
    10. '[:]' → logprob: -19.25043296813965

Token 409: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010759611177491024
    2. ' self' → logprob: -9.250107765197754
    3. '(self' → logprob: -11.625107765197754
    4. '
' → logprob: -13.125107765197754
    5. '[self' → logprob: -15.500107765197754
    6. '   ' → logprob: -15.875107765197754
    7. '	self' → logprob: -16.125106811523438
    8. '-self' → logprob: -17.750106811523438
    9. '       ' → logprob: -18.375106811523438
    10. ':self' → logprob: -18.500106811523438

Token 410: '.dataset' (ID: 48314)
  Prédit: '.dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dataset' → logprob: -0.47671931982040405
    2. '.k' → logprob: -0.976719319820404
    3. 'k' → logprob: -6.101719379425049
    4. 'dataset' → logprob: -8.22671890258789
    5. '-' → logprob: -10.10171890258789
    6. 'ataset' → logprob: -10.72671890258789
    7. '.data' → logprob: -11.47671890258789
    8. '-k' → logprob: -11.47671890258789
    9. '   ' → logprob: -11.97671890258789
    10. '.datasets' → logprob: -11.97671890258789

Token 411: '.k' (ID: 9040)
  Prédit: '.k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.k' → logprob: -0.00010199354437645525
    2. ' .' → logprob: -9.625102043151855
    3. '.' → logprob: -10.500102043151855
    4. ' ' → logprob: -13.125102043151855
    5. '   ' → logprob: -13.375102043151855
    6. '`.' → logprob: -14.250102043151855
    7. 'k' → logprob: -14.375102043151855
    8. '
' → logprob: -14.625102043151855
    9. '```' → logprob: -14.625102043151855
    10. '[k' → logprob: -15.000102043151855

Token 412: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07889275997877121
    2. ' -' → logprob: -2.578892707824707
    3. '1' → logprob: -13.828892707824707
    4. '   ' → logprob: -13.953892707824707
    5. ' ' → logprob: -14.328892707824707
    6. '-
' → logprob: -15.203892707824707
    7. '
' → logprob: -16.078893661499023
    8. '[' → logprob: -17.078893661499023
    9. '  ' → logprob: -17.578893661499023
    10. ' -
' → logprob: -17.703893661499023

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.500004768371582
    3. '<|end|>' → logprob: -14.875004768371582
    4. '```' → logprob: -16.250003814697266
    5. '   ' → logprob: -16.375003814697266
    6. ')' → logprob: -16.375003814697266
    7. '
' → logprob: -16.375003814697266
    8. '-' → logprob: -16.750003814697266
    9. '۱' → logprob: -18.125003814697266
    10. '<|end|>' → logprob: -18.562503814697266

Token 414: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01115333754569292
    2. ')' → logprob: -4.511153221130371
    3. ']' → logprob: -9.261153221130371
    4. ' ])' → logprob: -12.511153221130371
    5. '])
' → logprob: -13.261153221130371
    6. ')])' → logprob: -13.386153221130371
    7. ')]' → logprob: -14.136153221130371
    8. ' )' → logprob: -14.261153221130371
    9. ']))' → logprob: -14.636153221130371
    10. '))' → logprob: -15.011153221130371

Token 415: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: ' Problem' (ID: 26113)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.1848883330821991
    2. 'Main' → logprob: -3.3098883628845215
    3. ' Solution' → logprob: -3.3098883628845215
    4. 'Test' → logprob: -3.6848883628845215
    5. 'Solver' → logprob: -4.1848883628845215
    6. 'Wire' → logprob: -4.3098883628845215
    7. 'Data' → logprob: -4.3098883628845215
    8. '__' → logprob: -4.5598883628845215
    9. 'Input' → logprob: -5.3098883628845215
    10. 'Runner' → logprob: -6.0598883628845215

Token 417: 'ES' (ID: 1759)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.022357337176799774
    2. ':' → logprob: -3.897357225418091
    3. ':
' → logprob: -6.77235746383667
    4. 'Solution' → logprob: -7.39735746383667
    5. 'Runner' → logprob: -11.397356986999512
    6. 'Sol' → logprob: -12.022356986999512
    7. '_solver' → logprob: -12.272356986999512
    8. ' Solver' → logprob: -12.272356986999512
    9. 'Solved' → logprob: -12.647356986999512
    10. 'solver' → logprob: -12.647356986999512

Token 418: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -0.002957258140668273
    2. 'olution' → logprob: -6.377957344055176
    3. ':' → logprob: -7.377957344055176
    4. 'olve' → logprob: -8.252957344055176
    5. 'ol' → logprob: -9.252957344055176
    6. 'Solver' → logprob: -9.627957344055176
    7. '():' → logprob: -9.752957344055176
    8. 't' → logprob: -10.377957344055176
    9. 'et' → logprob: -10.752957344055176
    10. '(' → logprob: -11.002957344055176

Token 419: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006476254784502089
    2. ':
' → logprob: -7.87564754486084
    3. '(' → logprob: -8.75064754486084
    4. '(W' → logprob: -9.75064754486084
    5. '(Data' → logprob: -10.62564754486084
    6. ':def' → logprob: -12.25064754486084
    7. ':

' → logprob: -12.75064754486084
    8. '():' → logprob: -12.75064754486084
    9. ' :' → logprob: -12.87564754486084
    10. '(object' → logprob: -13.12564754486084

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006115540862083435
    2. ':
' → logprob: -5.756115436553955
    3. ' def' → logprob: -6.381115436553955
    4. 'def' → logprob: -6.881115436553955
    5. ':' → logprob: -9.006115913391113
    6. '):
' → logprob: -10.381115913391113
    7. 'class' → logprob: -11.131115913391113
    8. '	def' → logprob: -11.381115913391113
    9. ' Data' → logprob: -12.131115913391113
    10. '```' → logprob: -12.756115913391113

Token 421: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.31822502613067627
    2. 'def' (adapté à ' def') → logprob: -1.3182250261306763
    3. '   ' → logprob: -5.318224906921387
    4. 'staticmethod' → logprob: -10.318224906921387
    5. ':
' → logprob: -12.193224906921387
    6. ':' → logprob: -12.693224906921387
    7. '	def' → logprob: -12.818224906921387
    8. '@' → logprob: -13.318224906921387
    9. ':def' → logprob: -13.318224906921387
    10. ' ' → logprob: -14.318224906921387

Token 422: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.42135089635849
    2. 'def' → logprob: -1.7963509559631348
    3. ' __' → logprob: -1.9213509559631348
    4. '__' → logprob: -3.7963509559631348
    5. 'init' → logprob: -5.046350955963135
    6. '_init' → logprob: -6.171350955963135
    7. 'staticmethod' → logprob: -8.671350479125977
    8. '   ' → logprob: -9.046350479125977
    9. ' init' → logprob: -9.421350479125977
    10. ' ' → logprob: -9.921350479125977

Token 423: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. ' init' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '```' → logprob: -15.750000953674316
    5. 'class' → logprob: -16.375001907348633
    6. '_init' → logprob: -17.125001907348633
    7. '(init' → logprob: -17.125001907348633
    8. 'new' → logprob: -17.125001907348633
    9. 'name' → logprob: -17.375001907348633
    10. 'def' → logprob: -17.500001907348633

Token 424: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.014514272101223469
    2. '(self' → logprob: -4.514514446258545
    3. '__' → logprob: -6.139514446258545
    4. '__(
' → logprob: -7.139514446258545
    5. ' (' → logprob: -8.139513969421387
    6. '(' → logprob: -8.889513969421387
    7. '_(' → logprob: -10.139513969421387
    8. 'self' → logprob: -11.014513969421387
    9. '__((' → logprob: -11.639513969421387
    10. '_' → logprob: -12.014513969421387

Token 425: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001483564410591498
    2. ' self' → logprob: -9.00014877319336
    3. '(self' → logprob: -11.25014877319336
    4. ')' → logprob: -12.50014877319336
    5. '
' → logprob: -12.62514877319336
    6. '   ' → logprob: -13.00014877319336
    7. ')(' → logprob: -13.62514877319336
    8. ',' → logprob: -14.25014877319336
    9. '       ' → logprob: -15.12514877319336
    10. 'data' → logprob: -16.25014877319336

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008777545881457627
    2. 'self' → logprob: -7.125877857208252
    3. ' ,' → logprob: -9.750877380371094
    4. '(self' → logprob: -12.000877380371094
    5. ' self' → logprob: -12.125877380371094
    6. ',self' → logprob: -13.500877380371094
    7. ' (' → logprob: -14.000877380371094
    8. ',
' → logprob: -14.000877380371094
    9. '   ' → logprob: -16.000877380371094
    10. '       ' → logprob: -16.125877380371094

Token 427: ' input' (ID: 3422)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -0.28185006976127625
    2. 'self' → logprob: -2.0318500995635986
    3. 'datasets' → logprob: -2.7818500995635986
    4. ' dataset' → logprob: -3.6568500995635986
    5. 'input' → logprob: -4.1568498611450195
    6. 'data' → logprob: -5.4068498611450195
    7. ' datasets' → logprob: -5.5318498611450195
    8. ' self' → logprob: -6.5318498611450195
    9. ' input' → logprob: -7.6568498611450195
    10. 'reader' → logprob: -8.90684986114502

Token 428: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.03423153981566429
    2. '_source' → logprob: -3.409231424331665
    3. '):' → logprob: -8.159231185913086
    4. 'reader' → logprob: -9.159231185913086
    5. ')' → logprob: -9.784231185913086
    6. '):
' → logprob: -10.284231185913086
    7. 'source' → logprob: -10.659231185913086
    8. ':' → logprob: -10.784231185913086
    9. '   ' → logprob: -11.284231185913086
    10. 'Reader' → logprob: -11.409231185913086

Token 429: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16242928802967072
    2. ':' → logprob: -1.9124293327331543
    3. '):
' → logprob: -6.537429332733154
    4. ' ):' → logprob: -8.162428855895996
    5. ' :' → logprob: -8.287428855895996
    6. ')' → logprob: -8.787428855895996
    7. '   ' → logprob: -10.787428855895996
    8. ',' → logprob: -10.912428855895996
    9. '=None' → logprob: -12.162428855895996
    10. '=' → logprob: -12.537428855895996

Token 430: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0011709370883181691
    2. ' Input' → logprob: -6.751171112060547
    3. '   ' → logprob: -15.501171112060547
    4. ')' → logprob: -15.751171112060547
    5. '	Input' → logprob: -16.501171112060547
    6. 'input' → logprob: -16.626171112060547
    7. '_input' → logprob: -16.876171112060547
    8. '):
' → logprob: -17.001171112060547
    9. '_Input' → logprob: -17.001171112060547
    10. '\Input' → logprob: -17.751171112060547

Token 431: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -5.9153885558771435e-06
    2. '_reader' → logprob: -12.375005722045898
    3. '.Reader' → logprob: -13.500005722045898
    4. ' Reader' → logprob: -15.750005722045898
    5. ')' → logprob: -16.8750057220459
    6. 'Read' → logprob: -17.8750057220459
    7. 'reader' → logprob: -18.0000057220459
    8. 'Readers' → logprob: -18.1250057220459
    9. 'Writer' → logprob: -18.8750057220459
    10. '-reader' → logprob: -18.8750057220459

Token 432: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10028927028179169
    2. '):
' → logprob: -2.3502893447875977
    3. ')' → logprob: -9.850289344787598
    4. ',' → logprob: -11.225289344787598
    5. '   ' → logprob: -11.850289344787598
    6. ' ):' → logprob: -12.350289344787598
    7. '):
' → logprob: -12.600289344787598
    8. '):

' → logprob: -14.475289344787598
    9. ' ):
' → logprob: -14.850289344787598
    10. '       ' → logprob: -14.975289344787598

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041489582508802414
    2. 'self' → logprob: -3.416489601135254
    3. ' self' → logprob: -5.041489601135254
    4. 'def' → logprob: -6.916489601135254
    5. ' def' → logprob: -8.291489601135254
    6. '   ' → logprob: -9.791489601135254
    7. '(self' → logprob: -10.791489601135254
    8. ',' → logprob: -10.916489601135254
    9. '):
' → logprob: -12.416489601135254
    10. '
' → logprob: -13.291489601135254

Token 434: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00302809476852417
    2. ' self' → logprob: -6.00302791595459
    3. '       ' → logprob: -7.50302791595459
    4. '	self' → logprob: -14.62802791595459
    5. '   ' → logprob: -15.12802791595459
    6. 'def' → logprob: -16.503028869628906
    7. '(self' → logprob: -17.378028869628906
    8. '
' → logprob: -17.378028869628906
    9. 'class' → logprob: -17.753028869628906
    10. '        
' → logprob: -18.253028869628906

Token 435: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -1.4021237802808173e-05
    2. '.' → logprob: -11.375014305114746
    3. 'input' → logprob: -13.250014305114746
    4. '.output' → logprob: -15.750014305114746
    5. '.reader' → logprob: -16.12501335144043
    6. '.INPUT' → logprob: -16.50001335144043
    7. '.inputs' → logprob: -17.00001335144043
    8. ' .' → logprob: -17.12501335144043
    9. '.Input' → logprob: -17.37501335144043
    10. '.user' → logprob: -17.62501335144043

Token 436: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -1.8624639324116288e-06
    2. '_source' → logprob: -13.625001907348633
    3. '_writer' → logprob: -15.500001907348633
    4. 'reader' → logprob: -16.000001907348633
    5. '_read' → logprob: -16.375001907348633
    6. '_' → logprob: -16.625001907348633
    7. 'Reader' → logprob: -17.750001907348633
    8. '_receiver' → logprob: -18.000001907348633
    9. '_re' → logprob: -18.250001907348633
    10. '=_' → logprob: -19.125001907348633

Token 437: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16037990152835846
    2. ' =' → logprob: -1.9103798866271973
    3. '=input' → logprob: -10.035380363464355
    4. '.' → logprob: -10.160380363464355
    5. '   ' → logprob: -10.410380363464355
    6. ' ' → logprob: -11.035380363464355
    7. '.read' → logprob: -11.285380363464355
    8. '    ' → logprob: -12.785380363464355
    9. ')' → logprob: -13.285380363464355
    10. '  ' → logprob: -13.410380363464355

Token 438: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0485873706638813
    2. ' input' → logprob: -3.0485873222351074
    3. '	input' → logprob: -18.048587799072266
    4. 'Input' → logprob: -18.548587799072266
    5. '=input' → logprob: -18.798587799072266
    6. '<input' → logprob: -18.923587799072266
    7. '_input' → logprob: -19.173587799072266
    8. 'import' → logprob: -19.548587799072266
    9. '(input' → logprob: -19.673587799072266
    10. '.input' → logprob: -20.423587799072266

Token 439: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -4.8590300139039755e-05
    2. 'reader' → logprob: -10.000048637390137
    3. 'Reader' → logprob: -13.000048637390137
    4. '_source' → logprob: -14.000048637390137
    5. '_writer' → logprob: -17.25004768371582
    6. '_read' → logprob: -17.25004768371582
    7. '-reader' → logprob: -17.50004768371582
    8. '   ' → logprob: -17.75004768371582
    9. '.reader' → logprob: -19.25004768371582
    10. ' reader' → logprob: -19.25004768371582

Token 440: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14464662969112396
    2. '   ' → logprob: -2.019646644592285
    3. '<|end|>' → logprob: -7.269646644592285
    4. 'def' → logprob: -7.769646644592285
    5. '    
' → logprob: -8.019646644592285
    6. ' def' → logprob: -8.519646644592285
    7. '

' → logprob: -8.894646644592285
    8. '<|end|>' → logprob: -9.144646644592285
    9. '	def' → logprob: -10.644646644592285
    10. '  
' → logprob: -11.019646644592285

Token 441: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015592250972986221
    2. '   ' → logprob: -4.265592098236084
    3. ' def' → logprob: -6.765592098236084
    4. '
' → logprob: -8.265592575073242
    5. '	def' → logprob: -11.140592575073242
    6. '    
' → logprob: -13.890592575073242
    7. '<|end|>' → logprob: -13.890592575073242
    8. '```' → logprob: -14.640592575073242
    9. '

' → logprob: -15.265592575073242
    10. ')' → logprob: -15.765592575073242

Token 442: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.630610641877865e-06
    2. ' def' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.750006675720215
    4. '
' → logprob: -18.1250057220459
    5. '	def' → logprob: -18.6250057220459
    6. 'de' → logprob: -19.2500057220459
    7. ' ' → logprob: -23.0000057220459
    8. '    
' → logprob: -23.0000057220459
    9. 'd' → logprob: -23.5000057220459
    10. 'ndef' → logprob: -24.0000057220459

Token 443: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.021118544042110443
    2. 'def' → logprob: -4.021118640899658
    3. ' solve' → logprob: -6.021118640899658
    4. ' def' → logprob: -8.0211181640625
    5. 'run' → logprob: -8.5211181640625
    6. 'read' → logprob: -12.3961181640625
    7. ' run' → logprob: -13.0211181640625
    8. 'execute' → logprob: -13.7711181640625
    9. '.solve' → logprob: -14.6461181640625
    10. 'resolve' → logprob: -14.7711181640625

Token 444: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00030829108436591923
    2. '(' → logprob: -8.1253080368042
    3. ' (' → logprob: -11.7503080368042
    4. '()' → logprob: -12.8753080368042
    5. 'self' → logprob: -13.8753080368042
    6. '(sel' → logprob: -15.2503080368042
    7. '(
' → logprob: -15.6253080368042
    8. '   ' → logprob: -16.000308990478516
    9. '(s' → logprob: -16.000308990478516
    10. ' self' → logprob: -16.250308990478516

Token 445: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2543647885322571
    2. '):' → logprob: -1.5043647289276123
    3. '):
' → logprob: -6.879364967346191
    4. ',' → logprob: -6.879364967346191
    5. 'self' → logprob: -8.254364967346191
    6. ')->' → logprob: -9.629364967346191
    7. ' )' → logprob: -11.129364967346191
    8. '   ' → logprob: -11.504364967346191
    9. ' ):' → logprob: -11.879364967346191
    10. '):
' → logprob: -12.254364967346191

Token 446: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.6430367827415466
    2. '(self' → logprob: -1.0180368423461914
    3. ':' → logprob: -2.7680368423461914
    4. '->' → logprob: -3.1430368423461914
    5. '       ' → logprob: -5.518036842346191
    6. '(' → logprob: -6.643036842346191
    7. ')' → logprob: -7.768036842346191
    8. ':
' → logprob: -8.143036842346191
    9. '   ' → logprob: -8.268036842346191
    10. ')->' → logprob: -8.393036842346191

Token 447: ' List' (ID: 2655)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.030265048146247864
    2. ' int' → logprob: -3.5302650928497314
    3. 'None' → logprob: -7.780264854431152
    4. ' None' → logprob: -9.280264854431152
    5. '[int' → logprob: -12.780264854431152
    6. 'List' → logprob: -15.655264854431152
    7. '   ' → logprob: -15.905264854431152
    8. '(int' → logprob: -16.40526580810547
    9. '	int' → logprob: -17.78026580810547
    10. ' List' → logprob: -17.90526580810547

Token 448: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.2664456789934775e-06
    2. 'int' → logprob: -14.500000953674316
    3. '<int' → logprob: -14.875000953674316
    4. '[' → logprob: -15.375000953674316
    5. ' [' → logprob: -16.750001907348633
    6. '[Int' → logprob: -17.250001907348633
    7. '[in' → logprob: -17.500001907348633
    8. '(int' → logprob: -17.625001907348633
    9. '[
' → logprob: -17.750001907348633
    10. '[str' → logprob: -18.000001907348633

Token 449: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.02173066884279251
    2. ']:' → logprob: -4.646730899810791
    3. '():
' → logprob: -5.521730899810791
    4. '   ' → logprob: -5.896730899810791
    5. '       ' → logprob: -6.271730899810791
    6. ']:
' → logprob: -6.271730899810791
    7. ']' → logprob: -7.646730899810791
    8. ':
' → logprob: -8.271730422973633
    9. '[' → logprob: -8.396730422973633
    10. '):
' → logprob: -8.896730422973633

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13801144063472748
    2. ' results' → logprob: -2.7630114555358887
    3. 'results' → logprob: -2.8880114555358887
    4. 'result' → logprob: -5.263011455535889
    5. 'outputs' → logprob: -6.138011455535889
    6. ' result' → logprob: -6.263011455535889
    7. ' outputs' → logprob: -8.13801097869873
    8. 'output' → logprob: -8.51301097869873
    9. 'answers' → logprob: -9.26301097869873
    10. ' output' → logprob: -9.88801097869873

Token 451: ' t' (ID: 260)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.47986817359924316
    2. 't' (adapté à ' t') → logprob: -1.4798681735992432
    3. '       ' → logprob: -1.9798681735992432
    4. ' results' → logprob: -4.854867935180664
    5. ' t' → logprob: -5.104867935180664
    6. 'T' → logprob: -7.229867935180664
    7. 'result' → logprob: -7.729867935180664
    8. 'q' → logprob: -9.354867935180664
    9. 'num' → logprob: -9.354867935180664
    10. 'test' → logprob: -9.479867935180664

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0926695317029953
    2. '=' → logprob: -2.4676694869995117
    3. '_results' → logprob: -6.467669486999512
    4. 'imes' → logprob: -7.592669486999512
    5. 'results' → logprob: -7.717669486999512
    6. 'ests' → logprob: -8.092669486999512
    7. ' ' → logprob: -8.217669486999512
    8. 'okens' → logprob: -8.717669486999512
    9. '   ' → logprob: -9.467669486999512
    10. '  ' → logprob: -9.717669486999512

Token 453: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25234395265579224
    2. ' self' → logprob: -1.5023438930511475
    3. 'int' → logprob: -7.877344131469727
    4. ' int' → logprob: -10.252344131469727
    5. '       ' → logprob: -16.377344131469727
    6. 'elf' → logprob: -16.752344131469727
    7. '(self' → logprob: -17.252344131469727
    8. '	self' → logprob: -17.502344131469727
    9. '        
' → logprob: -17.627344131469727
    10. '[self' → logprob: -18.252344131469727

Token 454: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.00020425561524461955
    2. 'input' → logprob: -8.500204086303711
    3. '.' → logprob: -14.875204086303711
    4. '_input' → logprob: -15.750204086303711
    5. '<input' → logprob: -16.12520408630371
    6. '=input' → logprob: -16.12520408630371
    7. ' .' → logprob: -16.75020408630371
    8. '	input' → logprob: -17.75020408630371
    9. ' input' → logprob: -18.62520408630371
    10. '(input' → logprob: -19.00020408630371

Token 455: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.0004068395064678043
    2. 'reader' → logprob: -8.000407218933105
    3. 'Reader' → logprob: -10.250407218933105
    4. '-reader' → logprob: -11.125407218933105
    5. 'int' → logprob: -11.375407218933105
    6. '_reads' → logprob: -12.875407218933105
    7. '_read' → logprob: -13.125407218933105
    8. 'er' → logprob: -13.750407218933105
    9. '.Reader' → logprob: -14.375407218933105
    10. '_int' → logprob: -14.500407218933105

Token 456: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -12.875003814697266
    3. 'read' → logprob: -13.750003814697266
    4. '.readline' → logprob: -15.875003814697266
    5. ' .' → logprob: -16.625003814697266
    6. '   ' → logprob: -20.750003814697266
    7. '_read' → logprob: -21.375003814697266
    8. '.readlines' → logprob: -21.375003814697266
    9. '.Read' → logprob: -21.625003814697266
    10. ' read' → logprob: -21.625003814697266

Token 457: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.875005722045898
    3. '_line' → logprob: -13.375005722045898
    4. '_in' → logprob: -14.125005722045898
    5. '_i' → logprob: -15.375005722045898
    6. 'int' → logprob: -15.750005722045898
    7. ' _' → logprob: -16.7500057220459
    8. '_uint' → logprob: -17.7500057220459
    9. '(_' → logprob: -18.0000057220459
    10. '
' → logprob: -18.5000057220459

Token 458: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2520051598548889
    2. '()
' → logprob: -1.5020051002502441
    3. '       ' → logprob: -9.877005577087402
    4. '()
' → logprob: -11.127005577087402
    5. '()

' → logprob: -11.877005577087402
    6. '()\' → logprob: -14.002005577087402
    7. ' ()' → logprob: -14.627005577087402
    8. 'results' → logprob: -15.002005577087402
    9. '())' → logprob: -15.627005577087402
    10. 'for' → logprob: -15.627005577087402

Token 459: '       ' (ID: 309)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.7459917664527893
    2. 'results' → logprob: -0.8709917664527893
    3. '
' → logprob: -2.9959917068481445
    4. '       ' → logprob: -3.2459917068481445
    5. 'result' → logprob: -4.3709917068481445
    6. ' result' → logprob: -5.7459917068481445
    7. 'outputs' → logprob: -7.3709917068481445
    8. 'output' → logprob: -7.7459917068481445
    9. '	results' → logprob: -7.7459917068481445
    10. ' outputs' → logprob: -8.620991706848145

Token 460: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0070980084128677845
    2. ' results' → logprob: -5.007098197937012
    3. '       ' → logprob: -8.507098197937012
    4. 'result' → logprob: -9.007098197937012
    5. 'answers' → logprob: -10.007098197937012
    6. 'outputs' → logprob: -11.507098197937012
    7. '	results' → logprob: -13.257098197937012
    8. '
' → logprob: -14.757098197937012
    9. 'res' → logprob: -15.257098197937012
    10. ' answers' → logprob: -15.757098197937012

Token 461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023247458040714264
    2. '=' → logprob: -3.773247480392456
    3. '=[]' → logprob: -13.773247718811035
    4. ':' → logprob: -14.648247718811035
    5. '=[]
' → logprob: -15.773247718811035
    6. ' ' → logprob: -16.64824676513672
    7. '[]' → logprob: -16.89824676513672
    8. '.append' → logprob: -17.14824676513672
    9. 's' → logprob: -17.64824676513672
    10. ' =[' → logprob: -18.02324676513672

Token 462: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00011844364780699834
    2. ' []' → logprob: -9.250118255615234
    3. '[]
' → logprob: -11.250118255615234
    4. '[' → logprob: -11.625118255615234
    5. '[]}' → logprob: -16.125118255615234
    6. '[]

' → logprob: -16.500118255615234
    7. '[]>' → logprob: -16.625118255615234
    8. '[])' → logprob: -18.250118255615234
    9. '[]"' → logprob: -18.750118255615234
    10. '[]=' → logprob: -18.750118255615234

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04908154904842377
    2. ' for' → logprob: -3.424081563949585
    3. 'for' → logprob: -4.674081325531006
    4. '   ' → logprob: -5.924081325531006
    5. '	for' → logprob: -6.424081325531006
    6. '<|end|>' → logprob: -6.799081325531006
    7. '
' → logprob: -8.174081802368164
    8. '	   ' → logprob: -8.924081802368164
    9. '	' → logprob: -9.674081802368164
    10. ' ' → logprob: -10.924081802368164

Token 464: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002454011235386133
    2. ' for' → logprob: -6.502453804016113
    3. '       ' → logprob: -7.002453804016113
    4. '	for' → logprob: -10.127453804016113
    5. '   ' → logprob: -14.127453804016113
    6. '
' → logprob: -14.502453804016113
    7. '	' → logprob: -15.252453804016113
    8. 'while' → logprob: -16.00245475769043
    9. '```' → logprob: -17.37745475769043
    10. '        
' → logprob: -18.00245475769043

Token 465: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00861468818038702
    2. ' _' → logprob: -4.758614540100098
    3. '_i' → logprob: -16.383615493774414
    4. ' ' → logprob: -16.883615493774414
    5. ' ' → logprob: -17.758615493774414
    6. ' i' → logprob: -17.758615493774414
    7. '_t' → logprob: -18.633615493774414
    8. '_range' → logprob: -18.883615493774414
    9. '_=' → logprob: -19.133615493774414
    10. '_in' → logprob: -19.258615493774414

Token 466: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8961594104766846
    2. 'range' → logprob: -0.8961594104766846
    3. ' range' → logprob: -2.1461594104766846
    4. '_' → logprob: -3.1461594104766846
    5. 'in' → logprob: -3.7711594104766846
    6. ' ' → logprob: -8.271159172058105
    7. ' _' → logprob: -8.646159172058105
    8. '  ' → logprob: -9.021159172058105
    9. '_range' → logprob: -9.021159172058105
    10. '   ' → logprob: -10.521159172058105

Token 467: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.451116051815916e-05
    2. ' range' → logprob: -10.625024795532227
    3. '(range' → logprob: -17.250024795532227
    4. '	range' → logprob: -18.000024795532227
    5. 'rang' → logprob: -18.000024795532227
    6. 'ange' → logprob: -18.125024795532227
    7. ' ' → logprob: -18.250024795532227
    8. '   ' → logprob: -18.375024795532227
    9. '  ' → logprob: -18.500024795532227
    10. 't' → logprob: -18.750024795532227

Token 468: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.08110620081424713
    2. '(' → logprob: -2.581106185913086
    3. ' (' → logprob: -6.456106185913086
    4. ' t' → logprob: -8.706106185913086
    5. ' range' → logprob: -8.831106185913086
    6. 't' → logprob: -8.956106185913086
    7. '(range' → logprob: -8.956106185913086
    8. 'range' → logprob: -9.706106185913086
    9. ' ' → logprob: -12.206106185913086
    10. '(
' → logprob: -12.956106185913086

Token 469: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42926034331321716
    2. '):
' → logprob: -1.0542603731155396
    3. ':' → logprob: -8.05426025390625
    4. ')' → logprob: -9.55426025390625
    5. '):
' → logprob: -9.55426025390625
    6. ':
' → logprob: -10.30426025390625
    7. '       ' → logprob: -10.42926025390625
    8. '   ' → logprob: -11.17926025390625
    9. ' ):' → logprob: -11.30426025390625
    10. ' ):
' → logprob: -12.17926025390625

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04946703836321831
    2. '       ' → logprob: -3.549467086791992
    3. '<|end|>' → logprob: -4.424467086791992
    4. '   ' → logprob: -6.424467086791992
    5. '            
' → logprob: -6.549467086791992
    6. '
' → logprob: -7.424467086791992
    7. '        
' → logprob: -7.549467086791992
    8. ' 
' → logprob: -7.674467086791992
    9. '```' → logprob: -7.674467086791992
    10. '    
' → logprob: -7.799467086791992

Token 471: ' dataset' (ID: 20830)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' (adapté à ' dataset') → logprob: -0.05073649063706398
    2. ' dataset' → logprob: -3.050736427307129
    3. 'data' → logprob: -6.425736427307129
    4. '           ' → logprob: -7.925736427307129
    5. ' data' → logprob: -8.800736427307129
    6. 'ds' → logprob: -12.175736427307129
    7. 'datas' → logprob: -12.800736427307129
    8. '   ' → logprob: -13.050736427307129
    9. 'dat' → logprob: -13.925736427307129
    10. ' ds' → logprob: -14.050736427307129

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858794063329697
    2. '=' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.298587799072266
    4. ')' → logprob: -16.048587799072266
    5. '        ' → logprob: -16.673587799072266
    6. '    ' → logprob: -16.798587799072266
    7. '.' → logprob: -17.298587799072266
    8. '   ' → logprob: -17.298587799072266
    9. ' =
' → logprob: -17.423587799072266
    10. '       ' → logprob: -18.173587799072266

Token 473: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20142608880996704
    2. ' self' → logprob: -1.7014260292053223
    3. '           ' → logprob: -11.57642650604248
    4. '(self' → logprob: -13.57642650604248
    5. '=self' → logprob: -14.32642650604248
    6. '               ' → logprob: -14.70142650604248
    7. '	self' → logprob: -14.82642650604248
    8. '                   ' → logprob: -15.70142650604248
    9. 'Self' → logprob: -16.201425552368164
    10. '       ' → logprob: -16.451425552368164

Token 474: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.0024800582323223352
    2. 'input' → logprob: -6.0024800300598145
    3. '_input' → logprob: -13.502480506896973
    4. '.read' → logprob: -13.752480506896973
    5. '=input' → logprob: -14.002480506896973
    6. '.' → logprob: -14.377480506896973
    7. ' input' → logprob: -14.877480506896973
    8. ' .' → logprob: -16.502479553222656
    9. '<input' → logprob: -17.252479553222656
    10. '(input' → logprob: -17.502479553222656

Token 475: '_reader' (ID: 55777)
  Prédit: '_reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reader' → logprob: -0.10888275504112244
    2. 'Reader' → logprob: -2.3588826656341553
    3. '.read' → logprob: -5.233882904052734
    4. 'reader' → logprob: -5.983882904052734
    5. 'read' → logprob: -7.233882904052734
    6. '_read' → logprob: -9.858882904052734
    7. '.reader' → logprob: -12.358882904052734
    8. '-reader' → logprob: -12.358882904052734
    9. '   ' → logprob: -13.983882904052734
    10. 'r' → logprob: -13.983882904052734

Token 476: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -4.11996734328568e-05
    2. '.' → logprob: -10.625041007995605
    3. 'read' → logprob: -11.000041007995605
    4. '.readline' → logprob: -16.125041961669922
    5. ' .' → logprob: -16.750041961669922
    6. ' read' → logprob: -17.250041961669922
    7. '	read' → logprob: -19.500041961669922
    8. '_read' → logprob: -19.500041961669922
    9. '   ' → logprob: -19.875041961669922
    10. '.
' → logprob: -20.375041961669922

Token 477: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: 0.0
    2. '_dat' → logprob: -17.875
    3. '_' → logprob: -18.0
    4. '_data' → logprob: -18.125
    5. 'dataset' → logprob: -18.125
    6. '_datas' → logprob: -18.875
    7. '_d' → logprob: -19.5
    8. ' dataset' → logprob: -20.25
    9. '_ds' → logprob: -22.375
    10. 'ataset' → logprob: -22.375

Token 478: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010872608050704002
    2. '
' → logprob: -4.760872840881348
    3. '       ' → logprob: -7.010872840881348
    4. ',' → logprob: -7.385872840881348
    5. '<|end|>' → logprob: -7.760872840881348
    6. '            
' → logprob: -9.135872840881348
    7. '               ' → logprob: -10.010872840881348
    8. '<|end|>' → logprob: -10.260872840881348
    9. '   ' → logprob: -10.760872840881348
    10. '        
' → logprob: -10.885872840881348

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004461331758648157
    2. '       ' → logprob: -5.504461288452148
    3. '   ' → logprob: -9.129461288452148
    4. 'result' → logprob: -9.379461288452148
    5. 'results' → logprob: -9.629461288452148
    6. '
' → logprob: -10.629461288452148
    7. '<|end|>' → logprob: -10.754461288452148
    8. '            
' → logprob: -11.254461288452148
    9. ' results' → logprob: -11.379461288452148
    10. '          ' → logprob: -11.379461288452148

Token 480: ' optimizer' (ID: 56610)
  Prédit: 'optimizer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimizer' (adapté à ' optimizer') → logprob: -0.0317593589425087
    2. '           ' → logprob: -3.531759262084961
    3. 'solver' → logprob: -6.906759262084961
    4. ' optimizer' → logprob: -7.531759262084961
    5. 'opt' → logprob: -8.281759262084961
    6. 'optim' → logprob: -9.281759262084961
    7. 'results' → logprob: -10.281759262084961
    8. '       ' → logprob: -10.656759262084961
    9. 'result' → logprob: -11.031759262084961
    10. 'solution' → logprob: -11.281759262084961

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059289163909852505
    2. '=' → logprob: -5.130928993225098
    3. ' ' → logprob: -16.13092803955078
    4. ' =
' → logprob: -16.50592803955078
    5. '.' → logprob: -17.13092803955078
    6. '   ' → logprob: -18.13092803955078
    7. '    ' → logprob: -18.38092803955078
    8. ')' → logprob: -18.50592803955078
    9. '  ' → logprob: -18.50592803955078
    10. 's' → logprob: -18.88092803955078

Token 482: ' Wire' (ID: 28885)
  Prédit: 'Wire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Wire' → logprob: -0.474077433347702
    2. ' Wire' → logprob: -0.9740774631500244
    3. ' wire' → logprob: -15.474077224731445
    4. 'W' → logprob: -15.724077224731445
    5. '           ' → logprob: -17.349077224731445
    6. '_wire' → logprob: -17.849077224731445
    7. ' W' → logprob: -18.724077224731445
    8. '   ' → logprob: -19.099077224731445
    9. '            ' → logprob: -19.224077224731445
    10. 'wire' → logprob: -19.224077224731445

Token 483: 'Length' (ID: 6563)
  Prédit: 'Length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Length' → logprob: -3.128163257315464e-07
    2. 'Leng' → logprob: -15.625
    3. 'length' → logprob: -17.75
    4. 'Lengths' → logprob: -18.125
    5. 'Len' → logprob: -18.5
    6. ' Length' → logprob: -18.75
    7. 'L' → logprob: -18.875
    8. '_length' → logprob: -19.375
    9. 'ength' → logprob: -19.75
    10. 'Le' → logprob: -20.625

Token 484: 'Optimizer' (ID: 120293)
  Prédit: 'Optimizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optimizer' → logprob: -1.4021237802808173e-05
    2. 'optimizer' → logprob: -11.500014305114746
    3. '_optimizer' → logprob: -13.125014305114746
    4. ' optimizer' → logprob: -13.625014305114746
    5. 'Optim' → logprob: -15.125014305114746
    6. 'Optimize' → logprob: -15.250014305114746
    7. 'Opt' → logprob: -16.50001335144043
    8. 'Optimization' → logprob: -17.37501335144043
    9. 'o' → logprob: -17.62501335144043
    10. 'O' → logprob: -18.12501335144043

Token 485: '(dataset' (ID: 67333)
  Prédit: '(dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dataset' → logprob: -0.0004908377304673195
    2. '(' → logprob: -7.625490665435791
    3. '(problem' → logprob: -14.00049114227295
    4. ' (' → logprob: -14.37549114227295
    5. 'optimizer' → logprob: -14.62549114227295
    6. '(
' → logprob: -14.75049114227295
    7. '           ' → logprob: -15.75049114227295
    8. '(data' → logprob: -16.375490188598633
    9. 'dataset' → logprob: -16.875490188598633
    10. '(device' → logprob: -17.125490188598633

Token 486: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760297179222107
    2. ')
' → logprob: -0.8260297179222107
    3. ')
' → logprob: -10.701029777526855
    4. '       ' → logprob: -10.951029777526855
    5. '           ' → logprob: -11.201029777526855
    6. ').' → logprob: -11.576029777526855
    7. ')

' → logprob: -11.576029777526855
    8. '   ' → logprob: -11.951029777526855
    9. ' )
' → logprob: -12.451029777526855
    10. ' ' → logprob: -13.076029777526855

Token 487: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013619012897834182
    2. 'results' → logprob: -6.626361846923828
    3. ' results' → logprob: -10.501361846923828
    4. 'result' → logprob: -12.251361846923828
    5. '       ' → logprob: -12.876361846923828
    6. '
' → logprob: -14.501361846923828
    7. '   ' → logprob: -15.876361846923828
    8. '	results' → logprob: -15.876361846923828
    9. '            
' → logprob: -15.876361846923828
    10. '<|end|>' → logprob: -16.126361846923828

Token 488: ' min' (ID: 1349)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.010495424270629883
    2. 'result' → logprob: -4.760495185852051
    3. '           ' → logprob: -6.760495185852051
    4. ' results' → logprob: -7.260495185852051
    5. 'length' → logprob: -11.76049518585205
    6. ' result' → logprob: -12.51049518585205
    7. 'answer' → logprob: -13.51049518585205
    8. 'res' → logprob: -13.51049518585205
    9. '       ' → logprob: -13.88549518585205
    10. 'total' → logprob: -14.13549518585205

Token 489: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.1375974416732788
    2. '_total' → logprob: -2.1375975608825684
    3. '_' → logprob: -5.262597560882568
    4. 'imal' → logprob: -6.387597560882568
    5. '_len' → logprob: -6.637597560882568
    6. '_wire' → logprob: -7.012597560882568
    7. 'imum' → logprob: -7.387597560882568
    8. '_distance' → logprob: -8.01259708404541
    9. '_lengths' → logprob: -8.01259708404541
    10. '_result' → logprob: -9.38759708404541

Token 490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048588961362838745
    2. '=' → logprob: -3.048588991165161
    3. '           ' → logprob: -14.798588752746582
    4. 's' → logprob: -14.798588752746582
    5. '    ' → logprob: -15.548588752746582
    6. ' ' → logprob: -15.923588752746582
    7. '	' → logprob: -16.1735897064209
    8. '            ' → logprob: -16.2985897064209
    9. '        ' → logprob: -16.4235897064209
    10. '   ' → logprob: -16.5485897064209

Token 491: ' optimizer' (ID: 56610)
  Prédit: 'optimizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimizer' → logprob: -0.008615161292254925
    2. ' optimizer' → logprob: -4.758615016937256
    3. 'opt' → logprob: -14.758615493774414
    4. 'optim' → logprob: -15.758615493774414
    5. '_optimizer' → logprob: -17.008615493774414
    6. 'optimized' → logprob: -17.508615493774414
    7. '.optimizer' → logprob: -18.008615493774414
    8. '   ' → logprob: -18.008615493774414
    9. 'Optimizer' → logprob: -18.133615493774414
    10. 'allocator' → logprob: -18.258615493774414

Token 492: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -3.881560041918419e-05
    2. '.' → logprob: -10.375039100646973
    3. 'minimal' → logprob: -12.125039100646973
    4. '.minimum' → logprob: -13.875039100646973
    5. '.max' → logprob: -15.000039100646973
    6. '.total' → logprob: -15.500039100646973
    7. ' .' → logprob: -15.625039100646973
    8. '_min' → logprob: -15.750039100646973
    9. ' minimal' → logprob: -16.000038146972656
    10. '.m' → logprob: -16.000038146972656

Token 493: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -5.512236498361744e-07
    2. 'inal' → logprob: -15.000000953674316
    3. 'IMAL' → logprob: -16.875
    4. 'mal' → logprob: -17.25
    5. 'imum' → logprob: -17.75
    6. 'imals' → logprob: -18.625
    7. 'im' → logprob: -19.25
    8. 'imized' → logprob: -19.375
    9. 'iminal' → logprob: -19.625
    10. '_total' → logprob: -20.625

Token 494: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.500000953674316
    3. 'total' → logprob: -17.0
    4. 'Total' → logprob: -18.625
    5. '_Total' → logprob: -19.375
    6. '_
' → logprob: -19.5
    7. '_final' → logprob: -19.75
    8. '_TOTAL' → logprob: -19.875
    9. '```' → logprob: -20.5
    10. ' _' → logprob: -20.625

Token 495: '_wire' (ID: 163785)
  Prédit: '_wire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wire' → logprob: -6.980854959692806e-05
    2. '_total' → logprob: -10.000069618225098
    3. '_' → logprob: -11.125069618225098
    4. 'wire' → logprob: -12.250069618225098
    5. '_w' → logprob: -12.625069618225098
    6. '_
' → logprob: -15.125069618225098
    7. 'Wire' → logprob: -15.250069618225098
    8. ' wire' → logprob: -15.375069618225098
    9. '```' → logprob: -15.750069618225098
    10. '
' → logprob: -16.000070571899414

Token 496: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00022094044834375381
    2. 'length' → logprob: -9.000221252441406
    3. 'ength' → logprob: -9.250221252441406
    4. 'Length' → logprob: -14.750221252441406
    5. '_l' → logprob: -15.250221252441406
    6. '_len' → logprob: -15.375221252441406
    7. '_' → logprob: -16.125221252441406
    8. '_lengths' → logprob: -16.500221252441406
    9. '_LENGTH' → logprob: -17.000221252441406
    10. ' length' → logprob: -17.000221252441406

Token 497: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45861688256263733
    2. '()
' → logprob: -1.208616852760315
    3. '()' → logprob: -2.7086169719696045
    4. '
' → logprob: -6.083616733551025
    5. 'results' → logprob: -9.958617210388184
    6. '()
' → logprob: -10.333617210388184
    7. '<|end|>' → logprob: -10.458617210388184
    8. '       ' → logprob: -10.708617210388184
    9. '[]
' → logprob: -10.833617210388184
    10. '()\' → logprob: -10.958617210388184

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012713817704934627
    2. '
' → logprob: -10.375126838684082
    3. 'results' → logprob: -10.500126838684082
    4. '       ' → logprob: -10.875126838684082
    5. '```' → logprob: -11.000126838684082
    6. '   ' → logprob: -11.375126838684082
    7. '<|end|>' → logprob: -12.000126838684082
    8. '[' → logprob: -12.500126838684082
    9. '            
' → logprob: -12.750126838684082
    10. '		' → logprob: -13.500126838684082

Token 499: ' results' (ID: 4376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04973861575126648
    2. 'results' (adapté à ' results') → logprob: -3.049738645553589
    3. ' results' → logprob: -6.79973840713501
    4. '       ' → logprob: -10.674738883972168
    5. '   ' → logprob: -11.549738883972168
    6. '	results' → logprob: -12.799738883972168
    7. '
' → logprob: -14.174738883972168
    8. '```' → logprob: -16.29973793029785
    9. '_results' → logprob: -16.92473793029785
    10. 'result' → logprob: -16.92473793029785

Token 500: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020938136731274426
    2. '.' → logprob: -8.50020980834961
    3. '.app' → logprob: -12.75020980834961
    4. '.ap' → logprob: -13.37520980834961
    5. '.extend' → logprob: -14.37520980834961
    6. '.add' → logprob: -15.00020980834961
    7. '.push' → logprob: -15.75020980834961
    8. '.setdefault' → logprob: -16.37520980834961
    9. '.Append' → logprob: -16.75020980834961
    10. ' .' → logprob: -17.00020980834961

Token 501: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.750000953674316
    3. 'min' → logprob: -16.500001907348633
    4. '(
' → logprob: -18.500001907348633
    5. '(m' → logprob: -19.500001907348633
    6. '(mi' → logprob: -21.375001907348633
    7. '(max' → logprob: -22.125001907348633
    8. ' min' → logprob: -22.375001907348633
    9. '[min' → logprob: -22.875001907348633
    10. '	min' → logprob: -23.375001907348633

Token 502: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.8624639324116288e-06
    2. 'ength' → logprob: -13.500001907348633
    3. '(length' → logprob: -15.375001907348633
    4. 'length' → logprob: -15.875001907348633
    5. '_l' → logprob: -16.250001907348633
    6. '_LENGTH' → logprob: -19.000001907348633
    7. 'Length' → logprob: -19.250001907348633
    8. '_le' → logprob: -19.750001907348633
    9. '_' → logprob: -20.000001907348633
    10. '```' → logprob: -20.000001907348633

Token 503: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.317800372838974
    2. ')
' → logprob: -1.4428004026412964
    3. '       ' → logprob: -3.692800283432007
    4. '
' → logprob: -4.567800521850586
    5. ')return' → logprob: -7.692800521850586
    6. '<|end|>' → logprob: -8.817800521850586
    7. ')
' → logprob: -10.817800521850586
    8. '
' → logprob: -11.317800521850586
    9. '   ' → logprob: -11.692800521850586
    10. '  
' → logprob: -11.817800521850586

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10531744360923767
    2. '
' → logprob: -2.3553173542022705
    3. 'return' → logprob: -5.60531759262085
    4. '   ' → logprob: -7.73031759262085
    5. ' return' → logprob: -8.230317115783691
    6. '	' → logprob: -8.480317115783691
    7. '```' → logprob: -8.730317115783691
    8. '	return' → logprob: -9.230317115783691
    9. '
' → logprob: -9.355317115783691
    10. '        
' → logprob: -9.480317115783691

Token 505: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38921934366226196
    2. 'return' (adapté à ' return') → logprob: -1.1392192840576172
    3. '   ' → logprob: -6.514219284057617
    4. ' return' → logprob: -7.639219284057617
    5. '	return' → logprob: -8.014219284057617
    6. '	' → logprob: -10.139219284057617
    7. '
' → logprob: -12.139219284057617
    8. '```' → logprob: -12.639219284057617
    9. '        
' → logprob: -13.639219284057617
    10. ' ' → logprob: -14.764219284057617

Token 506: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.011047814972698689
    2. ' results' → logprob: -4.511047840118408
    3. '(results' → logprob: -17.51104736328125
    4. '	results' → logprob: -18.01104736328125
    5. '.results' → logprob: -21.51104736328125
    6. '[' → logprob: -23.76104736328125
    7. 'Results' → logprob: -24.51104736328125
    8. '_results' → logprob: -24.88604736328125
    9. 'result' → logprob: -24.88604736328125
    10. '   ' → logprob: -25.63604736328125

Token 507: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6916036009788513
    2. '<|end|>' → logprob: -0.9416036009788513
    3. 'if' → logprob: -2.566603660583496
    4. '```' → logprob: -3.816603660583496
    5. 'def' → logprob: -4.941603660583496
    6. '<|end|>' → logprob: -6.691603660583496
    7. 'import' → logprob: -7.691603660583496
    8. '
' → logprob: -7.691603660583496
    9. ' if' → logprob: -8.066603660583496
    10. 'from' → logprob: -8.441603660583496

Token 509: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.014168680645525455
    2. 'main' → logprob: -4.264168739318848
    3. ' run' → logprob: -12.264168739318848
    4. ' solve' → logprob: -15.264168739318848
    5. '	main' → logprob: -16.13916778564453
    6. 'run' → logprob: -16.63916778564453
    7. '_main' → logprob: -16.88916778564453
    8. ' solution' → logprob: -17.13916778564453
    9. ' process' → logprob: -18.01416778564453
    10. 'solve' → logprob: -18.76416778564453

Token 510: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.7120533811976202e-05
    2. ' ():' → logprob: -11.250017166137695
    3. '():
' → logprob: -13.000017166137695
    4. '()' → logprob: -13.250017166137695
    5. '():
' → logprob: -17.750017166137695
    6. '(' → logprob: -18.625017166137695
    7. ':' → logprob: -19.750017166137695
    8. '()>' → logprob: -19.750017166137695
    9. '().' → logprob: -19.750017166137695
    10. '():

' → logprob: -20.125017166137695

Token 511: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01077177468687296
    2. 'input' → logprob: -4.760771751403809
    3. ' input' → logprob: -6.260771751403809
    4. 'import' → logprob: -8.385771751403809
    5. '   ' → logprob: -11.635771751403809
    6. '	input' → logprob: -12.260771751403809
    7. '_input' → logprob: -14.135771751403809
    8. ' import' → logprob: -14.385771751403809
    9. 'reader' → logprob: -14.510771751403809
    10. ',input' → logprob: -14.760771751403809

Token 512: ' reader' (ID: 10958)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14816538989543915
    2. ' input' → logprob: -2.523165464401245
    3. 'import' → logprob: -3.148165464401245
    4. '   ' → logprob: -4.273165225982666
    5. ' import' → logprob: -7.398165225982666
    6. 'ir' → logprob: -11.523165702819824
    7. 'reader' (adapté à ' reader') → logprob: -11.773165702819824
    8. ' ' → logprob: -13.148165702819824
    9. 'from' → logprob: -13.273165702819824
    10. '	input' → logprob: -14.023165702819824

Token 513: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196970492601395
    2. '=' → logprob: -2.811969757080078
    3. ' =
' → logprob: -14.186969757080078
    4. '   ' → logprob: -14.311969757080078
    5. ' ' → logprob: -14.811969757080078
    6. '  ' → logprob: -16.061969757080078
    7. 'import' → logprob: -16.436969757080078
    8. '=input' → logprob: -16.936969757080078
    9. '_reader' → logprob: -17.436969757080078
    10. '=
' → logprob: -17.686969757080078

Token 514: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.048587486147880554
    2. ' Input' → logprob: -3.0485875606536865
    3. 'input' → logprob: -16.423587799072266
    4. '	Input' → logprob: -18.673587799072266
    5. ' input' → logprob: -19.548587799072266
    6. '<Input' → logprob: -20.298587799072266
    7. '_input' → logprob: -20.798587799072266
    8. '_Input' → logprob: -21.173587799072266
    9. '\Input' → logprob: -21.673587799072266
    10. 'INPUT' → logprob: -22.298587799072266

Token 515: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: 0.0
    2. 'Read' → logprob: -19.125
    3. 'Re' → logprob: -20.75
    4. ' Reader' → logprob: -21.125
    5. 'reader' → logprob: -21.125
    6. 'Readers' → logprob: -21.75
    7. '_reader' → logprob: -21.875
    8. 'Reading' → logprob: -23.0
    9. 'Receiver' → logprob: -23.125
    10. 'Writer' → logprob: -23.125

Token 516: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04899517446756363
    2. '()
' → logprob: -3.04899525642395
    3. '   ' → logprob: -7.923995018005371
    4. '())' → logprob: -11.423995018005371
    5. '()
' → logprob: -11.548995018005371
    6. ')' → logprob: -11.923995018005371
    7. '()\' → logprob: -12.673995018005371
    8. 'def' → logprob: -12.798995018005371
    9. '();' → logprob: -13.048995018005371
    10. '()

' → logprob: -13.548995018005371

Token 517: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12899422645568848
    2. 'solver' → logprob: -2.1289942264556885
    3. ' solver' → logprob: -6.378993988037109
    4. 'problem' → logprob: -8.75399398803711
    5. 'results' → logprob: -9.50399398803711
    6. '_solver' → logprob: -9.87899398803711
    7. '```' → logprob: -11.00399398803711
    8. ' problem' → logprob: -11.50399398803711
    9. 's' → logprob: -11.50399398803711
    10. 'solution' → logprob: -12.00399398803711

Token 518: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.00011975488450843841
    2. ' solver' → logprob: -9.375120162963867
    3. 'problem' → logprob: -10.375120162963867
    4. '   ' → logprob: -13.125120162963867
    5. 'solution' → logprob: -13.750120162963867
    6. 'sol' → logprob: -15.375120162963867
    7. 'resolver' → logprob: -16.125120162963867
    8. ' problem' → logprob: -16.375120162963867
    9. 's' → logprob: -16.750120162963867
    10. 'results' → logprob: -17.500120162963867

Token 519: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002098633674904704
    2. '=' → logprob: -6.502098560333252
    3. '.solve' → logprob: -7.502098560333252
    4. '.' → logprob: -10.12709903717041
    5. '.s' → logprob: -13.00209903717041
    6. '=s' → logprob: -14.25209903717041
    7. '.=' → logprob: -15.12709903717041
    8. '<|end|>' → logprob: -15.25209903717041
    9. ' ' → logprob: -16.002098083496094
    10. '.perform' → logprob: -16.127098083496094

Token 520: ' Problem' (ID: 26113)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -0.0024756586644798517
    2. ' Problem' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.87747573852539
    4. ' problem' → logprob: -20.75247573852539
    5. '_problem' → logprob: -22.00247573852539
    6. ' ' → logprob: -22.50247573852539
    7. '
' → logprob: -22.50247573852539
    8. 'Problems' → logprob: -22.87747573852539
    9. 'problem' → logprob: -23.25247573852539
    10. 'Proble' → logprob: -23.25247573852539

Token 521: 'ES' (ID: 1759)
  Prédit: 'ES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ES' → logprob: -3.128163257315464e-07
    2. 'E' → logprob: -15.75
    3. ' ES' → logprob: -17.125
    4. '   ' → logprob: -17.5
    5. '_ES' → logprob: -18.375
    6. 'Es' → logprob: -19.125
    7. 'es' → logprob: -19.5
    8. 'Solver' → logprob: -19.5
    9. '```' → logprob: -19.875
    10. '

' → logprob: -19.875

Token 522: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -2.2200749754119897e-06
    2. 'solver' → logprob: -14.125001907348633
    3. 'Solver' → logprob: -14.250001907348633
    4. 'over' → logprob: -15.000001907348633
    5. 'olve' → logprob: -15.125001907348633
    6. 'ol' → logprob: -16.125001907348633
    7. 'oler' → logprob: -16.125001907348633
    8. 'erver' → logprob: -18.000001907348633
    9. 'older' → logprob: -19.125001907348633
    10. 'volver' → logprob: -19.250001907348633

Token 523: '(reader' (ID: 49220)
  Prédit: '(reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reader' → logprob: -0.0001310719089815393
    2. '(' → logprob: -9.125130653381348
    3. '   ' → logprob: -11.000130653381348
    4. '(
' → logprob: -12.875130653381348
    5. 'reader' → logprob: -13.375130653381348
    6. '(input' → logprob: -14.500130653381348
    7. '(read' → logprob: -15.000130653381348
    8. '(writer' → logprob: -16.500131607055664
    9. '(re' → logprob: -16.500131607055664
    10. '(receiver' → logprob: -16.500131607055664

Token 524: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.28743934631347656
    2. ')' → logprob: -1.4124393463134766
    3. '()
' → logprob: -5.787439346313477
    4. '   ' → logprob: -6.162439346313477
    5. '()' → logprob: -7.037439346313477
    6. '())
' → logprob: -8.912439346313477
    7. ')
' → logprob: -10.287439346313477
    8. '
' → logprob: -10.787439346313477
    9. ' ' → logprob: -11.662439346313477
    10. ' )
' → logprob: -11.912439346313477

Token 525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12809889018535614
    2. 'results' → logprob: -2.128098964691162
    3. ' results' → logprob: -7.003098964691162
    4. '```' → logprob: -9.003098487854004
    5. 'result' → logprob: -9.628098487854004
    6. '	results' → logprob: -10.378098487854004
    7. '
' → logprob: -10.878098487854004
    8. 'for' → logprob: -11.378098487854004
    9. '    
' → logprob: -12.003098487854004
    10. '_results' → logprob: -13.753098487854004

Token 526: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.00011224505578866228
    2. ' results' → logprob: -9.250112533569336
    3. 'for' → logprob: -11.500112533569336
    4. 'result' → logprob: -12.250112533569336
    5. '   ' → logprob: -14.375112533569336
    6. 'outputs' → logprob: -15.375112533569336
    7. 'answers' → logprob: -15.500112533569336
    8. 'res' → logprob: -15.875112533569336
    9. '	results' → logprob: -17.750112533569336
    10. 'output' → logprob: -18.750112533569336

Token 527: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055033937096595764
    2. '=' → logprob: -3.1800339221954346
    3. '.append' → logprob: -4.805034160614014
    4. '.extend' → logprob: -6.180034160614014
    5. '.' → logprob: -6.430034160614014
    6. '<|end|>' → logprob: -11.180033683776855
    7. '[:]' → logprob: -11.305033683776855
    8. '.=' → logprob: -11.680033683776855
    9. ')' → logprob: -11.805033683776855
    10. '   ' → logprob: -11.930033683776855

Token 528: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.07889056205749512
    2. ' solver' → logprob: -2.578890562057495
    3. 'sol' → logprob: -14.203890800476074
    4. '_solver' → logprob: -16.578889846801758
    5. 'solve' → logprob: -17.953889846801758
    6. 'Solver' → logprob: -18.828889846801758
    7. '   ' → logprob: -18.828889846801758
    8. ' ' → logprob: -19.453889846801758
    9. ' sol' → logprob: -19.703889846801758
    10. 's' → logprob: -19.703889846801758

Token 529: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -12.375004768371582
    3. '.sol' → logprob: -15.750004768371582
    4. ' .' → logprob: -15.875004768371582
    5. 'solve' → logprob: -16.750003814697266
    6. '.run' → logprob: -18.750003814697266
    7. '.s' → logprob: -18.750003814697266
    8. '.save' → logprob: -19.500003814697266
    9. '.resolve' → logprob: -20.375003814697266
    10. ' solve' → logprob: -20.750003814697266

Token 530: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6901848912239075
    2. '   ' → logprob: -1.1901848316192627
    3. '
' → logprob: -2.1901848316192627
    4. '()' → logprob: -2.5651848316192627
    5. 'for' → logprob: -5.440185070037842
    6. ' for' → logprob: -6.940185070037842
    7. '    
' → logprob: -9.440184593200684
    8. '(' → logprob: -10.190184593200684
    9. '	for' → logprob: -10.190184593200684
    10. '```' → logprob: -10.690184593200684

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005241821985691786
    2. 'for' → logprob: -5.255241870880127
    3. ' for' → logprob: -12.005241394042969
    4. '
' → logprob: -13.630241394042969
    5. '	for' → logprob: -14.755241394042969
    6. '```' → logprob: -15.880241394042969
    7. '    
' → logprob: -16.00524139404297
    8. '       ' → logprob: -17.88024139404297
    9. '   ' → logprob: -20.25524139404297
    10. '`' → logprob: -20.25524139404297

Token 532: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.404745439183898e-05
    2. '   ' → logprob: -10.50003433227539
    3. ' for' → logprob: -12.00003433227539
    4. '
' → logprob: -15.75003433227539
    5. 'print' (adapté à ' print') → logprob: -16.87503433227539
    6. '	for' → logprob: -17.62503433227539
    7. '```' → logprob: -19.37503433227539
    8. 'import' → logprob: -19.87503433227539
    9. 'from' → logprob: -21.37503433227539
    10. '    
' → logprob: -21.37503433227539

Token 533: '('\' (ID: 24345)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.7205423712730408
    2. '('\' → logprob: -0.7205423712730408
    3. '(' → logprob: -4.0955424308776855
    4. '("\' → logprob: -4.8455424308776855
    5. '(results' → logprob: -6.2205424308776855
    6. '()' → logprob: -8.470541954040527
    7. '(len' → logprob: -8.970541954040527
    8. '(*(' → logprob: -9.720541954040527
    9. '(*)' → logprob: -9.970541954040527
    10. 'results' → logprob: -10.595541954040527

Token 534: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. '\n' → logprob: -15.0
    3. ''.' → logprob: -17.75
    4. '
' → logprob: -18.5
    5. ' n' → logprob: -19.75
    6. '``' → logprob: -21.0
    7. '
' → logprob: -21.125
    8. '12' → logprob: -21.5
    9. '```' → logprob: -21.5
    10. 'join' → logprob: -21.875

Token 535: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.11253612488508224
    2. '.join' → logprob: -2.3625361919403076
    3. 'join' → logprob: -5.2375359535217285
    4. '".' → logprob: -5.4875359535217285
    5. '.' → logprob: -5.9875359535217285
    6. ').' → logprob: -8.612536430358887
    7. '''.' → logprob: -10.237536430358887
    8. ' .' → logprob: -10.612536430358887
    9. '`.' → logprob: -11.112536430358887
    10. 'print' → logprob: -11.237536430358887

Token 536: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.512236498361744e-07
    2. 'j' → logprob: -15.375000953674316
    3. 'jo' → logprob: -16.0
    4. 'print' → logprob: -16.5
    5. ' join' → logprob: -17.0
    6. '```' → logprob: -17.125
    7. ''.' → logprob: -19.5
    8. '.join' → logprob: -20.0
    9. '
' → logprob: -20.25
    10. ')' → logprob: -20.25

Token 537: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0054009538143873215
    2. '(str' → logprob: -5.255401134490967
    3. 'map' → logprob: -8.755400657653809
    4. 'str' → logprob: -12.630400657653809
    5. '([' → logprob: -12.755400657653809
    6. '(' → logprob: -13.005400657653809
    7. ' map' → logprob: -14.880400657653809
    8. '```' → logprob: -15.630400657653809
    9. '	map' → logprob: -15.880400657653809
    10. ')' → logprob: -15.880400657653809

Token 538: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00010044389637187123
    2. 'str' → logprob: -9.250100135803223
    3. '(' → logprob: -13.250100135803223
    4. '=str' → logprob: -14.125100135803223
    5. ' str' → logprob: -14.500100135803223
    6. '[str' → logprob: -14.625100135803223
    7. '```' → logprob: -14.625100135803223
    8. ')' → logprob: -15.250100135803223
    9. '   ' → logprob: -16.25010108947754
    10. '	str' → logprob: -17.00010108947754

Token 539: ',' (ID: 11)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.2021716982126236
    2. ',' → logprob: -1.7021716833114624
    3. 'results' → logprob: -7.202171802520752
    4. ' results' → logprob: -12.202171325683594
    5. '	results' → logprob: -12.702171325683594
    6. '(' → logprob: -12.952171325683594
    7. ' ,' → logprob: -14.202171325683594
    8. 'Results' → logprob: -14.327171325683594
    9. '
' → logprob: -15.077171325683594
    10. ' (' → logprob: -15.327171325683594

Token 540: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -2.165027217415627e-05
    2. ' results' → logprob: -10.750021934509277
    3. '(results' → logprob: -16.50002098083496
    4. '	results' → logprob: -20.75002098083496
    5. '.results' → logprob: -22.87502098083496
    6. 'Results' → logprob: -24.50002098083496
    7. 'result' → logprob: -25.62502098083496
    8. '_results' → logprob: -25.75002098083496
    9. '
' → logprob: -26.12502098083496
    10. '   ' → logprob: -26.62502098083496

Token 541: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.38690000772476196
    2. '))' → logprob: -1.1368999481201172
    3. ')' → logprob: -10.511899948120117
    4. '))))' → logprob: -13.511899948120117
    5. ')))
' → logprob: -16.386899948120117
    6. '   ' → logprob: -16.511899948120117
    7. '()))' → logprob: -16.636899948120117
    8. '}))' → logprob: -16.636899948120117
    9. '))
' → logprob: -16.886899948120117
    10. ')));' → logprob: -17.386899948120117

Token 542: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00045438710367307067
    2. '
' → logprob: -7.750454425811768
    3. '```' → logprob: -11.25045394897461
    4. ' if' → logprob: -12.12545394897461
    5. '<|end|>' → logprob: -12.75045394897461
    6. '\n' → logprob: -13.75045394897461
    7. '#' → logprob: -15.12545394897461
    8. '\' → logprob: -15.25045394897461
    9. '  
' → logprob: -15.37545394897461
    10. '    
' → logprob: -15.50045394897461

Token 543: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007799914572387934
    2. '__' → logprob: -4.882800102233887
    3. ' ' → logprob: -9.007800102233887
    4. '_' → logprob: -10.132800102233887
    5. ' ' → logprob: -11.757800102233887
    6. '_name' → logprob: -12.007800102233887
    7. ' ' → logprob: -12.132800102233887
    8. ' _' → logprob: -13.257800102233887
    9. ' ‌' → logprob: -13.257800102233887
    10. ' name' → logprob: -13.382800102233887

Token 544: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009425500174984336
    2. '==' → logprob: -7.500942707061768
    3. ' ==' → logprob: -8.12594223022461
    4. '__.__' → logprob: -10.50094223022461
    5. 'name' → logprob: -11.00094223022461
    6. ' __' → logprob: -11.12594223022461
    7. '.__' → logprob: -11.50094223022461
    8. '[' → logprob: -11.75094223022461
    9. '__.' → logprob: -12.87594223022461
    10. '__[' → logprob: -13.00094223022461

Token 545: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.5690089639974758e-05
    2. '==' → logprob: -11.250015258789062
    3. '__.__' → logprob: -13.500015258789062
    4. ' ==' → logprob: -14.125015258789062
    5. '__.' → logprob: -15.125015258789062
    6. '___' → logprob: -16.375015258789062
    7. '____' → logprob: -17.000015258789062
    8. '=="' → logprob: -17.375015258789062
    9. '__
' → logprob: -17.500015258789062
    10. '__('' → logprob: -17.625015258789062

Token 546: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00022833107504993677
    2. '==' → logprob: -8.875227928161621
    3. ' ==' → logprob: -9.375227928161621
    4. '=="' → logprob: -13.250227928161621
    5. '__.__' → logprob: -14.250227928161621
    6. '___' → logprob: -15.125227928161621
    7. '__
' → logprob: -15.375227928161621
    8. '_' → logprob: -15.750227928161621
    9. ' __' → logprob: -16.000228881835938
    10. '____' → logprob: -16.125228881835938

Token 547: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008619185537099838
    2. ''' → logprob: -4.75861930847168
    3. ' "__' → logprob: -12.75861930847168
    4. '__' → logprob: -13.50861930847168
    5. '"name' → logprob: -16.38361930847168
    6. '"user' → logprob: -16.38361930847168
    7. ' '__' → logprob: -17.13361930847168
    8. 'main' → logprob: -17.25861930847168
    9. ''"' → logprob: -17.50861930847168
    10. '"'' → logprob: -17.88361930847168

Token 548: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.842555426876061e-06
    2. 'name' → logprob: -12.250004768371582
    3. '_main' → logprob: -17.2500057220459
    4. '__' → logprob: -18.0000057220459
    5. 'm' → logprob: -20.1250057220459
    6. 'ma' → logprob: -20.2500057220459
    7. ' main' → logprob: -20.5000057220459
    8. 'mail' → logprob: -22.5000057220459
    9. '	main' → logprob: -22.6250057220459
    10. 'maine' → logprob: -22.8750057220459

Token 549: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.023252932354807854
    2. '__' → logprob: -3.7732529640197754
    3. '__":
' → logprob: -11.898252487182617
    4. '_' → logprob: -14.898252487182617
    5. '__:' → logprob: -15.398252487182617
    6. '__
' → logprob: -18.148252487182617
    7. '___' → logprob: -18.273252487182617
    8. '__.' → logprob: -18.648252487182617
    9. '__('' → logprob: -18.648252487182617
    10. '__
' → logprob: -19.148252487182617

Token 550: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4430578351020813
    2. '__' → logprob: -1.0680577754974365
    3. '_main' → logprob: -5.318058013916016
    4. ' main' → logprob: -5.318058013916016
    5. ''' → logprob: -6.318058013916016
    6. '_' → logprob: -6.943058013916016
    7. '   ' → logprob: -7.193058013916016
    8. '__':
' → logprob: -8.068058013916016
    9. '	main' → logprob: -9.443058013916016
    10. '____' → logprob: -9.568058013916016

Token 551: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '   ' → logprob: -17.625
    4. '	main' → logprob: -18.5
    5. 'import' → logprob: -20.875
    6. '(main' → logprob: -22.375
    7. '.main' → logprob: -22.75
    8. '_main' → logprob: -23.0
    9. '  ' → logprob: -23.75
    10. 'm' → logprob: -24.0

Token 552: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 550
Tokens correctement prédits (1ère position, stricte): 287
Tokens correctement prédits (1ère position, avec adaptation): 317
Tokens correctement prédits (top 10): 502
Précision stricte (1ère position): 52.18%
Précision adaptée (1ère position): 57.64%
Précision (top 10): 91.27%
================================================================================
