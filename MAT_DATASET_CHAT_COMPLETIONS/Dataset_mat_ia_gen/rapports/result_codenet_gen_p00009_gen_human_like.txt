================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def sieve(max_n):
    is_prime = [True] * (max_n + 1)
    is_prime[0] = False
    is_prime[1] = False
    for i in range(2, int(max_n**0.5) + 1):
        if is_prime[i]:
            for j in range(i*i, max_n + 1, i):
                is_prime[j] = False
    return is_prime

def main():
    numbers = []
    max_n = 0
    for line in sys.stdin:
        line = line.strip()
        if not line:
            continue
        n = int(line)
        numbers.append(n)
        if n > max_n:
            max_n = n

    primes = sieve(max_n)
    prefix_counts = [0] * (max_n + 1)
    count = 0
    for i in range(max_n + 1):
        if primes[i]:
            count += 1
        prefix_counts[i] = count

    for n in numbers:
        print(prefix_counts[n])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' sieve' (ID: 142781)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013850589282810688
    2. ' space' → logprob: -6.138850688934326
    3. ' sys' → logprob: -6.888850688934326
    4. ' ' → logprob: -6.888850688934326
    5. '<|end|>' → logprob: -6.888850688934326
    6. ' main' → logprob: -7.013850688934326
    7. ' process' → logprob: -7.138850688934326
    8. '  ' → logprob: -7.138850688934326
    9. '_' → logprob: -7.263850688934326
    10. ' a' → logprob: -7.388850688934326

Token 5: '(max' (ID: 17178)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28254854679107666
    2. '(' → logprob: -1.4075485467910767
    3. ' (' → logprob: -7.532548427581787
    4. '_s' → logprob: -8.407548904418945
    5. ')' → logprob: -8.907548904418945
    6. '_(' → logprob: -9.032548904418945
    7. '(s' → logprob: -10.032548904418945
    8. '```' → logprob: -10.032548904418945
    9. '(_' → logprob: -10.407548904418945
    10. '(_)' → logprob: -10.657548904418945

Token 6: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.0228558778762817
    2. '):' → logprob: -1.0228558778762817
    3. '_number' → logprob: -2.522855758666992
    4. ' ):' → logprob: -2.647855758666992
    5. '_' → logprob: -2.897855758666992
    6. '_num' → logprob: -3.772855758666992
    7. ')' → logprob: -3.772855758666992
    8. ' )' → logprob: -4.772855758666992
    9. '_value' → logprob: -5.022855758666992
    10. '_val' → logprob: -5.272855758666992

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006775761488825083
    2. ')' → logprob: -5.256775856018066
    3. ':' → logprob: -7.381775856018066
    4. '_' → logprob: -7.631775856018066
    5. ' ):' → logprob: -8.256775856018066
    6. '):
' → logprob: -9.506775856018066
    7. '=' → logprob: -9.881775856018066
    8. ',' → logprob: -10.756775856018066
    9. '_:' → logprob: -12.631775856018066
    10. ' :' → logprob: -12.881775856018066

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031918513122946024
    2. ':
' → logprob: -6.878191947937012
    3. '   ' → logprob: -6.878191947937012
    4. '():' → logprob: -7.753191947937012
    5. '```' → logprob: -9.003191947937012
    6. '(' → logprob: -9.503191947937012
    7. '":' → logprob: -9.628191947937012
    8. ' :' → logprob: -9.628191947937012
    9. '`:' → logprob: -9.878191947937012
    10. '):' → logprob: -10.128191947937012

Token 9: ' is' (ID: 382)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.5953400135040283
    2. '   ' → logprob: -1.3453400135040283
    3. ' sieve' → logprob: -2.8453400135040283
    4. 'pr' → logprob: -3.5953400135040283
    5. ' numbers' → logprob: -4.470339775085449
    6. 'n' → logprob: -4.470339775085449
    7. ' n' → logprob: -4.470339775085449
    8. ' is' → logprob: -4.595339775085449
    9. '```' → logprob: -4.595339775085449
    10. '    ' → logprob: -4.845339775085449

Token 10: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.4769256114959717
    2. '_' → logprob: -0.9769256114959717
    3. ' _' → logprob: -5.976925849914551
    4. ' ' → logprob: -8.47692584991455
    5. 'prime' → logprob: -10.35192584991455
    6. '_valid' → logprob: -11.72692584991455
    7. '_p' → logprob: -11.72692584991455
    8. '_pr' → logprob: -11.97692584991455
    9. '   ' → logprob: -12.10192584991455
    10. ' prime' → logprob: -12.35192584991455

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014102858491241932
    2. '=' → logprob: -4.764102935791016
    3. ' =' → logprob: -5.639102935791016
    4. '=[' → logprob: -7.139102935791016
    5. '_' → logprob: -8.014102935791016
    6. '[]' → logprob: -8.264102935791016
    7. '[:]' → logprob: -8.514102935791016
    8. '```' → logprob: -9.389102935791016
    9. '[i' → logprob: -9.639102935791016
    10. '[...]' → logprob: -10.264102935791016

Token 12: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12696947157382965
    2. ' [' → logprob: -2.126969575881958
    3. ' ' → logprob: -11.876969337463379
    4. '[int' → logprob: -12.001969337463379
    5. '[s' → logprob: -12.376969337463379
    6. '[n' → logprob: -12.501969337463379
    7. '[max' → logprob: -12.501969337463379
    8. '[start' → logprob: -13.126969337463379
    9. '[len' → logprob: -13.626969337463379
    10. '[i' → logprob: -13.626969337463379

Token 13: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5759401321411133
    2. ' True' → logprob: -0.8259401321411133
    3. '(True' → logprob: -14.575940132141113
    4. 'False' → logprob: -15.700940132141113
    5. '   ' → logprob: -16.450939178466797
    6. ' False' → logprob: -19.700939178466797
    7. '=True' → logprob: -20.700939178466797
    8. '    ' → logprob: -20.825939178466797
    9. '.True' → logprob: -21.575939178466797
    10. '1' → logprob: -22.200939178466797

Token 14: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5792027711868286
    2. ' for' → logprob: -0.8292027711868286
    3. 'for' → logprob: -6.579202651977539
    4. ')' → logprob: -7.704202651977539
    5. ' ]' → logprob: -7.704202651977539
    6. ']*' → logprob: -7.829202651977539
    7. ',' → logprob: -7.954202651977539
    8. ' ' → logprob: -9.704202651977539
    9. '   ' → logprob: -10.079202651977539
    10. ']*(' → logprob: -10.579202651977539

Token 15: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6649383902549744
    2. ' for' → logprob: -1.4149384498596191
    3. ']' → logprob: -1.7899384498596191
    4. ',' → logprob: -3.039938449859619
    5. '(' → logprob: -4.789938449859619
    6. 'for' → logprob: -5.039938449859619
    7. ')' → logprob: -5.914938449859619
    8. ' ' → logprob: -6.039938449859619
    9. '<|end|>' → logprob: -6.039938449859619
    10. ' ]' → logprob: -6.164938449859619

Token 16: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.04996589198708534
    2. ' (' → logprob: -3.0499658584594727
    3. ' max' → logprob: -7.049965858459473
    4. 'max' → logprob: -7.674965858459473
    5. '(' → logprob: -10.049965858459473
    6. '[max' → logprob: -13.549965858459473
    7. ' ' → logprob: -14.549965858459473
    8. ',max' → logprob: -15.174965858459473
    9. '(len' → logprob: -16.17496681213379
    10. '(m' → logprob: -16.29996681213379

Token 17: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.006398207973688841
    2. ' max' → logprob: -5.2563982009887695
    3. '(max' → logprob: -6.7563982009887695
    4. ' (' → logprob: -16.006399154663086
    5. '   ' → logprob: -16.631399154663086
    6. ' ' → logprob: -17.256399154663086
    7. '[max' → logprob: -17.631399154663086
    8. '	max' → logprob: -17.631399154663086
    9. ',max' → logprob: -18.256399154663086
    10. '(' → logprob: -18.756399154663086

Token 18: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -2.951771421066951e-05
    2. '_' → logprob: -10.625029563903809
    3. '+' → logprob: -12.625029563903809
    4. ' _' → logprob: -14.125029563903809
    5. '_i' → logprob: -14.750029563903809
    6. '```' → logprob: -15.750029563903809
    7. '_s' → logprob: -16.250028610229492
    8. ')_' → logprob: -16.500028610229492
    9. ' +' → logprob: -16.625028610229492
    10. '_N' → logprob: -16.625028610229492

Token 19: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009761401452124119
    2. ' +' → logprob: -4.634761333465576
    3. ')' → logprob: -12.384761810302734
    4. ' ' → logprob: -14.759761810302734
    5. '+)' → logprob: -14.884761810302734
    6. '+
' → logprob: -15.884761810302734
    7. ' plus' → logprob: -16.259761810302734
    8. ' )' → logprob: -16.509761810302734
    9. ')+' → logprob: -16.759761810302734
    10. '```' → logprob: -17.134761810302734

Token 20: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975187823176384
    2. ' ' → logprob: -3.529751777648926
    3. '```' → logprob: -14.404751777648926
    4. '2' → logprob: -15.529751777648926
    5. '  ' → logprob: -15.904751777648926
    6. ')' → logprob: -15.967251777648926
    7. '   ' → logprob: -16.029752731323242
    8. ' ' → logprob: -16.467252731323242
    9. '0' → logprob: -17.904752731323242
    10. '7' → logprob: -17.967252731323242

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '```' → logprob: -17.000123977661133
    4. '   ' → logprob: -17.250123977661133
    5. ')' → logprob: -17.750123977661133
    6. '  ' → logprob: -18.000123977661133
    7. '１' → logprob: -19.125123977661133
    8. ' ' → logprob: -19.625123977661133
    9. '2' → logprob: -19.687623977661133
    10. '7' → logprob: -20.062623977661133

Token 22: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008177272975444794
    2. ')
' → logprob: -7.125817775726318
    3. '[' → logprob: -12.75081729888916
    4. ')
' → logprob: -12.75081729888916
    5. '   ' → logprob: -13.00081729888916
    6. ' )' → logprob: -13.12581729888916
    7. ']' → logprob: -14.12581729888916
    8. ')\' → logprob: -14.75081729888916
    9. ')

' → logprob: -15.12581729888916
    10. ' ' → logprob: -15.37581729888916

Token 23: '   ' (ID: 271)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9629595279693604
    2. 'is' → logprob: -1.0879595279693604
    3. '   ' → logprob: -1.3379595279693604
    4. ' for' → logprob: -4.462959289550781
    5. 'for' → logprob: -5.962959289550781
    6. '
' → logprob: -6.712959289550781
    7. '\n' → logprob: -6.712959289550781
    8. '    
' → logprob: -6.962959289550781
    9. ' 
' → logprob: -8.337959289550781
    10. '```' → logprob: -8.337959289550781

Token 24: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.03444601222872734
    2. ' is' → logprob: -3.4094460010528564
    3. '   ' → logprob: -7.7844462394714355
    4. ' for' → logprob: -8.534445762634277
    5. 'for' → logprob: -9.034445762634277
    6. ' ' → logprob: -10.409445762634277
    7. 'i' → logprob: -11.784445762634277
    8. '```' → logprob: -11.784445762634277
    9. '    
' → logprob: -11.909445762634277
    10. '\n' → logprob: -12.909445762634277

Token 25: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.005318781826645136
    2. '_' → logprob: -5.255318641662598
    3. ' _' → logprob: -9.755318641662598
    4. '_pr' → logprob: -10.755318641662598
    5. '_Pr' → logprob: -13.505318641662598
    6. 'prime' → logprob: -13.880318641662598
    7. '_p' → logprob: -14.755318641662598
    8. '_false' → logprob: -15.005318641662598
    9. '_prior' → logprob: -15.130318641662598
    10. '_true' → logprob: -15.380318641662598

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7014437364414334e-05
    2. '[:]' → logprob: -10.87502670288086
    3. '=' → logprob: -13.37502670288086
    4. ' =' → logprob: -13.62502670288086
    5. '[]' → logprob: -13.62502670288086
    6. '```' → logprob: -14.00002670288086
    7. ']' → logprob: -14.37502670288086
    8. '\[' → logprob: -14.50002670288086
    9. '[...]' → logprob: -14.62502670288086
    10. ' ' → logprob: -14.75002670288086

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. '1' → logprob: -14.875012397766113
    4. '2' → logprob: -16.625011444091797
    5. '   ' → logprob: -16.625011444091797
    6. ':' → logprob: -17.000011444091797
    7. '```' → logprob: -17.000011444091797
    8. '  ' → logprob: -17.750011444091797
    9. ')' → logprob: -18.125011444091797
    10. '۰' → logprob: -18.250011444091797

Token 28: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016218038217630237
    2. ' ]' → logprob: -8.750162124633789
    3. ']=' → logprob: -12.625162124633789
    4. '=' → logprob: -14.875162124633789
    5. ')' → logprob: -16.87516212463379
    6. '']' → logprob: -17.25016212463379
    7. ']==' → logprob: -17.75016212463379
    8. '],' → logprob: -18.00016212463379
    9. ' =' → logprob: -18.62516212463379
    10. ']

' → logprob: -18.62516212463379

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01253366470336914
    2. '=' → logprob: -4.387533664703369
    3. ' ==' → logprob: -11.012533187866211
    4. ' ' → logprob: -12.262533187866211
    5. ',' → logprob: -14.512533187866211
    6. '=False' → logprob: -14.637533187866211
    7. ' |=' → logprob: -14.637533187866211
    8. ' =
' → logprob: -14.637533187866211
    9. ' ,' → logprob: -15.387533187866211
    10. ' =)' → logprob: -15.387533187866211

Token 30: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.038042180240154266
    2. ' False' → logprob: -3.2880420684814453
    3. '(False' → logprob: -15.413042068481445
    4. 'is' → logprob: -15.538042068481445
    5. '=False' → logprob: -16.288042068481445
    6. '   ' → logprob: -16.663042068481445
    7. ' is' → logprob: -16.913042068481445
    8. '.False' → logprob: -18.163042068481445
    9. 'false' → logprob: -19.038042068481445
    10. ' ' → logprob: -19.038042068481445

Token 31: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027328675612807274
    2. '<|end|>' → logprob: -4.5273284912109375
    3. '
' → logprob: -4.9023284912109375
    4. '    
' → logprob: -5.2773284912109375
    5. ' is' → logprob: -7.0273284912109375
    6. 'is' → logprob: -7.1523284912109375
    7. '  
' → logprob: -7.2773284912109375
    8. ' 
' → logprob: -8.152328491210938
    9. '   
' → logprob: -8.152328491210938
    10. '<|end|>' → logprob: -8.652328491210938

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002875369042158127
    2. '<|end|>' → logprob: -6.502875328063965
    3. '    
' → logprob: -7.377875328063965
    4. ' is' → logprob: -8.627875328063965
    5. 'is' → logprob: -8.752875328063965
    6. '```' → logprob: -9.627875328063965
    7. '<|end|>' → logprob: -9.752875328063965
    8. '  
' → logprob: -9.877875328063965
    9. '  ' → logprob: -10.002875328063965
    10. ' ' → logprob: -10.127875328063965

Token 33: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.0018297502538189292
    2. ' is' → logprob: -6.376829624176025
    3. '   ' → logprob: -9.001830101013184
    4. ' ' → logprob: -13.126830101013184
    5. '```' → logprob: -13.751830101013184
    6. '1' → logprob: -14.626830101013184
    7. '<|end|>' → logprob: -15.251830101013184
    8. '  ' → logprob: -15.501830101013184
    9. '0' → logprob: -15.501830101013184
    10. '	is' → logprob: -16.751829147338867

Token 34: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0002394170151092112
    2. '_' → logprob: -8.750239372253418
    3. '[_' → logprob: -10.750239372253418
    4. '[' → logprob: -11.000239372253418
    5. '_pr' → logprob: -11.125239372253418
    6. '_[' → logprob: -11.875239372253418
    7. '_p' → logprob: -12.250239372253418
    8. ' _' → logprob: -12.750239372253418
    9. '._' → logprob: -13.000239372253418
    10. 'prime' → logprob: -13.500239372253418

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -17.0
    3. '[
' → logprob: -17.625
    4. '```' → logprob: -18.875
    5. '\[' → logprob: -18.875
    6. '1' → logprob: -19.25
    7. ' ' → logprob: -21.375
    8. '<|end|>' → logprob: -21.75
    9. '
' → logprob: -22.0
    10. '  ' → logprob: -22.375

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '[' → logprob: -16.125028610229492
    4. '   ' → logprob: -17.500028610229492
    5. '  ' → logprob: -17.750028610229492
    6. '۱' → logprob: -18.875028610229492
    7. ']' → logprob: -19.187528610229492
    8. '```' → logprob: -19.312528610229492
    9. '    ' → logprob: -19.375028610229492
    10. ')' → logprob: -19.812528610229492

Token 37: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003955224819947034
    2. ' ]' → logprob: -7.87539529800415
    3. '=' → logprob: -11.750395774841309
    4. ' =' → logprob: -12.125395774841309
    5. ']=' → logprob: -13.125395774841309
    6. ')' → logprob: -16.125394821166992
    7. ']
' → logprob: -16.875394821166992
    8. ' ' → logprob: -17.375394821166992
    9. '']' → logprob: -17.500394821166992
    10. '[' → logprob: -17.625394821166992

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004081724211573601
    2. '=' → logprob: -5.504081726074219
    3. ' =
' → logprob: -13.254081726074219
    4. ' ' → logprob: -13.504081726074219
    5. '[' → logprob: -17.00408172607422
    6. ' =)' → logprob: -17.25408172607422
    7. ' =
' → logprob: -17.50408172607422
    8. ']' → logprob: -17.50408172607422
    9. ' =[' → logprob: -17.87908172607422
    10. ' |=' → logprob: -18.12908172607422

Token 39: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5759395360946655
    2. 'False' → logprob: -0.8259395360946655
    3. '(False' → logprob: -16.700939178466797
    4. ' True' → logprob: -17.075939178466797
    5. '=False' → logprob: -17.325939178466797
    6. 'F' → logprob: -17.575939178466797
    7. '.False' → logprob: -18.200939178466797
    8. 'True' → logprob: -18.450939178466797
    9. ' ' → logprob: -19.075939178466797
    10. ' 
' → logprob: -19.950939178466797

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010774255730211735
    2. '\n' → logprob: -5.3857741355896
    3. '   ' → logprob: -5.5107741355896
    4. '    
' → logprob: -6.8857741355896
    5. ' 
' → logprob: -7.6357741355896
    6. '  
' → logprob: -9.135774612426758
    7. '' → logprob: -9.260774612426758
    8. '```' → logprob: -9.385774612426758
    9. '   
' → logprob: -9.635774612426758
    10. '
' → logprob: -9.635774612426758

Token 41: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38529691100120544
    2. '   ' → logprob: -1.3852969408035278
    3. '\n' → logprob: -3.6352968215942383
    4. '    
' → logprob: -3.8852968215942383
    5. ' for' → logprob: -4.885296821594238
    6. ' 
' → logprob: -5.135296821594238
    7. '```' → logprob: -5.260296821594238
    8. '  
' → logprob: -7.135296821594238
    9. '' → logprob: -7.260296821594238
    10. 'for' → logprob: -7.385296821594238

Token 42: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7456357479095459
    2. ' for' → logprob: -0.7456357479095459
    3. '
' → logprob: -3.745635747909546
    4. 'for' (adapté à ' for') → logprob: -4.120635986328125
    5. ' 
' → logprob: -4.870635986328125
    6. '    
' → logprob: -6.495635986328125
    7. '\n' → logprob: -6.870635986328125
    8. '```' → logprob: -7.745635986328125
    9. ' ' → logprob: -8.620635986328125
    10. 'n' → logprob: -9.245635986328125

Token 43: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18064109981060028
    2. ' ' → logprob: -1.8056410551071167
    3. 'i' → logprob: -7.055641174316406
    4. ' n' → logprob: -11.055641174316406
    5. ' _' → logprob: -12.430641174316406
    6. ' `' → logprob: -13.055641174316406
    7. '  ' → logprob: -13.180641174316406
    8. ' p' → logprob: -13.555641174316406
    9. 'n' → logprob: -13.680641174316406
    10. '_' → logprob: -13.930641174316406

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012646402465179563
    2. ' ' → logprob: -7.001264572143555
    3. 'in' → logprob: -8.001264572143555
    4. ' i' → logprob: -11.126264572143555
    5. '  ' → logprob: -13.876264572143555
    6. '2' → logprob: -14.376264572143555
    7. '	in' → logprob: -15.126264572143555
    8. '   ' → logprob: -15.251264572143555
    9. '1' → logprob: -15.501264572143555
    10. 'range' → logprob: -15.626264572143555

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008671064861118793
    2. 'range' → logprob: -4.758671283721924
    3. ' ' → logprob: -9.883670806884766
    4. '2' → logprob: -12.133670806884766
    5. '	range' → logprob: -16.508670806884766
    6. '(range' → logprob: -17.258670806884766
    7. '  ' → logprob: -17.383670806884766
    8. ' xrange' → logprob: -17.508670806884766
    9. '   ' → logprob: -18.008670806884766
    10. ' ra' → logprob: -19.758670806884766

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006354739889502525
    2. '2' → logprob: -8.000635147094727
    3. ' ' → logprob: -8.500635147094727
    4. ' (' → logprob: -9.250635147094727
    5. '(
' → logprob: -15.000635147094727
    6. '<|end|>' → logprob: -15.875635147094727
    7. '  ' → logprob: -17.375635147094727
    8. ')' → logprob: -18.375635147094727
    9. '()' → logprob: -18.625635147094727
    10. '   ' → logprob: -18.875635147094727

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.125030517578125
    4. '(' → logprob: -17.625030517578125
    5. '  ' → logprob: -18.875030517578125
    6. '```' → logprob: -18.875030517578125
    7. '    ' → logprob: -19.250030517578125
    8. '	' → logprob: -19.375030517578125
    9. '２' → logprob: -19.375030517578125
    10. '     ' → logprob: -20.125030517578125

Token 48: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.47518113255500793
    2. ',' → logprob: -0.9751811027526855
    3. ' ' → logprob: -6.9751811027526855
    4. ' )' → logprob: -9.475181579589844
    5. ')' → logprob: -10.100181579589844
    6. ' ,
' → logprob: -10.850181579589844
    7. ' ):' → logprob: -11.350181579589844
    8. '):' → logprob: -12.475181579589844
    9. '  ' → logprob: -12.850181579589844
    10. ' ),' → logprob: -13.100181579589844

Token 49: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06750913709402084
    2. 'int' → logprob: -2.817509174346924
    3. ' max' → logprob: -5.317509174346924
    4. 'max' → logprob: -7.442509174346924
    5. '   ' → logprob: -10.942508697509766
    6. ' ' → logprob: -12.067508697509766
    7. '  ' → logprob: -12.817508697509766
    8. '    ' → logprob: -13.067508697509766
    9. '	int' → logprob: -13.192508697509766
    10. '(int' → logprob: -13.692508697509766

Token 50: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25333505868911743
    2. '(max' → logprob: -1.5033349990844727
    3. '(s' → logprob: -6.878334999084473
    4. '(math' → logprob: -8.878334999084473
    5. '((' → logprob: -9.378334999084473
    6. '(i' → logprob: -10.003334999084473
    7. '(
' → logprob: -10.378334999084473
    8. '<|end|>' → logprob: -10.753334999084473
    9. '(pow' → logprob: -11.503334999084473
    10. 'max' → logprob: -11.878334999084473

Token 51: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.23484918475151062
    2. '(' → logprob: -1.734849214553833
    3. '(max' → logprob: -4.234848976135254
    4. '_' → logprob: -4.609848976135254
    5. '(_' → logprob: -6.484848976135254
    6. '(n' → logprob: -6.609848976135254
    7. '_s' → logprob: -7.109848976135254
    8. ' ' → logprob: -7.234848976135254
    9. '_max' → logprob: -7.234848976135254
    10. ' _' → logprob: -7.359848976135254

Token 52: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.07921814173460007
    2. ' **' → logprob: -2.5792181491851807
    3. ' ' → logprob: -8.079217910766602
    4. '(' → logprob: -11.454217910766602
    5. '*' → logprob: -13.079217910766602
    6. ' (' → logprob: -13.829217910766602
    7. ''s' → logprob: -14.079217910766602
    8. ')' → logprob: -14.204217910766602
    9. '.sqrt' → logprob: -14.204217910766602
    10. ')**' → logprob: -14.579217910766602

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021093101531732827
    2. ' ' → logprob: -8.500210762023926
    3. '.' → logprob: -11.875210762023926
    4. '(' → logprob: -15.000210762023926
    5. ' ' → logprob: -16.875211715698242
    6. '   ' → logprob: -17.250211715698242
    7. '  ' → logprob: -18.125211715698242
    8. ' .' → logprob: -18.375211715698242
    9. ')' → logprob: -18.625211715698242
    10. '    ' → logprob: -18.750211715698242

Token 54: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.981667537620524e-06
    2. '5' → logprob: -14.250001907348633
    3. '0' → logprob: -14.500001907348633
    4. ' .' → logprob: -14.625001907348633
    5. '```' → logprob: -16.500001907348633
    6. ' ' → logprob: -16.875001907348633
    7. '1' → logprob: -17.125001907348633
    8. '2' → logprob: -17.500001907348633
    9. '25' → logprob: -17.562501907348633
    10. '6' → logprob: -17.875001907348633

Token 55: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.5928495486150496e-05
    2. '.' → logprob: -11.375016212463379
    3. '```' → logprob: -13.937516212463379
    4. '   ' → logprob: -14.437516212463379
    5. '0' → logprob: -15.125016212463379
    6. ' ' → logprob: -15.125016212463379
    7. '``' → logprob: -15.187516212463379
    8. '  ' → logprob: -15.437516212463379
    9. '

' → logprob: -15.687516212463379
    10. '`' → logprob: -16.250015258789062

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04867684096097946
    2. ')+' → logprob: -3.0486767292022705
    3. ' )' → logprob: -9.548676490783691
    4. '+' → logprob: -11.173676490783691
    5. '()' → logprob: -13.548676490783691
    6. ' +' → logprob: -13.798676490783691
    7. ' ' → logprob: -14.423676490783691
    8. '```' → logprob: -15.298676490783691
    9. '")+' → logprob: -15.923676490783691
    10. '+)' → logprob: -15.923676490783691

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20254404842853546
    2. ' +' → logprob: -1.702544093132019
    3. ')+' → logprob: -7.452544212341309
    4. ')' → logprob: -7.702544212341309
    5. ' ' → logprob: -9.577544212341309
    6. '()+' → logprob: -11.452544212341309
    7. '(' → logprob: -12.452544212341309
    8. ' )' → logprob: -12.702544212341309
    9. '()' → logprob: -13.202544212341309
    10. '   ' → logprob: -13.202544212341309

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002814624458551407
    2. ' ' → logprob: -5.877814769744873
    3. '2' → logprob: -11.752814292907715
    4. '   ' → logprob: -13.627814292907715
    5. '```' → logprob: -14.752814292907715
    6. '  ' → logprob: -15.502814292907715
    7. '    ' → logprob: -16.37781524658203
    8. ')' → logprob: -17.00281524658203
    9. '(' → logprob: -17.62781524658203
    10. ' )' → logprob: -17.87781524658203

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.8751802444458
    4. '```' → logprob: -17.000179290771484
    5. '  ' → logprob: -17.125179290771484
    6. '2' → logprob: -17.125179290771484
    7. '    ' → logprob: -18.500179290771484
    8. ')' → logprob: -19.000179290771484
    9. '     ' → logprob: -19.625179290771484
    10. '(' → logprob: -20.250179290771484

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007840604521334171
    2. ':' → logprob: -4.882840633392334
    3. ' ):' → logprob: -8.632840156555176
    4. ')' → logprob: -10.257840156555176
    5. '):
' → logprob: -11.007840156555176
    6. '   ' → logprob: -13.382840156555176
    7. '}:' → logprob: -14.257840156555176
    8. ',' → logprob: -14.757840156555176
    9. '():' → logprob: -14.757840156555176
    10. ':)' → logprob: -14.757840156555176

Token 61: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44787082076072693
    2. '       ' → logprob: -1.1978708505630493
    3. ':
' → logprob: -3.1978707313537598
    4. '   ' → logprob: -4.69787073135376
    5. '    ' → logprob: -5.94787073135376
    6. ' :
' → logprob: -6.07287073135376
    7. ' :' → logprob: -6.44787073135376
    8. '
' → logprob: -7.07287073135376
    9. ' ' → logprob: -7.69787073135376
    10. '<|end|>' → logprob: -7.82287073135376

Token 62: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1492958068847656
    2. '       ' → logprob: -1.5242958068847656
    3. ' if' → logprob: -1.7742958068847656
    4. '    ' → logprob: -2.2742958068847656
    5. 'if' (adapté à ' if') → logprob: -2.3992958068847656
    6. '   ' → logprob: -2.7742958068847656
    7. '<|end|>' → logprob: -4.149295806884766
    8. '        ' → logprob: -5.024295806884766
    9. ' 
' → logprob: -5.274295806884766
    10. '    
' → logprob: -6.149295806884766

Token 63: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00044830769184045494
    2. ' ' → logprob: -8.125448226928711
    3. 'is' → logprob: -9.000448226928711
    4. ' ' → logprob: -11.125448226928711
    5. ' not' → logprob: -11.250448226928711
    6. '	is' → logprob: -14.750448226928711
    7. '  ' → logprob: -15.000448226928711
    8. 's' → logprob: -16.00044822692871
    9. ' ‌' → logprob: -16.50044822692871
    10. ' space' → logprob: -16.75044822692871

Token 64: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00013238313840702176
    2. '_' → logprob: -9.00013256072998
    3. '_pr' → logprob: -12.62513256072998
    4. 'prime' → logprob: -12.75013256072998
    5. ' _' → logprob: -13.12513256072998
    6. '_p' → logprob: -15.50013256072998
    7. '_
' → logprob: -16.000131607055664
    8. '_Pr' → logprob: -16.250131607055664
    9. ''_' → logprob: -16.375131607055664
    10. '__' → logprob: -16.625131607055664

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014180317521095276
    2. '[' → logprob: -4.2641801834106445
    3. '[I' → logprob: -11.639180183410645
    4. ' [' → logprob: -12.014180183410645
    5. '[
' → logprob: -14.264180183410645
    6. '[j' → logprob: -14.889180183410645
    7. '```' → logprob: -16.01418113708496
    8. '   ' → logprob: -16.13918113708496
    9. '[u' → logprob: -16.26418113708496
    10. ' ' → logprob: -16.26418113708496

Token 66: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.735034704208374
    2. ':' → logprob: -0.860034704208374
    3. '):' → logprob: -2.360034704208374
    4. ']' → logprob: -6.110034942626953
    5. ' ):' → logprob: -7.985034942626953
    6. ' :' → logprob: -9.485034942626953
    7. ' ]' → logprob: -9.735034942626953
    8. ':]' → logprob: -9.860034942626953
    9. ']:
' → logprob: -10.110034942626953
    10. '[' → logprob: -10.235034942626953

Token 67: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012817698530852795
    2. '           ' → logprob: -5.012817859649658
    3. ':
' → logprob: -5.387817859649658
    4. '       ' → logprob: -7.012817859649658
    5. ' :' → logprob: -7.762817859649658
    6. '   ' → logprob: -10.1378173828125
    7. '        ' → logprob: -10.5128173828125
    8. ' :
' → logprob: -10.7628173828125
    9. '):' → logprob: -11.0128173828125
    10. '               ' → logprob: -11.3878173828125

Token 68: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.788877546787262
    2. ' for' → logprob: -0.788877546787262
    3. 'for' (adapté à ' for') → logprob: -3.663877487182617
    4. '    ' → logprob: -3.663877487182617
    5. ' 
' → logprob: -4.413877487182617
    6. '   ' → logprob: -5.538877487182617
    7. '<|end|>' → logprob: -5.788877487182617
    8. '     
' → logprob: -5.913877487182617
    9. '       ' → logprob: -6.038877487182617
    10. ' :' → logprob: -6.163877487182617

Token 69: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.01053954754024744
    2. ' ' → logprob: -5.135539531707764
    3. 'j' → logprob: -5.385539531707764
    4. '	j' → logprob: -11.760540008544922
    5. '    ' → logprob: -13.135540008544922
    6. ' (' → logprob: -13.260540008544922
    7. ' ' → logprob: -13.885540008544922
    8. ' `' → logprob: -14.385540008544922
    9. ' range' → logprob: -14.510540008544922
    10. '  ' → logprob: -14.510540008544922

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006917364429682493
    2. 'in' → logprob: -5.131917476654053
    3. ' ' → logprob: -7.756917476654053
    4. '<|end|>' → logprob: -7.881917476654053
    5. ' =' → logprob: -9.381916999816895
    6. '=' → logprob: -9.756916999816895
    7. '	in' → logprob: -11.256916999816895
    8. '<|end|>' → logprob: -11.631916999816895
    9. ' i' → logprob: -12.006916999816895
    10. ')' → logprob: -12.756916999816895

Token 71: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47454342246055603
    2. 'range' → logprob: -0.9745434522628784
    3. ' i' → logprob: -7.974543571472168
    4. ' ' → logprob: -9.849543571472168
    5. 'i' → logprob: -10.224543571472168
    6. '	range' → logprob: -11.224543571472168
    7. '   ' → logprob: -11.599543571472168
    8. '(range' → logprob: -12.474543571472168
    9. ' xrange' → logprob: -12.974543571472168
    10. '    ' → logprob: -13.099543571472168

Token 72: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004666268825531006
    2. '(' → logprob: -5.379666328430176
    3. ' (' → logprob: -10.129666328430176
    4. ' i' → logprob: -12.379666328430176
    5. 'i' → logprob: -14.129666328430176
    6. '(
' → logprob: -14.254666328430176
    7. ')' → logprob: -15.379666328430176
    8. '   ' → logprob: -15.879666328430176
    9. ' ' → logprob: -16.00466537475586
    10. '(I' → logprob: -16.87966537475586

Token 73: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.10044755786657333
    2. '*' → logprob: -2.350447654724121
    3. ' *' → logprob: -8.350447654724121
    4. '*j' → logprob: -12.475447654724121
    5. ' ' → logprob: -15.225447654724121
    6. 'i' → logprob: -15.600447654724121
    7. '*
' → logprob: -15.725447654724121
    8. '**' → logprob: -16.100446701049805
    9. '*,' → logprob: -16.850446701049805
    10. '*=' → logprob: -17.850446701049805

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011210155673325062
    2. ',max' → logprob: -4.511209964752197
    3. ' ,' → logprob: -8.886210441589355
    4. ',len' → logprob: -11.511210441589355
    5. ',m' → logprob: -12.261210441589355
    6. ',num' → logprob: -13.261210441589355
    7. 'max' → logprob: -13.261210441589355
    8. ',n' → logprob: -13.511210441589355
    9. ',j' → logprob: -13.511210441589355
    10. ',
' → logprob: -14.136210441589355

Token 75: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25194430351257324
    2. ' max' → logprob: -1.5019443035125732
    3. '(max' → logprob: -11.251944541931152
    4. '	max' → logprob: -13.876944541931152
    5. ' ' → logprob: -14.001944541931152
    6. ',max' → logprob: -15.376944541931152
    7. '[max' → logprob: -16.376943588256836
    8. '   ' → logprob: -16.501943588256836
    9. '_max' → logprob: -17.626943588256836
    10. '=max' → logprob: -18.001943588256836

Token 76: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -7.896309739408025e-07
    2. '+' → logprob: -14.500000953674316
    3. '_i' → logprob: -16.375
    4. 'n' → logprob: -17.0
    5. '_' → logprob: -17.375
    6. '+n' → logprob: -17.625
    7. '_j' → logprob: -17.75
    8. '-n' → logprob: -18.875
    9. '```' → logprob: -19.5
    10. '   ' → logprob: -20.0

Token 77: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012514126487076283
    2. ' +' → logprob: -4.387514114379883
    3. '+
' → logprob: -12.512514114379883
    4. '
' → logprob: -15.012514114379883
    5. ' ' → logprob: -16.012514114379883
    6. ' +
' → logprob: -16.387514114379883
    7. '```' → logprob: -17.012514114379883
    8. ' ' → logprob: -17.137514114379883
    9. '+

' → logprob: -17.387514114379883
    10. '   ' → logprob: -17.387514114379883

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -15.500036239624023
    4. '```' → logprob: -15.875036239624023
    5. '  ' → logprob: -17.250036239624023
    6. ')' → logprob: -17.625036239624023
    7. '
' → logprob: -18.000036239624023
    8. ',' → logprob: -19.000036239624023
    9. '``' → logprob: -19.000036239624023
    10. '

' → logprob: -19.062536239624023

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.500015258789062
    4. '```' → logprob: -18.125015258789062
    5. '  ' → logprob: -18.250015258789062
    6. ')' → logprob: -18.875015258789062
    7. '１' → logprob: -20.000015258789062
    8. '' → logprob: -20.000015258789062
    9. '
' → logprob: -20.000015258789062
    10. '2' → logprob: -20.375015258789062

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0042976574040949345
    2. ',i' → logprob: -5.504297733306885
    3. ' ,' → logprob: -8.629297256469727
    4. ':i' → logprob: -10.754297256469727
    5. ',j' → logprob: -11.129297256469727
    6. ',
' → logprob: -13.504297256469727
    7. ' i' → logprob: -14.129297256469727
    8. '),' → logprob: -14.254297256469727
    9. '   ' → logprob: -15.379297256469727
    10. ':,' → logprob: -15.379297256469727

Token 81: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.029751529917120934
    2. 'i' → logprob: -3.5297515392303467
    3. '	i' → logprob: -14.279751777648926
    4. ' ' → logprob: -15.654751777648926
    5. ')' → logprob: -16.02975082397461
    6. ')i' → logprob: -16.52975082397461
    7. ' 
' → logprob: -17.15475082397461
    8. ' ' → logprob: -18.15475082397461
    9. ' )' → logprob: -18.40475082397461
    10. '```' → logprob: -19.02975082397461

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.350386295001954e-05
    2. '):
' → logprob: -10.375073432922363
    3. ')' → logprob: -10.750073432922363
    4. ':' → logprob: -11.500073432922363
    5. ' ):' → logprob: -11.500073432922363
    6. ']:' → logprob: -15.500073432922363
    7. ' ' → logprob: -16.37507438659668
    8. '   ' → logprob: -16.75007438659668
    9. '}:' → logprob: -16.87507438659668
    10. ',' → logprob: -17.00007438659668

Token 83: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032828752882778645
    2. '                ' → logprob: -6.3782830238342285
    3. '                
' → logprob: -7.5032830238342285
    4. ' is' → logprob: -7.5032830238342285
    5. '           ' → logprob: -8.87828254699707
    6. '              ' → logprob: -8.87828254699707
    7. '                   ' → logprob: -10.00328254699707
    8. '            ' → logprob: -11.00328254699707
    9. ' 
' → logprob: -11.12828254699707
    10. '```' → logprob: -11.50328254699707

Token 84: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5013287663459778
    2. 'is' (adapté à ' is') → logprob: -1.001328706741333
    3. '                   ' → logprob: -3.626328706741333
    4. '               ' → logprob: -8.876328468322754
    5. '                    ' → logprob: -10.251328468322754
    6. '                       ' → logprob: -10.751328468322754
    7. '                ' → logprob: -10.751328468322754
    8. '   ' → logprob: -11.126328468322754
    9. '                  ' → logprob: -11.501328468322754
    10. '           ' → logprob: -11.751328468322754

Token 85: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -2.6537622034084052e-05
    2. '_' → logprob: -11.12502670288086
    3. 'prime' → logprob: -11.62502670288086
    4. '_pr' → logprob: -13.12502670288086
    5. ' _' → logprob: -15.37502670288086
    6. '_prior' → logprob: -15.87502670288086
    7. '_p' → logprob: -16.25002670288086
    8. '_
' → logprob: -16.50002670288086
    9. '_Pr' → logprob: -16.75002670288086
    10. ''_' → logprob: -17.50002670288086

Token 86: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.018166448920965195
    2. '[' → logprob: -4.018166542053223
    3. '[js' → logprob: -11.643166542053223
    4. '[J' → logprob: -12.768166542053223
    5. '```' → logprob: -13.143166542053223
    6. '[i' → logprob: -13.643166542053223
    7. '[
' → logprob: -14.518166542053223
    8. '\[' → logprob: -15.143166542053223
    9. '[s' → logprob: -15.893166542053223
    10. '[u' → logprob: -16.018165588378906

Token 87: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005143099115230143
    2. ' ]' → logprob: -7.625514507293701
    3. ']=' → logprob: -10.625514030456543
    4. '=' → logprob: -13.750514030456543
    5. ' =' → logprob: -14.250514030456543
    6. ')' → logprob: -15.625514030456543
    7. ']
' → logprob: -16.25051498413086
    8. ' ' → logprob: -17.25051498413086
    9. '[' → logprob: -17.25051498413086
    10. ']

' → logprob: -18.00051498413086

Token 88: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931592226028442
    2. ' =' → logprob: -0.6931592226028442
    3. '=False' → logprob: -11.568159103393555
    4. ']' → logprob: -14.318159103393555
    5. '[' → logprob: -14.568159103393555
    6. ' ' → logprob: -14.943159103393555
    7. '=True' → logprob: -15.068159103393555
    8. ')' → logprob: -15.193159103393555
    9. ' =
' → logprob: -15.568159103393555
    10. ']=' → logprob: -15.943159103393555

Token 89: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5759394764900208
    2. ' False' → logprob: -0.8259394764900208
    3. '(False' → logprob: -16.575939178466797
    4. 'F' → logprob: -18.075939178466797
    5. ' True' → logprob: -18.575939178466797
    6. '=False' → logprob: -18.950939178466797
    7. 'True' → logprob: -19.075939178466797
    8. ' F' → logprob: -19.700939178466797
    9. '.False' → logprob: -20.075939178466797
    10. ' ' → logprob: -20.700939178466797

Token 90: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.437010258436203
    2. '
' → logprob: -1.0620102882385254
    3. '    
' → logprob: -4.937010288238525
    4. 'return' → logprob: -7.562010288238525
    5. '\n' → logprob: -8.312009811401367
    6. ' return' → logprob: -9.562009811401367
    7. '  
' → logprob: -9.687009811401367
    8. '' → logprob: -10.312009811401367
    9. '	return' → logprob: -10.312009811401367
    10. '
' → logprob: -10.437009811401367

Token 91: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11134257167577744
    2. '   ' → logprob: -2.986342668533325
    3. '\n' → logprob: -3.236342668533325
    4. '    
' → logprob: -4.486342430114746
    5. '  
' → logprob: -6.361342430114746
    6. ' 
' → logprob: -7.111342430114746
    7. 'return' → logprob: -7.611342430114746
    8. '   
' → logprob: -8.486342430114746
    9. ' return' → logprob: -8.611342430114746
    10. '
' → logprob: -8.736342430114746

Token 92: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04766613617539406
    2. '   ' → logprob: -3.297666072845459
    3. ' return' → logprob: -5.297666072845459
    4. 'r' → logprob: -6.047666072845459
    5. '
' → logprob: -6.797666072845459
    6. '    
' → logprob: -7.672666072845459
    7. '```' → logprob: -7.922666072845459
    8. ' ' → logprob: -9.672666549682617
    9. '	return' → logprob: -10.047666549682617
    10. '       ' → logprob: -10.297666549682617

Token 93: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2608572244644165
    2. 'is' → logprob: -1.5108572244644165
    3. ' [' → logprob: -5.260857105255127
    4. ' is' → logprob: -6.135857105255127
    5. '[i' → logprob: -6.510857105255127
    6. '[max' → logprob: -11.635857582092285
    7. '[int' → logprob: -12.385857582092285
    8. '[j' → logprob: -13.010857582092285
    9. '[a' → logprob: -13.010857582092285
    10. '[s' → logprob: -13.135857582092285

Token 94: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -3.404745439183898e-05
    2. 'prime' → logprob: -10.37503433227539
    3. '_' → logprob: -13.62503433227539
    4. '_pr' → logprob: -13.75003433227539
    5. 'r' → logprob: -15.50003433227539
    6. '_prior' → logprob: -16.00003433227539
    7. '_p' → logprob: -16.62503433227539
    8. 't' → logprob: -17.00003433227539
    9. '```' → logprob: -17.00003433227539
    10. 'pr' → logprob: -17.75003433227539

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6796767115592957
    2. '<|end|>' → logprob: -0.9296767115592957
    3. '```' → logprob: -3.5546767711639404
    4. 'def' → logprob: -3.9296767711639404
    5. '

' → logprob: -4.304676532745361
    6. 'n' → logprob: -4.429676532745361
    7. '\n' → logprob: -4.554676532745361
    8. 'max' → logprob: -5.679676532745361
    9. '#' → logprob: -6.179676532745361
    10. '' → logprob: -6.429676532745361

Token 96: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04459473490715027
    2. '
' → logprob: -4.169594764709473
    3. 'max' → logprob: -4.169594764709473
    4. 'n' → logprob: -4.919594764709473
    5. '```' → logprob: -6.294594764709473
    6. '\n' → logprob: -6.919594764709473
    7. '#' → logprob: -7.169594764709473
    8. '  
' → logprob: -7.669594764709473
    9. '<|end|>' → logprob: -8.294594764709473
    10. '    
' → logprob: -8.419594764709473

Token 97: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.309855580329895
    2. ' prime' → logprob: -1.809855580329895
    3. ' primes' → logprob: -3.8098554611206055
    4. ' is' → logprob: -4.3098554611206055
    5. ' count' → logprob: -4.4348554611206055
    6. ' find' → logprob: -4.4348554611206055
    7. ' check' → logprob: -4.9348554611206055
    8. ' ' → logprob: -5.0598554611206055
    9. ' factorial' → logprob: -5.0598554611206055
    10. ' solve' → logprob: -5.0598554611206055

Token 98: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.034065764397382736
    2. '(' → logprob: -3.4090657234191895
    3. '(:' → logprob: -8.534066200256348
    4. '()' → logprob: -8.659066200256348
    5. ' ():' → logprob: -10.659066200256348
    6. ':' → logprob: -11.159066200256348
    7. '(":' → logprob: -12.534066200256348
    8. '():
' → logprob: -12.659066200256348
    9. '(**' → logprob: -14.034066200256348
    10. '(
' → logprob: -14.284066200256348

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22742295265197754
    2. ' max' → logprob: -1.6024229526519775
    3. 'max' → logprob: -7.227422714233398
    4. ' n' → logprob: -7.227422714233398
    5. 'n' → logprob: -8.852422714233398
    6. '(max' → logprob: -9.102422714233398
    7. ' import' → logprob: -9.227422714233398
    8. '    
' → logprob: -10.102422714233398
    9. '    ' → logprob: -10.227422714233398
    10. '	max' → logprob: -10.477422714233398

Token 100: ' numbers' (ID: 8663)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4265703856945038
    2. ' n' → logprob: -1.1765704154968262
    3. ' input' → logprob: -3.926570415496826
    4. 'n' → logprob: -4.676570415496826
    5. 'max' → logprob: -5.176570415496826
    6. '   ' → logprob: -5.676570415496826
    7. ' if' → logprob: -8.426569938659668
    8. 'input' → logprob: -8.551569938659668
    9. ' import' → logprob: -9.176569938659668
    10. ' args' → logprob: -9.301569938659668

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0016586360288783908
    2. '=' → logprob: -6.5016584396362305
    3. ' ' → logprob: -9.37665843963623
    4. '[' → logprob: -10.75165843963623
    5. ' =[' → logprob: -11.25165843963623
    6. '[:]' → logprob: -12.00165843963623
    7. '   ' → logprob: -12.12665843963623
    8. '=[]' → logprob: -12.25165843963623
    9. ',' → logprob: -12.62665843963623
    10. '_' → logprob: -12.75165843963623

Token 102: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.15348957479000092
    2. ' []' → logprob: -2.653489589691162
    3. ' [' → logprob: -3.278489589691162
    4. 'list' → logprob: -4.153489589691162
    5. '[]' → logprob: -4.403489589691162
    6. '[' → logprob: -5.653489589691162
    7. ' sys' → logprob: -6.153489589691162
    8. ' map' → logprob: -8.153489112854004
    9. '[list' → logprob: -8.903489112854004
    10. '[int' → logprob: -9.903489112854004

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009288725443184376
    2. ' while' → logprob: -5.384288787841797
    3. ' for' → logprob: -5.884288787841797
    4. 'for' → logprob: -7.259288787841797
    5. 'while' → logprob: -7.384288787841797
    6. '    
' → logprob: -8.384288787841797
    7. 'n' → logprob: -9.009288787841797
    8. 'try' → logprob: -10.384288787841797
    9. ' n' → logprob: -10.384288787841797
    10. '    ' → logprob: -10.884288787841797

Token 104: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2119535505771637
    2. ' for' → logprob: -1.7119535207748413
    3. '   ' → logprob: -5.086953639984131
    4. 'n' → logprob: -6.211953639984131
    5. ' n' → logprob: -7.211953639984131
    6. 'try' → logprob: -7.836953639984131
    7. 'while' → logprob: -7.836953639984131
    8. ' while' → logprob: -8.711953163146973
    9. ' try' → logprob: -8.836953163146973
    10. 'max' (adapté à ' max') → logprob: -8.836953163146973

Token 105: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.009999250993132591
    2. '_' → logprob: -4.6349992752075195
    3. '_num' → logprob: -8.88499927520752
    4. '_number' → logprob: -10.00999927520752
    5. '_val' → logprob: -10.88499927520752
    6. '_value' → logprob: -11.00999927520752
    7. '_numbers' → logprob: -11.25999927520752
    8. '_input' → logprob: -12.50999927520752
    9. '_i' → logprob: -13.75999927520752
    10. '_N' → logprob: -14.13499927520752

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010125179775059223
    2. '=' → logprob: -4.635125160217285
    3. ' ' → logprob: -8.010125160217285
    4. '_' → logprob: -10.635125160217285
    5. ' =
' → logprob: -12.135125160217285
    6. ' _' → logprob: -12.885125160217285
    7. '_space' → logprob: -13.760125160217285
    8. 'space' → logprob: -14.385125160217285
    9. ' =[' → logprob: -14.635125160217285
    10. ')' → logprob: -14.885125160217285

Token 107: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16819366812705994
    2. ' int' → logprob: -2.2931935787200928
    3. '0' → logprob: -3.0431935787200928
    4. 'int' → logprob: -5.293193817138672
    5. '10' → logprob: -7.293193817138672
    6. ' max' → logprob: -8.793193817138672
    7. ' None' → logprob: -9.668193817138672
    8. '100' → logprob: -9.668193817138672
    9. '20' → logprob: -10.668193817138672
    10. '[int' → logprob: -10.668193817138672

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29433920979499817
    2. 'int' → logprob: -1.5443391799926758
    3. ' int' → logprob: -4.169339179992676
    4. '100' → logprob: -4.169339179992676
    5. ' ' → logprob: -4.669339179992676
    6. '10' → logprob: -7.044339179992676
    7. 'max' → logprob: -8.294339179992676
    8. ' max' → logprob: -10.794339179992676
    9. '   ' → logprob: -11.044339179992676
    10. '  ' → logprob: -11.294339179992676

Token 109: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25444066524505615
    2. '
' → logprob: -1.6294406652450562
    3. '<|end|>' → logprob: -4.254440784454346
    4. '    
' → logprob: -4.379440784454346
    5. ' for' → logprob: -7.504440784454346
    6. '<|end|>' → logprob: -7.754440784454346
    7. ' 
' → logprob: -8.379440307617188
    8. 'for' → logprob: -9.004440307617188
    9. '  
' → logprob: -9.129440307617188
    10. '    ' → logprob: -9.379440307617188

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1857297420501709
    2. '
' → logprob: -1.810729742050171
    3. '    
' → logprob: -5.31072998046875
    4. '<|end|>' → logprob: -7.81072998046875
    5. ' for' → logprob: -7.93572998046875
    6. ' 
' → logprob: -9.43572998046875
    7. 'for' → logprob: -9.43572998046875
    8. '  
' → logprob: -10.43572998046875
    9. '
' → logprob: -11.56072998046875
    10. '    ' → logprob: -11.56072998046875

Token 111: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4563542306423187
    2. 'for' (adapté à ' for') → logprob: -1.2063542604446411
    3. '   ' → logprob: -2.7063541412353516
    4. ' n' → logprob: -8.706354141235352
    5. 'n' → logprob: -9.206354141235352
    6. 'try' → logprob: -10.956354141235352
    7. ' try' → logprob: -11.331354141235352
    8. ' ' → logprob: -11.456354141235352
    9. ' line' → logprob: -11.706354141235352
    10. '
' → logprob: -11.706354141235352

Token 112: ' line' (ID: 2543)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.10293658077716827
    2. ' ' → logprob: -2.9779365062713623
    3. ' line' → logprob: -3.4779365062713623
    4. '_' → logprob: -4.977936744689941
    5. ' num' → logprob: -5.102936744689941
    6. ' i' → logprob: -6.227936744689941
    7. ' arg' → logprob: -7.727936744689941
    8. ' number' → logprob: -8.602936744689941
    9. ' x' → logprob: -8.602936744689941
    10. ' n' → logprob: -9.227936744689941

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00311104953289032
    2. 'in' → logprob: -6.128110885620117
    3. ' ' → logprob: -7.003110885620117
    4. ' i' → logprob: -11.503110885620117
    5. '_' → logprob: -13.878110885620117
    6. ' ,' → logprob: -14.503110885620117
    7. ',' → logprob: -14.503110885620117
    8. '_in' → logprob: -14.503110885620117
    9. '	in' → logprob: -14.628110885620117
    10. 'line' → logprob: -14.628110885620117

Token 114: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16029155254364014
    2. 'sys' → logprob: -1.9102915525436401
    3. '=sys' → logprob: -10.16029167175293
    4. '	sys' → logprob: -10.66029167175293
    5. '(sys' → logprob: -12.53529167175293
    6. ' ' → logprob: -14.41029167175293
    7. 'stdin' → logprob: -14.53529167175293
    8. '   ' → logprob: -15.78529167175293
    9. '```' → logprob: -16.16029167175293
    10. 's' → logprob: -16.53529167175293

Token 115: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.008272825740277767
    2. '.' → logprob: -5.133272647857666
    3. '.readline' → logprob: -6.133272647857666
    4. ' .' → logprob: -10.133273124694824
    5. 'stdin' → logprob: -10.133273124694824
    6. ' stdin' → logprob: -10.383273124694824
    7. '.stdout' → logprob: -10.883273124694824
    8. '.readlines' → logprob: -11.008273124694824
    9. ' in' → logprob: -11.758273124694824
    10. '.argv' → logprob: -12.008273124694824

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004385844804346561
    2. '.readline' → logprob: -6.004385948181152
    3. ':
' → logprob: -7.254385948181152
    4. '.strip' → logprob: -7.879385948181152
    5. ' :' → logprob: -8.129385948181152
    6. ' in' → logprob: -8.254385948181152
    7. '.rstrip' → logprob: -8.754385948181152
    8. '.readlines' → logprob: -10.629385948181152
    9. '):' → logprob: -10.879385948181152
    10. '   ' → logprob: -11.004385948181152

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016569708241149783
    2. '   ' → logprob: -7.501657009124756
    3. '        
' → logprob: -8.126656532287598
    4. ' ' → logprob: -8.376656532287598
    5. '    ' → logprob: -8.501656532287598
    6. '    
' → logprob: -8.876656532287598
    7. ',' → logprob: -9.501656532287598
    8. ':' → logprob: -10.501656532287598
    9. '.strip' → logprob: -11.126656532287598
    10. '.rstrip' → logprob: -11.126656532287598

Token 118: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.05894136428833
    2. ' n' → logprob: -1.55894136428833
    3. '   ' → logprob: -1.68394136428833
    4. ' num' → logprob: -1.68394136428833
    5. ' number' → logprob: -3.80894136428833
    6. 'n' → logprob: -3.93394136428833
    7. 'num' → logprob: -4.05894136428833
    8. ' line' → logprob: -5.30894136428833
    9. '    ' → logprob: -6.43394136428833
    10. ' x' → logprob: -6.80894136428833

Token 119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11052678525447845
    2. ' =' → logprob: -2.3605268001556396
    3. '.strip' → logprob: -4.6105265617370605
    4. '.rstrip' → logprob: -9.110527038574219
    5. 'strip' → logprob: -9.610527038574219
    6. '_strip' → logprob: -9.735527038574219
    7. '.' → logprob: -10.610527038574219
    8. '=line' → logprob: -10.735527038574219
    9. '.=' → logprob: -11.610527038574219
    10. 's' → logprob: -11.610527038574219

Token 120: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.474078506231308
    2. ' line' → logprob: -0.9740785360336304
    3. '=line' → logprob: -13.849078178405762
    4. '	line' → logprob: -14.849078178405762
    5. '(line' → logprob: -16.224079132080078
    6. '#line' → logprob: -16.724079132080078
    7. 'int' → logprob: -17.474079132080078
    8. '   ' → logprob: -17.474079132080078
    9. ' ' → logprob: -17.724079132080078
    10. '[line' → logprob: -19.099079132080078

Token 121: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0004969134461134672
    2. '.rstrip' → logprob: -8.000496864318848
    3. '.' → logprob: -8.750496864318848
    4. ' .' → logprob: -13.000496864318848
    5. '.split' → logprob: -14.875496864318848
    6. 'strip' → logprob: -15.000496864318848
    7. '.trim' → logprob: -16.250497817993164
    8. '.chomp' → logprob: -17.625497817993164
    9. '().' → logprob: -18.125497817993164
    10. '.replace' → logprob: -18.375497817993164

Token 122: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.368984107510187e-05
    2. '()
' → logprob: -11.000033378601074
    3. '()`' → logprob: -12.750033378601074
    4. '(' → logprob: -12.875033378601074
    5. ' ()' → logprob: -12.875033378601074
    6. '())' → logprob: -13.125033378601074
    7. '().' → logprob: -13.500033378601074
    8. '()

' → logprob: -13.750033378601074
    9. '()>' → logprob: -13.875033378601074
    10. '()\' → logprob: -14.000033378601074

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08417966216802597
    2. '<|end|>' → logprob: -2.709179639816284
    3. ' if' → logprob: -4.584179878234863
    4. '   ' → logprob: -6.584179878234863
    5. 'if' → logprob: -7.334179878234863
    6. '<|end|>' → logprob: -7.459179878234863
    7. '        
' → logprob: -7.959179878234863
    8. '
' → logprob: -8.209179878234863
    9. ',' → logprob: -8.459179878234863
    10. '        ' → logprob: -8.834179878234863

Token 124: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0790240690112114
    2. ' if' → logprob: -2.579024076461792
    3. '       ' → logprob: -8.954024314880371
    4. '   ' → logprob: -12.454024314880371
    5. 'If' → logprob: -14.954024314880371
    6. ' ' → logprob: -15.204024314880371
    7. '
' → logprob: -15.579024314880371
    8. '	if' → logprob: -15.704024314880371
    9. '```' → logprob: -15.829024314880371
    10. '<|end|>' → logprob: -15.954024314880371

Token 125: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03239627182483673
    2. ' line' → logprob: -3.5323963165283203
    3. 'not' → logprob: -6.03239631652832
    4. 'line' → logprob: -8.53239631652832
    5. ' ' → logprob: -10.03239631652832
    6. '(line' → logprob: -15.15739631652832
    7. '	line' → logprob: -15.28239631652832
    8. ' ' → logprob: -15.28239631652832
    9. ' len' → logprob: -15.40739631652832
    10. '	not' → logprob: -16.03239631652832

Token 126: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.002187376143410802
    2. 'line' → logprob: -6.127187252044678
    3. ' ' → logprob: -13.252187728881836
    4. '	line' → logprob: -15.377187728881836
    5. '(line' → logprob: -15.627187728881836
    6. ' lines' → logprob: -18.502187728881836
    7. '#line' → logprob: -18.627187728881836
    8. '[line' → logprob: -18.752187728881836
    9. ' lin' → logprob: -19.002187728881836
    10. '=line' → logprob: -19.377187728881836

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010543322190642357
    2. ':
' → logprob: -4.885543346405029
    3. ' :' → logprob: -6.135543346405029
    4. ' or' → logprob: -7.260543346405029
    5. ' :
' → logprob: -10.010542869567871
    6. '.startswith' → logprob: -11.135542869567871
    7. ':return' → logprob: -13.010542869567871
    8. ':

' → logprob: -14.760542869567871
    9. '.is' → logprob: -14.760542869567871
    10. '<|end|>' → logprob: -14.760542869567871

Token 128: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.298243910074234
    2. ':' → logprob: -1.9232438802719116
    3. '           ' → logprob: -2.298243999481201
    4. ':
' → logprob: -5.048243999481201
    5. '   ' → logprob: -5.423243999481201
    6. ' :' → logprob: -9.048243522644043
    7. ' break' → logprob: -9.048243522644043
    8. ' or' → logprob: -9.673243522644043
    9. ',' → logprob: -10.548243522644043
    10. '    ' → logprob: -10.673243522644043

Token 129: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.032952722162008286
    2. 'break' → logprob: -3.7829527854919434
    3. '       ' → logprob: -4.657952785491943
    4. '           ' → logprob: -9.157952308654785
    5. '	break' → logprob: -10.282952308654785
    6. '   ' → logprob: -11.282952308654785
    7. '
' → logprob: -11.907952308654785
    8. ' ' → logprob: -12.157952308654785
    9. '               ' → logprob: -12.532952308654785
    10. '```' → logprob: -13.282952308654785

Token 130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5282973647117615
    2. '
' → logprob: -0.9032973647117615
    3. '<|end|>' → logprob: -5.778297424316406
    4. '        
' → logprob: -6.403297424316406
    5. '  
' → logprob: -8.778297424316406
    6. '    
' → logprob: -9.278297424316406
    7. '   ' → logprob: -9.528297424316406
    8. '<|end|>' → logprob: -10.653297424316406
    9. '
' → logprob: -10.903297424316406
    10. ',' → logprob: -11.653297424316406

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003102138638496399
    2. '
' → logprob: -6.2531023025512695
    3. '        
' → logprob: -7.5031023025512695
    4. '<|end|>' → logprob: -7.6281023025512695
    5. ',' → logprob: -10.25310230255127
    6. '   ' → logprob: -10.25310230255127
    7. '  
' → logprob: -10.75310230255127
    8. '    
' → logprob: -10.87810230255127
    9. '<|end|>' → logprob: -12.62810230255127
    10. ' ' → logprob: -12.75310230255127

Token 132: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7625339031219482
    2. ' num' → logprob: -1.2625339031219482
    3. 'num' → logprob: -2.5125339031219482
    4. 'n' (adapté à ' n') → logprob: -2.5125339031219482
    5. '       ' → logprob: -3.5125339031219482
    6. ' numbers' → logprob: -4.012534141540527
    7. ' parts' → logprob: -4.387534141540527
    8. ' nums' → logprob: -4.387534141540527
    9. 'nums' → logprob: -5.262534141540527
    10. ' number' → logprob: -5.512534141540527

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995132565498352
    2. '=' → logprob: -2.694951295852661
    3. '=int' → logprob: -12.069951057434082
    4. ',' → logprob: -12.069951057434082
    5. ' ' → logprob: -13.319951057434082
    6. ' =
' → logprob: -13.944951057434082
    7. 's' → logprob: -14.444951057434082
    8. ' ,' → logprob: -16.0699520111084
    9. '=

' → logprob: -16.4449520111084
    10. ')' → logprob: -16.8199520111084

Token 134: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519298195838928
    2. ' int' → logprob: -1.501929759979248
    3. '[int' → logprob: -14.876930236816406
    4. '=int' → logprob: -15.876930236816406
    5. '(int' → logprob: -16.126930236816406
    6. '<int' → logprob: -16.751930236816406
    7. ']int' → logprob: -17.751930236816406
    8. '	int' → logprob: -17.876930236816406
    9. ',int' → logprob: -19.126930236816406
    10. ':int' → logprob: -19.126930236816406

Token 135: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0052342405542731285
    2. '(' → logprob: -5.255234241485596
    3. '(n' → logprob: -15.630233764648438
    4. '(
' → logprob: -16.130233764648438
    5. '(lines' → logprob: -16.630233764648438
    6. ' (' → logprob: -16.630233764648438
    7. '#line' → logprob: -17.505233764648438
    8. ' line' → logprob: -17.630233764648438
    9. '[line' → logprob: -17.630233764648438
    10. '(l' → logprob: -17.755233764648438

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023277277126908302
    2. ')
' → logprob: -3.7732772827148438
    3. ')
' → logprob: -10.773277282714844
    4. ' )' → logprob: -11.648277282714844
    5. ')

' → logprob: -14.398277282714844
    6. ' )
' → logprob: -14.648277282714844
    7. ')`' → logprob: -14.773277282714844
    8. '   ' → logprob: -15.648277282714844
    9. ')`
' → logprob: -15.648277282714844
    10. '))' → logprob: -16.148277282714844

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5089393258094788
    2. '   ' → logprob: -1.258939266204834
    3. '
' → logprob: -3.133939266204834
    4. '<|end|>' → logprob: -3.383939266204834
    5. ' if' → logprob: -4.008939266204834
    6. '    
' → logprob: -5.133939266204834
    7. ' 
' → logprob: -5.508939266204834
    8. '  
' → logprob: -5.883939266204834
    9. '        
' → logprob: -6.008939266204834
    10. 'if' → logprob: -7.133939266204834

Token 138: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.360166072845459
    2. ' if' → logprob: -1.610166072845459
    3. 'numbers' (adapté à ' numbers') → logprob: -2.610166072845459
    4. 'if' → logprob: -3.860166072845459
    5. '   ' → logprob: -5.110166072845459
    6. ' max' → logprob: -7.360166072845459
    7. 'max' → logprob: -7.485166072845459
    8. '       ' → logprob: -7.485166072845459
    9. ' ' → logprob: -9.860166549682617
    10. '
' → logprob: -9.985166549682617

Token 139: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0030575692653656006
    2. '.' → logprob: -5.878057479858398
    3. ' .' → logprob: -8.503057479858398
    4. '.extend' → logprob: -10.503057479858398
    5. ' =' → logprob: -11.503057479858398
    6. '.push' → logprob: -12.753057479858398
    7. '.app' → logprob: -13.378057479858398
    8. ' +=' → logprob: -13.378057479858398
    9. '=' → logprob: -13.753057479858398
    10. ' .=' → logprob: -13.878057479858398

Token 140: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018154270946979523
    2. '(' → logprob: -4.018154144287109
    3. '(
' → logprob: -12.51815414428711
    4. ' (' → logprob: -14.76815414428711
    5. '((' → logprob: -15.26815414428711
    6. '(

' → logprob: -16.76815414428711
    7. '(i' → logprob: -17.89315414428711
    8. '(num' → logprob: -17.89315414428711
    9. '()' → logprob: -18.14315414428711
    10. '(s' → logprob: -19.14315414428711

Token 141: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31429216265678406
    2. ')
' → logprob: -1.3142921924591064
    3. '       ' → logprob: -7.439291954040527
    4. 'if' → logprob: -8.564291954040527
    5. '
' → logprob: -9.564291954040527
    6. ' if' → logprob: -10.189291954040527
    7. ')
' → logprob: -10.314291954040527
    8. ' )' → logprob: -10.439291954040527
    9. ')n' → logprob: -10.439291954040527
    10. ' )
' → logprob: -11.189291954040527

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12110017240047455
    2. '   ' → logprob: -2.3711001873016357
    3. ' if' → logprob: -3.9961001873016357
    4. 'if' → logprob: -6.371099948883057
    5. '
' → logprob: -8.496100425720215
    6. '<|end|>' → logprob: -9.121100425720215
    7. '        
' → logprob: -9.871100425720215
    8. '    
' → logprob: -10.371100425720215
    9. '  
' → logprob: -10.746100425720215
    10. '	if' → logprob: -10.871100425720215

Token 143: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5778627395629883
    2. ' if' → logprob: -0.8278627395629883
    3. 'max' → logprob: -6.827862739562988
    4. '       ' → logprob: -7.327862739562988
    5. '   ' → logprob: -9.077862739562988
    6. ' max' → logprob: -9.702862739562988
    7. '	if' → logprob: -12.827862739562988
    8. ' ' → logprob: -13.202862739562988
    9. '
' → logprob: -14.327862739562988
    10. '           ' → logprob: -15.327862739562988

Token 144: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0031781906727701426
    2. 'n' → logprob: -5.753178119659424
    3. '	n' → logprob: -14.878178596496582
    4. ' ' → logprob: -16.503177642822266
    5. ' ' → logprob: -16.753177642822266
    6. '(n' → logprob: -17.628177642822266
    7. ' max' → logprob: -18.128177642822266
    8. ' н' → logprob: -18.253177642822266
    9. '<n' → logprob: -19.190677642822266
    10. '_n' → logprob: -19.440677642822266

Token 145: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.018151111900806427
    2. ' >' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.14315128326416
    4. '>

' → logprob: -15.89315128326416
    5. '>
' → logprob: -16.518150329589844
    6. '[' → logprob: -16.518150329589844
    7. ' ' → logprob: -17.393150329589844
    8. '">' → logprob: -17.518150329589844
    9. ' >

' → logprob: -18.018150329589844
    10. '<|end|>' → logprob: -18.393150329589844

Token 146: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4740777611732483
    2. 'max' → logprob: -0.9740777611732483
    3. '
' → logprob: -15.224078178405762
    4. '	max' → logprob: -15.724078178405762
    5. ' ' → logprob: -16.224077224731445
    6. '_max' → logprob: -16.599077224731445
    7. '(max' → logprob: -16.974077224731445
    8. '<|end|>' → logprob: -17.474077224731445
    9. '>' → logprob: -17.599077224731445
    10. 'm' → logprob: -17.724077224731445

Token 147: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.500004768371582
    3. ' _' → logprob: -14.375004768371582
    4. '   ' → logprob: -14.625004768371582
    5. 'n' → logprob: -15.875004768371582
    6. '_max' → logprob: -16.6250057220459
    7. ' ' → logprob: -16.6250057220459
    8. '```' → logprob: -17.5000057220459
    9. '_i' → logprob: -17.7500057220459
    10. '=max' → logprob: -18.1250057220459

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022173458710312843
    2. ':
' → logprob: -6.3772172927856445
    3. ' :' → logprob: -7.6272172927856445
    4. ' :
' → logprob: -11.752217292785645
    5. '=' → logprob: -12.252217292785645
    6. ':n' → logprob: -12.252217292785645
    7. ':max' → logprob: -12.627217292785645
    8. '<|end|>' → logprob: -13.002217292785645
    9. ' =' → logprob: -13.127217292785645
    10. ' ' → logprob: -14.377217292785645

Token 149: '           ' (ID: 352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.029315080493688583
    2. ' max' → logprob: -3.9043149948120117
    3. 'n' → logprob: -4.779314994812012
    4. 'max' → logprob: -8.154314994812012
    5. ' ' → logprob: -10.904314994812012
    6. '_n' → logprob: -11.779314994812012
    7. ' 
' → logprob: -12.529314994812012
    8. ' ' → logprob: -13.279314994812012
    9. '           ' → logprob: -13.404314994812012
    10. '_max' → logprob: -13.529314994812012

Token 150: ' max' (ID: 2999)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.37428018450737
    2. ' max' → logprob: -1.2492802143096924
    3. 'n' → logprob: -3.7492802143096924
    4. 'max' (adapté à ' max') → logprob: -6.249279975891113
    5. ' ' → logprob: -10.624279975891113
    6. ' 
' → logprob: -12.249279975891113
    7. ' ' → logprob: -12.374279975891113
    8. '_n' → logprob: -13.249279975891113
    9. '_max' → logprob: -14.124279975891113
    10. '            ' → logprob: -14.624279975891113

Token 151: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.0683535037969705e-05
    2. '_' → logprob: -12.12501049041748
    3. ' _' → logprob: -12.37501049041748
    4. '```' → logprob: -14.87501049041748
    5. 'n' → logprob: -15.25001049041748
    6. '   ' → logprob: -16.250011444091797
    7. '=_' → logprob: -16.875011444091797
    8. ' ' → logprob: -17.250011444091797
    9. '\' → logprob: -18.250011444091797
    10. '
' → logprob: -18.250011444091797

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868733048439026
    2. ' =' → logprob: -1.1368732452392578
    3. '=n' → logprob: -13.886873245239258
    4. '=
' → logprob: -14.011873245239258
    5. ' =
' → logprob: -15.386873245239258
    6. ' ' → logprob: -15.886873245239258
    7. '=

' → logprob: -16.261873245239258
    8. '＝' → logprob: -18.136873245239258
    9. '=max' → logprob: -20.011873245239258
    10. '
' → logprob: -20.261873245239258

Token 153: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47407761216163635
    2. ' n' → logprob: -0.974077582359314
    3. ' ' → logprob: -15.349077224731445
    4. '	n' → logprob: -15.349077224731445
    5. '_n' → logprob: -15.599077224731445
    6. ' 
' → logprob: -17.099077224731445
    7. ' ' → logprob: -17.849077224731445
    8. ')n' → logprob: -18.349077224731445
    9. '```' → logprob: -18.599077224731445
    10. '=n' → logprob: -19.099077224731445

Token 154: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.040229298174381256
    2. '   ' → logprob: -3.540229320526123
    3. '    
' → logprob: -4.665229320526123
    4. ' 
' → logprob: -7.790229320526123
    5. '  
' → logprob: -8.415228843688965
    6. '
' → logprob: -9.665228843688965
    7. '   
' → logprob: -10.290228843688965
    8. '```' → logprob: -10.290228843688965
    9. 'n' → logprob: -10.415228843688965
    10. '        
' → logprob: -10.540228843688965

Token 155: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04465550556778908
    2. '   ' → logprob: -3.4196555614471436
    3. '    
' → logprob: -5.4196553230285645
    4. '  
' → logprob: -5.9196553230285645
    5. ' 
' → logprob: -6.1696553230285645
    6. '

' → logprob: -7.2946553230285645
    7. '   
' → logprob: -8.169655799865723
    8. '
' → logprob: -8.294655799865723
    9. ' ' → logprob: -9.669655799865723
    10. ' primes' → logprob: -9.794655799865723

Token 156: ' primes' (ID: 104042)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.47048428654670715
    2. ' is' → logprob: -1.2204842567443848
    3. 'pr' → logprob: -3.3454842567443848
    4. '   ' → logprob: -3.7204842567443848
    5. ' primes' → logprob: -4.095484256744385
    6. 'prime' → logprob: -5.595484256744385
    7. '    
' → logprob: -8.845484733581543
    8. ' prime' → logprob: -9.470484733581543
    9. '
' → logprob: -9.595484733581543
    10. ' ' → logprob: -10.345484733581543

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04337320849299431
    2. '=' → logprob: -3.1683731079101562
    3. '_' → logprob: -7.918373107910156
    4. ' ' → logprob: -12.043373107910156
    5. ' _' → logprob: -14.043373107910156
    6. '_=' → logprob: -14.043373107910156
    7. ' =
' → logprob: -14.418373107910156
    8. '=is' → logprob: -15.543373107910156
    9. ' =[' → logprob: -15.668373107910156
    10. '=_' → logprob: -15.918373107910156

Token 158: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.0017070822650566697
    2. 's' → logprob: -6.376707077026367
    3. ' s' → logprob: -13.126707077026367
    4. ' sie' → logprob: -13.876707077026367
    5. ' ' → logprob: -14.126707077026367
    6. '	s' → logprob: -15.001707077026367
    7. ' ' → logprob: -15.251707077026367
    8. '[s' → logprob: -15.626707077026367
    9. ' sift' → logprob: -16.001707077026367
    10. '(s' → logprob: -16.126707077026367

Token 159: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0024774393532425165
    2. '(' → logprob: -6.002477645874023
    3. ' (' → logprob: -14.377477645874023
    4. '(
' → logprob: -14.502477645874023
    5. '(ma' → logprob: -15.002477645874023
    6. '(min' → logprob: -16.627477645874023
    7. '(Max' → logprob: -16.752477645874023
    8. '(MAX' → logprob: -16.877477645874023
    9. '(

' → logprob: -17.002477645874023
    10. '(m' → logprob: -17.377477645874023

Token 160: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.000000953674316
    3. ')' → logprob: -16.875001907348633
    4. 'n' → logprob: -18.250001907348633
    5. ' _' → logprob: -18.250001907348633
    6. '_)' → logprob: -18.375001907348633
    7. ' ' → logprob: -18.750001907348633
    8. '_i' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.750001907348633
    10. '_j' → logprob: -19.875001907348633

Token 161: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004983438993804157
    2. ')
' → logprob: -7.625498294830322
    3. ' )' → logprob: -12.00049877166748
    4. ')

' → logprob: -12.75049877166748
    5. ')
' → logprob: -14.00049877166748
    6. ')`' → logprob: -15.75049877166748
    7. '   ' → logprob: -16.500497817993164
    8. ')

' → logprob: -17.750497817993164
    9. ' )
' → logprob: -18.125497817993164
    10. ' ' → logprob: -18.125497817993164

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027025869116187096
    2. 'for' → logprob: -4.2770256996154785
    3. ' for' → logprob: -4.4020256996154785
    4. '
' → logprob: -8.277026176452637
    5. '    
' → logprob: -8.402026176452637
    6. '<|end|>' → logprob: -10.152026176452637
    7. '```' → logprob: -12.652026176452637
    8. '	for' → logprob: -13.277026176452637
    9. '  
' → logprob: -14.027026176452637
    10. '   
' → logprob: -14.277026176452637

Token 163: ' prefix' (ID: 18633)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07076188176870346
    2. ' for' → logprob: -3.0707619190216064
    3. '   ' → logprob: -3.8207619190216064
    4. '
' → logprob: -11.320761680603027
    5. '    
' → logprob: -12.945761680603027
    6. '```' → logprob: -13.070761680603027
    7. ' ' → logprob: -14.695761680603027
    8. '	for' → logprob: -14.820761680603027
    9. '``' → logprob: -15.070761680603027
    10. 'results' → logprob: -15.195761680603027

Token 164: '_counts' (ID: 61971)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.07390756905078888
    2. '_s' → logprob: -3.0739076137542725
    3. '_count' → logprob: -4.573907375335693
    4. '_counts' → logprob: -4.698907375335693
    5. '_' → logprob: -5.948907375335693
    6. ' =' → logprob: -5.948907375335693
    7. '_pr' → logprob: -9.198907852172852
    8. 'sum' → logprob: -9.448907852172852
    9. '=' → logprob: -9.698907852172852
    10. '_prime' → logprob: -10.198907852172852

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00593033991754055
    2. '=' → logprob: -5.130930423736572
    3. '[' → logprob: -14.255929946899414
    4. ' ' → logprob: -14.755929946899414
    5. ' =[' → logprob: -15.630929946899414
    6. '<|end|>' → logprob: -15.880929946899414
    7. '  ' → logprob: -16.005929946899414
    8. ')' → logprob: -16.880929946899414
    9. '_' → logprob: -17.005929946899414
    10. ',' → logprob: -17.255929946899414

Token 166: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07889319956302643
    2. ' [' → logprob: -2.5788931846618652
    3. '[len' → logprob: -13.203893661499023
    4. '[p' → logprob: -15.078893661499023
    5. '[int' → logprob: -15.328893661499023
    6. '[n' → logprob: -15.703893661499023
    7. ' ' → logprob: -16.078893661499023
    8. '   ' → logprob: -16.078893661499023
    9. '[count' → logprob: -16.328893661499023
    10. ' ' → logprob: -16.453893661499023

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '
' → logprob: -17.375003814697266
    4. 'False' → logprob: -17.500003814697266
    5. '۰' → logprob: -18.000003814697266
    6. '   ' → logprob: -18.500003814697266
    7. '```' → logprob: -19.125003814697266
    8. '1' → logprob: -19.125003814697266
    9. ']' → logprob: -19.875003814697266
    10. '[' → logprob: -20.187503814697266

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021993827540427446
    2. ' ]' → logprob: -6.377199172973633
    3. ' for' → logprob: -8.627199172973633
    4. ',' → logprob: -9.377199172973633
    5. ']*(' → logprob: -9.377199172973633
    6. ')' → logprob: -9.877199172973633
    7. ']*' → logprob: -10.502199172973633
    8. ']+' → logprob: -10.627199172973633
    9. 'for' → logprob: -11.877199172973633
    10. ']
' → logprob: -11.877199172973633

Token 169: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.38759559392929077
    2. '(len' → logprob: -1.1375956535339355
    3. ' (' → logprob: -7.2625956535339355
    4. '(' → logprob: -12.262595176696777
    5. '(length' → logprob: -12.387595176696777
    6. '(MAX' → logprob: -12.637595176696777
    7. '(Max' → logprob: -13.137595176696777
    8. '   ' → logprob: -13.512595176696777
    9. '((' → logprob: -13.637595176696777
    10. '(m' → logprob: -13.637595176696777

Token 171: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00010473522706888616
    2. 'len' → logprob: -9.750104904174805
    3. ' max' → logprob: -10.375104904174805
    4. '(max' → logprob: -11.125104904174805
    5. '   ' → logprob: -15.500104904174805
    6. '[max' → logprob: -16.125104904174805
    7. '	max' → logprob: -17.250104904174805
    8. '
' → logprob: -17.625104904174805
    9. ' ' → logprob: -18.375104904174805
    10. 'maxlength' → logprob: -18.750104904174805

Token 172: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -15.75
    3. 'n' → logprob: -16.625
    4. '_' → logprob: -17.625
    5. '[' → logprob: -19.0
    6. ')' → logprob: -19.375
    7. '_p' → logprob: -19.375
    8. '(' → logprob: -19.5
    9. '   ' → logprob: -19.5
    10. '```' → logprob: -19.5

Token 173: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02324967086315155
    2. ' +' → logprob: -3.773249626159668
    3. '+
' → logprob: -12.648249626159668
    4. '   ' → logprob: -14.773249626159668
    5. ' +
' → logprob: -15.523249626159668
    6. ' ' → logprob: -15.648249626159668
    7. '
' → logprob: -16.523250579833984
    8. '1' → logprob: -17.023250579833984
    9. '```' → logprob: -17.023250579833984
    10. '＋' → logprob: -17.648250579833984

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000815466046333313
    2. ' ' → logprob: -7.125815391540527
    3. '2' → logprob: -11.875815391540527
    4. '   ' → logprob: -12.625815391540527
    5. '```' → logprob: -15.125815391540527
    6. '
' → logprob: -15.625815391540527
    7. ')' → logprob: -16.625816345214844
    8. '  ' → logprob: -16.750816345214844
    9. '[' → logprob: -17.625816345214844
    10. '(' → logprob: -18.000816345214844

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.37500286102295
    3. '2' → logprob: -13.50000286102295
    4. '
' → logprob: -15.87500286102295
    5. '   ' → logprob: -16.625003814697266
    6. '```' → logprob: -18.125003814697266
    7. '

' → logprob: -18.500003814697266
    8. '１' → logprob: -18.875003814697266
    9. '  ' → logprob: -19.187503814697266
    10. '۱' → logprob: -19.437503814697266

Token 176: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5764452219009399
    2. ')' → logprob: -0.8264452219009399
    3. '
' → logprob: -8.201445579528809
    4. ')
' → logprob: -8.826445579528809
    5. ')

' → logprob: -10.076445579528809
    6. '   ' → logprob: -10.326445579528809
    7. ' )
' → logprob: -11.951445579528809
    8. ' )' → logprob: -13.826445579528809
    9. '
' → logprob: -14.576445579528809
    10. '```' → logprob: -15.076445579528809

Token 177: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5022163987159729
    2. '   ' → logprob: -1.0022163391113281
    3. 'for' → logprob: -3.877216339111328
    4. '
' → logprob: -5.002216339111328
    5. '    
' → logprob: -9.002216339111328
    6. '	for' → logprob: -9.002216339111328
    7. '  
' → logprob: -10.502216339111328
    8. '<|end|>' → logprob: -11.502216339111328
    9. ' 
' → logprob: -11.752216339111328
    10. ' ' → logprob: -11.752216339111328

Token 178: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008638916537165642
    2. ' for' → logprob: -5.008638858795166
    3. '   ' → logprob: -6.258638858795166
    4. 'count' (adapté à ' count') → logprob: -12.508639335632324
    5. '	for' → logprob: -13.133639335632324
    6. '
' → logprob: -13.758639335632324
    7. 'prefix' → logprob: -15.008639335632324
    8. 'current' → logprob: -15.383639335632324
    9. '    
' → logprob: -15.508639335632324
    10. ' ' → logprob: -16.508638381958008

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762546062469482
    2. ' =' → logprob: -0.8262546062469482
    3. '   ' → logprob: -9.326254844665527
    4. '[' → logprob: -9.451254844665527
    5. '_' → logprob: -9.576254844665527
    6. '_=' → logprob: -10.326254844665527
    7. 's' → logprob: -11.076254844665527
    8. ']' → logprob: -12.076254844665527
    9. ' ' → logprob: -12.201254844665527
    10. '  ' → logprob: -12.576254844665527

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003805064770858735
    2. ' ' → logprob: -7.875380516052246
    3. '<|end|>' → logprob: -15.750380516052246
    4. '   ' → logprob: -15.875380516052246
    5. '۰' → logprob: -16.87537956237793
    6. '
' → logprob: -17.87537956237793
    7. '  ' → logprob: -18.00037956237793
    8. 's' → logprob: -18.12537956237793
    9. '[' → logprob: -18.12537956237793
    10. '```' → logprob: -18.37537956237793

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.625035285949707
    4. '1' → logprob: -16.500036239624023
    5. '[' → logprob: -16.812536239624023
    6. '۰' → logprob: -17.687536239624023
    7. '```' → logprob: -18.000036239624023
    8. 'pr' → logprob: -18.062536239624023
    9. '  ' → logprob: -18.125036239624023
    10. '000' → logprob: -18.437536239624023

Token 182: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0011359314667060971
    2. ' for' → logprob: -8.12613582611084
    3. '\n' → logprob: -8.50113582611084
    4. '  
' → logprob: -8.50113582611084
    5. '   ' → logprob: -9.00113582611084
    6. ' 
' → logprob: -9.12613582611084
    7. '
' → logprob: -9.75113582611084
    8. '<|end|>' → logprob: -9.87613582611084
    9. '    
' → logprob: -10.12613582611084
    10. 'for' → logprob: -10.25113582611084

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41582584381103516
    2. ' for' → logprob: -1.4158258438110352
    3. '
' → logprob: -2.915825843811035
    4. 'for' → logprob: -3.165825843811035
    5. '<|end|>' → logprob: -7.165825843811035
    6. '	for' → logprob: -8.915825843811035
    7. '    
' → logprob: -9.290825843811035
    8. ' 
' → logprob: -9.790825843811035
    9. '  
' → logprob: -10.415825843811035
    10. '\n' → logprob: -11.165825843811035

Token 184: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004090274218469858
    2. ' for' → logprob: -5.504090309143066
    3. '   ' → logprob: -11.379090309143066
    4. '
' → logprob: -15.129090309143066
    5. '	for' → logprob: -15.879090309143066
    6. ' ' → logprob: -19.00408935546875
    7. ' 
' → logprob: -19.62908935546875
    8. '    
' → logprob: -19.75408935546875
    9. '```' → logprob: -20.12908935546875
    10. 'For' → logprob: -20.75408935546875

Token 185: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931482553482056
    2. ' i' → logprob: -0.6931482553482056
    3. '	i' → logprob: -14.568148612976074
    4. 'x' → logprob: -14.943148612976074
    5. ' ' → logprob: -15.943148612976074
    6. '   ' → logprob: -16.693147659301758
    7. 'num' → logprob: -17.443147659301758
    8. ' x' → logprob: -17.568147659301758
    9. 'n' → logprob: -18.318147659301758
    10. '(i' → logprob: -18.693147659301758

Token 186: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0037244230043143034
    2. 'in' → logprob: -5.628724575042725
    3. ' ' → logprob: -9.003724098205566
    4. ',' → logprob: -14.503724098205566
    5. 'range' → logprob: -15.003724098205566
    6. '	in' → logprob: -15.378724098205566
    7. '
' → logprob: -16.003725051879883
    8. ' range' → logprob: -16.128725051879883
    9. ' i' → logprob: -16.253725051879883
    10. '   ' → logprob: -16.753725051879883

Token 187: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47408145666122437
    2. ' range' → logprob: -0.9740814566612244
    3. '(range' → logprob: -13.224081039428711
    4. ' ' → logprob: -13.849081039428711
    5. '   ' → logprob: -14.099081039428711
    6. '	range' → logprob: -14.224081039428711
    7. '  ' → logprob: -15.974081039428711
    8. ' xrange' → logprob: -16.47408103942871
    9. '
' → logprob: -17.09908103942871
    10. '    ' → logprob: -17.84908103942871

Token 188: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005669722449965775
    2. '(max' → logprob: -7.5005669593811035
    3. '(len' → logprob: -11.625567436218262
    4. ' (' → logprob: -12.625567436218262
    5. '1' → logprob: -13.750567436218262
    6. '(
' → logprob: -14.375567436218262
    7. ' ' → logprob: -16.375566482543945
    8. 'max' → logprob: -17.250566482543945
    9. ' max' → logprob: -18.375566482543945
    10. '(

' → logprob: -18.750566482543945

Token 189: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -9.968312951968983e-06
    2. '   ' → logprob: -12.625009536743164
    3. '+' → logprob: -12.750009536743164
    4. '_' → logprob: -13.000009536743164
    5. 'n' → logprob: -14.500009536743164
    6. ' ' → logprob: -15.500009536743164
    7. '_i' → logprob: -15.750009536743164
    8. ')' → logprob: -15.750009536743164
    9. '(' → logprob: -16.000009536743164
    10. ' +' → logprob: -17.250009536743164

Token 190: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34895357489585876
    2. ' +' → logprob: -1.2239536046981812
    3. '   ' → logprob: -8.473953247070312
    4. '):' → logprob: -8.973953247070312
    5. '1' → logprob: -9.223953247070312
    6. '):
' → logprob: -10.348953247070312
    7. ' ' → logprob: -10.973953247070312
    8. '
' → logprob: -11.598953247070312
    9. ')' → logprob: -12.223953247070312
    10. '+
' → logprob: -12.598953247070312

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0160356592386961
    2. ' ' → logprob: -4.141035556793213
    3. '   ' → logprob: -14.641036033630371
    4. '
' → logprob: -14.641036033630371
    5. '  ' → logprob: -16.016035079956055
    6. '```' → logprob: -16.016035079956055
    7. '

' → logprob: -16.141035079956055
    8. ')' → logprob: -16.391035079956055
    9. '(' → logprob: -17.391035079956055
    10. ' ' → logprob: -17.641035079956055

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.87507438659668
    4. '
' → logprob: -17.75007438659668
    5. '```' → logprob: -18.62507438659668
    6. '

' → logprob: -19.37507438659668
    7. '  ' → logprob: -19.50007438659668
    8. ')' → logprob: -20.00007438659668
    9. '１' → logprob: -20.81257438659668
    10. '0' → logprob: -21.18757438659668

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020065167918801308
    2. '):
' → logprob: -4.0200653076171875
    3. ':' → logprob: -6.2700653076171875
    4. ' ):' → logprob: -11.770065307617188
    5. '):
' → logprob: -12.895065307617188
    6. '   ' → logprob: -13.145065307617188
    7. ')' → logprob: -13.520065307617188
    8. ':
' → logprob: -13.645065307617188
    9. '():' → logprob: -13.895065307617188
    10. '):

' → logprob: -14.020065307617188

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008160737343132496
    2. '   ' → logprob: -5.383160591125488
    3. '
' → logprob: -6.508160591125488
    4. ' if' → logprob: -7.758160591125488
    5. '<|end|>' → logprob: -7.883160591125488
    6. '    
' → logprob: -8.508160591125488
    7. ':
' → logprob: -8.508160591125488
    8. ' 
' → logprob: -8.883160591125488
    9. ' ' → logprob: -9.008160591125488
    10. ':' → logprob: -9.008160591125488

Token 195: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0840177834033966
    2. '       ' → logprob: -3.084017753601074
    3. 'if' (adapté à ' if') → logprob: -4.084017753601074
    4. '   ' → logprob: -4.334017753601074
    5. ' count' → logprob: -5.584017753601074
    6. '    ' → logprob: -8.209017753601074
    7. 'count' → logprob: -8.209017753601074
    8. '
' → logprob: -8.334017753601074
    9. ' ' → logprob: -8.709017753601074
    10. ' 
' → logprob: -10.209017753601074

Token 196: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.04301140829920769
    2. 'pr' → logprob: -3.168011426925659
    3. '	pr' → logprob: -12.418011665344238
    4. ' pr' → logprob: -12.918011665344238
    5. '   ' → logprob: -13.418011665344238
    6. '(pr' → logprob: -13.918011665344238
    7. ' prime' → logprob: -14.168011665344238
    8. 'prime' → logprob: -14.418011665344238
    9. ' ' → logprob: -14.543011665344238
    10. 'p' → logprob: -15.168011665344238

Token 197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.000006675720215
    3. ' [' → logprob: -16.1250057220459
    4. '[
' → logprob: -16.3750057220459
    5. 'i' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.3750057220459
    7. '[I' → logprob: -17.8750057220459
    8. '[index' → logprob: -19.1250057220459
    9. '```' → logprob: -19.1250057220459
    10. '
' → logprob: -19.1250057220459

Token 198: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.23359090089797974
    2. ':' → logprob: -2.233590841293335
    3. ']:
' → logprob: -2.358590841293335
    4. ':
' → logprob: -5.233591079711914
    5. '):' → logprob: -7.483591079711914
    6. '):
' → logprob: -7.858591079711914
    7. ']' → logprob: -8.358591079711914
    8. '>:' → logprob: -10.233591079711914
    9. '}:' → logprob: -11.608591079711914
    10. ']:
' → logprob: -11.608591079711914

Token 199: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3457852005958557
    2. ' count' → logprob: -1.470785140991211
    3. 'count' → logprob: -3.095785140991211
    4. '
' → logprob: -4.595785140991211
    5. '           ' → logprob: -5.220785140991211
    6. '	count' → logprob: -7.220785140991211
    7. '   ' → logprob: -8.220785140991211
    8. '[count' → logprob: -8.845785140991211
    9. '        
' → logprob: -9.220785140991211
    10. '(count' → logprob: -9.470785140991211

Token 200: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.3877749443054199
    2. ' count' → logprob: -1.13777494430542
    3. ' 
' → logprob: -7.38777494430542
    4. '
' → logprob: -8.762775421142578
    5. '	count' → logprob: -10.012775421142578
    6. '   ' → logprob: -10.512775421142578
    7. '       ' → logprob: -11.012775421142578
    8. ' ' → logprob: -11.012775421142578
    9. '[count' → logprob: -12.262775421142578
    10. '    
' → logprob: -12.762775421142578

Token 201: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3870384693145752
    2. '+=' → logprob: -1.1370384693145752
    3. '+' → logprob: -8.762038230895996
    4. ']+=' → logprob: -12.637038230895996
    5. '=' → logprob: -13.012038230895996
    6. '   ' → logprob: -13.387038230895996
    7. '+="' → logprob: -13.887038230895996
    8. ' =' → logprob: -14.137038230895996
    9. '<|end|>' → logprob: -14.512038230895996
    10. '+='' → logprob: -14.512038230895996

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.25002670288086
    4. '
' → logprob: -19.50002670288086
    5. '```' → logprob: -20.12502670288086
    6. '<|end|>' → logprob: -21.37502670288086
    7. '  ' → logprob: -21.62502670288086
    8. '

' → logprob: -22.87502670288086
    9. ' ' → logprob: -23.12502670288086
    10. '2' → logprob: -23.62502670288086

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '
' → logprob: -19.625001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '```' → logprob: -21.000001907348633
    6. '  ' → logprob: -22.375001907348633
    7. '

' → logprob: -22.875001907348633
    8. '<|end|>' → logprob: -23.125001907348633
    9. 'i' → logprob: -23.375001907348633
    10. '2' → logprob: -23.500001907348633

Token 204: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2664560079574585
    2. '
' → logprob: -1.5164560079574585
    3. '   ' → logprob: -4.266456127166748
    4. '    
' → logprob: -9.39145565032959
    5. 'prefix' → logprob: -9.39145565032959
    6. ' prefix' → logprob: -9.64145565032959
    7. '
' → logprob: -9.89145565032959
    8. '        
' → logprob: -10.64145565032959
    9. '```' → logprob: -10.64145565032959
    10. ',' → logprob: -11.26645565032959

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25562334060668945
    2. '   ' → logprob: -1.5056233406066895
    3. ' prefix' → logprob: -6.0056233406066895
    4. 'prefix' → logprob: -6.7556233406066895
    5. '```' → logprob: -10.755622863769531
    6. '
' → logprob: -11.005622863769531
    7. '           ' → logprob: -11.630622863769531
    8. ' ' → logprob: -13.255622863769531
    9. '    
' → logprob: -13.505622863769531
    10. '(prefix' → logprob: -13.880622863769531

Token 206: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.8118569850921631
    2. '   ' → logprob: -1.061856985092163
    3. 'prefix' (adapté à ' prefix') → logprob: -1.561856985092163
    4. '
' → logprob: -8.311857223510742
    5. '       ' → logprob: -9.311857223510742
    6. '(prefix' → logprob: -10.936857223510742
    7. '  ' → logprob: -10.936857223510742
    8. ' ' → logprob: -11.561857223510742
    9. '    
' → logprob: -11.936857223510742
    10. '_prefix' → logprob: -12.061857223510742

Token 207: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: 0.0
    2. 'counts' → logprob: -18.375
    3. '_c' → logprob: -18.625
    4. '_' → logprob: -18.75
    5. '_count' → logprob: -18.75
    6. '_codes' → logprob: -19.75
    7. '_lengths' → logprob: -20.125
    8. ' counts' → logprob: -20.375
    9. 's' → logprob: -20.75
    10. '_numbers' → logprob: -21.125

Token 208: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006716436706483364
    2. '[' → logprob: -5.006716251373291
    3. '[I' → logprob: -14.63171672821045
    4. ' [' → logprob: -15.50671672821045
    5. '[
' → logprob: -16.631715774536133
    6. ' ' → logprob: -16.631715774536133
    7. '\[' → logprob: -16.631715774536133
    8. '[current' → logprob: -17.506715774536133
    9. '[s' → logprob: -18.006715774536133
    10. '[...]' → logprob: -18.256715774536133

Token 209: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007366081699728966
    2. ']=' → logprob: -7.875736713409424
    3. ' ]' → logprob: -8.125736236572266
    4. '=' → logprob: -9.875736236572266
    5. ' =' → logprob: -11.625736236572266
    6. '[' → logprob: -16.375736236572266
    7. ']+=' → logprob: -16.500736236572266
    8. ']
' → logprob: -17.250736236572266
    9. ' ' → logprob: -17.500736236572266
    10. ')' → logprob: -17.625736236572266

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193002820014954
    2. ' =' → logprob: -1.5019299983978271
    3. ' ' → logprob: -15.501930236816406
    4. '=i' → logprob: -15.501930236816406
    5. ' =
' → logprob: -15.876930236816406
    6. '=

' → logprob: -16.376930236816406
    7. '=
' → logprob: -16.626930236816406
    8. '=count' → logprob: -16.751930236816406
    9. '[' → logprob: -17.126930236816406
    10. '=int' → logprob: -17.251930236816406

Token 211: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001170225441455841
    2. ' count' → logprob: -6.7511701583862305
    3. '	count' → logprob: -19.501171112060547
    4. 'c' → logprob: -20.376171112060547
    5. ' ' → logprob: -20.376171112060547
    6. 'counts' → logprob: -20.501171112060547
    7. '[count' → logprob: -20.751171112060547
    8. '(count' → logprob: -21.001171112060547
    9. '
' → logprob: -21.126171112060547
    10. 'co' → logprob: -21.251171112060547

Token 212: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.040176279842853546
    2. '   ' → logprob: -3.2901763916015625
    3. '<|end|>' → logprob: -7.0401763916015625
    4. '    
' → logprob: -7.6651763916015625
    5. 'for' → logprob: -8.040176391601562
    6. '

' → logprob: -8.665176391601562
    7. '
' → logprob: -9.165176391601562
    8. ' for' → logprob: -9.415176391601562
    9. 'def' → logprob: -9.665176391601562
    10. '  
' → logprob: -11.290176391601562

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09269246459007263
    2. ' for' → logprob: -2.7176923751831055
    3. 'for' → logprob: -3.9676923751831055
    4. '
' → logprob: -6.4676923751831055
    5. '    
' → logprob: -6.4676923751831055
    6. 'results' → logprob: -9.092692375183105
    7. 'output' → logprob: -9.092692375183105
    8. ' results' → logprob: -9.217692375183105
    9. ' output' → logprob: -9.842692375183105
    10. 'outputs' → logprob: -11.217692375183105

Token 214: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.240481914370321e-05
    2. ' for' → logprob: -10.000052452087402
    3. '   ' → logprob: -12.125052452087402
    4. 'result' → logprob: -14.500052452087402
    5. 'output' → logprob: -14.875052452087402
    6. '    
' → logprob: -15.250052452087402
    7. '
' → logprob: -15.375052452087402
    8. 'results' → logprob: -16.000051498413086
    9. 'return' → logprob: -17.500051498413086
    10. '	for' → logprob: -18.250051498413086

Token 215: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.030424855649471283
    2. 'n' → logprob: -3.5304248332977295
    3. ' num' → logprob: -7.655425071716309
    4. ' number' → logprob: -9.030425071716309
    5. ' ' → logprob: -9.905425071716309
    6. 'num' → logprob: -10.655425071716309
    7. 'number' → logprob: -12.655425071716309
    8. ' x' → logprob: -13.280425071716309
    9. '	n' → logprob: -13.530425071716309
    10. ' ' → logprob: -15.280425071716309

Token 216: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003217164659872651
    2. 'in' → logprob: -5.7532172203063965
    3. ' ' → logprob: -10.253216743469238
    4. ' i' → logprob: -13.628216743469238
    5. '   ' → logprob: -14.378216743469238
    6. ',' → logprob: -14.628216743469238
    7. 'n' → logprob: -14.628216743469238
    8. '  ' → logprob: -14.878216743469238
    9. ' ,' → logprob: -15.003216743469238
    10. '_in' → logprob: -15.378216743469238

Token 217: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.07889771461486816
    2. ' numbers' → logprob: -2.578897714614868
    3. '(numbers' → logprob: -12.578897476196289
    4. '   ' → logprob: -13.328897476196289
    5. ' ' → logprob: -13.953897476196289
    6. 'number' → logprob: -14.078897476196289
    7. 'range' → logprob: -14.203897476196289
    8. 'umbers' → logprob: -15.578897476196289
    9. ' range' → logprob: -16.07889747619629
    10. 'n' → logprob: -16.32889747619629

Token 218: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004388942907098681
    2. ':
' → logprob: -7.750438690185547
    3. ' :' → logprob: -12.125438690185547
    4. '):' → logprob: -13.625438690185547
    5. ',' → logprob: -13.750438690185547
    6. ':**' → logprob: -16.125438690185547
    7. '   ' → logprob: -16.375438690185547
    8. ':

' → logprob: -16.875438690185547
    9. ':
' → logprob: -17.125438690185547
    10. ' :
' → logprob: -17.125438690185547

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004068547859787941
    2. '   ' → logprob: -5.754068374633789
    3. ' print' → logprob: -8.129068374633789
    4. ',' → logprob: -9.004068374633789
    5. '<|end|>' → logprob: -9.004068374633789
    6. '    
' → logprob: -9.254068374633789
    7. '        
' → logprob: -9.754068374633789
    8. 'print' → logprob: -9.879068374633789
    9. ' ' → logprob: -10.004068374633789
    10. '  
' → logprob: -10.504068374633789

Token 220: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5930651426315308
    2. 'print' (adapté à ' print') → logprob: -0.9680651426315308
    3. '   ' → logprob: -2.9680652618408203
    4. ' if' → logprob: -4.46806526184082
    5. 'if' → logprob: -5.96806526184082
    6. '       ' → logprob: -7.71806526184082
    7. '    ' → logprob: -8.09306526184082
    8. 'count' → logprob: -8.46806526184082
    9. 'result' → logprob: -8.84306526184082
    10. ' result' → logprob: -8.84306526184082

Token 221: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.12462428212165833
    2. '(' → logprob: -2.249624252319336
    3. '("' → logprob: -5.249624252319336
    4. '('' → logprob: -5.999624252319336
    5. 'prefix' → logprob: -5.999624252319336
    6. '(f' → logprob: -6.999624252319336
    7. ' (' → logprob: -7.999624252319336
    8. ' prefix' → logprob: -9.249624252319336
    9. '(pr' → logprob: -9.624624252319336
    10. 'f' → logprob: -10.249624252319336

Token 222: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -4.320199877838604e-07
    2. '_c' → logprob: -15.75
    3. '_' → logprob: -16.125
    4. '_s' → logprob: -17.375
    5. 's' → logprob: -17.625
    6. '_count' → logprob: -18.125
    7. ' _' → logprob: -18.75
    8. '_co' → logprob: -18.875
    9. '__' → logprob: -18.875
    10. ')_' → logprob: -19.0

Token 223: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00013655527436640114
    2. '[' → logprob: -9.125136375427246
    3. '[
' → logprob: -11.250136375427246
    4. 'n' → logprob: -11.375136375427246
    5. ' [' → logprob: -13.500136375427246
    6. '
' → logprob: -14.125136375427246
    7. ')n' → logprob: -15.500136375427246
    8. '[len' → logprob: -15.750136375427246
    9. ')' → logprob: -16.500137329101562
    10. '[max' → logprob: -16.625137329101562

Token 224: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045124832540750504
    2. '])' → logprob: -3.1701247692108154
    3. ' )' → logprob: -6.6701250076293945
    4. '))' → logprob: -7.9201250076293945
    5. ' ])' → logprob: -8.920125007629395
    6. ']' → logprob: -9.420125007629395
    7. '})' → logprob: -9.670125007629395
    8. '-' → logprob: -9.920125007629395
    9. ')])' → logprob: -10.045125007629395
    10. ' -' → logprob: -10.170125007629395

Token 225: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0015230757417157292
    2. '__' → logprob: -6.501523017883301
    3. '_' → logprob: -11.3765230178833
    4. ' ' → logprob: -12.6265230178833
    5. ' _' → logprob: -13.0015230178833
    6. '_name' → logprob: -13.5015230178833
    7. ' ' → logprob: -13.7515230178833
    8. ' ___' → logprob: -14.2515230178833
    9. ' "__' → logprob: -15.7515230178833
    10. ' ‌' → logprob: -16.251523971557617

Token 227: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14522795379161835
    2. ' ==' → logprob: -2.1452279090881348
    3. '==' → logprob: -4.770227909088135
    4. ' __' → logprob: -4.895227909088135
    5. '_' → logprob: -6.895227909088135
    6. '.__' → logprob: -7.895227909088135
    7. '[' → logprob: -8.645228385925293
    8. '=="' → logprob: -9.270228385925293
    9. '.py' → logprob: -9.895228385925293
    10. '.' → logprob: -9.895228385925293

Token 228: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.3676733690081164e-05
    2. '__.__' → logprob: -11.00002384185791
    3. '==' → logprob: -12.25002384185791
    4. ' ==' → logprob: -13.87502384185791
    5. '__.' → logprob: -14.37502384185791
    6. '__
' → logprob: -15.37502384185791
    7. '_' → logprob: -15.75002384185791
    8. '___' → logprob: -16.375022888183594
    9. ' __' → logprob: -16.875022888183594
    10. '.__' → logprob: -17.125022888183594

Token 229: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.027539530768990517
    2. '==' → logprob: -3.6525394916534424
    3. '__' → logprob: -7.6525397300720215
    4. '=="' → logprob: -7.9025397300720215
    5. '=='' → logprob: -8.652539253234863
    6. '[' → logprob: -9.402539253234863
    7. ' =="' → logprob: -9.902539253234863
    8. '['' → logprob: -11.277539253234863
    9. ' =='' → logprob: -11.527539253234863
    10. ' ==
' → logprob: -11.902539253234863

Token 230: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20141831040382385
    2. ''' → logprob: -1.7014182806015015
    3. ' "__' → logprob: -12.951417922973633
    4. ' "' → logprob: -13.576417922973633
    5. '__' → logprob: -14.576417922973633
    6. ' '__' → logprob: -14.951417922973633
    7. ''"' → logprob: -15.576417922973633
    8. ' '' → logprob: -15.701417922973633
    9. '"'' → logprob: -17.076417922973633
    10. ' ' → logprob: -17.326417922973633

Token 231: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2554456889629364
    2. '__' → logprob: -1.5054457187652588
    3. '_main' → logprob: -6.00544548034668
    4. '```' → logprob: -8.50544548034668
    5. 'built' → logprob: -8.63044548034668
    6. '_MAIN' → logprob: -8.88044548034668
    7. 'name' → logprob: -9.50544548034668
    8. '7' → logprob: -10.00544548034668
    9. '__":
' → logprob: -10.13044548034668
    10. '___' → logprob: -10.25544548034668

Token 232: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.4743714928627014
    2. '__' → logprob: -0.9743714928627014
    3. '_' → logprob: -9.099371910095215
    4. '__.' → logprob: -9.224371910095215
    5. '__:' → logprob: -9.849371910095215
    6. '__["' → logprob: -11.599371910095215
    7. '__.__' → logprob: -11.724371910095215
    8. '__':
' → logprob: -11.974371910095215
    9. '_"' → logprob: -12.724371910095215
    10. '"' → logprob: -13.599371910095215

Token 233: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1274518072605133
    2. 'main' → logprob: -2.1274518966674805
    3. '	main' → logprob: -7.8774518966674805
    4. '   ' → logprob: -9.00245189666748
    5. '_main' → logprob: -12.12745189666748
    6. '__' → logprob: -12.25245189666748
    7. ' __' → logprob: -12.50245189666748
    8. ' ' → logprob: -12.87745189666748
    9. '    ' → logprob: -13.62745189666748
    10. '(main' → logprob: -13.87745189666748

Token 234: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.16022787988185883
    2. ' main' → logprob: -1.91022789478302
    3. '	main' → logprob: -12.91022777557373
    4. '   ' → logprob: -13.66022777557373
    5. ' ' → logprob: -17.785228729248047
    6. '  ' → logprob: -18.785228729248047
    7. '_main' → logprob: -18.785228729248047
    8. '.main' → logprob: -19.035228729248047
    9. '(main' → logprob: -19.660228729248047
    10. 'ma' → logprob: -19.660228729248047

Token 235: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00810918677598238
    2. '(' → logprob: -5.758109092712402
    3. '()
' → logprob: -5.758109092712402
    4. '
' → logprob: -6.883109092712402
    5. '```' → logprob: -8.383109092712402
    6. '<|end|>' → logprob: -8.508109092712402
    7. '()\' → logprob: -9.258109092712402
    8. '\n' → logprob: -9.383109092712402
    9. '(
' → logprob: -9.633109092712402
    10. '\' → logprob: -11.508109092712402


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 233
Tokens correctement prédits (1ère position, stricte): 127
Tokens correctement prédits (1ère position, avec adaptation): 136
Tokens correctement prédits (top 10): 220
Précision stricte (1ère position): 54.51%
Précision adaptée (1ère position): 58.37%
Précision (top 10): 94.42%
================================================================================
